void *sub_10000125C(uint64_t a1, int a2)
{
  void *result;
  int v5;
  int v6;
  _BYTE __dst[4096];

  if ((dword_10114AF90 & 4) == 0)
  {
    xmmword_10113CF40 = xmmword_100DF63E0;
    xmmword_10113CF50 = xmmword_100DF63F0;
    xmmword_10113CF60 = xmmword_100DF6400;
    xmmword_10113CF70 = xmmword_100DF6410;
    xmmword_10113CF80 = xmmword_100DF6420;
    xmmword_10113CF90 = xmmword_100DF6430;
    xmmword_10113CFA0 = xmmword_100DF6440;
    xmmword_10113CFB0 = xmmword_100DF6450;
    xmmword_10113CFC0 = xmmword_100DF6460;
    xmmword_10113CFD0 = xmmword_100DF6470;
    xmmword_10113CFE0 = xmmword_100DF6480;
    xmmword_10113CFF0 = xmmword_100DF6490;
    xmmword_10113D000 = xmmword_100DF64A0;
    xmmword_10113D010 = xmmword_100DF64B0;
    xmmword_10113D020 = xmmword_100DF64C0;
    xmmword_10113D030 = xmmword_100DF64D0;
    xmmword_10113CE40 = xmmword_100DF64E0;
    xmmword_10113CE50 = xmmword_100DF64F0;
    xmmword_10113CE60 = xmmword_100DF6500;
    xmmword_10113CE70 = xmmword_100DF6510;
    xmmword_10113CE80 = xmmword_100DF6520;
    xmmword_10113CE90 = xmmword_100DF6530;
    xmmword_10113CEA0 = xmmword_100DF6540;
    xmmword_10113CEB0 = xmmword_100DF6550;
    xmmword_10113CEC0 = xmmword_100DF6560;
    xmmword_10113CED0 = xmmword_100DF6570;
    xmmword_10113CEE0 = xmmword_100DF6580;
    xmmword_10113CEF0 = xmmword_100DF6590;
    xmmword_10113CF00 = xmmword_100DF65A0;
    xmmword_10113CF10 = xmmword_100DF65B0;
    xmmword_10113CF20 = xmmword_100DF65C0;
    xmmword_10113CF30 = xmmword_100DF65D0;
    xmmword_10113CD40 = xmmword_100DF65E0;
    xmmword_10113CD50 = xmmword_100DF65F0;
    xmmword_10113CD60 = xmmword_100DF6600;
    xmmword_10113CD70 = xmmword_100DF6610;
    xmmword_10113CD80 = xmmword_100DF6620;
    xmmword_10113CD90 = xmmword_100DF6630;
    xmmword_10113CDA0 = xmmword_100DF6640;
    xmmword_10113CDB0 = xmmword_100DF6650;
    xmmword_10113CDC0 = xmmword_100DF6660;
    xmmword_10113CDD0 = xmmword_100DF6670;
    xmmword_10113CDE0 = xmmword_100DF6680;
    xmmword_10113CDF0 = xmmword_100DF6690;
    xmmword_10113CE00 = xmmword_100DF66A0;
    xmmword_10113CE10 = xmmword_100DF66B0;
    xmmword_10113CE20 = xmmword_100DF66C0;
    xmmword_10113CE30 = xmmword_100DF66D0;
    xmmword_10113CC40 = xmmword_100DF66E0;
    xmmword_10113CC50 = xmmword_100DF66F0;
    xmmword_10113CC60 = xmmword_100DF6700;
    xmmword_10113CC70 = xmmword_100DF6710;
    xmmword_10113CC80 = xmmword_100DF6720;
    xmmword_10113CC90 = xmmword_100DF6730;
    xmmword_10113CCA0 = xmmword_100DF6740;
    xmmword_10113CCB0 = xmmword_100DF6750;
    xmmword_10113CCC0 = xmmword_100DF6760;
    xmmword_10113CCD0 = xmmword_100DF6770;
    xmmword_10113CCE0 = xmmword_100DF6780;
    xmmword_10113CCF0 = xmmword_100DF6790;
    xmmword_10113CD00 = xmmword_100DF67A0;
    xmmword_10113CD10 = xmmword_100DF67B0;
    xmmword_10113CD20 = xmmword_100DF67C0;
    xmmword_10113CD30 = xmmword_100DF67D0;
    xmmword_10113CB40 = xmmword_100DF67E0;
    xmmword_10113CB50 = xmmword_100DF67F0;
    xmmword_10113CB60 = xmmword_100DF6800;
    xmmword_10113CB70 = xmmword_100DF6810;
    xmmword_10113CB80 = xmmword_100DF6820;
    xmmword_10113CB90 = xmmword_100DF6830;
    xmmword_10113CBA0 = xmmword_100DF6840;
    xmmword_10113CBB0 = xmmword_100DF6850;
    xmmword_10113CBC0 = xmmword_100DF6860;
    xmmword_10113CBD0 = xmmword_100DF6870;
    xmmword_10113CBE0 = xmmword_100DF6880;
    xmmword_10113CBF0 = xmmword_100DF6890;
    xmmword_10113CC00 = xmmword_100DF68A0;
    xmmword_10113CC10 = xmmword_100DF68B0;
    xmmword_10113CC20 = xmmword_100DF68C0;
    xmmword_10113CC30 = xmmword_100DF68D0;
    xmmword_10113CA40 = xmmword_100DF68E0;
    xmmword_10113CA50 = xmmword_100DF68F0;
    xmmword_10113CA60 = xmmword_100DF6900;
    xmmword_10113CA70 = xmmword_100DF6910;
    xmmword_10113CA80 = xmmword_100DF6920;
    xmmword_10113CA90 = xmmword_100DF6930;
    xmmword_10113CAA0 = xmmword_100DF6940;
    xmmword_10113CAB0 = xmmword_100DF6950;
    xmmword_10113CAC0 = xmmword_100DF6960;
    xmmword_10113CAD0 = xmmword_100DF6970;
    xmmword_10113CAE0 = xmmword_100DF6980;
    xmmword_10113CAF0 = xmmword_100DF6990;
    xmmword_10113CB00 = xmmword_100DF69A0;
    xmmword_10113CB10 = xmmword_100DF69B0;
    xmmword_10113CB20 = xmmword_100DF69C0;
    xmmword_10113CB30 = xmmword_100DF69D0;
    xmmword_10113C940 = xmmword_100DF69E0;
    xmmword_10113C950 = xmmword_100DF69F0;
    xmmword_10113C960 = xmmword_100DF6A00;
    xmmword_10113C970 = xmmword_100DF6A10;
    xmmword_10113C980 = xmmword_100DF6A20;
    xmmword_10113C990 = xmmword_100DF6A30;
    xmmword_10113C9A0 = xmmword_100DF6A40;
    xmmword_10113C9B0 = xmmword_100DF6A50;
    xmmword_10113C9C0 = xmmword_100DF6A60;
    xmmword_10113C9D0 = xmmword_100DF6A70;
    xmmword_10113C9E0 = xmmword_100DF6A80;
    xmmword_10113C9F0 = xmmword_100DF6A90;
    xmmword_10113CA00 = xmmword_100DF6AA0;
    xmmword_10113CA10 = xmmword_100DF6AB0;
    xmmword_10113CA20 = xmmword_100DF6AC0;
    xmmword_10113CA30 = xmmword_100DF6AD0;
    xmmword_10113C840 = xmmword_100DF6AE0;
    xmmword_10113C850 = xmmword_100DF6AF0;
    xmmword_10113C860 = xmmword_100DF6B00;
    xmmword_10113C870 = xmmword_100DF6B10;
    xmmword_10113C880 = xmmword_100DF6B20;
    xmmword_10113C890 = xmmword_100DF6B30;
    xmmword_10113C8A0 = xmmword_100DF6B40;
    xmmword_10113C8B0 = xmmword_100DF6B50;
    xmmword_10113C8C0 = xmmword_100DF6B60;
    xmmword_10113C8D0 = xmmword_100DF6B70;
    xmmword_10113C8E0 = xmmword_100DF6B80;
    xmmword_10113C8F0 = xmmword_100DF6B90;
    xmmword_10113C900 = xmmword_100DF6BA0;
    xmmword_10113C910 = xmmword_100DF6BB0;
    xmmword_10113C920 = xmmword_100DF6BC0;
    xmmword_10113C930 = xmmword_100DF6BD0;
    xmmword_10113C740 = xmmword_100DF6BE0;
    xmmword_10113C750 = xmmword_100DF6BF0;
    xmmword_10113C760 = xmmword_100DF6C00;
    xmmword_10113C770 = xmmword_100DF6C10;
    xmmword_10113C780 = xmmword_100DF6C20;
    xmmword_10113C790 = xmmword_100DF6C30;
    xmmword_10113C7A0 = xmmword_100DF6C40;
    xmmword_10113C7B0 = xmmword_100DF6C50;
    xmmword_10113C7C0 = xmmword_100DF6C60;
    xmmword_10113C7D0 = xmmword_100DF6C70;
    xmmword_10113C7E0 = xmmword_100DF6C80;
    xmmword_10113C7F0 = xmmword_100DF6C90;
    xmmword_10113C800 = xmmword_100DF6CA0;
    xmmword_10113C810 = xmmword_100DF6CB0;
    xmmword_10113C820 = xmmword_100DF6CC0;
    xmmword_10113C830 = xmmword_100DF6CD0;
    xmmword_10113C640 = xmmword_100DF6CE0;
    xmmword_10113C650 = xmmword_100DF6CF0;
    xmmword_10113C660 = xmmword_100DF6D00;
    xmmword_10113C670 = xmmword_100DF6D10;
    xmmword_10113C680 = xmmword_100DF6D20;
    xmmword_10113C690 = xmmword_100DF6D30;
    xmmword_10113C6A0 = xmmword_100DF6D40;
    xmmword_10113C6B0 = xmmword_100DF6D50;
    xmmword_10113C6C0 = xmmword_100DF6D60;
    xmmword_10113C6D0 = xmmword_100DF6D70;
    xmmword_10113C6E0 = xmmword_100DF6D80;
    xmmword_10113C6F0 = xmmword_100DF6D90;
    xmmword_10113C700 = xmmword_100DF6DA0;
    xmmword_10113C710 = xmmword_100DF6DB0;
    xmmword_10113C720 = xmmword_100DF6DC0;
    xmmword_10113C730 = xmmword_100DF6DD0;
    xmmword_10113C540 = xmmword_100DF6DE0;
    xmmword_10113C550 = xmmword_100DF6DF0;
    xmmword_10113C560 = xmmword_100DF6E00;
    xmmword_10113C570 = xmmword_100DF6E10;
    xmmword_10113C580 = xmmword_100DF6E20;
    xmmword_10113C590 = xmmword_100DF6E30;
    xmmword_10113C5A0 = xmmword_100DF6E40;
    xmmword_10113C5B0 = xmmword_100DF6E50;
    xmmword_10113C5C0 = xmmword_100DF6E60;
    xmmword_10113C5D0 = xmmword_100DF6E70;
    xmmword_10113C5E0 = xmmword_100DF6E80;
    xmmword_10113C5F0 = xmmword_100DF6E90;
    xmmword_10113C600 = xmmword_100DF6EA0;
    xmmword_10113C610 = xmmword_100DF6EB0;
    xmmword_10113C620 = xmmword_100DF6EC0;
    xmmword_10113C630 = xmmword_100DF6ED0;
    xmmword_10113C440 = xmmword_100DF6EE0;
    xmmword_10113C450 = xmmword_100DF6EF0;
    xmmword_10113C460 = xmmword_100DF6F00;
    xmmword_10113C470 = xmmword_100DF6F10;
    xmmword_10113C480 = xmmword_100DF6F20;
    xmmword_10113C490 = xmmword_100DF6F30;
    xmmword_10113C4A0 = xmmword_100DF6F40;
    xmmword_10113C4B0 = xmmword_100DF6F50;
    xmmword_10113C4C0 = xmmword_100DF6F60;
    xmmword_10113C4D0 = xmmword_100DF6F70;
    xmmword_10113C4E0 = xmmword_100DF6F80;
    xmmword_10113C4F0 = xmmword_100DF6F90;
    xmmword_10113C500 = xmmword_100DF6FA0;
    xmmword_10113C510 = xmmword_100DF6FB0;
    xmmword_10113C520 = xmmword_100DF6FC0;
    xmmword_10113C530 = xmmword_100DF6FD0;
    xmmword_10113C340 = xmmword_100DF6FE0;
    unk_10113C350 = xmmword_100DF6FF0;
    xmmword_10113C360 = xmmword_100DF7000;
    unk_10113C370 = xmmword_100DF7010;
    xmmword_10113C380 = xmmword_100DF7020;
    unk_10113C390 = xmmword_100DF7030;
    xmmword_10113C3A0 = xmmword_100DF7040;
    unk_10113C3B0 = xmmword_100DF7050;
    xmmword_10113C3C0 = xmmword_100DF7060;
    unk_10113C3D0 = xmmword_100DF7070;
    xmmword_10113C3E0 = xmmword_100DF7080;
    unk_10113C3F0 = xmmword_100DF7090;
    xmmword_10113C400 = xmmword_100DF70A0;
    unk_10113C410 = xmmword_100DF70B0;
    xmmword_10113C420 = xmmword_100DF70C0;
    unk_10113C430 = xmmword_100DF70D0;
    xmmword_10113C240 = xmmword_100DF70E0;
    unk_10113C250 = xmmword_100DF70F0;
    xmmword_10113C260 = xmmword_100DF7100;
    unk_10113C270 = xmmword_100DF7110;
    xmmword_10113C280 = xmmword_100DF7120;
    unk_10113C290 = xmmword_100DF7130;
    xmmword_10113C2A0 = xmmword_100DF7140;
    unk_10113C2B0 = xmmword_100DF7150;
    xmmword_10113C2C0 = xmmword_100DF7160;
    unk_10113C2D0 = xmmword_100DF7170;
    xmmword_10113C2E0 = xmmword_100DF7180;
    unk_10113C2F0 = xmmword_100DF7190;
    xmmword_10113C300 = xmmword_100DF71A0;
    unk_10113C310 = xmmword_100DF71B0;
    xmmword_10113C320 = xmmword_100DF71C0;
    unk_10113C330 = xmmword_100DF71D0;
    xmmword_10113C140 = xmmword_100DF71E0;
    unk_10113C150 = xmmword_100DF71F0;
    xmmword_10113C160 = xmmword_100DF7200;
    unk_10113C170 = xmmword_100DF7210;
    xmmword_10113C180 = xmmword_100DF7220;
    unk_10113C190 = xmmword_100DF7230;
    xmmword_10113C1A0 = xmmword_100DF7240;
    unk_10113C1B0 = xmmword_100DF7250;
    xmmword_10113C1C0 = xmmword_100DF7260;
    unk_10113C1D0 = xmmword_100DF7270;
    xmmword_10113C1E0 = xmmword_100DF7280;
    unk_10113C1F0 = xmmword_100DF7290;
    xmmword_10113C200 = xmmword_100DF72A0;
    unk_10113C210 = xmmword_100DF72B0;
    xmmword_10113C220 = xmmword_100DF72C0;
    unk_10113C230 = xmmword_100DF72D0;
    xmmword_10113C040 = xmmword_100DF72E0;
    unk_10113C050 = xmmword_100DF72F0;
    xmmword_10113C060 = xmmword_100DF7300;
    unk_10113C070 = xmmword_100DF7310;
    xmmword_10113C080 = xmmword_100DF7320;
    unk_10113C090 = xmmword_100DF7330;
    xmmword_10113C0A0 = xmmword_100DF7340;
    unk_10113C0B0 = xmmword_100DF7350;
    xmmword_10113C0C0 = xmmword_100DF7360;
    unk_10113C0D0 = xmmword_100DF7370;
    xmmword_10113C0E0 = xmmword_100DF7380;
    unk_10113C0F0 = xmmword_100DF7390;
    xmmword_10113C100 = xmmword_100DF73A0;
    unk_10113C110 = xmmword_100DF73B0;
    xmmword_10113C120 = xmmword_100DF73C0;
    unk_10113C130 = xmmword_100DF73D0;
    dword_10114AF90 |= 4u;
  }
  result = j__memcpy(__dst, &xmmword_10113C040, sizeof(__dst));
  if (a2)
  {
    v5 = 0;
    do
    {
      if (v5 <= 0)
        v6 = -(-v5 & 0xF);
      else
        v6 = v5 & 0xF;
      *(_BYTE *)(a1 + v5) = -111 - 13 * __dst[256 * (uint64_t)v6 + (59 * *(_BYTE *)(a1 + v5) - 107)];
      ++v5;
    }
    while (a2 != v5);
  }
  return result;
}

uint64_t sub_100001EDC()
{
  return -2;
}

uint64_t sub_100001EE4(_QWORD *a1, _DWORD *a2, _QWORD *a3, unsigned int *a4)
{
  void *v8;
  id v9;
  id v10;
  void *v11;
  unsigned int v12;

  v8 = objc_autoreleasePoolPush();
  v9 = objc_msgSend(+[AKDevice currentDevice](AKDevice, "currentDevice"), "serverFriendlyDescription");
  v10 = objc_msgSend(+[AKDevice currentDevice](AKDevice, "currentDevice"), "uniqueDeviceIdentifier");
  if (!v10)
  {
    *a1 = 0;
    *a2 = 0;
    if (v9)
      goto LABEL_3;
LABEL_5:
    v12 = 0;
    *a3 = 0;
    goto LABEL_6;
  }
  v11 = v10;
  *a1 = objc_msgSend(v10, "UTF8String");
  *a2 = objc_msgSend(v11, "length");
  if (!v9)
    goto LABEL_5;
LABEL_3:
  *a3 = objc_msgSend(v9, "UTF8String");
  v12 = objc_msgSend(v9, "length");
LABEL_6:
  *a4 = v12;
  objc_autoreleasePoolPop(v8);
  return 0;
}

id sub_100001FA8()
{
  void *v0;
  id v1;

  v0 = objc_autoreleasePoolPush();
  v1 = objc_msgSend(+[MCProfileConnection sharedConnection](MCProfileConnection, "sharedConnection"), "isEphemeralMultiUser");
  objc_autoreleasePoolPop(v0);
  return v1;
}

void sub_100001FE8()
{
  void *v0;

  v0 = objc_autoreleasePoolPush();
  notify_post(off_10113D040[0]);
  objc_autoreleasePoolPop(v0);
}

uint64_t sub_100002018()
{
  return notify_post(off_10113D048);
}

CFFileDescriptorRef sub_100002024(CFFileDescriptorNativeDescriptor fd, Boolean closeOnInvalidate)
{
  return CFFileDescriptorCreate(0, fd, closeOnInvalidate, (CFFileDescriptorCallBack)sub_100354398, 0);
}

CFMachPortRef sub_100002040()
{
  Boolean shouldFreeInfo;
  CFMachPortContext context;

  memset(&context, 0, sizeof(context));
  shouldFreeInfo = 0;
  return CFMachPortCreate(0, (CFMachPortCallBack)sub_100353C7C, &context, &shouldFreeInfo);
}

CFMachPortRef sub_100002080(mach_port_t portNum)
{
  Boolean shouldFreeInfo;
  CFMachPortContext context;

  memset(&context, 0, sizeof(context));
  shouldFreeInfo = 0;
  return CFMachPortCreateWithPort(0, portNum, (CFMachPortCallBack)sub_100353C7C, &context, &shouldFreeInfo);
}

BOOL sub_1000020C4(_OWORD *a1, const char *a2, _DWORD *a3)
{
  CFStringRef v5;
  const __CFString *v6;
  __int128 v7;
  __SecTask *v8;
  __SecTask *v9;
  const __CFNumber *v10;
  const __CFNumber *v11;
  _BOOL8 v12;
  CFErrorRef v13;
  CFTypeID TypeID;
  CFTypeID v16;
  int v17;
  audit_token_t v18;
  char *__endptr;
  CFErrorRef error;
  char buffer[32];

  error = 0;
  v5 = CFStringCreateWithCStringNoCopy(kCFAllocatorDefault, a2, 0x600u, kCFAllocatorNull);
  if (v5)
  {
    v6 = v5;
    v7 = a1[1];
    *(_OWORD *)v18.val = *a1;
    *(_OWORD *)&v18.val[4] = v7;
    v8 = SecTaskCreateWithAuditToken(kCFAllocatorDefault, &v18);
    if (!v8)
    {
      v12 = 0;
      goto LABEL_11;
    }
    v9 = v8;
    v10 = (const __CFNumber *)SecTaskCopyValueForEntitlement(v8, v6, &error);
    if (!v10)
    {
      v12 = 0;
      v13 = error;
      if (!error)
        goto LABEL_8;
      goto LABEL_7;
    }
    v11 = v10;
    if (error)
      goto LABEL_5;
    TypeID = CFNumberGetTypeID();
    if (TypeID == CFGetTypeID(v11))
    {
      v12 = CFNumberGetValue(v11, kCFNumberSInt32Type, a3) != 0;
    }
    else
    {
      v16 = CFStringGetTypeID();
      if (v16 != CFGetTypeID(v11)
        || !CFStringGetCString((CFStringRef)v11, buffer, 32, 0x600u)
        || (v17 = strtol(buffer, &__endptr, 10), !__endptr)
        || *__endptr)
      {
LABEL_5:
        v12 = 0;
        goto LABEL_6;
      }
      *a3 = v17;
      v12 = 1;
    }
LABEL_6:
    CFRelease(v11);
    v13 = error;
    if (!error)
    {
LABEL_8:
      CFRelease(v9);
LABEL_11:
      CFRelease(v6);
      return v12;
    }
LABEL_7:
    CFRelease(v13);
    goto LABEL_8;
  }
  return 0;
}

BOOL sub_10000226C(_OWORD *a1, const char *a2, char *a3, unsigned int a4)
{
  CFStringRef v7;
  const __CFString *v8;
  __int128 v9;
  __SecTask *v10;
  __SecTask *v11;
  const __CFString *v12;
  const __CFString *v13;
  CFTypeID TypeID;
  _BOOL8 v15;
  CFErrorRef v16;
  audit_token_t v18;
  CFErrorRef error;

  error = 0;
  v7 = CFStringCreateWithCStringNoCopy(kCFAllocatorDefault, a2, 0x600u, kCFAllocatorNull);
  if (v7)
  {
    v8 = v7;
    v9 = a1[1];
    *(_OWORD *)v18.val = *a1;
    *(_OWORD *)&v18.val[4] = v9;
    v10 = SecTaskCreateWithAuditToken(kCFAllocatorDefault, &v18);
    if (!v10)
    {
      v15 = 0;
LABEL_13:
      CFRelease(v8);
      return v15;
    }
    v11 = v10;
    v12 = (const __CFString *)SecTaskCopyValueForEntitlement(v10, v8, &error);
    if (v12)
    {
      v13 = v12;
      v15 = !error
         && (TypeID = CFStringGetTypeID(), TypeID == CFGetTypeID(v13))
         && CFStringGetCString(v13, a3, a4, 0x600u) != 0;
      CFRelease(v13);
      v16 = error;
      if (!error)
        goto LABEL_12;
    }
    else
    {
      v15 = 0;
      v16 = error;
      if (!error)
        goto LABEL_12;
    }
    CFRelease(v16);
LABEL_12:
    CFRelease(v11);
    goto LABEL_13;
  }
  return 0;
}

uint64_t sub_100002394(char *path, const char *a2, char *a3, unsigned int *a4)
{
  io_registry_entry_t v7;
  io_registry_entry_t v8;
  CFStringEncoding SystemEncoding;
  const __CFString *v10;
  const __CFString *v11;
  const __CFString *CFProperty;
  const __CFString *v13;
  CFTypeID v14;
  CFIndex Length;
  CFStringEncoding v16;
  CFIndex v17;
  CFStringEncoding v18;
  uint64_t v20;
  CFTypeID v21;
  unsigned int v22;
  CFRange v23;

  v7 = IORegistryEntryFromPath(kIOMainPortDefault, path);
  if (!v7)
    return 4294925247;
  v8 = v7;
  SystemEncoding = CFStringGetSystemEncoding();
  v10 = CFStringCreateWithCStringNoCopy(kCFAllocatorDefault, a2, SystemEncoding, kCFAllocatorNull);
  if (v10)
  {
    v11 = v10;
    CFProperty = (const __CFString *)IORegistryEntryCreateCFProperty(v8, v10, kCFAllocatorDefault, 0);
    if (!CFProperty)
    {
      v20 = 4294925247;
LABEL_18:
      CFRelease(v11);
      goto LABEL_19;
    }
    v13 = CFProperty;
    v14 = CFGetTypeID(CFProperty);
    if (v14 == CFStringGetTypeID())
    {
      Length = CFStringGetLength(v13);
      v16 = CFStringGetSystemEncoding();
      v17 = CFStringGetMaximumSizeForEncoding(Length, v16) + 1;
      if (*a4 >= v17)
      {
        v18 = CFStringGetSystemEncoding();
        if (!CFStringGetCString(v13, a3, v17, v18))
          goto LABEL_14;
LABEL_16:
        v20 = 0;
        *a4 = v17;
        goto LABEL_17;
      }
    }
    else
    {
      v21 = CFGetTypeID(v13);
      if (v21 != CFDataGetTypeID())
      {
LABEL_14:
        v20 = 4294925247;
        goto LABEL_17;
      }
      v22 = CFDataGetLength((CFDataRef)v13);
      LODWORD(v17) = v22;
      if (*a4 >= v22)
      {
        v23.length = v22;
        v23.location = 0;
        CFDataGetBytes((CFDataRef)v13, v23, (UInt8 *)a3);
        goto LABEL_16;
      }
    }
    v20 = 4294925273;
LABEL_17:
    CFRelease(v13);
    goto LABEL_18;
  }
  v20 = 4294925247;
LABEL_19:
  IOObjectRelease(v8);
  return v20;
}

uint64_t sub_10000253C(uint64_t a1)
{
  unsigned int v1;

  v1 = *(_DWORD *)(a1 + 20) - 1200;
  if (v1 <= 3)
    return (uint64_t)*(&off_1010D8170 + 5 * v1 + 5);
  else
    return 0;
}

void sub_10000256C(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t *v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  __int128 v10;
  int v11;
  _OWORD v12[2];
  int v13;

  if ((*(_DWORD *)a1 & 0x80000000) == 0 || *(_DWORD *)(a1 + 24) != 1 || *(_DWORD *)(a1 + 4) != 64)
  {
    v4 = -304;
    goto LABEL_10;
  }
  if (*(_BYTE *)(a1 + 39) != 1 || *(_DWORD *)(a1 + 40) != *(_DWORD *)(a1 + 60))
  {
    v4 = -300;
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 64) || *(_DWORD *)(a1 + 68) <= 0x1Fu)
  {
    v4 = -309;
LABEL_10:
    *(_DWORD *)(a2 + 32) = v4;
LABEL_11:
    *(NDR_record_t *)(a2 + 24) = NDR_record;
    return;
  }
  *(_DWORD *)(a2 + 196) = 0;
  v5 = (uint64_t *)(a2 + 28);
  *(_DWORD *)(a2 + 36) = *(unsigned __int8 *)(a2 + 36) | 0x1000100;
  *(_QWORD *)(a2 + 48) = 0x13000000000000;
  v6 = *(_DWORD *)(a1 + 12);
  v7 = *(_DWORD *)(a1 + 52);
  v8 = *(_QWORD *)(a1 + 28);
  v9 = *(_DWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a1 + 100);
  v12[0] = *(_OWORD *)(a1 + 84);
  v12[1] = v10;
  v11 = sub_100DCEEE0(v6, v7, (uint64_t)v12, (_DWORD *)(a1 + 56), v8, v9, a2 + 68, v5, (int *)(a2 + 196), &v13, (int *)(a2 + 200), (int *)(a2 + 204), (int *)(a2 + 208), (int *)(a2 + 44));
  mig_deallocate(*(_QWORD *)(a1 + 28), *(unsigned int *)(a1 + 40));
  *(_QWORD *)(a1 + 28) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  if (v11)
  {
    *(_DWORD *)(a2 + 32) = v11;
    goto LABEL_11;
  }
  *(_BYTE *)(a2 + 36) = v13;
  *(_DWORD *)(a2 + 40) = *(_DWORD *)(a2 + 196);
  *(NDR_record_t *)(a2 + 56) = NDR_record;
  *(_DWORD *)(a2 + 64) = *(_DWORD *)(a1 + 56);
  *(_DWORD *)a2 |= 0x80000000;
  *(_DWORD *)(a2 + 4) = 212;
  *(_DWORD *)(a2 + 24) = 2;
}

_DWORD *sub_100002704(_DWORD *result, uint64_t a2)
{
  if ((*result & 0x80000000) != 0 || result[1] != 164)
  {
    *(_DWORD *)(a2 + 32) = -304;
  }
  else
  {
    result = (_DWORD *)sub_100DC6F28(result[3], result[8], (uint64_t)(result + 9));
    *(_DWORD *)(a2 + 32) = (_DWORD)result;
  }
  *(NDR_record_t *)(a2 + 24) = NDR_record;
  return result;
}

void sub_100002768(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;

  if ((*(_DWORD *)a1 & 0x80000000) == 0 || *(_DWORD *)(a1 + 24) != 1 || *(_DWORD *)(a1 + 4) != 84)
  {
    v5 = -304;
LABEL_9:
    *(_DWORD *)(a2 + 32) = v5;
    goto LABEL_10;
  }
  if (*(_BYTE *)(a1 + 39) != 1 || *(_DWORD *)(a1 + 40) != *(_DWORD *)(a1 + 80))
  {
    v5 = -300;
    goto LABEL_9;
  }
  *(_DWORD *)(a2 + 68) = 0;
  *(_DWORD *)(a2 + 36) = *(unsigned __int8 *)(a2 + 36) | 0x1000100;
  v4 = sub_100DCC6B0(*(_DWORD *)(a1 + 12), *(_DWORD *)(a1 + 52), *(_DWORD *)(a1 + 56), *(_DWORD *)(a1 + 60), a1 + 64, *(_QWORD *)(a1 + 28), *(_DWORD *)(a1 + 40), a2 + 52, (uint64_t *)(a2 + 28), (int *)(a2 + 68), &v6);
  mig_deallocate(*(_QWORD *)(a1 + 28), *(unsigned int *)(a1 + 40));
  *(_QWORD *)(a1 + 28) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  if (v4)
  {
    *(_DWORD *)(a2 + 32) = v4;
LABEL_10:
    *(NDR_record_t *)(a2 + 24) = NDR_record;
    return;
  }
  *(_BYTE *)(a2 + 36) = v6;
  *(_DWORD *)(a2 + 40) = *(_DWORD *)(a2 + 68);
  *(NDR_record_t *)(a2 + 44) = NDR_record;
  *(_DWORD *)a2 |= 0x80000000;
  *(_DWORD *)(a2 + 4) = 72;
  *(_DWORD *)(a2 + 24) = 1;
}

_DWORD *sub_1000028A8(_DWORD *result, uint64_t a2)
{
  if ((*result & 0x80000000) != 0 || result[1] != 24)
  {
    *(_DWORD *)(a2 + 32) = -304;
    *(NDR_record_t *)(a2 + 24) = NDR_record;
  }
  else
  {
    result = (_DWORD *)sub_100DCDD40(result[3], (_DWORD *)(a2 + 36), (_DWORD *)(a2 + 40), (_DWORD *)(a2 + 44), (_DWORD *)(a2 + 48));
    *(_DWORD *)(a2 + 32) = (_DWORD)result;
    *(NDR_record_t *)(a2 + 24) = NDR_record;
    if (!(_DWORD)result)
      *(_DWORD *)(a2 + 4) = 52;
  }
  return result;
}

uint64_t sub_100002944(_DWORD *a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  void (*v5)(void);
  uint64_t result;

  v2 = a1[2];
  *(_DWORD *)a2 = *a1 & 0x1F;
  *(_DWORD *)(a2 + 4) = 36;
  v3 = a1[5] + 100;
  *(_DWORD *)(a2 + 8) = v2;
  *(_DWORD *)(a2 + 12) = 0;
  *(_DWORD *)(a2 + 16) = 0;
  *(_DWORD *)(a2 + 20) = v3;
  v4 = a1[5];
  if ((v4 - 1204) >= 0xFFFFFFFC
    && (v5 = (void (*)(void))*(&off_1010D8170 + 5 * (v4 - 1200) + 5)) != 0)
  {
    v5();
    return 1;
  }
  else
  {
    result = 0;
    *(NDR_record_t *)(a2 + 24) = NDR_record;
    *(_DWORD *)(a2 + 32) = -303;
  }
  return result;
}

uint64_t sub_1000029D0(uint64_t a1)
{
  unsigned int v1;

  v1 = *(_DWORD *)(a1 + 20) - 1000;
  if (v1 <= 2)
    return (uint64_t)*(&off_1010D8230 + 5 * v1 + 5);
  else
    return 0;
}

void sub_100002A00(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  __int128 v8;
  int v9;
  _OWORD v10[2];
  int v11;

  if ((*(_DWORD *)a1 & 0x80000000) == 0 || *(_DWORD *)(a1 + 24) != 1 || *(_DWORD *)(a1 + 4) != 60)
  {
    v4 = -304;
    goto LABEL_10;
  }
  if (*(_BYTE *)(a1 + 39) != 1 || *(_DWORD *)(a1 + 40) != *(_DWORD *)(a1 + 56))
  {
    v4 = -300;
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 60) || *(_DWORD *)(a1 + 64) <= 0x1Fu)
  {
    v4 = -309;
LABEL_10:
    *(_DWORD *)(a2 + 32) = v4;
LABEL_11:
    *(NDR_record_t *)(a2 + 24) = NDR_record;
    return;
  }
  *(_DWORD *)(a2 + 196) = 0;
  *(_DWORD *)(a2 + 36) = *(unsigned __int8 *)(a2 + 36) | 0x1000100;
  *(_QWORD *)(a2 + 48) = 0x13000000000000;
  v5 = *(_DWORD *)(a1 + 12);
  v6 = *(_QWORD *)(a1 + 28);
  v7 = *(_DWORD *)(a1 + 40);
  v8 = *(_OWORD *)(a1 + 96);
  v10[0] = *(_OWORD *)(a1 + 80);
  v10[1] = v8;
  v9 = sub_100DCE594(v5, (uint64_t)v10, (_DWORD *)(a1 + 52), v6, v7, a2 + 68, (uint64_t *)(a2 + 28), (int *)(a2 + 196), &v11, (int *)(a2 + 44));
  mig_deallocate(*(_QWORD *)(a1 + 28), *(unsigned int *)(a1 + 40));
  *(_QWORD *)(a1 + 28) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  if (v9)
  {
    *(_DWORD *)(a2 + 32) = v9;
    goto LABEL_11;
  }
  *(_BYTE *)(a2 + 36) = v11;
  *(_DWORD *)(a2 + 40) = *(_DWORD *)(a2 + 196);
  *(NDR_record_t *)(a2 + 56) = NDR_record;
  *(_DWORD *)(a2 + 64) = *(_DWORD *)(a1 + 52);
  *(_DWORD *)a2 |= 0x80000000;
  *(_DWORD *)(a2 + 4) = 200;
  *(_DWORD *)(a2 + 24) = 2;
}

_DWORD *sub_100002B80(_DWORD *result, uint64_t a2)
{
  if ((*result & 0x80000000) != 0 || result[1] != 160)
  {
    *(_DWORD *)(a2 + 32) = -304;
  }
  else
  {
    result = (_DWORD *)sub_100DCA610(result[3], (uint64_t)(result + 8));
    *(_DWORD *)(a2 + 32) = (_DWORD)result;
  }
  *(NDR_record_t *)(a2 + 24) = NDR_record;
  return result;
}

void sub_100002BE0(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;

  if ((*(_DWORD *)a1 & 0x80000000) == 0 || *(_DWORD *)(a1 + 24) != 1 || *(_DWORD *)(a1 + 4) != 80)
  {
    v5 = -304;
LABEL_9:
    *(_DWORD *)(a2 + 32) = v5;
    goto LABEL_10;
  }
  if (*(_BYTE *)(a1 + 39) != 1 || *(_DWORD *)(a1 + 40) != *(_DWORD *)(a1 + 76))
  {
    v5 = -300;
    goto LABEL_9;
  }
  *(_DWORD *)(a2 + 68) = 0;
  *(_DWORD *)(a2 + 36) = *(unsigned __int8 *)(a2 + 36) | 0x1000100;
  v4 = sub_100DC7378(*(_DWORD *)(a1 + 12), *(_DWORD *)(a1 + 52), *(_DWORD *)(a1 + 56), a1 + 60, *(_QWORD *)(a1 + 28), *(_DWORD *)(a1 + 40), a2 + 52, (uint64_t *)(a2 + 28), (int *)(a2 + 68), &v6);
  mig_deallocate(*(_QWORD *)(a1 + 28), *(unsigned int *)(a1 + 40));
  *(_QWORD *)(a1 + 28) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  if (v4)
  {
    *(_DWORD *)(a2 + 32) = v4;
LABEL_10:
    *(NDR_record_t *)(a2 + 24) = NDR_record;
    return;
  }
  *(_BYTE *)(a2 + 36) = v6;
  *(_DWORD *)(a2 + 40) = *(_DWORD *)(a2 + 68);
  *(NDR_record_t *)(a2 + 44) = NDR_record;
  *(_DWORD *)a2 |= 0x80000000;
  *(_DWORD *)(a2 + 4) = 72;
  *(_DWORD *)(a2 + 24) = 1;
}

uint64_t sub_100002D18(_DWORD *a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  void (*v5)(void);
  uint64_t result;

  v2 = a1[2];
  *(_DWORD *)a2 = *a1 & 0x1F;
  *(_DWORD *)(a2 + 4) = 36;
  v3 = a1[5] + 100;
  *(_DWORD *)(a2 + 8) = v2;
  *(_DWORD *)(a2 + 12) = 0;
  *(_DWORD *)(a2 + 16) = 0;
  *(_DWORD *)(a2 + 20) = v3;
  v4 = a1[5];
  if ((v4 - 1003) >= 0xFFFFFFFD
    && (v5 = (void (*)(void))*(&off_1010D8230 + 5 * (v4 - 1000) + 5)) != 0)
  {
    v5();
    return 1;
  }
  else
  {
    result = 0;
    *(NDR_record_t *)(a2 + 24) = NDR_record;
    *(_DWORD *)(a2 + 32) = -303;
  }
  return result;
}

uint64_t (*sub_100002DA4(uint64_t a1))()
{
  unsigned int v1;

  v1 = *(_DWORD *)(a1 + 20) - 500;
  if (v1 <= 2)
    return off_1010D82C8[5 * v1 + 5];
  else
    return 0;
}

void sub_100002DD4(uint64_t a1, uint64_t a2)
{
  int v3;
  int v4;

  if ((*(_DWORD *)a1 & 0x80000000) == 0 || *(_DWORD *)(a1 + 24) != 1 || *(_DWORD *)(a1 + 4) != 80)
  {
    v3 = -304;
    goto LABEL_10;
  }
  if (*(_BYTE *)(a1 + 39) != 1 || *(_DWORD *)(a1 + 40) != *(_DWORD *)(a1 + 52))
  {
    v3 = -300;
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 80) || *(_DWORD *)(a1 + 84) <= 0x1Fu)
  {
    v3 = -309;
LABEL_10:
    *(_DWORD *)(a2 + 32) = v3;
LABEL_11:
    *(NDR_record_t *)(a2 + 24) = NDR_record;
    return;
  }
  *(_DWORD *)(a2 + 36) = 16777473;
  *(_DWORD *)(a2 + 52) = 16777473;
  sub_10090EE74(*(unsigned int *)(a1 + 12), *(_QWORD *)(a1 + 28));
  if (v4)
  {
    *(_DWORD *)(a2 + 32) = v4;
    goto LABEL_11;
  }
  *(_DWORD *)(a2 + 40) = *(_DWORD *)(a2 + 376);
  *(_DWORD *)(a2 + 56) = *(_DWORD *)(a2 + 380);
  *(NDR_record_t *)(a2 + 60) = NDR_record;
  *(_DWORD *)a2 |= 0x80000000;
  *(_DWORD *)(a2 + 4) = 384;
  *(_DWORD *)(a2 + 24) = 2;
}

uint64_t sub_100002F28(_DWORD *a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  void (*v5)(void);
  uint64_t result;

  v2 = a1[2];
  *(_DWORD *)a2 = *a1 & 0x1F;
  *(_DWORD *)(a2 + 4) = 36;
  v3 = a1[5] + 100;
  *(_DWORD *)(a2 + 8) = v2;
  *(_DWORD *)(a2 + 12) = 0;
  *(_DWORD *)(a2 + 16) = 0;
  *(_DWORD *)(a2 + 20) = v3;
  v4 = a1[5];
  if ((v4 - 503) >= 0xFFFFFFFD
    && (v5 = (void (*)(void))off_1010D82C8[5 * (v4 - 500) + 5]) != 0)
  {
    v5();
    return 1;
  }
  else
  {
    result = 0;
    *(NDR_record_t *)(a2 + 24) = NDR_record;
    *(_DWORD *)(a2 + 32) = -303;
  }
  return result;
}

void sub_100002FB4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 1130658149 * ((((2 * a1) | 0x19BF0DBA) - a1 + 1931508003) ^ 0x41E33F10);
  __asm { BR              X12 }
}

uint64_t sub_10000308C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (((((v2 - 564818583) & 0x21AACFEB) + ((v2 - 9753) | 0x2641) - 47487)
                                          * (*(_QWORD *)(v1 - 0x177ECD13451C78A8) != 0x6CA6F0EE111A2BB6)) ^ v2))
                            - 4))();
}

uint64_t sub_100003104()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((42455 * (*(_QWORD *)(v1 - 0x177ECD13451C78A0) == 0x7C0ADF1C3D95FE54)) ^ v2))
                            - (v2 + 23853)
                            - ((v2 - 2066960239) & 0x7B337DD5)
                            + 59466))();
}

uint64_t sub_100003174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, int a5@<W8>)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  _BOOL8 v12;
  uint64_t v13;
  _BOOL4 v14;

  v9 = *(_DWORD *)(a1 + 8) + a5;
  if (v9 == v8)
    v9 = *(_DWORD *)(v6 - 0x177ECD13451C7890);
  v10 = *(_DWORD *)(v6 - 0x177ECD13451C7890) + 2127580131 + v9;
  v11 = *(_DWORD *)(v6 - 0x177ECD13451C7894) + 374380442;
  v12 = v11 < 0xAC493FF5;
  v13 = v12 ^ (v10 < 0xAC493FF5);
  v14 = v10 < v11;
  if ((_DWORD)v13)
    v14 = v12;
  return ((uint64_t (*)(uint64_t, _BOOL8, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                                  + 8 * ((10962 * v14) ^ v7))
                                                                                      - ((((v7 - 1049472678) & 0x3E8D7FDFu)
                                                                                        - 22985) ^ 0x2FFLL)))(a1, v12, v13, a2, a3, a4);
}

uint64_t sub_10000323C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * (v6 ^ 0x4DEC))
                                                                             - 8))(a1, 33554570, (v5 - 732007674) & 0x2BA1BBBF, a4, *(_QWORD *)(v4 + 8 * v6) - 12);
}

uint64_t sub_10000332C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_10000352C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  uint64_t v14;
  int v15;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((877 * ((v15 + a13) < 0xFFFFFFEC)) ^ a14)) - 12))();
}

uint64_t sub_100003558@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W5>, unsigned int a4@<W6>, int a5@<W8>)
{
  uint64_t v5;
  unsigned int v6;
  _BOOL4 v7;
  _BOOL4 v8;
  _BOOL4 v9;

  v6 = a3 + a5 + 2145629374;
  v7 = v6 < 0x15DC5D19;
  v8 = v6 > a4;
  if (a4 < 0x15DC5D19 != v7)
    v9 = v7;
  else
    v9 = v8;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * (((2 * (a2 ^ 0xA5E8) - 18579) * v9) | a2))
                                                   - ((2 * (a2 ^ 0xA5E8u)) ^ 0x5CC0)))(a1, 366763289);
}

uint64_t sub_1000035C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _DWORD *a14)
{
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  _BOOL4 v19;

  v17 = *a14 + 510618514;
  v18 = ((v16 + 510618514) < 0xB46813ED) ^ (v17 < 0xB46813ED);
  v19 = v16 + 510618514 > v17;
  if (v18)
    v19 = (v16 + 510618514) < 0xB46813ED;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((!v19 * (v15 + 33304)) ^ v15)) - 8))();
}

uint64_t sub_100003628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  __int16 v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 v26;
  uint64_t v27;
  unint64_t v28;

  v18 = v14 - 16239;
  v19 = *v13 + a11;
  v20 = *(unsigned __int8 *)(v19 + v17);
  v21 = ((((v19 ^ v16) & 0x7FFFFFFF) * (((v18 ^ 0x5454) + 5059) ^ 0xFF823F3D)) ^ ((((v19 ^ v16) & 0x7FFFFFFF)
                                                                                               * (((v18 ^ 0x5454) + 5059) ^ 0xFF823F3D)) >> 16))
      * v15;
  v22 = v21 >> 24;
  v23 = *(_QWORD *)(v12 + 8 * (v18 - 7422)) - 14537035;
  v24 = *(_QWORD *)(v12 + 8 * (v18 ^ 0x1181)) - 2014421030;
  v25 = *(_QWORD *)(v12 + 8 * (v18 ^ 0x1779)) - 380625534;
  v26 = *(unsigned __int8 *)(v23 + (v21 >> 24)) ^ v20 ^ *(unsigned __int8 *)(v24 + (v21 >> 24) + 2) ^ *(unsigned __int8 *)(v25 + (v21 >> 24) + 2) ^ (unsigned __int16)v21;
  v27 = *v13 + a10;
  v28 = ((((v27 ^ v16) & 0x7FFFFFFF) * v15) ^ ((((v27 ^ v16) & 0x7FFFFFFF) * v15) >> 16))
      * v15;
  LOBYTE(v27) = *(_BYTE *)(v23 + (v28 >> 24)) ^ *(_BYTE *)(v27 + v17) ^ *(_BYTE *)(v24 + (v28 >> 24) + 2) ^ v28 ^ *(_BYTE *)(v25 + (v28 >> 24) + 2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * ((220
                                          * ((unsigned __int16)((((v27 ^ (-79 * BYTE3(v28))) | (unsigned __int16)((v26 ^ (unsigned __int16)(-79 * v22)) << 8)) ^ 0xEB47)
                                                              + 24061
                                                              + ((2
                                                                * ((v27 ^ (-79 * BYTE3(v28))) | (unsigned __int16)((v26 ^ (unsigned __int16)(-79 * v22)) << 8))) & 0xD68E)) == 18756)) ^ v18))
                            - 4))();
}

uint64_t sub_10000377C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  uint64_t v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  _BOOL4 v19;

  v16 = a6 + v15 - 613309922;
  v17 = v15 + 1521340528;
  v18 = (v17 < 0x716A4A79) ^ (v16 < a13);
  v19 = v16 > v17;
  if (v18)
    v19 = v16 < a13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((12700 * v19) ^ v14)) - 8))();
}

uint64_t sub_1000037E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  _BOOL4 v11;

  v9 = v7 - 149494895 + ((v8 - 512835533) & 0x1E90FFD6);
  v10 = (a6 - 149471147 < ((v8 - 32613) ^ 0x8D0FF5E5)) ^ (v9 < 0x8D0FE8B0);
  v11 = a6 - 149471147 > v9;
  if (v10)
    v11 = a6 - 149471147 < ((v8 - 32613) ^ 0x8D0FF5E5);
  return (*(uint64_t (**)(void))(v6 + 8 * ((98 * v11) ^ v8)))();
}

uint64_t sub_100003864()
{
  uint64_t v0;
  __int16 v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((22379
                                          * ((unsigned __int16)(((v2 - 17276) & 0x6F27)
                                                              + v1
                                                              + ((v2 - 16471) & 0x7FC5 ^ 0xEA3A)) == 18756)) ^ v2))
                            - 4))();
}

uint64_t sub_1000038D4()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8
                                             * ((11213 * (v1 + 75 * (v2 ^ 0x5C3Du) - 381469436 < 0xFFFFFFEC)) ^ v2))
                            - 8))();
}

uint64_t sub_100003914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  _BOOL4 v10;

  v8 = ((a5 + 5073) ^ 0xD216A1CE) + v7;
  v9 = ((v6 + 1364405104) < 0x680FA565) ^ (v8 < 0x680FA565);
  v10 = v6 + 1364405104 > v8;
  if (v9)
    v10 = (v6 + 1364405104) < 0x680FA565;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((498 * v10) ^ a5)) - (((a5 - 18507) | 0x242u) ^ 0x2E6)))();
}

uint64_t sub_10000399C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a6 ^ 0x4DFD)) - 8))();
}

uint64_t sub_1000039C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((a5 + 5059) ^ 0x423D) * (a6 == v7)) ^ a5)) - 12))();
}

uint64_t sub_1000039F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * a5) - (a5 ^ 0x15C5u) + 23736))();
}

_DWORD *sub_100003A14(_DWORD *result)
{
  int v1;

  *result = v1;
  return result;
}

void sub_100003A38(uint64_t a1)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  _BOOL4 v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v2 = (*(_QWORD *)(a1 + 8) ^ 0x7DF74F7BF8E2FFFFLL)
     - 0x7DF74F7BBFCB58BFLL
     + ((2 * *(_QWORD *)(a1 + 8)) & 0xFBEE9EF7F1C5FFFELL);
  v3 = ((*(_QWORD *)(a1 + 32) - 0x30157F26366FC738) ^ 0xB5CA9F6FFEFFFF8DLL)
     + 0x4A3560903A17A7B3
     + ((2 * (*(_QWORD *)(a1 + 32) - 0x30157F26366FC738)) & 0x6B953EDFFDFFFF1ALL);
  v4 = v2 < 0x3917A740;
  v5 = v2 > v3;
  if (v4 != v3 < 0x3917A740)
    v6 = v4;
  else
    v6 = v5;
  v1 = *(_DWORD *)a1 - 210615973 * ((2 * (a1 & 0x1FE80003) - a1 + 1612185596) ^ 0xC9F836E3);
  __asm { BR              X11 }
}

uint64_t sub_100003C18()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((10852
                                          * (((v1 - 10872) ^ 0x658D79C7)
                                           + (v2 ^ (71 * (v1 ^ 0x7A01)) ^ 0xDD6A16A0)
                                           + (v0 & 0x6A5D9FFC ^ 0x40091E3C) != -1698956937)) ^ (v1 - 9461)))
                            - 8))();
}

uint64_t sub_100003CA4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;

  v9 = v5 < v3;
  *(_BYTE *)(a1 + (v1 - 295951237)) = *(_BYTE *)(*(_QWORD *)(v7 + 8 * (v4 - 18537))
                                                             + ((v1 - 295951237) & 0xFLL)
                                                             - 807430314) ^ *(_BYTE *)(v2
                                                                                     + (v1 - 295951237)) ^ (-117 * ((v1 + 123) & 0xF)) ^ *(_BYTE *)(*(_QWORD *)(v7 + 8 * (v4 ^ 0x5450)) + (((_BYTE)v1 + 123) & 0xF) - 2042871745) ^ *(_BYTE *)((v4 - 1411) + (unint64_t)(((_BYTE)v1 + 123) & 0xF) + *(_QWORD *)(v7 + 8 * (v4 ^ 0x526B)) - 367688057);
  if (v9 == v1 - 1994908173 < v3)
    v9 = v1 - 1994908173 < v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v9 * v6) ^ v4)) - 8))();
}

uint64_t sub_100003D78()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((v1 - 9461) ^ (11698
                                                        * ((((v1 ^ 0x2B88) - 796340866) ^ v0 & 0xF5FFBFFC)
                                                         + (v2 ^ 0x92BB50E1)
                                                         - 537035848 != 1526553526))))
                            - 8))();
}

uint64_t sub_100003DE8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((((((a2 + v6 - 2063589374) < 8) ^ (-51 * ((a6 - 107) ^ 0x5D) + 1)) & 1)
                                          * ((a6 - 11117) ^ 0x257F)) ^ (a6 + 13461)))
                            - 12))();
}

uint64_t sub_100003E98(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((((v5 + 21989) ^ 0x7BFB) * ((a3 + a5 - 16) < 0xFFFFFFF0)) ^ v5))
                            - (v5 + 24578)
                            + 34123))();
}

uint64_t sub_100003EE0(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _BOOL4 v35;

  v25 = (a2 + v23 + a3);
  v26 = a18 - 0x30157F26366FC738 + v25;
  v27 = ((6 * (v18 ^ 0x91DA)) ^ 0x7B39) & v25;
  v28 = v22 - v26;
  v29 = (v27 | v21) - v26;
  v30 = (v27 | v20) - v26;
  v31 = v28 + v27;
  v35 = (unint64_t)(v19 - (a18 - 0x30157F26366FC738)) > 0xF
     && v31 > 0xF
     && (unint64_t)(v29 + 3) > 0xF
     && (unint64_t)(v30 + 2) > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v24 + 8 * ((5537 * v35) ^ v18)) - 12))();
}

uint64_t sub_100003F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)(v6 - 252) = (v4 ^ 0xBE1) - 20860;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                                         + 8
                                                                                         * ((((((v4 ^ 0xBE1) - 20860) ^ 0x23C5)
                                                                                            - 15476)
                                                                                           * (v5 < 0x10)) ^ v4 ^ 0xBE1))
                                                                             - 8))(a1, a2, a3, a4, 0);
}

uint64_t sub_100003FBC(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;

  v9.n128_u64[0] = (a5 + 7) & 0xF;
  v9.n128_u64[1] = (a5 + 6) & 0xF;
  v10.n128_u64[0] = (a5 + 5) & 0xF;
  v10.n128_u64[1] = (a5 + 4) & 0xF;
  v11.n128_u64[0] = (a5 + 3) & 0xF;
  v11.n128_u64[1] = (a5 + 2) & 0xF;
  v12.n128_u64[0] = 0x2F2F2F2F2F2F2F2FLL;
  v12.n128_u64[1] = 0x2F2F2F2F2F2F2F2FLL;
  return ((uint64_t (*)(uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(*(_QWORD *)(v8 - 248) + 8 * a7)
                                                                                          - 4))(v7, a1, v9, v10, v11, (__n128)xmmword_100DF7480, v12);
}

uint64_t sub_1000040B0(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  int v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v28;
  int8x16_t v30;
  int8x16_t v31;

  v28 = v20 & 0xF;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v24, a5).u64[0];
  v31 = vrev64q_s8(vmulq_s8(v30, a6));
  *(int8x16_t *)(v19 + v20) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v18 + v28 - 15), *(int8x16_t *)(a13 + v20)), veorq_s8(*(int8x16_t *)(v28 + v17 - 12), *(int8x16_t *)(v28 + v16 - 13))), vextq_s8(v31, v31, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * (((v21 == 0) * v22) ^ a12)) - v15 + v14))();
}

uint64_t sub_100004130(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  uint64_t v11;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11
                                                      + 8
                                                      * (int)((13217
                                                             * ((((a1 - a5) | (a5 - a1)) >> ((v10 - 59) ^ 0xA1)) & 1)) ^ v10))
                                          - ((v10 - 36717) | 0x2410u)
                                          + 9616))(a10);
}

uint64_t sub_100004194()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v4 = (v0 - 1439630877) & 0x55CEFFDB;
  *(_DWORD *)(v2 - 252) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)(((v4 + 13830) * ((v1 >> 3) & 1)) ^ v0)) - 8))();
}

uint64_t sub_1000041DC(double a1, __n128 a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  a2.n128_u16[0] = 12079;
  a2.n128_u8[2] = 47;
  a2.n128_u8[3] = 47;
  a2.n128_u8[4] = 47;
  a2.n128_u8[5] = 47;
  a2.n128_u8[6] = 47;
  a2.n128_u8[7] = 47;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, __n128, __n128))(*(_QWORD *)(v11 + 8 * *(int *)(v10 - 252)) - 4))((v8 + v7 + a4 - a7 + 3), (v7 + a4 + *(_DWORD *)(v10 - 252) - a7 - 537043871), (v8 + v7 + a4 - a7 + 7), a6, (v7 + a4 + a5 - a7), 0, a6 - (v9 & 0xFFFFFFF8), (__n128)xmmword_100DF7490, a2);
}

uint64_t sub_100004268(char a1, char a2, char a3, int8x16_t a4, int8x8_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  int v48;
  char v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int8x16x4_t v56;

  v53 = (a7 + a8);
  v56.val[0].i64[0] = ((_BYTE)a7 + (_BYTE)a8) & 0xF;
  v56.val[0].i64[1] = (v51 + (_BYTE)a8) & 0xF;
  v56.val[1].i64[0] = (a3 + (_BYTE)a8) & 0xF;
  v56.val[1].i64[1] = (v50 + (_BYTE)a8) & 0xF;
  v56.val[2].i64[0] = (v49 + (_BYTE)a8) & 0xF;
  v56.val[2].i64[1] = (a2 + (_BYTE)a8) & 0xF;
  v54 = *(_QWORD *)(v52 - 248);
  v56.val[3].i64[0] = (a1 + (_BYTE)a8) & 0xF;
  v56.val[3].i64[1] = (v46 + (_BYTE)a8) & 0xF;
  *(int8x8_t *)(a43 + v53) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v45 + (v53 & 0xF) - 7), *(int8x8_t *)(v47 + v53)), veor_s8(*(int8x8_t *)((v53 & 0xF) + v44 - 4), *(int8x8_t *)((v53 & 0xF) + v43 - 5))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v56, a4), a5)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v54 + 8 * ((16195 * (v48 == a8)) ^ *(_DWORD *)(v52 - 252))) - 4))();
}

uint64_t sub_100004340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  uint64_t v41;
  uint64_t v42;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v42
                                                      + 8
                                                      * (((((*(_DWORD *)(v41 - 252) + 11179) | 0x3030) - 1881)
                                                        * (a41 == a40)) ^ (*(_DWORD *)(v41 - 252) + 1601)))
                                          - (((*(_DWORD *)(v41 - 252) + 8489) | 0x103Au) ^ 0x50B6)))(a10);
}

uint64_t sub_1000043A0()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 5557)) - 12))();
}

uint64_t sub_1000043CC@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = (a1 + v9);
  v14 = ((130 * v5) ^ v10) & v13;
  *(_BYTE *)(a2 + v13) = *(_BYTE *)(v8 + v14) ^ *(_BYTE *)(v3 + v13) ^ *(_BYTE *)(v14 + v7 + 3) ^ *(_BYTE *)(v14 + v6 + 2) ^ (v14 * v11);
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (((2 * (a1 - 1 == v4)) | (16 * (a1 - 1 == v4))) ^ v2)) - 12))();
}

uint64_t sub_100004434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;

  v8 = vrev64q_s8(*(int8x16_t *)*(_QWORD *)(a1 + 16));
  v9 = vextq_s8(v8, v8, 8uLL);
  v10.i64[0] = 0xCECECECECECECECELL;
  v10.i64[1] = 0xCECECECECECECECELL;
  v11 = vandq_s8(vaddq_s8(v9, v9), v10);
  v10.i64[0] = 0x6767676767676767;
  v10.i64[1] = 0x6767676767676767;
  v12 = veorq_s8(v9, v10);
  v10.i64[0] = 0x4B4B4B4B4B4B4B4BLL;
  v10.i64[1] = 0x4B4B4B4B4B4B4B4BLL;
  v13 = vrev64q_s8(veorq_s8(vaddq_s8(vaddq_s8(v12, v10), v11), (int8x16_t)xmmword_100DF74B0));
  *(int8x16_t *)(v6 - 240) = vextq_s8(v13, v13, 8uLL);
  return (*(uint64_t (**)(void))(v7 + 8 * (a6 ^ (108 * (v6 == 240)))))();
}

uint64_t sub_1000044AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;

  return ((uint64_t (*)(void))(*(_QWORD *)(v19
                                        + 8
                                        * ((a6 + 15255) ^ (5509
                                                         * (v18 - 0x35E8360BD3B6198FLL == a18 - 0x65FDB5320A25E0C7))))
                            - (a6 - 5102)
                            + 15564))();
}

uint64_t sub_100004510()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v1 - 192) = *(_BYTE *)(v1 - 240);
  *(_QWORD *)(v1 - 191) = *(_QWORD *)(v1 - 239);
  *(_DWORD *)(v1 - 183) = *(_DWORD *)(v1 - 231);
  *(_WORD *)(v1 - 179) = *(_WORD *)(v1 - 227);
  *(_BYTE *)(v1 - 177) = *(_BYTE *)(v1 - 225);
  v3 = *(_QWORD *)(v1 - 232);
  *(_QWORD *)(v1 - 176) = *(_QWORD *)(v1 - 240);
  *(_QWORD *)(v1 - 168) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * v0) - ((278 * (v0 ^ 0x8C6Du)) ^ 0x3CD4)))();
}

uint64_t sub_10000456C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  uint64_t v19;

  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * ((491 * (a18 != 0x30157F26366FC738)) ^ v18))
                            - (v18 + 3719)
                            + 19279))();
}

uint64_t sub_1000045B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  int v19;
  char v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  _BOOL4 v26;

  v23 = a19 - (((a19 + 438730585 + v19) & 0x5564C65E ^ a19 & 2) << (v20 ^ 0x54)) + 1871417612;
  v24 = 4138 * (v21 ^ 0x3CD5);
  v26 = ((((v24 - 9231) | 0x100C) ^ 0x3CC1) & v23 | a19 & 1) == 0xC && v23 != ((3 * (v24 ^ 0x49CF)) ^ 0xD5648D0B);
  return (*(uint64_t (**)(void))(v22 + 8 * ((2282 * v26) ^ v24)))();
}

uint64_t sub_100004664(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v3
                                                              + 8
                                                              * ((((v1 - 880362993) & 0x34794FFF ^ (v1 + 2546))
                                                                * (v2 == 0)) ^ v1))
                                                  - 8))(a1, (v1 + 3720));
}

uint64_t sub_1000046A8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  uint64_t v19;
  unsigned int v20;

  v20 = a19 - ((a9 + 908571854) & 0xF3727632) + 333448664 + ((3671 * (a2 ^ 0x4B55)) ^ 0xFFFFE35F);
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * ((16313
                                * (((2 * v20) & 0xBEC7FEFA ^ 0xB2427632) + (v20 ^ 0xA6DAC464) + 1073741568 != 526646909)) ^ a2)))();
}

uint64_t sub_100004770(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((322 * (a1 + v2 + 547094659 >= ((181 * (v1 ^ 0x1CC4)) ^ 0x4AFAu))) ^ v1))
                            - 12))();
}

uint64_t sub_100004808(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((13529
                                          * ((((a3 + 12356) ^ (a2 + a6 - 16 < ((a3 - 13042) | 0x452u) - 7266)) & 1) == 0)) ^ a3))
                            - 4))();
}

uint64_t sub_100004860@<X0>(int a1@<W0>, unint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _BOOL4 v30;
  int v32;

  v18 = a1 + v16 + ((2253 * (v12 ^ 0x1C5C)) ^ 0x209C7BB4u);
  v19 = (v12 ^ 0x1C5Cu) + 9349 + a12 - 0x30157F26366FEBCALL + v18;
  v20 = ((_BYTE)a1 + (_BYTE)v16 + ((-51 * (v12 ^ 0x5C)) ^ 0xB4)) & 0xF;
  v21 = v20 - v18;
  v22 = v15 + v20 - v18;
  v23 = v20 + 1;
  v24 = v15 + v20 + 1;
  v25 = v14 + v20 + 1 - v18;
  v26 = v20 + v14 + 2;
  v27 = v13 + v21;
  v28 = v13 + v23;
  v30 = a2 < v24 && v22 < v19;
  v32 = a2 < v26 && v25 < v19 || v30;
  if (a2 < v28 && v27 < v19)
    v32 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * ((252 * v32) ^ v12)) - 12))();
}

uint64_t sub_10000491C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                       + 8
                                                                       * ((59
                                                                         * (v6 >= (((a6 + 7182) | 0x1154) ^ 0xFFFFD52F)
                                                                                + a6
                                                                                + 22179)) ^ a6))
                                                           - 4))(a1, a2, 0);
}

uint64_t sub_100004964(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  char v5;
  uint64_t v6;
  __n128 v7;
  __n128 v8;
  __n128 v9;
  __n128 v10;

  v7.n128_u64[0] = v5 & 0xF;
  v7.n128_u64[1] = (v5 - 1) & 0xF;
  v8.n128_u64[0] = (v5 + 14) & 0xF;
  v8.n128_u64[1] = (v5 + 13) & 0xF;
  v9.n128_u64[0] = (v5 + 12) & 0xF;
  v9.n128_u64[1] = (v5 + 11) & 0xF;
  v10.n128_u64[0] = 0xB0B0B0B0B0B0B0BLL;
  v10.n128_u64[1] = 0xB0B0B0B0B0B0B0BLL;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(*(_QWORD *)(v6 - 248)
                                                                                             + 8 * a5)
                                                                                 - 4))(a1, v7, v8, v9, (__n128)xmmword_100DF7480, v10);
}

uint64_t sub_100004A64(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v25;
  int8x16_t v27;
  int8x16_t v28;

  v25 = a14 & 0xF;
  v27.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v27.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v21, a5).u64[0];
  v28 = vrev64q_s8(vmulq_s8(v27, a6));
  *(int8x16_t *)(a11 + a14) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v17 + v25 - 15), *(int8x16_t *)(a11 + a14)), veorq_s8(*(int8x16_t *)(v25 + v16 - 14), *(int8x16_t *)(v15 + v25 - 15))), vextq_s8(v28, v28, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * (((v18 == 0) * v19) ^ a10)) - a13 + v14))();
}

uint64_t sub_100004AE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8 + 8 * (((((a7 - 341101400) & 0x1454FB36) + 19048) * (v7 != a3)) ^ a7)))();
}

uint64_t sub_100004B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  char v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9
                                                                                + 8
                                                                                * (((((a7 - 1584778136) & 0x5E75FB76)
                                                                                   - 3285)
                                                                                  * ((v8 & 8) == 0)) ^ (a7 - 9924)))
                                                                    - ((a7 + 5855) | 0x1900u)
                                                                    + 31538))(a1, a2, a3, (v7 - a3));
}

uint64_t sub_100004B7C(double a1, __n128 a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(v4 - 252) = v2;
  a2.n128_u16[0] = 2827;
  a2.n128_u8[2] = 11;
  a2.n128_u8[3] = 11;
  a2.n128_u8[4] = 11;
  a2.n128_u8[5] = 11;
  a2.n128_u8[6] = 11;
  a2.n128_u8[7] = 11;
  return (*(uint64_t (**)(__n128, __n128))(v5 + 8 * (v3 - 19444)))((__n128)xmmword_100DF7490, a2);
}

uint64_t sub_100004BF0(char a1, int a2, int a3, int8x16_t a4, int8x8_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, int a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unsigned __int8 v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int8x16x4_t v23;

  v20 = (a2 + a3 + 8);
  v23.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a3 + 8) & 0xF;
  v23.val[0].i64[1] = (a1 + (_BYTE)a3 + 8) & 0xF;
  v21 = *(_QWORD *)(v19 - 248);
  v23.val[1].i64[0] = (v13 + (_BYTE)a3 + 8) & 0xF;
  v23.val[1].i64[1] = (v13 + (_BYTE)a3 + 8 + (v14 ^ 0xFD)) & 0xF;
  v23.val[2].i64[0] = (v18 + (_BYTE)a3 + 8) & 0xF;
  v23.val[2].i64[1] = (v17 + (_BYTE)a3 + 8) & 0xF;
  v23.val[3].i64[0] = (v16 + (_BYTE)a3 + 8) & 0xF;
  v23.val[3].i64[1] = (v15 + (_BYTE)a3 + 8) & 0xF;
  *(int8x8_t *)(a9 + v20) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v12 + (v20 & 0xF) - 7), *(int8x8_t *)(a9 + v20)), veor_s8(*(int8x8_t *)((v20 & 0xF) + v11 - 6), *(int8x8_t *)(v10 + (v20 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v23, a4), a5)));
  return (*(uint64_t (**)(void))(v21 + 8 * ((21887 * (a10 == a3)) ^ a7)))();
}

uint64_t sub_100004CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42,int a43)
{
  int v43;
  uint64_t v44;

  return ((uint64_t (*)(void))(*(_QWORD *)(v44
                                        + 8
                                        * ((((21 * (((v43 + 8240) | 0x1014) ^ 0x7EE8)) ^ 0x4270) * (a43 == a41)) ^ v43))
                            - 4))();
}

uint64_t sub_100004D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5 + 8 * (a5 - 16415)))();
}

uint64_t sub_100004D4C@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  int v9;
  uint64_t v10;

  *(_BYTE *)(a2 + (a1 + v7)) ^= *(_BYTE *)(v6 + ((a1 + v7) & 0xFLL)) ^ *(_BYTE *)((((_BYTE)a1 + (_BYTE)v7) & 0xF)
                                                                                              + v5
                                                                                              + 1) ^ *(_BYTE *)(v4 + (((_BYTE)a1 + (_BYTE)v7) & 0xF)) ^ (((a1 + v7) & 0xF) * v8);
  return (*(uint64_t (**)(void))(v10 + 8 * (((a1 - 1 == v3) * v9) ^ v2)))();
}

void sub_100004DA0()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1327141557)
    v1 = 2134650450;
  else
    v1 = 2134608426;
  *(_DWORD *)(v2 + 24) = v1;
}

void sub_10000CAA0(uint64_t a1)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  _BOOL4 v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v2 = (*(_QWORD *)(a1 + 40) ^ 0xFE14F59F7FFF9E7ELL)
     + 0x1EB0A613A493E47
     + ((2 * *(_QWORD *)(a1 + 40)) & 0xFC29EB3EFFFF3CFCLL);
  v3 = (*(_QWORD *)(a1 + 32) ^ 0x4A36A75DF4DFE3FBLL)
     - 0x4A36A75D3A970736
     + ((2 * *(_QWORD *)(a1 + 32)) & 0x946D4EBBE9BFC7F6);
  v4 = v2 < 0xBA48DCC5;
  v5 = v2 > v3;
  if (v4 != v3 < 0xBA48DCC5)
    v6 = v4;
  else
    v6 = v5;
  v1 = *(_DWORD *)(a1 + 24) ^ (19382863 * ((a1 - 1607882816 - 2 * (a1 & 0xA029A7C0)) ^ 0xA8EC2B1E));
  __asm { BR              X16 }
}

uint64_t sub_10000CCCC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((28
                                * ((a1 & 0xAFBEF7FE ^ 0xA6A203C2)
                                 + (v1 ^ 0xACAE7E1E)
                                 + ((v2 + 394020702) & 0xE8837FFF)
                                 + 19305
                                 - 348317843 == 1125978743)) ^ v2)))();
}

uint64_t sub_10000CD4C(int a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((a2 + a1 - 1474264063 >= ((a4 - 10793) ^ 0x54EAu))
                                          * (((a4 - 324092878) & 0x1350EFF6) + 50905)) ^ a4))
                            - 8))();
}

uint64_t sub_10000CDB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((766 * ((a7 & 0xFFFFFFF0) == ((a5 - 187358755) & 0xB2ADDF6) + 1474242378)) ^ a5))
                            - ((790 * (a5 ^ 0x54ECu)) ^ 0x2B38)))();
}

uint64_t sub_10000CE1C@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W3>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  BOOL v20;
  unint64_t v21;
  int v23;

  v10 = (a2 + a1 + a4);
  v11 = v10 + v4;
  v12 = v10 + v8;
  v13 = v11 - v12;
  v14 = ((a3 - 10626) ^ 0x2B3B) & (a2 + a1);
  v15 = v6 - v12;
  v16 = (v14 | v7) - v12;
  v17 = (v14 | v5) - v12;
  v18 = v15 + v14;
  v20 = v13 >= 0x10 && v18 >= 0x10 && (unint64_t)(v16 + 1) >= 0x10;
  v21 = v17 + 311 * (a3 ^ 0x5491) - 12124;
  v23 = !v20 || v21 < 0x10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((84 * v23) ^ a3)) - 12))();
}

uint64_t sub_10000CEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * (a8 ^ (227 * (v8 < 0x10))))
                                                                    - ((3 * (a8 ^ 0xF30) - 10707) | 0x896u)
                                                                    + 16302))(a1, a2, a3, 0);
}

#error "10000D028: call analysis failed (funcsize=75)"

uint64_t sub_10000D02C@<X0>(uint64_t a1@<X4>, unsigned int a2@<W7>, uint64_t a3@<X8>, __n128 a4@<Q1>, __n128 a5@<Q4>)
{
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unsigned __int8 v16;
  int v17;
  uint64_t v18;
  int8x16_t v19;
  int8x16_t v20;
  int8x16_t v21;
  uint64_t v22;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;

  v22 = a2 & 0xF;
  v24.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a4 - 1), v19).u64[0];
  v24.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v19).u64[0];
  v25 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a1 + a2), *(int8x16_t *)(v13 + v22 - 15)), veorq_s8(*(int8x16_t *)(v22 + v14 - 14), *(int8x16_t *)(v22 + v12 - 10))));
  v26 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v25, v25, 8uLL), v21), vmulq_s8(v24, v20)));
  *(int8x16_t *)(a3 + a2) = vextq_s8(v26, v26, 8uLL);
  return (*(uint64_t (**)(void))(v18 + 8 * (((((v15 == 0) ^ v16) & 1) * v17) ^ v11)))();
}

uint64_t sub_10000D0B8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8 * ((28 * (((v7 == a4) ^ (2 * (a7 + 124) + 1)) & 1)) ^ a7))
                            - 8))();
}

uint64_t sub_10000D104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  char v54;
  uint64_t v55;
  int v56;
  uint64_t v58;

  v56 = a5 | 0x2902;
  v58 = (v56 - 57372548) & 0x36B7FB7;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * (int)((((1106 * (v58 ^ 0x3FBC)) ^ 0x7BBD) * ((v54 & 8) == 0)) ^ v56)) - 8))(a1, a2, a3, a4, v58, 1106 * (v58 ^ 0x3FBC), ((1106 * (v58 ^ 0x3FBC)) ^ 0x7BBD) * ((v54 & 8) == 0), (1106 * (v58 ^ 0x3FBC)) ^ 0x7BBD, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_10000D160(double a1, __n128 a2, __n128 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  uint64_t v68;

  a2.n128_u16[0] = 31097;
  a2.n128_u8[2] = 121;
  a2.n128_u8[3] = 121;
  a2.n128_u8[4] = 121;
  a2.n128_u8[5] = 121;
  a2.n128_u8[6] = 121;
  a2.n128_u8[7] = 121;
  a3.n128_u16[0] = 2056;
  a3.n128_u8[2] = 8;
  a3.n128_u8[3] = 8;
  a3.n128_u8[4] = 8;
  a3.n128_u8[5] = 8;
  a3.n128_u8[6] = 8;
  a3.n128_u8[7] = 8;
  return ((uint64_t (*)(__n128, __n128, __n128))(*(_QWORD *)(v68 + 8 * a68) - 8))((__n128)xmmword_100DF7490, a2, a3);
}

uint64_t sub_10000D1E4(int a1, char a2, int8x16_t a3, int8x8_t a4, int8x8_t a5, uint64_t a6, char a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a66;
  uint64_t a67;
  int a68;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  int v72;
  int v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  uint64_t v79;
  int8x16x4_t v81;

  v79 = a1 + a9 + (v72 ^ v71);
  v81.val[0].i64[0] = ((_BYTE)a1 + (_BYTE)a9 + (v72 ^ v71)) & 0xF;
  v81.val[0].i64[1] = (v78 + (_BYTE)a9) & 0xF;
  v81.val[1].i64[0] = (v77 + (_BYTE)a9) & 0xF;
  v81.val[1].i64[1] = (v76 + (_BYTE)a9) & 0xF;
  v81.val[2].i64[0] = (v75 + (_BYTE)a9) & 0xF;
  v81.val[2].i64[1] = (v74 + (_BYTE)a9) & 0xF;
  v81.val[3].i64[0] = (a7 + (_BYTE)a9) & 0xF;
  v81.val[3].i64[1] = (a2 + (_BYTE)a9) & 0xF;
  *(int8x8_t *)(a66 + v79) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a67 + v79), *(int8x8_t *)(v69 + (v79 & 0xF) - 7)), veor_s8(*(int8x8_t *)((v79 & 0xF) + v70 - 6), *(int8x8_t *)((v79 & 0xF) + v68 - 2)))), a5), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v81, a3), a4)));
  return ((uint64_t (*)(void))(*(_QWORD *)(a43 + 8 * ((104 * (v73 == a9)) ^ a68)) - 8))();
}

uint64_t sub_10000D2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62,int a63)
{
  int v63;
  uint64_t v64;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v64
                                                                                         + 8
                                                                                         * (((((v63 - 11135) | 0x2324)
                                                                                            + 15417)
                                                                                           * (a63 != a62)) ^ v63))
                                                                             - 12))(a1, a2, a3, a4, (v63 + 19));
}

uint64_t sub_10000D320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a6 + 8542)) - 12))();
}

uint64_t sub_10000D344@<X0>(int a1@<W5>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v11 + (v7 + v2 + 3969)) = *(_BYTE *)(v3 + (v7 + v2 + 3969)) ^ *(_BYTE *)(v5 + ((v7 + v2 + 3969) & 0xFLL)) ^ *(_BYTE *)((((_BYTE)v7 + (_BYTE)v2 - 127) & 0xF) + v6 + 1) ^ *(_BYTE *)((((_BYTE)v7 + (_BYTE)v2 - 127) & 0xF) + v4 + 5) ^ (((v7 + v2 - 127) & 0xF) * v9) ^ 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (((v2 - 1 != (((a1 + 1998) | a2) ^ v8)) * v10) ^ (a1 + 2139)))
                            - 12))();
}

uint64_t sub_10000D3B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;
  int v8;

  v8 = (v5 ^ 0x250EAA26) + 566043860 + (a5 & 0xBCFF5F8E ^ 0xB4E20B82) != 3467 * (v6 ^ 0x3387) + 3958851;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                                         + 8
                                                                                         * (((2 * v8) | (v8 << 6)) ^ v6))
                                                                             - 12))(a1, a2, a3, a4, (2 * v6) ^ 0x54BCu);
}

uint64_t sub_10000D440@<X0>(unsigned int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  *(_BYTE *)(v8 + (v7 - 1899566356)) = *(_BYTE *)(v2 + (v7 - 1899566356)) ^ *(_BYTE *)(v4 + ((v7 - 1899566356) & 0xFLL)) ^ *(_BYTE *)((((_BYTE)v7 - 20) & 0xF) + v5 + 1) ^ *(_BYTE *)((((_BYTE)v7 - 20) & 0xF) + v3 + 5) ^ (((v7 - 20) & 0xF) * ((v6 + 103) & 0xE2 ^ 0xDB)) ^ 8;
  v10 = a1 < v1;
  if (v10 == (v7 - 1895579768) < 0x3CD49B)
    v10 = v7 - 1895579768 < a1;
  return (*(uint64_t (**)(void))(v9 + 8 * ((60637 * v10) ^ v6)))();
}

uint64_t sub_10000D4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int8x16_t *v34;

  v34 = *(int8x16_t **)(v31 + 16);
  *(int8x16_t *)(v33 - 240) = veorq_s8(*(int8x16_t *)*(_QWORD *)(v31 + 8), (int8x16_t)xmmword_100DF74C0);
  *(int8x16_t *)(v33 - 256) = veorq_s8(*v34, (int8x16_t)xmmword_100DF74D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * (int)(a5 ^ (16951 * (v33 != 240)))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_10000D558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (int)((a5 + 302464093) & 0xEDF8DFFF ^ (52425 * (v5 == v6))))
                            - ((((a5 + 302464093) & 0xEDF8DFFF) - 176258245) & 0xBAFFBEF5 ^ 0xB07E9234)))();
}

uint64_t sub_10000D5BC@<X0>(unsigned int a1@<W8>)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 160) = *v1;
  *(_BYTE *)(v3 - 159) = v1[1];
  *(_BYTE *)(v3 - 158) = v1[2];
  *(_BYTE *)(v3 - 157) = v1[3];
  *(_BYTE *)(v3 - 156) = v1[4];
  *(_BYTE *)(v3 - 155) = v1[5];
  *(_BYTE *)(v3 - 154) = v1[6];
  *(_BYTE *)(v3 - 153) = v1[7];
  *(_BYTE *)(v3 - 152) = v1[8];
  *(_BYTE *)(v3 - 151) = v1[9];
  *(_BYTE *)(v3 - 150) = v1[10];
  *(_BYTE *)(v3 - 149) = v1[11];
  *(_BYTE *)(v3 - 148) = v1[12];
  *(_BYTE *)(v3 - 147) = v1[13];
  *(_BYTE *)(v3 - 146) = v1[14];
  *(_BYTE *)(v3 - 145) = v1[15];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((31306 * (a1 > 0x6620A163)) ^ (a1 + 1333896069))) - 4))();
}

uint64_t sub_10000D688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  int v36;

  if (v33)
    v35 = v32 == 0;
  else
    v35 = 1;
  v36 = !v35;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((v36 * (3137 * (v31 ^ 0x33A6) - 12475)) | v31)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_10000D6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  int v32;
  char v33;
  uint64_t v34;
  int v35;
  int v36;
  _BOOL4 v38;

  v35 = a11 - ((2 * a11 + 1205832492) & 0x5F5743C6) - 744790151;
  v36 = ((v35 << (v33 ^ 0xFE)) & (v31 - 1376876294) ^ 0xD4601C6) + (v35 ^ 0x795CFD1C);
  v38 = ((v36 + 1) & 0xF) - ((2 * (v36 + 1)) & 0x10) + 700416054 == ((419 * (v32 ^ 0x33FB)) ^ 0x29BF119D)
     && v36 != ((v32 - 670) ^ 0x56F76DFB);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((23069 * v38) ^ v32)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_10000D79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v54;
  int v55;
  unsigned __int8 *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  unsigned int v61;
  char *v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  char *v75;
  int v76;
  char *v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unint64_t v82;
  int v83;
  char v84;
  char v85;
  int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  uint64_t v102;
  int v103;
  unsigned int v104;
  uint64_t v105;
  char v106;
  int v107;
  char *v108;
  char *v109;
  char *v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  unsigned int v119;
  int v120;
  int v121;
  unsigned int v122;
  char *v123;
  unsigned int v124;
  char *v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  char *v130;
  int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  uint64_t v135;
  int v136;
  int v137;
  int v138;
  unint64_t v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  int v152;
  int v153;
  unsigned int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  int v164;
  int v165;
  unsigned int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  int v183;
  int v184;
  unsigned int v185;
  int v186;
  int v187;
  unsigned int v188;
  int v189;
  int v190;
  unsigned int v191;
  unsigned int v192;
  int v193;
  int v194;
  unsigned int v195;
  unsigned int v196;
  int v197;
  unsigned int v198;
  unsigned int v199;
  int v200;
  unsigned int v201;
  int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  int v207;
  unsigned int v208;
  int v209;
  unsigned int v210;
  unsigned int v211;
  int v212;
  int v213;
  int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  unsigned int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  unsigned int v234;
  int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  int v240;
  unsigned int v241;
  int v242;
  unsigned int v243;
  unsigned int v244;
  int v245;
  unsigned int v246;
  unsigned int v247;
  int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  int v258;
  int v259;
  int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  int v265;
  unsigned int v266;
  unsigned int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  uint64_t v274;
  char *v275;
  char *v276;
  int v277;
  int v278;
  uint64_t v279;
  char *v280;
  int v281;
  unsigned int v282;
  uint64_t v283;
  int v284;
  int v285;
  unint64_t v286;
  int v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  char v293;
  int v294;
  int v295;
  int v296;
  int v297;
  unsigned int v298;
  int v299;
  int v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  unint64_t v313;
  unint64_t v314;
  unint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  unint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  int v327;
  char *v328;
  uint64_t v329;
  int v330;
  char *v331;
  int v332;
  unsigned int v333;
  __int16 v334;
  int v335;
  unsigned int v336;
  int v337;
  unsigned int v338;
  unsigned __int8 *v339;
  int v340;
  int v341;

  v58 = (char *)*(&off_10112C750 + v54 - 32782) - 2068026831;
  v59 = (char *)*(&off_10112C750 + (v54 ^ 0x96E7)) - 229211038;
  v60 = (char *)*(&off_10112C750 + (v54 ^ 0x98F5)) - 1155223410;
  v61 = v58[*(unsigned __int8 *)(v57 - 252) ^ 0x2ALL];
  v62 = (char *)*(&off_10112C750 + (v54 ^ 0x9B04)) - 1399619747;
  v63 = ((((v61 ^ (v61 >> 4) ^ 0xCA) - ((2 * (v61 ^ (v61 >> 4) ^ 0xCA)) & 0x46)) << 24) - 1560281088) ^ 0xA3000000;
  v64 = v59[*(unsigned __int8 *)(v57 - 251) ^ 0x40];
  v340 = v55;
  v339 = v56;
  v65 = v64 - ((2 * v64 + 124) & 0x6A) - 13;
  v66 = ((((v65 ^ 0x96) - ((2 * (v65 ^ 0x96)) & 0xF6)) << 16) - 1619329024) ^ 0x9F7B0000;
  v67 = (v66 - ((2 * v66) & 0x3A3E0000) + 488604633) ^ 0x1D1F83D9 | (v63 - ((2 * v63) & 0x9C000000) - 823184722) ^ 0xCEEF32AE;
  v68 = v60[*(unsigned __int8 *)(v57 - 250) ^ 0x87];
  v69 = v68 - ((2 * v68 + 4) & 0xFFFFFFE0) + 114;
  v70 = ((v69 >> 4) & 9 ^ 0xFFFFFFFE) + ((2 * ((v69 >> 4) & 9)) | 0xFFFFFFA6);
  v337 = ((v70 + 46) & 0x73 | ((_BYTE)v70 - 82) & 8) ^ v69;
  v71 = ((((v337 ^ 0x12) - ((2 * (v337 ^ 0x12)) & 0x1B8)) << 8) + 2030361600) ^ 0x7904DC00;
  v72 = *(unsigned __int8 *)(v57 - 249) ^ 0xC3 ^ v62[*(unsigned __int8 *)(v57 - 249) ^ 0xA0];
  v73 = (v71 - ((2 * v71) & 0x54B1AE00) + 1784207184) ^ 0x6A58D750 | (v72 - ((2 * v72) & 0x196) - 2024288053) ^ 0x8757D0CB;
  v74 = (v73 - ((2 * v73) & 0x318CA36A) - 1731833419) ^ 0x98C651B5 | (v67 - ((2 * v67) & 0x1D8AB81C) + 247815182) ^ 0xEC55C0E;
  v336 = v74 - ((2 * v74) & 0xE994774) + 122463162;
  v75 = (char *)*(&off_10112C750 + (v54 ^ 0x9476)) - 702251535;
  v76 = v54;
  v77 = (char *)*(&off_10112C750 + v54 - 33214) - 1232202271;
  v78 = ((~(2 * ((v65 ^ 0x35) & 0xFFFFFFFD)) + (v65 ^ 0x35)) << 28) + 1610612736;
  v79 = ((v78 ^ 0x50000000) - ((2 * v78) & 0x40000000) + 642161353) ^ 0x26469AC9 | (((v65 >> 4) ^ 1)
                                                                                  - ((v65 >> 3) & 0xC)
                                                                                  - 1743674266) ^ 0x9811A466;
  v80 = v79 - ((2 * v79) & 0x64CB7180) + 845527232;
  v81 = *(_DWORD *)&v75[4 * (HIBYTE(v336) ^ 0xDC)] ^ HIBYTE(v336) ^ ((HIBYTE(v336) ^ 0xD3)
                                                                   - 1467322699
                                                                   + ((2 * (HIBYTE(v336) ^ 0xD3) + 44) & 0x13C ^ 0xAEE59FFF));
  HIDWORD(v82) = v80 ^ 0x6BD6555;
  LODWORD(v82) = v80 ^ 0xAAAAAAAA;
  v332 = *(_DWORD *)&v77[4
                       * (((v82 >> 28) - ((2 * (v82 >> 28)) & 0xEAC363E0) - 178146832) ^ 0xB8EC6878)];
  v83 = (2 * (v81 & 2)) ^ 4 | v81 & 2;
  v84 = v59[*(unsigned __int8 *)(v57 - 255) ^ 0x52];
  v85 = v84 - ((2 * v84 + 124) & (3 * (v54 ^ 0x9D) + 46));
  v86 = v60[*(unsigned __int8 *)(v57 - 254) ^ 9];
  v330 = v86 - ((2 * v86 + 4) & 0x44);
  v87 = v58[*(unsigned __int8 *)(v57 - 248) ^ 0x48];
  v88 = ((((v87 ^ (v87 >> 4) ^ 2) - ((2 * (v87 ^ (v87 >> 4) ^ 2)) & 0x4E)) << 24) + 654311424) ^ 0x27000000;
  LOBYTE(v87) = v59[*(unsigned __int8 *)(v57 - 247) ^ 0x79];
  v89 = v88 - ((2 * v88) & 0x9C000000);
  v90 = ((((v87 - 2 * ((v87 + 62) & 0x5F ^ v87 & 1) + 28) ^ 0xE)
        - 2 * (((v87 - 2 * ((v87 + 62) & 0x5F ^ v87 & 1) + 28) ^ 0xE) & 0xF)) << 16)
      + 688848896;
  v91 = ((2 * v90) & 0x5FEE0000 ^ 0x520E0000) + (v90 ^ 0x6F8BFBD);
  v89 -= 825003029;
  v92 = v91 - 804765629;
  v93 = v91
      + (((v91 - 804765629) | v89 ^ 0xCED373EB) ^ 0x22502210)
      - ((2 * ((v91 - 804765629) | v89 ^ 0xCED373EB)) & 0xBB5FBBDE)
      + 1;
  v94 = (v89 ^ ((v89 ^ 0x312C8C14) - ((2 * (v89 ^ 0x312C8C14) + 2) & 0x3637B58) + 28425645) ^ 0xE7FD0541 ^ (v93 - ((2 * v93 + 1534082148) & 0x513F960C) - 698881736))
      + v92;
  v95 = v94 - ((2 * v94) & 0xD0059842) - 402469855;
  v96 = v60[*(unsigned __int8 *)(v57 - 246) ^ 0xF4];
  v97 = v96 - ((2 * v96 + 4) & 0xFFFFFFA6) + 85;
  v98 = ((((v97 ^ 0xE6 ^ (v97 >> 4) & 9) - ((2 * (v97 ^ 0xE6 ^ (v97 >> 4) & 9)) & 0x146)) << 8)
       + 1511367424) ^ 0x5A15A300;
  v99 = v58[*(unsigned __int8 *)(v57 - 256) ^ 0x4ELL];
  v100 = v58[*(unsigned __int8 *)(v57 - 244) ^ 0x62];
  LOWORD(v93) = *(unsigned __int8 *)(v57 - 245) ^ 0x4A ^ v62[*(unsigned __int8 *)(v57 - 245) ^ 0x29];
  LOWORD(v98) = (v98 - ((2 * v98) & 0x6A00) + 13714) ^ 0x3592 | (v93 - ((2 * v93) & 0xAAAA) - 4779) ^ 0xED55;
  v334 = v98 - ((2 * v98) & 0x9812) - 13303;
  LOBYTE(v98) = v59[*(unsigned __int8 *)(v57 - 243) ^ 0x27];
  v101 = v60[*(unsigned __int8 *)(v57 - 242) ^ 0xCDLL];
  v102 = *(unsigned __int8 *)(v57 - 253);
  v103 = v62[v102 ^ 0x25];
  v104 = v101 + ((2 * v101 + 4) & 0xFFFFFF80) - 62;
  v105 = *(unsigned __int8 *)(v57 - 241);
  v106 = v62[v105 ^ 0x5C];
  v107 = (v100 ^ (v100 >> 4) ^ 0x7E) + 100739397 - ((2 * (v100 ^ (v100 >> 4) ^ 0x7E)) & 0xA6) + 14;
  v108 = v77;
  v331 = v77;
  LODWORD(v77) = *(_DWORD *)&v77[4 * ((v98 - 2 * ((v98 + 62) & 0x49 ^ v98 & 1) - 122) ^ 0xC6)];
  v109 = (char *)*(&off_10112C750 + (v76 ^ 0x91F6)) - 1159539855;
  LODWORD(v59) = *(_DWORD *)&v109[4
                                * (v104 ^ 0x9C ^ (((((v104 >> 4) & 9 ^ 0x8E) - 36) ^ 0x9A)
                                                                                  + 48))];
  HIDWORD(v82) = v59 ^ 0xF13B44;
  LODWORD(v82) = v59 ^ 0xBFFFFFFF;
  LODWORD(v62) = v76;
  v110 = (char *)*(&off_10112C750 + (v76 ^ 0x8176)) - 1935158543;
  v111 = v77 ^ *(_DWORD *)&v75[4 * (v107 ^ 0x601294A)] ^ ((v107 ^ 0x6012945)
                                                                      - ((2 * (v107 ^ 0x6012945) - 570789844) & 0xF04A78B2)
                                                                      - 417172369) ^ (480440776
                                                                                    * (v77 ^ 0x812BD2CF)
                                                                                    - ((960881552
                                                                                      * (v77 ^ 0x812BD2CF)) & 0xB46DDF70)
                                                                                    - 633933892) ^ ((v82 >> 28)
                                                                                                  - ((2 * (v82 >> 28)) & 0x27536860)
                                                                                                  + 329888816);
  LODWORD(v105) = v110[v105 ^ 0x25 ^ v106];
  LODWORD(v105) = v105 ^ 0xBC ^ ((v105 >> 4) & 3 | 0xA0);
  LODWORD(v77) = v111 ^ v107 ^ (v105 - ((2 * v105) & 0x9A) - 974570163);
  v328 = (char *)*(&off_10112C750 + (v76 ^ 0x9AFF)) - 1748684454;
  v112 = *(_DWORD *)&v328[4
                        * ((((2 * (BYTE2(v111) ^ 0x2061206E)) | 0x7B63264A) - (BYTE2(v111) ^ 0x2061206E) + 1112435931) ^ 0x9DD0B34E)];
  v113 = 2071231393 * v112 - ((1994979138 * v112 + 536461830) & 0x515E0FA4) + 2024532181;
  v114 = v99 ^ (v99 >> 4);
  v115 = (v114 ^ 0xC5) - ((2 * (v114 ^ 0xC5)) & 0x14E) + 1868619687;
  v116 = *(_DWORD *)&v108[4 * ((v85 + 38) ^ 0xB6)];
  LODWORD(v108) = *(_DWORD *)&v109[4
                                 * ((v330 - 92) ^ 0x58 ^ (45
                                                                                          - (((v330 - 92) >> 4) & 9 ^ 8)))];
  HIDWORD(v82) = v108 ^ 0xF13B44;
  LODWORD(v82) = v108 ^ 0xBFFFFFFF;
  v117 = ((2 * (v102 ^ v103 ^ 0x1A)) & 0xFFFFFF3F) + (v102 ^ v103 ^ 0x3FF31DC5);
  v118 = 2 * v117 - ((4 * v117 + 132) & 0xC8) + 423;
  v119 = v110[v117 + 367772214 + (v118 & 0xEE ^ 0xAA212047) + ((2 * v118) & 0x98 ^ 0xFFFFFF77)];
  v120 = v119 ^ (5 - (((v119 >> 4) & 2) + ((v119 >> 4) | 0xFE)));
  v121 = v115 ^ v116 ^ ((v115 ^ 0x6F60DFA7) - ((2 * (v115 ^ 0x6F60DFA7) - 570789844) & 0xFC3CE6D0) - 316953730) ^ *(_DWORD *)&v75[4 * (v114 ^ 0xCA)] ^ (480440776 * (v116 ^ 0x812BD2CF) - ((960881552 * (v116 ^ 0x812BD2CF)) & 0xB2712FA0) + 1496881104) ^ ((v82 >> 28) - ((2 * (v82 >> 28)) & 0x835D63B6) - 1045515813) ^ 0x427B09DF ^ ((v120 ^ 0x1B) - ((2 * v120) & 0x148) - 935026780);
  v122 = (((v77 >> 8) & 0xA8 ^ 0x4A777729) + ((v77 >> 8) & 0x57) - 1) ^ 0x6B1872AB;
  LODWORD(v108) = ((BYTE1(v77) ^ 0xFFFFFF7E) + 1085059622 + ((2 * BYTE1(v77)) | 0x7EA69BB6)) ^ 0x27516D7B;
  v123 = (char *)*(&off_10112C750 + (int)(v62 ^ 0x98B6)) - 1993841999;
  v124 = ((v77 & 0x32 ^ 0xCB3C6632) - (v77 & 0x32) + (v77 ^ 0xCC)) ^ 0xE31B7A22;
  v341 = (int)v62;
  v125 = (char *)*(&off_10112C750 + (int)(v62 ^ 0x9636)) - 1728105423;
  v126 = v77 ^ 0xF80D92AF;
  LODWORD(a39) = v77 ^ 0xF80D92AF;
  v127 = (v77 >> 24) ^ 0xF7BDBBE8;
  LODWORD(v77) = (v77 >> 23) & 0x196 ^ 6;
  v128 = *(_DWORD *)&v125[4 * ((((2 * v124) | 0x6FC34F90) - v124 - 937535432) ^ 0x1FC6BBA0)];
  HIDWORD(v82) = v128 ^ 0x7DC;
  LODWORD(v82) = v128 ^ 0x80FEC000;
  v129 = (_DWORD)v77
       + v127
       - ((~((4 * ((_DWORD)v77 + v127) + 84) & 0x50) + 2 * ((_DWORD)v77 + v127) + 19) & 0xE8)
       - ((2 * (((4 * ((_DWORD)v77 + v127) + 84) & 0x50) - (2 * ((_DWORD)v77 + v127) + 19))) & 0x150)
       - 2087714326;
  v130 = (char *)*(&off_10112C750 + (int)(v62 ^ 0x9B7C)) - 1874693067;
  v131 = v130[(v129 - ((2 * v129 + 1445484750) & 0x4150F2EC) + 1673307613) ^ 0x9EC99022];
  v132 = (8 * (v131 + 107) - ((16 * (v131 + 107)) & 0xFFFFFF9F) + 75) ^ (v131 + 107 - ((2 * (_BYTE)v131 + 22) & 0x40)) ^ (16 * (v131 + 107) - 32 * ((v131 + 107) & 1) + 21) ^ 0xFE;
  HIDWORD(v323) = v121;
  v133 = *(_DWORD *)&v123[4 * ((((2 * (_DWORD)v108) | 0x4A8713D6) - (_DWORD)v108 - 625183211) ^ 0xBD41A964)] ^ v113 ^ (((2 * v122) | 0x1D7DB1FA) - v122 - 247388413) ^ v121 ^ ((v82 >> 11) - ((2 * (v82 >> 11)) & 0xBFBC4396) - 539090485) ^ (v132 - ((2 * v132) & 0xDA) + 894715245);
  v136 = 1627259592 - v83;
  if (((v83 - 2) & (v332 ^ 0xC22B6E2)) == ((2 * ((v83 - 2) & (v332 ^ 0xC22B6E2))) & 0x22125068))
    v136 = v83 + 1627259588;
  v134 = (~(960881552 * (v332 ^ 0x812BD2CF)) | 0x10F6E21F) + 480440776 * (v332 ^ 0x812BD2CF) - 142307598;
  v137 = (v332 ^ 0x76AF5C3E ^ v134)
       - 1627259590
       + v136
       - ((2 * ((v332 ^ 0x76AF5C3E ^ v134) - 1627259590 + v136)) & 0x26A24B6A)
       - 1823398475;
  v138 = *(_DWORD *)&v109[4 * (v337 ^ 0x8F)];
  HIDWORD(v139) = v138 ^ 0xF13B44;
  LODWORD(v139) = v138 ^ 0xBFFFFFFF;
  v140 = ((v81 & 0xFFFFFFFD ^ 0x637AC3F0)
        + (v81 & 0x94EF6410 ^ 0x94852402)
        - ((v81 & 0xFFFFFFFD ^ 0x637AC3F0) & 0x94EF6410)) & 0xFFFFFFFD ^ ((v139 >> 28)
                                                                        - ((2 * (v139 >> 28)) & 0xC897540E)
                                                                        - 464803321) ^ v137;
  v135 = ((v336 & 0x99 ^ 0x48341191) + (v336 & 0x66 ^ 0x5804027) - 1) ^ 0x4DB4510FLL;
  v141 = ((2
         * (v110[v135] ^ 0xDD ^ (((v110[v135] >> 3) & 4)
                                                - ((v110[v135] >> 4) & 3)
                                                - 63))) & 0x1AE)
       + (v110[v135] ^ 0xDD ^ (((v110[v135] >> 3) & 4)
                                                               - ((v110[v135] >> 4) & 3)
                                                               - 63) ^ 0x99CDFFD7);
  LODWORD(v135) = v141 + 1714552873;
  v142 = ((((v141 + 1714552873) ^ 0x66AD23BF ^ v140)
         - ((2 * ((v141 + 1714552873) ^ 0x66AD23BF ^ v140)) & 0x92E56C12)
         + 1232254473) ^ 0x566B9D61)
       + 1;
  v143 = (v142 ^ 0x71FED87F) + v141 + ((2 * v142) & 0xE3FDB0FE);
  v144 = (v140 ^ ((v140 ^ 0x79B408D7) - ((2 * (v140 ^ 0x79B408D7) + 2) & 0xA704EC98) + 1401058893) ^ 0x1B149AA5 ^ (v143 - ((2 * v143 - 395948204) & 0x9DBA3782) - 1022344341))
       + v135;
  LODWORD(v135) = *(_DWORD *)&v331[4 * (BYTE2(v95) ^ 0xEC)];
  v145 = (((unsigned __int16)(v95 ^ v334) >> 8) ^ 0x13 | 0xF7E117D0)
       - (((unsigned __int16)(v95 ^ v334) >> 8) ^ 0x13 | 0x81EE82F)
       + 136243247;
  v146 = *(_DWORD *)&v109[4 * (((v145 & 0x67E101AB ^ 0x25904129) + (v145 & 0x90001E54 ^ 0x10041E51) - 1) ^ 0xC2754867)];
  HIDWORD(v139) = v146 ^ 0xF13B44;
  LODWORD(v139) = v146 ^ 0xBFFFFFFF;
  v147 = (((2 * ((v95 ^ v334) ^ 0xC2)) & 0x194) - ((v95 ^ v334) ^ 0xC2) + 1422880053) ^ 0x16D96B3D;
  v148 = v110[((v147 | 0x767EAD9) - (v147 | 0xF8981526) - 124250842) ^ 0x4571ECFELL];
  v149 = ((v148 >> 3) | 0xFFFFFFFB) - ((v148 >> 4) & 3);
  v150 = v148 ^ 0x7D ^ ((v149 + 10) & 0xFFFFFFFB | (117 - v149) & 0x64);
  HIDWORD(v324) = *(_DWORD *)&v75[4 * (HIBYTE(v95) ^ 0x36)] ^ (HIBYTE(v95) | 0xCDF92600) ^ v135 ^ ((HIBYTE(v95) ^ 0x39)
                                                                                                 - 2016601536
                                                                                                 + ((2 * (HIBYTE(v95) ^ 0x39) + 44) & 0x52 ^ 0xEE65BFFF)) ^ (480440776 * (v135 ^ 0x812BD2CF) - ((21357456 * (v135 ^ 0x812BD2CF)) & 0x6D67B20) - 2090123882) ^ ((v139 >> 28) - ((2 * (v139 >> 28)) & 0x4BF113C) - 2107668322) ^ (v150 - ((2 * v150) & 0x1F2) + 1789626105);
  HIDWORD(v322) = v133 ^ 0xAD2820D5;
  LODWORD(v323) = v144 - ((2 * v144) & 0xA32E298A) + 1368855749;
  v151 = v323 ^ v133 ^ 0xAD2820D5;
  v333 = v151 ^ HIDWORD(v324) ^ 0xEA4E6B95;
  v152 = ((v333 ^ v126) >> 16) ^ 0x278A96;
  v153 = *(_DWORD *)&v328[4 * ((((2 * v152) & 0x4314A8) - v152 - 664910421) ^ 0xD879CF5E)];
  v154 = (((v333 ^ v126) >> 8) & 0xE9 ^ 0x844324F6) - (((v333 ^ v126) >> 8) & 0x16);
  v155 = (((v333 ^ v126) ^ 0x2A) - ((2 * ((v333 ^ v126) ^ 0x2A)) & 0x52) + 1160238889) ^ 0x4523D529;
  v156 = *(_DWORD *)&v125[4 * ((v155 - ((2 * v155) & 0x809BA) - 608795427) ^ 0xDBB28655)];
  HIDWORD(v139) = v156 ^ 0x7DC;
  LODWORD(v139) = v156 ^ 0x80FEC000;
  v157 = v130[((v333 ^ v126) >> 24) ^ 0x39];
  v158 = v157 - ((2 * v157 - 106) & 0xFFFFFF9F);
  v159 = (v158 - 102) ^ (9 - (((64 - 32 * ((_BYTE)v158 - 95)) & 0x40) + 16 * (v158 - 95))) ^ (((8 * (v158 - 102)) ^ 0x78)
                                                                                            - ((2
                                                                                              * ((8 * (v158 - 102)) ^ 0x78)) & 0x60)
                                                                                            - 78) ^ 0xD4;
  v160 = *(_DWORD *)&v123[4
                        * (((v154 & 0x12054 ^ 0x2980DB40) + (v154 ^ 0xC4412436) - ((v154 ^ 0xC4412436) & 0x54)) ^ 0x6983FBD5)] ^ v133 ^ (2071231393 * v153 - ((-152504510 * v153 - 1611021818) & 0xBF8D3ACC) + 801341033) ^ ((v139 >> 11) - ((2 * (v139 >> 11)) & 0xAC073C0C) - 704406010) ^ (((2 * (((unsigned __int16)(v333 ^ v126) >> 8) ^ 0x38A640C4)) & 0x21040198) - (((unsigned __int16)(v333 ^ v126) >> 8) ^ 0x38A640C4) + 762074931) ^ (v159 - ((2 * v159) & 0xD8) + 835089516) ^ 0xB667CD28;
  LODWORD(v321) = v160 ^ HIDWORD(v324) ^ 0xEA4E6B95;
  v161 = v321 ^ 0xCAC15179 ^ v333 ^ v126;
  LODWORD(v329) = v333 ^ v126;
  v162 = ((((v161 ^ 0xDB4B82B4) >> (BYTE2(v95) & 0x10))
         - 646901009
         + (~(2 * ((v161 ^ 0xDB4B82B4) >> (BYTE2(v95) & 0x10))) | 0x4D1DDA21)
         + 1) ^ 0xD97112EF) >> (BYTE2(v95) & 0x10 ^ 0x10);
  v163 = (v162 - ((2 * v162) & 0xB0) - 40) ^ 0x10098198;
  v164 = *(_DWORD *)&v328[4 * ((v163 - ((2 * v163) & 0x200101C6) + 2138367715) ^ 0x6F7D673D)];
  v165 = ((2 * (BYTE1(v161) ^ 0x3367FA7D)) | 0x7DDAFF62) - (BYTE1(v161) ^ 0x3367FA7D) + 1091731535;
  v166 = ((BYTE1(v161) ^ 0xE0) - ((2 * (BYTE1(v161) ^ 0xE0)) & 0xFFFFFF83) + 567450305) ^ 0x1D212A3;
  LODWORD(v135) = ((v321 ^ 0x79 ^ (v333 ^ v126) ^ 0xC1 | 0x373D642F)
                 - (v321 ^ 0x79 ^ (v333 ^ v126) ^ 0xC1 | 0xC8C29BD0)
                 - 926770224) ^ 0xB234A5BF;
  LODWORD(v135) = *(_DWORD *)&v125[4 * ((((2 * (_DWORD)v135) | 0x6009875C) - (_DWORD)v135 - 805618606) ^ 0xB50D0222)];
  HIDWORD(v139) = v135 ^ 0x7DC;
  LODWORD(v139) = v135 ^ 0x80FEC000;
  v167 = v130[HIBYTE(v161) ^ 0xFBLL];
  v168 = v167 - ((2 * (_BYTE)v167 + 6) & 0xE) + 82;
  v169 = v168 ^ (((16 * v168) ^ 0x70) + (~(2 * ((16 * v168) ^ 0x70)) | 0x3F) + 102) ^ (((8 * v168) ^ 0x38)
                                                                                     - ((2 * ((8 * v168) ^ 0x38)) & 0xB0)
                                                                                     + 95) ^ 0xBD;
  v170 = *(_DWORD *)&v123[4 * (((v166 | 0xEDF4E055) - (v166 | 0x120B1FAA) + 302718890) ^ 0xCDF468D0)] ^ ((v139 >> 11) - ((2 * (v139 >> 11)) & 0x4093EEF0) + 541718392) ^ (v169 - ((2 * v169) & 0x1A6) - 556578861) ^ ((v165 & 0xA0307 ^ 0x30783A05) + (v165 & 0xD8000F8 ^ 0x8D810049) - 1) ^ 0x547EB0BA ^ (2071231393 * v164 - ((-1611021818 - 152504510 * v164) & 0x9EB9791E) - 1621516910);
  LODWORD(v322) = v151;
  v171 = v170 ^ v151;
  v338 = v170 ^ v151 ^ 0xBADE8217;
  LODWORD(v135) = ((unsigned __int16)(v338 ^ v333 ^ v126) >> 8);
  v172 = ((v135 ^ 0xD8 | 0xA71E12BF) - (v135 ^ 0xD8 | 0x58E1ED40) + 1491201344) ^ 0xA35C2A3B;
  v173 = *(_DWORD *)&v328[4
                        * (((((v338 ^ v329) >> 16) & 0xF0 ^ 0x15409561)
                          - (((v338 ^ v329) >> 16) | 0xF7FFFFF0)
                          - 2) ^ 0x1D409510)];
  LODWORD(v135) = (((2 * (v135 ^ 0xC2)) | 0xD83D3C0E) - (v135 ^ 0xC2) + 333537785) ^ 0xEE369E2B;
  v174 = *(_DWORD *)&v125[4
                        * ((((v338 ^ v329) ^ 0xEA)
                          + ((v338 ^ v329) & 0xA1 ^ 0xBA868901)
                          - (((v338 ^ v329) ^ 0xEA) & 0xA1)) ^ 0xBA8689DA)];
  HIDWORD(v139) = v174 ^ 0x7DC;
  LODWORD(v139) = v174 ^ 0x80FEC000;
  v175 = v130[((v338 ^ v333 ^ v126) >> 24) ^ 0x98];
  v176 = (v175 - ((2 * v175 - 106) & 0xFFFFFFBF) + 42) ^ (16 * (v175 - ((2 * v175 - 106) & 0xFFFFFFBF) + 49) - 110) ^ 0x33 ^ (94 - (((96 - 16 * (v175 - ((2 * v175 - 106) & 0xFFFFFFBF) + 49)) & 0x50) + 8 * (v175 - ((2 * v175 - 106) & 0xFFFFFFBF) + 49)));
  HIDWORD(v321) = v160;
  LODWORD(v319) = v170 ^ v160;
  HIDWORD(v319) = v338 ^ v333 ^ v126 ^ 0xA20991B5;
  v177 = *(_DWORD *)&v123[4 * (((_DWORD)v135 - ((2 * (_DWORD)v135) & 0x369B3D98) + 1531813580) ^ 0x59659ED8)] ^ ((v139 >> 11) - ((2 * (v139 >> 11)) & 0xF1FDDC3A) + 2029973021) ^ (2071231393 * v173 - ((115930946 * v173 + 268026374) & 0xB890618) + 1438737423) ^ v170 ^ v160 ^ (((2 * v172) & 0x1E413AE0) - v172 - 1327537521) ^ 0x50C9C189 ^ (v176 - ((2 * v176) & 0x92) + 1028003913);
  LODWORD(v318) = v177 ^ v321 ^ 0xCAC15179;
  v178 = v318 ^ 0x46D155B8 ^ HIDWORD(v319);
  v179 = ((HIWORD(v178) & 0x2A) + (BYTE2(v178) ^ 0xFFFFFFFE) + (BYTE2(v178) | 0xF7CD3BD5) + 1) ^ 0x76CDB2D5;
  v180 = (((v178 >> 8) & 0x22 ^ 0x2CC28422) - ((v178 >> 8) & 0x22) + (BYTE1(v178) ^ 0xC5)) ^ 0xA4C2D446;
  v181 = *(_DWORD *)&v328[4 * ((v179 - ((2 * v179) & 0xDCBC2BFE) - 295823873) ^ 0x6F5E9CED)];
  v182 = ((2 * v180) | 0x8FD28CC6) - v180 - 1206470243;
  v183 = 2071231393 * v181 - ((921237314 * v181 + 536461830) & 0x2F958342) + 1741136548;
  v184 = *(_DWORD *)&v125[4
                        * (((v318 ^ 0xB8 ^ BYTE4(v319) ^ 0x802002D0 | 0x9839597D)
                          - (v318 ^ 0xB8 ^ BYTE4(v319) ^ 0x802002D0 | 0x67C6A682)
                          + 1741072002) ^ 0x18195BDF)];
  HIDWORD(v139) = v184 ^ 0x7DC;
  LODWORD(v139) = v184 ^ 0x80FEC000;
  v185 = v178 ^ 0xE1630FFF;
  v186 = v130[HIBYTE(v178) ^ 0xE9];
  v187 = v186 - ((2 * v186 + 22) & 0x12) - 44;
  v188 = v187 ^ (114 - ((16 * v187) ^ 0xFFFFFF90)) ^ (((8 * v187) ^ 0x48) + (~(2 * ((8 * v187) ^ 0x48)) | 0x5F) + 88) ^ 0x2C;
  v189 = v183 ^ *(_DWORD *)&v123[4 * (v182 ^ 0xCFE916EE)] ^ ((v139 >> 11)
                                                           - ((2 * (v139 >> 11)) & 0xAB121DC0)
                                                           + 1435045600) ^ v177 ^ v182 ^ (v188
                                                                                        - ((2 * v188) & 0x18)
                                                                                        - 1958538996);
  v190 = (v189 & 0x40 ^ 0x7FFF7FDB) + 2 * (v189 & 0x40);
  v191 = (((2 * (v189 & 0xFFFFFFBF ^ 0x4CEC6E82)) | 0xEE9963D4) - (v189 & 0xFFFFFFBF ^ 0x4CEC6E82) + 145968662) ^ 0xB7463066;
  v192 = (((2 * v191) & 0x865C9032) - v191 - 1127106586) ^ (-1844337622 - v190 - ((12622 - 2 * v190) & 0x11700));
  v320 = __PAIR64__(v161, v171);
  HIDWORD(v318) = v177;
  v335 = v177 ^ v171;
  v193 = v192 ^ v177 ^ v171;
  HIDWORD(v316) = v193 ^ 0x317CD204;
  v194 = v193 ^ 0x317CD204 ^ v318 ^ 0x46D155B8;
  v195 = v194 ^ v185 ^ 0xC4D2720D;
  v196 = (((2 * (BYTE2(v195) ^ 0x4D)) & 0x146) - (BYTE2(v195) ^ 0x4D) - 1836194724) ^ 0xB2B5C579;
  v197 = 2071231393 * *(_DWORD *)&v328[4 * (((v196 | 0x7095E47E) - (v196 | 0x8F6A1B81) - 1888871551) ^ 0x50ADC5BC)]
       - 805510909;
  LODWORD(v135) = (v192 ^ 0xE7D13ED7) + v197;
  v198 = ((BYTE1(v195) ^ 0x43 | 0x5CD9EEB7) - (BYTE1(v195) ^ 0x43 | 0xA3261148) - 1557786296) ^ 0x13933554;
  v199 = 2 * (((v192 ^ 0xE7D13ED7) & v197) - ((2 * ((v192 ^ 0xE7D13ED7) & v197)) & 0x43E245C8)) - 1008581176;
  v200 = (v135 ^ 0xC3FFFE85) + ((2 * v135) & 0x87FFFD0A) + (v199 ^ 0xC2624183) + ((2 * v199) & 0xFCFFF768 ^ 0x7B3B7CFF);
  v201 = ((v195 & 0xBC ^ 0x808239AD) + (v195 & 0x43) - 1) ^ 0x86861AB4;
  v202 = *(_DWORD *)&v125[4 * ((v201 - ((2 * v201) & 0x40802CE) - 878968473) ^ 0xCD9822CF)];
  HIDWORD(v139) = v202 ^ 0x7DC;
  LODWORD(v139) = v202 ^ 0x80FEC000;
  v203 = v130[((v194 ^ v185) >> 24) ^ 0x41];
  v204 = v203 - ((2 * v203 - 106) & 0xFFFFFF94) + 21;
  v205 = v204 ^ (((8 * v204) ^ 0x50) - ((16 * v204) & 0x40) + 36) ^ (((16 * v204) ^ 0xFFFFFFA0)
                                                                   - ((2 * ((16 * v204) ^ 0xFFFFFFA0)) & 0xC0)
                                                                   + 102) ^ 8;
  v206 = ((v139 >> 11) - ((2 * (v139 >> 11)) & 0xCDB9C04C) + 1725751334) ^ *(_DWORD *)&v123[4
                                                                                          * ((((2 * v198) & 0x229D5EB2)
                                                                                            - v198
                                                                                            + 1857114278) ^ 0x21FB8B91)] ^ (((2 * (BYTE1(v195) ^ 0xC7)) & 4) - (BYTE1(v195) ^ 0xC7) - 952744707) ^ (v205 - ((2 * v205) & 0x17A) + 288686013) ^ (v200 + 1 - 2 * ((v200 + 41942321) & 0x3D33BFB ^ (v200 + 1) & 8) + 1045641507);
  v207 = v193 ^ 0x270B36C1 ^ v206;
  HIDWORD(v317) = v185;
  v208 = v207 ^ v185;
  v209 = *(_DWORD *)&v328[4 * (BYTE2(v208) ^ 0x7B)];
  v210 = 2071231393 * v209 - ((-1611021818 - 152504510 * v209) & 0xA4224700) + 571344003;
  v315 = __PAIR64__(v195, v206);
  HIDWORD(v139) = v206 ^ 0xB7CB;
  LODWORD(v139) = v206 ^ 0xC4940000;
  v211 = (((1037074432 * v209 - ((2074148864 * v209 - 519897088) & 0x92640000) + 968095954) ^ 0xC93278D2) & 0xFFFF8000 | (v210 >> 17)) ^ 0x2908;
  v212 = ((v139 >> 17) - ((2 * (v139 >> 17)) & 0x41F8F0B6) - 1594066853) ^ (v211
                                                                          - 2
                                                                          * (v211 & 0x5E98D05F ^ (v210 >> 17) & 0x12)
                                                                          - 560410547);
  HIDWORD(v139) = v212 ^ 0x1850;
  LODWORD(v139) = v212 ^ 0x9B088000;
  v213 = (v139 >> 15) - ((2 * (v139 >> 15)) & 0x42E80CC8) - 1586231708;
  v214 = ((BYTE1(v208) ^ 0xDB) - ((2 * (BYTE1(v208) ^ 0xDB)) & 0x1A0) + 665227216) ^ 0x2FBE9E41;
  v215 = (((v208 >> 8) & 0xD8 ^ 0x84BF27D1) + ((v208 >> 8) & 0x27) - 1) ^ 0x963F06DB;
  LODWORD(v135) = *(_DWORD *)&v125[4 * (v208 ^ 0xA9)];
  HIDWORD(v139) = v135 ^ 0x7DC;
  LODWORD(v139) = v135 ^ 0x80FEC000;
  v216 = v130[HIBYTE(v208) ^ 0x1DLL];
  v217 = v216 - ((2 * v216 - 106) & 0xFFFFFF84) - 115;
  v218 = v217 ^ (8 * v217) ^ (125 - ((16 * v217) ^ 0x20)) ^ 0x1F;
  v219 = *(_DWORD *)&v123[4 * (((v215 | 0xED7C504A) - (v215 | 0x1283AFB5) + 310620085) ^ 0xFFFC718E)] ^ ((v139 >> 11) - ((2 * (v139 >> 11)) & 0x43772490) - 1581542840) ^ (v218 - ((2 * v218) & 0x170) - 367772744) ^ (v214 - ((2 * v214) & 0x115BF2) + 367767033) ^ 0xA2304611 ^ v213;
  v220 = v194 ^ 0xFA4B9A36 ^ v207;
  v314 = __PAIR64__(v207, v208);
  LODWORD(v135) = v219 ^ v207 ^ 0x4BD22862;
  LODWORD(v312) = v135 ^ v220;
  HIDWORD(v312) = v219 ^ v207;
  v221 = v135 ^ v220 ^ v208;
  v222 = (BYTE2(v221) ^ 0x99) - ((2 * (BYTE2(v221) ^ 0x99)) & 0xAAAAAAAA) - 646267307;
  v223 = *(_DWORD *)&v328[4
                        * (((v222 & 0x800809CE ^ 0x200000CA) + (v222 ^ 0xC5ACD935) - ((v222 ^ 0xC5ACD935) & 0x101645CE)) ^ 0xACC82AD1)];
  v224 = (((2 * (BYTE1(v221) ^ 3)) & 0x4C) - (BYTE1(v221) ^ 3) - 12852775) ^ 0xFFBFE0D9;
  v225 = (((2 * (v221 ^ 0xD3)) | 0x5F57FED2) - (v221 ^ 0xD3) - 799801193) ^ 0x2F8BFECD;
  LOBYTE(v161) = v130[HIBYTE(v221) ^ 0xF8];
  LOBYTE(v161) = v161 - ((2 * v161 + 22) & 0x12) + 84;
  v226 = *(_DWORD *)&v125[4 * ((((2 * v225) | 0x47C7C7A0) - v225 + 1545346096) ^ 0xA3C3E2F5)];
  HIDWORD(v139) = v226 ^ 0x7DC;
  LODWORD(v139) = v226 ^ 0x80FEC000;
  v313 = __PAIR64__(v219, v220);
  v227 = (2071231393 * v223 - ((384366402 * v223 + 536461830) & 0x12062EF6) - 654313346) ^ *(_DWORD *)&v123[4 * ((((2 * v224) | 0x8B8A7AB2) - v224 - 1170554201) ^ 0x45413CA9)] ^ ((v139 >> 11) - ((2 * (v139 >> 11)) & 0xC62A998) + 103896268) ^ (((v161 ^ (8 * v161)) ^ 0x55 ^ (((16 * v161) ^ 0x90) - ((2 * ((16 * v161) ^ 0x90)) & 0x20) - 108)) - 2 * (((v161 ^ (8 * v161)) ^ 0x55 ^ (((16 * v161) ^ 0x90) - ((2 * ((16 * v161) ^ 0x90)) & 0x20) - 108)) & 0x3F) + 1687718719) ^ v219 ^ BYTE1(v221);
  v228 = v220 ^ 0x5A9418D0 ^ v227 ^ 0x459065E7;
  HIDWORD(v311) = v221;
  v229 = v228 ^ v221;
  v230 = v228;
  v231 = ((unsigned __int16)(v228 ^ v221) >> 8);
  v232 = ((v228 ^ v221) >> 16) ^ 0x201024EA;
  v233 = *(_DWORD *)&v328[4 * ((v232 + (HIWORD(v229) & 0xE3 ^ 0x3890101) - (v232 & 0x1000E3)) ^ 0x23892519)];
  v234 = (v229 ^ 0x4EB42B7A) - ((2 * (v229 ^ 0x4EB42B7A)) & 0x950801AC) - 338930474;
  v235 = *(_DWORD *)&v125[4 * (((v234 & 0x81C63 ^ 0x18010042) + (v234 & 0x8570E39C ^ 0x720E315) - 1) ^ 0x9A599C1B)];
  HIDWORD(v139) = v235 ^ 0x7DC;
  LODWORD(v139) = v235 ^ 0x80FEC000;
  v236 = v229 ^ 0x91F48A55;
  v237 = v130[HIBYTE(v229) ^ 0x8ELL];
  v238 = (2 * v237 - 106) & 0xFFFFFF98;
  v237 += 31;
  v239 = (v237 - v238 - 8) ^ (((16 * (v237 - v238 - 8)) ^ 0xFFFFFFC0) - 32 * (v237 & 3) - 70) ^ (((8 * (v237 - v238 - 8)) ^ 0x60)
                                                                                               - ((2
                                                                                                 * ((8 * (v237 - v238 - 8)) ^ 0x60)) & 0xE0)
                                                                                               - 15) ^ 7;
  v240 = (2071231393 * v233 - ((-1611021818 - 152504510 * v233) & 0xC9C0673A) - 1260579680) ^ *(_DWORD *)&v123[4 * ((1741644359 - (v231 ^ 0xB1) + ((2 * (v231 ^ 0xB1)) & 0xBC) + 90) ^ 0x67CF6247)] ^ ((v139 >> 11) - 130010953 + (~(2 * (v139 >> 11)) | 0xF7F9E93)) ^ v227 ^ 0x459065E7 ^ (((2 * (v231 ^ 0x8F500F2)) | 0xEEA61904) - (v231 ^ 0x8F500F2) + 145552254) ^ (v239 - ((2 * v239) & 0x78) - 441626820);
  LODWORD(v310) = v227 ^ 0x459065E7 ^ v135;
  HIDWORD(v310) = v236;
  HIDWORD(v329) = v240 ^ 0x8C20523 ^ v310;
  v241 = HIDWORD(v329) ^ 0x82AAB56E ^ v230;
  LODWORD(a51) = v230;
  v242 = v241 ^ v236;
  v243 = (((2 * (BYTE2(v242) ^ 0xA040404F)) & 0x8054) - (BYTE2(v242) ^ 0xA040404F) + 701729493) ^ 0x766C357D;
  v244 = ((((v241 ^ v236) >> 16) & 0xDF) - (((v241 ^ v236) >> 16) | 0xFFDF) + 1023) & 0x7FF;
  v245 = *(_DWORD *)&v328[4
                        * (v244 ^ ((v244 ^ 0xFFFFFBDF) - ((2 * (v244 ^ 0xFFFFFBDF) + 2) & 0x22C1D6AE) + 291564376) ^ (v243 - ((2 * v243 + 50) & 0xD838E18E) + 1813803232) ^ 0x7D7C9FB0)
                        + 96];
  v246 = 2071231393 * v245 - ((-1611021818 - 152504510 * v245) & 0x83912888) + 298153287;
  v247 = ((BYTE1(v242) ^ 0x1D) - ((2 * (BYTE1(v242) ^ 0x1D)) & 0x1C) - 415187698) ^ 0xE7E5AD1E;
  LODWORD(v135) = BYTE4(v329) ^ 0x6E ^ v230 ^ v236 ^ 0xAE;
  LODWORD(v135) = *(_DWORD *)&v125[4
                                 * (((v135 | 0xE93A3EE2) - (v135 | 0x16C5C11D) + 382058781) ^ 0xE93A3EAD)];
  HIDWORD(v139) = v135 ^ 0x7DC;
  LODWORD(v139) = v135 ^ 0x80FEC000;
  v248 = v130[((v241 ^ v236) >> 24) ^ 0x5ELL];
  LOBYTE(v149) = v248 + 75;
  v249 = v248 + 75 - ((2 * v248 - 106) & 0xFFFFFFF4) - 6;
  v250 = v249 ^ (((16 * v249) ^ 0xFFFFFFA0) - 32 * (v149 & 1) - 109) ^ 0x2F ^ (((8 * v249) ^ 0xFFFFFFD0)
                                                                             + ((2 * ((8 * v249) ^ 0xFFFFFFD0)) & 0x80)
                                                                             - 58);
  LODWORD(v324) = *(_DWORD *)&v123[4 * (((v247 | 0x5D2D3F05) - (v247 | 0xA2D2C0FA) - 1563246342) ^ 0x5D882FE4)] ^ ((v139 >> 11) - ((2 * (v139 >> 11)) & 0x666D45E) - 2093782481) ^ (v250 - ((2 * v250) & 0x18A) - 2019473979) ^ v240 ^ 0x8C20523 ^ v246 ^ ((v247 | 0x5D2D3F05) - (v247 | 0xA2D2C0FA) - 1563246342) ^ 0xAD0E677E;
  LODWORD(v317) = v192;
  v251 = (v192 ^ 0x1A860A23) - 314120507;
  v252 = v251 ^ 0x4B6AF96D;
  v253 = (2 * v251) & 0x96D5F2DA;
  LODWORD(v316) = v194;
  HIDWORD(v309) = v240;
  v254 = (((v192 ^ 0x1A860A23) + (v194 ^ 0x79519481) + 1) ^ 0x1FBFFFFF)
       + ((2 * ((v192 ^ 0x1A860A23) + (v194 ^ 0x79519481) + 1)) & 0x3F7FFFFE)
       + 422580325
       + (v240 ^ 0xBB9D490A);
  v255 = (HIDWORD(v324) ^ 0x3806A34) + (v254 ^ 0xB7EFFFF7) + ((2 * v254) & 0x6FDFFFEE) + 1209008137;
  LODWORD(v311) = v227;
  v256 = (v227 ^ 0xB1AD34DD) + (v255 ^ 0xEBFFE7F9) + ((2 * v255) & 0xD7FFCFF2) + 1259396600;
  v257 = ((2 * v256) & 0xE76F3AF6) + (v256 ^ 0x73B79D7B);
  LODWORD(a54) = v257 - ((2 * v257 + 1234332932) & 0x6357E3A4) + 1450518612;
  LODWORD(v328) = v324 ^ v230;
  v258 = v324 ^ v230 ^ 0x347DB855;
  v259 = ((2 * (v258 & (a54 ^ 0xB1ABF1D2))) & 0x7FB35FEE) + (v258 & (a54 ^ 0xB1ABF1D2) ^ 0x3FD9AFF7);
  v260 = (v258 | a54 ^ 0xB1ABF1D2) - ((2 * (v258 | a54 ^ 0xB1ABF1D2)) & 0x5FFDEDBE);
  v261 = ((-805238496 - v260) & 0x40000 | (((((-805238496 - v260) & 0x40000u) >> 18) & 1) << 19)) ^ 0xF39706EF;
  v262 = v261 + 1073676122;
  v263 = 657263928 - v261;
  if (((v259 + 413705) & 0x40000) != 0)
    v262 = v263;
  v264 = ((2 * ((v241 ^ 0x3673CF9A) - 324916518 + v257)) & 0x6BD1FB74)
       + (((v241 ^ 0x3673CF9A) - 324916518 + v257) ^ 0xB5E8FDBA);
  LODWORD(a47) = v264 + 187995956;
  if (v264 + 187995956 >= 0xB030E58A)
    v265 = -1902160542;
  else
    v265 = 1053833964;
  v266 = v252 - 1265301869 + v253;
  LODWORD(a49) = v266;
  v267 = 2 * (v266 % 0x25D78D43);
  v268 = ((v242 ^ 0x88 | v242 ^ 0x77) - ((2 * (v242 ^ 0x88 | v242 ^ 0x77)) & 0x5A) - 83) ^ 0xF7;
  v269 = v268 - ((2 * v268) & 0x134);
  if (v264 + 187995956 >= 0xB030E58A)
    v270 = -1338972790;
  else
    v270 = 0;
  if (v269 == 38)
    v271 = 1781436970;
  else
    v271 = 650820313;
  HIDWORD(a50) = v271;
  LODWORD(a43) = v257 - ((2 * v257 + 443592030) & 0xC3AB0FE6) - 284303710;
  LODWORD(a53) = ((v260 + 805238495) & 0xFFFBFFFF ^ 0xDF621DAE | 0x24EB0BB7)
               - ((v260 + 805238495) & 0xFFFBFFFF ^ 0xDF621DAE | 0xDB14F448)
               - 619383736;
  LODWORD(a52) = v262 + v259 - 2 * ((v262 + v259 + 210782656) & 0x5290E5DF ^ (v262 + v259) & 1) + 1596010398;
  v272 = v264 - ((2 * v264 - 1577774498) & 0xBDC9C83E) + 803171662;
  LODWORD(a46) = v264 + v265 + v270 - 865838008 - ((2 * (v264 + v265 + v270 - 865838008)) & 0xCBB859AE) + 1708928215;
  v273 = ((v266 % 0x25D78D43) ^ 0x88892121) - (v267 & 0x6EEDBDBC) + 2004279007;
  if ((v267 & 0x6771BF3E) + ((v266 % 0x25D78D43) ^ 0xF3B8DF9F) != -205987937)
    v273 = 0;
  LODWORD(a48) = v273 + v266 - ((2 * (v273 + v266)) & 0x56D9DB52) + 728559017;
  v274 = v339[10];
  v327 = v274 - ((2 * v274) & 0x162) - 994697551;
  v275 = (char *)*(&off_10112C750 + v341 - 36414) - 1881042335;
  v276 = (char *)*(&off_10112C750 + (v341 ^ 0x9DC9)) - 1734203894;
  v277 = *(_DWORD *)&v276[4 * (v339[9] ^ 0x45)];
  v278 = -1614998895 * v277 - ((1064969506 * v277 + 1941217772) & 0x5F2A7B14) - 1452306816;
  v279 = v339[6];
  v280 = (char *)*(&off_10112C750 + v341 - 35462) - 302885463;
  v281 = v280[v339[11] ^ 0xA4];
  v282 = (-(((v281 << 7) - 16 * (v281 ^ 0xFFFFFF88)) & 0xA0) - 72 * (v281 ^ 0xFFFFFF88) + 80) ^ ((v281 << 7) | 0x72) ^ (119 * (v281 ^ 0xFFFFFF88) - ((46 * (v281 ^ 0xFFFFFF88)) & 0x2A) - 107);
  v283 = v339[2];
  v284 = (v283 - ((2 * v283) & 0xD0) + 2024798568) ^ 0x7828ABAE;
  LODWORD(v283) = *(_DWORD *)&v275[4 * (v283 ^ 0xEF)] ^ 0xA0A83107;
  v285 = (v284 & v283) - 1070590912 - ((2 * (v284 & v283)) & 0x6028B8);
  LODWORD(v283) = (v284 | v283) - 1895992352 - ((2 * (v284 | v283)) & 0x1DFAE7E2) + 17;
  HIDWORD(v286) = v283 ^ 0xFFFFFFF1;
  LODWORD(v286) = v283 ^ 0x8EFD73E0;
  LODWORD(v283) = (v286 >> 5) - ((2 * (v286 >> 5)) & 0xC6CC992A);
  HIDWORD(v286) = (v285 + 28) ^ 0x1C;
  LODWORD(v286) = (v285 + 28) ^ 0xC0301440;
  LODWORD(v283) = (v283 - 479834987) ^ ((v286 >> 5) - ((2 * (v286 >> 5)) & 0xF1A56824) - 120409070);
  HIDWORD(v286) = v283 ^ 0x521D8A0;
  LODWORD(v286) = v283;
  v287 = v282 - ((2 * v282) & 0x18C) + 1267286214;
  v288 = (v286 >> 27) - ((2 * (v286 >> 27)) & 0x52B18292) + 693682505;
  LODWORD(v283) = v280[v339[7] ^ 7];
  v289 = v339[14];
  v290 = v289 - ((2 * (_DWORD)v289) & 0x1C8) + 494740708;
  LODWORD(v283) = (((_DWORD)v283 << 7) - 84) ^ (119 * (v283 ^ 0xFFFFFF88) - ((110 * (v283 ^ 0xFFFFFF88)) & 0x72) + 57) ^ (-72 * (v283 ^ 0xFFFFFF88) - ((-16 * v283) & 0x40) - 92) ^ 0x86;
  v291 = v283 - ((2 * (_DWORD)v283) & 0x1B2u) + 104906457;
  v292 = (char *)*(&off_10112C750 + v341 - 36423) - 1237279926;
  v293 = v280[v339[3] ^ 0xC3];
  v294 = -((((v293 << 7) - 91) ^ (-72 * (v293 ^ 0x88) - ((112 * (v293 ^ 0x88)) & 0x9F) + 72) ^ (119 * (v293 ^ 0x88) - ((110 * (v293 ^ 0x88)) & 0x42) - 95)) ^ 0x4C)
       - 754842113;
  v295 = *(_DWORD *)&v276[4 * (v339[5] ^ 0x9DLL)];
  v296 = -1614998895 * v295 - ((1064969506 * v295 + 1941217772) & 0x5CA5964C) + 674044956;
  v297 = *(_DWORD *)&v276[4 * (v339[13] ^ 0xDBLL)];
  v298 = -1614998895 * v297 - ((1064969506 * v297 - 206265876) & 0xB820BF1A) - 706039677;
  v299 = v280[v339[15] ^ 0x46];
  LODWORD(v280) = (((((_BYTE)v299 << 7) - 15) ^ (119 * (v299 ^ 0x88)
                                                                - ((-18 * (v299 ^ 0x88)) & 0xB8)
                                                                + 92) ^ (-72 * (v299 ^ 0x88) - ((-16 * v299) & 0x60) - 79)) ^ 0xAB)
                - ((2
                  * (((v299 << 7) - 15) ^ (119 * (v299 ^ 0xFFFFFF88) - ((-18 * (v299 ^ 0xFFFFFF88)) & 0xB8) + 92) ^ (-72 * (v299 ^ 0xFFFFFF88) - ((-16 * v299) & 0x60) - 79) ^ 0xAB)) & 0x2E);
  HIDWORD(v286) = v272 ^ 0x4E41F;
  LODWORD(v286) = v272 ^ 0x5EE00000;
  v300 = (v286 >> 21) - ((2 * (v286 >> 21)) & 0x77CE39B8) + 1005001948;
  HIDWORD(v286) = v300 ^ 0x33A;
  LODWORD(v286) = v300 ^ 0xE73DF800;
  v301 = (v286 >> 11) - ((2 * (v286 >> 11)) & 0xF76FFB4E) + 2075655591;
  v302 = *(unsigned int *)&v275[4 * (v274 ^ 0xB1)];
  HIDWORD(v325) = v302 ^ v327 ^ v278 ^ *(_DWORD *)&v292[4 * (v339[8] ^ 0xB4)] ^ 0x418D0937 ^ v287;
  HIDWORD(v326) = *(_DWORD *)&v292[4 * (*v339 ^ 0xACLL)] ^ v294 ^ (-1614998895
                                                                 * *(_DWORD *)&v276[4 * (v339[1] ^ 0xB9)]
                                                                 - ((1064969506
                                                                   * *(_DWORD *)&v276[4 * (v339[1] ^ 0xB9)]
                                                                   + 1941217772) & 0x774219CC)
                                                                 - 1250206244) ^ 0x1066C02D ^ v288;
  LODWORD(v326) = *(_DWORD *)&v275[4 * (v289 ^ 0xD4)] ^ v290 ^ *(_DWORD *)&v292[4 * (v339[12] ^ 0x3FLL)] ^ v298 ^ 0xAA4F5A26 ^ ((_DWORD)v280 - 1338588137);
  HIDWORD(v286) = a43 ^ 6;
  LODWORD(v286) = a43 ^ 0xD1C53270;
  LODWORD(v289) = (v286 >> 3) - ((2 * (v286 >> 3)) & 0x7B95FC32);
  HIDWORD(v286) = v333 ^ ~(_DWORD)a39;
  LODWORD(v286) = v329 ^ 0x73B54228;
  LODWORD(v289) = (v289 - 1110770151) ^ ((v286 >> 3) - ((2 * (v286 >> 3)) & 0x65D0D288) + 854092100);
  HIDWORD(v286) = v289 ^ 0x3F0C606;
  LODWORD(v286) = v289 ^ 0x40000000;
  LODWORD(v325) = *(_DWORD *)&v275[4 * (v279 ^ 0xDF)] ^ (v279 - ((2 * v279) & 0xFFFFFF7F) + 980943039) ^ *(_DWORD *)&v292[4 * (v339[4] ^ 0xB9)] ^ v296 ^ 0x602D82CB ^ v291;
  HIDWORD(v308) = v340 - 1459051775;
  LODWORD(v308) = ((v286 >> 29) - ((2 * (v286 >> 29)) & 0x9FAE9D6) - 2063764245) ^ a43;
  HIDWORD(v307) = a47 ^ v333 ^ a46;
  LODWORD(v307) = v338 ^ v321 ^ 0xCAC15179;
  HIDWORD(v306) = v335 ^ v266 ^ a48;
  LODWORD(v306) = HIDWORD(a50) ^ v230;
  HIDWORD(v305) = v272 ^ HIDWORD(v329) ^ v301;
  LODWORD(v305) = a53 ^ a54 ^ a52;
  LODWORD(v304) = v324 ^ HIDWORD(v329) ^ 0x82AAB56E;
  HIDWORD(v304) = 1048970;
  HIDWORD(a22) = v242;
  HIDWORD(a12) = v328 ^ v242;
  LODWORD(v309) = HIDWORD(v329) ^ 0x82AAB56E ^ v230;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t))(a40 + 8 * v341))(119, v302, v301, v290, v279, 2679968401, v288, v291, a9, a10, a11, a12, v304, v305, v306, v307, v308, v292, (char *)*(&off_10112C750 + v341 - 35462) - 302885463,
           v276,
           v275,
           a22,
           v309,
           v310,
           v311,
           v312,
           v313,
           v314,
           v315,
           v316,
           v317,
           v318,
           v319,
           v320,
           v321,
           v322,
           v323,
           v324,
           a39,
           a40,
           a41,
           a42,
           a43,
           v325,
           v326,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           v328,
           v329);
}

uint64_t sub_100010C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45,int a46,int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  unsigned int v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  char v80;
  char v81;
  int v82;
  uint64_t v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  int v97;
  uint64_t v98;
  int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  char *v108;
  unint64_t v109;
  char *v110;
  int v111;
  int v112;
  unsigned int v113;
  char *v114;
  int v115;
  int v116;
  BOOL v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  unint64_t v122;
  int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  int v137;
  int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  char *v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  int v153;
  int v154;
  unsigned int v155;
  int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  unsigned int v166;
  int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  unsigned int v189;
  int v190;
  int v191;
  int v192;
  unsigned int v193;
  int v194;
  int v195;
  unsigned int v196;
  char *v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  int v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  int v230;
  int v231;
  unsigned int v232;
  int v233;
  int v234;
  unsigned int v235;
  int v236;
  int v237;
  unsigned int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  unsigned int v248;
  int v249;
  int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  int v255;
  unsigned int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  int v285;
  unsigned int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  unsigned int v291;
  unsigned int v292;
  int v293;
  int v294;
  int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  int v312;
  unsigned int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  unsigned int v318;
  int v319;
  int v320;
  int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  int v338;
  int v339;
  char *v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  int v348;
  int v349;
  int v350;
  unsigned int v351;
  unsigned int v352;
  int v353;
  int v354;
  int v355;
  unsigned int v356;
  int v357;
  int v358;
  int v359;
  int v360;
  unsigned int v361;
  unsigned int v362;
  int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  unsigned int v367;
  char *v368;
  int v369;
  unsigned int v370;
  unsigned int v371;
  unsigned int v372;
  int v373;
  unsigned int v374;
  unsigned int v375;
  unsigned int v376;
  unsigned int v377;
  int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  unsigned int v382;
  int v383;
  unsigned int v384;
  unsigned int v385;
  unsigned int v386;
  int v387;
  int v388;
  unsigned int v389;
  char *v390;
  int v391;
  int v392;
  int v393;
  uint64_t v394;
  int v395;
  unsigned int v396;
  unsigned int v397;
  char *v398;
  int v399;
  int v400;
  int v401;
  char *v402;
  unsigned int v403;
  unsigned int v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  char *v408;
  char *v409;
  int v410;
  char *v411;
  unsigned int v412;
  char *v413;
  unsigned int v414;
  unsigned int v415;
  uint64_t v417;
  unint64_t v418;
  int v419;
  int v420;
  uint64_t v421;
  int v422;
  int v423;
  int v424;
  int v425;
  unsigned int v426;
  int v427;
  unsigned int v428;
  unsigned int v429;
  uint64_t v430;
  unsigned int v431;
  int v432;
  int v433;
  unsigned int v434;
  int v435;
  int v436;
  int v437;
  uint64_t v438;
  uint64_t v439;
  unint64_t v440;
  unint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  unint64_t v445;
  uint64_t v446;
  unsigned int v447;
  uint64_t v448;
  unint64_t v449;
  unint64_t v450;
  unsigned int v451;
  uint64_t v452;
  uint64_t v453;
  unsigned int v454;

  HIDWORD(a39) = 0;
  v454 = v68;
  HIDWORD(a41) = (v68 - 2139960218) | 0x22846490;
  v451 = v69 & (v68 ^ 0xFFFFCC57) ^ 0xD2CCE1AF;
  v418 = ((v451 + 1665073110 + ((2 * v451) & 0xC67DFFA8 ^ 0xFFFFFFFB) + 1) ^ 0xD0A7FEFE99D120B1)
       + v70
       + ((2 * ((v451 + 1665073110 + ((2 * v451) & 0xC67DFFA8 ^ 0xFFFFFFFB) + 1) ^ 0x633EFFD6)) & 0x1F5DFBECELL);
  v71 = (((v69 & 0xFFFFFFF7 ^ 0xD2CCE1AD)
        - 883717544
        + (HIDWORD(a41) ^ 0x5D089B77 ^ (2 * (v69 & 0xFFFFFFF7 ^ 0xD2CCE1AD)) & 0x96A714A0)
        + 1) ^ 0x7E1DF75331A476B9)
      + v70
      + ((2
        * (((v69 & 0xFFFFFFF7 ^ 0xD2CCE1AD)
          - 883717544
          + (HIDWORD(a41) ^ 0x5D089B77 ^ (2 * (v69 & 0xFFFFFFF7 ^ 0xD2CCE1AD)) & 0x96A714A0)
          + 1) ^ 0xCB538A58)) & 0x1F5EFF9C2);
  v444 = v71;
  v447 = v69 & 0xFFFFFFF6 ^ 0xD2CCE1AD;
  LODWORD(v446) = v69 & 0xFFFFFFF3 ^ 0xD2CCE1AD;
  HIDWORD(v446) = v69 | 0x7FFFFFFD;
  v72 = v69;
  v73 = *(_DWORD *)(a20
                  + 4
                  * (*(unsigned __int8 *)(((v447 + 1371699703 - ((2 * v447) & 0xA384F3EE)) ^ 0x6FDEDBEEAC352680)
                                        + v70
                                        + ((2 * ((v447 + 1371699703 - ((2 * v447) & 0xA384F3EE)) ^ 0x51C279F7)) & 0x1FBEEBEEELL)
                                        - 0x6FDEDBEEFDF75F77) ^ 0x9CLL));
  LODWORD(v417) = -1614998895 * v73 - ((1064969506 * v73 + 1941217772) & 0x41F3A0E0);
  v452 = (((v69 & 0xFFFFFFFE ^ 0xD2CCE1A5) + 1754077240 - ((2 * (v69 & 0xFFFFFFFE ^ 0xD2CCE1A5)) & 0xD11A3070)) ^ 0x1AEFBDFB937A63CBLL)
       + v70
       + ((2
         * (((v69 & 0xFFFFFFFE ^ 0xD2CCE1A5) + 1754077240 - ((2 * (v69 & 0xFFFFFFFE ^ 0xD2CCE1A5)) & 0xD11A3070)) ^ 0x688D1838)) & 0x1F7EEF7E6);
  v74 = *(_DWORD *)(a18
                  + 4
                  * (*(unsigned __int8 *)((((int)v446
                                          + 311920403
                                          + ((2 * (v446 & 0x12978713 ^ (v69 | 0x7FFFFFFD))) ^ 0x15)
                                          + 7) ^ 0x3DFDF777FD827AF6)
                                        + v70
                                        + ((2
                                          * (((int)v446
                                            + 311920403
                                            + ((2 * (v446 & 0x12978713 ^ (v69 | 0x7FFFFFFD))) ^ 0x15)
                                            + 7) ^ 0x12978719)) & 0x1DE2BFBDELL)
                                        - 0x3DFDF777EF15FDEFLL) ^ 0xC9));
  v75 = *(_DWORD *)(a20 + 4 * (*(unsigned __int8 *)(v452 - 0x1AEFBDFBFBF77BF3) ^ 0x19));
  v448 = (((v69 & 0xFFFFFFF9 ^ 0xD2CCE1A7)
         + 835009989
         + ((2 * (v69 & 0xFFFFFFF9 ^ 0xD2CCE1A7)) & 0x638A7B82 ^ 0xFFFFFFF7)
         + 1) ^ 0x73CE4ED75C3A48A7)
       + ((2
         * (((v69 & 0xFFFFFFF9 ^ 0xD2CCE1A7)
           + 835009989
           + ((2 * (v69 & 0xFFFFFFF9 ^ 0xD2CCE1A7)) & 0x638A7B82 ^ 0xFFFFFFF7)
           + 1) ^ 0x31C53DC5)) & 0xDBFEEAC4)
       + v70;
  v76 = *(unsigned __int8 *)(v448 - 0x73CE4ED76DFF7562);
  v77 = ((2 * v76) & 0x1FC) + (v76 ^ 0x4DEFE5FE);
  v78 = (v76 ^ 0xA3048E0D) - ((2 * (v76 ^ 0xC)) & 0xFC) + v77;
  v79 = v77 - 1307567614 + ((v78 + 1 - 2 * ((v78 + 252414849) & 0x3EB5607F ^ (v78 + 1) & 9) + 1304488950) ^ 0xC14A9F8E);
  v450 = (((v69 & 0xFFFFFFF0 ^ 0xD2CCE1AF) + 184350715 - ((2 * (v69 & 0xFFFFFFF0 ^ 0xD2CCE1AF)) & 0x15F9EFF6)) ^ 0xDF3EEFF7F53D4114)
       + v70
       + ((2
         * (((v69 & 0xFFFFFFF0 ^ 0xD2CCE1AF) + 184350715 - ((2 * (v69 & 0xFFFFFFF0 ^ 0xD2CCE1AF)) & 0x15F9EFF6)) ^ 0xAFCF7FB)) & 0x1FF836DDELL);
  LOBYTE(v77) = *(_BYTE *)(a19 + (*(unsigned __int8 *)(v450 + 0x20C11008003E4911) ^ 0x27));
  v80 = 119 * (v77 ^ 0x88) - ((-18 * (v77 ^ 0x88)) & 0xDF);
  v81 = v80 - 1;
  v80 += 111;
  v82 = -1614998895 * v75 - ((1064969506 * v75 + 867475948) & 0x3BF8A456);
  v453 = v72 ^ 0xD2CCE1A5;
  v83 = (v72 ^ 0x5EFE86BD40B61B1FLL) + v70 + ((2 * v453) & 0x124F5F574);
  v438 = v83;
  LOBYTE(v75) = (((2 * (v81 & 7 ^ 5)) & 0xC) - (v81 & 7 ^ 5) - 119) ^ 0x8B | (16 * v77 - 18) ^ 0x66 ^ v80 & 0x18;
  v84 = (v74 & 0x80 ^ 0xEF0E4BDF) + 2 * (v74 & 0x80);
  LOBYTE(v75) = v80 ^ 0x2A ^ (((8 * (v75 - 2 * (v75 & 3) + 7)) ^ 0x18)
                            + (~(16 * (v75 - 2 * (v75 & 3) + 7) - 64) | 0x7F)
                            + 38);
  v85 = (v75 ^ 0xFEF578FF) + 2 * v75;
  v86 = ((v85 + 17467137) & (v84 + 284275745)) + 210357455 - ((2 * ((v85 + 17467137) & (v84 + 284275745))) & 0x19139900);
  v87 = ((2 * v74) & 0xEFBE22A8 ^ 0xC6320288) + (v74 & 0xFFFFFF7F ^ 0x14C6D431);
  v88 = v87 - ((2 * v87 + 272719192) & 0x35F78D10);
  v90 = v84 + 1426062719;
  v91 = 857511229 - v84;
  if (v86 == 210357455)
    v91 = v90;
  v89 = (v72 & 0xFFFFFFF2 ^ 0xD2CCE1AD) + 757888208 - ((2 * (v72 & 0xFFFFFFF2 ^ 0xD2CCE1AD)) & 0x5A58E9A0);
  v445 = (v89 ^ 0xC6F7F7FF725287BFLL) + ((2 * (v89 ^ 0x2D2C74D0)) & 0xBEFDE6DE) + a68;
  v92 = v91 + v85 - ((2 * (v91 + v85) + 972585798) & 0x284CDDD6);
  v93 = *(_DWORD *)(a20 + 4 * (*(unsigned __int8 *)(v445 + 0x39080800A0810C91) ^ 0xAALL));
  v94 = -1614998895 * v93 - ((1064969506 * v93 - 206265876) & 0xCFB3D7B6);
  v449 = (((v72 & 0xFFFFFFF4 ^ 0xD2CCE1AF) - 1973477621 - ((2 * (v72 & 0xFFFFFFF4 ^ 0xD2CCE1AF)) & 0x14BE3E16)) ^ 0xFFF3DF77E1E090BCLL)
       + ((2
         * (((v72 & 0xFFFFFFF4 ^ 0xD2CCE1AF) - 1973477621 - ((2 * (v72 & 0xFFFFFFF4 ^ 0xD2CCE1AF)) & 0x14BE3E16)) ^ 0x8A5F1F0B)) & 0xD77F1F6E)
       + a68;
  v95 = *(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(v449 + 0xC208894407049) ^ 0xAELL));
  v96 = ((v95 << 7) - 44) ^ (-72 * (v95 ^ 0xFFFFFF88) - ((112 * (v95 ^ 0xFFFFFF88)) & 0xFFFFFFE0) + 113) ^ (119 * (v95 ^ 0xFFFFFF88) - ((-18 * (v95 ^ 0xFFFFFF88)) & 0xD4) + 106) ^ 0xCF;
  v97 = v96 - ((2 * v96) & 0x198);
  LODWORD(a57) = v72 & 0xFFFFFFFA ^ 0xD2CCE1A5;
  v441 = (((v72 & 0xFFFFFFF1 ^ 0xD2CCE1AF) + 1336473463 - ((2 * (v72 & 0xFFFFFFF1 ^ 0xD2CCE1AF)) & 0x9F51EF02)) ^ 0x9FFD6EDD39C6127CLL)
       + ((2
         * (((v72 & 0xFFFFFFF1 ^ 0xD2CCE1AF) + 1336473463 - ((2 * (v72 & 0xFFFFFFF1 ^ 0xD2CCE1AF)) & 0x9F51EF02)) ^ 0x4FA8F78B)) & 0xECDDCBEE)
       + a68;
  v98 = *(unsigned __int8 *)((((int)a57 + 1365589991 + ((2 * (a57 & 0x51653FFA ^ (v72 | 0x7FFFFFE7))) ^ 0x3B) + 1) ^ 0xF3F7DE4E2DBA8019)
                           + ((2
                             * (((int)a57 + 1365589991 + ((2 * (a57 & 0x51653FFA ^ (v72 | 0x7FFFFFE7))) ^ 0x3B) + 1) ^ 0x51653FE7)) & 0xF9BF7FFC)
                           + a68
                           + 0xC0821B183204002);
  v440 = (((v72 & 0xFFFFFFF8 ^ 0xD2CCE1A7) - 1389599360 - ((2 * (v72 & 0xFFFFFFF8 ^ 0xD2CCE1A7)) & 0x5A58CB00)) ^ 0xD9AC4FE6D0A2BAECLL)
       + ((2
         * (((v72 & 0xFFFFFFF8 ^ 0xD2CCE1A7) - 1389599360 - ((2 * (v72 & 0xFFFFFFF8 ^ 0xD2CCE1A7)) & 0x5A58CB00)) ^ 0xAD2C6580)) & 0xFB1DBED8)
       + a68;
  v99 = *(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(v440 + 0x2653B01982712094) ^ 0x65));
  v439 = (((v72 & 0xFFFFFFFC ^ 0xD2CCE1A7)
         + 1066654147
         + ((2 * ((v72 & 0xFFFFFFFC ^ 0xD2CCE1A7) & 0x3F93D9D0 ^ (v72 | 0x7FFFFFEF))) ^ 0x27)
         + 1) ^ 0x3B977FFFA07C362ELL)
       + a68
       + ((2
         * (((v72 & 0xFFFFFFFC ^ 0xD2CCE1A7)
           + 1066654147
           + ((2 * ((v72 & 0xFFFFFFFC ^ 0xD2CCE1A7) & 0x3F93D9D0 ^ (v72 | 0x7FFFFFEF))) ^ 0x27)
           + 1) ^ 0x3F93D9C3)) & 0x13FDFDFDALL);
  v100 = (-72 * (v99 ^ 0xFFFFFF88) - ((112 * (v99 ^ 0xFFFFFF88)) & 0xFFFFFF9F) - 51) ^ (v99 << 7) ^ (119 * (v99 ^ 0xFFFFFF88) - ((-18 * (v99 ^ 0xFFFFFF88)) & 0xD4) + 106) ^ 0xA7;
  v101 = *(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(v439 - 0x3B977FFF9FEFEFEDLL) ^ 0xE7));
  HIDWORD(a52) = v72;
  v442 = (((v72 & 0xFFFFFFFD ^ 0xD2CCE1A7) + 1033446213 - 2
                                                        * ((v72 & 0xFFFFFFFD ^ 0xD2CCE1A7) & 0x3D99235D ^ v72 & 0x18)) ^ 0x7CAF7EF7916435FELL)
       + a68
       + ((2
         * (((v72 & 0xFFFFFFFD ^ 0xD2CCE1A7)
           + 1033446213
           - 2 * ((v72 & 0xFFFFFFFD ^ 0xD2CCE1A7) & 0x3D99235D ^ v72 & 0x18)) ^ 0x3D992345)) & 0x159FA2D76);
  v102 = (-72 * (v101 ^ 0xFFFFFF88) - ((-16 * v101) & 0x60) + 51) ^ ((v101 << 7) | 0x28) ^ (119 * (v101 ^ 0xFFFFFF88)
                                                                                          - ((46 * (v101 ^ 0xFFFFFF88)) & 0x36)
                                                                                          + 27);
  v443 = (((v72 & 0xFFFFFFFB ^ 0xD2CCE1A5) + 1215405026 - ((2 * (v72 & 0xFFFFFFFB ^ 0xD2CCE1A5)) & 0x90E337C4)) ^ 0x17BEB36F558CC431)
       + ((2
         * (((v72 & 0xFFFFFFFB ^ 0xD2CCE1A5) + 1215405026 - ((2 * (v72 & 0xFFFFFFFB ^ 0xD2CCE1A5)) & 0x90E337C4)) ^ 0x48719BE2)) & 0x3BFABFA6)
       + a68;
  v103 = a45 ^ HIDWORD(a38) ^ *(_DWORD *)(a18 + 4 * (*(unsigned __int8 *)(v71 - 0x7E1DF753FAF7FCE1) ^ 0xB0)) ^ (*(unsigned __int8 *)(v418 + 0x2F58010105102099) - ((2 * *(unsigned __int8 *)(v418 + 0x2F58010105102099)) & 0x78) - 1919442628) ^ *(_DWORD *)(a21 + 4 * (*(unsigned __int8 *)(v418 + 0x2F58010105102099) ^ 0xCELL)) ^ (v417 + 450109798) ^ (v97 + 851738060);
  v104 = a44 ^ a37 ^ (-1614998895 * *(_DWORD *)(a20 + 4 * (v98 ^ 0xA4))
                    - ((1064969506 * *(_DWORD *)(a20 + 4 * (v98 ^ 0xA4)) - 206265876) & 0xAF85F504)
                    - 778220680) ^ (v79 + 1697354504 - ((2 * v79) & 0xCA572690) + 64) ^ *(_DWORD *)(a18
                                                                                                  + 4 * (*(unsigned __int8 *)(v443 - 0x17BEB36F1DFD5FD3) ^ 0x20)) ^ ((~(2 * v100) | 0xFFFFFF77) + v100 - 1819836603) ^ *(_DWORD *)(a21 + 4 * ((v79 + 1697354504 - ((2 * v79) & 0xCA572690) + 64) ^ 0x652B9308));
  v105 = v92 - 786256754;
  v106 = a47 ^ HIDWORD(a37) ^ *(_DWORD *)(a18 + 4 * (*(unsigned __int8 *)(v83 - 0x5EFE86BD927AFABALL) ^ 0x45)) ^ *(_DWORD *)(a21 + 4 * (*(unsigned __int8 *)(v442 - 0x7CAF7EF7ACFD16BBLL) ^ 0x1ALL)) ^ (*(unsigned __int8 *)(v442 - 0x7CAF7EF7ACFD16BBLL) - ((2 * *(unsigned __int8 *)(v442 - 0x7CAF7EF7ACFD16BBLL)) & 0xC6) - 1834763933) ^ (v82 - 1747541215) ^ (v102 - ((2 * v102) & 0x1A8) + 1329418964);
  v107 = a46 ^ a39 ^ (v94 + 1639202001) ^ *(_DWORD *)(a21
                                                    + 4 * (*(unsigned __int8 *)(v441 + 0x6002912289911A09) ^ 0xD7)) ^ (*(unsigned __int8 *)(v441 + 0x6002912289911A09) - ((2 * *(unsigned __int8 *)(v441 + 0x6002912289911A09)) & 0xDC) - 761809042) ^ (v88 + 589067572) ^ v105;
  v108 = (char *)*(&off_10112C750 + (int)(v454 ^ 0x3372)) - 1988504738;
  LODWORD(v98) = *(_DWORD *)&v108[4 * (HIBYTE(v106) ^ 0x69)];
  HIDWORD(v109) = v98 ^ 0x2DE08;
  LODWORD(v109) = v98 ^ 0x202C0000;
  v110 = (char *)*(&off_10112C750 + (int)(v454 - 8878)) - 1671454790;
  v111 = *(_DWORD *)&v110[4 * (BYTE2(v104) ^ 0xC)];
  LODWORD(v98) = (v109 >> 18) - ((2 * (v109 >> 18)) & 0x788F91F4) + 1011337466;
  v112 = v98 ^ (v98 >> 1) ^ (-351572507 * v111
                                         - ((1444338634 * v111 + 1423758154) & 0x5F35EA54)
                                         + 436821711) ^ (v98 >> 2);
  v113 = (BYTE1(v103) ^ 0x99 | 0xC18709C) - (BYTE1(v103) ^ 0x99 | 0xF3E78F63) - 202928285;
  v114 = (char *)*(&off_10112C750 + (int)(v454 ^ 0x3AE3)) - 273924339;
  v115 = *(_DWORD *)&v114[4 * (((v113 & 0x10718C ^ 0x43232105) + (v113 & 0xC080E73) - 1) ^ 0x4F3B5134)];
  v431 = 990942290 * v115 - ((1981884580 * v115 - 504162488) & 0x9891F36C);
  v426 = -2106982467 * v115 - ((81002362 * v115 + 1838562804) & 0x87702380);
  v116 = (69 - -67 * (_BYTE)v115) & 0x40;
  v117 = (v112 & v116) == 0;
  v118 = v116 | 0x7DCB0438;
  if (!v117)
    v118 = -74053520 - v118;
  v119 = (v112 ^ 0x82EF2B93) - 2110456888 + v118;
  v120 = *(_DWORD *)&v108[4 * (HIBYTE(v104) ^ 8)];
  v121 = v119 - ((2 * v119) & 0x8C3FABC8);
  HIDWORD(v122) = v120 ^ 0x2DE08;
  LODWORD(v122) = v120 ^ 0x202C0000;
  v123 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0x3030FED4);
  v124 = *(_DWORD *)&v110[4 * (BYTE2(v103) ^ 0x20)];
  v125 = *(_DWORD *)&v114[4 * (BYTE1(v107) ^ 0x6B)];
  v126 = -2106982467 * v125 - 2 * ((-2106982467 * v125 + 919281402) & 0x37379369 ^ (-2106982467 * v125) & 1);
  v127 = 990942290 * v125 - ((1981884580 * v125 - 504162488) & 0xD32F3104);
  v128 = *(_DWORD *)&v108[4 * (HIBYTE(v103) ^ 0x2D)];
  HIDWORD(v122) = v128 ^ 0x2DE08;
  LODWORD(v122) = v128 ^ 0x202C0000;
  v129 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0xF8C1C132);
  v130 = *(_DWORD *)&v110[4 * (BYTE2(v107) ^ 0xDC)];
  v131 = *(_DWORD *)&v114[4 * (BYTE1(v106) ^ 0x61)];
  v132 = -2106982467 * v131 - ((81002362 * v131 + 1838562804) & 0xD6659BDA);
  v133 = *(_DWORD *)&v108[4 * (HIBYTE(v107) ^ 0x35)];
  v134 = 990942290 * v131 - ((1981884580 * v131 - 504162488) & 0xCC36E3DC);
  HIDWORD(v122) = v133 ^ 0x2DE08;
  LODWORD(v122) = v133 ^ 0x202C0000;
  v135 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0xF83F31F6);
  v136 = (HIWORD(v106) & 0x59 ^ 0xE7F50E01) + (HIWORD(v106) & 0xA6 ^ 0x23) - 1;
  v137 = *(_DWORD *)&v110[4
                        * (((v136 & 0xA7C00665 ^ 0x29260) + (v136 ^ 0xE7DC241F) - ((v136 ^ 0xE7DC241F) & 0x290265)) ^ 0xA7C2BCD7)];
  v138 = *(_DWORD *)&v114[4 * (BYTE1(v104) ^ 0x6F)];
  v139 = -351572507 * v137 - ((1444338634 * v137 + 1423758154) & 0x5AC2AABA);
  v140 = (((-2008405760 * v138 - ((278155776 * v138 - 108289024) & 0xC9337800) + 1633652436) ^ 0xE499BCD4) & 0xFFFFFF80 | ((990942290 * v138 - ((908142756 * v138 + 569579336) & 0x2E690AA4u) + 137236727) >> 25)) ^ 0x4B;
  v141 = (((889183872 * v138 - ((1778367744 * v138 - 887162368) & 0x98792600) - 1312026594) ^ 0x4C3C931E) & 0xFFFFFF80 | ((-2106982467 * v138 - ((81002362 * v138 + 1838562804) & 0x5C40338Au) + 1693137087) >> 25)) ^ 0x57;
  v142 = (v141 - ((2 * v141) & 0x4092B124) - 1605805934) ^ (v140 - ((2 * v140) & 0x46FDA44A) + 595513893);
  HIDWORD(v122) = v142 ^ 0x29;
  LODWORD(v122) = v142 ^ 0xFDB3BC00;
  v143 = (char *)*(&off_10112C750 + (int)(v454 ^ 0x31DF)) - 1178086063;
  v144 = *(_DWORD *)&v143[4 * (v106 ^ 0x76)] ^ a36 ^ (-351572507 * v124
                                                                     - ((1444338634 * v124 + 1423758154) & 0x5E32B23E)
                                                                     - 1719156028) ^ (v123 + 404258666) ^ ((v123 + 404258666) >> 1) ^ ((v123 + 404258666) >> 2) ^ (v127 - 628022233) ^ (v126 + 1845670498);
  v145 = (((2 * (v103 ^ 0x44)) & 0x18A) - (v103 ^ 0x44) + 1624485434) ^ 0xA05B0E7A;
  v146 = *(_DWORD *)&v143[4 * (v107 ^ 0x13)] ^ HIDWORD(a36) ^ (v431 - 1119713958) ^ (v426 - 92065606) & 0xFFFFFFBF ^ (v121 - 970992156);
  v147 = a17 ^ *(_DWORD *)&v143[4 * ((v145 - ((2 * v145) & 0x1014368) - 2084504140) ^ 0x43485D61)] ^ (v139 + 399490818) ^ (v135 + 2082445563) ^ ((v135 + 2082445563) >> 1) ^ ((v135 + 2082445563) >> 2) ^ ((v122 >> 7) - ((2 * (v122 >> 7)) & 0x89E59998) - 990720820);
  v148 = HIDWORD(a16) ^ *(_DWORD *)&v143[4 * (v104 ^ 0x4B)] ^ (v129 + 2086723737) ^ (v134 - 686490222) ^ (v132 + 570289383) ^ (-351572507 * v130 - ((1444338634 * v130 + 1423758154) & 0x40E5C7A4) + 182537591) ^ ((v129 + 2086723737) >> 1) ^ ((v129 + 2086723737) >> 2);
  v149 = *(_DWORD *)&v108[4 * (HIBYTE(v146) ^ 0x67)];
  HIDWORD(v122) = v149 ^ 0x2DE08;
  LODWORD(v122) = v149 ^ 0x202C0000;
  v150 = (v148 ^ 0x251ADAF2) + 1112316051 - 2 * ((v148 ^ 0x251ADAF2) & 0x424C9897 ^ v148 & 4);
  v151 = (v122 >> 18) + 1459313825 + (~(2 * (v122 >> 18)) | 0x520946BF);
  v152 = *(_DWORD *)&v110[4 * (BYTE2(v144) ^ 0xE0)];
  v153 = *(_DWORD *)&v114[4 * (BYTE1(v150) ^ 0x4C)];
  v432 = -2106982467 * v153 - ((81002362 * v153 + 1838562804) & 0x5A9D476A);
  v422 = 990942290 * v153 - ((908142756 * v153 + 569579336) & 0x2A0B3A70);
  v154 = ((2 * (v147 ^ 0xDA)) & 0x12E) - (v147 ^ 0xDA) - 1719430808;
  v155 = (v154 & 0x8800050 ^ 0x4706010) + (v154 ^ 0x588B90C8) - ((v154 ^ 0x588B90C8) & 0xC1000050);
  v156 = *(_DWORD *)&v108[4 * (HIBYTE(v144) ^ 0xAE)];
  HIDWORD(v122) = v156 ^ 0x2DE08;
  LODWORD(v122) = v156 ^ 0x202C0000;
  v157 = *(_DWORD *)&v110[4 * (BYTE2(v150) ^ 0x44)];
  v158 = (v122 >> 18) + 857165463 + (~(2 * (v122 >> 18)) | 0x99D162D3);
  v159 = -351572507 * v157 - ((-723725494 - 703145014 * v157) & 0x8DB10332);
  v160 = *(_DWORD *)&v114[4 * (BYTE1(v147) ^ 0xC1)];
  v161 = *(_DWORD *)&v108[4 * (HIBYTE(v150) ^ 0xE8)];
  HIDWORD(v122) = v161 ^ 0x2DE08;
  LODWORD(v122) = v161 ^ 0x202C0000;
  v162 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0xB1C76A7A);
  v163 = *(_DWORD *)&v110[4 * (BYTE2(v147) ^ 0xC5)];
  v164 = *(_DWORD *)&v114[4 * (BYTE1(v146) ^ 0xCC)];
  v165 = *(_DWORD *)&v108[4 * (HIBYTE(v147) ^ 0x89)];
  HIDWORD(v122) = v165 ^ 0x2DE08;
  LODWORD(v122) = v165 ^ 0x202C0000;
  v166 = (v122 >> 18) + 1750536005 + (~(2 * (v122 >> 18)) | 0x2F51E177);
  v167 = *(_DWORD *)&v110[4 * (BYTE2(v146) ^ 0xCA)];
  v168 = *(_DWORD *)&v114[4 * (BYTE1(v144) ^ 0xF2)];
  v169 = HIDWORD(a35) ^ a36 ^ *(_DWORD *)&v143[4 * (v146 ^ 0x55)] ^ v158 ^ (v159 + 826731326) ^ (v158 >> 1) ^ (v158 >> 2) ^ (990942290 * v160 - ((908142756 * v160 + 569579336) & 0x39E471D8) - 1913928559) ^ (-2106982467 * v160 - 2 * ((-2106982467 * v160 + 919281402) & 0x674CD373 ^ (-2106982467 * v160) & 1) + 504885868);
  v170 = *(_DWORD *)&v143[4 * (v155 ^ 0xCF8618A)] ^ HIDWORD(a35) ^ (-351572507 * v152
                                                                  - ((-703145014 * v152 - 723725494) & 0xD858E576)
                                                                  - 694494112) ^ v151 ^ (v422 - 2046875427) ^ (v432 + 1679409839) ^ (v151 >> 1) ^ (v151 >> 2);
  v171 = *(_DWORD *)&v143[4 * (v144 ^ 0xCC)] ^ a35 ^ (v162 - 656165571) ^ ((v162 - 656165571) >> 1) ^ ((v162 - 656165571) >> 2) ^ (-351572507 * v163 - ((-723725494 - 703145014 * v163) & 0xC6907120) + 1303814709) ^ (-2106982467 * v164 - ((81002362 * v164 + 1838562804) & 0x4C907260) - 585934806) ^ (990942290 * v164 - 2 * ((990942290 * v164 + 821660580) & 0x3E55422A ^ (990942290 * v164) & 2) - 1353790004);
  v172 = *(_DWORD *)&v143[4 * (v150 ^ 0x6E)] ^ HIDWORD(a34) ^ (-351572507 * v167
                                                                              - ((-723725494 - 703145014 * v167) & 0xC5FF43EE)
                                                                              + 1299057564) ^ (-2106982467 * v168
                                                                                             - ((81002362 * v168
                                                                                               + 1838562804) & 0x9C0096B6)
                                                                                             + 80439893) ^ v166 ^ (990942290 * v168 - ((1981884580 * v168 + 1643321160) & 0x77E83F84) - 1393710234) ^ (v166 >> 1) ^ (v166 >> 2);
  v173 = (v172 ^ 0x6873DFDB) + 1;
  v172 ^= 0xDB32D759;
  v174 = v172 + (v173 ^ 0x53FBDFDF) + ((2 * v173) & 0xA7F7BFBE) - 1409015775;
  v175 = ((v174 - ((2 * v174) & 0x4C04BECA) - 1509793947) ^ 0x59FDA09B) + v172;
  v176 = *(_DWORD *)&v108[4 * (HIBYTE(v170) ^ 0x3B)];
  HIDWORD(v122) = v176 ^ 0x2DE08;
  LODWORD(v122) = v176 ^ 0x202C0000;
  v433 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0xEEAC7E76);
  v177 = *(_DWORD *)&v110[4 * (BYTE2(v169) ^ 0x95)];
  v427 = -351572507 * v177 - ((370596810 * v177 + 350016330) & 0x24379994);
  v178 = *(_DWORD *)&v114[4
                        * (((unsigned __int16)(*(_WORD *)&v143[4 * (v144 ^ 0xCC)] ^ a35 ^ (v162 - 19139) ^ ((v162 - 656165571) >> 1) ^ ((v162 - 656165571) >> 2) ^ (28133 * v163 - ((-11446 - 9270 * v163) & 0x7120) - 24011) ^ (-67 * v164 - ((-134 * v164 + 15860) & 0x7260) + 22570) ^ (-27566 * v164 - 2 * ((-27566 * v164 - 29788) & 0x422A ^ (-27566 * v164) & 2) - 12852)) >> 8) ^ 0x7E)];
  v423 = -2106982467 * v178 - ((81002362 * v178 + 1838562804) & 0x53A1326A);
  v419 = 990942290 * v178 - ((1981884580 * v178 + 1643321160) & 0x76415AA4);
  v179 = *(_DWORD *)&v108[4 * (HIBYTE(v169) ^ 0x89)];
  HIDWORD(v122) = v179 ^ 0x2DE08;
  LODWORD(v122) = v179 ^ 0x202C0000;
  v180 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0x89CA13A4) - 991622702;
  v181 = (v180 >> 2) ^ (v180 >> 1);
  v182 = (v180 ^ ((v180 ^ 0x3B1AF62D) - ((2 * (v180 ^ 0x3B1AF62D) + 2) & 0x997AF42E) + 1287485976) ^ 0x3B80A01A ^ ((v180 ^ 0x685130B0 ^ v181) + (v181 ^ 0x534BC69D) + 1 - ((2 * ((v180 ^ 0x685130B0 ^ v181) + (v181 ^ 0x534BC69D) + 1)) & 0x67B1A7BE) - 1277635617))
       + (v181 ^ 0x534BC69D);
  v183 = *(_DWORD *)&v110[4 * (BYTE2(v171) ^ 0xD6)];
  LODWORD(v418) = v182 - ((2 * v182) & 0xA31923D6);
  v184 = v175 - ((2 * v175) & 0x12B2892E) + 156845207;
  v185 = *(_DWORD *)&v114[4 * (BYTE1(v184) ^ 0xF0)];
  v186 = -2106982467 * v185 - ((81002362 * v185 + 227950068) & 0x1A224B20);
  v187 = 990942290 * v185 - ((908142756 * v185 + 569579336) & 0x37E8A26C);
  LOWORD(v185) = ((2 * (v170 ^ 0x52)) & 0x19C) - (v170 ^ 0x52) + 22065;
  v188 = *(_DWORD *)&v108[4 * (HIBYTE(v171) ^ 0xA9)];
  HIDWORD(v122) = v188 ^ 0x2DE08;
  LODWORD(v122) = v188 ^ 0x202C0000;
  v189 = (v122 >> 18) + 1836454306 + (~(2 * (v122 >> 18)) | 0x2513DCBD);
  v190 = *(_DWORD *)&v114[4 * (((BYTE1(v170) ^ 0xED) - ((2 * (BYTE1(v170) ^ 0xED)) & 0x1AA) + 1237) ^ 0x4C4)];
  v191 = *(_DWORD *)&v110[4 * (BYTE2(v184) ^ 0xA2)];
  v192 = *(_DWORD *)&v108[4 * (HIBYTE(v184) ^ 0x4C)];
  HIDWORD(v122) = v192 ^ 0x2DE08;
  LODWORD(v122) = v192 ^ 0x202C0000;
  v193 = (HIWORD(v170) & 0xB3 ^ 0xAB903BFC) - (HIWORD(v170) & 0x4C);
  v194 = *(_DWORD *)&v110[4 * ((v193 & 0x72 | 0x43004000 | v193 & 0x8D ^ 0xA0780080) ^ 0xE378409C)];
  v195 = *(_DWORD *)&v114[4 * (BYTE1(v169) ^ 0x92)];
  v196 = *(_DWORD *)&v143[4 * (((v185 & 0x1EE ^ 0x148481CF) + (v185 & 0x211) - 1) ^ 0x148483C0)] ^ a34 ^ (-351572507 * v183 - ((370596810 * v183 + 350016330) & 0x2688132C) + 2108846907) ^ (v186 - 1008974710) ^ (v187 + 216915163) ^ (v418 - 779316757);
  v197 = v143;
  v198 = *(_DWORD *)&v143[4 * (v184 ^ 0x1D)] ^ a33 ^ (v427 + 2089432687) ^ (v433 - 145342661) ^ (v419 + 739916023) ^ (v423 + 1620817967) ^ ((v433 - 145342661) >> 1) ^ ((v433 - 145342661) >> 2);
  v199 = a16 ^ *(_DWORD *)&v143[4 * (v169 ^ 0x82)] ^ (-2106982467 * v190
                                                                     - ((81002362 * v190 + 1838562804) & 0x83C49BC0)
                                                                     + 2024631514) ^ (990942290 * v190
                                                                                    - ((371271844 * v190 + 32708424) & 0x1686D904)
                                                                                    - 63113177) ^ v189 ^ (v189 >> 1) ^ (v189 >> 2) ^ (-351572507 * v191 - ((-723725494 - 703145014 * v191) & 0xD64B4192) - 711718290);
  v200 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0x3A3F2DBE) + 488609503;
  v201 = *(_DWORD *)&v143[4 * (v171 ^ 0x21)] ^ HIDWORD(a33) ^ (-351572507 * v194
                                                                              - ((-723725494 - 703145014 * v194) & 0x8A2404B0)
                                                                              + 796945405) ^ (-2106982467 * v195
                                                                                            - ((81002362 * v195
                                                                                              + 227950068) & 0xBB6A06E)
                                                                                            + 1017540401) ^ (990942290 * v195 - ((371271844 * v195 + 32708424) & 0x1224CEE8) + 2047603481) ^ v200 ^ (v200 >> 1) ^ (v200 >> 2);
  v202 = *(_DWORD *)&v108[4 * (HIBYTE(v198) ^ 0xB8)];
  HIDWORD(v122) = v202 ^ 0x2DE08;
  LODWORD(v122) = v202 ^ 0x202C0000;
  v424 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0x31ECADA0);
  v203 = *(_DWORD *)&v110[4 * (BYTE2(v196) ^ 0xB1)];
  v428 = -351572507 * v203 - ((-723725494 - 703145014 * v203) & 0xAFB22B16);
  v204 = *(_DWORD *)&v114[4 * (BYTE1(v199) ^ 0x49)];
  v434 = -2106982467 * v204 - ((81002362 * v204 + 1838562804) & 0xEB6DF80C);
  v420 = (~(1981884580 * v204 - 504162488) | 0x2A8D9D6F) + 990942290 * v204;
  v205 = *(_DWORD *)&v108[4 * (HIBYTE(v196) ^ 0x97)];
  HIDWORD(v122) = v205 ^ 0x2DE08;
  LODWORD(v122) = v205 ^ 0x202C0000;
  v206 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0xF30E65B8);
  v207 = *(_DWORD *)&v110[4 * (BYTE2(v199) ^ 0xE0)];
  v208 = -351572507 * v207 - ((1444338634 * v207 + 1423758154) & 0x498E0D60);
  v209 = (((2 * (BYTE1(v201) ^ 0xE4)) | 0x78788B3C) - (BYTE1(v201) ^ 0xE4) - 1010582942) ^ 0x1030600E;
  v210 = *(_DWORD *)&v114[4 * ((((2 * v209) | 0xE608D20E) - v209 - 1929668871) ^ 0x5F084CB8)];
  HIDWORD(v417) = (~(81002362 * v210 + 1838562804) | 0xB1077765) - 2106982467 * v210;
  v211 = 990942290 * v210 - 2 * ((990942290 * v210 + 284789668) & 0x1A1D8D1E ^ (990942290 * v210) & 2);
  v212 = *(_DWORD *)&v108[4 * (HIBYTE(v199) ^ 0xDA)];
  HIDWORD(v122) = v212 ^ 0x2DE08;
  LODWORD(v122) = v212 ^ 0x202C0000;
  v213 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0x16E94BB4);
  v214 = *(_DWORD *)&v110[4 * (BYTE2(v201) ^ 0xBA)];
  LODWORD(v418) = -351572507 * v214 - ((-703145014 * v214 - 723725494) & 0xAB4AFBA2);
  v215 = *(_DWORD *)&v114[4
                        * (((BYTE1(v198) ^ 0xFFFFFFBF) - 1725823723 + ((2 * BYTE1(v198)) | 0xCDBBF5D8)) ^ 0x66DDFA00)];
  v216 = *(_DWORD *)&v108[4 * (HIBYTE(v201) ^ 0x9F)];
  HIDWORD(v122) = v216 ^ 0x2DE08;
  LODWORD(v122) = v216 ^ 0x202C0000;
  v217 = *(_DWORD *)&v110[4 * (BYTE2(v198) ^ 0xAB)];
  v218 = *(_DWORD *)&v114[4
                        * (((BYTE1(v196) ^ 0x940300BC)
                          + ((v196 >> 8) & 0x11 ^ 0x6A244501)
                          - ((BYTE1(v196) ^ 0x940300BC) & 0x10000011)) ^ 0xEE2745D0)];
  v219 = (((2 * (v199 ^ 0x6D)) | 0x71067FE4) - (v199 ^ 0x6D) - 948125682) ^ 0x60803B96;
  v220 = HIDWORD(a15) ^ *(_DWORD *)&v143[4 * (v198 ^ 0x1C)] ^ (v208 - 1892323243) ^ (v206 - 108580132) ^ ((v206 - 108580132) >> 1) ^ ((v206 - 108580132) >> 2) ^ (HIDWORD(v417) + 1581736776) ^ (v211 - 1961420608) ^ 0x7026F035;
  v221 = v220 - ((2 * v220) & 0x3878BBA);
  v222 = *(_DWORD *)&v143[4 * (v201 ^ 0x13)] ^ HIDWORD(a32) ^ (v424 + 418797264) ^ (v420 + 1538440429) ^ (v434 + 746724096) ^ (v428 - 1035501776) ^ ((v424 + 418797264) >> 1) ^ ((v424 + 418797264) >> 2);
  v221 -= 2117876259;
  v223 = *(_DWORD *)&v143[4 * (v196 ^ 0xBD)] ^ a32 ^ (v213 + 192194010) ^ (-2106982467 * v215
                                                                                          - ((81002362 * v215
                                                                                            + 1838562804) & 0x60251F3A)
                                                                                          + 1725804183) ^ (990942290 * v215 - ((1981884580 * v215 + 1643321160) & 0x7F2F5F44) - 1332659386) ^ (v418 + 1075046262) ^ ((v213 + 192194010) >> 1) ^ ((v213 + 192194010) >> 2);
  v224 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0x130E883E) + 159859743;
  v225 = *(_DWORD *)&v143[4 * ((((2 * v219) & 0xB12FA6DA) - v219 - 1486345070) ^ 0xFF6B2827)] ^ HIDWORD(a31) ^ (-351572507 * v217 - ((-703145014 * v217 - 723725494) & 0xDA2FD7A0) + 1468421493) ^ v224 ^ (v224 >> 1) ^ (v224 >> 2) ^ (-2106982467 * v218 - ((81002362 * v218 + 1838562804) & 0xF7B4EF42) - 1297770853) ^ (990942290 * v218 - ((1981884580 * v218 + 1643321160) & 0x40FAA0A0) - 1854481420);
  v226 = ((2 * v221) ^ 0x517F1386) - ((2 * ((2 * v221) ^ 0x517F1386)) & 0x3FAB520) + 134044304;
  v227 = (((v221 ^ 0x28BF89C3) + 30443546) ^ 0xBF76FE7F)
       + ((2 * ((v221 ^ 0x28BF89C3) + 30443546)) & 0x7EEDFCFE)
       + (v226 & 0x3A11034 ^ 0xCFA10859)
       + ((2 * v226) & 0x7420068 ^ 0xF8BDFFDF)
       + 1;
  v228 = *(_DWORD *)&v108[4 * (HIBYTE(v222) ^ 0x55)];
  HIDWORD(v122) = v228 ^ 0x2DE08;
  LODWORD(v122) = v228 ^ 0x202C0000;
  v229 = v227 - ((2 * v227 - 384707984) & 0xE357CC8E) - 432746625;
  LOWORD(v227) = (BYTE2(v229) ^ 0xC1) - ((2 * (BYTE2(v229) ^ 0xC1)) & 0x14C) + 31398;
  v230 = *(_DWORD *)&v110[4 * (((v227 & 0xC6 ^ 0x8C3D803) + (v227 & 0x339 ^ 0xE5002008) - 1) ^ 0xEDC3FA3D)];
  v231 = *(_DWORD *)&v114[4 * ((((v223 >> 8) & 0x9C ^ 0xADDFD119) + ((v223 >> 8) & 0x63) - 1) ^ 0xADDFD121)];
  v232 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0x1B99B8BE) + 231529567;
  v429 = *(_DWORD *)&v143[4 * (v225 ^ 0x91)] ^ a31 ^ v232 ^ (-2106982467 * v231
                                                                            - ((81002362 * v231 + 1838562804) & 0x455129A6)
                                                                            - 646728755) ^ (990942290 * v231
                                                                                          - ((1981884580 * v231
                                                                                            - 504162488) & 0xC09408D0)
                                                                                          - 784101363) ^ (-351572507 * v230 - ((-703145014 * v230 - 723725494) & 0xED3C7658) - 519265071) ^ (v232 >> 1) ^ (v232 >> 2);
  v233 = *(_DWORD *)&v108[4 * (HIBYTE(v229) ^ 0x34)];
  HIDWORD(v122) = v233 ^ 0x2DE08;
  LODWORD(v122) = v233 ^ 0x202C0000;
  v234 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0x538567AE);
  v235 = ((HIWORD(v223) & 0xB ^ 0xE7EFF203) + (HIWORD(v223) & 0xF4 ^ 0x55) - 1) ^ 0x6FF7F21B;
  v236 = *(_DWORD *)&v110[4 * ((((2 * v235) | 0x1ABBE53E) - v235 + 1923222881) ^ 0x545F20A)];
  v237 = *(_DWORD *)&v114[4 * ((((v225 >> 8) & 0x92 ^ 0x291) + ((v225 >> 8) & 0x6D) - 1) ^ 0x265)];
  v238 = -2106982467 * v237 - ((81002362 * v237 + 1838562804) & 0xD65F3268);
  v239 = 990942290 * v237 - ((371271844 * v237 + 32708424) & 0x18918B40);
  v240 = (v222 ^ 0x3041464D) - ((2 * (v222 ^ 0x3041464D)) & 0x20800040);
  v241 = *(_DWORD *)&v108[4 * (HIBYTE(v223) ^ 0x1B)];
  HIDWORD(v122) = v241 ^ 0x2DE08;
  LODWORD(v122) = v241 ^ 0x202C0000;
  v242 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0xCAB34080);
  v243 = *(_DWORD *)&v110[4 * (BYTE2(v225) ^ 0x25)];
  v244 = *(_DWORD *)&v114[4
                        * (((BYTE1(v222) ^ 0xD41DA77E) - ((2 * (BYTE1(v222) ^ 0xD41DA77E)) & 0x109A2) + 6477009) & 0x7F1FFF ^ 0x7F1363)];
  v245 = ((2 * (v229 ^ 0x25119057)) | 0x56870216) - (v229 ^ 0x25119057);
  v246 = *(_DWORD *)&v108[4 * (HIBYTE(v225) ^ 0xC9)];
  HIDWORD(v122) = v246 ^ 0x2DE08;
  LODWORD(v122) = v246 ^ 0x202C0000;
  v247 = *(_DWORD *)&v110[4
                        * (((BYTE2(v222) ^ 0x9803C)
                          + (HIWORD(v222) & 0xF8 ^ 0xCD607EC0)
                          - ((BYTE2(v222) ^ 0x9803C) & 0xFFF8FFF8)) ^ 0xCD617EFE)];
  v248 = -351572507 * v247 - ((-723725494 - 703145014 * v247) & 0xDE0CB3A0);
  v249 = *(_DWORD *)&v114[4 * (BYTE1(v229) ^ 0x52)];
  v250 = -2106982467 * v249 - ((81002362 * v249 + 764820980) & 0x3AF65AA8);
  v251 = 990942290 * v249 - ((1981884580 * v249 - 504162488) & 0xD0EC0F44);
  v252 = *(_DWORD *)&v143[4 * ((v240 - 1706026720) ^ 0xAA115F76)] ^ HIDWORD(a30) ^ (-351572507 * v236
                                                                                  - ((370596810 * v236 + 350016330) & 0x1224242E)
                                                                                  + 1937800124) ^ (v238 - 1577404370) ^ (v239 - 45985468) ^ (v234 + 700625879) ^ ((v234 + 700625879) >> 1) ^ ((v234 + 700625879) >> 2);
  v253 = *(_DWORD *)&v143[4 * ((v245 + 1421639413) ^ 0x8E521191)] ^ a30 ^ (-351572507 * v243
                                                                         - ((-723725494 - 703145014 * v243) & 0xAB64F20A)
                                                                         + 1075897002) ^ (v242 + 1700372544) ^ ((v242 + 1700372544) >> 1) ^ ((v242 + 1700372544) >> 2) ^ (-2106982467 * v244 - ((81002362 * v244 + 1838562804) & 0x6EDD31A6) + 1849276365) ^ (990942290 * v244 - ((1981884580 * v244 + 1643321160) & 0x701FA880) - 1459003420);
  v254 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0xE815FE26) + 1946877715;
  v255 = *(_DWORD *)&v108[4 * (HIBYTE(v429) ^ 3)];
  HIDWORD(v122) = v255 ^ 0x2DE08;
  LODWORD(v122) = v255 ^ 0x202C0000;
  v256 = *(_DWORD *)&v143[4 * (v223 ^ 2)] ^ HIDWORD(a29) ^ v254 ^ (v248 - 646659211) ^ (v251 - 646999225) ^ (v250 - 733590450) ^ (v254 >> 1) ^ (v254 >> 2);
  v257 = *(_DWORD *)&v110[4 * (((HIWORD(v252) & 0x98 ^ 0x226A291) + (HIWORD(v252) & 0x67) - 1) ^ 0x226A285)];
  v435 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0x886AFF6C);
  LODWORD(v421) = -351572507 * v257 - ((-703145014 * v257 - 723725494) & 0x8AA2D6C2);
  v258 = *(_DWORD *)&v114[4 * ((((v253 >> 8) & 0xC2 ^ 0x4583) - ((v253 >> 8) & 0x3D) + 1267107900) ^ 0x4B86CDFC)];
  HIDWORD(v417) = -2106982467 * v258 - ((81002362 * v258 + 227950068) & 0x168D47D0);
  v259 = *(_DWORD *)&v108[4 * (HIBYTE(v252) ^ 0x1B)];
  LODWORD(v418) = 990942290 * v258 - ((1981884580 * v258 - 504162488) & 0xD8D48A74);
  HIDWORD(v122) = v259 ^ 0x2DE08;
  LODWORD(v122) = v259 ^ 0x202C0000;
  v425 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0x682F5E22);
  v260 = (BYTE2(v253) ^ 0xB4) + (HIWORD(v253) & 0xD8 ^ 0x4C167148) - ((BYTE2(v253) ^ 0xB4) & 0xD8);
  v261 = *(_DWORD *)&v110[4 * (((v260 & 0x14A6 ^ 0x1046027) + (v260 & 0xB59) - 1) ^ 0x104716C)];
  v262 = -351572507 * v261 - ((-703145014 * v261 - 723725494) & 0x95CD8E18);
  v263 = *(_DWORD *)&v114[4 * (BYTE1(v256) ^ 0xF6)];
  v264 = -2106982467 * v263 - ((81002362 * v263 + 1838562804) & 0xE86B3420);
  v265 = 990942290 * v263 - ((1981884580 * v263 - 504162488) & 0xB9AD7F5C);
  v266 = *(_DWORD *)&v108[4 * (HIBYTE(v253) ^ 0x85)];
  HIDWORD(v122) = v266 ^ 0x2DE08;
  LODWORD(v122) = v266 ^ 0x202C0000;
  v267 = *(_DWORD *)&v110[4 * (BYTE2(v256) ^ 0x6C)];
  v268 = *(_DWORD *)&v114[4 * (BYTE1(v429) ^ 0xB8)];
  v269 = -2106982467 * v268 - ((81002362 * v268 + 227950068) & 0xE15B814);
  v270 = -2069721088 * v268 - ((155525120 * v268 + 146423808) & 0xD700000);
  v271 = 990942290 * v268 - ((1981884580 * v268 - 504162488) & 0x982BF1E0) + 1024427157;
  v272 = (((v270 - 753589715) ^ 0x6B8022D) & 0xFFFFF800 | (v271 >> 21)) ^ 0x660;
  v273 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0xD5512602) + 1789432577;
  v274 = v273 ^ (-351572507 * v267 - ((-723725494 - 703145014 * v267) & 0x8D5C15EC) + 823948443) ^ (v273 >> 1) ^ (v273 >> 2) ^ (v269 - 1110050044);
  HIDWORD(v122) = v274 ^ 0x1228BD;
  LODWORD(v122) = v274 ^ 0x84E00000;
  v275 = ((v122 >> 21) - ((2 * (v122 >> 21)) & 0xC085C5BE) - 532487457) ^ (v272
                                                                         + 672263646
                                                                         - 2 * (v272 & 0x2811EDDF ^ (v271 >> 21) & 1));
  HIDWORD(v122) = v275 ^ 0x7AB;
  LODWORD(v122) = v275 ^ 0x46115000;
  v276 = (v122 >> 11) - ((2 * (v122 >> 11)) & 0xA411B762);
  v277 = *(_DWORD *)&v108[4 * (HIBYTE(v256) ^ 0x34)];
  HIDWORD(v122) = v277 ^ 0x2DE08;
  LODWORD(v122) = v277 ^ 0x202C0000;
  v278 = (v252 ^ 0xBF) - ((2 * (v252 ^ 0xBF)) & 0xB2) - 159223463;
  v279 = *(_DWORD *)&v110[4 * (BYTE2(v429) ^ 0xAA)];
  v280 = *(_DWORD *)&v114[4 * (BYTE1(v252) ^ 0x21)];
  v281 = *(_DWORD *)&v143[4 * (v256 ^ 0xE3)] ^ a29 ^ (v421 + 801101062) ^ (v418 - 580661026) ^ (HIDWORD(v417) - 1039023390) ^ (v435 + 1144356790) ^ ((v435 + 1144356790) >> 1) ^ ((v435 + 1144356790) >> 2);
  v282 = *(_DWORD *)&v143[4 * (v429 ^ 0x65)] ^ HIDWORD(a28) ^ (v425 + 873967377) ^ ((v425 + 873967377) >> 1) ^ ((v425 + 873967377) >> 2) ^ (v262 - 1252708175) ^ (v264 + 721467658) ^ (v265 + 1305496403);
  v283 = *(_DWORD *)&v143[4
                        * (((v278 & 0x4000D9C ^ 0x15D0C84) + (v278 ^ 0xF602315B) - ((v278 ^ 0xF602315B) & 0xD9C)) ^ 0x5DD4D4E)] ^ a27 ^ (v276 + 1376312241);
  v284 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0x6045EEC8) + 807597924;
  v285 = *(_DWORD *)&v108[4 * (HIBYTE(v281) ^ 0x94)];
  HIDWORD(v122) = v285 ^ 0x2DE08;
  LODWORD(v122) = v285 ^ 0x202C0000;
  v286 = *(_DWORD *)&v143[4
                        * ((((2 * (v253 ^ 0x1A90136F)) & 0x2020206A)
                          - (v253 ^ 0x1A90136F)
                          - 293010486) ^ 0xF4191030)] ^ a28 ^ v284 ^ (990942290 * v280
                                                                    - ((1981884580 * v280 - 504162488) & 0x908AC300)
                                                                    - 1187058396) ^ (-2106982467 * v280
                                                                                   - ((81002362 * v280 + 1838562804) & 0x57AA591A)
                                                                                   - 492811385) ^ (-351572507 * v279
                                                                                                 - ((370596810 * v279 + 350016330) & 0x37CA7CDE)
                                                                                                 - 2041337836) ^ (v284 >> 1) ^ (v284 >> 2);
  v287 = *(_DWORD *)&v110[4 * (BYTE2(v282) ^ 0x49)];
  v436 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0x891B82F0);
  HIDWORD(v421) = -351572507 * v287 - ((-703145014 * v287 - 723725494) & 0xB40E14B2);
  v288 = *(_DWORD *)&v114[4 * (BYTE1(v283) ^ 0xB)];
  LODWORD(v430) = -2106982467 * v288 - ((81002362 * v288 + 227950068) & 0x1BA412F6);
  v289 = *(_DWORD *)&v108[4 * (HIBYTE(v282) ^ 0xC)];
  HIDWORD(v122) = v289 ^ 0x2DE08;
  LODWORD(v122) = v289 ^ 0x202C0000;
  v290 = 990942290 * v288 - ((371271844 * v288 + 32708424) & 0x1D24CB10);
  v291 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0x21FEE7A);
  v292 = ((BYTE2(v283) ^ 0xC3) + (HIWORD(v283) & 0xCB ^ 0xCC57DD08) - ((BYTE2(v283) ^ 0xC3) & 0xCB)) ^ 0x8D13FDD8;
  v293 = *(_DWORD *)&v110[4 * ((((2 * v292) & 0x88421E) - v292 - 880093456) ^ 0x8ACEF66F)];
  v294 = *(_DWORD *)&v114[4 * (BYTE1(v286) ^ 0xA0)];
  v295 = *(_DWORD *)&v108[4 * (HIBYTE(v283) ^ 0x39)];
  HIDWORD(v122) = v295 ^ 0x2DE08;
  LODWORD(v122) = v295 ^ 0x202C0000;
  v296 = (v122 >> 18) + 384219850 + (~(2 * (v122 >> 18)) | 0xD2328A6D);
  v291 += 17823549;
  v297 = *(_DWORD *)&v143[4
                        * (((v281 ^ 0xD0)
                          + (v281 & 0xE1 ^ 0xE1EB7E21)
                          - ((v281 ^ 0xD0) & 0xFFFFFFE1)) ^ 0xE1EB7EC6)] ^ HIDWORD(a26) ^ v291 ^ (-2106982467 * v294 - ((81002362 * v294 + 1838562804) & 0xBC285F62) + 350178987) ^ (990942290 * v294 - ((1981884580 * v294 - 504162488) & 0x9BD74BCC) - 1092275829) ^ (-351572507 * v293 - ((-703145014 * v293 - 723725494) & 0xA8F41EDA) - 1092060910) ^ (v291 >> 1) ^ (v291 >> 2);
  v298 = (((2 * (BYTE1(v281) ^ 0xD4)) | 0xA4C4E10) - (BYTE1(v281) ^ 0xD4) + 2061097208) ^ 0xB7A46309;
  v299 = *(_DWORD *)&v114[4 * ((v298 - ((2 * v298) & 0x28CA29F0) + 342168824) ^ 0x26E7501E)];
  LODWORD(v143) = -2106982467 * v299 - ((81002362 * v299 + 1838562804) & 0x86CEA5DC);
  v300 = *(_DWORD *)&v110[4
                        * ((((2 * (BYTE2(v286) ^ 0x2C0700FF)) | 0x2E7A43A2) - (BYTE2(v286) ^ 0x2C0700FF) - 389882321) ^ 0x3B3A21DB)];
  v301 = 990942290 * v299 - ((371271844 * v299 + 32708424) & 0x1CB6CDF4);
  v302 = *(_DWORD *)&v108[4 * (HIBYTE(v286) ^ 0xB9)];
  HIDWORD(v122) = v302 ^ 0x2DE08;
  LODWORD(v122) = v302 ^ 0x202C0000;
  v303 = *(_DWORD *)&v110[4 * (((HIWORD(v281) & 3 ^ 0x2BC68601) + (HIWORD(v281) & 0xFC ^ 0x1070E1) - 1) ^ 0x2BD6F6F1)];
  v304 = *(_DWORD *)&v114[4 * (BYTE1(v282) ^ 0x35)];
  v305 = ((v283 & 0xF8 ^ 0x17ACA9A1) + (v283 & 7) - 1) ^ 0x7A4BDBC;
  v306 = 367894672 - (v305 | 0x15EDA090) + (v305 | 0xEA125F6F);
  v307 = *(_DWORD *)&v197[4 * (v286 ^ 0xEE)] ^ HIDWORD(a27) ^ (HIDWORD(v421) + 1148548094) ^ (v436 - 997342856) ^ (v290 - 7605972) ^ (v430 - 996333451) ^ ((v436 - 997342856) >> 1) ^ ((v436 - 997342856) >> 2);
  v308 = *(_DWORD *)&v197[4 * (v282 ^ 0x89)] ^ a26 ^ ((_DWORD)v143 + 2050126312) ^ v296 ^ (v301 + 2136273566) ^ (v296 >> 1) ^ (v296 >> 2) ^ (-351572507 * v300 - ((-723725494 - 703145014 * v300) & 0xA90A7C8A) + 1056155626);
  v309 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0xAA6F46A2) - 717773999;
  v310 = *(_DWORD *)&v197[4 * (v306 ^ 0xFA1A4BE8)] ^ HIDWORD(a25) ^ (-351572507 * v303
                                                                   - ((-723725494 - 703145014 * v303) & 0xD5E6E142)
                                                                   + 1432476230) ^ v309 ^ (-2106982467 * v304
                                                                                         - ((81002362 * v304 + 1838562804) & 0xA9720714)
                                                                                         + 193208964) ^ (v309 >> 1) ^ (v309 >> 2) ^ (990942290 * v304 - 2 * ((990942290 * v304 + 1895402404) & 0x4DD7CF52 ^ (990942290 * v304) & 2) - 1093575947);
  v311 = v297 ^ ((v297 ^ 0x5C5EBC40) - ((2 * (v297 ^ 0x5C5EBC40) + 2) & 0x48E13A4E) + 611360040) ^ ((v297 ^ 0x2C1333DA)
                                                                                                  - ((2 * (v297 ^ 0x2C1333DA) - 526704842) & 0xB2C6E596)
                                                                                                  - 911146394) ^ 0xDEB2AC53;
  v312 = *(_DWORD *)&v108[4 * (HIBYTE(v307) ^ 0xB)];
  HIDWORD(v122) = v312 ^ 0x2DE08;
  LODWORD(v122) = v312 ^ 0x202C0000;
  v437 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0xE5FAC758);
  v313 = v311 - ((2 * v311 - 526704844) & 0xF50D84AA) + 1792299503;
  v314 = *(_DWORD *)&v110[4 * (BYTE2(v313) ^ 0x7D)];
  v315 = -351572507 * v314 - ((370596810 * v314 + 350016330) & 0x1A6A2AC2);
  v316 = *(_DWORD *)&v114[4 * (((unsigned __int16)(v308 ^ 0xF72F) >> 8) ^ 0x20)];
  v317 = -2106982467 * v316 - ((81002362 * v316 + 93732340) & 0x55BCDB6);
  v318 = 990942290 * v316 - ((1981884580 * v316 - 504162488) & 0xB379AFBC);
  v319 = *(_DWORD *)&v108[4 * (HIBYTE(v313) ^ 0xBF)];
  HIDWORD(v122) = v319 ^ 0x2DE08;
  LODWORD(v122) = v319 ^ 0x202C0000;
  v320 = *(_DWORD *)&v110[4 * (((v308 ^ 0x2847F72F) >> 16) ^ 0x11)];
  v321 = *(_DWORD *)&v114[4 * (BYTE1(v310) ^ 0xF8)];
  v322 = ((v307 ^ 0xC7) - ((2 * (v307 ^ 0xC7)) & 0x174) + 469311162) ^ 0xBBF12BBF;
  v323 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0x56C54B70) - 1419598408;
  v324 = *(_DWORD *)&v197[4 * ((((2 * v322) | 0x27BF64EC) - v322 - 333427318) ^ 0xB3D78758)] ^ a24 ^ (-351572507 * v320 - ((-703145014 * v320 - 723725494) & 0xA5156BC4) - 1124524153) ^ (990942290 * v321 - ((1981884580 * v321 - 504162488) & 0xA0C92BBC) - 1050795646) ^ (-2106982467 * v321 - ((81002362 * v321 + 1838562804) & 0xFDC57460) + 900585770) ^ v323 ^ (v323 >> 1) ^ (v323 >> 2);
  v325 = *(_DWORD *)&v108[4 * (HIBYTE(v308) ^ 0x3C)];
  HIDWORD(v122) = v325 ^ 0x2DE08;
  LODWORD(v122) = v325 ^ 0x202C0000;
  v326 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0x6E326D4C);
  v327 = *(_DWORD *)&v110[4 * (BYTE2(v310) ^ 0x5A)];
  v328 = -351572507 * v327 - ((1444338634 * v327 + 1423758154) & 0x51F8CB10);
  v329 = ((2 * (BYTE1(v307) ^ 0x6D)) & 0x158) - (BYTE1(v307) ^ 0x6D) + 453200211;
  v330 = *(_DWORD *)&v114[4
                        * (((v329 & 0x13000CE3 ^ 0x806424A2) + (v329 ^ 0x1B034B51) - ((v329 ^ 0x1B034B51) & 0xCE3)) ^ 0x93642E5B)];
  v331 = *(_DWORD *)&v108[4 * (HIBYTE(v310) ^ 0x79)];
  HIDWORD(v122) = v331 ^ 0x2DE08;
  LODWORD(v122) = v331 ^ 0x202C0000;
  v332 = *(_DWORD *)&v110[4 * (BYTE2(v307) ^ 0xFD)];
  v333 = *(_DWORD *)&v114[4 * (BYTE1(v313) ^ 0x76)];
  v334 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0xBEF0391A) - 545776499;
  v335 = *(_DWORD *)&v197[4 * (v308 ^ 0xF6)] ^ HIDWORD(a24) ^ (-351572507 * v332
                                                                              - ((1444338634 * v332 + 1423758154) & 0x7BE64914)
                                                                              - 1470001617) ^ v334 ^ (990942290 * v333 - ((1981884580 * v333 + 1643321160) & 0x7A212B84) + 772415847) ^ (-2106982467 * v333 - ((81002362 * v333 + 227950068) & 0x9DD2CA4) + 1002026316) ^ (v334 >> 1) ^ (v334 >> 2);
  v336 = *(_DWORD *)&v197[4 * (v310 ^ 0x2F)] ^ a25 ^ (v437 - 218274900) ^ (v315 - 140280058) ^ ((v437 - 218274900) >> 1) ^ ((v437 - 218274900) >> 2) ^ (v317 + 964232661) ^ (v318 + 1253467010);
  v337 = a15 ^ (v328 - 1821716691) ^ (v326 + 924399270) ^ *(_DWORD *)&v197[4 * (v313 ^ 0xDF)] ^ ((v326 + 924399270) >> 1) ^ ((v326 + 924399270) >> 2) ^ (-2106982467 * v330 - ((81002362 * v330 + 1838562804) & 0x5D2C497A) - 446610505) ^ (990942290 * v330 - ((1981884580 * v330 - 504162488) & 0x95995F98) - 1144636559);
  v338 = *(_DWORD *)&v108[4 * (HIBYTE(v336) ^ 0x76)];
  HIDWORD(v122) = v338 ^ 0x2DE08;
  LODWORD(v122) = v338 ^ 0x202C0000;
  v339 = *(_DWORD *)&v114[4
                        * (((unsigned __int16)(a15 ^ (v328 - 12499) ^ (v326 + 13990) ^ *(_WORD *)&v197[4 * (v313 ^ 0xDF)] ^ ((v326 + 924399270) >> 1) ^ ((v326 + 924399270) >> 2) ^ (-67 * v330 - ((-134 * v330 + 15860) & 0x497A) + 17335) ^ (-27566 * v330 - ((10404 * v330 + 5960) & 0x5F98) + 15217)) >> 8) ^ 0xB8)];
  v340 = (char *)*(&off_10112C750 + (int)(v454 - 8878)) - 1671454790;
  v341 = *(_DWORD *)&v110[4 * (BYTE2(v324) ^ 0xA6)];
  v342 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0xFBC461E) + 131998479;
  v343 = *(_DWORD *)&v197[4 * (v335 ^ 0x6D)] ^ HIDWORD(a23) ^ (-2106982467 * v339
                                                                              - ((81002362 * v339 + 1838562804) & 0x6875678C)
                                                                              + 1795543744) ^ (990942290 * v339
                                                                                             - ((102836388 * v339
                                                                                               + 32708424) & 0x627D4B0)
                                                                                             + 1947039228) ^ v342 ^ (v342 >> 1) ^ (v342 >> 2) ^ ((~(1444338634 * v341 + 1423758154) | 0xB641633F) - 351572507 * v341 + 256751622);
  v344 = *(_DWORD *)&v108[4 * (HIBYTE(v324) ^ 0xB9)];
  HIDWORD(v122) = v344 ^ 0x2DE08;
  LODWORD(v122) = v344 ^ 0x202C0000;
  v345 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0xAE62DD34);
  v346 = *(_DWORD *)&v340[4 * (BYTE2(v337) ^ 0x97)];
  v347 = -351572507 * v346 - ((102161354 * v346 + 81580874) & 0x7D9B268);
  v348 = *(_DWORD *)&v114[4 * (BYTE1(v335) ^ 0xC2)];
  v349 = ((990942290 * v348 - ((1981884580 * v348 + 1643321160) & 0x5A55A2A4) - 1641784074) ^ 0x2D2AD152) & ((40501181 * v348 - ((81002362 * v348 + 1838562804) & 0x6D6B75E4) - 310322708) ^ 0x36B5BAF2);
  v350 = 2 * (v349 - ((2 * v349) & 0x5FE4A906)) - 538662650;
  v351 = (v350 ^ 0x8FF0BA47) - 1116040177 * v348 + ((2 * v350) & 0x5FD7D97C ^ 0xE03EAFF3) + 1;
  v352 = v351 - ((2 * v351 + 794898106) & 0x2481B7B6);
  v353 = *(_DWORD *)&v108[4 * (HIBYTE(v337) ^ 0xE5)];
  HIDWORD(v122) = v353 ^ 0x2DE08;
  LODWORD(v122) = v353 ^ 0x202C0000;
  v354 = *(_DWORD *)&v340[4 * (BYTE2(v335) ^ 0x33)];
  v355 = *(_DWORD *)&v114[4 * ((((v336 >> 8) & 0xDA ^ 0x9BE8FDD1) + ((v336 >> 8) & 0x25) - 1) ^ 0x9BE8FDBF)];
  v356 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0xE813BEAE) + 1946804055;
  v357 = *(_DWORD *)&v197[4 * (v324 ^ 0xDD)] ^ a23 ^ v356 ^ (-351572507 * v354
                                                                            - ((1444338634 * v354 + 1423758154) & 0x4B4595C8)
                                                                            - 1877920631) ^ (v356 >> 1) ^ (v356 >> 2) ^ (-2106982467 * v355 - ((81002362 * v355 + 1838562804) & 0xE8C568E2) - 1423060117) ^ (990942290 * v355 - 2 * ((990942290 * v355 + 821660580) & 0x2F93A33A ^ (990942290 * v355) & 2) - 1601360163);
  v358 = *(_DWORD *)&v108[4 * (HIBYTE(v335) ^ 0x64)];
  HIDWORD(v122) = v358 ^ 0x2DE08;
  LODWORD(v122) = v358 ^ 0x202C0000;
  v359 = *(_DWORD *)&v340[4 * (((HIWORD(v336) & 0xF4 ^ 0xD98208A1) + (HIWORD(v336) & 0xB) - 1) ^ 0xD982085C)];
  v360 = *(_DWORD *)&v114[4 * (BYTE1(v324) ^ 0xEC)];
  LODWORD(v340) = HIDWORD(a14) ^ *(_DWORD *)&v197[4
                                                * (((v336 ^ HIDWORD(a13))
                                                  + (v336 & 0xA7 ^ 0x13C87825)
                                                  - ((v336 ^ HIDWORD(a13)) & 0xA7)) ^ 0x13D8793D)] ^ (v345 + 1462857370) ^ ((v345 + 1462857370) >> 1) ^ ((v345 + 1462857370) >> 2) ^ (v347 - 296008999) ^ (v352 - 370052296);
  v361 = (v122 >> 18) - ((2 * (v122 >> 18)) & 0xA639A54E) - 753085785;
  v362 = *(_DWORD *)&v197[4 * (v337 ^ 0x8D)] ^ HIDWORD(a22) ^ v361 ^ ((~(81002362 * v360 + 1838562804) | 0x36F745F)
                                                                                     - 2106982467 * v360
                                                                                     + 890463435) ^ (990942290 * v360 - ((1981884580 * v360 - 504162488) & 0xC3BFFAB0) + 1389988093) ^ (-351572507 * v359 - ((370596810 * v359 + 350016330) & 0x1BD97388) - 128244887) ^ (v361 >> 1) ^ (v361 >> 2);
  HIDWORD(v122) = v357;
  LODWORD(v122) = v357 ^ 0xD6322B52;
  v363 = (v122 >> 1) - ((2 * (v122 >> 1)) & 0xC172F1E0) - 524715792;
  HIDWORD(v122) = v363 ^ 0x57B236BC;
  LODWORD(v122) = v363;
  v364 = (v122 >> 31) - ((2 * (v122 >> 31)) & 0x6B9FD0E0) + 902817904;
  v365 = ((BYTE2(v340) ^ 0xA8) + ((v340 >> 16) & 0xF5 ^ 0xB0153455) - ((BYTE2(v340) ^ 0xA8) & 0xF5)) ^ 0xB01188FD;
  v366 = ((2 * v365) | 0x4511ACF4) - v365;
  v367 = ((BYTE1(v364) ^ 0xE6) - ((2 * (BYTE1(v364) ^ 0xE6)) & 0xFFFFFF3F) - 837280353) ^ 0xCE9C99CF;
  v368 = (char *)*(&off_10112C750 + (int)(v454 - 12866)) - 1551285042;
  v369 = *(_DWORD *)&v368[4 * (HIBYTE(v343) ^ 0x6E)];
  v370 = ((4 * v369) & 0xDF7CBD70 ^ 0x545C0410) + ((2 * v369) ^ 0xD5915CB0);
  HIDWORD(v430) = v370 - 2 * ((v370 + 402558328) & 0x287FAD3A ^ (2 * v369) & 2);
  v371 = ((BYTE1(v364) ^ 0xFFFFFF2A) - ((2 * (BYTE1(v364) ^ 0xFFFFFF2A) + 450) & 0x50B0983A) + 676875518) ^ ((v367 | 0xA048D71F) - (v367 | 0x5FB728E0) + 1605839072) ^ 0x4825F731 ^ ((((v367 | 0xA048D71F) - (v367 | 0x5FB728E0) + 1605839072) ^ 0x5F33AC63) - ((2 * (((v367 | 0xA048D71F) - (v367 | 0x5FB728E0) + 1605839072) ^ 0x5F33AC63) + 2) & 0x8163D160) - 1062082383);
  v372 = (v362 ^ 0x4A) + (v362 & 0xC8 ^ 0xF5B05E80) - ((v362 ^ 0x4A) & 0xC8);
  v373 = ((2 * v362) ^ 0xC) - 4 * (v362 & 1) + 19;
  v374 = (v362 ^ 0xD4B508F9) + (v373 & 0xE ^ 0x68FFFBF9) + ((2 * v373) & 0x14 ^ 4) - 1761606651;
  v375 = v374 - ((2 * v374) & 0x868273E);
  v376 = (-286942229 - (BYTE2(v364) ^ 0x98 | 0xEEE59BEB) + (BYTE2(v364) ^ 0x98 | 0x111A6414)) ^ 0x321A7E54;
  v377 = 382888869 - (v376 | 0x16D26BA5) + (v376 | 0xE92D945A);
  v378 = *(_DWORD *)&v368[4 * ((v340 >> 24) ^ 0x98)];
  v379 = ((4 * v378) & 0xDBCFFDAC ^ 0x504E0400) + ((2 * v378) ^ 0x57C8FCDF);
  v380 = v379 - ((2 * v379 + 866769586) & 0x38553274);
  v381 = ((2 * v343) & 0x1F4 ^ 0x1C0) + (v343 ^ 0xE77DE71A);
  LODWORD(v197) = v381 + 727879500 + ((2 * v381 + 26) & 0x1E7C ^ 0xD7BDFFFF);
  v382 = ((2 * (v343 ^ 0xD5)) | 0xB95A8B70) - (v343 ^ 0xD5);
  v383 = *(_DWORD *)&v368[4 * (HIBYTE(v364) ^ 0x6D)];
  v384 = ((4 * v383) & 0xFDFF77EC ^ 0x745E0400) + ((2 * v383) ^ 0x44D0B9FE);
  v385 = v384 - ((2 * v384 - 1854250892) & 0xEB784B2C);
  v386 = ((BYTE1(v343) ^ 0x5F) + ((v343 >> 8) & 0xFB ^ 0x9C6A1DA0) - ((BYTE1(v343) ^ 0x5F) & 0xFFFFFFFB)) ^ 0x586A9DC9;
  v387 = ((2 * (_DWORD)v340) & 0x17E ^ 0x128) + (v340 ^ 0x37D3952B);
  v388 = ((2 * (v340 ^ 0xCB09C23)) & 0x1041205A) - (v340 ^ 0xCB09C23);
  LODWORD(v368) = *(_DWORD *)&v368[4 * (HIBYTE(v362) ^ 0xEE)];
  v389 = ((4 * (_DWORD)v368) & 0xBEB5DDF4 ^ 0x34140410) + ((2 * (_DWORD)v368) ^ 0xE575ECF3);
  v390 = (char *)*(&off_10112C750 + (int)(v454 ^ 0x3752)) - 1645538498;
  v391 = *(_DWORD *)&v390[4 * ((v366 + 1568090502) ^ 0xA28C6ADA)];
  v392 = *(_DWORD *)&v390[4 * (v377 ^ 0xCA2D8E28)];
  v393 = *(_DWORD *)&v390[4 * (BYTE2(v362) ^ 0x49)];
  v394 = *(unsigned int *)&v390[4 * (BYTE2(v343) ^ 0x4C)];
  v395 = ((v122 >> 31) - ((2 * (v122 >> 31)) & 0xE0) + 112);
  v396 = ((2 * v395) ^ 0x1A)
       + (v395 ^ 0xF7E7EEF2)
       - ((2 * (((2 * v395) ^ 0x1A) + (v395 ^ 0xF7E7EEF2)) - 1181076976) & 0x8842DFBE);
  v397 = v371 + 224;
  v398 = (char *)*(&off_10112C750 + (int)(v454 - 10727)) - 649156143;
  v399 = *(_DWORD *)&v398[4 * v397];
  v400 = *(_DWORD *)&v398[4 * (BYTE1(v362) ^ 0xC6)];
  v401 = *(_DWORD *)&v398[4 * ((((2 * v386) & 0x80010092) - v386 - 2013376586) ^ 0x43FECFF2)];
  LODWORD(v398) = *(_DWORD *)&v398[4 * (BYTE1(v340) ^ 3)];
  LODWORD(v340) = v372 ^ 0xF5B05E12;
  v402 = (char *)*(&off_10112C750 + (int)(v454 - 9624)) - 327530142;
  v403 = v369 ^ a38 ^ v391 ^ *(_DWORD *)&v402[4 * v340] ^ (HIDWORD(v430) + 8272560) ^ (v375 - 1522732129) ^ v399;
  v404 = (((2 * (v395 ^ 0xB4)) | 0x705DC2FE) - (v395 ^ 0xB4) + 1204887169) ^ 0xBC9EC5FB;
  v405 = a14 ^ v393 ^ v401 ^ v383 ^ *(_DWORD *)&v402[4 * ((v388 + 93474514) ^ 0x922D20B)] ^ (v387 + 241850352 + ((2 * v387 + 1168) & 0xB4E ^ 0x5EFFFFFF)) ^ (v385 + 1048139216);
  v406 = a13 ^ v197 ^ v378 ^ v400 ^ *(_DWORD *)&v402[4 * ((v382 + 592624200) ^ 0xDCAD45E3)] ^ v392 ^ (v380 + 1979680404);
  v407 = HIDWORD(a12) ^ v394 ^ v368 ^ v398 ^ (v396 + 590383335) ^ (v389 - ((2 * v389 - 792462742) & 0x98D8711C) + 885929411) ^ *(_DWORD *)&v402[4 * ((((2 * v404) & 0x398B9932) - v404 + 591016806) ^ 0x278A1735)];
  v408 = (char *)*(&off_10112C750 + (int)(v454 ^ 0x30B4)) - 1384628778;
  *(_BYTE *)(v439 - 0x3B977FFF9FEFEFEDLL) = v408[v403 ^ 0xCALL] ^ 0x12;
  *(_BYTE *)(v440 + 0x2653B01982712094) = v408[v406 ^ 0x35] ^ 0x7D;
  v409 = (char *)*(&off_10112C750 + (int)(v454 ^ 0x220F)) - 110572511;
  *(_BYTE *)(v438 - 0x5EFE86BD927AFABALL) = HIBYTE(v403) ^ 0x19 ^ v409[HIBYTE(v403) ^ 0xAALL];
  *(_BYTE *)((((int)v446 - 2051926919 + ((2 * (v446 & 0x5B21473 ^ HIDWORD(v446))) ^ 0x15) + 1) ^ 0xFAFE9F7C4B0DEFD6)
           + a68
           + ((2 * (((int)v446 - 2051926919 + ((2 * (v446 & 0x5B21473 ^ HIDWORD(v446))) ^ 0x15) + 1) ^ 0x85B21479)) & 0x19D7FF75ELL)
           + 0x501608331400451) = v409[BYTE3(v407) ^ 0x23] ^ ((BYTE3(v407) ^ 0x23)
                                                                - ((2 * (BYTE3(v407) ^ 0x23)) & 0x1A)
                                                                - 115) ^ 0x83;
  v410 = ((2 * (BYTE2(v405) ^ 0x5D)) & 0x86) - (BYTE2(v405) ^ 0x5D) - 1704764740;
  v411 = (char *)*(&off_10112C750 + (int)(v454 - 9218)) - 1928298866;
  LOBYTE(v410) = v411[((v410 & 0x6011DE ^ 0x5148140) + (v410 ^ 0x4AE27EBE) - ((v410 ^ 0x4AE27EBE) & 0x8125DEu)) ^ 0xD57491B4];
  *(_BYTE *)(((v447 - 1673575187 + ((2 * (v447 & 0x1C3F44E6 ^ HIDWORD(v446))) ^ 0x17) + 1) ^ 0x7B7D3E6E73CB9300)
           + a68
           + ((2 * ((v447 - 1673575187 + ((2 * (v447 & 0x1C3F44E6 ^ HIDWORD(v446))) ^ 0x17) + 1) ^ 0x9C3F44ED)) & 0x1DFE9AFDALL)
           - 0x7B7D3E6EEFF4D7EDLL) = (((v410 - ((2 * v410) & 0xEA) - 7) ^ 3) - 4) ^ 0x27;
  v412 = (WORD1(v407) & 0x29 ^ 0x5E4249DF) - (WORD1(v407) & 0xD6);
  LOBYTE(v412) = v411[((v412 & 0x1D3 ^ 0x86442081) + (v412 & 0x2C ^ 0x1103100D) - 1) ^ 0x974731CDLL];
  *(_BYTE *)(v445 + 0x39080800A0810C91) = (v412 - ((2 * v412) & 0xEA) - 11) ^ 0xB6;
  v413 = (char *)*(&off_10112C750 + (int)(v454 - 8667)) - 1493111995;
  v414 = v451 + 1367868873 + ((2 * v451) & 0xA3100B82 ^ 0xFFFFFFEF) + 1;
  *(_BYTE *)(v448 - 0x73CE4ED76DFF7562) = BYTE1(v406) ^ 0x91 ^ v413[BYTE1(v406) ^ 0x13];
  v415 = (BYTE1(v405) ^ 0xBE | 0xC94FE20C) - (BYTE1(v405) ^ 0xBE | 0x36B01DF3) + 917511667;
  *(_BYTE *)((v414 ^ 0xEFFDCFDAEE74F926) + a68 + ((2 * (v414 ^ 0x518805C9)) & 0x17FF9F9DELL) + 0x1002302540030311) = BYTE1(v405) ^ 0xA ^ v413[((v415 & 0x8843C152 ^ 0x1A010902) + (v415 ^ 0xC16AF65C) - ((v415 ^ 0xC16AF65C) & 0x9A63DD52)) ^ 0x9246C9E7];
  *(_BYTE *)(v452 - 0x1AEFBDFBFBF77BF3) = (v411[BYTE2(v403) ^ 0xF6] + (~(2 * v411[BYTE2(v403) ^ 0xF6]) | 0x99) + 52) ^ 0xAA;
  *(_BYTE *)(v444 - 0x7E1DF753FAF7FCE1) = BYTE3(v405) ^ v409[BYTE3(v405) ^ 4] ^ 0xFE;
  *(_BYTE *)(v450 + 0x20C11008003E4911) = v408[(706267730
                                                - (v407 ^ 0x78F60A3C | 0x2A18CA52)
                                                + (v407 ^ 0x78F60A3C | 0xD5E735AD)) ^ 0xAD113F8CLL] ^ 0x9E;
  *(_BYTE *)(v441 + 0x6002912289911A09) = BYTE1(v407) ^ v413[BYTE1(v407) ^ 0xAALL] ^ 0xC;
  *(_BYTE *)((((int)a57 + 1798988691 + ((2 * (a57 & 0x6B3A639A ^ (HIDWORD(a52) | 0x7FFFFFF7u))) ^ 0x13) + 1) ^ 0xFCFFE9BFA1C59D44)
           + a68
           + ((2
             * (((int)a57 + 1798988691 + ((2 * (a57 & 0x6B3A639A ^ (HIDWORD(a52) | 0x7FFFFFF7u))) ^ 0x13) + 1) ^ 0x6B3A6393)) & 0x195FFFDAELL)
           + 0x300164035000129) = (v411[BYTE2(v406) ^ 0x2CLL] - ((2 * v411[BYTE2(v406) ^ 0x2CLL]) & 0x2E) + 23) ^ 0x54;
  *(_BYTE *)(v442 - 0x7CAF7EF7ACFD16BBLL) = BYTE1(v403) ^ 0x25 ^ v413[(674530403
                                                                     - (BYTE1(v403) ^ 0xB0 | 0x28348463)
                                                                     + (BYTE1(v403) ^ 0xB0 | 0xD7CB7B9C)) ^ 0xD7CB7B94];
  *(_BYTE *)(v443 - 0x17BEB36F1DFD5FD3) = ((BYTE3(v406) ^ 0x35) - ((2 * (BYTE3(v406) ^ 0x35)) & 0xAA) + 85) ^ 0x5B ^ v409[BYTE3(v406) ^ 0x35];
  *(_BYTE *)(v449 + 0xC208894407049) = v408[(((2 * (v405 ^ 0x4216085D)) | 0x2B677414)
                                             - (v405 ^ 0x4216085Du)
                                             + 1783383542) ^ 0xD7A5B2FELL] ^ 0xD7;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(a40 + 8 * (int)((43729 * ((((_DWORD)v453 - 758324811 - 2 * (((_DWORD)v453 + 16) & 0x52CCE1A7 ^ BYTE4(a52) & 2)) ^ 0xD2CCE1A5) < HIDWORD(a17))) ^ v454)))(170, v405, v406, v454, v407, 53, 19, v394, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           v417,
           v418,
           v421,
           v430,
           v438,
           v439,
           v440,
           v441,
           a52,
           v442,
           v443,
           v444,
           v445,
           a57,
           v446);
}

uint64_t sub_1000160B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42)
{
  uint64_t v42;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * ((63164 * (a42 != 1913237139)) ^ (a42 + 1560871551))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_10001613C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, int a11)
{
  int v11;
  uint64_t v12;
  unsigned int v13;

  v13 = a11 - ((a9 + 2079808356) & 0x8C93C5E4) + v11 + 1782151044;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * ((26
                                          * (((2 * v13) & 0xD9EBDFFE ^ 0x8883C5E4) + (v13 ^ 0xAABC0D0D) - 1748033552 == 80023535)) ^ v11))
                            - 8))();
}

uint64_t sub_10001620C(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v1 ^ 0x2F4D) * ((a1 + v2 - 1828057087) > 7)) | v1))
                            - 12))();
}

uint64_t sub_1000162A0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((((2212 * (v4 ^ 0x2F41)) ^ 0x44E9) * (a4 >> 4 == 114253568)) ^ v4))
                            - (v4 + 3159)
                            + 15247))();
}

uint64_t sub_1000162EC@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v20;
  int v23;

  v9 = (a1 + v6 + a2);
  v10 = v9 + v7 + 1;
  v11 = (a1 + v6) & 0xF;
  v12 = v11 - v9;
  v13 = v4 + v12;
  v14 = v11 + v4 + 1;
  v15 = v12 + v5 + 7;
  v16 = v11 + v5 + 8;
  v17 = v12 + v3 + 3;
  v18 = v11 + ((a3 - 14987) | 0x2A24u) - 11056 + v3;
  v20 = v14 > v7 && v13 < v10;
  if (v16 > v7 && v15 < v10)
    v20 = 1;
  v23 = v17 < v10 && v18 > v7 || v20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((19037 * (v23 ^ 1)) ^ a3)) - 8))();
}

uint64_t sub_100016394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v5
                                                                      + 8
                                                                      * ((v3 + 5400) ^ ((8 * (v4 < 0x10)) | (16 * (v4 < 0x10))))))(a1, a2, a3, 0);
}

uint64_t sub_1000163C0(uint64_t a1, uint64_t a2, char a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v41;
  __n128 v42;
  __n128 v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;

  v42.n128_u64[0] = (a3 + 14) & 0xF;
  v42.n128_u64[1] = (a3 + 13) & 0xF;
  v43.n128_u64[0] = (a3 + 12) & 0xF;
  v43.n128_u64[1] = (((23 * (v41 ^ 0xF3)) ^ 0xAA) + a3) & 0xF;
  v44.n128_u64[0] = (a3 + 10) & 0xF;
  v44.n128_u64[1] = (a3 + 9) & 0xF;
  v45.n128_u64[0] = 0xF1F1F1F1F1F1F1F1;
  v45.n128_u64[1] = 0xF1F1F1F1F1F1F1F1;
  v46.n128_u64[0] = 0x808080808080808;
  v46.n128_u64[1] = 0x808080808080808;
  return ((uint64_t (*)(uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(a41 + 8 * (v41 + 11181)) - 12))(a1, a2, a4, v42, v43, v44, (__n128)xmmword_100DF7480, v45, v46);
}

uint64_t sub_1000164E8@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W7>, int a5@<W8>, __n128 a6@<Q1>, int8x16_t a7@<Q4>, int8x16_t a8@<Q5>, int8x16_t a9@<Q6>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v22;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;

  v22 = ((_BYTE)a4 - (_BYTE)a2) & 0xF;
  v24.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a6 - 1), a7).u64[0];
  v24.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v18, a7).u64[0];
  v25 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v12 + (a4 - a2)), *(int8x16_t *)(v14 + v22 - 15)), veorq_s8(*(int8x16_t *)(v22 + v15 - 8), *(int8x16_t *)(v22 + v13 - 12))));
  v26 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v25, v25, 8uLL), a9), vmulq_s8(v24, a8)));
  *(int8x16_t *)(v12 + (a4 - a2)) = vextq_s8(v26, v26, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * (((a2 + v16 + a5 == a1) | (8 * (a2 + v16 + a5 == a1))) ^ a3))
                            - 12))();
}

uint64_t sub_100016570@<X0>(int a1@<W3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59)
{
  uint64_t v59;

  return ((uint64_t (*)(void))(*(_QWORD *)(v59 + 8 * (((((a59 == a1) ^ a2) & 1) * (a2 - 12440)) ^ a2))
                            - 12))();
}

uint64_t sub_1000165A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                                         + 8
                                                                                         * ((((((a5 - 316850468) & 0x12E2BBB6 ^ 0x2B3C) & v5) == 0)
                                                                                           * ((a5 - 1389) ^ 0x2B27)) ^ (a5 + 2791)))
                                                                             - 8))(a1, a2, a3, a4, (a3 - a4));
}

uint64_t sub_1000165F8(int a1, int a2, int a3, int a4, double a5, __n128 a6, __n128 a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  a6.n128_u16[0] = -3599;
  a6.n128_u8[2] = -15;
  a6.n128_u8[3] = -15;
  a6.n128_u8[4] = -15;
  a6.n128_u8[5] = -15;
  a6.n128_u8[6] = -15;
  a6.n128_u8[7] = -15;
  a7.n128_u16[0] = 2056;
  a7.n128_u8[2] = 8;
  a7.n128_u8[3] = 8;
  a7.n128_u8[4] = 8;
  a7.n128_u8[5] = 8;
  a7.n128_u8[6] = 8;
  a7.n128_u8[7] = 8;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, __n128, __n128, __n128))(*(_QWORD *)(v12 + 8 * (v7 - 914)) - 8))((v8 + a1 + v9 - a4 + 11), (v8 + a1 + v9 - a4 + 14), v11 - 7, (a1 + v9 + a2 - a4), a3 - (v10 & 0xFFFFFFF8), 0, (__n128)xmmword_100DF7490, a6, a7);
}

uint64_t sub_10001667C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W5>, int a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x8_t a9@<D1>, int8x8_t a10@<D2>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  int v47;
  char v48;
  char v49;
  char v50;
  uint64_t v51;
  int8x16x4_t v53;

  v51 = (a4 + a5);
  v53.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)a5) & 0xF;
  v53.val[0].i64[1] = (v50 + (_BYTE)a5) & 0xF;
  v53.val[1].i64[0] = (a2 + (_BYTE)a5) & 0xF;
  v53.val[1].i64[1] = (v49 + (_BYTE)a5) & 0xF;
  v53.val[2].i64[0] = (v48 + (_BYTE)a5) & 0xF;
  v53.val[2].i64[1] = (a1 + (_BYTE)a5) & 0xF;
  v53.val[3].i64[0] = (v46 + (_BYTE)a5) & 0xF;
  v53.val[3].i64[1] = (v45 + (_BYTE)a5) & 0xF;
  *(int8x8_t *)(a3 + v51) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a3 + v51), *(int8x8_t *)((v51 & 0xF) + v44)), veor_s8(*(int8x8_t *)(v43 + (v51 & 0xF) - 7), *(int8x8_t *)((v51 & 0xF) + v42 - 4)))), a10), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v53, a8), a9)));
  return ((uint64_t (*)(void))(*(_QWORD *)(a42 + 8 * (((v47 == a5) * a7) ^ a6)) - 8))();
}

uint64_t sub_10001674C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a65;
  int a67;
  uint64_t v67;

  return ((uint64_t (*)(void))(*(_QWORD *)(v67
                                        + 8
                                        * (int)((((a65 + 1807389896) & 0x94456B37 ^ 0x34D1) * (a67 == a63)) ^ (a65 + 1040)))
                            - 12))();
}

uint64_t sub_10001679C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a6 + 18187)) - 4))();
}

uint64_t sub_1000167C0@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = (a1 + a2);
  *(_BYTE *)(v7 + v9) ^= *(_BYTE *)(v5 + (v9 & 0xF)) ^ *(_BYTE *)((v9 & 0xF) + v6 + 7) ^ *(_BYTE *)((v9 & 0xF) + v4 + 3) ^ (-15 * (v9 & 0xF)) ^ 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((30 * (a1 - 1 != v3)) ^ v2)) - 4))();
}

void sub_100016820()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 800429351)
    v1 = 2134650450;
  else
    v1 = 2134608426;
  *(_DWORD *)(v2 + 28) = v1;
}

void sub_100016884(unint64_t a1)
{
  uint64_t v1;
  _BOOL4 v4;

  v1 = 263575687 * (a1 ^ 0xC957DCA9820C046);
  v4 = *(_QWORD *)a1 != 0x6F7634AB0303F6BELL
    && *(_QWORD *)(a1 + 48) - v1 != 0xDC78813B8702CD3
    && *(_QWORD *)(a1 + 32) != 0x6F58D0F0A1413B5;
  __asm { BR              X10 }
}

uint64_t sub_10001699C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((113
                                          * (*(_DWORD *)(v2 - 0x6F7634AB0303F6B6)
                                           - 2135049118
                                           + ((a1 + 233194346) & 0xF219B54B) < 0xFFF9FFFE)) ^ a1))
                            - 8))();
}

uint64_t sub_100016A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v2 - 0x6F7634AB0303F6BELL);
  v6 = *(_DWORD *)(v2 - 0x6F7634AB0303F6A6);
  v7 = *(_QWORD *)(v0 + 8 * v3);
  v8 = 210615973
     * ((((v4 - 152) | 0xEF3A4A050A7EFF7) - ((v4 - 152) | 0xF10C5B5FAF581008) - 0xEF3A4A050A7EFF8) ^ 0x4130414EF94826E8);
  *(_DWORD *)(v4 - 120) = v8 + 1741050007 + v3;
  *(_DWORD *)(v4 - 100) = v6 - v8 - 763888946;
  *(_QWORD *)(v4 - 112) = v7 ^ v8;
  *(_QWORD *)(v4 - 136) = v2 - 0x6F7634AB0303F6A2;
  *(_QWORD *)(v4 - 128) = v4 + 0x669D1D41D800F442;
  *(_QWORD *)(v4 - 152) = v5;
  *(_QWORD *)(v4 - 144) = v4 + 0x441CD476C0591B86;
  v9 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * (int)(v3 ^ 0x11EF)) - 1291646935))(v4 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v0
                                                      + 8
                                                      * (int)(v3 ^ 0x9DE ^ ((*(_DWORD *)(v4 - 104) != (((_DWORD)v3 + 1029839524) & 0xC29DD79F ^ 0x7F3C29DC))
                                                                          * ((v3 + 837462709) & 0xCE1561D4 ^ 0x1C94))))
                                          - 8))(v9);
}

uint64_t sub_100016B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29)
{
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v33 = (v32 + 6726);
  HIDWORD(v38) = ((((*(_DWORD *)(a13 + 16) + v31) ^ 0xFFFFE66E) + 1) ^ 0xFFFFD7D9)
               + 10879
               + ((v33 ^ 0xFFFF8E66) & (2 * (((*(_DWORD *)(a13 + 16) + v31) ^ 0xFFFFE66E) + 1)));
  HIDWORD(v37) = a29 + 25073;
  LODWORD(v37) = a29 ^ 0x80C3F07A;
  HIDWORD(v36) = a29 + 1073733160;
  LODWORD(v36) = a29 ^ 0x2B1D;
  HIDWORD(v35) = a29 - 6159;
  LODWORD(v38) = (a29 + 2030361990) & 0x86FB44A7;
  LODWORD(v35) = a29 + 14564;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * (v32 ^ 0x2E23 ^ (31478 * ((v32 - 1295249834) < 0xD68DD5F)))) - 4))(v33, a2, a3, a4, a5, a6, a7, a8, *(_QWORD *)(a13 + 64), *(_QWORD *)(a13 + 8) - 0x31580D9E807AF302, a11, a12, a13, v35, v36, v37, *(_QWORD *)(a13 + 64) + 0x7932F1E0AE1988EBLL, *(_QWORD *)(a13 + 8) + 0x2FC6B25F7934F2B5, v29 - 0x6F58D0F0A1413B5,
           a20,
           v38);
}

uint64_t sub_100016DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_QWORD *a26)
{
  uint64_t v26;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 + 8 * ((30392 * (*a26 != 0)) ^ ((int)a1 + 1408))) - (((_DWORD)a1 - 6795) | 0x2084u) + 10181))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_100016E04@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*v2 == 0x6CA6F0EE111A2BB6) * (((a1 - 10052) | 0x9012) ^ 0xD2FD)) ^ a1))
                            - 8))();
}

uint64_t sub_100016E4C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v1
                                                     + 8
                                                     * (((((*(_QWORD *)(v2 + 8) == 0x7C0ADF1C3D95FE54) ^ (a1 - 52)) & 1)
                                                       * ((a1 + 22732) ^ 0x8000)) ^ (a1 - 121)))
                                         - 8))((a1 + 22732) ^ 0xA14Du);
}

uint64_t sub_100016EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v39 = v25;
  v40 = (int)v25 ^ 0x9881;
  v41 = ((_DWORD)v25 - 36887) | 0x2150u;
  v30 = 1130658149 * ((((2 * (v29 - 152)) | 0xE5521622) - (v29 - 152) + 223802607) ^ 0x3F95B2DC);
  *(_QWORD *)(v29 - 136) = v28 + 0x177ECD13451C78A8;
  *(_DWORD *)(v29 - 148) = v30 + v25 - 13271;
  *(_DWORD *)(v29 - 144) = a25 - v30;
  ((void (*)(uint64_t))(*(_QWORD *)(v27 + 8 * ((int)v25 - 33996)) - 525180355))(v29 - 152);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 + 8 * (int)(((*(_DWORD *)(v29 - 152) == 381450761) * (v40 - 2030)) ^ v39)) - (v41 ^ 0x21D8)))(v41, v31, v32, v33, v34, v35, v36, v37, a9, a10, v39, v40);
}

uint64_t sub_100016F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v11;
  uint64_t v12;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 + 8 * (v11 + 34247 + ((v11 + 103) | 0x340))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_100016FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,unsigned int a29)
{
  int v29;
  uint64_t v30;

  return (*(uint64_t (**)(_QWORD))(v30
                                           + 8
                                           * (int)((((a29 - 6538) ^ 0x823) * (v29 - 2147319647 != a28)) ^ (a29 + 14564))))(a29);
}

uint64_t sub_100017020()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 34199 + ((v0 - 436599939) & 0x1A05FFF9))) - 12))();
}

uint64_t sub_10001705C()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * (v0 - 28001 + 2402 * (v0 ^ 0xBCF))))();
}

uint64_t sub_100017090()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - 12))();
}

uint64_t sub_100017118()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x45D5)) - ((v0 - 2819) | 0x825Cu) + 33616))();
}

uint64_t sub_10001714C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - (v0 ^ 0xA288u) + 8648))();
}

uint64_t sub_100017170()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_100017364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30,int a31)
{
  int v31;
  uint64_t v32;
  int v33;
  int v34;

  return (*(uint64_t (**)(void))(v32 + 8 * (((v31 + v34 == a30) * ((v33 + 2111) ^ 0x2A17)) ^ a31)))();
}

uint64_t sub_100017394()
{
  int v0;
  char v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 - 19777) | 0xBC0) ^ ((v0 - 19811) | 0xC03) ^ 0x710) * (v1 & 1)) ^ v0)))();
}

uint64_t sub_1000173D4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((55917 * ((v0 ^ 0xB3C71F79) < 0x19F34CFD)) ^ (v0 + 15860))) - 12))();
}

uint64_t sub_100017420()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_100017430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  uint64_t v17;

  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * a17) - 8))();
}

uint64_t sub_10001745C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,unsigned int a31)
{
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  BOOL v41;
  int v42;
  int v43;
  int v44;

  v35 = v32 >> 2;
  v36 = *(_DWORD *)(v31 + 4 * (a17 & (0x9F824282 % (v32 >> 2))));
  LOWORD(v35) = ~*(_WORD *)(v31 + 4 * ((v35 - 1) & (unsigned __int16)v36));
  v37 = *(_QWORD *)(v34 + 8 * a16);
  v38 = *(unsigned int *)(v37 - 634675579);
  v39 = *(_QWORD *)(v34 + 8 * a15) + 4 * v38;
  v40 = *(_DWORD *)(v39 - 1841666295);
  LODWORD(v35) = v35 & (~v36 >> 16);
  v41 = (_DWORD)v35 == 0;
  v42 = v35 + v35 * v40;
  v43 = v41;
  if (v41)
    v44 = *(_DWORD *)(v39 - 1841666295);
  else
    v44 = 0;
  *(_DWORD *)(v39 - 1841666295) = (v42 + v44) * v40;
  *(_DWORD *)(v37 - 634675579) = ((int)v38 + 1) % 6u;
  return (*(uint64_t (**)(_QWORD))(v33 + 8 * ((52598 * v43) ^ a14)))(a31);
}

uint64_t sub_100017530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28)
{
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  int v34;
  _BOOL4 v35;

  v32 = v29 ^ 0x680u;
  v33 = v32 - 5598 + v30 - 1663110578;
  v34 = ((v28 + a28) < 0xB39B784D) ^ (v33 < 0xB39B784D);
  v35 = v33 < v28 + a28;
  if (v34)
    v35 = (v28 + a28) < 0xB39B784D;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 + 8 * ((6621 * v35) ^ v29)) - 8))(v32, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_1000175A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v20;
  uint64_t v21;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8 * (v20 + 5574)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_100017600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,unsigned int a29)
{
  int v29;
  uint64_t v30;

  return (*(uint64_t (**)(_QWORD))(v30
                                           + 8
                                           * (int)((((2 * a29) ^ 0x43C1) * (v29 - 2147319647 != a28)) ^ (a29 + 14564))))(a29);
}

uint64_t sub_10001764C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return ((uint64_t (*)(void))(a25 - 8))();
}

uint64_t sub_100017670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,int a25)
{
  int v25;
  uint64_t v26;

  return ((uint64_t (*)(void))(*(_QWORD *)(v26 + 8 * ((15 * (v25 != a24)) ^ a25)) - 12))();
}

uint64_t sub_1000176A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,__int16 a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t *a27)
{
  int v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;

  v31 = *a27;
  v32 = 19382863 * ((((v30 - 152) | 0xEB171B18) - (v30 - 152) + ((v30 - 152) & 0x14E8E4E0)) ^ 0xE3D297C6);
  *(_QWORD *)(v30 - 152) = a23;
  *(_DWORD *)(v30 - 128) = v32 - 1108054376;
  *(_QWORD *)(v30 - 120) = v31;
  *(_WORD *)(v30 - 132) = a22 ^ (-15793 * ((((v30 - 152) | 0x1B18) - (v30 - 152) + ((v30 - 152) & 0xE4E0)) ^ 0x97C6));
  *(_DWORD *)(v30 - 144) = a21 - v32 + 741;
  *(_DWORD *)(v30 - 140) = v32 + 1589594740 + ((3268 * (a21 ^ 0x4400)) ^ 0x2B9407EB) * v27;
  v33 = v28(v30 - 152);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * (((*(_DWORD *)(v30 - 136) != 381450761) * ((a21 ^ 0x65D6) - 8645)) ^ a21)))(v33);
}

uint64_t sub_1000177A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, _QWORD *a19)
{
  uint64_t v19;
  int v20;
  uint64_t v21;

  *a19 = (*(_DWORD *)(v21 - 160) - 2134650450)
       - (unint64_t)((2 * (*(_DWORD *)(v21 - 160) - 2134650450)) & 0x4939AB92)
       + 0x2714985249CD5C9;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v19 + 8 * (v20 ^ (8611 * (a18 != 0x611EBFFDF9AFE5B7))))
                                         - ((2 * v20) ^ 0x12C4u)
                                         + 8648))(v20 ^ 0x385Cu);
}

uint64_t sub_100017830@<X0>(uint64_t a1@<X8>, uint64_t a2, _DWORD *a3)
{
  int v3;
  uint64_t v4;

  *a3 = v3;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * ((int)a1 - 2124)) - 12))(a1);
}

uint64_t sub_10001784C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;

  return (*(uint64_t (**)(void))(v17 + 8 * ((a1 + 18449) ^ (5964 * (a17 != 0xC8750CA9AF412A8ELL)))))();
}

uint64_t sub_100017884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 + 8 * ((int)a1 + 2009)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

uint64_t sub_1000178B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29)
{
  int v29;
  uint64_t v30;

  return (*(uint64_t (**)(void))(v30 + 8 * (((((a29 - 8402) | 0x1450) ^ 0x155C) * (v29 != 381450761)) ^ (a29 + 21886))))();
}

uint64_t sub_1000178FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t *a26)
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v31 = *a26;
  v32 = *(_QWORD *)(v28 + 8 * v27);
  v33 = 210615973
      * ((2 * ((v30 - 152) & 0x6AFE45773DDA78F8) - (v30 - 152) - 0x6AFE45773DDA78F9) ^ 0xDAC25F666BCA4E18);
  *(_DWORD *)(v30 - 116) = (v27 - 961777035) ^ v33;
  *(_DWORD *)(v30 - 144) = v33 + v26 + 1553211817;
  *(_QWORD *)(v30 - 136) = v31;
  *(_QWORD *)(v30 - 128) = v32 - v33;
  *(_QWORD *)(v30 - 152) = a9;
  ((void (*)(uint64_t))(*(_QWORD *)(v29 + 8 * ((int)v27 - 671)) - 1077287))(v30 - 152);
  return (*(uint64_t (**)(void))(v28 + 8 * (int)(v27 + 12991 + ((v27 + 3118) | 0x54))))();
}

uint64_t sub_1000179DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)(a9 - 0x4F421AC90127A1A3) = 2134650450;
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((int)v9 + 18449)))(v9);
}

uint64_t sub_100017A14(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  return (*(uint64_t (**)(void))(v13 + 8 * ((53106 * (*(_QWORD *)(a13 + 24) != 0x7D46CEFC17F01113)) ^ (a1 + 8750))))();
}

uint64_t sub_100017A58@<X0>(int a1@<W0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _QWORD *a20)
{
  int v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v27;
  _BOOL4 v29;

  v24 = (a1 - 3023);
  *(_DWORD *)(a2 - 0x7D46CEFC17F01113) = 2134650450;
  v25 = 19382863 * ((v23 - 152) ^ 0x8C58CDE);
  *(_QWORD *)(v23 - 120) = *a20;
  *(_WORD *)(v23 - 132) = (-15793 * ((v23 - 152) ^ 0x8CDE)) ^ 0x259;
  *(_DWORD *)(v23 - 144) = a1 - v25 + 9491;
  *(_DWORD *)(v23 - 140) = v25 + 1589594740 + 731127395 * v20;
  *(_DWORD *)(v23 - 128) = v25 - 1191482646;
  *(_QWORD *)(v23 - 152) = a2;
  v27 = v21(v23 - 152);
  v29 = a3 != 0x4F421AC90127A1A3 && *(_DWORD *)(v23 - 136) == 381450761;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v22 + 8 * ((4313 * v29) ^ a1)) - v24 + 5629))(v27);
}

uint64_t sub_100017B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;

  v14 = *(_QWORD *)(v9 + 8 * v11);
  v15 = 842727511 * (v12 ^ 0xA1EDAB193702675DLL);
  v16 = *(_DWORD *)(a9 - 0x4F421AC90127A1A3) - v15 - 716334612;
  *(_DWORD *)(v13 - 144) = v15 + v11 + 1684810920;
  *(_DWORD *)(v13 - 152) = v16;
  *(_QWORD *)(v13 - 136) = v15 + v14 - 8;
  v17 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10 + 8 * (v11 - 1202)) - 115399367))(v13 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * (((*(_BYTE *)(v13 - 148) == 126) * (((2 * v11) ^ 0x39F8) - 3550)) ^ (v11 + 11787)))
                                          - 4))(v17);
}

uint64_t sub_100017C24()
{
  _DWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;

  v7 = ((((v6 - 152) | 0xD533149396F03612) - (v6 - 152) + ((v6 - 152) & 0x2ACCEB6C690FC9E8)) ^ 0x74DEBF8AA1F2514FLL)
     * v5;
  v8 = *v0 - v7 - 459640614;
  *(_QWORD *)(v6 - 136) = v7 + *(_QWORD *)(v1 + 8 * v3) - 8;
  *(_DWORD *)(v6 - 152) = v8;
  *(_DWORD *)(v6 - 144) = v4 + v3 + v7 + 19;
  v9 = v2(v6 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * (v3 ^ 0x4C57 ^ (14886
                                                                      * ((((v3 + 1696897004) ^ (v3 + 11790) ^ (*(_BYTE *)(v6 - 148) == 92)) & 1) == 0))))
                                          - 12))(v9);
}

uint64_t sub_100017D08()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v1 | 0x10)) - 433 * ((v1 | 0x10) ^ 0x4404u) + 8656))();
}

uint64_t sub_100017D58@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;
  int v3;

  *v1 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * v3) - 8))();
}

void sub_100017D70()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 60) = v0;
}

void sub_100017DB4(uint64_t a1)
{
  int v1;

  v1 = 1891100677 * (((a1 | 0x4A65EA85) - (a1 & 0x4A65EA85)) ^ 0x266DCB15);
  __asm { BR              X11 }
}

uint64_t sub_100017E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a6 + 8 * v6) - 12))();
}

uint64_t sub_100017EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)(v12 + v8) = *(_BYTE *)(*(_QWORD *)(v14 + 8 * v10)
                                  + v11
                                  + (((((((_DWORD)v8 + (_DWORD)v15) * a7) ^ (((v8 + v15) * a7) >> 16)) * a7) >> v9) & 0xFF0 | v8)) ^ *(_BYTE *)(v15 + v8) ^ (-7 * (((v8 + v15) * a7) ^ (((v8 + v15) * a7) >> 16)));
  return ((uint64_t (*)(void))(*(_QWORD *)(a6 + 8 * (((v8 == 15) * v13) ^ v7)) - 12))();
}

uint64_t sub_100017F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 + 8 * ((8187 * (*(_DWORD *)(a1 + 24) - v40 - 586779001 == (((a9 - 28621) | 0x42C5) ^ 0xBF23723))) ^ a9)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_100017FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X5>, int a3@<W6>, uint64_t a4@<X7>, unsigned int a5@<W8>)
{
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  _BOOL4 v10;
  _BYTE *v11;

  v10 = v5 < v6;
  v11 = (_BYTE *)(*(_QWORD *)(a1 + 32) + (v8 - 1558883850));
  *(_BYTE *)(v9 + (v8 - 1558883850)) = *(_BYTE *)(a4
                                                              + ((a5 ^ 0x800D) & (((((_DWORD)v11 * a3) ^ (((_DWORD)v11 * a3) >> 16))
                                                                                 * a3) >> 20) | ((_BYTE)v8 - 10) & 0xF)) ^ *v11 ^ (-7 * (((_BYTE)v11 * a3) ^ (((_DWORD)v11 * a3) >> 16)));
  if (v10 == v8 - 1358452787 < v6)
    v10 = v8 - 1358452787 < v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((!v10 * v7) ^ a5)) - 4))();
}

uint64_t sub_100018044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;
  uint64_t v39;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 + 8 * (((((v37 - 6837) | 0x131) - 13235) * (v39 - 160 == v38)) ^ v37)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_100018084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  _BYTE *v7;
  uint64_t v8;

  *(_BYTE *)(v8 - 144) = *v7;
  *(_BYTE *)(v8 - 143) = v7[1];
  *(_BYTE *)(v8 - 142) = v7[2];
  *(_BYTE *)(v8 - 141) = v7[3];
  *(_BYTE *)(v8 - 140) = v7[4];
  *(_BYTE *)(v8 - 139) = v7[5];
  *(_BYTE *)(v8 - 138) = v7[6];
  *(_BYTE *)(v8 - 137) = v7[7];
  *(_BYTE *)(v8 - 136) = v7[8];
  *(_BYTE *)(v8 - 135) = v7[9];
  *(_BYTE *)(v8 - 134) = v7[10];
  *(_BYTE *)(v8 - 133) = v7[11];
  *(_BYTE *)(v8 - 132) = v7[12];
  *(_BYTE *)(v8 - 131) = v7[13];
  *(_BYTE *)(v8 - 130) = v7[14];
  *(_BYTE *)(v8 - 129) = v7[15];
  return ((uint64_t (*)(void))(*(_QWORD *)(a6 + 8 * v6) - (((v6 - 22949) | 0x4021u) ^ 0x4975)))();
}

uint64_t sub_10001812C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  int v44;
  unint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  if (v41)
    v42 = v39 + v40 == 0;
  else
    v42 = 1;
  v44 = !v42 && *(_QWORD *)(a1 + 56) != 0xCF887856C831866;
  v45 = 1151 * (v38 ^ 0x4965u);
  v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 + 8 * ((240 * v44) ^ v38)) - (v45 ^ 0x59E4));
  LODWORD(STACK[0x224]) = -42900;
  STACK[0x228] = v45;
  return v46(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100018194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48)
{
  int v48;
  _BOOL4 v50;
  uint64_t (*v51)(void);

  STACK[0x228] = (v48 + 4219);
  v50 = a48 != 787210063
     && ((a48 + 1) & 0xF) - ((2 * (a48 + 1)) & 8) + (((v48 - 14594) | 0x2D10) ^ 0x7A8A876) == 128488713;
  v51 = (uint64_t (*)(void))(*(_QWORD *)(a6 + 8 * ((54193 * v50) ^ v48)) - 8);
  LODWORD(STACK[0x224]) = -42899;
  return v51();
}

#error "10001D130: call analysis failed (funcsize=4248)"

uint64_t sub_10001D134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,unsigned int a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  int a64;
  int a65;
  int a66;
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int a83;
  int a84;
  int a85;
  int a86;
  int a87;
  uint64_t a88;
  uint64_t a89;
  uint64_t a90;
  uint64_t a91;
  int a92;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int v96;
  unint64_t v97;
  int v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  int v112;
  int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  int v122;
  int v123;
  uint64_t v124;
  int v125;
  int v126;
  unsigned int v127;
  uint64_t v128;
  uint64_t v129;
  unsigned int v130;
  uint64_t v131;
  unsigned int v132;
  int v133;
  int v134;
  uint64_t v135;
  unint64_t v136;
  int v137;
  int v138;
  int v139;
  int v140;
  char *v141;
  char *v142;
  char *v143;
  int v144;
  unsigned int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  unsigned int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  int v167;
  int v168;
  unsigned int v169;
  char *v170;
  char *v171;
  char *v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  char *v178;
  int v179;
  int v180;
  int v181;
  unint64_t v182;
  char *v183;
  char *v184;
  unsigned int v185;
  char *v186;
  char *v187;
  unsigned int v188;
  unsigned int v189;

  LODWORD(STACK[0x224]) = 0;
  v97 = (v92 ^ 0x4DCAu) + 21809;
  v98 = 13 * (v92 ^ 0x4DCA);
  LODWORD(STACK[0x244]) = v98;
  v99 = v98 ^ v96 & 0xFFFFFFF6 ^ 0xE27C8AA6;
  *(_DWORD *)(v95 - 208) = 2 * v99;
  *(_DWORD *)(v95 - 204) = v99;
  v100 = (v99 + 675449421 + ((2 * v99) & 0x50851488 ^ 0xFFFFFFED) + 1) ^ 0x28428A4D;
  STACK[0x228] = v97;
  v101 = (v100 ^ (v97 - 0x40081406860F4)) + v93 + ((2 * v100) & 0x17F2FF1F0);
  LODWORD(v97) = v96 & 0xFFFFFFF9 ^ 0xE27CB7D7;
  *(_DWORD *)(v95 - 220) = v97;
  v102 = v97 + 1832528133 + ((2 * v97) & 0xDA745202 ^ 0xFFFFFFF7) + 1;
  LODWORD(v101) = *(unsigned __int8 *)(a88 + (*(unsigned __int8 *)(v101 + 0x4008140680708) ^ 0x4ALL)) ^ 0xBF;
  LODWORD(v101) = ((((_DWORD)v101 - ((2 * (_DWORD)v101) & 0x178)) << 16) - 725876736) ^ 0xD4BC0000;
  LODWORD(v97) = v101 + 2011572609 - ((2 * v101) & 0x6FCC0000);
  v103 = *(unsigned __int8 *)(a91
                            + (*(unsigned __int8 *)((v102 ^ 0x6FDED1D794CD9E98)
                                                  + v93
                                                  + ((2 * (v102 ^ 0x6D3A2905)) & 0x1F3EF6F3ALL)
                                                  - 0x6FDED1D7F9F7B79DLL) ^ 0x90));
  v104 = v96 & 0xFFFFFFFE ^ 0xE27CB7D1;
  *(_DWORD *)(v95 - 252) = v104;
  *(_DWORD *)(v95 - 248) = 2 * v104;
  v105 = v104 + 1564325999 + ((2 * v104) & 0xBA7B70DC ^ 0xFFFFFFFD) + 1;
  v106 = ((((v103 ^ 0x4A) - ((2 * v103) & 0x14A)) << 8) - 1095588608) ^ 0xBEB2A500;
  v107 = v106 + 1442726256 - ((2 * v106) & 0x2BFC8200);
  v108 = *(unsigned __int8 *)((v105 ^ 0xFBFF3FFDB38A46B2)
                            + v93
                            + ((2 * (v105 ^ 0x5D3DB86F)) & 0x1DD6FFDBALL)
                            + 0x400C00211480123) ^ 0x81;
  v109 = v96 ^ 0xE27CB7D1;
  *(_QWORD *)(v95 - 192) = v109;
  v110 = (v96 ^ 0xFBFD6FF89D99D926) + ((2 * (_DWORD)v109) & 0xFFCADDEE) + v93;
  *(_QWORD *)(v95 - 200) = v110;
  LODWORD(v108) = ((((*(unsigned __int8 *)(a88 + v108) ^ 0xF) - ((2 * (*(unsigned __int8 *)(a88 + v108) ^ 0xF)) & 0x1E8)) << 16)
                 - 923533312) ^ 0xC8F40000;
  v111 = a90;
  v112 = *(unsigned __int8 *)(a90 + (*(unsigned __int8 *)(v110 + 0x4029007801A9109) ^ 0x7BLL));
  v113 = (v112 - ((2 * (_BYTE)v112 + 62) & 0x70) + 23) ^ 0x77;
  v114 = (((v113 - ((2 * v113) & 0xA6)) << 24) + 1392508928) ^ 0x53000000;
  LODWORD(v108) = (v114 + 1004116065 - ((2 * v114) & 0x76000000)) ^ 0x3BD99861 | (v108
                                                                                + 725424408
                                                                                - ((2 * v108) & 0x567A0000)) ^ 0x2B3D1918;
  v115 = v96 & 0xFFFFFFF5 ^ 0xE27CB7DB;
  *(_DWORD *)(v95 - 216) = 2 * v115;
  *(_DWORD *)(v95 - 212) = v115;
  LODWORD(v109) = *(unsigned __int8 *)(a91
                                     + (*(unsigned __int8 *)(((v115
                                                             + 1396253880
                                                             + ((2 * v115) & 0xA6724960 ^ 0xFFFFFFEF)
                                                             + 1) ^ 0x5CABEEDEB7FEFA4CLL)
                                                           + v93
                                                           + ((2
                                                             * ((v115
                                                               + 1396253880
                                                               + ((2 * v115) & 0xA6724960 ^ 0xFFFFFFEF)
                                                               + 1) ^ 0x533924B8)) & 0x1C98FBDE8)
                                                           - 0x5CABEEDEE4C7DEF4) ^ 0xDLL));
  LODWORD(v109) = ((((v109 ^ 0x72) - ((2 * (_DWORD)v109) & 0xFFFFFF03)) << 8) - 1016626944) ^ 0xC3678100;
  LODWORD(v97) = (v109 - 552584652 - ((2 * v109) & 0x3E207400)) ^ 0xDF103A34 | v97 ^ 0x77E62981;
  v116 = v96 & 0xFFFFFFFC ^ 0xE27CB7D3;
  *(_DWORD *)(v95 - 244) = v116;
  v117 = *(unsigned __int8 *)(((v116 - 1234495190 + ((2 * v116) & 0x6CD63250 ^ 0xFFFFFFFB) + 1) ^ 0x5FED5FFF5DC4E8C7)
                            + v93
                            + ((2 * ((v116 - 1234495190 + ((2 * v116) & 0x6CD63250 ^ 0xFFFFFFFB) + 1) ^ 0xB66B192A)) & 0x1D75FE3DALL)
                            - 0x5FED5FFFEBAFF1EDLL);
  v118 = (((v96 & 0xFFFFFFF0 ^ 0xE27CB7DF) - 1129965485 - ((2 * (v96 & 0xFFFFFFF0 ^ 0xE27CB7DF)) & 0x794C30A6)) ^ 0x7F7CBBEA4309A26ALL)
       + v93
       + ((2
         * (((v96 & 0xFFFFFFF0 ^ 0xE27CB7DF) - 1129965485 - ((2 * (v96 & 0xFFFFFFF0 ^ 0xE27CB7DF)) & 0x794C30A6)) ^ 0xBCA61853)) & 0x1FF5F7472);
  STACK[0x278] = v118;
  LODWORD(v117) = *(unsigned __int8 *)(a89 + (v117 ^ 0x40));
  v119 = (((v96 & 0xFFFFFFF8 ^ 0xE27CB7D7) + 835239783 - ((2 * (v96 & 0xFFFFFFF8 ^ 0xE27CB7D7)) & 0x63917ECE)) ^ 0x5FCDBFF3F91E6588)
       + v93
       + ((2
         * (((v96 & 0xFFFFFFF8 ^ 0xE27CB7D7) + 835239783 - ((2 * (v96 & 0xFFFFFFF8 ^ 0xE27CB7D7)) & 0x63917ECE)) ^ 0x31C8BF67)) & 0x191ADB5DELL);
  *(_QWORD *)(v95 - 240) = v119;
  LODWORD(v108) = (v108 + 1417594228 - ((2 * v108) & 0xA8FD8AE8)) ^ 0x547EC574 | ((v117 ^ 0x19)
                                                                                - 880956146
                                                                                - ((2 * (v117 ^ 0x19)) & 0x1C)) ^ 0xCB7DAD0E;
  v120 = v108 - 900342600 - ((2 * v108) & 0x94ABB970);
  LODWORD(v108) = *(unsigned __int8 *)(a89 + (*(unsigned __int8 *)(v119 - 0x5FCDBFF3C8D6DAEFLL) ^ 0x11));
  v121 = (((v96 & 0xFFFFFFF3 ^ 0xE27CB7DD)
         - 46878738
         + ((2 * (v96 & 0xFFFFFFF3 ^ 0xE27CB7DD)) & 0xFA695FC4 ^ 0xFFFFFFE7)
         + 1) ^ 0x4FBBF7FE03CBC2D5)
       + v93
       + ((2
         * (((v96 & 0xFFFFFFF3 ^ 0xE27CB7DD)
           - 46878738
           + ((2 * (v96 & 0xFFFFFFF3 ^ 0xE27CB7DD)) & 0xFA695FC4 ^ 0xFFFFFFE7)
           + 1) ^ 0xFD34AFEE)) & 0x1FDFEDA76);
  *(_QWORD *)(v95 - 232) = v121;
  LODWORD(v108) = ((v108 ^ 0x1C) - 333999057 - ((2 * (v108 ^ 0x1C)) & 0x5E)) ^ 0xEC17942F | v107 ^ 0x55FE4170;
  LODWORD(v117) = v108 - 1786922947 - ((2 * v108) & 0x2AFB707A);
  LODWORD(v108) = (*(unsigned __int8 *)(v111 + (*(unsigned __int8 *)(v121 - 0x4FBBF7FEFEFF6D3BLL) ^ 0x7ELL))
                 - ((2 * *(unsigned __int8 *)(v111 + (*(unsigned __int8 *)(v121 - 0x4FBBF7FEFEFF6D3BLL) ^ 0x7ELL)) + 30) & 0x12)
                 - 24) ^ 0x52;
  LODWORD(v108) = ((((_DWORD)v108 - ((2 * (_DWORD)v108) & 0x8A)) << 24) + 1157627904) ^ 0x45000000;
  v122 = *(unsigned __int8 *)(a89 + (*(unsigned __int8 *)(v118 - 0x7F7CBBEAFFAFBA39) ^ 0xEALL)) ^ 0x18;
  LODWORD(v108) = (v108 - 772902372 - ((2 * v108) & 0xA2000000)) ^ 0xD1EE721C | (v122
                                                                               + 1224591343
                                                                               - ((2 * v122) & 0xFFFFFFDF)) ^ 0x48FDC7EF;
  v123 = v108 - 557520685 - ((2 * v108) & 0xBD89D1A6);
  LODWORD(v119) = v96 & 0xFFFFFFF7 ^ 0xE27CB7D9;
  LODWORD(STACK[0x25C]) = v119;
  LODWORD(STACK[0x258]) = 2 * v119;
  v124 = (((_DWORD)v119 - 1021187789 - ((2 * (_DWORD)v119) & 0x8643D266)) ^ 0x3983777734DD36DELL)
       + v93
       + ((2 * (((_DWORD)v119 - 1021187789 - ((2 * (_DWORD)v119) & 0x8643D266)) ^ 0xC321E933)) & 0x1EFF9BFDALL);
  LODWORD(v119) = v96 & 0xFFFFFFFD ^ 0xE27CB7D3;
  LODWORD(STACK[0x274]) = v119;
  LODWORD(v124) = *(unsigned __int8 *)(a90 + (*(unsigned __int8 *)(v124 - 0x39837777F7FCDFEDLL) ^ 0x24));
  LODWORD(v124) = (v124 - ((2 * v124 - 66) & 0xB2) + 56) ^ 0x8D;
  LODWORD(v124) = (((_DWORD)v124 - ((2 * (_DWORD)v124) & 0x10)) << 24) - 2013265920;
  LODWORD(v124) = ((v124 ^ 0x88000000) + 347680058 - ((2 * v124) & 0x28000000)) ^ 0x14B92D3A | (v97
                                                                                              + 191896326
                                                                                              - ((2 * v97) & 0x16E0360C)) ^ 0xB701B06;
  v125 = v124 - 785143618 - ((2 * v124) & 0xA267517C);
  LODWORD(v124) = *(unsigned __int8 *)(a91
                                     + (*(unsigned __int8 *)((((_DWORD)v119
                                                             + 300160874
                                                             + ((2 * (_DWORD)v119) & 0x23C82ED0 ^ 0xFFFFFFFB)
                                                             + 1) ^ 0x6FBB8F3FAE186AA7)
                                                           + v93
                                                           + ((2
                                                             * (((_DWORD)v119
                                                               + 300160874
                                                               + ((2 * (_DWORD)v119) & 0x23C82ED0 ^ 0xFFFFFFFB)
                                                               + 1) ^ 0x11E4176A)) & 0x17FF8FB9ALL)
                                                           - 0x6FBB8F3FBFFC7DCDLL) ^ 0x34)) ^ 0x82;
  LODWORD(v124) = ((((_DWORD)v124 - ((2 * (_DWORD)v124) & 0xFFFFFF8F)) << 8) + 985253632) ^ 0x3AB9C700;
  LODWORD(v124) = v120 ^ 0xCA55DCB8 | (v124 + 555880744 - ((2 * v124) & 0x42442200)) ^ 0x21221128;
  v126 = v124 + 137603118 - ((2 * v124) & 0x1067505C);
  LODWORD(v97) = v96 & 0xFFFFFFF1 ^ 0xE27CB7DF;
  LODWORD(STACK[0x264]) = v97;
  LODWORD(STACK[0x260]) = 2 * v97;
  v127 = v96 & 0xFFFFFFFB ^ 0xE27CB7D5;
  LODWORD(STACK[0x254]) = v127;
  LODWORD(STACK[0x250]) = 2 * v127;
  LODWORD(v124) = *(unsigned __int8 *)(a91
                                     + (*(unsigned __int8 *)((((_DWORD)v97
                                                             + 1881088409
                                                             - ((2 * (_DWORD)v97) & 0xE03E4342)) ^ 0x37EF1F7B2FE5D010)
                                                           + ((2
                                                             * (((_DWORD)v97
                                                               + 1881088409
                                                               - ((2 * (_DWORD)v97) & 0xE03E4342)) ^ 0x701F21A9)) & 0xBFF5E372)
                                                           + v93
                                                           - 0x37EF1F7B5FFAF1B9) ^ 0xD6)) ^ 0xA8;
  LODWORD(v124) = ((((_DWORD)v124 - ((2 * (_DWORD)v124) & 0x1FC)) << 8) - 1135215104) ^ 0xBC55FE00;
  LODWORD(v124) = v123 ^ 0xDEC4E8D3 | (v124 - 482636559 - ((2 * v124) & 0x46771800)) ^ 0xE33B8CF1;
  v128 = *(unsigned __int8 *)(((v127 + 1696066727 - ((2 * v127) & 0xCA2FD94E)) ^ 0x7BF937F89BE813D8)
                            + v93
                            + ((2 * ((v127 + 1696066727 - ((2 * v127) & 0xCA2FD94E)) ^ 0x6517ECA7)) & 0x1FDFFFEFELL)
                            - 0x7BF937F8FEFFFF7FLL);
  v129 = (((v96 & 0xFFFFFFFA ^ 0xE27CB7D5) + 1084607704 - 2 * ((v96 & 0xFFFFFFFA ^ 0xE27CB7D5) & 0x40A5CCDA ^ v96 & 2)) ^ 0x3FFF7BE9BB7A1B63)
       + v93
       + ((2
         * (((v96 & 0xFFFFFFFA ^ 0xE27CB7D5) + 1084607704 - 2 * ((v96 & 0xFFFFFFFA ^ 0xE27CB7D5) & 0x40A5CCDA ^ v96 & 2)) ^ 0x40A5CCD8)) & 0x1F7BFAF76);
  STACK[0x248] = v129;
  LODWORD(v128) = ((2 * *(unsigned __int8 *)(v111 + (v128 ^ 0x72)) + 62) & 0x46)
                - *(unsigned __int8 *)(v111 + (v128 ^ 0x72))
                + 125;
  LODWORD(v128) = ((((_DWORD)v128 - ((2 * (_DWORD)v128) & 0x68)) << 24) + 872415232) ^ 0x34000000;
  LODWORD(v128) = (v128 - 988244831 + (~(2 * v128) | 0x75FFFFFF) + 1) ^ 0xC51894A1 | v117 ^ 0x957DB83D;
  v130 = v96 & 0xFFFFFFF2 ^ 0xE27CB7DD;
  LODWORD(STACK[0x268]) = v130;
  v131 = *(unsigned __int8 *)(v129 - 0x3FFF7BE9FBDFD7BBLL);
  LODWORD(STACK[0x26C]) = 2 * v130;
  LODWORD(v131) = *(unsigned __int8 *)(a88 + (v131 ^ 0x1F)) ^ 0xC5;
  LODWORD(v131) = ((((_DWORD)v131 - ((2 * (_DWORD)v131) & 0xFFFFFFCF)) << 16) - 840499200) ^ 0xCDE70000;
  LODWORD(v131) = (v128 - 992193315 - ((2 * v128) & 0x89B8A9BA)) ^ 0xC4DC54DD | (v131
                                                                               - 361549629
                                                                               - ((2 * v131) & 0x54E60000)) ^ 0xEA7330C3;
  v132 = v131 - 999544491 - ((2 * v131) & 0x88D852AA);
  LODWORD(v110) = v96 & 0xFFFFFFF4 ^ 0xE27CB7DB;
  LODWORD(STACK[0x270]) = v110;
  v133 = v110 + 1719781348 + ((2 * (v110 & 0x6681C7E4 ^ (v96 | 0x7FFFFFFB))) ^ 0x1B);
  LODWORD(v131) = *(unsigned __int8 *)(a88
                                     + (*(unsigned __int8 *)(((v130 + 806616196 - ((2 * v130) & 0x6027F920)) ^ 0x4FFEBF7E47CD9153)
                                                           + ((2
                                                             * ((v130 + 806616196 - ((2 * v130) & 0x6027F920)) ^ 0x3013FC9C)) & 0xEFBCDB9E)
                                                           + v93
                                                           - 0x4FFEBF7E77DE6DCFLL) ^ 0xC5)) ^ 0xE;
  LODWORD(v131) = ((((_DWORD)v131 - 2 * (v131 & 0x7F)) << 16) - 42008576) ^ 0xFD7F0000;
  LODWORD(v131) = (v124 + 768532011 - ((2 * v124) & 0x5B9DBC56)) ^ 0x2DCEDE2B | (v131
                                                                               - 388640601
                                                                               - ((2 * v131) & 0x51AA0000)) ^ 0xE8D5D0A7;
  LODWORD(v124) = *(unsigned __int8 *)(a89
                                     + (*(unsigned __int8 *)(((v133 + 6) ^ 0xEDA5F9F5B9722C36)
                                                           + v93
                                                           + ((2 * ((v133 + 6) ^ 0x6681C7E9u)) & 0x1BFE7D7BELL)
                                                           + 0x125A060A200C1421) ^ 0x45)) ^ 0xCE;
  LODWORD(v124) = v125 ^ 0xD133A8BE | (v124 + 268307769 - ((2 * v124) & 0x72)) ^ 0xFFE0D39;
  v134 = v124 - ((2 * v124) & 0x77A97270);
  LODWORD(v110) = v131 - ((2 * v131) & 0x76DADFE6) - 1150455821;
  LODWORD(STACK[0x238]) = v110;
  LODWORD(v131) = a49 ^ v110;
  v135 = *(_QWORD *)(v94 + 8 * (v92 - 15927)) - 366144974;
  LODWORD(v110) = STACK[0x20C];
  LODWORD(STACK[0x240]) = v126;
  LODWORD(v128) = *(_DWORD *)(v135 + 4 * (((v126 ^ v110) >> 24) ^ 0x3D));
  LODWORD(v109) = ((2 * (v131 ^ 0x9C)) & 0x1E0) - (v131 ^ 0x9C);
  HIDWORD(v136) = v128 ^ 0x789E4F;
  LODWORD(v136) = v128 ^ 0xC8000000;
  LODWORD(v128) = (v136 >> 26) - ((2 * (v136 >> 26)) & 0x3B2B74A4);
  LODWORD(v124) = 859304605 - (BYTE1(v131) ^ 0x3B96ADBC | 0x3337F29D) + (BYTE1(v131) ^ 0x3B96ADBC | 0xCCC80D62);
  LODWORD(STACK[0x234]) = v134 - 1143686856;
  LODWORD(v117) = (v134 - 1143686856) ^ a50;
  v137 = *(_DWORD *)(v135 + 4 * (BYTE3(v117) ^ 0x32));
  HIDWORD(v136) = v137 ^ 0x789E4F;
  LODWORD(v136) = v137 ^ 0xC8000000;
  v138 = (v136 >> 26) - ((2 * (v136 >> 26)) & 0x58225722);
  v139 = *(_DWORD *)(v135 + 4 * (BYTE3(v131) ^ 0x40));
  HIDWORD(v136) = v139 ^ 0x789E4F;
  LODWORD(v136) = v139 ^ 0xC8000000;
  LODWORD(STACK[0x23C]) = v132;
  v140 = *(_DWORD *)(v135 + 4 * (((a51 ^ v132) >> 24) ^ 0x40));
  LODWORD(v118) = (v136 >> 26) - ((2 * (v136 >> 26)) & 0x71FE3858);
  HIDWORD(v136) = v140 ^ 0x789E4F;
  LODWORD(v136) = v140 ^ 0xC8000000;
  v141 = (char *)*(&off_10112C750 + (v92 ^ 0x5B51)) - 939537394;
  v142 = (char *)*(&off_10112C750 + (v92 ^ 0x49AE)) - 1629786323;
  v143 = (char *)*(&off_10112C750 + (v92 ^ 0x421A)) - 1484980703;
  LODWORD(v131) = a86 ^ *(_DWORD *)&v141[4 * ((a51 ^ v132) ^ 0xD)] ^ *(_DWORD *)&v142[4 * (BYTE1(v117) ^ 0x1C)] ^ (v128 + 496351826) ^ *(_DWORD *)&v143[4 * (((WORD1(v131) & 5) + (BYTE2(v131) ^ 0xFFFFFF57) + (BYTE2(v131) | 0x6FAB47FA) + 1) ^ 0x6FAB47C1)];
  LODWORD(v124) = a85 ^ *(_DWORD *)&v143[4 * (((v126 ^ v110) >> 16) ^ 0x54)] ^ *(_DWORD *)&v141[4 * (v117 ^ 0xC8)] ^ ((v136 >> 26) - ((2 * (v136 >> 26)) & 0xE9077C) - 2139847746) ^ *(_DWORD *)&v142[4 * (v124 ^ 0xF75EA02F)];
  LODWORD(v128) = a84 ^ *(_DWORD *)&v142[4 * (((unsigned __int16)(a51 ^ v132) >> 8) ^ 0x69)] ^ *(_DWORD *)&v141[4 * ((v126 ^ v110) ^ 0x3C)] ^ *(_DWORD *)&v143[4 * (((BYTE2(v117) ^ 0x9A219F) - ((2 * (BYTE2(v117) ^ 0x9A219F)) & 0x1401A2) + 208394961) ^ 0xCF1FBDD)] ^ (v118 - 1191240660);
  LODWORD(v117) = *(_DWORD *)(v135 + 4 * (BYTE3(v124) ^ 0x38));
  LODWORD(v111) = a83 ^ *(_DWORD *)&v143[4 * (((a51 ^ v132) >> 16) ^ 0x39)] ^ *(_DWORD *)&v141[4 * (((_DWORD)v109 + 3343) ^ 0xD0C)] ^ *(_DWORD *)&v142[4 * (((unsigned __int16)(v126 ^ v110) >> 8) ^ 0xD7)] ^ (v138 + 739322769);
  HIDWORD(v136) = v117 ^ 0x789E4F;
  LODWORD(v136) = v117 ^ 0xC8000000;
  LODWORD(v117) = (v136 >> 26) - ((2 * (v136 >> 26)) & 0xE3A9CFE8);
  v144 = (a83 ^ v143[4 * (((a51 ^ v132) >> 16) ^ 0x39)] ^ v141[4
                                                                                               * (((_DWORD)v109 + 3343) ^ 0xD0C)] ^ v142[4 * (((unsigned __int16)(v126 ^ v110) >> 8) ^ 0xD7)] ^ (v138 - 111)) ^ 0xFD;
  v145 = (((2 * v144) & 0x184) - v144 - 123315651) ^ 0xDEB252AD;
  LODWORD(v109) = *(_DWORD *)(v135 + 4 * (BYTE3(v111) ^ 0x80));
  LODWORD(v129) = v145 - ((2 * v145) & 0x82003FA);
  HIDWORD(v136) = v109 ^ 0x789E4F;
  LODWORD(v136) = v109 ^ 0xC8000000;
  LODWORD(v109) = (v136 >> 26) - ((2 * (v136 >> 26)) & 0x320D066C);
  v146 = *(_DWORD *)(v135 + 4 * (BYTE3(v128) ^ 0xEF));
  HIDWORD(v136) = v146 ^ 0x789E4F;
  LODWORD(v136) = v146 ^ 0xC8000000;
  v147 = *(_DWORD *)(v135 + 4 * (BYTE3(v131) ^ 0x6E));
  v148 = (v136 >> 26) - ((2 * (v136 >> 26)) & 0xA94977C0);
  HIDWORD(v136) = v147 ^ 0x789E4F;
  LODWORD(v136) = v147 ^ 0xC8000000;
  LOWORD(v118) = ((2 * (BYTE2(v128) ^ 0x9B)) & 0xE4) - (BYTE2(v128) ^ 0x9B) - 22899;
  v149 = a82 ^ *(_DWORD *)&v141[4 * (v131 ^ 0x9F)] ^ *(_DWORD *)&v142[4 * (BYTE1(v124) ^ 0xA7)] ^ *(_DWORD *)&v143[4 * (BYTE2(v111) ^ 0x1B)];
  LODWORD(v111) = a81 ^ *(_DWORD *)&v142[4 * (BYTE1(v111) ^ 0x3F)] ^ *(_DWORD *)&v141[4 * (v124 ^ 0x90)] ^ ((v136 >> 26) - ((2 * (v136 >> 26)) & 0x92018A22) - 922696431);
  v150 = *(_DWORD *)&v142[4 * (BYTE1(v131) ^ 0x64)];
  LODWORD(v131) = a80 ^ *(_DWORD *)&v143[4 * (BYTE2(v131) ^ 0xE2)] ^ (v117 - 237705228) ^ *(_DWORD *)&v142[4 * (BYTE1(v128) ^ 0x15)] ^ *(_DWORD *)&v141[4 * (((_DWORD)v129 + 1568178685) ^ 0x7B6C89DD)];
  LODWORD(v117) = a79 ^ v150 ^ *(_DWORD *)&v143[4 * (BYTE2(v124) ^ 0xD3)] ^ *(_DWORD *)&v141[4
                                                                                           * (v128 ^ 0x6D)] ^ (v109 - 1727626442);
  LODWORD(v124) = *(_DWORD *)(v135 + 4 * (BYTE3(v117) ^ 0x74));
  HIDWORD(v136) = v124 ^ 0x789E4F;
  LODWORD(v136) = v124 ^ 0xC8000000;
  LODWORD(v124) = v136 >> 26;
  LODWORD(v128) = *(_DWORD *)(v135 + 4 * (BYTE3(v131) ^ 0xEC));
  HIDWORD(v136) = v128 ^ 0x789E4F;
  LODWORD(v136) = v128 ^ 0xC8000000;
  LODWORD(v128) = v136 >> 26;
  LODWORD(v129) = v111 ^ *(_DWORD *)&v143[4 * (((v118 & 0x3C8 ^ 0x8A4C0D49) + (v118 & 0x37) - 1) ^ 0x8A4C0F54)];
  LODWORD(v109) = *(_DWORD *)(v135 + 4 * (BYTE3(v129) ^ 0x7F));
  v151 = v149 ^ (v148 + 1420082144);
  HIDWORD(v136) = v109 ^ 0x789E4F;
  LODWORD(v136) = v109 ^ 0xC8000000;
  LODWORD(v109) = v136 >> 26;
  LODWORD(v111) = v124 - ((2 * v124) & 0x8327E23A);
  LODWORD(v124) = *(_DWORD *)(v135 + 4 * (HIBYTE(v151) ^ 0xE));
  HIDWORD(v136) = v124 ^ 0x789E4F;
  LODWORD(v136) = v124 ^ 0xC8000000;
  LODWORD(v128) = a78 ^ *(_DWORD *)&v141[4 * (v117 ^ 0x2A)] ^ *(_DWORD *)&v142[4 * (BYTE1(v151) ^ 0x42)] ^ *(_DWORD *)&v143[4 * (BYTE2(v129) ^ 0x5A)] ^ (v128 - ((2 * v128) & 0xB7002E2C) - 612362474);
  LODWORD(v124) = *(_DWORD *)&v142[4 * (BYTE1(v117) ^ 0xA0)] ^ a87 ^ *(_DWORD *)&v141[4 * (v131 ^ 0x12)] ^ *(_DWORD *)&v143[4 * (BYTE2(v151) ^ 0xCA)] ^ (v109 - ((2 * v109) & 0xECE63042) - 160229343);
  LODWORD(v109) = a77 ^ *(_DWORD *)&v143[4 * (BYTE2(v131) ^ 0x1B)] ^ *(_DWORD *)&v142[4 * (BYTE1(v129) ^ 0xB3)] ^ *(_DWORD *)&v141[4 * (v151 ^ 0xA2)] ^ (v111 + 1100214557);
  LODWORD(v111) = a76 ^ *(_DWORD *)&v143[4 * (BYTE2(v117) ^ 0xF6)] ^ *(_DWORD *)&v141[4 * (v129 ^ 0x6B)] ^ *(_DWORD *)&v142[4 * (BYTE1(v131) ^ 0xAD)] ^ ((v136 >> 26) - ((2 * (v136 >> 26)) & 0xF4911C98) + 2051575372);
  LODWORD(v131) = *(_DWORD *)(v135 + 4 * (BYTE3(v128) ^ 0xC9));
  HIDWORD(v136) = v131 ^ 0x789E4F;
  LODWORD(v136) = v131 ^ 0xC8000000;
  v152 = (v136 >> 26) - ((2 * (v136 >> 26)) & 0xB8F8AF78);
  LODWORD(v131) = *(_DWORD *)(v135 + 4 * (BYTE3(v109) ^ 0x48));
  HIDWORD(v136) = v131 ^ 0x789E4F;
  LODWORD(v136) = v131 ^ 0xC8000000;
  LODWORD(v117) = (((2 * (BYTE1(v128) ^ 0xAE)) & 0x1DA) - (BYTE1(v128) ^ 0xAE) - 1873747950) ^ 0x52E454;
  LODWORD(v131) = (v136 >> 26) - ((2 * (v136 >> 26)) & 0x84F7FDB8);
  LODWORD(v129) = *(_DWORD *)(v135 + 4 * (BYTE3(v111) ^ 0xFA));
  HIDWORD(v136) = v129 ^ 0x789E4F;
  LODWORD(v136) = v129 ^ 0xC8000000;
  LODWORD(v118) = *(_DWORD *)(v135 + 4 * (BYTE3(v124) ^ 0xB6));
  v153 = (v136 >> 26) - ((2 * (v136 >> 26)) & 0x9D437BC6);
  HIDWORD(v136) = v118 ^ 0x789E4F;
  LODWORD(v136) = v118 ^ 0xC8000000;
  LODWORD(v131) = a75 ^ *(_DWORD *)&v142[4 * (BYTE1(v124) ^ 0x89)] ^ *(_DWORD *)&v143[4 * (BYTE2(v128) ^ 0x9D)] ^ *(_DWORD *)&v141[4 * (v111 ^ 0x61)] ^ (v131 + 1115422428);
  LODWORD(v129) = a74 ^ *(_DWORD *)&v143[4 * (BYTE2(v124) ^ 0x1E)] ^ *(_DWORD *)&v141[4 * (v109 ^ 0x32)] ^ *(_DWORD *)&v142[4 * (BYTE1(v111) ^ 0x2E)] ^ (v152 + 1551652796);
  LODWORD(v124) = a73 ^ *(_DWORD *)&v141[4 * (v124 ^ 0x91)] ^ *(_DWORD *)&v143[4 * (BYTE2(v109) ^ 0x52)] ^ (v153 - 828260893) ^ *(_DWORD *)&v142[4 * ((1201152527 - (v117 | 0x4798220F) + (v117 | 0xB867DDF0)) ^ 0x2865D936)];
  LODWORD(v111) = a72 ^ *(_DWORD *)&v143[4 * (BYTE2(v111) ^ 0x76)] ^ *(_DWORD *)&v141[4 * (v128 ^ 0x84)] ^ *(_DWORD *)&v142[4 * (((BYTE1(v109) ^ 0x1441E25A) - ((2 * (BYTE1(v109) ^ 0x1441E25A)) & 0x838544) - 1068639326) ^ 0xD40C390D)] ^ ((v136 >> 26) - ((2 * (v136 >> 26)) & 0xF87ED8C0) - 62952352);
  v154 = *(_DWORD *)(v135 + 4 * (BYTE3(v111) ^ 0x56));
  HIDWORD(v136) = v154 ^ 0x789E4F;
  LODWORD(v136) = v154 ^ 0xC8000000;
  LODWORD(v109) = (v136 >> 26) - ((2 * (v136 >> 26)) & 0x3165036);
  v155 = *(_DWORD *)(v135 + 4 * (BYTE3(v131) ^ 0xDA));
  HIDWORD(v136) = v155 ^ 0x789E4F;
  LODWORD(v136) = v155 ^ 0xC8000000;
  v156 = (v136 >> 26) - ((2 * (v136 >> 26)) & 0xE5950860);
  LODWORD(v117) = *(_DWORD *)(v135 + 4 * (BYTE3(v129) ^ 0x70));
  HIDWORD(v136) = v117 ^ 0x789E4F;
  LODWORD(v136) = v117 ^ 0xC8000000;
  v157 = *(_DWORD *)(v135 + 4 * (BYTE3(v124) ^ 0x76));
  v158 = ((v129 ^ 0x8C) - ((2 * (v129 ^ 0x8C)) & 0xFFFFFFBF) - 1593750049) ^ 0xD401EDFE;
  LODWORD(v128) = a71 ^ (v156 - 221608912) ^ *(_DWORD *)&v143[4 * (BYTE2(v129) ^ 0x18)] ^ *(_DWORD *)&v142[4 * (BYTE1(v111) ^ 0x8F)] ^ *(_DWORD *)&v141[4 * (((v124 ^ 0xC9) + 81692 - ((2 * (v124 ^ 0xC9)) & 0x104) + 102) ^ 0x13F1C)];
  v159 = a70 ^ *(_DWORD *)&v143[4 * (BYTE2(v131) ^ 0x6D)] ^ *(_DWORD *)&v141[4 * (v111 ^ 0xA4)] ^ *(_DWORD *)&v142[4 * (BYTE1(v129) ^ 2)] ^ (v157 >> 26) ^ (((v157 << 6) ^ 0x1E2793C0) - ((2 * ((v157 << 6) ^ 0x1E2793C0)) & 0x627F9280) - 1321219753);
  LODWORD(v111) = a69 ^ *(_DWORD *)&v141[4 * (v131 ^ 0xBB)] ^ *(_DWORD *)&v143[4 * (BYTE2(v111) ^ 0xB1)] ^ *(_DWORD *)&v142[4 * (BYTE1(v124) ^ 0x26)] ^ ((v136 >> 26) - ((2 * (v136 >> 26)) & 0x41E33CE2) + 552705649);
  LODWORD(v131) = a68 ^ *(_DWORD *)&v143[4 * (BYTE2(v124) ^ 0x7A)] ^ *(_DWORD *)&v142[4 * (BYTE1(v131) ^ 0x85)] ^ (v109 + 25896987) ^ *(_DWORD *)&v141[4 * ((v158 - ((2 * v158) & 0x8001445A) - 1059081683) ^ 0xB5DF1211)];
  LODWORD(v124) = *(_DWORD *)(v135 + 4 * (BYTE3(v131) ^ 0x2D));
  HIDWORD(v136) = v124 ^ 0x789E4F;
  LODWORD(v136) = v124 ^ 0xC8000000;
  v160 = (v136 >> 26) - ((2 * (v136 >> 26)) & 0xCBAB782C);
  LODWORD(v124) = *(_DWORD *)(v135 + 4 * (HIBYTE(v159) ^ 0x52));
  HIDWORD(v136) = v124 ^ 0x789E4F;
  LODWORD(v136) = v124 ^ 0xC8000000;
  LODWORD(v124) = v136 >> 26;
  LODWORD(v117) = *(_DWORD *)(v135 + 4 * (BYTE3(v111) ^ 0x51));
  HIDWORD(v136) = v117 ^ 0x789E4F;
  LODWORD(v136) = v117 ^ 0xC8000000;
  LODWORD(v117) = v136 >> 26;
  LODWORD(v129) = *(_DWORD *)(v135 + 4 * (BYTE3(v128) ^ 0x33));
  LODWORD(v118) = v124 - ((2 * v124) & 0xA53527F2);
  HIDWORD(v136) = v129 ^ 0x789E4F;
  LODWORD(v136) = v129 ^ 0xC8000000;
  LODWORD(v124) = a67 ^ *(_DWORD *)&v143[4 * (BYTE2(v111) ^ 0xCD)] ^ *(_DWORD *)&v141[4 * (v159 ^ 0x9E)] ^ *(_DWORD *)&v142[4 * (BYTE1(v131) ^ 0x2B)] ^ ((v136 >> 26) - ((2 * (v136 >> 26)) & 0x37C7CBCE) - 1679563289);
  LODWORD(v129) = a66 ^ *(_DWORD *)&v142[4 * (BYTE1(v159) ^ 0x17)] ^ *(_DWORD *)&v141[4 * (v128 ^ 0xBE)] ^ (v117 - ((2 * v117) & 0x54150894) - 1442151350) ^ *(_DWORD *)&v143[4 * ((((2 * (BYTE2(v131) ^ 0x21169F7E)) | 0x4A288DBC) - (BYTE2(v131) ^ 0x21169F7E) - 622085854) ^ 0x402D924)];
  LODWORD(v109) = a65 ^ *(_DWORD *)&v143[4 * (BYTE2(v159) ^ 0xB4)] ^ *(_DWORD *)&v142[4 * (BYTE1(v128) ^ 0xD3)] ^ *(_DWORD *)&v141[4 * (v111 ^ 0x6C)] ^ (v160 + 1708506134);
  LODWORD(v117) = a64 ^ *(_DWORD *)&v142[4 * (BYTE1(v111) ^ 0xD1)] ^ *(_DWORD *)&v143[4 * (BYTE2(v128) ^ 0xDF)] ^ *(_DWORD *)&v141[4 * (v131 ^ 0xBB)] ^ (v118 + 1385862137);
  LODWORD(v131) = *(_DWORD *)(v135 + 4 * (BYTE3(v129) ^ 0xCD));
  HIDWORD(v136) = v131 ^ 0x789E4F;
  LODWORD(v136) = v131 ^ 0xC8000000;
  LODWORD(v111) = (v136 >> 26) - ((2 * (v136 >> 26)) & 0x9DBF5E3A);
  LODWORD(v131) = *(_DWORD *)(v135 + 4 * (BYTE3(v117) ^ 0x77));
  HIDWORD(v136) = v131 ^ 0x789E4F;
  LODWORD(v136) = v131 ^ 0xC8000000;
  LODWORD(v131) = (v136 >> 26) - ((2 * (v136 >> 26)) & 0x92C8EFFE);
  LODWORD(v128) = *(_DWORD *)(v135 + 4 * (BYTE3(v124) ^ 0x57));
  HIDWORD(v136) = v128 ^ 0x789E4F;
  LODWORD(v136) = v128 ^ 0xC8000000;
  v161 = (v136 >> 26) - ((2 * (v136 >> 26)) & 0x321C1976);
  LODWORD(v128) = a63 ^ *(_DWORD *)&v143[4 * (BYTE2(v124) ^ 0xC2)] ^ *(_DWORD *)&v142[4 * (BYTE1(v129) ^ 0x15)] ^ *(_DWORD *)&v141[4 * (v109 ^ 0xB4)] ^ (v131 + 1231321087);
  LODWORD(v131) = *(_DWORD *)(v135 + 4 * (BYTE3(v109) ^ 0x5F));
  HIDWORD(v136) = v131 ^ 0x789E4F;
  LODWORD(v136) = v131 ^ 0xC8000000;
  LODWORD(v131) = a62 ^ *(_DWORD *)&v142[4 * (BYTE1(v124) ^ 0xDD)] ^ *(_DWORD *)&v141[4 * (v129 ^ 0xD4)] ^ *(_DWORD *)&v143[4 * (BYTE2(v117) ^ 0x78)] ^ ((v136 >> 26) - ((2 * (v136 >> 26)) & 0xBD0AC5FC) + 1585799934);
  LODWORD(v129) = a61 ^ *(_DWORD *)&v142[4 * (BYTE1(v109) ^ 0xC5)] ^ *(_DWORD *)&v143[4 * (BYTE2(v129) ^ 0x5F)] ^ *(_DWORD *)&v141[4 * ((((2 * (v117 ^ 0x3A4E9338)) & 0x200026FE) - (v117 ^ 0x3A4E9338) + 199206016) & 0x20013FFF ^ 0x200137CD)] ^ (v161 - 1727132485);
  v162 = *(_DWORD *)&v143[4 * (BYTE2(v109) ^ 0xAA)];
  LODWORD(v109) = *(_DWORD *)(v135 + 4 * (BYTE3(v129) ^ 0xB6));
  HIDWORD(v136) = v109 ^ 0x789E4F;
  LODWORD(v136) = v109 ^ 0xC8000000;
  LODWORD(v124) = a60 ^ *(_DWORD *)&v142[4 * (BYTE1(v117) ^ 0x20)] ^ *(_DWORD *)&v141[4 * (v124 ^ 0xC)] ^ v162 ^ (v111 - 824201443);
  LODWORD(v109) = (v136 >> 26) - ((2 * (v136 >> 26)) & 0x48AC7AFC);
  v163 = *(_DWORD *)(v135 + 4 * (BYTE3(v131) ^ 0xC7));
  HIDWORD(v136) = v163 ^ 0x789E4F;
  LODWORD(v136) = v163 ^ 0xC8000000;
  v164 = (v136 >> 26) - ((2 * (v136 >> 26)) & 0xD57671EA);
  LODWORD(v117) = *(_DWORD *)&v142[4 * (BYTE1(v131) ^ 0x4B)];
  HIDWORD(v136) = v117 ^ 0x233E;
  LODWORD(v136) = v117 ^ 0xF497C000;
  LODWORD(v117) = (v136 >> 14) - ((2 * (v136 >> 14)) & 0x2CF0430A);
  LODWORD(v109) = v109 - 1537852034;
  HIDWORD(v136) = v109 ^ 0x3D7E;
  LODWORD(v136) = v109 ^ 0xA4560000;
  LODWORD(v109) = (v117 - 1770511995) ^ ((v136 >> 14) - ((2 * (v136 >> 14)) & 0x8FE89628) - 940291308);
  HIDWORD(v136) = v109 ^ 0x12982;
  LODWORD(v136) = v109 ^ 0x5E780000;
  LODWORD(v117) = (v136 >> 18) - ((2 * (v136 >> 18)) & 0x1C80E368);
  LODWORD(v109) = *(_DWORD *)(v135 + 4 * (BYTE3(v128) ^ 0xF7));
  HIDWORD(v136) = v109 ^ 0x789E4F;
  LODWORD(v136) = v109 ^ 0xC8000000;
  LODWORD(v109) = (v136 >> 26) - ((2 * (v136 >> 26)) & 0x484AE1A6);
  LODWORD(v111) = *(_DWORD *)(v135 + 4 * (BYTE3(v124) ^ 0x8C));
  HIDWORD(v136) = v111 ^ 0x789E4F;
  LODWORD(v136) = v111 ^ 0xC8000000;
  v165 = a59 ^ *(_DWORD *)&v143[4 * (BYTE2(v128) ^ 0xAE)] ^ *(_DWORD *)&v141[4 * (v124 ^ 0x7E)] ^ *(_DWORD *)&v142[4 * (BYTE1(v129) ^ 0x89)] ^ (v164 - 356828939);
  LODWORD(v117) = a58 ^ *(_DWORD *)&v143[4 * (BYTE2(v124) ^ 0x59)] ^ *(_DWORD *)&v141[4 * (v128 ^ 0x4E)] ^ (v117 + 239104436);
  LODWORD(v128) = a57 ^ *(_DWORD *)&v141[4 * (v129 ^ 0x71)] ^ *(_DWORD *)&v142[4 * (BYTE1(v128) ^ 0x9A)] ^ *(_DWORD *)&v143[4 * (BYTE2(v131) ^ 7)] ^ ((v136 >> 26) - ((2 * (v136 >> 26)) & 0x3148D77A) + 413428669);
  LODWORD(v111) = *(_DWORD *)(v135 + 4 * (BYTE3(v117) ^ 0x62));
  LODWORD(v124) = a56 ^ *(_DWORD *)&v143[4 * (BYTE2(v129) ^ 0xF3)] ^ *(_DWORD *)&v142[4 * (BYTE1(v124) ^ 0xCA)];
  HIDWORD(v136) = v111 ^ 0x789E4F;
  LODWORD(v136) = v111 ^ 0xC8000000;
  LODWORD(v129) = v136 >> 26;
  LODWORD(v111) = *(_DWORD *)(v135 + 4 * (BYTE3(v128) ^ 0xD3));
  LODWORD(v131) = v124 ^ *(_DWORD *)&v141[4 * (v131 ^ 0xCB)];
  HIDWORD(v136) = v111 ^ 0x789E4F;
  LODWORD(v136) = v111 ^ 0xC8000000;
  LODWORD(v124) = v136 >> 26;
  LODWORD(v131) = v131 ^ (v109 + 606433491);
  LODWORD(v111) = *(_DWORD *)&v143[4 * (BYTE2(v131) ^ 0xA0)];
  LODWORD(v118) = *(_DWORD *)&v143[4
                                 * ((((2 * (BYTE2(v117) ^ 0x1403E3D)) | 0x1E98639E)
                                   - (BYTE2(v117) ^ 0x1403E3D)
                                   + 1890831921) ^ 0x8E0C0F7A)];
  v166 = *(_DWORD *)&v143[4 * (BYTE2(v165) ^ 0x7C)];
  v167 = *(_DWORD *)(v135 + 4 * (BYTE3(v131) ^ 0xC6));
  HIDWORD(v136) = v167 ^ 0x789E4F;
  LODWORD(v136) = v167 ^ 0xC8000000;
  v168 = *(_DWORD *)&v141[4 * (v128 ^ 0x70)];
  LODWORD(v135) = *(_DWORD *)(v135 + 4 * (HIBYTE(v165) ^ 0xB1));
  LODWORD(v143) = a55 ^ *(_DWORD *)&v143[4 * (BYTE2(v128) ^ 0xCA)] ^ *(_DWORD *)&v141[4 * (v131 ^ 0x15)] ^ *(_DWORD *)&v142[4 * (BYTE1(v165) ^ 0x6C)] ^ (v129 - ((2 * v129) & 0x443806C4) - 1575222430);
  v169 = a54 ^ v166 ^ (v124 - ((2 * v124) & 0xF2D16C78) + 2036905532) ^ *(_DWORD *)&v142[4 * (BYTE1(v131) ^ 0x2B)] ^ *(_DWORD *)&v141[4 * (v117 ^ 0xAB)];
  LODWORD(v128) = a53 ^ *(_DWORD *)&v141[4
                                       * ((((2 * (v165 ^ 0xA2112A5)) | 0x9C1B17DC)
                                         - (v165 ^ 0xA2112A5)
                                         - 1309510638) ^ 0x442C99D9)] ^ ((v136 >> 26)
                                                                       - ((2 * (v136 >> 26)) & 0x5B7C6EC8)
                                                                       - 1380042908) ^ *(_DWORD *)&v142[4 * (BYTE1(v128) ^ 0xC3)] ^ v118;
  LODWORD(v142) = a52 ^ v111 ^ v168 ^ *(_DWORD *)&v142[4 * (BYTE1(v117) ^ 0xD3)] ^ (v135 >> 26) ^ ((((_DWORD)v135 << 6) ^ 0x1E2793C0) - ((2 * (((_DWORD)v135 << 6) ^ 0x1E2793C0)) & 0xA626F380) - 753698361);
  v170 = (char *)*(&off_10112C750 + v92 - 16041) - 85927834;
  LODWORD(v131) = *(_DWORD *)&v170[4 * (BYTE2(v128) ^ 0x3A)];
  HIDWORD(v136) = v131 ^ 2;
  LODWORD(v136) = v131 ^ 0x2EFFFD38;
  LODWORD(v124) = ((v169 ^ 0x51) - ((2 * (v169 ^ 0x51)) & 0x162) + 854459569) ^ 0x227E86B1;
  v171 = (char *)*(&off_10112C750 + (v92 ^ 0x45AD)) - 2109435694;
  LODWORD(v117) = ((v124 - ((2 * v124) & 0x20000B7E) - 1340004929) ^ 0xD62B8AE3) + 1;
  v172 = (char *)*(&off_10112C750 + v92 - 13962) - 618672603;
  LODWORD(v131) = *(_DWORD *)&v172[4 * (BYTE1(v128) ^ 0xBD)];
  LODWORD(v129) = *(_DWORD *)&v172[4 * (BYTE1(v142) ^ 0xAA)];
  LODWORD(v141) = *(_DWORD *)&v172[4 * (BYTE1(v169) ^ 0xEB)];
  v173 = *(_DWORD *)&v172[4 * (BYTE1(v143) ^ 0x54)];
  v174 = v128;
  v175 = *(_DWORD *)&v171[4 * (v128 ^ 0xD5)];
  LODWORD(v172) = v143;
  v176 = *(_DWORD *)&v171[4 * (v143 ^ 0x6E)];
  LODWORD(v118) = ((v142 & 0xB1 ^ 0x6718EA10) + (v142 & 0x4E ^ 0x47) - 1) ^ 0x703FA91;
  v177 = *(_DWORD *)&v171[4 * ((((2 * (_DWORD)v118) | 0x21218BB8) - (_DWORD)v118 - 277923292) ^ 0x708BD515)];
  LODWORD(v171) = ((2 * v117) & 0xFCBF5AE6) + (v117 ^ 0x7E5FAD73) + *(_DWORD *)&v171[4 * (v169 ^ 0x9E)];
  v178 = (char *)*(&off_10112C750 + (v92 ^ 0x4249)) - 1416133130;
  LODWORD(v118) = *(_DWORD *)&v178[4 * ((v143 >> 24) ^ 0x4D)];
  LODWORD(v128) = *(_DWORD *)&v178[4 * (BYTE3(v128) ^ 0x18)];
  LODWORD(v111) = *(_DWORD *)&v178[4 * (HIBYTE(v169) ^ 0xF3)];
  v179 = *(_DWORD *)&v178[4 * ((v142 >> 24) ^ 0x47)];
  LODWORD(v178) = *(_DWORD *)&v170[4 * (BYTE2(v142) ^ 0x78)];
  v180 = *(_DWORD *)&v170[4 * (BYTE2(v169) ^ 0x13)];
  v181 = *(_DWORD *)&v170[4 * (BYTE2(v143) ^ 0x47)];
  LODWORD(v143) = *(_DWORD *)(v95 - 184) ^ LODWORD(STACK[0x204]) ^ v173;
  v182 = STACK[0x210];
  LODWORD(v143) = v143 ^ v179 ^ ((v136 >> 2) - ((2 * (v136 >> 2)) & 0x59619428) + 749783572) ^ ((_DWORD)v171 - ((2 * (_DWORD)v171 - 518129082) & 0xDB1D9CDC) + 1579010961);
  v183 = (char *)*(&off_10112C750 + (v92 ^ 0x4AA6)) - 2066244811;
  *(_BYTE *)(((*(_DWORD *)(v95 - 252) - 360791281 - (*(_DWORD *)(v95 - 248) & 0xD4FD861E)) ^ 0x37FA6D7B11831633)
           + STACK[0x210]
           + ((2 * ((*(_DWORD *)(v95 - 252) - 360791281 - (*(_DWORD *)(v95 - 248) & 0xD4FD861E)) ^ 0xEA7EC30F)) & 0x1F7FBAA78)
           - 0x37FA6D7BFBFDD53CLL) = v183[((BYTE2(v143) ^ 0x79) - ((2 * (BYTE2(v143) ^ 0x79)) & 0x8Au) + 581) ^ 0x26FLL] ^ 0x2C;
  LODWORD(v110) = ((((2 * (v174 ^ 0x6373)) | 0x9E1C28E) - (v174 ^ 0x6373) + 2064588473) ^ 0xF26AAF72) + 1;
  LODWORD(v110) = (v110 ^ 0xBBFDDCF7) + v175 + ((2 * v110) & 0x77FBB9EE);
  HIDWORD(v136) = v180 ^ 2;
  LODWORD(v136) = v180 ^ 0x2EFFFD38;
  LODWORD(v110) = *(_DWORD *)(v95 - 168) ^ a92 ^ v129 ^ v118 ^ ((v136 >> 2)
                                                              - ((2 * (v136 >> 2)) & 0xE27648EE)
                                                              - 247782281) ^ (v110
                                                                            - ((2 * v110 + 1709284158) & 0x6E4BDC04)
                                                                            - 367608927);
  v184 = (char *)*(&off_10112C750 + (v92 ^ 0x4154)) - 1195871063;
  *(_BYTE *)(((LODWORD(STACK[0x25C]) - 527168806 + (STACK[0x258] & 0xC12815A4 ^ 0xFFFFFFEF) + 1) ^ 0xCAFFBFFF5D8BC54FLL)
           + v182
           + ((2 * ((LODWORD(STACK[0x25C]) - 527168806 + (STACK[0x258] & 0xC12815A4 ^ 0xFFFFFFEF) + 1) ^ 0xE0940ADA)) & 0x17A3F9F2ALL)
           + 0x3500400042E0306BLL) = v184[BYTE3(v110) ^ 0xACLL] ^ 0x49;
  HIDWORD(v136) = v178 ^ 2;
  LODWORD(v136) = v178 ^ 0x2EFFFD38;
  LODWORD(v172) = ((-701789469
                  - (v172 ^ 0x22047C1)
                  + ((2 * (v172 ^ 0x22047C1)) | 0x53A8CD54)
                  + 3699) ^ 0x5D6E0C96)
                + 1;
  LODWORD(v172) = ((2 * (_DWORD)v172) & 0x559EFB9E) + (v172 ^ 0xAACF7DCF) + v176;
  v185 = *(_DWORD *)(v95 - 172) ^ LODWORD(STACK[0x208]) ^ v131 ^ ((v136 >> 2)
                                                                - ((2 * (v136 >> 2)) & 0xB6ADE9DE)
                                                                - 615058193) ^ v111 ^ ((_DWORD)v172
                                                                                     - ((2 * (_DWORD)v172 + 138303886) & 0x534F6566)
                                                                                     - 305733766);
  LODWORD(v131) = (((2 * (BYTE2(v185) ^ 0xF0)) | 0xF1F7B06C) - (BYTE2(v185) ^ 0xF0) - 2029770806) ^ 0x38B9D8F0;
  *(_BYTE *)(STACK[0x248] - 0x3FFF7BE9FBDFD7BBLL) = v183[(((2 * (_DWORD)v131) & 0x253B9666)
                                                        - v131
                                                        + 1835152588) ^ 0x2D203443] ^ 0x13;
  *(_BYTE *)(((LODWORD(STACK[0x254]) - 78541334 - (STACK[0x250] & 0xF6A31BD4)) ^ 0x7EFEFBFB002CB295)
           + v182
           + ((2 * ((LODWORD(STACK[0x254]) - 78541334 - (STACK[0x250] & 0xF6A31BD4)) ^ 0xFB518DEA)) & 0x1F6FA7EFELL)
           - 0x7EFEFBFBFB7D3F7FLL) = v184[HIBYTE(v185) ^ 0xC8] ^ 0xF6;
  v186 = (char *)*(&off_10112C750 + (v92 ^ 0x40FD)) - 627815902;
  LOBYTE(v172) = v186[(((v185 >> 8) & 0x99 ^ 0x9B4F2209) + ((v185 >> 8) & 0x66 ^ 0x43) - 1) ^ 0x9B4F22A5];
  *(_BYTE *)(((*(_DWORD *)(v95 - 220)
             + 1163087303
             + ((2 * (*(_DWORD *)(v95 - 220) & 0x45534DC9 ^ (v96 | 0x7FFFFFF7))) ^ 0x1D)
             + 1) ^ 0xFF7FFACB322CB931)
           + ((2
             * ((*(_DWORD *)(v95 - 220)
               + 1163087303
               + ((2 * (*(_DWORD *)(v95 - 220) & 0x45534DC9 ^ (v96 | 0x7FFFFFF7))) ^ 0x1D)
               + 1) ^ 0x45534DC7)) & 0xEEFFE9EC)
           + v182
           + 0x80053488800B0ALL) = ((_BYTE)v172 - ((2 * (_BYTE)v172 + 92) & 0x68) + 98) ^ 0x89;
  LOWORD(v172) = (v142 ^ 0xB5)
               + (v142 & 0x56 ^ 0x5D42)
               - ((v142 ^ 0xB5) & 0x56);
  LODWORD(v172) = ((((unsigned __int16)v172 & 0x7B2 ^ 0x43B268B1) + (v172 & 0x4D) - 1) ^ 0x352840CE)
                + 1;
  LODWORD(v172) = ((2 * (_DWORD)v172) & 0xA3A73FFC) + (v172 ^ 0xD1D39FFE) + v177;
  HIDWORD(v136) = v181 ^ 2;
  LODWORD(v136) = v181 ^ 0x2EFFFD38;
  LODWORD(v142) = *(_DWORD *)(v95 - 164) ^ LODWORD(STACK[0x200]) ^ v141 ^ v128 ^ ((v136 >> 2)
                                                                                              - ((2 * (v136 >> 2)) & 0xD7A1228)
                                                                                              - 2034431724) ^ ((_DWORD)v172 - 2 * (((_DWORD)v172 + 488311448) & 0x416214DF ^ v172 & 7) + 1585258352);
  LODWORD(v172) = (*(_BYTE *)(v95 - 164) ^ LOBYTE(STACK[0x200]) ^ v141 ^ v128 ^ ((v136 >> 2) - ((2 * (v136 >> 2)) & 0x28) + 20) ^ ((_BYTE)v172 - 2 * (((_BYTE)v172 - 104) & 0xDF ^ v172 & 7) + 112)) ^ 0x52;
  v187 = (char *)*(&off_10112C750 + v92 - 16018) - 1969707731;
  *(_BYTE *)(STACK[0x278] - 0x7F7CBBEAFFAFBA39) = v142 ^ v187[(((2 * (_DWORD)v172) & 0x194)
                                                                                - v172
                                                                                + 9269) ^ 0x24CDLL] ^ 0x70;
  v188 = (((2 * (BYTE1(v142) ^ 0xB7)) | 0x960691E8) - (BYTE1(v142) ^ 0xB7) + 888977164) ^ 0x8F127051;
  LOBYTE(v188) = v186[(197870770 - (v188 | 0xBCB44B2) + (v188 | 0xF434BB4D)) ^ 0xB025833CLL];
  *(_BYTE *)(((LODWORD(STACK[0x264]) + 1571788890 + (STACK[0x260] & 0xBB5F30A0 ^ 0xFFFFFFEB) + 1) ^ 0x94CF39ABBE9A37E0)
           + v182
           + ((2 * ((LODWORD(STACK[0x264]) + 1571788890 + (STACK[0x260] & 0xBB5F30A0 ^ 0xFFFFFFEB) + 1) ^ 0x5DAF985A)) & 0x1C66B5F74)
           + 0x6B30C6541CCA5046) = (v188 - ((2 * v188 + 92) & 0x52) - 41) ^ 0x38;
  LODWORD(v172) = (v143 >> 8) & 0x97 ^ 0xFC20CD96 | (v143 >> 8) & 0x68;
  LOBYTE(v172) = v186[((((((v143 >> 8) & 0x97 ^ 0xFC20CD96) & 0x10200002)
                       + (v172 ^ 0xF028490F)) | 0x3940000)
                     - ((v172 ^ 0xF028490F) & 0xC080002)) ^ 0x13B484C3];
  LODWORD(v131) = *(_DWORD *)(v95 - 244)
                + 453498035
                + ((2 * (*(_DWORD *)(v95 - 244) & 0x1B07D4B8 ^ (v96 | 0x7FFFFFF7))) ^ 0x17);
  *(_BYTE *)(((LODWORD(STACK[0x274]) - 595159790 + ((2 * (STACK[0x274] & 0x5C869518 ^ (v96 | 0x7FFFFFF7))) ^ 0x15) + 1) ^ 0x6FFFFF9E097B6AEDLL)
           + v182
           + ((2
             * ((LODWORD(STACK[0x274]) - 595159790 + ((2 * (STACK[0x274] & 0x5C869518 ^ (v96 | 0x7FFFFFF7))) ^ 0x15) + 1) ^ 0xDC869512)) & 0x1ABFBFFFELL)
           - 0x6FFFFF9ED5FDFFFFLL) = ((_BYTE)v172 - ((2 * (_BYTE)v172 + 92) & 0x74) - 24) ^ 0xC5;
  *(_BYTE *)(((v131 + 1) ^ 0xBF7B5B7FE6F96A00)
           + v182
           + ((2 * (((_DWORD)v131 + 1) ^ 0x1B07D4B3u)) & 0x1FBFD7D66)
           + 0x4084A4800201414DLL) = v143 ^ 0x48 ^ v187[(573661241
                                                                        - (v143 ^ 0x66 | 0x22316039)
                                                                        + (v143 ^ 0x66 | 0xDDCE9FC6)) ^ 0xDDCE9FEC];
  *(_BYTE *)(((*(_DWORD *)(v95 - 204) + 1739204253 - (*(_DWORD *)(v95 - 208) & 0xCF544D3A)) ^ 0xFF95AD5D4859A968)
           + ((2 * ((*(_DWORD *)(v95 - 204) + 1739204253 - (*(_DWORD *)(v95 - 208) & 0xCF544D3A)) ^ 0x67AA269D)) & 0x5FE71FEA)
           + v182
           + 0x6A52A2D00C700BLL) = v183[BYTE2(v110) ^ 0xF8] ^ 0x45;
  *(_BYTE *)(*(_QWORD *)(v95 - 240) - 0x5FCDBFF3C8D6DAEFLL) = v185 ^ v187[v185 ^ 7] ^ 0x77;
  v189 = *(_DWORD *)(v95 - 212) + 222787878 + (*(_DWORD *)(v95 - 216) & 0x1A8EF248 ^ 0xFFFFFFFB);
  *(_BYTE *)(((LODWORD(STACK[0x268]) + 570805536 - (STACK[0x26C] & 0x440B9A40)) ^ 0xFF7EEAB7DF7332CDLL)
           + v182
           + ((2 * ((LODWORD(STACK[0x268]) + 570805536 - (STACK[0x26C] & 0x440B9A40)) ^ 0x2205CD20u)) & 0x1FAEDFFDALL)
           + 0x81154802890013) = v183[((BYTE2(v142) ^ 0xD64E66)
                                       - ((2 * (BYTE2(v142) ^ 0xD64E66)) & 0x1AC883Au)
                                       + 1190622237) ^ 0x46213A86] ^ 0x71;
  LODWORD(v131) = (BYTE1(v110) ^ 0x3E)
                + ((v110 >> 8) & 0x8F ^ 0xE4BF8A81)
                - ((BYTE1(v110) ^ 0x3E) & 0xFFFFFF8F);
  LOBYTE(v131) = v186[((v131 & 0x1F3 ^ 0xC084EC71) + (v131 & 0x20C ^ 0x1081005) - 1) ^ 0xC18CFE68];
  *(_BYTE *)(((v189 + 1) ^ 0x6FFDFE7DF2B4CEDBLL)
           + v182
           + ((2 * ((v189 + 1) ^ 0xD477926)) & 0x1FFE76FFALL)
           - 0x6FFDFE7DFFF3B7FDLL) = (v131 - ((2 * v131 + 92) & 0xCA) + 19) ^ 0xEA;
  *(_BYTE *)(*(_QWORD *)(v95 - 232) - 0x4FBBF7FEFEFF6D3BLL) = v184[(v142 >> 24) ^ 0x74] ^ 0xC7;
  *(_BYTE *)(*(_QWORD *)(v95 - 200) + 0x4029007801A9109) = v184[(v143 >> 24) ^ 0x82] ^ 0xD9;
  LODWORD(v131) = (v110 & 0x38) + (v110 ^ 0x7C) - ((v110 ^ 0x7C) & 0x38) + 1770298624;
  *(_BYTE *)(((LODWORD(STACK[0x270]) - 483330624 - ((2 * LODWORD(STACK[0x270])) & 0xC661EB80)) ^ 0xA2CEBBBD2ECE2A7FLL)
           + v182
           + ((2 * ((LODWORD(STACK[0x270]) - 483330624 - ((2 * LODWORD(STACK[0x270])) & 0xC661EB80)) ^ 0xE330F5C0)) & 0x19BFDBF7ELL)
           + 0x5D31444232012041) = v110 ^ 0x3B ^ v187[((v131 & 0x28040FFE ^ 0x145007D6)
                                                       + (v131 ^ 0xE9250828)
                                                       - ((v131 ^ 0xE9250828) & 0xA187FE)) ^ 0xBC541A33];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x218]
                                        + 8
                                        * ((8535
                                          * (((*(_QWORD *)(v95 - 192)
                                             - 495142943
                                             - 2
                                             * ((*(_QWORD *)(v95 - 192) + 16) & 0x627CB7DB ^ v96 & 0xA)) ^ 0xE27CB7D1) < a48)) ^ v92))
                            - 8))();
}

uint64_t sub_1000202B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t (*v8)(void);

  v7 = STACK[0x244];
  *(_DWORD *)(v6 - 164) = LODWORD(STACK[0x238]) ^ 0x23898974;
  *(_DWORD *)(v6 - 168) = ((v7 ^ 0x740E) - 809948483) ^ LODWORD(STACK[0x234]);
  v8 = (uint64_t (*)(void))(*(_QWORD *)(a6 + 8 * v7) - 4);
  *(_DWORD *)(v6 - 184) = STACK[0x240];
  *(_DWORD *)(v6 - 172) = STACK[0x23C];
  return v8();
}

uint64_t sub_100020308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6
                                                                                          + 8
                                                                                          * (int)(STACK[0x228] ^ (31 * (a48 != 787210063))))
                                                                              - 12))(a1, a2, a3, 4286735353, a45);
}

uint64_t sub_100020394(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  unsigned int v6;
  int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  _BOOL4 v11;
  _BYTE *v12;

  v11 = v8 < v6;
  v12 = (_BYTE *)(v10 + (v9 - 312484760));
  *v12 ^= *(_BYTE *)(a5
                   + ((v7 - 18940) & (((((_DWORD)v12 * a4) ^ (((_DWORD)v12 * a4) >> 16)) * a4) >> 20) | ((_BYTE)v9 + 104) & 0xF)) ^ (-7 * (((_BYTE)v12 * a4) ^ (((_DWORD)v12 * a4) >> 16)));
  if (v11 == v9 + 821801880 < v6)
    v11 = v9 + 821801880 < v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(a6 + 8 * ((31 * v11) ^ v7)) - 12))();
}

uint64_t sub_100020430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  unsigned int v46;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a6 + 8 * (int)v46) - (v46 ^ 0x3C3ALL)))(a46);
}

uint64_t sub_100020450@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 12) = a2;
  return result;
}

void sub_100020490(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) ^ (1167911989 * (a1 ^ 0x2EAADF93));
  __asm { BR              X9 }
}

#error "100029DA0: call analysis failed (funcsize=7804)"

uint64_t sub_100029DA4()
{
  int v0;
  int v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t (*v5)(void);

  v4 = STACK[0x3B8];
  *(_BYTE *)(STACK[0x3B0] + v4) = *(_BYTE *)(v3 - 144 + STACK[0x3B8]) ^ (v2 - ((2 * v2 + 30) & 0x26) - 30) ^ 0x93;
  v5 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v4 == 15) * v1) ^ v0)) - 12);
  STACK[0x3B8] = v4 + 1;
  return v5();
}

uint64_t sub_100029FF4@<X0>(char a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (LODWORD(STACK[0x3A8]) ^ (54909 * (((a1 + 2) & 3) != 0))))
                            - 8))();
}

uint64_t sub_10002A07C@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * ((v1 + 17265) ^ (112 * (((a1 + 3) & 3) == 0)))) - 12))();
}

uint64_t sub_10002A140@<X0>(char a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (v1 ^ (11913 * ((a1 & 3) != 0)))) - 8))();
}

uint64_t sub_10002A1D4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * v0) - 8))();
}

uint64_t sub_10002A244()
{
  int v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = (uint64_t (*)(uint64_t))((char *)*(&off_10112C750 + v0 - 3074) - 253855715);
  STACK[0x330] = (unint64_t)v2;
  v3 = v2(258);
  STACK[0x3A8] = 0;
  *(_QWORD *)(v1 - 168) = v3;
  return (*(uint64_t (**)(void))(STACK[0x3C0] + 8 * ((33066 * (v3 != 0)) ^ v0)))();
}

uint64_t sub_10002A2B8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20,int a21,int a22,int a23,int a24,int a25,int a26,int a27,int a28,int a29,int a30,int a31,int a32,int a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,int a41,int a42,int a43,int a44,int a45,int a46,int a47,int a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  int a64;
  int a65;
  int a66;
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  int v161;
  int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  int v212;
  unsigned int v213;
  unint64_t v214;
  int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  int v236;
  int v237;
  unsigned int v238;
  int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  int v276;
  int v277;
  unsigned int v278;
  unsigned int v279;
  int v280;
  int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  int v303;
  int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  int v314;
  unsigned int v315;
  unsigned int v316;
  int v317;
  unsigned int v318;
  unsigned int v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  int v339;
  int v340;
  unsigned int v341;
  unsigned int v342;
  int v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  int v362;
  int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  int v372;
  int v373;
  unsigned int v374;
  unsigned int v375;
  unsigned int v376;
  unsigned int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  unsigned int v382;
  unsigned int v383;
  unsigned int v384;
  int v385;
  int v386;
  unsigned int v387;
  unsigned int v388;
  unsigned int v389;
  int v390;
  unsigned int v391;
  int v392;
  int v393;
  int v394;
  unsigned int v395;
  int v396;
  uint64_t (*v397)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v84 = LODWORD(STACK[0x248]) - 2 * LODWORD(STACK[0x24C]);
  v85 = LODWORD(STACK[0x3A0]) + a68;
  v86 = a63 + LODWORD(STACK[0x39C]);
  v87 = a17 + LODWORD(STACK[0x388]);
  LODWORD(STACK[0x3A0]) = LODWORD(STACK[0x21C]) - LODWORD(STACK[0x260]);
  v88 = v85 - LODWORD(STACK[0x214]);
  v89 = v86 - LODWORD(STACK[0x210]);
  v90 = v87 - LODWORD(STACK[0x20C]);
  v91 = LODWORD(STACK[0x2B0]) - LODWORD(STACK[0x2B8]);
  STACK[0x3A8] = a1;
  v92 = LODWORD(STACK[0x22C]) - LODWORD(STACK[0x234]);
  LODWORD(STACK[0x260]) = a66 ^ a67 ^ a64 ^ a65 ^ a62 ^ v89;
  LODWORD(STACK[0x294]) = LODWORD(STACK[0x230]) - LODWORD(STACK[0x264]);
  LODWORD(STACK[0x23C]) = LODWORD(STACK[0x218]) - LODWORD(STACK[0x220]);
  LODWORD(STACK[0x210]) = a73 ^ a72 ^ a70 ^ a71 ^ a69 ^ v88;
  LODWORD(STACK[0x264]) = a31 ^ a35 ^ a33 ^ a34 ^ a32 ^ a30 & 0xBD692AF0;
  LODWORD(STACK[0x24C]) = a18 ^ a22 ^ a20 ^ a21 ^ a19 ^ v90;
  v93 = LODWORD(STACK[0x29C]) ^ v91;
  v94 = 819367034 - LODWORD(STACK[0x270]);
  v95 = LODWORD(STACK[0x254]) - LODWORD(STACK[0x26C]);
  LODWORD(STACK[0x254]) = LODWORD(STACK[0x250]) - LODWORD(STACK[0x25C]);
  LODWORD(STACK[0x274]) = LODWORD(STACK[0x240]) - LODWORD(STACK[0x244]);
  v96 = v80 ^ v76;
  v97 = v93 ^ LODWORD(STACK[0x298]) ^ v95;
  LODWORD(STACK[0x3B8]) = LODWORD(STACK[0x224]) - LODWORD(STACK[0x228]);
  v98 = ((v79 ^ 0xA2CE5AF7) & STACK[0x278]) - LODWORD(STACK[0x38C]) + 781770388;
  v99 = (LODWORD(STACK[0x27C]) | 0x4E360D4A) - LODWORD(STACK[0x384]) + 1491401051;
  v100 = LODWORD(STACK[0x324]) | 0xCF297385;
  LODWORD(STACK[0x2B8]) = LODWORD(STACK[0x300]) ^ a53 ^ a74 ^ a52 ^ a51 ^ a50 ^ a49 ^ STACK[0x280] & 0xBDF93BF0;
  v101 = LODWORD(STACK[0x258]) - 216353600;
  LODWORD(STACK[0x2AC]) = v82 + 24708;
  LODWORD(STACK[0x280]) = a56 ^ a58 ^ a55 ^ a57 ^ a54 ^ v98;
  LODWORD(STACK[0x298]) = a46 ^ a47 ^ a75 ^ a45 ^ a44 ^ a43 ^ a48 & 0xFFFFFFF0;
  LODWORD(STACK[0x20C]) = a42 ^ a41 ^ a39 ^ a40 ^ a38 ^ (a37 + a36 - 1);
  LODWORD(STACK[0x29C]) = a27 ^ a26 ^ a24 ^ a25 ^ a23 ^ (a29 | a28 & 0x95410230);
  LODWORD(STACK[0x25C]) = a16 ^ a15 ^ a14 ^ a13 ^ a76 ^ v99;
  v102 = v94 + v100;
  LODWORD(STACK[0x258]) = v101 + LODWORD(STACK[0x268]);
  v103 = (LODWORD(STACK[0x308]) ^ 0x4D62CBB)
       + ((v96 + 1136137649) ^ 0xAEFE5EFF)
       + ((2 * (v96 + 1136137649)) & 0x5DFCBDFE)
       + 1359061250;
  v104 = ((2 * v103) & 0x1FFDBD90) + (v103 ^ 0x8FFEDEC8);
  v105 = (((v77 + v83) ^ LODWORD(STACK[0x318]) ^ 0x53B700E1)
        - 2
        * (((v77 + v83) ^ LODWORD(STACK[0x318]) ^ 0x53B700E1) & 0x246CBCD7 ^ ((v77 + v83) ^ LODWORD(STACK[0x318])) & 4)
        - 1536377645) ^ 0x143E8D45;
  LODWORD(STACK[0x390]) = 1619781683 * v105 - ((-1055403930 * v105) & 0x8DCB8006) + 1189462019;
  LODWORD(STACK[0x384]) = 1953655875 * v104
                        - 2 * ((1953655875 * v104 + 1967083944) & 0x6D38321D ^ (1953655875 * v104) & 1)
                        + 1651999684;
  LODWORD(STACK[0x284]) = v92;
  v106 = v92 ^ v81 ^ 0xD3CE155C;
  LODWORD(STACK[0x328]) = 675122333 * v106 - ((1350244666 * v106) & 0xCFDEF83E) + 1743748127;
  v107 = ((2 * ((v84 ^ 0xBDF26B8) + (v78 ^ 0xDA6760BB) + 1)) & 0x3EFD769E)
       + (((v84 ^ 0xBDF26B8) + (v78 ^ 0xDA6760BB) + 1) ^ 0x1F7EBB4F);
  LODWORD(STACK[0x38C]) = 1543601105 * v107 - ((402847650 * v107 + 209075970) & 0x10FA39D2) + 1320696938;
  v108 = (~(-1846248022 * v104 + 1331193648) | 0x1CDB5F9B) + 1224359637 * v104 + 423527371;
  v109 = ((-627048448 * v104 - ((893386752 * v104 + 1711276032) & 0x43C00000) + 352259929) ^ 0xA1FF0F59) & 0xFFE00000 | (v108 >> 11);
  v110 = ((1927938048 * v105 - ((-439091200 * v105) & 0x995C0000) + 1286529471) ^ 0x4CAEE1BF) & 0xFFFE0000 | ((-1475921547 * v105 - ((1343124202 * v105) & 0xD89CE970) + 1817081016) >> 15);
  v111 = ((2 * v110) & 0x3AFDFEEC ^ 0x1B028) + (v110 ^ 0x9D7E27EA);
  v112 = (((-803078144 * v106 - ((-1606156288 * v106) & 0xBB000000) - 578693482) ^ 0xDD81D696) & 0xFFFE0000 | ((-1929320431 * v106 - ((436326434 * v106) & 0x267CEE68) + 322860852) >> 15)) ^ 0x267C;
  v113 = v111 + (v109 ^ 0x3DE54C97) + ((2 * v109) & 0x7BD6FDBA ^ 0x146490);
  v114 = ((((805306368 * v107 + 805306368) & 0x80000000) + 402653184 * v107 - 558384745) ^ 0x46B7B997) & 0xF8000000 | ((-372820989 * v107 - ((1401841670 * v107 + 1142785062) & 0x5661DEE4) + 222278021) >> 5);
  v115 = ((2 * v114) & 0xDBEEF5F4 ^ 0xAA204F4) + (v114 ^ 0xE8AEFD81);
  v116 = v112 - ((2 * v112) & 0x122A1548) + 152373924;
  v117 = (v116 ^ 0xE8E939C5 ^ (v113 - ((2 * v113 + 1227555674) & 0xC3F866C2) + 110212366)) - v115 - 302548230;
  v118 = ((-1266548736 * (((2 * v117) & 0xDF7FBDDC) + (v117 ^ 0xEFBFDEEE))
         - ((1761869824 * (((2 * v117) & 0xDF7FBDDC) + (v117 ^ 0xEFBFDEEE)) + 1715994624) & 0x4F980000)
         - 1695424317) ^ 0x27CDE0C3 | ((-602809791 * (((2 * v117) & 0xDF7FBDDC) + (v117 ^ 0xEFBFDEEE))
                                      - ((941864066 * (((2 * v117) & 0xDF7FBDDC) + (v117 ^ 0xEFBFDEEE)) + 222786340) & 0x3449FCBC)
                                      - 2134329360) >> 15)) ^ 0x3449;
  v119 = (-452654704 * v111 - 2 * ((-452654704 * v111 + 105326496) & 0xDC94CD0 ^ (-452654704 * v111) & 0x10) - 200248220) ^ 0x8DC94CC4 | ((-296726375 * v111 - ((480289074 * v111 + 214492404) & 0x3BDB9722) + 1146240523) >> 28) ^ 9;
  v120 = ((2144600064 * (v116 ^ 0x9150AA4) - ((-5767168 * (v116 ^ 0x9150AA4)) & 0xAA280000) + 1427547735) ^ 0x5516A657) & 0xFFFC0000 | ((-1722294283 * (v116 ^ 0x9150AA4) - ((850378730 * (v116 ^ 0x9150AA4)) & 0x9EE156CA) + 1332783973) >> 14);
  v121 = ((2 * v120) & 0xD2FC5FFA ^ 0x5B80) + (v120 ^ 0x697F123F);
  v122 = (((1611947008 * v115 - ((2668544 * v115 + 680284160) & 0x31C7A800) - 852886369) ^ 0x18E3D49F) & 0xFFFFFC00 | ((471336215 * v115 - ((942672430 * v115 - 740678892) & 0xBAE6623E) - 949992791) >> 22)) ^ 0x375;
  v123 = v118 - ((2 * v118) & 0xE177721A) - 256132851;
  v124 = ((v119 - ((2 * v119) & 0x5E3CFEB8) - 1356955812) ^ 0x5FA5C651 ^ v123) - v121;
  v125 = v122 - ((2 * v122) & 0x4364CB5C) - 1582144082;
  v126 = v125 ^ 0x25EFFB3A ^ (v124 - ((2 * v124 + 50094074) & 0x8BB3D28) - 304361839);
  v127 = 1246071337 * v121 - ((-1802824622 * v121 + 125164790) & 0x8E5E0296) + 1256845254;
  v128 = (((-342018048 * (v123 ^ 0xF0BBB90D) - ((389705728 * (v123 ^ 0xF0BBB90D)) & 0x35DC0000) - 1695676803) ^ 0x9AEE067D) & 0xFFFFF800 | ((897414055 * (v123 ^ 0xF0BBB90D) - ((721086286 * (v123 ^ 0xF0BBB90D)) & 0x23414484) + 295739970) >> 21)) ^ 0x8D;
  v129 = v128 - ((2 * v128) & 0x419EECF0);
  v130 = (((-1929379840 * v126 - ((436207616 * v126) & 0x70000000) + 948764364) ^ 0x388CFECC) & 0xFF000000 | ((-1664146803 * v126 - ((966673690 * v126) & 0x8030FF9A) + 1075347405) >> 8)) ^ 0x40187F;
  v131 = v130 - ((2 * v130) & 0xF0A1FF5C);
  v132 = -1975517184 * v121 - ((343932928 * v121 + 1031798784) & 0xD8000000) + 181203362;
  v133 = 1347886061 * (v125 ^ 0xA1B265AE) - ((548288474 * (v125 ^ 0xA1B265AE)) & 0x6E126D78) - 1224132932;
  v134 = 2107637760 * (v125 ^ 0xA1B265AE) - ((2067791872 * (v125 ^ 0xA1B265AE)) & 0x48800000);
  v135 = ((v132 ^ 0x6C0CF1A2) & 0xFFC00000 | (v127 >> 10)) ^ 0x11CBC0;
  v136 = v135 - ((2 * v135) & 0xFCCBDF7C) - 26873922;
  v137 = ((v134 + 609301631) ^ 0x2451347F) & 0xFFE00000 | (v133 >> 11);
  v138 = ((2 * v137) & 0x59D731DC ^ 0x5004C) + (v137 ^ 0x2CFD79C8);
  v129 -= 1597016456;
  v131 -= 128909394;
  v139 = v138 - 753637614 + (v136 ^ v129 ^ 0xA6FA6668 ^ v131);
  v140 = ((-207683584 * (v129 ^ 0xA0CF7678) - ((121503744 * (v129 ^ 0xA0CF7678)) & 0x8E00000) + 74485316) ^ 0x4708E44) & 0xFFFF0000 | ((-1007881313 * (v129 ^ 0xA0CF7678) - ((-2015762626 * (v129 ^ 0xA0CF7678)) & 0xCA5FAB8C) + 1697633734) >> 16);
  v141 = ((2 * v140) & 0x2FAFFB36 ^ 0xCA16) + (v140 ^ 0x17D798B4);
  v142 = (((-1966080000 * (((2 * v139) & 0x5FDFCFFE) + (v139 ^ 0x2FEFE7FF))
          - ((362807296 * (((2 * v139) & 0x5FDFCFFE) + (v139 ^ 0x2FEFE7FF)) + 362807296) & 0xBB200000)
          + 1751597804) ^ 0x5D9742EC) & 0xFFF00000 | ((861735085 * (((2 * v139) & 0x5FDFCFFE) + (v139 ^ 0x2FEFE7FF))
                                                     - ((1723470170 * (((2 * v139) & 0x5FDFCFFE) + (v139 ^ 0x2FEFE7FF))
                                                       + 234520922) & 0x6712F522)
                                                     + 981908286) >> 12)) ^ 0x33897;
  v143 = ((-436207616 * (v131 ^ 0xF850FFAE) - ((201326592 * (v131 ^ 0xF850FFAE)) & 0x30000000) - 1716462030) ^ 0x99B0DE32) & 0xFE000000 | ((225505651 * (v131 ^ 0xF850FFAE) - ((451011302 * (v131 ^ 0xF850FFAE)) & 0x66B6F302) + 861632897) >> 7);
  v144 = ((2 * v143) & 0xB9BEBEFE ^ 0x8C2CE6) + (v143 ^ 0x5CB9E98C);
  v145 = (((v133 >> 11 << 30) - (v138 << 29) - 1280872531) ^ 0x73A76FAD) & 0xE0000000 | ((-2043273905 * v138
                                                                                        - ((208419486 * v138 + 965325084) & 0xF71AC3F4)
                                                                                        + 408042120) >> 3);
  v146 = (v145 ^ 0xB08A76B1) + ((2 * v145) & 0x7FF7B51C ^ 0x1EE3101C) - v141 - v144 - 1262779764;
  v147 = v142 - ((2 * v142) & 0x90F35B96) + 1215933899;
  v148 = v147;
  LODWORD(STACK[0x2A8]) = v147;
  v149 = ((v141 - v144 - ((2 * (v141 - v144) - 1978743864) & 0xFCD914D0) + 1131670604) ^ 0x42DB4D9E)
       + (v147 ^ 0x4879ADCB);
  v150 = v146 + (v147 ^ 0x4879ADCB) - ((2 * (v146 + (v147 ^ 0x4879ADCB))) & 0xAE568A44) - 685030110;
  v151 = v150 ^ 0x91515EB8 ^ (1777831117 * (((2 * v149) & 0xDD7EFFEE) + (v149 ^ 0x6EBF7FF7))
                            - ((-739305062 * (((2 * v149) & 0xDD7EFFEE) + (v149 ^ 0x6EBF7FF7)) - 1598757270) & 0x8CF43734)
                            + 383028943);
  v152 = 1646790615 * v151 + 912514168 - ((1146097582 * v151) & 0x6CC7B8F0);
  v153 = (v150 ^ 0xD72B4522)
       + (v152 ^ 0xC99C2387)
       + 1
       - ((2 * ((v150 ^ 0xD72B4522) + (v152 ^ 0xC99C2387) + 1)) & 0x93F1EA46);
  LODWORD(STACK[0x21C]) = v152 ^ v148;
  LODWORD(STACK[0x324]) = v153 - 906431197;
  v154 = v144
       - 1558138782
       + (v152 ^ 0x3663DC78)
       - 4065
       - ((2 * (v144 - 1558138782 + (v152 ^ 0x3663DC78) - 4065)) & 0xDD083A0C)
       - 293331706;
  LODWORD(STACK[0x2B0]) = v154;
  v155 = ((((~(-138388448 * v151) | 0x4DC5D15F) - 69194224 * v151 - 652404897) | 1) ^ 0xD91D175F) & 0xFFFFFFF0 | ((1874723553 * v151 - ((-545520190 * v151) & 0xBDD36564) - 555109710) >> 28);
  v156 = (((455081984 * (v154 ^ 0xEE841D06) - ((910163968 * (v154 ^ 0xEE841D06)) & 0x8F000000) + 1199738030) ^ 0x47828CAE) & 0xFFE00000 | ((2008582361 * (v154 ^ 0xEE841D06) - ((-277802574 * (v154 ^ 0xEE841D06)) & 0xD66C1B42) - 348779103) >> 11)) ^ 0x1D66C1;
  v157 = (((-1610612736 * (v152 ^ v148 ^ 0x7E1A71B3) + 2020390763) ^ 0x786CB76B) & 0xE0000000 | ((1950561979
                                                                                                * (v152 ^ v148 ^ 0x7E1A71B3)
                                                                                                - ((1753640310
                                                                                                  * (v152 ^ v148 ^ 0x7E1A71B3)) & 0x7CF56EAC)
                                                                                                - 1099253930) >> 3)) ^ 0x17CF56EA;
  v158 = ((-385875968 * ((v153 - 906431197) ^ 0xC9F8F523)
         - ((1375731712 * ((v153 - 906431197) ^ 0xC9F8F523)) & 0x78000000)
         + 1012667494) ^ 0x3C5C1466) & 0xFF000000 | ((-482655767 * ((v153 - 906431197) ^ 0xC9F8F523)
                                                    - ((-965311534 * ((v153 - 906431197) ^ 0xC9F8F523)) & 0xB76C8C98)
                                                    + 1538672204) >> 8);
  v159 = ((2 * v158) & 0xB7AF9F78 ^ 0xA70C08) + (v158 ^ 0x5B8C79FA);
  v160 = v157 - ((2 * v157) & 0x784940DE) - 1138450321;
  v161 = v156 - 307487973 + (~(2 * v156) | 0x24A7C9C9) + 1;
  v162 = v159 - 1540870076 + (((v155 ^ 0xD) - ((2 * v155) & 0x2D9E8424) + 382681618) ^ v160 ^ 0x4747F966 ^ v161);
  v163 = ((2 * v162) & 0x5FF60EF6) + (v162 ^ 0xAFFB077B);
  v164 = 768402019 * v159 - ((1536804038 * v159 + 1085105304) & 0x5B60E4EE) + 235349187;
  v165 = (((1950089120 * v163 - ((-394789056 * v163 + 43883584) & 0xC867B280) - 444422302) ^ 0x6433D942) & 0xFFFFFFE0 | ((-1683890179 * v163 - ((927186938 * v163 + 940895458) & 0x3802C940) - 670311663) >> 27)) ^ 0x13;
  v166 = -857578752 * v159 - ((-1715157504 * v159 - 1385916416) & 0xCC8D2600) + 1022943176;
  v167 = (((2141650944 * (v161 ^ 0xEDAC1B1B) - ((-11665408 * (v161 ^ 0xEDAC1B1B)) & 0xD93C0000) + 1822345566) ^ 0x6C9EC95E) & 0xFFFF0000 | ((-8159321 * (v161 ^ 0xEDAC1B1B) - ((-16318642 * (v161 ^ 0xEDAC1B1B)) & 0xDB47E4B2) - 308022695) >> 16)) ^ 0xEDA3;
  v168 = v167 - ((2 * v167) & 0x6E6D2DD4) - 1221159190;
  v169 = ((-1409286144 * (v160 ^ 0xBC24A06F) - ((1476395008 * (v160 ^ 0xBC24A06F)) & 0xC8000000) - 445830559) ^ 0xE56D2A61) & 0xFC000000 | ((-764635477 * (v160 ^ 0xBC24A06F) - ((-1529270954 * (v160 ^ 0xBC24A06F)) & 0xE2657AF8) + 1899150716) >> 6);
  v170 = ((2 * v169) & 0xE753CFE4 ^ 0x30185E0) + (v169 ^ 0xF26D2D07);
  v171 = v165 - ((2 * v165) & 0xBEFD0FDA) - 545355795;
  v172 = v170 + 206968846 + (v168 ^ 0x68481107 ^ v171);
  v173 = v172 ^ 0x6FE7CFED;
  v174 = (2 * v172) & 0xDFCF9FDA;
  v175 = ((2 * ((v166 ^ 0xE64693C8) & 0xFFFFFF00 | HIBYTE(v164))) & 0xE5FBDEFE ^ 0x5A)
       + (((v166 ^ 0xE64693C8) & 0xFFFFFF00 | HIBYTE(v164)) ^ 0xF2FDEFD2);
  v176 = ((-398589952 * (v171 ^ 0xDF7E87ED) - ((-797179904 * (v171 ^ 0xDF7E87ED)) & 0xA1140000) + 1351291526) ^ 0x508B1286) & 0xFFFE0000 | ((1567355935 * (v171 ^ 0xDF7E87ED) - ((-1160255426 * (v171 ^ 0xDF7E87ED)) & 0x8821FDD0) + 1141964520) >> 15);
  v177 = ((2 * v176) & 0xFF93CFEC ^ 0x10040) + (v176 ^ 0x7FC96FD7);
  v178 = ((689936384 * (v175 + v173 + v174 + 467072632)
         + 613074638
         - ((1379872768 * (v175 + v173 + v174 + 467072632) + 1388920832) & 0x764C4000)) ^ 0xBB2626CE | ((860169203 * (v175 + v173 + v174 + 467072632) - ((1720338406 * (v175 + v173 + v174 + 467072632) - 417703640) & 0x9434A7D0) - 1113096068) >> 21)) ^ 0x250;
  v179 = ((1559232512 * v170 - ((434110464 * v170 + 171966464) & 0x14200000) - 1623528383) ^ 0xA1AEC41) & 0xFFF00000 | ((-1793681969 * v170 - ((707603358 * v170 - 1717357916) & 0x88D0F312) + 289018587) >> 12);
  v180 = ((2 * v179) & 0xDE137CFE ^ 0x100C0E) + (v179 ^ 0xEF05F8F8) - v177;
  v181 = v180 - ((2 * v180 + 562057966) & 0xA61980DA) + 1674373604;
  v182 = ((-921927680 * v175 - ((303628288 * v175 + 781778944) & 0x4BB20000) - 1121593507) ^ 0xA5D9575D) & 0xFFFF8000 | ((2042466841 * v175 - ((1937450034 * v175 + 901012786) & 0x5CB1BBAE) + 1228082288) >> 17);
  v183 = ((2 * v182) & 0x9E57FE2E ^ 0xAE08) + (v182 ^ 0x4F2BA83B);
  v184 = v178 - ((2 * v178) & 0x742ADF60) + 974483376;
  v185 = v184 ^ 0x3A156FB0;
  v186 = -1505114783 * (v184 ^ 0x3A156FB0) - ((1284737730 * (v184 ^ 0x3A156FB0)) & 0x51B546EA) + 685417333;
  v187 = ((2 * ((v184 ^ v181 ^ 0xE919AFDD) - v183 + 1328283415)) & 0xE8FCE5F4)
       + (((v184 ^ v181 ^ 0xE919AFDD) - v183 + 1328283415) ^ 0xF47E72FA);
  LOBYTE(v108) = v108 & 4;
  v188 = ((-464237185 * v177 - 304382978 - ((-928474370 * v177 + 1454497260) & 0x85052D74) + 2482) ^ 0x428296BA) >> v108;
  v189 = ((v188 - ((2 * v188) & 0x5AB469FE) + 760886527) ^ 0x2D5A34FF) >> (v108 ^ 4);
  v190 = (v189 - ((2 * v189) & 0x5FF896DC) - 1342420114) ^ (1647684381 - (v177 << 28));
  v191 = ((-1725491836 * v185 - ((843983624 * v185) & 0xA363F8B8) + 1370618975) ^ 0x51B1FC5F) & 0xFFFFFFFC | (v186 >> 30);
  v192 = (((-1425539072 * v187 - ((1443889152 * v187 - 731906048) & 0x8F100000) + 834272938) ^ 0xC789FEAA) & 0xFFF80000 | ((856331617 * v187 - ((1712663234 * v187 - 288499060) & 0x9530A860) - 1040236170) >> 13)) ^ 0x254C2;
  v193 = (((-1335340928 * v183 - ((550543616 * v183 + 836929792) & 0x3A512800) - 702949175) ^ 0x9D289449) & 0xFFFFFF80 | ((-1453272927 * v183 - ((314679618 * v183 + 1021560082) & 0x21EAD3E8) + 795298941) >> 25)) ^ 0x48;
  v194 = v191 - ((2 * v191) & 0xB4C44122) + 1516380305;
  v195 = (v194 ^ v190 ^ 0xF7ABC0E2) + 748994961;
  v196 = (v194 ^ 0xA59DDF6E) + ((v193 - ((2 * v193) & 0xC6CD6CCC) + 1667675750) ^ 0xCEAF5615 ^ v190) + 1;
  v197 = (v196 ^ 0x3FFBFAED) - 1073478854 + ((2 * v196) & 0x7FF7F5DA);
  v198 = v192 - ((2 * v192) & 0xBDB413DA) + 1591347693;
  v199 = v197 + (v198 ^ 0x5EDA09ED) + 473 - ((2 * (v197 + (v198 ^ 0x5EDA09ED) + 473)) & 0xF5454D94) - 90003766;
  v200 = (v195 ^ 0xBB1DFDF7) + ((2 * v195) & 0x763BFBEE) + 1155662346 + (v198 ^ 0xA125F612);
  v201 = v199 ^ 0x73E53600 ^ (((2 * v200) & 0x57FBE5F6)
                            + (v200 ^ 0x2BFDF2FB)
                            - ((2 * (((2 * v200) & 0x57FBE5F6) + (v200 ^ 0x2BFDF2FB)) + 126544820) & 0x128F2194)
                            - 49477980);
  v202 = v201 - ((2 * v201 - 1504752420) & 0xE069D4E6) - 1017343775;
  v203 = ((2 * ((v194 ^ 0x5A622091) + (v202 ^ 0xFCB158C) + 1)) & 0x1DFFEBD8)
       + (((v194 ^ 0x5A622091) + (v202 ^ 0xFCB158C) + 1) ^ 0x8EFFF5EC);
  v204 = -939524096 * (v202 ^ 0xF034EA73) - (((v202 ^ 0xF034EA73) << 28) & 0x55555555);
  v205 = -1473246023 * (v202 ^ 0xF034EA73) - ((1348475250 * (v202 ^ 0xF034EA73)) & 0x5ED0CD64) + 795371186;
  v206 = v202 ^ v199;
  v207 = v198 ^ 0xAEEEE39E ^ v202;
  v208 = 1496078789 * v207 - ((-1302809718 * v207) & 0xA64F74B8) - 752371108;
  v209 = ((2 * ((v204 + 736939349) ^ 0x2BECCD55 | (v205 >> 5))) & 0xCFB0FEBA ^ 0x2B0862A)
       + (((v204 + 736939349) ^ 0x2BECCD55 | (v205 >> 5)) ^ 0x66A33C68);
  v210 = 1506082816 * v207 - ((-1282801664 * v207) & 0xCB5E0000);
  v211 = ((50331648 * v203 - ((100663296 * v203 + 939524096) & 0x26000000) + 1328045576) ^ 0x13285E08) & 0xFF000000 | ((721831683 * v203 - ((1443663366 * v203 - 595110792) & 0x94DB5576) - 1196337929) >> 8);
  v212 = ((2 * v211) & 0x41FFAD3A ^ 0x1948910) + (v211 ^ 0x2035BB37);
  v213 = (((v210 + 1705991369) ^ 0x65AF5CC9) & 0xFFFF0000 | HIWORD(v208)) ^ 0xD327;
  HIDWORD(v214) = v206 ^ 1;
  LODWORD(v214) = (-1592173543 * (v206 ^ 0xA964CB9) - ((1110620210 * (v206 ^ 0xA964CB9)) & 0x971849C0) - 880007968) ^ 0xCB8C24E0;
  v215 = ((2 * (v214 >> 3)) & 0xF3BFFABE) + ((v214 >> 3) ^ 0xF9DFFD5F);
  v216 = v213 - ((2 * v213) & 0x6DEFD0A4) + 922216530;
  v217 = v215
       + 102761121
       + (v216 ^ 0x72E6DAEC ^ (v209 + v212 - ((2 * (v209 + v212) - 296791028) & 0x8822657C) - 1153901372));
  v218 = ((-667166472 * (((2 * v217) & 0xDFD33B2E) + (v217 ^ 0x6FE99D97))
         - ((813150704 * (((2 * v217) & 0xDFD33B2E) + (v217 ^ 0x6FE99D97)) + 2111167344) & 0x79892B70)
         - 72383629) ^ 0x3CC495BB) & 0xFFFFFFF8 | ((-1157137633 * (((2 * v217) & 0xDFD33B2E) + (v217 ^ 0x6FE99D97))
                                                  - ((1980692030 * (((2 * v217) & 0xDFD33B2E) + (v217 ^ 0x6FE99D97))
                                                    + 800766830) & 0x66B623A6)
                                                  + 1261989770) >> 29);
  v219 = ((2 * v218) & 0xFDF9FBFE ^ 0xA) + (v218 ^ 0x7EFCFDFA);
  v220 = ((-46616520 * v212 - ((-93233040 * v212 - 1840628912) & 0xDFD1FEA0)) & 0xFFFFFFF8 | ((1604785671 * v212
                                                                                             - ((1062087694 * v212
                                                                                               + 843663210) & 0x7E783548u)
                                                                                             + 408993369) >> 29))
       - 1190257416;
  v221 = ((2 * v220) & 0xDF77E7FE ^ 0xDF51E6A2) + (v220 ^ 0x80530CAE) + v219;
  v222 = v221 - ((2 * v221 + 579738628) & 0xB20EE5F2) - 363953925;
  v223 = (((-783935488 * (v216 ^ 0x36F7E852) - ((-1567870976 * (v216 ^ 0x36F7E852)) & 0xD1E8C000) + 1760846476) ^ 0x68F4628C) & 0xFFFFF800 | ((1297754307 * (v216 ^ 0x36F7E852) - ((-1699458682 * (v216 ^ 0x36F7E852)) & 0xC34D4628) + 1638310676) >> 21)) ^ 0x30D;
  v224 = v223 - ((2 * v223) & 0x5E145966);
  v225 = (-201326592 * v215 - ((-402653184 * v215 - 402653184) & 0xD0000000) + 1545220115) ^ 0xE81A3013 | ((-1320782403 * v215 - ((1653402490 * v215 + 1605831610) & 0xD0ED2DBC) + 408034491) >> 6);
  v226 = ((2 * v225) & 0xFF6F6EFE ^ 0x74324B6) + (v225 ^ 0x7C166D24);
  v227 = 251954755 * v226 - ((503909510 * v226 + 868548486) & 0x72184876) - 756112386;
  v224 -= 1358287693;
  v228 = ((2 * (v226 - 2142746495 + (v224 ^ 0x760D5E4A ^ v222))) & 0x7FD19F6E)
       + ((v226 - 2142746495 + (v224 ^ 0x760D5E4A ^ v222)) ^ 0xBFE8CFB7);
  v229 = ((-461051284 * v219 - ((-922102568 * v219 + 859538648) & 0xF7DBD700)) & 0xFFFFFFFC | ((958479003 * v219
                                                                                              - ((843216182 * v219
                                                                                                + 214884662) & 0x23FC18BA)
                                                                                              + 1483046136) >> 30))
       - 1786008084;
  v230 = ((2 * v229) & 0x98EF65DA ^ 0x90CB4500) + (v229 ^ 0x379A596D);
  v231 = ((-336063488 * (v224 ^ 0xAF0A2CB3) - ((-672126976 * (v224 ^ 0xAF0A2CB3)) & 0xFDB6B000) + 2128304777) ^ 0x7EDB5A89) & 0xFFFFFC00 | ((1308294661 * (v224 ^ 0xAF0A2CB3) - ((469105674 * (v224 ^ 0xAF0A2CB3)) & 0x23690D96) - 1850439989) >> 22);
  v232 = ((912392192 * v228 - ((214171648 * v228 + 65273856) & 0x101C0000) + 1778433763) ^ 0x880EBEE3) & 0xFFFE0000 | ((-1131078863 * v228 - ((2032809570 * v228 - 636886542) & 0xFD3A187A) + 1805778230) >> 15);
  v233 = ((2 * v232) & 0xF9C32C76 ^ 0x32874) + (v232 ^ 0xFCE06B01);
  v234 = (((303631360 * v226 - ((607262720 * v226 + 335419392) & 0x61EDF800) + 989202439) ^ 0xB0F6FC07) & 0xFFFFFC00 | (v227 >> 22)) ^ 0x2E4;
  v235 = (v231 ^ 0x3D9FEDB8) + ((2 * v231) & 0x7B3FDFFC ^ 0x48C) + v230 - v233 - 291186609;
  v236 = v234 - 2 * (v234 & 0x5433EABD ^ (v227 >> 22) & 0x11) + 1412688556;
  v237 = v236 ^ 0x59A4351D ^ (v235 - ((2 * v235 + 139081218) & 0x1B2FBF62) - 1849886030);
  v238 = (((-568705024 * v230 - ((473202688 * v230 + 40206336) & 0x172E0000) - 322319955) ^ 0x8B9709AD) & 0xFFFFC000 | ((279935081 * v230 - ((559870162 * v230 + 235604374) & 0x3AAACFAE) - 2074415966) >> 18)) ^ 0x755;
  v239 = v236 ^ 0x5433EAAC;
  v240 = (((-314531136 * v237 - ((-629062272 * v237) & 0x9E13E900) - 821431120) ^ 0xCF09F4B0) & 0xFFFFFFC0 | ((2142569099 * v237 - ((2137654550 * v237) & 0x7C257C3Eu) - 1106067937) >> 26)) ^ 0x2F;
  v241 = v240 - ((2 * v240) & 0xF2AA852C) - 111852906;
  v242 = (((-449404928 * v233 - ((174931968 * v233 + 357711872) & 0x38DEC000) + 655917648) ^ 0x9C6F6250) & 0xFFFFE000 | ((1044851125 * v233 - ((2089702250 * v233 + 1042852498) & 0x677259F2) - 758283710) >> 19)) ^ 0x1677;
  v243 = v238 - ((2 * v238) & 0x643499C4) + 840584418;
  v244 = v242 - 2075602724 + (~(2 * v242) | 0xF76E5E47) + 1;
  v245 = (((v244 ^ 0x8448D0DC) + (v243 ^ 0x321A4CE2)) ^ 0x7FF6FB41)
       + ((2 * ((v244 ^ 0x8448D0DC) + (v243 ^ 0x321A4CE2))) & 0xFFEDF682)
       - 1668380231
       + (v241 ^ 0x6AABD69);
  v246 = (v244 ^ 0x8448D0DC)
       + (((((1281262274 * v239 - ((415040900 * v239) & 0x4CBB388C) - 1503814585) ^ 0xA65D9C47) & 0xFFFFFFFE | ((((1281262274 * v239) & 0x58244DCAu) + 1506852511 * v239 + 1408096538) >> 31))
         - ((2 * ((1281262274 * v239 - ((415040900 * v239) & 0x4CBB388C) - 1503814585) ^ 0xA65D9C47)) & 0x22888F2C)
         + 289687446) ^ 0x235E0B74 ^ v243);
  v247 = v241 ^ (v246 - ((2 * v246) & 0x87261E34) - 1013772518);
  LODWORD(STACK[0x2A0]) = v241;
  v248 = v247 ^ 0x1C738B38 ^ (1017166547 * (((2 * v245) & 0xFFBDEFCE) + (v245 ^ 0xFFDEF7E7))
                            - ((2034333094 * (((2 * v245) & 0xFFBDEFCE) + (v245 ^ 0xFFDEF7E7)) + 225946934) & 0x4D6B8D68)
                            + 762420559);
  v249 = -1662135937 * v248 - ((970695422 * v248) & 0xFC5220BA) - 30863267;
  v250 = v249 ^ v244;
  v251 = v249 ^ v244 ^ 0x7A61C081;
  v252 = (((v251 >> (~(_BYTE)v152 & 0x18)) - ((2 * (v251 >> (~(_BYTE)v152 & 0x18))) & 0xE04BD6DC) - 265950354) ^ 0xF025EB6E) >> (~(_BYTE)v152 & 0x18 ^ 0x18);
  LODWORD(STACK[0x288]) = v252 - ((2 * v252) & 0xF43AF06) + 128046979;
  v253 = (v249 ^ 0xFE29105D)
       + (v247 ^ 0x3AC64D8C)
       - ((2 * ((v249 ^ 0xFE29105D) + (v247 ^ 0x3AC64D8C))) & 0x5BD02482)
       - 1377299903;
  LODWORD(STACK[0x388]) = v253;
  v254 = v253 ^ 0xADE81241;
  v255 = 1556898045 * (v253 ^ 0xADE81241) - ((-1181171206 * (v253 ^ 0xADE81241)) & 0xFF912F74) + 2143852474;
  v256 = v249 ^ (v240 - ((2 * v240) & 0xF2AA852C) - 111852906);
  LODWORD(STACK[0x39C]) = v256;
  v257 = ((157515400 * v248 - ((315030800 * v248) & 0x3C66FC90) + 506691145) ^ 0x1E337E49) & 0xFFFFFFF8 | ((19689425 * v248 - ((39378850 * v248) & 0x9F4D170E) + 1336314759) >> 29);
  v258 = (((-694869504 * v251 - ((757744640 * v251) & 0x24668800) + 305349689) ^ 0x12334439) & 0xFFFFFE00 | ((1508592273 * v251 - ((869700898 * v251) & 0x3F26A950) - 1617734488) >> 23)) ^ 0x13F;
  v259 = ((-1931472896 * (v256 ^ 0x77C52CB) - ((432021504 * (v256 ^ 0x77C52CB)) & 0x867C2000) + 1128141413) ^ 0x433E1265) & 0xFFFFF000 | ((514379265 * (v256 ^ 0x77C52CB) - ((223452162 * (v256 ^ 0x77C52CB)) & 0xC5D0DE6) - 2043771149) >> 20);
  v260 = ((-1944084480 * v254 - ((406798336 * v254) & 0x42D80000) + 560729106) ^ 0x216C0C12) & 0xFFFFE000 | (v255 >> 19);
  v261 = ((2 * v260) & 0xFDEFFF8C ^ 0x1F80) + (v260 ^ 0xFEF7F03F);
  v262 = v258 - ((2 * v258) & 0xB54B2A96) - 626682549;
  v263 = (v259 ^ 0x862) - ((2 * v259) & 0x699B6238) + 885895452;
  v264 = (((v257 ^ 2) - ((2 * v257) & 0xEEA23438) + 2001803804) ^ v263 ^ v262 ^ 0x99393E4B) - 17305537 - v261 + 3975;
  v265 = ((2 * v264) & 0x7B7BEFDA) + (v264 ^ 0x3DBDF7ED);
  v266 = 2104907901 * v265 - ((988590330 * v265 + 428667534) & 0x385F548C) - 1460264051;
  v267 = ((-419692544 * (v262 ^ 0xDAA5954B) - ((234356736 * (v262 ^ 0xDAA5954B)) & 0x35180000) - 1701887132) ^ 0x9A8F4364 | ((1541618111 * (v262 ^ 0xDAA5954B) - ((398881662 * (v262 ^ 0xDAA5954B)) & 0x1C43327E) - 1910400705) >> 14)) ^ 0x23886;
  v268 = v267 - ((2 * v267) & 0xB23B3598) + 1495112396;
  v269 = (((-1776336896 * v265 - ((742293504 * v265 + 1017348096) & 0xBC780000) - 57808547) ^ 0x5E3C295D) & 0xFFFFC000 | (v266 >> 18)) ^ 0x70B;
  v270 = v269 - 2 * (v269 & 0x64F5F0FF ^ (v266 >> 18) & 4);
  v271 = ((1944256100 * (v263 ^ 0x34CDB11C) - ((-406455096 * (v263 ^ 0x34CDB11C)) & 0xB2B3B238) + 1499060509) ^ 0x5959D91D) & 0xFFFFFFFC | ((-1661419623 * (v263 ^ 0x34CDB11C) - ((972128050 * (v263 ^ 0x34CDB11C)) & 0x6917940Cu) - 1265907194) >> 30);
  v272 = (v271 ^ 2) - 2 * ((v271 ^ 2) & 0x56B317DF ^ v271 & 0x19);
  v273 = ((1360913920 * v261 - ((-1573139456 * v261 + 562837504) & 0xF978D000) - 1920825994) ^ 0xFCBC6976) & 0xFFFFFE00 | ((-962031885 * v261 - ((223419878 * v261 + 428918300) & 0x2369DC90) - 25341610) >> 23);
  v274 = ((2 * v273) & 0xF77DFFFA ^ 0x242) + (v273 ^ 0xFBBEFEDE);
  v275 = ((2 * (v274 + 71368707 + ((v272 - 692906042) ^ v268 ^ 0xEB5B7DF1 ^ (v270 + 1693839611)))) & 0x7DBFBEDE)
       + ((v274 + 71368707 + ((v272 - 692906042) ^ v268 ^ 0xEB5B7DF1 ^ (v270 + 1693839611))) ^ 0xBEDFDF6F);
  v276 = (v270 + 1693839611) ^ 0x64F5F0FB;
  v277 = (~(-106135040 * v276) | 0x453C2DFF) + 2094416128 * v276;
  v278 = -1468213695 * v276 - ((1358539906 * v276) & 0xEE741572) - 147191111;
  v279 = -2205725 * v274 - ((2143072198 * v274 + 947654482) & 0x6B1C5448) + 298594765;
  v280 = 1610612736 * v274 - 1475832829;
  v281 = (HIBYTE(v278) ^ 0xF7 | ((v277 + 1566697775) | 1) ^ 0x5D61E92F)
       - 2 * ((HIBYTE(v278) ^ 0xF7 | ((v277 + 1566697775) | 1) ^ 0x5D61E92F) & 0x3C0673CC ^ (HIBYTE(v278) ^ 0xF7) & 4);
  v282 = ((-1936861824 * v275 - ((421243648 * v275 + 235657984) & 0x2B875000) - 1664510506) ^ 0x15C3A856) & 0xFFFFFF80 | ((991501227 * v275 - ((1983002454 * v275 - 98822218) & 0xEE48EC10) + 1949467107) >> 25);
  v283 = ((2 * v282) & 0x237FFB7C ^ 0x74) + (v282 ^ 0x11BFFDC5);
  v284 = (((189267968 * ((v272 - 692906042) ^ 0xD6B317C6)
          - ((378535936 * ((v272 - 692906042) ^ 0xD6B317C6)) & 0xE3700000)
          - 239079938) ^ 0xF1BFEDFE) & 0xFFF80000 | ((1284383081 * ((v272 - 692906042) ^ 0xD6B317C6)
                                                    - ((421282514 * ((v272 - 692906042) ^ 0xD6B317C6)) & 0x37FB41B4)
                                                    - 1677877030) >> 13)) ^ 0x4DFED;
  v285 = ((v280 ^ 0x88089403) & 0xE0000000 | (v279 >> 3)) ^ 0x6B1C544;
  v286 = v285 - ((2 * v285) & 0xA8F194EC) - 730281354;
  v287 = v283 - 297795939 + ((v284 - ((2 * v284) & 0x12E54746) + 158507939) ^ 0xB574D06B ^ (v281 - 1140427832)) + 933;
  v288 = v286 ^ 0x16C1F1D1 ^ (v287 - ((2 * v287) & 0x8572774E) - 1028047961);
  v289 = ((574393664 * v283 - ((1148787328 * v283 + 963499264) & 0xD6C93200) + 136020865) ^ 0xEB649901) & 0xFFFFFFC0 | ((612954677 * v283 - ((1225909354 * v283 - 1595558060) & 0xB4A64144) + 717618252) >> 26);
  v290 = (((-1766899712 * ((v281 - 1140427832) ^ 0xBC0673C8)
          - ((761167872 * ((v281 - 1140427832) ^ 0xBC0673C8)) & 0x34428000)
          + 438392699) ^ 0x1A21577B) & 0xFFFFC000 | ((1766742717 * ((v281 - 1140427832) ^ 0xBC0673C8)
                                                    - ((-761481862 * ((v281 - 1140427832) ^ 0xBC0673C8)) & 0xC0A05ECC)
                                                    - 531615898) >> 18)) ^ 0x3814;
  v291 = (((-790575376 * v288 - ((-1581150752 * v288) & 0xBA23E2E0)) & 0xFFFFFFF0 | ((1829637231 * v288
                                                                                    - ((-635692834 * v288) & 0xA9363BF2)
                                                                                    + 1419451897) >> 28))
        - 586026640) ^ 0xDD11F175;
  v292 = v291 + 347232888 + (~(2 * v291) | 0xD69B4B11);
  v293 = (((((~(11141120 * (v286 ^ 0xD478CA76)) | 0xF053FFFF) - 933953536 * (v286 ^ 0xD478CA76) + 131493019) | 1) ^ 0x7D66C9B) & 0xFFFF0000 | ((597674069 * (v286 ^ 0xD478CA76) - ((1195348138 * (v286 ^ 0xD478CA76)) & 0x7BD52C5A) - 1108699603) >> 16)) ^ 0xBDEA;
  v294 = (v289 ^ 0x36) - ((2 * v289) & 0xC4452E02) - 501049599;
  v295 = v290 - ((2 * v290) & 0x7C99528A) - 1102272187;
  v296 = ((2 * ((v294 ^ 0xE2229701) + (v295 ^ 0xBE4CA945))) & 0xFFF5FC96)
       + (((v294 ^ 0xE2229701) + (v295 ^ 0xBE4CA945)) ^ 0xFFFAFE4B);
  v297 = v292 ^ 0xC8ADC16C ^ (v296 - ((2 * v296 + 626290314) & 0xB83F3636) + 1858720352);
  v298 = ((v293 - ((2 * v293) & 0xF20AE5EE) + 2030400247) ^ v294 ^ 0x256B4CB3 ^ v295) + (v292 ^ 0xEB4DA588) + 1;
  v299 = v298 - ((2 * v298) & 0xC17C9B88) + 1623084484;
  v300 = (v299 ^ 0x60BE4DC4) + ((1077058566 * v297) & 0xFFFB7AFA) + ((538529283 * v297) ^ 0xFFFDBD7D) + 148099;
  v301 = ((2 * v300) & 0xFFFFD49E)
       + (v300 ^ 0x7FFFEA4F)
       - ((2 * (((2 * v300) & 0xFFFFD49E) + (v300 ^ 0x7FFFEA4F)) + 255350150) & 0x5C7A813C)
       - 1244042399;
  v302 = (v294 ^ 0xE2229701)
       + (v301 ^ 0x51C2BF61)
       + 1
       - ((2 * ((v294 ^ 0xE2229701) + (v301 ^ 0x51C2BF61) + 1)) & 0xE805C13C)
       + 1946345630;
  v303 = v97 ^ v102;
  v304 = v301 ^ v292;
  v305 = 1737536771 * (v301 ^ v299 ^ 0xCE830D5A) - ((1327589894 * (v301 ^ v299 ^ 0xCE830D5A)) & 0x51BCD054) + 685664298;
  v306 = (567791308 * (v301 ^ 0xAE3D409E) - ((1135582616 * (v301 ^ 0xAE3D409E)) & 0x79D2BCC0) - 1125556638) ^ 0xBCE95E62;
  LODWORD(STACK[0x22C]) = v301 ^ v299;
  v307 = ((-2089025536 * (v302 ^ 0x7402E09E) - ((116916224 * (v302 ^ 0x7402E09E)) & 0x86280000) - 1021955104) ^ 0xC31633E0) & 0xFFFC0000 | ((-1949490977 * (v302 ^ 0x7402E09E) - ((395985342 * (v302 ^ 0x7402E09E)) & 0xC0E27A7E) - 529449665) >> 14);
  v308 = ((2 * v307) & 0xAF7EFDF2 ^ 0x60180) + (v307 ^ 0xD7BCFF3D);
  v309 = ((865997824 * (v301 ^ v292 ^ 0xBA8F1AE9) - ((1731995648 * (v301 ^ v292 ^ 0xBA8F1AE9)) & 0xC7C35000) - 471750392) ^ 0xE3E1A908) & 0xFFFFFC00 | ((-1924339835 * (v301 ^ v292 ^ 0xBA8F1AE9) - ((446287626 * (v301 ^ v292 ^ 0xBA8F1AE9)) & 0x946D8FAA) + 1245104085) >> 22);
  v310 = ((2 * v309) & 0xDFD3FE7E ^ 0x250) + (v309 ^ 0x6FE9FE17);
  v311 = (((3 * (((v301 ^ v299) << 30) ^ 0x40000000)) | 0xAE557E7) ^ 0x4AE557E7) & 0xC0000000 | (v305 >> 2);
  v312 = ((2 * v311) & 0xF7DFBAAE ^ 0x144F3004) + (v311 ^ 0x71D8475D);
  v313 = 345419595 * v310 - ((690839190 * v310 - 1944563946) & 0x9DD35684) + 351654605;
  v314 = 738197504 * v310 + 771136844;
  v315 = ((2 * v306) & 0xD5B37EF8)
       + ((v306 & 0xFFFFFFFC | ((((283895654 * (v301 ^ 0xAE3D409E)) & 0xA144F1C6)
                               - 141947827 * (v301 ^ 0xAE3D409E)
                               + 794658588) >> 30)) ^ 0x6AD9BF7C)
       - v310
       + v312
       + 452843657
       + v308;
  v316 = 643897611 * v315 - ((1287795222 * v315 + 33072156) & 0x9850F36E) + 1294257093;
  v317 = -1867513856 * v315 - ((559939584 * v315 + 1103101952) & 0x41400000) - 1048345961;
  v318 = ((2 * (v314 & 0xFC000000 | (v313 >> 6))) & 0xBFD1E164 ^ 0x2514140)
       + ((v314 & 0xFC000000 | (v313 >> 6)) ^ 0x5ED3561F);
  v319 = ((2 * ((v317 ^ 0xA0A38297) & 0xFFF00000 | (v316 >> 12))) & 0x77FFDBDA ^ 0x9810A)
       + (((v317 ^ 0xA0A38297) & 0xFFF00000 | (v316 >> 12)) ^ 0x3BFB2F6A);
  v320 = ((-1194380048 * v308 - ((1906207200 * v308 + 1722729760) & 0x93F58FE0) - 44946805) ^ 0xC9FAC7FB) & 0xFFFFFFF0 | ((999093071 * v308 - ((1998186142 * v308 + 644541522) & 0x6CBFCA3C) + 160783175) >> 28);
  HIDWORD(v214) = v305 >> 2;
  LODWORD(v214) = (-566343145 * v312 - ((-1132686290 * v312 - 187961762) & 0xF6EA7252) + 1977299032) ^ 0xFB753928;
  v321 = v320 ^ 0xCDE7DFF4;
  v322 = (2 * v320) & 0x9BCFBFEE;
  v323 = ((2 * (v214 >> 1)) & 0xB3EFEF3E) + ((v214 >> 1) ^ 0x59F7F79F);
  v324 = v323 + v318 + v321 + (v322 ^ 6) + 1643525677 + v319;
  v325 = ((1140850688 * v319 - (((v319 << 27) + 402653184) & 0x28000000) - 1554598917) ^ 0x9756B3FB) & 0xFC000000 | ((357980817 * v319 - ((715961634 * v319 + 1468913030) & 0x44C16F32) - 836263332) >> 6);
  v326 = ((2 * v325) & 0xFDD8659A ^ 0x1100598) + (v325 ^ 0x7E65B013);
  v327 = ((461373440 * v324 - ((922746880 * v324 - 234881024) & 0x8C000000) + 1065307628) ^ 0xC67F4DEC) & 0xFF800000 | ((81111607 * v324 - ((162223214 * v324 - 890223132) & 0xA8B92B0A) + 970242167) >> 9);
  v328 = ((2 * v327) & 0x6FF3BBF4 ^ 0x501894) + (v327 ^ 0x37D3F3B0);
  v329 = ((1645661696 * v318 - ((-1003643904 * v318 + 1980336128) & 0x80694000) - 80124507) ^ 0x4034A1A5) & 0xFFFFFE00 | ((431033191 * v318 - ((862066382 * v318 + 867894468) & 0x4D395188) + 1081748262) >> 23);
  v330 = ((48136192 * v323 - ((96272384 * v323 + 345833472) & 0x9A4E0000) - 680146563) ^ 0xCD27497D) & 0xFFFF8000 | ((1350567357 * v323 - ((-1593832582 * v323 + 2033199418) & 0xFFBD8756) + 1014421576) >> 17);
  v331 = ((2 * v330) & 0x3EF7FF7E ^ 0xFF5E) + (v330 ^ 0x9F7B8050);
  v332 = (v329 ^ 0xC7CF9EF3) + ((2 * v329) & 0x8F9F3F7C ^ 0x218) - v331 - v326 + v328;
  v333 = (((1862447144 * v326 - ((-570073008 * v326 - 14532624) & 0xA48A0C70) + 1372988978) ^ 0xD245063A) & 0xFFFFFFF8 | ((1306547717 * v326 - ((-1681871862 * v326 + 535054334) & 0xEED67208) - 2023924477) >> 29)) ^ 3;
  v334 = v333 - ((2 * v333) & 0x401A32BA);
  v335 = (((-953255936 * v328 - ((-1906511872 * v328 + 1309515776) & 0xBB730000) - 2067769999) ^ 0xDDB98571) & 0xFFFFF800 | ((-596056625 * v328 - ((955370398 * v328 + 678019508) & 0x7A0D0C86u) + 289105693) >> 21)) ^ 0x5E8;
  v336 = (((-1606188224 * v331 - ((1082590848 * v331 - 1136089472) & 0x9315E500) + 665798099) ^ 0xC98AF293) & 0xFFFFFFC0 | ((42012173 * v331 - ((84024346 * v331 - 2098126182) & 0x905C016A) + 161911298) >> 26)) ^ 0x12;
  v337 = (((1849029632 * (v332 - 1667689012) - ((1550575616 * (v332 - 1667689012) + 1886863360) & 0x66A40800) - 343038062) ^ 0x33520792) & 0xFFFFFC00 | ((-409236099 * (v332 + 2092737740) - ((-818472198 * (v332 + 2092737740) - 165906480) & 0xCCCA9502) + 1634961001) >> 22)) ^ 0x399;
  v334 += 537729373;
  v338 = v335 - ((2 * v335) & 0xDD4BC1BE) - 291118881;
  v339 = v337 - ((2 * v337) & 0x7F0A4BF6) - 1081793029;
  v340 = v334 ^ (v336 - ((2 * v336) & 0x6811431E) - 1274502769) ^ v338 ^ v339;
  v339 ^= 0xBF8525FB;
  v341 = (((v334 ^ 0x200D195D) + (v338 ^ 0x115A1F20) + 1) ^ 0xDBFDBFEC)
       + v339
       + ((2 * ((v334 ^ 0x200D195D) + (v338 ^ 0x115A1F20) + 1)) & 0xB7FB7FD8)
       + 604127252;
  v342 = v340 ^ 0x2A41AD0E ^ (((2 * v341) & 0xE7BDEF36)
                            + (v341 ^ 0xF3DEF79B)
                            - 2
                            * ((((2 * v341) & 0xE7BDEF36) + (v341 ^ 0xF3DEF79B) + 1661986016) & 0x4B483E57 ^ (((2 * v341) & 0xE7BDEF36) + (v341 ^ 0xF3DEF79B)) & 4)
                            - 1369955533);
  v343 = v342 - ((2 * v342 + 62404670) & 0xCE784C6) + 1213193858;
  v344 = ((2 * ((v338 ^ 0xEEA5E0DF) + (v343 ^ 0xF98C3D9C) + 1)) & 0xD6FDFDE2)
       + (((v338 ^ 0xEEA5E0DF) + (v343 ^ 0xF98C3D9C) + 1) ^ 0xEB7EFEF1);
  v345 = (~(896943866 * v344 + 607068838) | 0xCB7D87D1) + 985342845 * v344 + 1817759083;
  v346 = v343 ^ v340;
  v343 ^= 0x673C263u;
  v347 = ((2 * (v343 + v339)) & 0xEBCEFBB6) + ((v343 + v339) ^ 0x75E77DDB);
  v348 = ((-1362567360 * v344 - ((1569832576 * v344 + 197699968) & 0x405BE180) - 1508751952) ^ 0x202DF0F0) & 0xFFFFFFC0 | (v345 >> 26);
  v349 = ((2 * v348) & 0xB7DBBC9A ^ 8) + (v348 ^ 0x5BEDDE6B);
  v350 = (838860800 * v343 - ((1677721600 * v343) & 0x44444444) - 1548392540) ^ 0xA3B567A4 | ((791005081 * v343
                                                                                             - ((508268338 * v343) & 0x268AB44Cu)
                                                                                             - 1824171482) >> 7);
  v351 = ((2 * v350) & 0xFFC43ADA ^ 0x2441048) + (v350 ^ 0xFEC497D9);
  v352 = (((1594032128 * v347 - ((-1106903040 * v347 - 2099380224) & 0x80A40000) + 29471854) ^ 0xC052B46E) & 0xFFFF0000 | ((-2113511677 * v347 - ((67943942 * v347 + 451314398) & 0x6D902590) + 1144738871) >> 16)) ^ 0xB6C8;
  v353 = v352 - ((2 * v352) & 0x10EDC7E2);
  v354 = (((v346 << 30) + 1778333802) ^ 0xA9FF386A) & 0xC0000000 | ((-573594437 * (v346 ^ 0xC356BF95)
                                                                   - ((1000294774 * (v346 ^ 0xC356BF95)) & 0x363DF46C)
                                                                   - 1692468682) >> 2);
  v355 = ((2 * v354) & 0xBA7E9B5E ^ 0x80E191A) + (v354 ^ 0x7BF8F322);
  v353 += 142009329;
  v356 = (v353 ^ 0x37835D21 ^ (v351 + v349 - ((2 * (v351 + v349) + 1214253196) & 0x7FEB7DA0) - 467287274))
       - v355
       + 1564429743;
  v357 = ((461373440 * (((2 * v356) & 0x5F751BE6) + (v356 ^ 0xAFBA8DF3))
         - ((922746880 * (((2 * v356) & 0x5F751BE6) + (v356 ^ 0xAFBA8DF3)) - 889192448) & 0xA8000000)
         - 1178162556) ^ 0x5446AA84) & 0xFF800000 | ((1835307063 * (((2 * v356) & 0x5F751BE6) + (v356 ^ 0xAFBA8DF3))
                                                    - ((-624353170 * (((2 * v356) & 0x5F751BE6) + (v356 ^ 0xAFBA8DF3))
                                                      - 900882026) & 0xCB610760)
                                                    + 1255625851) >> 9);
  v358 = ((2 * v357) & 0xFFFBDE7E ^ 0xE19002) + (v357 ^ 0x7F8F377E);
  HIDWORD(v214) = (v345 >> 26) ^ 6;
  LODWORD(v214) = (-1192142767 * v349 - ((1910681762 * v349 + 229270342) & 0x439878D0) - 1465815541) ^ 0x21CC3C68;
  v359 = ((1894143832 * (v353 ^ 0x876E3F1) - ((1640804016 * (v353 ^ 0x876E3F1)) & 0x4F99D070) - 1479743431) ^ 0xA7CCE839) & 0xFFFFFFF8 | ((((-1673947690 * (v353 ^ 0x876E3F1)) & 0xED8246F0) - 1310509803 * (v353 ^ 0x876E3F1) + 155114631) >> 29);
  v360 = ((2 * v359) & 0xFEFBBBF2) + (v359 ^ 0x7F7DDDF9);
  v361 = (-402653184 * v355 - ((-805306368 * v355 - 805306368) & 0xAAAAAAAA) + 981569783) ^ 0xD28190F7 | ((-675395395 * v355 - ((-1350790790 * v355 + 1930484634) & 0xBA3B4766) + 379982208) >> 5);
  v362 = ((2 * v361) & 0x4D9F1BFC ^ 0x5911A38) + (v361 ^ 0x242760E3);
  v363 = ((v214 >> 3) ^ 0xBDCD6F9E) - v362 + ((2 * (v214 >> 3)) & 0x7B9ADF3C) + v360 - v358 - 2020380849;
  v364 = ((-2079191909 * v358 - ((136583478 * v358 - 1758043722) & 0xC5A5C0F6) - 1368518314) >> 2)
       - (v358 << 30)
       - 0x40000000;
  v365 = ((2 * v364) & 0xEDDB7BFE ^ 0x2149703C) + (v364 ^ 0xEE5905E1);
  v366 = ((-1336353536 * v363 - ((1622260224 * v363 + 333854208) & 0x6CDC6C00) - 1067363928) ^ 0xB66E36A8) & 0xFFFFFF00 | ((900749533 * v363 - ((1801499066 * v363 + 940828214) & 0x446480CAu) - 29609088) >> 24);
  v367 = ((2 * v366) & 0x4FFBF2DE ^ 0x44) + (v366 ^ 0xA7FDF9CD);
  v368 = ((-2111112448 * v360 - ((72742400 * v360 + 1963309568) & 0xF6A2AA00) - 1244384529) ^ 0xFB5155EF) & 0xFFFFFF00 | ((1367485179 * v360 - ((587486710 * v360 + 796198330) & 0x24B811B0) - 367621195) >> 24);
  v369 = ((1501560832 * v362 - ((1711276032 - 1291845632 * v362) & 0xE3FFFFFF) + 617081505) ^ 0x71C7EAA1 | ((1069349555 * v362 - ((2138699110 * v362 - 950315316) & 0xDD9F1A42) - 763545465) >> 9)) ^ 0x3767C6;
  v370 = ((2 * v368) & 0xAD76CFF4 ^ 0x24) + (v368 ^ 0x56BB67E8) - v365 + v367;
  v371 = 1581363147 * v365 - ((478371734 * v365 + 431229846) & 0x1CE9D2C4) + 1531899693;
  v372 = v369 - ((2 * v369) & 0xB5E26FA) + 95359869;
  v373 = v372 ^ 0x5AF137D;
  v374 = -1225342547 * (v372 ^ 0x5AF137D) - ((1844282202 * (v372 ^ 0x5AF137D)) & 0x4D1FF92C) + 646970518;
  v375 = (v370 - ((2 * v370 - 261572308) & 0xA8248EF2) - 867785713) ^ v372;
  v376 = (2030485292 * v365 - ((-233996712 * v365 + 1724919384) & 0xC4D2FD18) + 366056890) ^ 0xE2697E8E;
  v377 = ((v376 & 0xFFFFFFFC | (v371 >> 30)) ^ 2) - ((2 * v376) & 0x89743600);
  v378 = (~(1360809430 * (v375 ^ 0xD1BD5404)) | 0x720E0817) + 680404715 * (v375 ^ 0xD1BD5404) + 1190722549;
  v379 = 298114400 * (v375 ^ 0xD1BD5404) - ((59357888 * (v375 ^ 0xD1BD5404)) & 0x1C4CE280) + 237400395;
  v380 = (((-1991245824 * v367 - ((312475648 * v367 + 1285554176) & 0xA1800000) - 149409560) ^ 0x50C830E8) & 0xFFF00000 | ((-1053284203 * v367 - ((-2106568406 * v367 - 1780943670) & 0xF0B7201E) - 1018688908) >> 12)) ^ 0x785B9;
  v381 = (((v379 & 0xFFFFFF00 ^ 0x2D087E00)
         + (v379 & 0xFB79DD00 ^ 0xD271813F)
         - ((v379 & 0xFFFFFF00 ^ 0x2D087E00) & 0xFB79DD00)) & 0xFFFFFF00 | (v378 >> 27)) ^ 0xD857D208;
  v382 = (v381 - 2 * (v381 & 0x53EE081A ^ (v378 >> 27) & 2) + 1408108792) ^ 0x53EE08F8 | ((1610612736
                                                                                         * (v375 ^ 0xD1BD5404)
                                                                                         + (v375 << 30)
                                                                                         + 1706595404) >> 24) ^ 0x65;
  v383 = v382 - ((2 * v382) & 0xAC9667EE) - 699714569;
  v384 = (((-1392508928 * v373 - ((1509949440 * v373) & 0x5C000000) - 1368692439) ^ 0xAE6B6929) & 0xFF000000 | (v374 >> 8)) ^ 0x268FFC;
  HIDWORD(v214) = v383 ^ 0xAB;
  LODWORD(v214) = v383 ^ 0x16A84F00;
  v385 = (v214 >> 8) - ((2 * (v214 >> 8)) & 0xBB7EB4E4) + 1572821618;
  v377 -= 994436352;
  v386 = v380 - 736526730 + (~(2 * v380) | 0x57CD0313) + 1;
  v387 = v377 ^ (v384 - ((2 * v384) & 0x87BBDA9C) - 1008865970) ^ v386;
  v386 ^= 0xD4197E76;
  v388 = ((v386 + (v377 ^ 0xC4BA1B00) - ((2 * (v386 + (v377 ^ 0xC4BA1B00))) & 0x6E35E48E) + 924512839) ^ 0x4F4B010C)
       + (v385 ^ 0xFE8046F1)
       + 1;
  v389 = ((2 * v388) & 0x3F8FD7FE)
       + (v388 ^ 0x9FC7EBFF)
       - 2 * ((((2 * v388) & 0x3F8FD7FE) + (v388 ^ 0x9FC7EBFF) + 8384442) & 0x7A901B7 ^ (v388 ^ 0x9FC7EBFF) & 1)
       - 1205276304;
  v390 = v387 ^ v385 ^ v389;
  LODWORD(STACK[0x290]) = v390 ^ 0x7EA008EF;
  v391 = (v390 ^ 0xE1C466B0) + v386 - ((2 * ((v390 ^ 0xE1C466B0) + v386)) & 0xA84DA644) - 735653086;
  v392 = STACK[0x2AC];
  LODWORD(STACK[0x248]) = LODWORD(STACK[0x3B8]) ^ 0xED295034 ^ v250 ^ v152;
  LODWORD(STACK[0x3B8]) = ((v391 ^ v250) >> 8) ^ 0x9F2491B;
  v393 = LODWORD(STACK[0x3A0]) ^ LODWORD(STACK[0x2F8]);
  LODWORD(STACK[0x26C]) = LODWORD(STACK[0x2D0]) ^ LODWORD(STACK[0x2E8]);
  LODWORD(STACK[0x27C]) = LODWORD(STACK[0x2CC]) ^ LODWORD(STACK[0x2F0]);
  v394 = STACK[0x2BC];
  v395 = STACK[0x384];
  LODWORD(STACK[0x228]) = LODWORD(STACK[0x38C]) ^ LODWORD(STACK[0x328]) ^ LODWORD(STACK[0x390]) ^ LODWORD(STACK[0x384]);
  LODWORD(STACK[0x240]) = HIBYTE(v395) ^ 0xF0D6593D;
  LODWORD(STACK[0x234]) = LODWORD(STACK[0x2B0]) ^ LODWORD(STACK[0x2A8]) ^ LODWORD(STACK[0x324]);
  LODWORD(STACK[0x238]) = HIBYTE(v249) ^ 0xF8105B38;
  LODWORD(STACK[0x2CC]) = v250;
  LODWORD(STACK[0x224]) = v250 ^ LODWORD(STACK[0x2A0]) ^ LODWORD(STACK[0x388]);
  LODWORD(STACK[0x220]) = v250 ^ v152 ^ v394 ^ 0x6DF8EF84;
  LODWORD(STACK[0x214]) = v395 ^ LODWORD(STACK[0x2D8]);
  LODWORD(STACK[0x218]) = v304;
  LODWORD(STACK[0x230]) = v304 ^ v299 ^ v302;
  v396 = v395 ^ LODWORD(STACK[0x2E0]);
  LODWORD(STACK[0x268]) = v396;
  LODWORD(STACK[0x278]) = v396 ^ 0xFD2FD2D7;
  LODWORD(STACK[0x2C0]) ^= v303 ^ v395;
  LODWORD(STACK[0x270]) = v389;
  LODWORD(STACK[0x2A8]) = v389 ^ 0x683F6726;
  LODWORD(STACK[0x2D4]) = v391;
  LODWORD(STACK[0x244]) = HIBYTE(v391);
  LODWORD(STACK[0x2A0]) = HIBYTE(v391) ^ 0xAF14BF76;
  v397 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0]
                                                                                                  + 8 * v392)
                                                                                      - 4);
  STACK[0x3A0] = (v392 - 29328) | 0x2100u;
  LODWORD(STACK[0x2BC]) = v393;
  LODWORD(STACK[0x2AC]) = v393 ^ 0x7FAC8DFD;
  LODWORD(STACK[0x250]) = v249;
  LODWORD(STACK[0x2D0]) = (v385 ^ 0x17FB90E)
                        + (v390 ^ 0x1E3B994F)
                        + 1
                        - ((2 * ((v385 ^ 0x17FB90E) + (v390 ^ 0x1E3B994F) + 1)) & 0xA58C4280)
                        - 758767296;
  return v397(3205119204, 1585176100, 1354895598, 2774400854, 3043634348, 270663848);
}

uint64_t sub_10002F464@<X0>(unint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, unsigned int a7@<W7>, int a8@<W8>)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  char v19;
  unint64_t v20;
  int v21;
  int v22;
  char v23;

  v21 = (v9 - (v8 & 0xC152246)) ^ LODWORD(STACK[0x3B8]);
  v22 = v21 & v11 ^ 0x6E;
  v23 = ((v21 & v11 ^ 0x19) - 2 * (((v21 & v11 ^ 0x19) + 24) & 0x36 ^ v21 & 2) + 12) ^ v21;
  LOBYTE(v22) = (v23 ^ v17)
              + ((2 * v23) & 0xDF ^ 0x5A)
              + *(_BYTE *)(*(_QWORD *)(v15 + 8 * v10)
                         + (((((a2 | (2 * v22)) - v22 + a3) & a5 ^ a6)
                           + (((a2 | (2 * v22)) - v22 + a3) ^ a4)
                           - ((((a2 | (2 * v22)) - v22 + a3) ^ a4) & a7)) ^ a1)
                         + v16);
  *(_BYTE *)(v13 + ((v9 - (v8 & 0x46)) ^ v20)) = (v22 - ((2 * v22 + 10) & 0x22) + 54) ^ HIBYTE(v14) ^ v19;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v12 != 0) * v18) | a8)) - 4))();
}

uint64_t sub_10002F55C()
{
  unint64_t v0;
  int v1;
  uint64_t v2;

  STACK[0x3A8] = v0;
  v1 = STACK[0x3A0] + 2212;
  v2 = ((uint64_t (*)(uint64_t))STACK[0x330])(261);
  STACK[0x3E8] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * ((44890 * (v2 != 0)) ^ v1)) - 4))();
}

uint64_t sub_10002F5A0(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);

  v2 = (v1 - 723107643) & 0x2B19B67B;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0] + 8 * ((24713 * (v1 == 299326297)) ^ ((LODWORD(STACK[0x2D0]) ^ LODWORD(STACK[0x39C])) - 2239))) - 12);
  STACK[0x3A0] = 49 * (v2 ^ 0x20BFu);
  return v3(a1, 2720598528, 1055498, 3064548046, v2 ^ 0x267Cu, -818606438, 4294967258, 121);
}

uint64_t sub_10002F77C@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned int a3@<W2>, unint64_t a4@<X3>, unsigned int a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, unsigned int a9@<W8>)
{
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  char v16;
  uint64_t v17;
  int v18;
  int v19;
  char v20;
  int v21;
  int v22;
  char v23;

  v21 = v9 - (v10 & v12);
  v22 = ((v21 ^ v19) & 0xE ^ v13) - ((v21 ^ v19) & 0xE) + ((v21 ^ v19) ^ 0x70);
  v23 = (((v21 ^ v19 ^ a7) - 11) ^ a8)
      + ((2 * ((v21 ^ v19 ^ a7) - 11)) & 0xF3)
      + *(_BYTE *)(*(_QWORD *)(v17 + 8 * a5) + (((v22 & v15 ^ a2) + (v22 ^ v14) - ((v22 ^ v14) & a3)) ^ a4) + a6);
  *(_BYTE *)(a1 + (v21 ^ 3)) = v20 ^ (v23 - ((2 * v23 - 84) & v16) - 88) ^ 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v11 == 0) * v18) ^ a9)) - 12))();
}

uint64_t sub_10002F838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  LODWORD(STACK[0x294]) = v37;
  v38 = STACK[0x3A0] + 830;
  v39 = ((uint64_t (*)(uint64_t))STACK[0x330])(263);
  STACK[0x418] = v39;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0] + 8 * ((24666 * (v39 != 0)) ^ v38)) - 12))(v39, v40, v41, v42, v43, v44, v45, v46, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_10002F880(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  char v4;
  char v5;
  unsigned int v6;
  int v7;
  _BOOL4 v8;
  int v9;

  v2 = LODWORD(STACK[0x2D4]) ^ LODWORD(STACK[0x208]) ^ (v1 - 1313687657);
  v3 = ((v2 - ((2 * v2 + 1589733342) & 0xCD839222) + 371358976) ^ 0xE6C1C911)
     + (LODWORD(STACK[0x298]) ^ LODWORD(STACK[0x274]) ^ 0x213F5E13);
  LOBYTE(v3) = ((5 * (v1 ^ 0xEC)) ^ 0xAA ^ v3) - 93 + ((2 * v3) & 0xBA);
  v4 = ((v3 & 0xFE) - ((2 * v3) & 0x74) - 70) ^ 0xCD;
  v5 = 15 * v4;
  v6 = (15 * v4);
  if (v4 >= 0)
    LOBYTE(v7) = v4;
  else
    v7 = -v4;
  v8 = v6 > (v5 - v7);
  if (v4 < 0)
    v8 = v6 < (v5 + v7);
  v9 = v7 != 1 || v8;
  return (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x3C0] + 8 * ((30144 * v9) ^ (v1 + 2000))))(a1, 4247915432);
}

uint64_t sub_10002FA14(uint64_t a1, int a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6, char a7)
{
  char v7;
  int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  int v13;

  *(_BYTE *)(a1 + ((a2 + 103) * v7)) = *(_BYTE *)(v11
                                                                 + ((v9
                                                                   - ((((a2 + 103) * v7) ^ a7) ^ v8)
                                                                   + (v13 ^ 0x446A652E | (2
                                                                                        * ((((a2 + 103) * v7) ^ a7) ^ v8)))) ^ v10)) ^ HIBYTE(a4) ^ 0xFB;
  return (*(uint64_t (**)(void))(STACK[0x3C0] + 8 * ((29717 * (a2 + 1 != v12 + 256)) ^ v13)))();
}

uint64_t sub_10002FA90@<X0>(uint64_t a1@<X0>, char a2@<W6>, char a3@<W7>, int a4@<W8>)
{
  char v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned __int8 v11;
  char v12;

  v11 = (((v5 + 48) ^ 0x37) + a4) * v4;
  v12 = a3 ^ 0xFB ^ *(_BYTE *)(v9
                             + ((v7
                               - ((v11 ^ a2) ^ v6)
                               + (v10 | (2 * ((v11 ^ a2) ^ v6)))) ^ v8));
  *(_BYTE *)(a1 + ((a4 + 15) * v4)) = a3 ^ 0xFB ^ *(_BYTE *)(v9
                                                                            + ((v7
                                                                              - ((((a4 + 15) * v4) ^ a2) ^ v6)
                                                                              + (v10 | (2
                                                                                      * ((((a4 + 15) * v4) ^ a2) ^ v6)))) ^ v8));
  *(_BYTE *)(a1 + (v11 & 0xFE)) = v12;
  return (*(uint64_t (**)(void))(STACK[0x3C0] + 8 * ((469 * (a4 == 254)) ^ v5)))();
}

uint64_t sub_10002FB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  LODWORD(STACK[0x3A0]) = a8;
  v8 = a6 + 4456;
  v9 = ((uint64_t (*)(uint64_t))STACK[0x330])(260);
  STACK[0x3D0] = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * ((47890 * (v9 != 0)) ^ v8)) - 8))();
}

uint64_t sub_10002FB80(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0] + 8 * (v1 + 6993)) - 8))(a1, 114, 189);
}

uint64_t sub_10002FD04@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X6>, char a5@<W7>, int a6@<W8>)
{
  char v6;
  char v7;
  int v8;
  char v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned __int8 v15;
  char v16;

  v15 = v6 + a5 - (v7 & v9);
  v16 = *(_BYTE *)(*(_QWORD *)(a4 + 8 * v11) + ((v15 ^ v13) ^ v10) + v12);
  *(_BYTE *)(a1 + (v15 ^ a2)) = (v16 - ((2 * v16 + 126) & 0x88) - 125) ^ BYTE2(v14) ^ 0xF7;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v8 == 0) * a3) ^ a6)) - 8))();
}

uint64_t sub_10002FD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  v8 = a8 + 830;
  v9 = ((uint64_t (*)(uint64_t))STACK[0x330])(260);
  STACK[0x420] = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * ((41954 * (v9 != 0)) ^ v8)) - 12))();
}

uint64_t sub_10002FDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a71;
  int v71;

  LODWORD(STACK[0x284]) ^= a71 ^ 0xA0B23084;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0] + 8 * (v71 + 11747)) - 4))(a1, 253, 2549);
}

uint64_t sub_10002FF68@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X7>, unsigned int a5@<W8>)
{
  char v5;
  char v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  int v14;
  int v15;
  unsigned int v16;

  *(_BYTE *)(a1 + ((v5 - (v6 & v8)) ^ a2)) = v12 ^ HIBYTE(v14) ^ (v5 - (v6 & v8)) ^ v13 ^ v15 ^ v11 ^ *(_BYTE *)(*(_QWORD *)(a4 + 8 * v9) + (((v5 - (v6 & v8)) ^ v13) ^ v15 ^ v16) + v10);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v7 == 0) * a3) ^ a5)) - 4))();
}

uint64_t sub_10002FFD4()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x2BC]) = v1;
  v2 = ((uint64_t (*)(uint64_t))STACK[0x330])(266);
  STACK[0x3D8] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * ((41693 * (v2 != 0)) ^ (v0 + 2212))) - 4))();
}

uint64_t sub_100030014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61)
{
  int v61;

  LODWORD(STACK[0x274]) = a61 ^ LODWORD(STACK[0x280]) ^ 0x69EFDE5A;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x3C0] + 8 * (v61 - 13)) - 12))(a1, 167, 215, 20721862, 808, 683870465, 704591903, (v61 - 7806));
}

uint64_t sub_1000301B0@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, unint64_t a7@<X6>, int a8@<W7>, int a9@<W8>)
{
  char v9;
  char v10;
  int v11;
  char v12;
  unsigned __int8 v13;
  __int16 v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  unsigned __int8 v20;
  unsigned int v21;

  v20 = v9 - (v10 & v12);
  v21 = ((v20 ^ v13) & 0x51 ^ 0xF7EA1501) + ((v20 ^ v13) & 0xAE ^ a2) - 1;
  *(_BYTE *)(a1 + (v20 ^ v19)) = *(_BYTE *)(*(_QWORD *)(v16 + 8 * a8)
                                          + (((v21 & a3 ^ a4) + (v21 & a5 ^ a6) - 1) ^ a7)
                                          + v17) ^ HIBYTE(v14) ^ v18;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v11 == 0) * v15) ^ a9)) - 12))();
}

uint64_t sub_10003024C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x330])(265);
  *(_QWORD *)(v1 - 176) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v2 != 0) * ((v0 - 2212) ^ 0x801F)) ^ v0))
                            - (((v0 - 11067) | 0x8102u) ^ 0x8796)))();
}

uint64_t sub_1000302A4(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0] + 8 * v1)
                                                                                               - 4))(a1, 553776212, 204785780, (v1 - 30727), -1142014463, 110, 198);
}

uint64_t sub_100030408@<X0>(uint64_t a1@<X0>, int a2@<W1>, unint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, int a8@<W8>)
{
  char v8;
  char v9;
  int v10;
  char v11;
  unsigned int v12;
  char v13;
  int v14;
  char v15;
  uint64_t v16;
  int v17;
  unsigned __int8 v18;

  v18 = v8 - (v9 & v11);
  *(_BYTE *)(a1 + (v18 ^ a7)) = *(_BYTE *)(*(_QWORD *)(v16 + 8 * a4)
                                         + ((((((v18 ^ v15) ^ v12) << v13) & v14)
                                           - ((v18 ^ v15) ^ v12)
                                           + a2) ^ a3)
                                         + a5) ^ BYTE2(v17) ^ v18 ^ v15 ^ a6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * ((255 * (v10 != 0)) ^ a8)) - 4))();
}

uint64_t sub_100030484()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x330])(262);
  STACK[0x408] = v1;
  return (*(uint64_t (**)(void))(STACK[0x3C0] + 8 * ((v0 - 3860) | (32 * (v1 == 0)))))();
}

uint64_t sub_1000304B4(uint64_t a1)
{
  int v1;

  LODWORD(STACK[0x318]) = LODWORD(STACK[0x2D4]) ^ LODWORD(STACK[0x278]);
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0]
                                                                                         + 8
                                                                                         * ((v1 - 968845086) ^ 0xC640BD95 ^ (32964 * ((v1 - 968845086) < 0x6C0C54F8))))
                                                                             - 12))(a1, 1998673335, (v1 - 9741), -1432136110, 222);
}

uint64_t sub_100030638@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X7>, unsigned int a7@<W8>)
{
  unsigned __int8 v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  char v15;
  int v16;
  int v17;

  v17 = (v7 ^ v15) ^ v9;
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(*(_QWORD *)(a6 + 8 * a3)
                                 + ((((v17 + v11 - (v10 & (2 * v17))) & v13 ^ 0x40)
                                   + ((v17 + v11 - (v10 & (2 * v17))) ^ v12)
                                   - (((v17 + v11 - (v10 & (2 * v17))) ^ v12) & v14)) ^ a2)
                                 + a4) ^ BYTE2(v16) ^ a5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v8 == 0) | (2 * (v8 == 0))) ^ a7)) - 12))();
}

uint64_t sub_1000306B0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x330])(260);
  *(_QWORD *)(v1 - 232) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v2 != 0) * ((v0 + 24126) ^ v0 ^ 0x13A8)) ^ v0)) - 8))();
}

uint64_t sub_100030708(uint64_t a1)
{
  int v1;
  int v2;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0]
                                                                                + 8
                                                                                * ((v2 - 3696) ^ 0x384CC87B ^ (13594 * (v2 != -1000022127))))
                                                                    - 8))(a1, (v2 - 3696 + v1 - 28), 234, 48849);
}

uint64_t sub_1000308A8@<X0>(uint64_t a1@<X0>, char a2@<W1>, unint64_t a3@<X2>, int a4@<W3>, int a5@<W8>)
{
  char v5;
  char v6;
  int v7;
  char v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  unsigned __int8 v15;
  unsigned int v16;

  v15 = v5 - (v6 & v8);
  v16 = *(unsigned __int8 *)(*(_QWORD *)(v12 + 8 * v10) + ((v15 ^ v14) ^ v9) + v11);
  *(_BYTE *)(a1 + (v15 ^ a3)) = v16 ^ HIBYTE(v13) ^ (v16 >> a2) ^ (v16 >> 2) ^ 0x78;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v7 == 0) * a4) ^ a5)) - 8))();
}

uint64_t sub_100030914@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = a1 + 70;
  v2 = (a1 - 760);
  v3 = (a1 + 22603);
  v4 = ((uint64_t (*)(uint64_t))STACK[0x330])(258);
  STACK[0x430] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * ((8028 * (v4 != 0)) ^ v1)) - (v3 + v2) + 44421))();
}

uint64_t sub_100030968(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0] + 8 * v1)
                                                                                               - 8))(a1, 4215549, 2518385003, (v1 - 766242155) & 0x2DABED3C ^ 0x8460u, -610792110, 54, 86);
}

uint64_t sub_100030AF0@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unint64_t a3@<X2>, unsigned int a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, int a7@<W6>, unsigned int a8@<W8>)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;

  v18 = v8 - (v9 & v11);
  *(_BYTE *)(a1 + (v18 ^ 0x60)) = *(_BYTE *)(*(_QWORD *)(v17 + 8 * a4)
                                                              + ((((v18 ^ v15) ^ v12)
                                                                + ((v18 ^ v15) & v13 ^ v14)
                                                                - (((v18 ^ v15) ^ v12) & a2)) ^ a3)
                                                              + a5) ^ BYTE2(v16) ^ a6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v10 != 0) * a7) ^ a8)) - 8))();
}

uint64_t sub_100030B68()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x330])(262);
  *(_QWORD *)(v1 - 224) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0]
                                        + 8 * (((v2 != 0) * ((v0 - 925072600) & 0x37236B6F ^ 0x7456)) ^ v0))
                            - ((v0 - 12807) | 0x5227u)
                            + 23207))();
}

uint64_t sub_100030BD4(uint64_t a1)
{
  int v1;

  LODWORD(STACK[0x2A0]) = LODWORD(STACK[0x268]) ^ 0xF8409E30;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(STACK[0x3C0] + 8 * v1))(a1, 293151095, v1 ^ 0x5D72u, -340739087, 91, 125);
}

uint64_t sub_100030D48@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, int a6@<W5>, int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  int v16;
  char v17;
  unsigned int v18;

  v18 = *(unsigned __int8 *)(*(_QWORD *)(v15 + 8 * a3)
                           + ((a7
                             - (((v7 - (v8 & v10)) ^ v16) & v11 ^ v12 | a7)
                             + (((v7 - (v8 & v10)) ^ v16) & v11 ^ v12 | v13)) ^ a2)
                           + a4);
  *(_BYTE *)(a1 + ((v7 - (v8 & v10)) ^ 0x1FLL)) = v17 ^ (v18 >> 3) ^ a5 ^ (((32 * v18) ^ 0x9F) - 2);
  return (*(uint64_t (**)(void))(STACK[0x3C0] + 8 * (((v9 == 0) * a6) ^ v14)))();
}

uint64_t sub_100030DC8()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x330])(261);
  STACK[0x3E0] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0]
                                        + 8
                                        * ((18781 * (((v1 == 0) ^ (-41 * (v0 ^ 0x54))) & 1)) ^ v0))
                            - ((v0 + 1510) ^ 0x3247)))();
}

uint64_t sub_100030E24(uint64_t a1)
{
  int v1;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(STACK[0x3C0] + 8 * v1))(a1, 3348229990, v1 ^ 0x386Du, -1383106362, 220, 18748);
}

uint64_t sub_100030F88(uint64_t a1, unint64_t a2, int a3, uint64_t a4, char a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  char v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;

  v21 = v20 ^ v19 ^ (v6 + v8);
  v22 = ((v11 & (2 * (v21 & v9 ^ v10))) - (v21 & v9 ^ v10) + v12) ^ v13;
  *(_BYTE *)(a1 + v6) = v16 ^ v21 ^ a5 ^ *(_BYTE *)(*(_QWORD *)(v17 + 8 * a3)
                                                                   + ((v22 - (v18 & (2 * v22)) + v14) ^ a2)
                                                                   + a4);
  return (*(uint64_t (**)(void))(STACK[0x3C0] + 8 * (((v7 == 0) * a6) ^ v15)))();
}

uint64_t sub_100031000()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x330])(257);
  *(_QWORD *)(v1 - 192) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0]
                                        + 8
                                        * (((((v2 == 0) ^ ((v0 ^ 0x8A) + 92)) & 1)
                                          * (2107 * (v0 ^ 0x3A8A) + 8381)) ^ v0))
                            - 8))();
}

uint64_t sub_100031060(uint64_t a1)
{
  unsigned int v1;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0]
                                                                                                  + 8 * (int)(v1 ^ 0x463C7996 ^ (3575 * (v1 < 0xC79534D8))))
                                                                                      - 12))(a1, v1 - 1178401824, -1719974131, 4294967256, 19, 71);
}

uint64_t sub_1000311DC@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, unint64_t a6@<X5>, int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  char v18;
  unsigned __int8 v19;

  v17 = v7 - (v8 & v10);
  v18 = *(_BYTE *)(*(_QWORD *)(v15 + 8 * a2)
                 + ((((v17 ^ v14) & v11 ^ 0xF80) + ((v17 ^ v14) & 0x3E ^ v12) - 1) ^ v13)
                 + a3);
  v19 = v18 - ((2 * v18 - 50) & a4) + 83;
  *(_BYTE *)(a1 + (v17 ^ a6)) = v19 ^ HIBYTE(v16) ^ (v19 >> 5) ^ (v19 >> 2) ^ a5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * ((15 * (v9 == 0)) ^ a7)) - 12))();
}

uint64_t sub_100031274()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x330])(263);
  STACK[0x440] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0]
                                        + 8 * (((v1 != 0) * ((v0 - 812286484) & 0x306A796F ^ 0x93E2)) ^ v0))
                            - (v0 ^ 0x6B8Au)
                            + 23101))();
}

uint64_t sub_1000312D8(uint64_t a1)
{
  int v1;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(STACK[0x3C0] + 8 * v1))(a1, 194, 955);
}

uint64_t sub_10003140C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X6>, char a5@<W7>, int a6@<W8>)
{
  char v6;
  char v7;
  int v8;
  char v9;
  char v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;

  *(_BYTE *)(a1 + ((v6 + v10 - (v7 & v9)) ^ a2)) = *(_BYTE *)(*(_QWORD *)(a4 + 8 * v11)
                                                                             + (v13 ^ ((v6 + v10 - (v7 & v9)) ^ a5) ^ 0xFCu)
                                                                             + v12) ^ HIBYTE(v14) ^ 0x3F;
  return (*(uint64_t (**)(void))(STACK[0x3C0] + 8 * (((v8 != 0) * a3) ^ a6)))();
}

uint64_t sub_100031470()
{
  unsigned int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x330])(262);
  STACK[0x3F8] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0]
                                        + 8 * ((30722 * (((v1 == 0) ^ (35 * (v0 ^ 0xA2))) & 1)) ^ v0))
                            - ((v0 + 1265893808) ^ 0x4B743C37)))();
}

uint64_t sub_1000314D8(uint64_t a1)
{
  unsigned int v1;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x3C0]
                                                                                                 + 8
                                                                                                 * (int)((25616 * (v1 > 0xA0868DA)) ^ (v1 - 1265898326))))(a1, 756909711, (v1 - 1265889094) ^ 0x4EDD, -1731660662, 144, 181, 52843);
}

uint64_t sub_100031664@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, unint64_t a6@<X5>, int a7@<W6>, int a8@<W8>)
{
  char v8;
  char v9;
  int v10;
  char v11;
  unsigned int v12;
  int v13;
  int v14;
  char v15;
  uint64_t v16;
  char v17;

  *(_BYTE *)(a1 + ((v8 - (v9 & v11)) ^ a6)) = v17 ^ (v8 - (v9 & v11)) ^ v15 ^ a5 ^ *(_BYTE *)(*(_QWORD *)(v16 + 8 * a3) + (((((v8 - (v9 & v11)) ^ v15) ^ v12) - (v13 & (2 * (((v8 - (v9 & v11)) ^ v15) ^ v12))) + v14) ^ a2) + a4);
  return (*(uint64_t (**)(void))(STACK[0x3C0] + 8 * (((v10 == 0) * a7) ^ a8)))();
}

uint64_t sub_1000316D4()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x330])(262);
  STACK[0x410] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0]
                                        + 8
                                        * (int)(((((v0 - 315571944) & 0x12CF2D7F)
                                                + ((v0 - 4512688) & 0xF57EF3BB)
                                                + 180755703)
                                               * (v1 != 0)) ^ v0))
                            - 8))();
}

uint64_t sub_100031744(uint64_t a1)
{
  unsigned int v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x3C0]
                                                                                        + 8
                                                                                        * (int)(v1 ^ 0xF53A527A ^ (17364 * (v1 > 0x8BACED38)))))(a1, (v1 + 180744346) ^ 0x4EF0, -1118641399, 5, 8719, 2689744113);
}

uint64_t sub_1000318D4@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, unint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, int a7@<W8>)
{
  int v7;
  int v8;
  char v9;
  char v10;
  char v11;
  char v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  char v17;
  char v18;
  unsigned __int8 v19;
  char v20;

  v19 = (a6 + v10) * v9 - (v11 & (2 * (a6 + v10) * v9)) + v12;
  v20 = *(_BYTE *)(*(_QWORD *)(v16 + 8 * a2)
                 + ((((v19 ^ v17) ^ v14) + v7 - (v15 & (2 * ((v19 ^ v17) ^ v14)))) ^ (v7 + 64))
                 + a3);
  *(_BYTE *)(a1 + (v19 ^ a4)) = v18 ^ ((v20 ^ 0x80) - ((2 * v20 + 122) & 0x87)) ^ 0x40;
  return (*(uint64_t (**)(void))(STACK[0x3C0] + 8 * (((v13 + a6 == a7 + 256) * a5) ^ v8)))();
}

uint64_t sub_100031960()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x330])(1028);
  *(_QWORD *)(v1 - 248) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0]
                                        + 8
                                        * ((16709 * (((v2 == 0) ^ (((v0 - 46) & 0xEF) + 58)) & 1)) ^ v0))
                            - 12))();
}

uint64_t sub_1000319C8(uint64_t a1)
{
  unsigned int v1;
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0] + 8 * (int)(v1 ^ 0x758F0A86 ^ (24845 * (v1 > 0x87833E44))))
                                                                                               - 4))(a1, 3893084174, v1 + v2 - 7112, -1666878739, 391743344, 105, 25504);
}

uint64_t sub_100031B9C@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, unsigned int a6@<W5>, int a7@<W6>, int a8@<W8>)
{
  int v8;
  char v9;
  char v10;
  int v11;
  char v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  char v18;

  *(_DWORD *)(a1 + 4 * ((v9 - (v10 & v12)) ^ a6)) = v16 ^ v17 ^ a5 ^ *(_DWORD *)(*(_QWORD *)(v15 + 8 * a3)
                                                                                                  + 4 * ((a8 - (v13 ^ ((v9 - (v10 & v12)) ^ v18) | a8) + (v13 ^ ((v9 - (v10 & v12)) ^ v18) | v14)) ^ a2)
                                                                                                  + a4);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v11 == 0) * a7) ^ v8)) - 4))();
}

uint64_t sub_100031C14()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x3B8]) = v1;
  v2 = ((uint64_t (*)(uint64_t))STACK[0x330])(1028);
  STACK[0x400] = v2 + 0x4ECFAA455E6E51B3;
  return (*(uint64_t (**)(void))(STACK[0x3C0]
                              + 8 * (((((v0 - 12) ^ (v2 == 0)) & 1) * ((v0 ^ 0x3009) + 13766)) | v0)))();
}

uint64_t sub_100031C78(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t);

  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(STACK[0x3C0] + 8 * v2) - 8);
  LODWORD(STACK[0x3A0]) = 4249 * (v2 ^ 0x2A39);
  return v3(a1, a2, 159, 4280137364, 235, 50, (v2 - 9469), -949441903);
}

uint64_t sub_100031E04@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, uint64_t a7@<X7>, int a8@<W8>)
{
  int v8;
  int v9;
  int v10;
  char v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  unsigned int v27;
  int v28;

  v23 = v9 - ((v9 << v11) & 0x6FD2043C) - 1209466338;
  v24 = LODWORD(STACK[0x250]) ^ v23 ^ 0x49C01243;
  v25 = 2 * ((v24 & v8) - ((2 * (v24 & v8)) & 0x162B6F2A)) - 1775538390;
  v26 = v8 + v24 + (v25 ^ a2) + (a3 & (2 * v25) ^ a4) + 76;
  v27 = *(_DWORD *)((char *)*(&off_10112C750 + a6)
                  + 4 * ((a8 + v26 - (a5 & (2 * v26))) ^ (a8 + 82))
                  + a7);
  v28 = ((((v27 >> 4) & 0x8000000) + ((v27 >> 4) & v14 ^ v16)) | v17) - (((v27 >> 4) & v14 ^ v16) & 0x8000000);
  *(_DWORD *)(a1 + 4 * ((v23 ^ 0x1Eu ^ v22) + ((2 * (v23 ^ 0x1Eu)) & 0xF0)) + v13) = LODWORD(STACK[0x390]) ^ LODWORD(STACK[0x2CC]) ^ v27 ^ v21 ^ ((v28 & v18 ^ v19) + (v28 & 0x29400010 ^ v20) - 1);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v10 == 0) * v15) ^ v12)) - 8))();
}

uint64_t sub_100031F3C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  v1 = STACK[0x3A0];
  v2 = ((uint64_t (*)(uint64_t))STACK[0x330])(1028);
  *(_QWORD *)(v0 - 152) = v2 + 0x5F3518C7AAC68850;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v2 != 0) * (((v1 - 2212) ^ 0x12F7) + 26442)) ^ v1))
                            - 4))();
}

uint64_t sub_100031F9C(uint64_t a1)
{
  int v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0] + 8 * v1) - 12);
  LODWORD(STACK[0x3A0]) = (v1 - 12139) | 0x2000;
  return v2(a1, 3105739264, 2635977224, 1006061165, 536299211, (v1 - 10857), -352936027, 145376221);
}

uint64_t sub_100032138@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unsigned int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, int a8@<W7>, int a9@<W8>)
{
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;

  v23 = ((((((v10 - (v11 & v13)) ^ LODWORD(STACK[0x3B8])) & v15)
         + (((v10 - (v11 & v13)) ^ LODWORD(STACK[0x3B8])) ^ v14)) | a2)
       - ((((v10 - (v11 & v13)) ^ LODWORD(STACK[0x3B8])) ^ v14) & v15)) ^ a3;
  v24 = (a9 - ((v10 - (v11 & v13)) ^ v17 | a9) + ((v10 - (v11 & v13)) ^ v17 | v18)) ^ v19;
  *(_DWORD *)(a1 + 4 * ((v24 ^ v20) + (v21 & (2 * v24))) + v22) = LODWORD(STACK[0x38C]) ^ LODWORD(STACK[0x388]) ^ a8 ^ *(_DWORD *)((char *)*(&off_10112C750 + a6) + 4 * ((v9 - (v23 | v9) + (v23 | a4)) ^ a5) + a7);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * ((v12 == 0) | (4 * (v12 == 0)) | v16)) - 12))();
}

uint64_t sub_100032200()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x3A0];
  v1 = ((uint64_t (*)(uint64_t))STACK[0x330])(1028);
  STACK[0x448] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * ((18942 * (v1 != 0)) ^ v0))
                            - (v0 ^ 0x542 ^ ((v0 - 9154) | 0x2004u) ^ 0x18CLL)))();
}

uint64_t sub_100032260(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0]
                                                                                                  + 8 * v1)
                                                                                      - 8))(a1, v1 ^ 0x293Eu, -617651787, 3661379356, 85, 28511);
}

uint64_t sub_1000323C4(uint64_t a1, int a2, uint64_t a3, int a4, unsigned int a5, int a6)
{
  int v6;
  char v7;
  int v8;
  char v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned __int8 v16;
  int v17;

  v16 = v6 - (v7 & v9);
  v17 = LODWORD(STACK[0x238]) ^ LODWORD(STACK[0x240]) ^ ((v6 & v10) + (v16 & 0xFE ^ v11) + v12);
  *(_DWORD *)(a1 + 4 * (v16 ^ a5)) = v15 ^ LODWORD(STACK[0x234]) ^ v17 ^ a4 ^ *(_DWORD *)((char *)*(&off_10112C750 + a2)
                                                                                          + 4 * (v17 ^ v13)
                                                                                          + a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v8 == 0) * a6) ^ v14)) - 8))();
}

uint64_t sub_100032454()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x330])(1032);
  *(_QWORD *)(v1 - 216) = v2 + 0x6860D1191D716779;
  return (*(uint64_t (**)(void))(STACK[0x3C0] + 8 * (((v2 != 0) * (((v0 + 3828) ^ 0xA276) - 20337)) ^ v0)))();
}

uint64_t sub_1000324AC(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  v3 = *(_QWORD *)(STACK[0x3C0] + 8 * v2);
  LODWORD(STACK[0x2BC]) = ((LODWORD(STACK[0x250]) ^ LODWORD(STACK[0x384])) >> 8) ^ 0x6D720B17;
  LODWORD(STACK[0x3A0]) = (v2 - 31368) | 0x2102;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 - 4))(a1, a2, LODWORD(STACK[0x39C]), 3446948793, 3611573136, 2776615168, 3535791237, 3546451938);
}

uint64_t sub_1000326B0@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, int a7@<W7>, int a8@<W8>)
{
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  int v25;
  unsigned int v26;
  uint64_t v27;

  v23 = *(_DWORD *)((char *)*(&off_10112C750 + v12)
                  + 4 * (((v8 - (v9 & 0xA0)) ^ LODWORD(STACK[0x2BC])) ^ v11)
                  - 1287581291);
  HIDWORD(v24) = v23 ^ 0x33535CED;
  LODWORD(v24) = ~v23;
  v25 = (v24 >> 30) - ((2 * (v24 >> 30)) & 0x9AE88772) + a3;
  v26 = ((v8 - (v9 & 0xA0)) ^ v13)
      + ((v8 - (v9 & 0xE8FBC0A0)) & v15 ^ v16)
      - (((v8 - (v9 & 0xA0)) ^ v13) & v15);
  v27 = ((v26 & 0x4820048B ^ v18) + (v26 ^ v17) - ((v26 ^ v17) & v19)) ^ 0xCDA17D3A;
  *(_DWORD *)(a1 + 4 * ((v27 ^ v20) + (v21 & (2 * v27))) + v22) = LODWORD(STACK[0x328]) ^ a2 ^ v25 ^ a7 ^ ((a4 ^ (16 * v25)) - (a5 & (2 * (a4 ^ (16 * v25)))) + a6);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v10 != 0) * v14) ^ a8)) - 4))();
}

uint64_t sub_1000327C4()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x3A0];
  v1 = ((uint64_t (*)(uint64_t))STACK[0x330])(1032);
  STACK[0x3F0] = v1 + 0x42FF676F0EF5DD6ELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v1 != 0) * (6728 * (v0 ^ 0x31CF) - 7967)) ^ v0)) - 4))();
}

uint64_t sub_100032830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0] + 8 * v5) - 4))(a1, a2, v5 ^ 0x6633u, a4, a5, 1099691864, 4105237275, 207600320);
}

uint64_t sub_1000329A8@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W5>, int a4@<W6>, int a5@<W7>, int a6@<W8>)
{
  int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;

  v23 = (a6 - 585974856 + 5 * v7) * v6 - ((2 * (a6 - 585974856 + 5 * v7) * v6) & 0x1C0AC5B2) - 1912249639;
  v24 = ((a6 - 72 + 5 * v7) * v6 - ((2 * (a6 - 72 + 5 * v7) * v6) & 0xB2) - 39) ^ 0xF551B9D3;
  v25 = *(_DWORD *)((char *)*(&off_10112C750 + a2)
                  + 4
                  * (LODWORD(STACK[0x238]) ^ LODWORD(STACK[0x240]) ^ 0xABEDE351 ^ (v24
                                                                                 + (v23 & 0xCF ^ 0x22A400C)
                                                                                 - (v24 & 0x545018CF)))
                  - 1864278151);
  v26 = v25 - ((2 * v25 + 668331742) & a3) + a4;
  v27 = ((v23 & v19 ^ v20) + (v23 & v18) - 1) ^ v21;
  v28 = ((v22 & (2 * v27)) - v27 + v14) ^ v8;
  *(_DWORD *)(a1 + 4 * ((v28 ^ v9) + (v10 & (2 * v28))) + v11) = LODWORD(STACK[0x224]) ^ LODWORD(STACK[0x228]) ^ v26 ^ v17 ^ ((a5 ^ (16 * v26)) - (v15 & (2 * (a5 ^ (16 * v26)))) + v16);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((a6 == 255) * v12) ^ v13)) - 4))();
}

uint64_t sub_100032AEC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x330])(1032);
  *(_QWORD *)(v1 - 208) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v2 != 0) * (((v0 - 5764) | 0x2014) ^ 0x2443)) ^ v0))
                            - 12))();
}

uint64_t sub_100032B48(uint64_t a1)
{
  int v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x3C0] + 8 * v1) - 12);
  STACK[0x3A0] = (v1 - 11472) | 0x2002u;
  return v2(a1, 2934357839, 1781115234, 193, 3671780000, 2459077296, 1835890101, v1 ^ 0x279Bu);
}

uint64_t sub_100032CDC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, unsigned int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;

  v23 = (v9 - (v10 & 0x1DAF4D56)) ^ LODWORD(STACK[0x2BC]);
  v24 = ((v23 & v13) + (v23 & v12 ^ 0xFFFFFFF9) + (v23 & v12 | 0x9F273BD7) + 1) ^ a2;
  v25 = *(_DWORD *)((char *)*(&off_10112C750 + a8)
                  + 4 * (((a5 | (2 * (v23 & v12 ^ a4))) - (v23 & v12 ^ a4) + a6) ^ a7)
                  + v15)
      + ((a9 - (v24 | a9) + (v24 | a3)) ^ v17)
      + v18;
  *(_DWORD *)(a1 + 4 * ((v9 - (v10 & 0x56)) ^ v21)) = LODWORD(STACK[0x218]) ^ LODWORD(STACK[0x21C]) ^ v20 ^ (v25 - (v16 & (2 * v25)) + v19);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v11 == 0) * v22) ^ v14)) - 12))();
}

uint64_t sub_100032DB8()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x3A0] + 2206;
  v1 = ((uint64_t (*)(uint64_t))STACK[0x330])(1028);
  STACK[0x458] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * ((14 * (v1 == 0)) ^ v0)) - 4))();
}

uint64_t sub_100032DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55)
{
  int v55;
  int v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  LODWORD(STACK[0x318]) = LODWORD(STACK[0x250]) ^ LODWORD(STACK[0x384]);
  v56 = a55 ^ LODWORD(STACK[0x2B0]);
  v57 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0] + 8 * (int)((v55 - 1678472977) ^ 0x9BF4EADE ^ (59733 * (v55 == 614383047)))) - 4);
  LODWORD(STACK[0x3A0]) = (8 * v55) ^ 0x1655D;
  LODWORD(STACK[0x2B0]) = v56;
  return v57(a1, a2, a3, a4, a5, a6, 1727381328, 2593909189);
}

uint64_t sub_100032FFC@<X0>(uint64_t a1@<X0>, int a2@<W6>, int a3@<W7>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;

  v21 = v4 - (v5 & v7);
  v22 = (v21 ^ LOBYTE(STACK[0x318]));
  v23 = ((v22 ^ 0x12) - ((2 * (v22 ^ 0x12)) & 0x2A) - 2026775787) ^ 0x2B8A638B;
  v24 = (((v22 ^ 0x391A913) - ((2 * (v22 ^ 0x391A913)) & 0x52352A0) + a2) ^ a3) + 1;
  v25 = (((2 * v23) | 0x7CCA625C) - v23 + 1100664530) ^ v14;
  v26 = (v24 ^ v10) + ((2 * v24) & 0xD4FFFBFA) + v15 + v25;
  *(_DWORD *)(a1 + 4 * (v21 ^ v9)) = v19 ^ ((*((_BYTE *)*(&off_10112C750 + v20)
                                                                                 + ((v26 - (v16 & (2 * v26)) + v17) ^ v18)
                                                                                 + v25
                                                                                 + v13) ^ v21 ^ LOBYTE(STACK[0x318]) ^ v11)
                                                             - (v8 & (2
                                                                    * (*((unsigned __int8 *)*(&off_10112C750 + v20)
                                                                       + ((v26 - (v16 & (2 * v26)) + v17) ^ v18)
                                                                       + v25
                                                                       + v13) ^ v21 ^ LODWORD(STACK[0x318]) ^ v11)))
                                                             + v12);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (a4 ^ (4 * (v6 == 0)))) - 4))();
}

uint64_t sub_100033118()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  v1 = STACK[0x3A0];
  v2 = ((uint64_t (*)(uint64_t))STACK[0x330])(1028);
  *(_QWORD *)(v0 - 240) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0]
                                        + 8
                                        * (((((v2 == 0) ^ ((v1 ^ 0x37) + 1)) & 1)
                                          * ((v1 - 830) ^ 0x74CA)) ^ v1))
                            - 12))();
}

uint64_t sub_100033170(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0]
                                                                                                  + 8 * v1)
                                                                                      - 4))(a1, (v1 - 5891), -1322390083, 4161851731, 66, 16477);
}

uint64_t sub_1000332BC(uint64_t a1, int a2, uint64_t a3, int a4, unsigned int a5, int a6)
{
  char v6;
  char v7;
  int v8;
  char v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned __int8 v16;
  int v17;

  v16 = v6 - (v7 & v9);
  v17 = (v16 ^ LODWORD(STACK[0x2BC])) ^ v10;
  *(_DWORD *)(a1 + 4 * (v16 ^ a5)) = v15 ^ LODWORD(STACK[0x21C]) ^ a4 ^ *(_DWORD *)((char *)*(&off_10112C750 + a2)
                                                                                    + 4
                                                                                    * ((v17
                                                                                      + ((v16 ^ LODWORD(STACK[0x2BC])) & 0x7F ^ v11)
                                                                                      - (v17 & v12)) ^ v13)
                                                                                    + a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v8 == 0) * a6) ^ v14)) - 4))();
}

uint64_t sub_100033348()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x330])(1032);
  *(_QWORD *)(v1 - 160) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0]
                                        + 8 * ((243 * (((v2 == 0) ^ (v0 + 19)) & 1)) ^ (v0 + 1299)))
                            - ((v0 + 1703879197) & 0x9A70FFDD)
                            + 18753))();
}

uint64_t sub_1000333B4(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0] + 8 * v1) - 4))(a1, 3005811741, 4127821518, v1 ^ 0x5BA9u, -1119913014, 1434089696, 714256240, 357128127);
}

uint64_t sub_100033518@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  int v9;
  char v10;
  char v11;
  char v12;
  char v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  char v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned __int8 v24;
  int v25;
  int v26;
  int v27;

  v24 = (a9 + v11 + v19) * v10 - (v12 & (2 * (a9 + v11 + v19) * v10)) + v13;
  v25 = (v24 ^ LODWORD(STACK[0x3B8])) ^ v14;
  v26 = ((v15 | (2 * v25)) - v25 + v16) ^ v17;
  v27 = *(_DWORD *)((char *)*(&off_10112C750 + a4) + 4 * ((v9 - (v26 | v9) + (v26 | a2)) ^ a3) + a5);
  *(_DWORD *)(a1 + 4 * (v24 ^ v21)) = LODWORD(STACK[0x324]) ^ v23 ^ v27 ^ v20 ^ ((a6 ^ (8 * v27))
                                                                                 - (a7 & (2 * (a6 ^ (8 * v27))))
                                                                                 + a8);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((a9 == 255) * v22) ^ v18)) - 4))();
}

uint64_t sub_1000335CC()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x330])(1032);
  STACK[0x3C8] = v1 + 0x7BA2BA080285EE37;
  return (*(uint64_t (**)(void))(STACK[0x3C0]
                              + 8
                              * (((((v0 - 12) ^ (v1 == 0)) & 1) * (3 * (v0 ^ 0x12DF) + 5335)) ^ v0)))();
}

uint64_t sub_100033630(uint64_t a1)
{
  int v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, unint64_t);

  v2 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, unint64_t))(STACK[0x3C0] + 8 * v1);
  LODWORD(STACK[0x3A0]) = (v1 - 4802) | 0x3288;
  return v2(a1, 151898464, 269492476, 2366626280, v1 ^ 0x138Du, 0x10F1EFFFFFEA724FLL, 0x1FFD4E49ELL, 0xBC384000005636C4);
}

uint64_t sub_100033858(uint64_t a1, int a2, int a3, unsigned int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  char v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned __int8 v23;
  int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  int v28;
  uint64_t v29;

  v23 = v8 - ((v8 << v10) & 0x16) - 117;
  v24 = (v23 ^ LODWORD(STACK[0x2BC])) ^ 0x13;
  v25 = ((((v23 ^ LODWORD(STACK[0x2BC])) & 1) + v24) | 0x87C72600) - (v24 & 1);
  v26 = *(_DWORD *)((char *)*(&off_10112C750 + a5)
                  + 4
                  * (((v25 & 0x64701BB ^ 0x38001932) + (v25 ^ 0x7CFE489) - ((v25 ^ 0x7CFE489) & 0x1BB)) ^ 0xBE4FDB45)
                  - 368939003);
  v27 = -((1601749926 * v26 - 312614774) & 0xD1E3DAF0) - 1346608685 * v26 + 1604378045;
  v28 = v12 ^ (4 * ((v26 * v20 - ((v22 + v26 * v21) & v18) + v11) ^ v27));
  v29 = ((v23 ^ v16) + (v23 & 0xFC ^ a2) - ((v23 ^ v16) & a3)) ^ a4;
  *(_DWORD *)(a1 + 4 * ((v29 ^ a6) + (a7 & (2 * v29))) + a8) = LODWORD(STACK[0x328]) ^ LODWORD(STACK[0x39C]) ^ v27 ^ v15 ^ (v28 - (v13 & (2 * v28)) + v14);
  return (*(uint64_t (**)(void))(STACK[0x3C0] + 8 * (((v9 == 0) * v19) ^ v17)))();
}

uint64_t sub_1000339D8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  v1 = STACK[0x3A0];
  v2 = ((uint64_t (*)(uint64_t))STACK[0x330])(1032);
  *(_QWORD *)(v0 - 184) = v2 + 0x3361820A0EF489CLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0]
                                        + 8 * (((v2 == 0) * (((v1 - 1215748760) & 0x4876FFFF) - 24557)) | v1))
                            - ((v1 + 1485374253) & 0xA776EB6F ^ 0x292FLL)))();
}

uint64_t sub_100033A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);

  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(STACK[0x3C0] + 8 * v3);
  LODWORD(STACK[0x3A0]) = v3 - 17855;
  return v4(a1, a2, a3, 655073186, v3 ^ 0x5804, -1174530826, 32454198, 31378084);
}

uint64_t sub_100033BE4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  char v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;

  v25 = (((v8 - ((v8 << v10) & 0x41383454) + 547101226) & 0x13)
       + ((v8 - ((v8 << v10) & 0x41383454) + 547101226) & 0xEC ^ 0x654CE729)
       - 1) ^ 0x5D9CC44C;
  v26 = *(_DWORD *)((char *)*(&off_10112C750 + a5)
                  + 4
                  * (LODWORD(STACK[0x238]) ^ LODWORD(STACK[0x240]) ^ a4 ^ (v25 - ((2 * v25) & 0x20207C4Cu) + 387825190))
                  + a6);
  v27 = v26 - ((a7 + 2 * v26) & a8) + v18;
  v28 = ((v19 ^ (8 * v27)) - (v20 & (2 * (v19 ^ (8 * v27)))) + v21) & v22 ^ v23;
  v29 = LODWORD(STACK[0x224]) ^ LODWORD(STACK[0x228]) ^ v27 ^ v11 ^ (v28 - (v24 & (2 * v28)) + v17);
  v30 = (v8 - (((_BYTE)v8 << v10) & 0x54) + 42) ^ v12;
  *(_DWORD *)(a1 + 4 * ((v30 ^ v13) + 2 * v30) + v14) = v29;
  return (*(uint64_t (**)(void))(STACK[0x3C0] + 8 * (((v9 == 0) * v15) ^ v16)))();
}

uint64_t sub_100033D00()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x3A0];
  v1 = ((uint64_t (*)(uint64_t))STACK[0x330])(1028);
  STACK[0x428] = v1 + 0x280245A092B86BD2;
  return (*(uint64_t (**)(void))(STACK[0x3C0] + 8 * ((47350 * (((v1 == 0) ^ (v0 + 76)) & 1)) ^ v0)))();
}

uint64_t sub_100033D6C(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x3C0] + 8 * (LODWORD(STACK[0x3A0]) + 17778)) - 4))(a1, 2417041762, 2113837233, 905333945, 0x17FFBEFFF767FFBBLL, 0x1EECFFF76, 0xA001040022600114, (LODWORD(STACK[0x3A0]) + 17778) & 0xF1310C8D);
}

uint64_t sub_100033F14@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, int a9@<W8>)
{
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  unint64_t v25;
  unsigned int v26;
  int v27;
  uint64_t v28;

  v22 = v9 - (v10 & 0x11737494);
  v23 = ((((a9 - 460336602) & 0x1B6FFFFF) - 12748 + ((v22 ^ LODWORD(STACK[0x318])) & 0x90 ^ 0xBD7AB781)) | (v22 ^ LODWORD(STACK[0x318])) & 0x6F) ^ 0x1DCAB69F;
  v24 = *(_DWORD *)((char *)*(&off_10112C750 + a8)
                  + 4 * ((v23 - ((2 * v23) & 0x203DD0) - 2091467032) ^ 0x23E6BF96)
                  - 1613022135);
  HIDWORD(v25) = v24 ^ 2;
  LODWORD(v25) = v24 ^ 0x4D766D70;
  v26 = (v25 >> 2) - ((2 * (v25 >> 2)) & 0x4AA436E0) + v16;
  v27 = ((v22 & 0xF8 ^ v14) + (v22 & 7) - 1) ^ v15;
  v28 = (v27 - (a2 & (2 * v27)) + a3) ^ a4;
  *(_DWORD *)(a1 + 4 * ((v28 ^ a5) + (a6 & (2 * v28))) + a7) = LODWORD(STACK[0x390]) ^ LODWORD(STACK[0x2CC]) ^ v26 ^ v13 ^ (((v26 >> 4) & v17 ^ v18) + ((v26 >> 4) & v19 ^ v20) - (((v26 >> 4) & v17 ^ v18) & v12));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v11 == 0) * v21) ^ a9)) - 4))();
}

uint64_t sub_100034088()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x330])(1032);
  *(_QWORD *)(v1 - 256) = v2 + 0x6A1FFADE9D938559;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0]
                                        + 8 * ((27222 * (((v2 == 0) ^ (v0 - 42)) & 1)) ^ v0))
                            - 4))();
}

uint64_t sub_1000340E8(uint64_t a1)
{
  int v1;
  unint64_t v2;

  STACK[0x3A0] = v2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0] + 8 * v1) - 12))(a1, 135725356, 2857222126, 718872585, 3790109180, 58, 219, 1057763777);
}

uint64_t sub_1000342A4(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  int v22;
  unsigned int v23;
  int v24;
  uint64_t v25;

  v23 = *(_DWORD *)((char *)*(&off_10112C750 + v12)
                  + 4
                  * (((((v8 - (v9 & v11)) ^ LODWORD(STACK[0x3B8])) ^ 6)
                    - ((2 * (((v8 - (v9 & v11)) ^ LODWORD(STACK[0x3B8])) ^ 6)) & 0x7C)
                    + 1086) ^ 0x413u)
                  - 970020934);
  v24 = (((v8 - (v9 & v11)) ^ a6)
       + ((v8 - (v9 & v11)) & a7 ^ a8)
       - (((v8 - (v9 & v11)) ^ a6) & a7)) ^ v14;
  v25 = ((v16 & (2 * v24)) - v24 + v17) ^ v18;
  *(_DWORD *)(a1 + 4 * ((v25 ^ v19) + ((2 * (_DWORD)v25) & v20)) + v21) = LODWORD(STACK[0x38C]) ^ v13 ^ v23 ^ a5 ^ ((a3 | (2 * ((v23 >> 3) & 0x857A3AC ^ a2))) - ((v23 >> 3) & 0x857A3AC ^ a2) + a4) & 0xFFFFFFFE;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v10 == 0) * v22) ^ v15)) - 12))();
}

uint64_t sub_100034398()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x3A0] - 3828;
  v1 = ((uint64_t (*)(uint64_t))STACK[0x330])(1032);
  STACK[0x438] = v1;
  return (*(uint64_t (**)(void))(STACK[0x3C0] + 8 * ((14420 * (v1 != 0)) ^ v0)))();
}

uint64_t sub_1000343D4(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0] + 8 * (v1 + 20542)) - 4))(a1, 33, (v1 ^ 0x5042u) - 30148, -351154003, 7894208, 947912704, 32308584, 2163637940);
}

uint64_t sub_1000345B0@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  int v9;
  int v10;
  int v11;
  char v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  unint64_t v21;
  unsigned int v22;

  v20 = *(_DWORD *)((char *)*(&off_10112C750 + a3)
                  + 4
                  * (((((v10 - ((v10 << v12) & v13) + v14) ^ LODWORD(STACK[0x318])) & v16 ^ a9)
                    + (((v10 - ((v10 << v12) & v13) + v14) ^ LODWORD(STACK[0x318])) & v15 ^ a2)
                    - 1) ^ (a9 + 69))
                  + a4);
  HIDWORD(v21) = v20 ^ a5;
  LODWORD(v21) = v20 ^ a6;
  v22 = (v21 >> 23) - (a7 & (2 * (v21 >> 23))) + a8;
  *(_DWORD *)(a1 + 4 * ((v10 - (((_BYTE)v10 << v12) & v13) + v14) ^ v18)) = LODWORD(STACK[0x2B0]) ^ v22 ^ (v22 >> 7) ^ (v22 >> 3) ^ v17;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v11 == 0) * v19) ^ v9)) - 4))();
}

uint64_t sub_10003465C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x330])(1032);
  *(_QWORD *)(v1 - 200) = v2;
  return (*(uint64_t (**)(void))(STACK[0x3C0] + 8 * ((27414 * (v2 != 0)) ^ (v0 - 3828))))();
}

uint64_t sub_100034694(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x3C0] + 8 * ((49401 * ((v1 + 1879822880) < 0x274E5290)) ^ (v1 + 5929)))
                                                                                               - 12))(a1, 2096788683, 1951164257, 49 * (v1 ^ 0x2877u) - 13110, -1772057518, 2291235982, 5548);
}

uint64_t sub_10003483C@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, int a8@<W8>)
{
  unsigned int v8;
  char v9;
  char v10;
  int v11;
  char v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;

  v16 = (v9 - (v10 & v12));
  v17 = LODWORD(STACK[0x238]) ^ LODWORD(STACK[0x240]) ^ ((v13 ^ v16) - (v14 & (2 * (v13 ^ v16))) + a2);
  *(_DWORD *)(a1 + 4 * (v16 ^ v8)) = v15 ^ LODWORD(STACK[0x234]) ^ v17 ^ a6 ^ *(_DWORD *)((char *)*(&off_10112C750 + a4)
                                                                                          + 4 * (v17 ^ a3)
                                                                                          + a5);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * (((v11 == 0) * a7) ^ a8)) - 12))();
}

uint64_t sub_1000348C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  int a64;
  int a65;
  int a67;
  int a68;
  int a70;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int a83;
  int a84;
  int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  int v88;
  int v89;
  unint64_t v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  int v96;
  int v97;
  unsigned __int8 v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  unsigned __int8 v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  unsigned int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  unsigned int v153;
  int v154;
  int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unint64_t v159;
  int v160;
  int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  int v193;
  unsigned int v194;
  unint64_t v195;
  int v196;
  unsigned int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  unsigned int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  int v217;
  unsigned __int8 v218;
  unsigned int v219;
  int v220;
  unsigned int v221;
  unsigned int v222;
  int v223;
  int v224;
  int v225;
  unsigned int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  int v230;
  int v231;
  int v232;
  unsigned int v233;
  int v234;
  char v235;
  int v236;
  unsigned int v237;
  int v238;
  int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  char *v243;
  int v244;
  char *v245;
  int v246;
  int v247;
  char *v248;
  char *v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  int v264;
  unsigned int v265;
  unsigned int v266;
  int v267;
  int v268;
  int v269;
  char v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  uint64_t v275;
  uint64_t v276;
  unsigned int v277;
  uint64_t v278;
  unint64_t v279;
  int v280;
  unint64_t v281;
  unsigned int v282;
  int v283;
  BOOL v284;
  uint64_t v285;
  int v286;
  uint64_t v287;
  unsigned int v288;
  uint64_t v289;
  unsigned int v290;
  uint64_t v291;
  uint64_t v292;
  int v293;
  unsigned int v294;
  uint64_t v295;
  uint64_t v296;
  unsigned int v297;
  uint64_t v298;
  unsigned int v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  int v303;
  unsigned int v304;
  int v305;
  int v306;
  int v307;
  uint64_t v308;
  unsigned int v309;
  uint64_t v310;
  uint64_t v311;
  int v312;
  uint64_t v313;
  unsigned int v314;
  uint64_t v315;
  int v316;
  int v317;
  unsigned int v318;
  uint64_t v319;
  int v320;
  uint64_t v321;
  int v322;
  uint64_t v323;
  unsigned int v324;
  int v325;
  uint64_t v326;
  unsigned int v327;
  uint64_t v328;
  unsigned int v329;
  uint64_t v330;
  uint64_t v331;
  unsigned int v332;
  uint64_t v333;
  unsigned int v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  unsigned int v338;
  uint64_t v339;
  uint64_t v340;
  int v341;
  uint64_t v342;
  unsigned int v343;
  unsigned int v344;
  uint64_t v345;
  unsigned int v346;
  uint64_t v347;
  int v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  unsigned int v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  unsigned int v356;
  uint64_t v357;
  uint64_t v358;
  int v359;
  uint64_t v360;
  int v361;
  int v362;
  unsigned int v363;
  uint64_t v364;
  unsigned int v365;
  uint64_t v366;
  uint64_t v367;
  unsigned int v368;
  uint64_t v369;
  int v370;
  uint64_t v371;
  int v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  unsigned int v376;
  uint64_t v377;
  uint64_t v378;
  int v379;
  int v380;
  uint64_t v381;
  int v382;
  uint64_t v383;
  unsigned int v384;
  uint64_t v385;
  int v386;
  int v387;
  int v388;
  uint64_t v389;
  int v390;
  int v391;
  int v392;
  int v393;
  uint64_t v394;
  int v395;
  int v396;
  int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  int v401;
  int v402;
  unsigned int v403;
  int v404;
  unint64_t v405;
  int v406;
  int v407;
  int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  unsigned int v413;
  int v414;
  unsigned int v415;
  unsigned int v416;
  int v417;
  int v418;
  int v419;
  unsigned int v420;
  int v421;
  int v422;
  unsigned int v423;
  int v424;
  unsigned int v425;
  int v426;
  int v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  unsigned int v432;
  int v433;
  uint64_t v434;
  unsigned int v435;
  uint64_t v436;
  int v437;
  uint64_t v438;
  uint64_t v439;
  unsigned int v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  unsigned int v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  unsigned int v452;
  uint64_t v453;
  uint64_t v454;
  unsigned int v455;
  uint64_t v456;
  unsigned int v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  unsigned int v465;
  uint64_t v466;
  uint64_t v467;
  unsigned int v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  int v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  int v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  char *v504;
  _BYTE *v505;
  char *v506;
  char *v507;
  char *v508;

  v86 = *(unsigned __int8 *)STACK[0x3B0];
  v87 = STACK[0x3B0];
  v88 = -1278422403 * (((2 * (v86 ^ 0xCA)) & 0xFFFFFFF7) + (v86 ^ 0xBEEFFD35));
  v89 = v84;
  v90 = (v84 - 2212);
  STACK[0x3A0] = v90;
  v91 = (((v88 - 242591338) % (v90 ^ 0x2826)) ^ 0xDF77FAFE)
      - v88
      + ((2 * ((v88 - 242591338) % (v90 ^ 0x2826))) & 0x1FC);
  v92 = (v91 - ((2 * v91 + 1844537044) & 0x7C4BA4CE) - 182549039) ^ 0x4A708A27;
  v93 = v92 - ((2 * v92 - 1414235510) & 0xF19F7256) - 827722128;
  v94 = (((v93 ^ 0x50FC872E) - 1440365892) ^ 0x2FFEB7BF)
      - 547365897
      + ((2 * ((v93 ^ 0x50FC872E) - 1440365892)) & 0x5FFD6F7E);
  v95 = (v93 ^ 0x50FC872E) - ((2 * (v93 ^ 0x50FC872E) + 267784190) & 0x82CFA230) - 916268777;
  LODWORD(v90) = (v93 ^ 0x24A9DF6E)
               + v94
               + (((v93 ^ 0xEE64A9C9 ^ v95) + 16840458) ^ 0x7F47FF7B)
               + ((2 * ((v93 ^ 0xEE64A9C9 ^ v95) + 16840458)) & 0xFE8FFEF6)
               + 1901685968;
  LODWORD(v90) = ((2 * v90) & 0x6BD7EF2C) + (v90 ^ 0x35EBF796);
  v96 = ((2 * (v90 - 904656790 + (v95 ^ 0x4167D118))) & 0xF66BEFD6)
      + ((v90 - 904656790 + (v95 ^ 0x4167D118)) ^ 0xFB35F7EB);
  v97 = (v93 ^ 0xDB562091 ^ (v90 - 904656790))
      - ((2 * (v93 ^ 0xDB562091 ^ (v90 - 904656790))) & 0x1DF2788C)
      - 1896268730;
  v98 = (v90 - ((2 * v90 - 44) & 0xFB) - 25) ^ *(_BYTE *)(v87 + 1);
  v99 = v94 - 270689040 + v90;
  LODWORD(v90) = -1278422403 * ((v98 ^ 0x565BFF82) + 2 * (v98 ^ 0x7D)) - v90;
  LODWORD(v90) = v96
               - v90
               + ((((int)v90 + 1420464134) % 0x101u) ^ 0x9BF4D6DD)
               + ((2 * (((int)v90 + 1420464134) % 0x101u)) & 0x1BA);
  LODWORD(v90) = (v97 ^ 0xC96341C1 ^ (v90 - ((2 * v90 + 676676196) & 0x8F34FB0E) + 1539645113)) - v99;
  LODWORD(v90) = v90 - ((2 * v90 + 173035640) & 0x19CB021E) + 1108191563;
  v100 = (v90 ^ 0x24D6BF0A) + v96 - ((2 * ((v90 ^ 0x24D6BF0A) + v96) + 160698412) & 0x6828E99C) - 1193378588;
  v101 = ((v99 - 891824187 + (v90 ^ 0x24D6BF0A)) ^ 0x2BFFDBBF)
       - 18317477
       + ((2 * (v99 - 891824187 + (v90 ^ 0x24D6BF0A))) & 0x57FFB77E);
  v102 = v90 ^ v97;
  LODWORD(v90) = (v102 ^ 0xAA2F834C) + (v90 ^ 0x6F3D343B ^ v100) + 1;
  v103 = v101 + (v90 ^ 0xE7F6F5FF) + ((2 * v90) & 0xCFEDEBFE);
  LODWORD(v90) = v103 + 716945631;
  v103 -= 299784719;
  v104 = (v103 ^ v102 ^ 0x55D07CB3)
       - 181056379
       + ((2 * ((v103 ^ v102 ^ 0x55D07CB3) & 0x75354C85 ^ (v103 ^ v102) & 1)) ^ 0xFFFFFFFD);
  v105 = ((2 * (v103 + (v100 ^ 0xB41474CE))) & 0x77EFEBBE) + ((v103 + (v100 ^ 0xB41474CE)) ^ 0x3BF7F5DF);
  v106 = (v90 + (~(2 * v90 + 36) | 0xFFFFFFD7) - 89) ^ *(unsigned __int8 *)(v87 + 2);
  LODWORD(STACK[0x3A8]) = v106;
  v107 = v90 + v101;
  LODWORD(v90) = -1278422403 * (((2 * (v106 ^ 0x94)) & 0xCE) + (v106 ^ 0xA2BFF6F3)) - v90;
  LODWORD(v90) = v105
               - v90
               + ((((int)v90 - 74970474) % 0x101u) ^ 0x7FCFD4FD)
               + ((2 * (((int)v90 - 74970474) % 0x101u)) & 0x1FA)
               - 434886579;
  LODWORD(v90) = (v104 ^ 0xE0437EB ^ (v90 - ((2 * v90 - 986184574) & 0xF662F6DE) + 1573748144)) - v107;
  LODWORD(v90) = v90 - ((2 * v90 + 251976720) & 0x2BAC66EC) + 2102960510;
  v108 = ((v107 - 1736601095 + (v90 ^ 0x3DE50D73)) ^ 0x53EE7E93)
       - 1074029569
       + ((2 * (v107 - 1736601095 + (v90 ^ 0x3DE50D73))) & 0xA7DCFD26);
  v109 = (v90 ^ 0x3DE50D73) + v105 - ((2 * ((v90 ^ 0x3DE50D73) + v105) - 2012212156) & 0xFD472B82) + 1118543843;
  v110 = v90 ^ v104;
  v111 = (v90 ^ v104 ^ 0xC8D041F7)
       + (((v90 ^ 0xBCB9674D ^ v109) + 16840458) ^ 0x9F3B7F5D)
       + ((2 * ((v90 ^ 0xBCB9674D ^ v109) + 16840458)) & 0x3E76FEBA)
       + 1623490724;
  v112 = v108 + (v111 ^ 0x7C3FBB66) + ((2 * v111) & 0xF87F76CC);
  LODWORD(v90) = v112 - 67569666;
  v113 = v112 + 1876306440;
  v114 = ((2 * (v112 + 1876306440 + (v109 ^ 0x7EA395C1))) & 0xDFBDF5FE)
       + ((v112 + 1876306440 + (v109 ^ 0x7EA395C1)) ^ 0xEFDEFAFF);
  v115 = (v110 ^ 0x372FBE08 ^ v113) - ((2 * (v110 ^ 0x372FBE08 ^ v113)) & 0x5FC1495E) + 803251375;
  v116 = (v90 + (~(2 * v90 + 20) | 0x1D) - 4) ^ *(unsigned __int8 *)(v87 + 3);
  v117 = v90 + v108;
  LODWORD(v90) = -1278422403 * (((2 * (v116 ^ 0xF1)) & 0x17C) + (v116 ^ 0xDFDDFE4F)) - v90;
  LODWORD(v90) = v114
               - v90
               + ((((int)v90 + 1446728995) % 0x101u) ^ 0x6E8AF7EF)
               + ((2 * (((int)v90 + 1446728995) % 0x101u)) & 0x3DE);
  LODWORD(v90) = (v115 ^ 0xD1FDF4F5 ^ (v90
                                     - 1809711033
                                     - 2 * ((v90 - 883247121) & 0x7E1D505F ^ (v90 - 1809711033) & 5)
                                     - 1252653054))
               - v117;
  LODWORD(v90) = v90 - ((2 * v90 + 1691920) & 0x224CF4D0) - 1322032400;
  v118 = ((v117 + 1609766777 + (v90 ^ 0x3915446D)) ^ 0x759FFEBF)
       - 889664650
       + ((2 * (v117 + 1609766777 + (v90 ^ 0x3915446D))) & 0xEB3FFD7E);
  v119 = (v90 ^ 0x3915446D) + v114 - ((2 * ((v90 ^ 0x3915446D) + v114) + 541198852) & 0x37B915D2) - 1409445909;
  v120 = v90 ^ v115;
  v121 = (v90 ^ v115 ^ 0x16F5E0C2)
       + v118
       + (((v90 ^ 0x5D36317B ^ v119) + 16840458) ^ 0x7D13BFFF)
       + ((2 * ((v90 ^ 0x5D36317B ^ v119) + 16840458)) & 0xFA277FFE)
       + 1112765901;
  LODWORD(v90) = ((2 * v121) & 0xBEFD7FFC) + (v121 ^ 0x5F7EBFFE);
  v122 = ((2 * (v90 - 1602142206 + (v119 ^ 0x9BDC8AE9))) & 0xDEBE9E5C)
       + ((v90 - 1602142206 + (v119 ^ 0x9BDC8AE9)) ^ 0xEF5F4F2E);
  v123 = (v120 ^ 0xE90A1F3D ^ (v90 - 1602142206))
       - ((2 * (v120 ^ 0xE90A1F3D ^ (v90 - 1602142206))) & 0xDC24A7E2)
       + 1846694897;
  v124 = (v90 - ((2 * v90 + 4) & 0x7A) - 65) ^ *(unsigned __int8 *)(v87 + 4);
  v125 = v118 - 1094713512 + v90;
  LODWORD(v90) = -1278422403 * (((2 * (v124 ^ 0xBD)) & 0x1DE) + (v124 ^ 0xE3F73F52)) - v90;
  LODWORD(v90) = v122
               - v90
               + ((((int)v90 + 1002192958) % 0x101u) ^ 0xF33EDFDF)
               + ((2 * (((int)v90 + 1002192958) % 0x101u)) & 0x3BE);
  LODWORD(v90) = (v123 ^ 0x1B08AE4C ^ (v90 - ((2 * v90 - 1018486422) & 0xEA35FB7A) + 1455459954)) - v125;
  LODWORD(v90) = v90 - ((2 * v90 - 1112599786) & 0xF0161C34) - 689793115;
  v126 = (v90 ^ 0x5038301F) + v122 - ((2 * ((v90 ^ 0x5038301F) + v122) + 557932966) & 0x839F317C) - 764393071;
  v127 = ((v125 - 1591183754 + (v90 ^ 0x5038301F)) ^ 0xAF69DABB)
       + 2144841728
       + ((2 * (v125 - 1591183754 + (v90 ^ 0x5038301F))) & 0x5ED3B576);
  v128 = v90 ^ v123;
  LODWORD(v90) = (v128 ^ 0x3E2A63EE) + (v90 ^ 0x6E08575E ^ v126) + 1;
  LODWORD(v90) = v90 - ((2 * v90) & 0x1C4F5E2C) + 237481750;
  v129 = (v90 & 0x100F70A ^ 0x2FFF587D) - 697878538 + ((2 * (v90 & 0x100F70A)) ^ 0x14E04);
  LODWORD(v90) = v129
               + ((v127 + (v90 ^ 0xF27581C) - 900252208 + v129) ^ 0x7FDDFF49)
               + ((2 * (v127 + (v90 ^ 0xF27581C) - 900252208 + v129)) & 0xFFBBFE92);
  v130 = v90 - 830540801;
  LODWORD(v90) = v90 + 2042284354;
  v131 = (v128 ^ 0xC1D59C11 ^ v90) - ((2 * (v128 ^ 0xC1D59C11 ^ v90)) & 0x87C53258) + 1138923820;
  v132 = ((2 * (v90 + (v126 ^ 0xC1CF98BE))) & 0xF7EB2AB6) + ((v90 + (v126 ^ 0xC1CF98BE)) ^ 0xFBF5955B);
  v133 = (v130 - ((2 * v130 - 122) & 0xAC) - 103) ^ *(_BYTE *)(v87 + 5);
  v134 = v127 + 105877386 + v130;
  LODWORD(v90) = -1278422403 * ((v133 ^ 0x6DFFFFA9) + 2 * (v133 ^ 0x56)) - v130;
  LODWORD(v90) = v132 - v90 + 2 * (((int)v90 + 1617871661) % 0x101u) + ((((int)v90 + 1617871661) % 0x101u) ^ 0xF2FF05FF);
  LODWORD(v90) = (v131 ^ 0xB5B1135A ^ (v90 - ((2 * v90 + 1631142642) & 0xECA714EC) - 1494209553)) - v134;
  LODWORD(v90) = v90 - ((2 * v90 + 346720772) & 0x56172478) - 1251944642;
  v135 = ((2 * (v132 + 67791526 + (v90 ^ 0x338AC39))) & 0xEFFEF9F4)
       + ((v132 + 67791526 + (v90 ^ 0x338AC39)) ^ 0xF7FF7CFA);
  v136 = ((v134 + 1974123263 + (v90 ^ 0x338AC39)) ^ 0x7FB3E687)
       - 27435142
       + ((2 * (v134 + 1974123263 + (v90 ^ 0x338AC39))) & 0xFF67CD0E);
  v137 = v90 ^ v131;
  v138 = (v137 ^ 0x40DA3515)
       + (((v90 ^ 0xFCC753C6 ^ (v135 + 134251270))
         - ((2 * (v90 ^ 0xFCC753C6 ^ (v135 + 134251270))) & 0x3B84F08C)
         + 499284038) ^ 0x1DC27846)
       + 1;
  v139 = v136 + (v138 ^ 0x6EF7B97B) + ((2 * v138) & 0xDDEF72F6);
  v140 = v139 - 1650295351;
  v141 = (v137 ^ 0xBF25CAEA ^ (v139 + 335017870))
       - ((2 * (v137 ^ 0xBF25CAEA ^ (v139 + 335017870))) & 0xC5D02DCC)
       + 1659377382;
  v142 = (v139 - 1650295351 - ((2 * ((_BYTE)v139 - 55) + 10) & 0x60) - 11) ^ *(unsigned __int8 *)(v87 + 6);
  LODWORD(STACK[0x39C]) = v142;
  LODWORD(v90) = v135 + 786208766 + v140;
  v143 = v140 + v136;
  v144 = -1278422403 * (((2 * (v142 ^ 0x30)) & 0xBC) + (v142 ^ 0x7FFFB26E)) - v140;
  v145 = v90
       - v144
       + (((v144 + 2054494280) % 0x101) ^ 0x7F73BD7E)
       + ((2 * ((v144 + 2054494280) % 0x101)) & 0x2FC)
       + 1516023434;
  v146 = (v141 ^ 0x3C86882D ^ (v145 - ((2 * v145 - 160972550) & 0xBCDD3D96) + 1503821640)) - v143;
  v147 = v146 - ((2 * v146 + 259496056) & 0x4C373F4C) + 769092578;
  v148 = v147 ^ 0x28134A7F;
  v149 = v147 ^ 0xE28A1A3;
  v150 = (v147 ^ 0xE28A1A3) + v90 - ((2 * ((v147 ^ 0xE28A1A3) + v90) + 519227804) & 0x2DE410C2) + 1718316335;
  LODWORD(v90) = v149 + v143 - ((2 * (v149 + v143) + 1887987594) & 0x6B8795EC) + 772275899;
  v151 = v148 ^ v141;
  v152 = v150 ^ v148;
  v153 = v150 ^ v148 ^ 0xCF361C42;
  v154 = v90 ^ 0x35C3CAF6;
  v155 = 2 * ((v153 & (v90 ^ 0x35C3CAF6)) - ((2 * (v153 & (v90 ^ 0x35C3CAF6))) & 0x6F2AB124)) - 282414812;
  LODWORD(v90) = (v90 ^ 0xFAF5D6B4 ^ v152) + (v155 ^ 0x16954E18) + 104857796 + ((2 * v155) & 0xF37FFE78 ^ 0xD2556248);
  LODWORD(v90) = (v151 ^ 0x44D3FD3A) + (v90 ^ 0x79FD7FBA) + ((2 * v90) & 0xF3FAFF74) - 2046656441;
  v156 = ((2 * v90) & 0xDDFC7FE8) + (v90 ^ 0xEEFE3FF4);
  v157 = ((v156 + 302167830) ^ v151 ^ 0xBB2C02C5)
       - 2 * (((v156 + 302167830) ^ v151 ^ 0xBB2C02C5) & 0x53A737FB ^ ((v156 + 302167830) ^ v151) & 0x10)
       + 1403467755;
  LODWORD(v90) = ((2 * (v156 + 302167830 + (v150 ^ 0x16F20861))) & 0xB5B6A77A)
               + ((v156 + 302167830 + (v150 ^ 0x16F20861)) ^ 0xDADB53BD);
  v158 = ((2 * (v156 + 302167830 + v154)) & 0xDB4F3AFA) + ((v156 + 302167830 + v154) ^ 0xEDA79D7D);
  v159 = (v156 - ((2 * v156 + 44) & 0xFFFFFFDF) + 5) ^ *(unsigned __int8 *)(v87 + 7);
  STACK[0x390] = v159;
  v160 = -1278422403 * (((2 * (v159 ^ 0xEF)) & 0x1FA) + (v159 ^ 0xD8FCBF12)) - v156;
  v161 = v90 - v160 + (((v160 - 833108396) % 0x101u) ^ 0xDE6F3D7) + ((2 * ((v160 - 833108396) % 0x101u)) & 0x3AE);
  v162 = (v157 ^ 0x17353A6A ^ (v161 - ((2 * v161 - 1848908752) & 0x89241B02) - 1921515623)) - v158;
  v163 = v162 - ((2 * v162 - 615564550) & 0xBEB193BA) + 1291872090;
  LODWORD(v90) = (v163 ^ 0x776BF7D8)
               + v90
               - 2 * (((v163 ^ 0x776BF7D8) + v90 + 86289476) & 0xBCF4A97 ^ ((v163 ^ 0x776BF7D8) + v90) & 2)
               - 1326188839;
  v164 = ((2 * (v158 + 307782276 + (v163 ^ 0x776BF7D8))) & 0x27BFFDD4)
       + ((v158 + 307782276 + (v163 ^ 0x776BF7D8)) ^ 0x93DFFEEA);
  v165 = v163 ^ v157;
  v166 = (v165 ^ 0x24CCC033)
       + ((v164 + 1814036758 + (v163 ^ 0x35B42B2 ^ v90)) ^ 0x63FD66EE)
       + ((2 * (v164 + 1814036758 + (v163 ^ 0x35B42B2 ^ v90))) & 0xC7FACDDC)
       - 1677551341;
  v167 = ((2 * v166) & 0xF7F7EFFE) + (v166 ^ 0x7BFBF7FF);
  v168 = (v165 ^ 0xDB333FCC ^ (v167 - 2063270133))
       - ((2 * (v165 ^ 0xDB333FCC ^ (v167 - 2063270133))) & 0xC35B495C)
       + 1638769838;
  LODWORD(v90) = ((2 * (v167 - 2063270133 + (v90 ^ 0x8BCF4A95))) & 0xFFBF3FEC)
               + ((v167 - 2063270133 + (v90 ^ 0x8BCF4A95)) ^ 0x7FDF9FF6);
  v169 = (-14 - v167 - ((2 * v167) | 0xFFFFFFFD)) ^ *(unsigned __int8 *)(v87 + 8);
  v170 = v167 + v164;
  v171 = -1278422403 * (((2 * (v169 ^ 0xFE)) & 0x6E) + (v169 ^ 0x7B5B7FC9)) - v167;
  v172 = v90 - v171 + (((v171 + 1778158349) % 0x101) ^ 0xEF2FF7DE) + ((2 * ((v171 + 1778158349) % 0x101)) & 0x3BC);
  v173 = (v168 ^ 0xEC832488 ^ (v172 - ((2 * v172 + 233290302) & 0x1A5D004C) - 1272816315)) - v170;
  v174 = v173 - ((2 * v173 + 498466750) & 0x94209958) + 1491815563;
  LODWORD(v90) = (v174 ^ 0x622372A9) + v90 - ((2 * ((v174 ^ 0x622372A9) + v90) + 4243478) & 0x9C77D3EC) - 832812543;
  v175 = ((v170 - 249233374 + (v174 ^ 0x622372A9)) ^ 0xF7FFF39F)
       + 756276992
       + ((2 * (v170 - 249233374 + (v174 ^ 0x622372A9))) & 0xEFFFE73E);
  v176 = v174 ^ v168;
  v177 = (v176 ^ 0x38ED607)
       + 142210
       + (((v174 ^ 0xD3E764A0 ^ v90) + 16840458) ^ 0xFFFDD47F)
       + ((2 * ((v174 ^ 0xD3E764A0 ^ v90) + 16840458)) & 0xFFFBA8FE);
  v178 = v175 + (v177 ^ 0xA9EFECE) + ((2 * v177) & 0x153DFD9C);
  v179 = v178 - 33863372;
  v180 = (v178 - 33863372 + (~(2 * (v178 - 33863372) + 62) | 0xFFFFFF8D) + 25) ^ *(unsigned __int8 *)(v87 + 9);
  v178 -= 800248173;
  LODWORD(v90) = ((2 * (v178 + (v90 ^ 0x4E3BE9F6))) & 0xF7FFFB7E) + ((v178 + (v90 ^ 0x4E3BE9F6)) ^ 0xFBFFFDBF);
  v181 = (v176 ^ 0xFC7129F8 ^ v178) - ((2 * (v176 ^ 0xFC7129F8 ^ v178)) & 0x514F051C) + 682066574;
  v182 = v179 + v175;
  v183 = -1278422403 * (((2 * (v180 ^ 0xB9)) & 0xBA) + (v180 ^ 0xE5FBB9E4)) - v179;
  v184 = v90
       - v183
       + (((v183 - 1267198933) % 0x101) ^ 0xFEF2EF7F)
       + ((2 * ((v183 - 1267198933) % 0x101)) & 0x2FE)
       - 1589056398;
  v185 = (v181 ^ 0x6599F0B1 ^ (v184 - ((2 * v184 + 1587029066) & 0x9A7CE47E) - 58031004)) - v182;
  v186 = v185 - ((2 * v185 - 1518085504) & 0xCB9203C6) + 948629283;
  LODWORD(v90) = (v186 ^ 0xCDFA3FE6) + v90 - ((2 * ((v186 ^ 0xCDFA3FE6) + v90) + 134218884) & 0x4093982E) - 1538666919;
  v187 = ((v182 - 1388440895 + (v186 ^ 0xCDFA3FE6)) ^ 0x5BF77E77)
       - 134149
       + ((2 * (v182 - 1388440895 + (v186 ^ 0xCDFA3FE6))) & 0xB7EEFCEE);
  v188 = v186 ^ v181;
  v189 = (v188 ^ 0xE55DBD68)
       + (((v186 ^ 0x924C0C0E ^ v90) + 16840458) ^ 0x4FD3A852)
       + ((2 * ((v186 ^ 0x924C0C0E ^ v90) + 16840458)) & 0x9FA750A4)
       - 1339271249;
  v190 = v187 + (v189 ^ 0x6FEF3F7B) + ((2 * v189) & 0xDFDE7EF6);
  v191 = v190 - 754982914;
  v192 = v190 + 874204691;
  v193 = ((2 * (v190 + 874204691 + (v90 ^ 0xA049CC17))) & 0xBFDBDE3A)
       + ((v190 + 874204691 + (v90 ^ 0xA049CC17)) ^ 0xDFEDEF1D);
  v194 = (v192 ^ v188 ^ 0x1AA24297)
       + 1445029794
       + ((2 * ((v192 ^ v188 ^ 0x1AA24297) & 0x562167A3 ^ (v192 ^ v188) & 2)) ^ 0xFFFFFFFB);
  v195 = v87;
  v196 = (v191 + (~(2 * v191 + 42) | 0x67) - 30) ^ *(unsigned __int8 *)(v87 + 10);
  LODWORD(STACK[0x38C]) = v196;
  v197 = v191 + v187;
  LODWORD(v90) = -1278422403 * (((2 * (v196 ^ 0xCC)) & 0x1BE) + (v196 ^ 0x6F7BBD13)) - v191;
  LODWORD(v90) = v193
               - v90
               + ((((int)v90 - 2132691973) % 0x101u) ^ 0xBBBF7F4D)
               + ((2 * (((int)v90 - 2132691973) % 0x101u)) & 0x29A)
               - 2036807868;
  LODWORD(v90) = (v194 ^ 0x65C1E8C ^ (v90 - ((2 * v90 - 1179636562) & 0xA0FAF25A) - 1386901628)) - v197;
  LODWORD(v90) = v90 - ((2 * v90 + 1974732986) & 0x6358AB08) - 1400481311;
  v198 = (v90 ^ 0x999F6B81) + v193 - ((2 * ((v90 ^ 0x999F6B81) + v193) + 1076109768) & 0x76161E3A) + 1528635393;
  v199 = ((v197 + 86375332 + (v90 ^ 0x999F6B81)) ^ 0x7F4BBFBF)
       - 1091176960
       + ((2 * (v197 + 86375332 + (v90 ^ 0x999F6B81))) & 0xFE977F7E);
  v200 = v90 ^ v194;
  v201 = (v90 ^ v194 ^ 0xCFBE0C20) + (v90 ^ 0x5D6B9B63 ^ v198) + 1;
  LODWORD(v90) = v199 + (v201 ^ 0x7F3F4E70) + ((2 * v201) & 0xFE7E9CE0);
  v202 = v199 - 606772217;
  v203 = ((2 * (v90 + 1132458715 + (v198 ^ 0x3B0B0F1D))) & 0xBBDFEF56)
       + ((v90 + 1132458715 + (v198 ^ 0x3B0B0F1D)) ^ 0x5DEFF7AB);
  v204 = (v200 ^ 0x3041F3DF ^ (v90 + 1132458715))
       - ((2 * (v200 ^ 0x3041F3DF ^ (v90 + 1132458715))) & 0xA1351B36)
       - 795177573;
  v205 = (v90 - 1149602185 - 2 * ((v90 - 1149602181) & 0xD ^ (v90 - 1149602185) & 1) + 112) ^ *(unsigned __int8 *)(v87 + 11);
  v206 = v202 + v90 - 1149602185;
  v207 = -1278422403 * (((2 * (v205 ^ 0xC)) & 0xDE) + (v205 ^ 0xC2FDFB63)) - (v90 - 1149602185);
  v208 = v203 - v207 + (((v207 - 31492516) % 0x101u) ^ 0x6F7A7DBE) + ((2 * ((v207 - 31492516) % 0x101u)) & 0x37C);
  v209 = (v204 ^ 0x403A738E ^ (v208 - ((2 * v208 + 686565494) & 0x2141FC2A) - 988343728)) - v206;
  LODWORD(v90) = v209 - ((2 * v209 + 606288580) & 0x37E76002) + 772099427;
  v210 = ((2 * (v206 + 1844339359 + (v90 ^ 0xB3C08E04))) & 0x2ACFF55E)
       + ((v206 + 1844339359 + (v90 ^ 0xB3C08E04)) ^ 0x9567FAAF);
  v211 = ((2 * (v203 - 1576007594 + (v90 ^ 0xB3C08E04))) & 0xE1CB77FA)
       + ((v203 - 1576007594 + (v90 ^ 0xB3C08E04)) ^ 0xF0E5BBFD);
  v212 = v90 ^ v204;
  v213 = v210
       + 1788347729
       + (((v90 ^ 0x4C3F71FB ^ (v211 + 253379587))
         - ((2 * (v90 ^ 0x4C3F71FB ^ (v211 + 253379587))) & 0x64974878)
         + 843818044) ^ 0x324BA43C);
  v214 = (v212 ^ 0x635A039F) + (v213 ^ 0x3FF7ED76) + ((2 * v213) & 0x7FEFDAEC) - 1073212789;
  v215 = ((2 * v214) & 0x57DD3EF8) + (v214 ^ 0xABEE9F7C);
  LODWORD(v90) = v211 + 2143016959;
  v216 = ((v215 + 1427265422) ^ v212 ^ 0x9CA5FC60)
       - 2 * (((v215 + 1427265422) ^ v212 ^ 0x9CA5FC60) & 0x9F228FF ^ ((v215 + 1427265422) ^ v212) & 6)
       + 166865145;
  LODWORD(v90) = v90 + v215 + 1677369586;
  v217 = v210 + 2124393981 + v215 + 1677369586;
  v218 = (v215 - ((2 * v215 + 28) & 0x7A) + 75) ^ *(_BYTE *)(v87 + 12);
  v219 = -1278422403 * (2 * ((v218 ^ 0xBD) & 0x3F) + (v218 ^ 0x5FF0AD82)) - v215;
  v220 = v90 - v219 + (((v219 + 1458907298) % 0x101) ^ 0x9A3DFB73) + ((2 * ((v219 + 1458907298) % 0x101)) & 0x2E6);
  v221 = (v216 ^ 0xA17FD71C ^ (v220 - ((2 * v220 + 512097558) & 0x511BFFCA) + 936443504)) - v217;
  v222 = v221 - ((2 * v221 + 1172300832) & 0xC5B4C8F2) - 2050337143;
  LODWORD(v90) = ((2 * (v90 - 2139741535 + (v222 ^ 0x4AE95A7C))) & 0xACAFD6FC)
               + ((v90 - 2139741535 + (v222 ^ 0x4AE95A7C)) ^ 0x5657EB7E);
  v223 = ((v217 - 586150415 + (v222 ^ 0x4AE95A7C)) ^ 0x37FFBEF7)
       - 118009924
       + ((2 * (v217 - 586150415 + (v222 ^ 0x4AE95A7C))) & 0x6FFF7DEE);
  v224 = v222 ^ v216;
  v225 = (v222 ^ v216 ^ 0x431B7285)
       + (((v222 ^ 0xB516A583 ^ (v90 - 1448602494))
         - ((2 * (v222 ^ 0xB516A583 ^ (v90 - 1448602494))) & 0xEEB72C3E)
         + 2002490911) ^ 0x775B961F)
       + 1;
  v226 = v223 + (v225 ^ 0xC71B3FFD) + ((2 * v225) & 0x8E367FFA);
  v227 = v90 - 33718380 + v226 - 2110091443;
  v228 = v226 - 2110091443 + v223;
  LODWORD(v90) = v226 + 2063585275;
  v229 = (v224 ^ 0xBCE48D7A ^ (v226 + 149858394))
       - ((2 * (v224 ^ 0xBCE48D7A ^ (v226 + 149858394))) & 0xF12B7164)
       + 2023078066;
  v230 = 2 * (v226 + 2063585275);
  LODWORD(v159) = *(unsigned __int8 *)(v87 + 13);
  v231 = ((v226 + 2063585275 + (~(v230 - 66) | 3) - 34) ^ v159) & 0xFFFFFFA8;
  v232 = ((v231 | 0x38) - (v231 | 0xFFFFFFC4) - 60) ^ 0x10 | ((v90 - (((_BYTE)v230 + 62) & 0x20) + 111) ^ v159) & 0x57 ^ 0x10;
  v233 = v232 + (~(2 * v232) | 0xFFFFFFC7) - 99;
  LODWORD(v90) = -1278422403 * (((2 * (v233 ^ 0x9C)) & 0x1F6) + (v233 ^ 0x93FF5367)) - v90;
  LODWORD(v90) = v227
               - v90
               + ((((int)v90 + 1549469189) % 0x101u) ^ 0xBEFCFFCF)
               + ((2 * (((int)v90 + 1549469189) % 0x101u)) & 0x39E);
  LODWORD(v90) = (v229 ^ 0x71319832 ^ (v90 - ((2 * v90 + 235753550) & 0x13484100) + 548063399)) - v228;
  LODWORD(v90) = v90 - ((2 * v90 + 344320844) & 0x1D4BB766) + 954782041;
  v234 = (v90 ^ 0xA696E5B6) + v228 + 1100208721 + (~(2 * ((v90 ^ 0xA696E5B6) + v228) - 1418062666) | 0x28526015);
  LODWORD(v87) = (v90 ^ 0xA696E5B6) + v227 - ((2 * ((v90 ^ 0xA696E5B6) + v227) + 1690131448) & 0xF9EFB89C) + 794200650;
  v235 = v90 ^ v229;
  v236 = (v90 ^ v229 ^ 0xDE035D04)
       + (((v234 ^ 0xEBD6CFF5) + (v90 ^ 0xA59EC607 ^ v87)) ^ 0xFEDF9E0F)
       + ((2 * ((v234 ^ 0xEBD6CFF5) + (v90 ^ 0xA59EC607 ^ v87))) & 0xFDBF3C1E)
       + 18899442;
  v237 = ((2 * v236) & 0xFFBC85C8)
       + (v236 ^ 0xFFDE42E4)
       - ((2 * (((2 * v236) & 0xFFBC85C8) + (v236 ^ 0xFFDE42E4)) + 38103116) & 0xCFC3A192)
       + 1761903855;
  v238 = v237 ^ *(unsigned __int8 *)(v195 + 14);
  v239 = (v238 ^ 0xC9) - ((2 * (v238 ^ 0xC9)) & 0x5C) + 1226255662;
  v240 = ((2 * v239) ^ 0x922E5A5C) - ((2 * ((2 * v239) ^ 0x922E5A5C)) & 0x64);
  v241 = (v239 ^ 0x81475801) + ((v240 + 114) & 0x5E ^ 0xF5DDEBED) + ((2 * (_BYTE)v240 + 36) & 0x3C ^ 0x24) + 170005569;
  v242 = (v237 ^ 0x981E2F36) - 1278422403 * (((2 * v241) & 0xF624A7FE) + (v241 ^ 0xFB1253FF));
  LODWORD(STACK[0x3B8]) = v84;
  v243 = (char *)*(&off_10112C750 + v84 - 8524) - 1892478067;
  v244 = *(_DWORD *)&v243[4 * (v86 ^ 0x77)]
       - ((2 * *(_DWORD *)&v243[4 * (v86 ^ 0x77)] + 715589788) & 0x248B81E4)
       + 1738097984;
  v245 = (char *)*(&off_10112C750 + (v84 ^ 0x34F9u)) - 1355667654;
  v246 = *(_DWORD *)&v245[4 * (v98 ^ 0x57)];
  v247 = -1069978715 * v246 - ((7526218 * v246 + 2134631490) & 0x5530303A) + 708184638;
  v248 = (char *)*(&off_10112C750 + (v89 ^ 0x36FFu)) - 2091650694;
  v249 = (char *)*(&off_10112C750 + v89 - 11794) - 636197995;
  v250 = v249[v116 ^ 0x77] ^ 0x7F;
  v251 = v250 - ((2 * v250) & 0xE0) - 526122640;
  v252 = *(_DWORD *)&v243[4 * (v124 ^ 0x93)];
  v253 = v252 - ((2 * v252 - 1431893860) & 0x8B0CFD8A);
  v254 = *(_DWORD *)&v245[4 * (v133 ^ 0x60)];
  v255 = v253 + 450495251;
  v256 = v249[STACK[0x390] ^ 0xB4] ^ 0x7F;
  v257 = v256 - ((2 * v256) & 0x32) + 264324633;
  v258 = *(_DWORD *)&v243[4 * (v169 ^ 0x35)];
  v259 = *(_DWORD *)&v245[4 * (v180 ^ 0xD2)];
  v260 = v249[v205 ^ 0x2FLL];
  v261 = *(_DWORD *)&v248[4 * (LODWORD(STACK[0x38C]) ^ 0xF9)];
  v262 = (v258 - ((2 * v258 - 1431893860) & 0xB92220D2) + 837063863) ^ v261 ^ (v261 >> 3) ^ (v261 >> 4) ^ (-1069978715 * v259 - ((-2139957430 * v259 - 12852158) & 0xC357203C) - 515276225) ^ 0x492127ED;
  v263 = (v260 ^ 0xA97FDF7F) + 1451237388 + ((2 * (v260 ^ 0x80)) & 0x1E8);
  v264 = (v263 & v262) - ((2 * (v263 & v262)) & 0x1BB2CC86);
  v265 = ((2 * (v263 + v262)) & 0xB9E7E9BE)
       + ((v263 + v262) ^ 0x5CF3F4DF)
       + ((2 * v264 + 464702598) ^ 0x3832DE7F)
       + ((2 * (2 * v264 + 464702598)) & 0xB8FFDA0C ^ 0xCF9A67F3);
  v266 = v265 - ((2 * v265 - 15208366) & 0xD782C9D0) + 1800232209;
  v267 = *(_DWORD *)&v243[4 * (v218 ^ 0x8D)];
  v268 = v267 - 2 * ((v267 + 1431536718) & 0x4EE3EB1D ^ v267 & 1) - 1539870870;
  v269 = ((2 * ((v237 ^ 0x67E1D0C9) + (v87 ^ 0xFCF7DC4E))) & 0xBFEEFDFE)
       + (((v237 ^ 0x67E1D0C9) + (v87 ^ 0xFCF7DC4E)) ^ 0x5FF77EFF);
  LOBYTE(v267) = v235 ^ 0xA9 ^ v237;
  LOBYTE(v264) = (((2 * (v267 & 0x6E ^ 0x2C)) & 0x48) - (v267 & 0x6E ^ 0x2C) + 90) ^ 0x58;
  LOBYTE(v243) = 2 * (((v237 ^ 0xC9) & (v234 ^ 0xF5)) - ((2 * ((v237 ^ 0xC9) & (v234 ^ 0xF5))) & 0x40)) + 64;
  LOBYTE(v243) = (v234 ^ 0x3C ^ v237) + (v243 ^ 0xBF) + 1 + ((2 * (_BYTE)v243) & 0xFC ^ 0x80);
  LOBYTE(v243) = 2 * (_BYTE)v243 + ~(_BYTE)v243;
  v270 = ((2 * (v267 & 0x91)) | 0xB6) - (v267 & 0x91) - 91;
  v271 = *(_DWORD *)&v245[4 * (v233 ^ 0xBE)];
  LOBYTE(v245) = ((v264 | 0x5E) - (v264 | 0xA1) - 95) ^ 0x7A | v270 ^ 0xCA;
  LOBYTE(v245) = (_BYTE)v245 - ((2 * (_BYTE)v245) & 0x7E) + 63;
  LODWORD(v86) = ((2 * (v242 + 586272382)) & 0xEFF9AFFE) + ((v242 + 586272382) ^ 0x77FCD7FF);
  LODWORD(v86) = v269
               - v86
               + ((((int)v86 - 2013059071) % 0x101u) ^ 0x6FF715F7)
               + ((2 * (((int)v86 - 2013059071) % 0x101u)) & 0x3EE);
  LOBYTE(v86) = (v245 ^ 0x82 ^ (v86 - ((2 * v86 + 18) & 0x7A) - 58)) - (_BYTE)v243;
  LOBYTE(v86) = v86 - ((2 * v86 - 2) & 0x12) + 8;
  LOBYTE(v243) = ~((_BYTE)v243 + 2 + (v86 ^ 0xC))
               + 2 * ((_BYTE)v243 + 2 + (v86 ^ 0xC))
               + 1
               + (v86 ^ 0x4A ^ ((v86 ^ 0xC) + v269 - ((2 * ((v86 ^ 0xC) + v269) + 4) & 0x72) - 69));
  LOBYTE(v245) = (v245 ^ 0x33 ^ v86) + (v243 ^ 0xBF) + ((2 * (_BYTE)v243) & 0x7E) + 76;
  LODWORD(v86) = *(_DWORD *)&v248[4 * (LODWORD(STACK[0x3A8]) ^ 0x9F)];
  LODWORD(v243) = *(_DWORD *)&v248[4 * (LODWORD(STACK[0x39C]) ^ 0xD6)];
  LODWORD(v248) = *(_DWORD *)&v248[4 * (v238 ^ 0xBE)];
  LODWORD(v245) = v249[*(_BYTE *)(v195 + 15) ^ 0x6E ^ (2
                                                                                       * (v245 & 0x3F)
                                                                                       + (v245 ^ 0xBF)
                                                                                       - ((2
                                                                                         * (2
                                                                                          * (v245 & 0x3F)
                                                                                          + (v245 ^ 0xBF))
                                                                                         + 2) & 0xA)
                                                                                       - 58)] ^ 0x8B;
  LODWORD(v249) = (_DWORD)v245 + 1703059076 + (~(2 * (_DWORD)v245) | 0xFFFFFEF9);
  LODWORD(v245) = LODWORD(STACK[0x384]) ^ a74 ^ LODWORD(STACK[0x250]) ^ v244 ^ v86 ^ (v86 >> 4) ^ (v86 >> 3) ^ v247 ^ v251;
  v272 = LODWORD(STACK[0x384]) ^ a48 ^ LODWORD(STACK[0x250]) ^ v255 ^ v243 ^ (v243 >> 3) ^ (v243 >> 4) ^ (-1069978715 * v254 - ((7526218 * v254 + 2134631490) & 0x77C48AB2) + 998258554) ^ v257;
  v273 = LODWORD(STACK[0x2E0]) ^ a67 ^ LODWORD(STACK[0x278]) ^ LODWORD(STACK[0x250]) ^ v266;
  v274 = LODWORD(STACK[0x2D8]) ^ a64 ^ a73 ^ LODWORD(STACK[0x250]) ^ v248 ^ (v248 >> 4) ^ (v248 >> 3) ^ v268 ^ (-1069978715 * v271 - ((7526218 * v271 + 2134631490) & 0x5A6889C6) - 1395509500) ^ v249;
  v275 = *(_QWORD *)(v85 - 184);
  v276 = *(_QWORD *)(v85 - 256);
  v277 = (((2 * (BYTE1(v273) ^ 0x3F)) & 0xEA) - (BYTE1(v273) ^ 0x3F) - 1545207414) ^ 0xABBE018A;
  v278 = ((v277 | 0x32B9D1E0) - (v277 | 0xCD462E1F) - 851038689) ^ 0x3AE1D1F1;
  v279 = STACK[0x3C8];
  v280 = *(_DWORD *)(STACK[0x3C8]
                   + 4 * ((v278 ^ 0x2F9DDEFFBBDC937ELL) + ((2 * v278) & 0x177B926FCLL))
                   - 0x3A1A3606F1F83C2FLL);
  v281 = STACK[0x428];
  v282 = *(_DWORD *)(v275
                   + 4 * ((HIBYTE(v274) ^ 0x3FBFBFBC4BB9A71BLL) + ((2 * (HIBYTE(v274) ^ 0xA6)) & 0x17ALL))
                   - 0x2351711CFD5E790) ^ LODWORD(STACK[0x338]) ^ *(_DWORD *)(v276
                                                                              + 4
                                                                              * ((((BYTE2(v273) ^ 0xA1)
                                                                                 - ((2 * (BYTE2(v273) ^ 0xA1)) & 0x140u)
                                                                                 + 9120) ^ 0x33B7CE9ED7F95C17)
                                                                               + ((2
                                                                                 * (((BYTE2(v273) ^ 0xA1)
                                                                                   - ((2 * (BYTE2(v273) ^ 0xA1)) & 0x140)
                                                                                   + 9120) ^ 0x23E3u)) & 0x1AFF2FFE8))
                                                                              - 0x38FF3559FD798529) ^ *(_DWORD *)(STACK[0x3C8] + 4 * (((((v272 >> 8) & 0x33 ^ 0x1553D011) + ((v272 >> 8) & 0xCC ^ 0x48200449) - 1) ^ 0x3E7F73EE33AFA3C7) + ((2 * ((((v272 >> 8) & 0x33 ^ 0x1553D011) + ((v272 >> 8) & 0xCC ^ 0x48200449) - 1) ^ 0x5D73D437)) & 0xDDB8EFE0)) - 0x75A089C1BDF7CDF7) ^ *(_DWORD *)(STACK[0x428] + 4 * ((((v245 ^ 0x5FCE47C1) - ((2 * (v245 ^ 0x5FCE47C1)) & 0x228C0404u) + 290929154) ^ 0x1579E61CF0F680D9) + ((2 * (((v245 ^ 0x5FCE47C1) - ((2 * (v245 ^ 0x5FCE47C1)) & 0x228C0404) + 290929154) ^ 0x4E997D30u)) & 0x17CDFFBD2)) - 0x7DE9DE138C786376);
  v283 = *(_DWORD *)(v275
                   + 4 * ((HIBYTE(v282) ^ 0x3AE26FEB45BBC305) + ((2 * (HIBYTE(v282) ^ 0xDA)) & 0x1BELL))
                   + 0x114028324821A7E8) ^ LODWORD(STACK[0x32C]);
  LODWORD(v278) = (v283 & 0x400000 ^ 0xFAEE1DCB) + 2 * (v283 & 0x400000);
  v284 = (((_DWORD)v278 + 85058101) & (a81 ^ 0x56168AE8)) == ((2 * (((_DWORD)v278 + 85058101) & (a81 ^ 0x56168AE8))) & 0x50000000);
  LODWORD(v249) = (BYTE2(v245) ^ 0x2B | 0x553EFAE4) - (BYTE2(v245) ^ 0x2B | 0xAAC1051B) - 1430190821;
  v285 = ((v249 & 0x50101BC2 ^ 0xA100D00)
        + (v249 ^ 0x752CF2EE)
        - ((v249 ^ 0x752CF2EE) & 0x20100BC2)) ^ 0x5A021746;
  v286 = *(_DWORD *)(v276 + 4 * ((v285 ^ 0x3DFB7CEFCFAF6BF7) + ((2 * v285) & 0x19F5ED7EELL)) - 0x620DEE9DDC513535);
  LODWORD(v285) = *(_DWORD *)(v275
                            + 4
                            * (((v245 >> 24) ^ 0x36BBF7EFBEB9F7FALL)
                             + ((2 * ((v245 >> 24) ^ 1)) & 0x1F6))
                            + 0x21DA08206428D778) ^ LODWORD(STACK[0x354]) ^ v280 ^ *(_DWORD *)(STACK[0x428]
                                                                                               + 4
                                                                                               * ((((v272 ^ 0x2A048877)
                                                                                                  - ((2 * (v272 ^ 0x2A048877)) & 0x140910C4u)
                                                                                                  - 606688926) ^ 0x2FDFD7FECDD798A0)
                                                                                                + ((2
                                                                                                  * (((v272 ^ 0x2A048877) - ((2 * (v272 ^ 0x2A048877)) & 0x140910C4) - 606688926) ^ 0xF1D2215B)) & 0x780B73F6))
                                                                                               + 0x187E5A667D30AC42) ^ *(_DWORD *)(v276 + 4 * ((((((HIWORD(v274) & 0x73) + (BYTE2(v274) ^ 0x80016FF)) | 0x74D42000) - ((BYTE2(v274) ^ 0x80016FF) & 0x8001473)) ^ 0x7EFF2B58B295FAALL) + ((2 * (((((HIWORD(v274) & 0x73) + (BYTE2(v274) ^ 0x80016FF)) | 0x74D42000) - ((BYTE2(v274) ^ 0x80016FF) & 0x8001473)) ^ 0x74D42265)) & 0x13652FB9ELL)) + 0x76203A496276836BLL);
  LODWORD(v248) = ((v273 ^ 0xB2) + (v273 & 0x5C ^ 0x2237C4C) - ((v273 ^ 0xB2) & 0x5C)) ^ 0x47B559B;
  v287 = (((2 * (_DWORD)v248) | 0x400F7FF6) - (_DWORD)v248 - 537378811) ^ 0x265F96FBu;
  v288 = (((2 * (BYTE1(v274) ^ 0x57)) & 0x16A) - (BYTE1(v274) ^ 0x57) - 386128822) ^ 0xFED424C2;
  v289 = (((2 * v288) & 0x2410004C) - v288 - 1922570279) ^ 0x9B4FE7C9;
  v290 = *(_DWORD *)(v275
                   + 4 * ((HIBYTE(v272) ^ 0x1F0D9FE33EBBC57ALL) + ((2 * (HIBYTE(v272) ^ 0x19)) & 0xC6))
                   - 0x7F6C97AD9BDE5E28) ^ LODWORD(STACK[0x34C]) ^ v286 ^ *(_DWORD *)(STACK[0x428]
                                                                                      + 4
                                                                                      * ((v287 ^ 0x1DC7F2E1A5B65FB3)
                                                                                       + ((2 * v287) & 0x14B6CBF66))
                                                                                      + 0x60DDEED8D66E1562) ^ *(_DWORD *)(STACK[0x3C8] + 4 * ((v289 ^ 0x3FBFF9B75FC7FBDFLL) + ((2 * (_DWORD)v289) & 0xBF8FF7BE)) - 0x7AA2A0E581A5DDB3);
  LODWORD(v289) = ((v274 & 0xE3 ^ 0xF39D0CE2) + (v274 & 0x1C ^ 0x11) - 1) ^ 0xD3709DE6;
  v291 = ((v289 | 0x316470B3) - (v289 | 0xCE9B8F4C) - 828666036) ^ 0x1189E1F3;
  LODWORD(v245) = ((BYTE1(v245) ^ 0xB7) + ((v245 >> 8) & 0xD4 ^ 0xEF9DE140) - ((BYTE1(v245) ^ 0xB7) & 0xD4)) ^ 0xED5DC15D;
  v292 = (((2 * (_DWORD)v245) | 0x69FCE90C) - (_DWORD)v245 - 889091206) ^ 0x363E54F6u;
  LODWORD(v287) = *(_DWORD *)(v275
                            + 4 * ((HIBYTE(v273) ^ 0x1ECDFEE5AEE1FBE6) + ((2 * (HIBYTE(v273) ^ 0x2D)) & 0x196))
                            - 0x7E6E13B75C7737C8) ^ LODWORD(STACK[0x348]) ^ *(_DWORD *)(v276
                                                                                        + 4
                                                                                        * (((((2
                                                                                             * (BYTE2(v272) ^ 0x86000366)) | 0x7D174854)
                                                                                           - (BYTE2(v272) ^ 0x86000366)
                                                                                           + 1098144726) ^ 0x3BF3BBEFAA7158C1)
                                                                                         + ((2
                                                                                           * ((((2
                                                                                               * (BYTE2(v272) ^ 0x86000366)) | 0x7D174854)
                                                                                             - (BYTE2(v272) ^ 0x86000366)
                                                                                             + 1098144726) ^ 0x388BA728)) & 0x125F5FFD2))
                                                                                        - 0x59EEEA9CE97F84FDLL) ^ *(_DWORD *)(STACK[0x3C8] + 4 * ((v292 ^ 0x3EDB3CDDDFB7BF8FLL) + ((2 * v292) & 0x1BF6F7F1ELL)) - 0x770FAD7F8164EC73) ^ *(_DWORD *)(STACK[0x428] + 4 * ((v291 ^ 0x3FFD5ABA4963EC59) + ((2 * (_DWORD)v291) & 0x92C7D8B2)) - 0x27F7B089B8481D36);
  v293 = v285 ^ 0x26423510;
  v294 = ((BYTE2(v282) ^ 0x8A | 0xCD2CB8F6) - (BYTE2(v282) ^ 0x8A | 0x32D34709) + 852707081) ^ 0xCD25A066;
  v295 = (v294 - ((2 * v294) & 0x2EE6F0EA) - 1754040203) ^ 0x977A6030;
  LODWORD(v195) = (((2 * (BYTE1(v282) ^ 0xE4)) | 0x3494C728) - (BYTE1(v282) ^ 0xE4) - 441082772) ^ 0xBA4C68C0;
  v296 = (((2 * (_DWORD)v195) | 0xF8D5FE12) - (_DWORD)v195 - 2087386889) ^ 0xDC6CF428;
  v297 = *(_DWORD *)(v275
                   + 4 * ((BYTE3(v285) ^ 0x3B5E747EDD6E27BDLL) + ((2 * (BYTE3(v285) ^ 0x64)) & 0x1B2))
                   + 0xF5015E3E9581800) ^ LODWORD(STACK[0x210]) ^ *(_DWORD *)(v276
                                                                              + 4
                                                                              * ((v295 ^ 0x1BF7EFFEB69EDAFFLL)
                                                                               + ((2 * v295) & 0x16D3DB5FELL))
                                                                              + 0x2600452687F10EABLL) ^ *(_DWORD *)(STACK[0x3C8] + 4 * ((((BYTE1(v287) ^ 0x48) - 1460614874 - ((2 * (BYTE1(v287) ^ 0x48)) & 0x88888888) + 30) ^ 0x1376FBDB562D7659) + ((2 * (((BYTE1(v287) ^ 0x48) - 1460614874 - ((2 * (BYTE1(v287) ^ 0x48)) & 0x88888888) + 30) ^ 0xA8F0C926)) & 0x1FDBB7EFELL)) + 0x36815688020313CDLL) ^ *(_DWORD *)(STACK[0x428] + 4 * ((((v290 ^ 0x7C) + (v290 & 0xA ^ 0x746F5602) - ((v290 ^ 0x7C) & 0xA)) ^ 0x1FFF25F729FC0B37) + ((2 * (((v290 ^ 0x7C) + (v290 & 0xA ^ 0x746F5602) - ((v290 ^ 0x7C) & 0xA)) ^ 0x746F56DA)) & 0xBB26BBDA)) + 0x58012281F6FA1C7ALL);
  LODWORD(v285) = (((2 * (BYTE2(v293) ^ 0xE3)) | 0x4B53DA20) - (BYTE2(v293) ^ 0xE3) + 1515590384) ^ 0xAFB4EC10;
  v298 = ((_DWORD)v285 - ((2 * (_DWORD)v285) & 0x3D9A3BCA) - 1630724635) ^ 0x94D01CDA;
  v299 = *(_DWORD *)(v275
                   + 4 * ((HIBYTE(v290) ^ 0x3F5D7FDEFFFEFF11) + ((2 * (HIBYTE(v290) ^ 0xF8)) & 0x1D2))
                   - 0xAC179CA0EB4840) ^ a79 ^ *(_DWORD *)(STACK[0x3C8]
                                                           + 4
                                                           * ((v296 ^ 0x27ADFF7367D9FFFFLL)
                                                            + ((2 * (_DWORD)v296) & 0xCFB3FFFE))
                                                           - 0x1A5AB7D5A1EDEE33) ^ *(_DWORD *)(STACK[0x428]
                                                                                               + 4
                                                                                               * ((((v287 & 0x6F ^ 0x50800B08)
                                                                                                  + (v287 & 0x90 ^ 0x21160011)
                                                                                                  - 1) ^ 0x177F5F5D0C4F7430)
                                                                                                + ((2
                                                                                                  * (((v287 & 0x6F ^ 0x50800B08) + (v287 & 0x90 ^ 0x21160011) - 1) ^ 0x71960B4F)) & 0xFBB2FEFE))
                                                                                               + 0x7A003CE975E19632) ^ *(_DWORD *)(v276 + 4 * ((v298 ^ 0x371FDADC9EF33FD3) + ((2 * v298) & 0x13DE67FA6)) - 0x469F6651196084A5);
  LODWORD(v298) = *(_DWORD *)(v275
                            + 4 * ((BYTE3(v287) ^ 0x3DFEDFE5E6B54FABLL) + 2 * (BYTE3(v287) ^ 0x54))
                            + 0x4CE6847C43B7768);
  LODWORD(v296) = (((2 * (BYTE1(v293) ^ 0xE4)) & 0x1A0) - (BYTE1(v293) ^ 0xE4) - 65699025) ^ 0xBE95472D;
  v300 = ((_DWORD)v296 - ((2 * (_DWORD)v296) & 0x10026EA) - 1782705291) ^ 0xD73ED7FC;
  v301 = ((v282 ^ 0x282080) - ((2 * (v282 ^ 0x282080)) & 0x400032) + 388013337) ^ 0x1708BD1Du;
  LODWORD(v287) = ((BYTE2(v287) ^ 0xC8 | 0xEE43107F) - (BYTE2(v287) ^ 0xC8 | 0x11BCEF80) + 297594752) ^ 0x26C8307B;
  v302 = (((2 * (_DWORD)v287) & 0x9A58BF5C) - (_DWORD)v287 + 852729937) ^ 0xFA588030;
  v303 = *(_DWORD *)(v276 + 4 * ((v302 ^ 0x7FB777FEF599BD6) + ((2 * v302) & 0x1DEB337ACLL)) + 0x75F22721A5060B4FLL);
  v304 = v298 ^ LODWORD(STACK[0x344]) ^ *(_DWORD *)(v276
                                                  + 4
                                                  * ((BYTE2(v290) ^ 0x3FFBBFD7FFF1DEAFLL)
                                                   + 2 * ((BYTE2(v290) ^ 0xD0u) & 0x7FLL))
                                                  - 0x6A0EFA3E9D5AFF55) ^ *(_DWORD *)(STACK[0x428]
                                                                                      + 4
                                                                                      * ((v301 ^ 0x2DD4DFEFFFF79FEELL)
                                                                                       + ((2 * v301) & 0x1FFEF3FDCLL))
                                                                                      + 0x20AA3A9F6D691476) ^ *(_DWORD *)(STACK[0x3C8] + 4 * ((v300 ^ 0x2B7AE6BFBFBFD7DFLL) + ((2 * v300) & 0x17F7FAFBELL)) - 0x298E550701854DB3);
  LODWORD(v298) = ((v283 & 0xFFBFFFFF ^ 0xDA3FBC3C | 0xF8C80C7F)
                 - (v283 & 0xFFBFFFFF ^ 0xDA3FBC3C | 0x737F380)
                 + 121107328) ^ 0xC05A0CB6;
  v305 = ((2 * v298) | 0xB8644E1E) - v298 - 1546790671;
  v306 = v278 + 253359103;
  v307 = 83242901 - v278;
  if (v284)
    v307 = v306;
  v308 = ((v293 ^ 0x47A4822F) - ((2 * (v293 ^ 0x47A4822F)) & 0x9000460) + 614168368) ^ 0x633FF522u;
  LODWORD(v308) = *(_DWORD *)(v279
                            + 4 * ((BYTE1(v290) ^ 0x3D3FF656FF7DDF0BLL) + ((2 * (BYTE1(v290) ^ 0x7Cu)) & 0xEELL))
                            - 0x70A29364007D6C13) ^ *(_DWORD *)(v281
                                                                + 4
                                                                * ((v308 ^ 0x1E59EFFBB2BFB9BELL)
                                                                 + ((2 * v308) & 0x1657F737CLL))
                                                                + 0x5E95FA70A248AD36) ^ v305 ^ v303 ^ ((a81 ^ 0x243C7828) - 168301002 + v307 - ((2 * ((a81 ^ 0x243C7828) - 168301002 + v307)) & 0xFF512B1A) + 2141754765);
  v309 = v299 ^ 0x90CDB1A9;
  v310 = HIBYTE(v299) ^ 0x2FEF8FFDFFFE3776;
  v311 = (2 * (HIBYTE(v299) ^ 0xF5)) & 0x106;
  v312 = ((2 * (BYTE2(v308) ^ 0x1C)) & 0x4C) - (BYTE2(v308) ^ 0x1C) + 160003801;
  v313 = ((v312 & 0x25BB ^ 0x5032813A) + (v312 ^ 0x87053CC5) - ((v312 ^ 0x87053CC5) & 0x88049BB)) ^ 0xD63EA7B8;
  v314 = ((BYTE1(v304) ^ 0x8F) - ((2 * (BYTE1(v304) ^ 0x8F)) & 0x6A) - 1686654923) ^ 0x8B4570B1;
  v315 = (((2 * v314) | 0x8E0D8720) - v314 + 955858032) ^ 0xD7340391;
  LODWORD(v315) = *(_DWORD *)(v279
                            + 4 * ((v315 ^ 0x3CD6AEB67CCECAFBLL) + ((2 * (_DWORD)v315) & 0xF99D95F6))
                            - 0x6EFD74E1F5C11A23) ^ 0x6BA53E96;
  LODWORD(v313) = LODWORD(STACK[0x340]) ^ a75 ^ a77 ^ *(_DWORD *)(v275
                                                                + 4
                                                                * ((HIBYTE(v297) ^ 0x2FF0BFAD9F92EF68)
                                                                 + ((2 * (HIBYTE(v297) ^ 0x53)) & 0x76))
                                                                + 0x3D06E928E0C4FA78) ^ 0x2590C940 ^ *(_DWORD *)(v276 + 4 * ((v313 ^ 0x3F97EDFFBE593DF3) + ((2 * v313) & 0x17CB27BE6)) - 0x687FB2DD96F87D25);
  v316 = (v313 + v315) ^ 0xBDAB3F2E;
  v317 = (2 * (v313 + v315)) & 0x7B567E5C;
  LODWORD(v313) = 2 * ((v313 & v315) - ((2 * (v313 & v315)) & 0x44F67346)) - 990481594;
  LODWORD(v313) = v316 + v317 + (v313 ^ 0xE6F453E7) + ((2 * v313) & 0xBBFBBEBC ^ 0x76175973) + 1;
  v318 = (v313 - ((2 * v313 + 1084571746) & 0xFAF77B86) + 500063732) ^ *(_DWORD *)(v281
                                                                                 + 4
                                                                                 * ((((v309 ^ 0x2C016 | 0xC07F7149)
                                                                                    - (v309 ^ 0x2C016 | 0x3F808EB6)
                                                                                    + 1065389750) ^ 0x3EFEF7B510D28EBALL)
                                                                                  + ((2
                                                                                    * (((v309 ^ 0x2C016 | 0xC07F7149)
                                                                                      - (v309 ^ 0x2C016 | 0x3F808EB6)
                                                                                      + 1065389750) ^ 0xC07DB149)) & 0x1A15E7FE6))
                                                                                 - 0x23FE2477D5756B9ELL);
  LODWORD(v310) = *(_DWORD *)(v275 + 4 * (v310 + v311) + 0x3D0BA7E75F17D958);
  LODWORD(v311) = *(_DWORD *)(v275
                            + 4 * ((HIBYTE(v304) ^ 0x3FB77BF79DFCF742) + ((2 * (HIBYTE(v304) ^ 0xBF)) & 0x1FALL))
                            - 0x21407FF18E32890);
  LODWORD(v310) = v310 ^ a78 ^ *(_DWORD *)(v276
                                         + 4
                                         * ((((BYTE2(v297) ^ 0x240010E4)
                                            + (HIWORD(v297) & 0xE ^ 0x8A9C840A)
                                            - ((BYTE2(v297) ^ 0x240010E4) & 0x2000100E)) ^ 0x3FBF6F7741637179)
                                          + ((2
                                            * (((BYTE2(v297) ^ 0x240010E4)
                                              + (HIWORD(v297) & 0xE ^ 0x8A9C840A)
                                              - ((BYTE2(v297) ^ 0x240010E4) & 0x2000100E)) ^ 0x8E9C8406)) & 0x19FFFEAFELL))
                                         - 0x691DB8BDDD935B55) ^ *(_DWORD *)(v281
                                                                             + 4
                                                                             * (((((2 * (v304 ^ 0x70)) & 0xFFFFFFE7)
                                                                                - (v304 ^ 0x70)
                                                                                + 8204) ^ 0x3B9EE5FECFEBF7D8)
                                                                              + ((2
                                                                                * ((((2 * (v304 ^ 0x70)) & 0xFFFFFFE7)
                                                                                  - (v304 ^ 0x70)
                                                                                  + 8204) ^ 0x2037)) & 0x2FDELL))
                                                                             - 0x167DDD9BD267CB8ELL) ^ *(_DWORD *)(v279 + 4 * ((((BYTE1(v308) ^ 0x87) - ((2 * (BYTE1(v308) ^ 0x87)) & 0x8Eu) + 18247) ^ 0xFA7FFEF7CFD88D3) + ((2 * (((BYTE1(v308) ^ 0x87) - ((2 * (BYTE1(v308) ^ 0x87)) & 0x8E) + 18247) ^ 0x472F)) & 0xF9FB9FF8)) + 0x45BD463A0982D1D9);
  LODWORD(v313) = ((BYTE2(v309) ^ 0xDB) - 2 * ((BYTE2(v309) ^ 0xDB) & 1) - 1374517247) ^ 0xEA3E0015;
  v319 = (((2 * (_DWORD)v313) | 0xAB224F50) - v313 - 1435576232) ^ 0x11BDAF81;
  v320 = *(_DWORD *)(v276
                   + 4 * ((v319 ^ 0x35F95BFD6DF5EEBELL) + ((2 * (_DWORD)v319) & 0xDBEBDD7C))
                   - 0x42056AD4556B4051);
  LODWORD(v319) = *(_DWORD *)(v275
                            + 4 * ((BYTE3(v308) ^ 0x3F7AADF4CAF96FDFLL) + ((2 * (BYTE3(v308) ^ 0xB0)) & 0xDELL))
                            - 0x120CFF3CCD50658);
  LOWORD(v308) = ((2 * (v308 ^ 0x96)) & 0x1CC) - (v308 ^ 0x96) + 4377;
  v321 = ((v308 & 0x5C1 ^ 0xB01961C0) + (v308 & 0x1A3E ^ 0x41009) - 1) ^ 0xB01D60E6;
  v322 = ((HIWORD(v304) & 0x53 ^ 0x21DEB951) + (HIWORD(v304) & 0xAC ^ 5) - 1) ^ 0x20DEA053;
  v323 = (((2 * v322) | 0x7790DD38) - v322 + 1144492388) ^ 0xBAC877DC;
  v324 = v311 ^ LODWORD(STACK[0x260]) ^ v320 ^ *(_DWORD *)(v281
                                                         + 4
                                                         * ((v321 ^ 0x25B7F7B16F29FFBDLL)
                                                          + ((2 * (_DWORD)v321) & 0xDE53FF7A))
                                                         + 0x411DDB99B09F953ALL) ^ *(_DWORD *)(v279
                                                                                             + 4
                                                                                             * (((((2
                                                                                                  * (BYTE1(v297) ^ 0xEC)) | 0x2336FD22)
                                                                                                - (BYTE1(v297) ^ 0xECu)
                                                                                                + 1852080495) ^ 0x3C6EFEF3EEE4814ALL)
                                                                                              + ((2
                                                                                                * ((((2 * (BYTE1(v297) ^ 0xEC)) | 0x2336FD22)
                                                                                                  - (BYTE1(v297) ^ 0xEC)
                                                                                                  + 1852080495) ^ 0x919B7EBD)) & 0xFEFFFFEE))
                                                                                             - 0x6D5EB5D60085EE13);
  v325 = ((BYTE1(v309) ^ 0xBB) - ((2 * (BYTE1(v309) ^ 0xBB)) & 0x164) - 1275294030) ^ 0x72F858B7;
  v326 = ((v325 | 0x3BEE4781) - (v325 | 0xC411B87E) - 1005471618) ^ 0xFAEA918B;
  v327 = v319 ^ LODWORD(STACK[0x33C]) ^ *(_DWORD *)(v276
                                                  + 4 * ((v323 ^ 0x3FDFA775EFDFDAF8) + ((2 * v323) & 0x1DFBFB5F0))
                                                  - 0x699E98B65D12F139) ^ *(_DWORD *)(v279
                                                                                      + 4
                                                                                      * ((v326 ^ 0x34EFDEFFFEB3BAFELL)
                                                                                       + ((2 * v326) & 0x1FD6775FCLL))
                                                                                      - 0x4F623607FD54DA2FLL) ^ *(_DWORD *)(v281 + 4 * ((((v297 ^ 0x3C40FD) + 1067389221 - ((2 * (v297 ^ 0x3C40FD)) & 0x40804Au) + 278528) ^ 0x1F79FF67D3708ADFLL) + ((2 * (((v297 ^ 0x3C40FD) + 1067389221 - ((2 * (v297 ^ 0x3C40FD)) & 0x40804A) + 278528) ^ 0x3F9F1125u)) & 0x1D9DF37F4)) + 0x5A15BCBFB9892446);
  LODWORD(v326) = v310 ^ 0xE190EE0B;
  LODWORD(v311) = (v324 >> 8) & 0x2F ^ 0xF711DE21 | (v324 >> 8) & 0xD0;
  v328 = ((v311 & 0x4D7 ^ 0xA83820D0) + (v311 & 0x1A28 ^ 0x10008B29) - 1) ^ 0xB838B576;
  v329 = *(_DWORD *)(v275
                   + 4 * ((HIBYTE(v318) ^ 0x3FDFB7FEFFDF3DCBLL) + 2 * (HIBYTE(v318) ^ 0x34))
                   - 0x2B4F81CA06C4098) ^ LODWORD(STACK[0x2E8]) ^ *(_DWORD *)(v279
                                                                              + 4
                                                                              * ((v328 ^ 0x3BBDFBD3FAFFFFC7)
                                                                               + ((2 * v328) & 0x1F5FFFF8ELL))
                                                                              - 0x6A9AA957EE85ED53) ^ *(_DWORD *)(v281 + 4 * ((v310 ^ 0x37BBFEFFFF752EB7) + ((2 * (v310 ^ 0xECu)) & 0xB6)) - 0x6F241A0908D253ELL) ^ *(_DWORD *)(v276 + 4 * ((BYTE2(v327) ^ 0x1BF7DB5C5FBFFFEFLL) + ((2 * (BYTE2(v327) ^ 0x92u)) & 0xFALL)) + 0x260097AFE36C7CB3);
  LODWORD(v319) = (BYTE1(v327) ^ 0x28) - ((2 * (BYTE1(v327) ^ 0x28)) & 0xDDDDDDDD) + 982873838;
  v330 = ((v319 & 0x229141A5 ^ 0x45020100)
        + (v319 ^ 0x2A9D78EF)
        - ((v319 ^ 0x2A9D78EF) & 0xDA5)) ^ 0x779B4393;
  LODWORD(v328) = *(_DWORD *)(v275
                            + 4 * ((BYTE3(v310) ^ 0xFFB1EDFF7F7DA7FLL) + ((2 * (BYTE3(v310) ^ 0x9C)) & 0x1C6))
                            - 0x432293A080CEB428) ^ LODWORD(STACK[0x350]) ^ *(_DWORD *)(v281
                                                                                        + 4
                                                                                        * (((((2
                                                                                             * (v324 ^ 0x16)) & 0x1B0)
                                                                                           - (v324 ^ 0x16u)
                                                                                           + 10023) ^ 0xDBDEC38AFEF1879)
                                                                                         + 2
                                                                                         * ((((2
                                                                                             * (v324 ^ 0x16)) & 0x1B0)
                                                                                           - (v324 ^ 0x16)
                                                                                           + 10023) ^ 0x2786u))
                                                                                        - 0x5EF9F68352756BCELL) ^ *(_DWORD *)(v279 + 4 * ((v330 ^ 0x3BBFBFF5BF8BFFAFLL) + ((2 * v330) & 0x17F17FF5ELL)) - 0x6AA1B9DF00B5ECF3);
  LODWORD(v330) = (((2 * (v327 ^ 0xA)) | 0xD294EEB2) - (v327 ^ 0xA) + 380995751) ^ 0xC98A125F;
  v331 = (((2 * (_DWORD)v330) & 0x4D7E4ACE) - (_DWORD)v330 - 1723802984) ^ 0xB980BF98;
  v332 = v328 ^ *(_DWORD *)(v276
                          + 4
                          * (((((2 * (BYTE2(v318) ^ 0x28E987A)) & 0x10D20CC) - (BYTE2(v318) ^ 0x28E987Au) - 27767911) ^ 0x3EBF7F5C0F5DAD62)
                           + ((2
                             * ((((2 * (BYTE2(v318) ^ 0x28E987A)) & 0x10D20CC) - (BYTE2(v318) ^ 0x28E987A) - 27767911) ^ 0xFCD6D39D)) & 0x616FDFE))
                          - 0x651DF8526BC18155);
  LODWORD(v321) = ((BYTE2(v326) ^ 0x47) + (WORD1(v326) & 0xB6 ^ 0x8E0BE3B0) - ((BYTE2(v326) ^ 0x47) & 0xB6)) ^ 0x5702BCEB;
  v333 = (((2 * (_DWORD)v321) & 0xA0121E6A) - v321 - 1987776310) ^ 0x508DAF74;
  v334 = *(_DWORD *)(v275
                   + 4 * ((HIBYTE(v324) ^ 0x1F366DAFDDFFF3F7) + ((2 * (HIBYTE(v324) ^ 0x8D)) & 0xF4))
                   + 0x7FF0311FE710E97CLL) ^ LODWORD(STACK[0x2F0]) ^ *(_DWORD *)(v276
                                                                               + 4
                                                                               * ((v333 ^ 0x2EFFDBBF6D9FDFBDLL)
                                                                                + ((2 * (_DWORD)v333) & 0xDB3FBF7A))
                                                                               - 0x261F69DC5413044DLL) ^ *(_DWORD *)(v281 + 4 * ((v331 ^ 0x3BFE3AF797FFEB7) + ((2 * (_DWORD)v331) & 0xF2FFFD6E)) - 0x3701D45E78B866AELL) ^ *(_DWORD *)(v279 + 4 * ((((BYTE1(v318) ^ 0x7C) - ((2 * (BYTE1(v318) ^ 0x7C)) & 0x16Cu) + 694) ^ 0x3FFF9A4BABBA6748) + ((2 * (((BYTE1(v318) ^ 0x7C) - ((2 * (BYTE1(v318) ^ 0x7C)) & 0x16C) + 694) ^ 0x2D7u)) & 0x15774CB3ELL)) - 0x7BA12336B16F84B3);
  LODWORD(v310) = (((2 * (BYTE2(v324) ^ 0xA2)) | 0xF20F2ED6) - (BYTE2(v324) ^ 0xA2) + 116942997) ^ 0x7881777B;
  v335 = (((2 * (_DWORD)v310) & 0xFC8C918C) - v310 - 2118535367) ^ 0x3F573F;
  v336 = ((BYTE1(v326) ^ 0xE1230F3 | 0xDD9243AC) - (BYTE1(v326) ^ 0xE1230F3 | 0x226DBC53) + 577616979) ^ 0xD38073AC;
  LODWORD(v328) = (v318 & 0xD5 ^ 0xADFD7794) + (v318 & 0x2A ^ 0xB) - 1;
  v337 = ((v328 & 0x2C0D6DA4 ^ 0x50008C24)
        + (v328 ^ 0x2D1D7391)
        - ((v328 ^ 0x2D1D7391) & 0xE00DA4)) ^ 0xFC0DE92E;
  v338 = a52 ^ a80 ^ *(_DWORD *)(v275
                               + 4 * ((HIBYTE(v327) ^ 0x1EFF6FADDE8F9F0ELL) + ((2 * (HIBYTE(v327) ^ 0x78)) & 0xECLL))
                               - 0x7F33D6D81B2DC674) ^ *(_DWORD *)(v279
                                                                   + 4
                                                                   * ((v336 ^ 0x2FB2FBFDA92BEEF7)
                                                                    + ((2 * v336) & 0x15257DDEELL))
                                                                   - 0x3A6EA9FEA735AA13) ^ *(_DWORD *)(v276 + 4 * ((v335 ^ 0x3F7FFB6CC9FF7FE3) + ((2 * v335) & 0x193FEFFC6)) - 0x681FE891C59184E5) ^ *(_DWORD *)(v281 + 4 * ((v337 ^ 0x3F7F8F8FA7FFCF4) + ((2 * v337) & 0x1F4FFF9E8)) - 0x37E229847CB85FA2);
  LOWORD(v318) = v329 ^ 0x7DC;
  LODWORD(v331) = *(_DWORD *)(v275
                            + 4 * ((HIBYTE(v329) ^ 0x3DFEEB8FB3FFFFF8) + ((2 * (HIBYTE(v329) ^ 0x85)) & 0xFALL))
                            + 0x4CE39A08F10B970) ^ LODWORD(STACK[0x358]) ^ *(_DWORD *)(v279
                                                                                       + 4
                                                                                       * (((((2
                                                                                            * (((unsigned __int16)(v334 ^ 0xCC34) >> 8) ^ 0x5E)) & 0x1A8)
                                                                                          - (((unsigned __int16)(v334 ^ 0xCC34) >> 8) ^ 0x5Eu)
                                                                                          + 2347) ^ 0x3A7E7F5C7B2FCA3ALL)
                                                                                        + ((2
                                                                                          * ((((2
                                                                                              * (((unsigned __int16)(v334 ^ 0xCC34) >> 8) ^ 0x5E)) & 0x1A8)
                                                                                            - (((unsigned __int16)(v334 ^ 0xCC34) >> 8) ^ 0x5E)
                                                                                            + 2347) ^ 0x9D2u)) & 0x7D0))
                                                                                       - 0x659CB779EF44FDD7) ^ *(_DWORD *)(v281 + 4 * ((((v332 ^ 0x87A6105C) + (v332 & 0x39 ^ 0x78482921) - ((v332 ^ 0x87A6105C) & 0x86201039)) ^ 0x27FF6EFBC629D69CLL) + ((2 * (((v332 ^ 0x87A6105C) + (v332 & 0x39 ^ 0x78482921) - ((v332 ^ 0x87A6105C) & 0x86201039)) ^ 0x79CE2973)) & 0x17FCFFFDELL)) + 0x37FFFE706DA79472) ^ *(_DWORD *)(v276 + 4 * ((((BYTE2(v338) ^ 0x204F2) - ((2 * (BYTE2(v338) ^ 0x204F2)) & 0x40174u) - 2130984518) ^ 0x3B7C9BF71F8E3E67) + ((2 * (((BYTE2(v338) ^ 0x204F2) - ((2 * (BYTE2(v338) ^ 0x204F2)) & 0x40174) - 2130984518) ^ 0x80F9C5AE)) & 0x13EEFF792)) - 0x58126ABD1B73747DLL);
  LODWORD(v337) = ((v334 ^ 9 | 0xF515D61D) - (v334 ^ 9 | 0xAEA29E2) + 183118306) ^ 0xB74CA64C;
  v339 = (((2 * (_DWORD)v337) & 0x934B3D68) - (_DWORD)v337 - 1235590837) ^ 0xF40311C9;
  LODWORD(v336) = (BYTE2(v332) ^ 0xDD) + (HIWORD(v332) & 0xCF ^ 0x6C878B02) - ((BYTE2(v332) ^ 0xDD) & 0xFFFFFFCF);
  v340 = ((v336 & 0x12F ^ 0x301402B) + (v336 & 0xED0 ^ 0x40000CC1) - 1) ^ 0x430147FF;
  v341 = a11 ^ a53 ^ a13 ^ a12 ^ a55 ^ a54 ^ a56 ^ *(_DWORD *)(v275
                                                             + 4
                                                             * ((HIBYTE(v332) ^ 0x39FFFB9DDDBA9F3CLL)
                                                              + ((2 * (HIBYTE(v332) ^ 0xE9)) & 0x1AALL))
                                                             + 0x14C9F967E8263810) ^ *(_DWORD *)(v276
                                                                                                 + 4
                                                                                                 * ((((v329 ^ 0x53CF07DC) >> 16) ^ 0x3FF573D9F3B3EF50)
                                                                                                  + ((2 * (((v329 ^ 0x53CF07DC) >> 16) ^ 0xBu)) & 0xB6))
                                                                                                 - 0x69F5CA466C6342C5) ^ *(_DWORD *)(v279 + 4 * (((((2 * (BYTE1(v338) ^ 0xCF)) & 0x52) - (BYTE1(v338) ^ 0xCFu) + 16598) ^ 0x1BF7FF73FBFABEB1) + ((2 * ((((2 * (BYTE1(v338) ^ 0xCF)) & 0x52) - (BYTE1(v338) ^ 0xCF) + 16598) ^ 0x4043u)) & 0xFDE4)) + 0x147D48280D8E1601);
  LODWORD(v335) = *(_DWORD *)(v275
                            + 4 * ((HIBYTE(v334) ^ 0x3FDFBAD7BB72DFCDLL) + ((2 * (HIBYTE(v334) ^ 0x30)) & 0x1FALL))
                            - 0x2B5037F8EBAC890) ^ LODWORD(STACK[0x2F8]) ^ *(_DWORD *)(v279
                                                                                       + 4
                                                                                       * (((((2
                                                                                            * (BYTE1(v318) ^ 0x1172447A)) & 0x20E40192)
                                                                                          - (BYTE1(v318) ^ 0x1172447Au)
                                                                                          + 696571190) ^ 0x353FB9EECF1B6C49)
                                                                                        + ((2
                                                                                          * ((((2
                                                                                              * (BYTE1(v318) ^ 0x1172447A)) & 0x20E40192)
                                                                                            - (BYTE1(v318) ^ 0x1172447A)
                                                                                            + 696571190) ^ 0x38F691F6u)) & 0x1CFD83B7ELL))
                                                                                       - 0x50A1A1C3E23DE533) ^ *(_DWORD *)(v281 + 4 * ((((v338 ^ 0x33) + (v338 & 0x61 ^ 0x17F40) - ((v338 ^ 0x33) & 0x61)) ^ 0x37BFEFEDBF3EC972) + ((2 * (((v338 ^ 0x33) + (v338 & 0x61 ^ 0x17F40) - ((v338 ^ 0x33) & 0x61)) ^ 0x17F9D)) & 0x17E7F6DDELL)) - 0x70205578FB7478ELL) ^ *(_DWORD *)(v276 + 4 * ((v340 ^ 0x34DFFF7FFBBD6DFELL) + ((2 * v340) & 0x1F77ADBFCLL)) - 0x3D9FF8DE8C893D51);
  LODWORD(v340) = (((2 * (v318 ^ 0xF3)) | 0xD761450) - (v318 ^ 0xF3) - 112921128) ^ 0x27396AC8;
  v342 = ((_DWORD)v340 - ((2 * (_DWORD)v340) & 0x55DE9930) - 353416040) ^ 0xCB6D2C98;
  LODWORD(v323) = *(_DWORD *)(v275
                            + 4 * ((HIBYTE(v338) ^ 0x2FBEAFDF8F3DFE9BLL) + ((2 * (HIBYTE(v338) ^ 0x25)) & 0x17CLL))
                            + 0x3DCF28612218BC6CLL) ^ LODWORD(STACK[0x280]) ^ *(_DWORD *)(v276
                                                                                        + 4
                                                                                        * ((((v334 ^ 0xE0CBCC34) >> 16) ^ 0x1FFBEFFCF3571B37)
                                                                                         + ((2
                                                                                           * (((v334 ^ 0xE0CBCC34) >> 16) ^ 0xECu)) & 0x1B6))
                                                                                        + 0x15F0452D95100B3BLL) ^ *(_DWORD *)(v279 + 4 * ((BYTE1(v332) ^ 0xDF74CFF73FF87C3) + ((2 * (BYTE1(v332) ^ 0xFu)) & 0x198)) + 0x4C8011FA2D7BF299);
  v343 = v335 ^ 0x7FAC8DFD;
  v344 = (((unsigned __int16)(v335 ^ 0x8DFD) >> 8) ^ 0xFFFFFFFD)
       + 1998952955
       + ((2 * ((unsigned __int16)(v335 ^ 0x8DFD) >> 8)) | 0x11B4CC0C);
  v345 = ((v344 & 0x80C2078E ^ 0x10009907) + (v344 & 0x71) - 1) ^ 0x90C29FEF;
  v346 = v323 ^ *(_DWORD *)(v281
                          + 4 * ((v342 ^ 0x3BBF7F76FBED2DC7) + ((2 * v342) & 0x1F7DA5B8ELL))
                          - 0x1700437C826D22EELL);
  LODWORD(v342) = ((BYTE2(v346) ^ 0x15 | 0x33F87ACE) - (BYTE2(v346) ^ 0x15 | 0xCC078531) - 871922383) ^ 0xF3EA5BA6;
  v347 = ((v342 | 0x43A35410) - (v342 | 0xBC5CABEF) - 1134777361) ^ 0x83B17510;
  v348 = *(_DWORD *)(v276
                   + 4 * ((v347 ^ 0x3BDEFD7C7FFE7FF4) + ((2 * (_DWORD)v347) & 0xFFFCFFE8))
                   - 0x599BF0D09D8D8529);
  LODWORD(v347) = v341 ^ *(_DWORD *)(v281
                                   + 4 * ((v339 ^ 0x3AFFEDE7AF76F967) + ((2 * v339) & 0x15EEDF2CELL))
                                   - 0x1401FD3F5094516ELL);
  v349 = BYTE3(v335) ^ 0x50;
  v350 = v349 ^ 0x3FDBEFBB8C5FC2BDLL;
  v351 = (2 * (int)v349) & 0x17ALL;
  v352 = *(_DWORD *)(v275
                   + 4 * ((BYTE3(v331) ^ 0x37FFFF03BFF77F87) + ((2 * (BYTE3(v331) ^ 0x79)) & 0x1FCLL))
                   + 0x1CC9EBD05F32B76CLL) ^ a84 ^ v348 ^ *(_DWORD *)(v279
                                                                    + 4
                                                                    * ((v345 ^ 0x3F77975B7EFCDFEDLL)
                                                                     + ((2 * (_DWORD)v345) & 0xFDF9BFDA))
                                                                    - 0x79811775FE796DEBLL) ^ *(_DWORD *)(v281 + 4 * (((((2 * (v347 ^ 0x122004FD)) & 0x400112) - (v347 ^ 0x122004FDu) - 744891018) ^ 0x3D7FAF6A0C0034F1) + ((2 * ((((2 * (v347 ^ 0x122004FD)) & 0x400112) - (v347 ^ 0x122004FD) - 744891018) ^ 0xC1B9D906)) & 0x1001BEE)) - 0x1E01034BC9A023AELL);
  LODWORD(v333) = (v343 ^ 0xF4) + (v343 & 0xD7 ^ 0x4416CD03) - ((v343 ^ 0xF4) & 0xD7);
  v353 = ((v333 & 0x4002C055 ^ 0x93000040)
        + (v333 ^ 0x64FED9B5)
        - ((v333 ^ 0x64FED9B5) & 0xC80055)) ^ 0xF322D4C5;
  LODWORD(v349) = *(_DWORD *)(v275
                            + 4 * ((BYTE3(v347) ^ 0x35DBEEDFF7FCFF5BLL) + ((2 * (BYTE3(v347) ^ 0x66)) & 0x7ALL))
                            + 0x255A2C5F7F1CBA70) ^ LODWORD(STACK[0x35C]) ^ *(_DWORD *)(v279
                                                                                        + 4
                                                                                        * (((((v346 >> 8) & 0x57 ^ 0x8B00C050)
                                                                                           + ((v346 >> 8) & 0xA8 ^ 0x44803009)
                                                                                           - 1) ^ 0x1F7AFE9F785F4D89)
                                                                                         + ((2
                                                                                           * ((((v346 >> 8) & 0x57 ^ 0x8B00C050)
                                                                                             + ((v346 >> 8) & 0xA8 ^ 0x44803009)
                                                                                             - 1) ^ 0xCF80F0DF)) & 0x16FBF7AACLL))
                                                                                        + 0x6714B791DFB1C71) ^ *(_DWORD *)(v276 + 4 * ((((WORD1(v331) & 0x91) + (WORD1(v331) & 0x6E ^ 0x71266063) - 1) ^ 0x315ADC5F8ED95F79) + ((2 * (((WORD1(v331) & 0x91) + (WORD1(v331) & 0x6E ^ 0x71266063) - 1) ^ 0x71266084)) & 0x1FFFE7FFALL)) - 0x2F8B6C5E9D90854DLL) ^ *(_DWORD *)(v281 + 4 * ((v353 ^ 0x37ABFFD9CFF4F7C5) + ((2 * v353) & 0x19FE9EF8ALL)) - 0x6B24507D28C4AE6);
  LODWORD(v339) = *(_DWORD *)(v275 + 4 * (v350 + v351) - 0x2A5D70ED26E5390);
  LODWORD(v350) = ((HIWORD(v343) & 0xB3 ^ 0x99ECA8B3) - (HIWORD(v343) & 0xB3) + (BYTE2(v343) ^ 0x48)) ^ 0x58EDB9B3;
  v354 = (((2 * (_DWORD)v350) & 0x2021AEC) - (_DWORD)v350 - 1027730807) ^ 0x3BF0309u;
  LODWORD(v339) = a70 ^ LODWORD(STACK[0x300]) ^ v339 ^ *(_DWORD *)(v279
                                                                 + 4
                                                                 * ((BYTE1(v331) ^ 0x1FEBFDCEFFFFD6D0)
                                                                  + ((2 * (BYTE1(v331) ^ 0x3Du)) & 0x1DALL))
                                                                 + 0x4AD4EBBFD7AB615) ^ *(_DWORD *)(v281 + 4 * ((((v346 ^ 0x11991085 | 0xFB88BE24) - (v346 ^ 0x11991085 | 0x47741DB) + 74924507) ^ 0x1FDA767E13E478DELL) + ((2 * (((v346 ^ 0x11991085 | 0xFB88BE24) - (v346 ^ 0x11991085 | 0x47741DB) + 74924507) ^ 0xEA11AE23)) & 0x1F3EBADFALL)) + 0x5893E0638570383ALL) ^ *(_DWORD *)(v276 + 4 * (((((2 * (BYTE2(v347) ^ 0x68)) & 0xEC) - (BYTE2(v347) ^ 0x68u) + 18313) ^ 0x2B6FF3FFEBB6F8FDLL) + ((2 * ((((2 * (BYTE2(v347) ^ 0x68)) & 0xEC) - (BYTE2(v347) ^ 0x68) + 18313) ^ 0x4732u)) & 0x7F9ELL)) - 0x17DFCADE4C6E8495);
  LODWORD(v347) = (((v347 >> 8) & 0xDC ^ 0xDDE6E699) + ((v347 >> 8) & 0x23) - 1) ^ 0xC1A3ECBC;
  v355 = ((_DWORD)v347 - ((2 * (_DWORD)v347) & 0x30820096) + 2052261195) ^ 0x66160FD7u;
  v356 = v352 ^ 0x9DD39B7C;
  LODWORD(v355) = *(_DWORD *)(v275
                            + 4 * ((HIBYTE(v346) ^ 0x1DD5CFD7B5CFF58FLL) + ((2 * (HIBYTE(v346) ^ 0x58)) & 0x1AELL))
                            - 0x7A8D577F782F1FF8) ^ LODWORD(STACK[0x360]) ^ *(_DWORD *)(v276
                                                                                        + 4
                                                                                        * ((v354 ^ 0x1B777DF7FFD7FFFDLL)
                                                                                         + ((2 * v354) & 0x1FFAFFFFALL))
                                                                                        + 0x28020D41630C7AB3) ^ *(_DWORD *)(v279 + 4 * ((v355 ^ 0x3FB5F6F7D97FEECLL) + ((2 * (_DWORD)v355) & 0xFB2FFDD8)) + 0x746FC83A071A1619) ^ *(_DWORD *)(v281 + 4 * ((v331 ^ 0x1CF59AFFE71B7F5FLL) + ((2 * (v331 ^ 0x88u)) & 0x1AELL)) + 0x64274E5FD0D994D2);
  LODWORD(v353) = (((v339 >> 8) & 0xE ^ 0x1504ED05) + ((v339 >> 8) & 0xF1) - 1) ^ 0x3D1CA72F;
  v357 = (((2 * (_DWORD)v353) | 0xB75C7F9A) - (_DWORD)v353 + 609337395) ^ 0xF3B675D1;
  LODWORD(v345) = ((v349 & 0xD3) - (v349 & 0x2C) + 778324524) ^ 0xE2528D6;
  v358 = ((_DWORD)v345 - ((2 * (_DWORD)v345) & 0x40824734) + 1022179226) ^ 0x1CAC55A0u;
  v359 = *(_DWORD *)(v281 + 4 * ((v358 ^ 0x33F9EFDF73F7EFF5) + ((2 * (_DWORD)v358) & 0xE7EFDFEA)) + 0x815FAE19D67D45ALL);
  LODWORD(v358) = ((BYTE2(v356) ^ 0x31 | 0xA635A6E9) - (BYTE2(v356) ^ 0x31 | 0x59CA5916) + 1506433302) ^ 0xA2313641;
  v360 = (((2 * (_DWORD)v358) & 0x3A610E56) - (_DWORD)v358 - 1563461420) ^ 0xA6CBE881;
  v361 = *(_DWORD *)(v276 + 4 * ((v360 ^ 0x3EFEF68CEF6DDFFCLL) + ((2 * v360) & 0x1DEDBBFF8)) - 0x661BD5125B4B0549);
  LODWORD(v360) = LODWORD(STACK[0x364]) ^ *(_DWORD *)(v275
                                                    + 4
                                                    * ((HIBYTE(v352) ^ 0x3BBABBA6E3FBEDEELL)
                                                     + ((2 * (HIBYTE(v352) ^ 0x34)) & 0x1B4))
                                                    + 0xDDEF943CF20FFFCLL) ^ *(_DWORD *)(v279
                                                                                       + 4
                                                                                       * ((v357 ^ 0x3DBFB3D3789BB716)
                                                                                        + ((2 * (_DWORD)v357) & 0xF1376E2C))
                                                                                       - 0x72A18955E4F4CA8FLL);
  v362 = *(_DWORD *)(v275
                   + 4 * ((BYTE3(v355) ^ 0x36D7AEA37D7FEFF7) + ((2 * (BYTE3(v355) ^ 0xA8)) & 0xBELL))
                   + 0x216B2D516910F9E8);
  v363 = *(_DWORD *)(v276
                   + 4
                   * ((((BYTE2(v355) ^ 0x162188B2)
                      + (WORD1(v355) & 0xA7 ^ 0x69921005)
                      - ((BYTE2(v355) ^ 0x162188B2) & 0x122188A7)) ^ 0x3EF34DB396FDEFC8)
                    + ((2
                      * (((BYTE2(v355) ^ 0x162188B2)
                        + (WORD1(v355) & 0xA7 ^ 0x69921005)
                        - ((BYTE2(v355) ^ 0x162188B2) & 0x122188A7)) ^ 0x6D921037)) & 0x1F6DFFFFELL))
                   - 0x65ED31AE8B538555) ^ v360 ^ v359;
  LOWORD(v360) = (v339 ^ 0x86) + (v339 & 0x1D ^ 0xDE19) - ((v339 ^ 0x86) & 0x1D);
  v364 = ((v360 & 0x264 ^ 0x952D7465) + (v360 & 0x19B) - 1) ^ 0x952D76EF;
  v365 = *(_DWORD *)(v275
                   + 4 * ((BYTE3(v349) ^ 0x1FDEBBFB3FA26B3ELL) + ((2 * (BYTE3(v349) ^ 0xC0)) & 0x1FCLL))
                   + 0x7D4EF7F26087076CLL) ^ LODWORD(STACK[0x298]) ^ *(_DWORD *)(v279
                                                                               + 4
                                                                               * (((((v355 >> 8) & 9)
                                                                                  + ((v355 >> 8) & 0xF6 ^ 0x131)
                                                                                  - 1) & 0x3FF ^ 0x2FDF93D49FFFDA36)
                                                                                + ((2
                                                                                  * ((((v355 >> 8) & 9)
                                                                                    + ((v355 >> 8) & 0xF6 ^ 0x131)
                                                                                    - 1) & 0x3FF ^ 0x1CB)) & 0x7FALL))
                                                                               - 0x3B21095A82855E2BLL) ^ *(_DWORD *)(v281 + 4 * ((v364 ^ 0x2DF856FFA7F6E9AFLL) + ((2 * v364) & 0x14FEDD35ELL)) + 0x201C5E60CD6BED72) ^ v361;
  LODWORD(v364) = ((2 * (BYTE1(v356) ^ 0xDD)) & 0xFFFFFFF3) - (BYTE1(v356) ^ 0xDD) + 1229492486;
  v366 = ((v364 & 0x9081EDF ^ 0x6041E83)
        + (v364 ^ 0x4948415C)
        - ((v364 ^ 0x4948415C) & 0x1EDF)) ^ 0xF0CCEDF;
  LODWORD(v355) = a58 ^ LODWORD(STACK[0x308]) ^ *(_DWORD *)(v275
                                                          + 4
                                                          * ((BYTE3(v339) ^ 0x1AFBDE6F7B7C954ELL)
                                                           + ((2 * (BYTE3(v339) ^ 0xB2)) & 0x1F8))
                                                          - 0x6F2591DE8EE1A08CLL) ^ *(_DWORD *)(v276
                                                                                              + 4
                                                                                              * ((((BYTE2(v349) ^ 0x8A | 0xC6E6A2D6)
                                                                                                 - (BYTE2(v349) ^ 0x8A | 0x39195D29)
                                                                                                 + 957963561) ^ 0x27C6EFFB59D94C4DLL)
                                                                                               + ((2
                                                                                                 * (((BYTE2(v349) ^ 0x8A | 0xC6E6A2D6) - (BYTE2(v349) ^ 0x8A | 0x39195D29) + 957963561) ^ 0xC6E6A2A4)) & 0x13E7FDDD2))
                                                                                              - 0x93BBACD1A9340FDLL) ^ *(_DWORD *)(v281 + 4 * ((v355 ^ 0x1E3FFF7F7FFF6F44) + ((2 * (v355 ^ 0x1Bu)) & 0xBELL)) + 0x5EFDBC616D49D6B2) ^ *(_DWORD *)(v279 + 4 * ((v366 ^ 0x36DDDBFFCFEAF1EBLL) + ((2 * v366) & 0x19FD5E3D6)) - 0x571A2A074231B5E3);
  v367 = ((BYTE2(v339) ^ 0x63876B) - ((2 * (BYTE2(v339) ^ 0x63876B)) & 0x7021C) + 117694734) ^ 0x760662Eu;
  BYTE2(v349) = BYTE2(v355) ^ 0x26;
  v368 = v362 ^ LODWORD(STACK[0x200]) ^ *(_DWORD *)(v276
                                                  + 4 * ((v367 ^ 0x2DE9CF3FE57CDEFDLL) + ((2 * v367) & 0x1CAF9BDFALL))
                                                  - 0x21C737DE3387014DLL) ^ *(_DWORD *)(v279
                                                                                      + 4
                                                                                      * ((BYTE1(v349) ^ 0x1FF9DFF6AB9E7FDBLL)
                                                                                       + ((2 * (BYTE1(v349) ^ 0xA5u)) & 0xFCLL))
                                                                                      + 0x475C61D4F0013D1) ^ *(_DWORD *)(v281 + 4 * ((((v356 & 0xD8 ^ 0x3162851) + (v356 & 0x27) - 1) ^ 0x27DF2C3BA6A94607) + ((2 * (((v356 & 0xD8 ^ 0x3162851) + (v356 & 0x27) - 1) ^ 0x31628F8)) & 0x14B7EDDFELL)) + 0x38810970D649D832);
  LODWORD(v354) = ((v368 ^ 0x46D62597) >> 16) ^ 0x22C698;
  v369 = (((2 * (_DWORD)v354) & 0x41809C) - (_DWORD)v354 - 1529411919) ^ 0xA4F5C0B9;
  LODWORD(v366) = LODWORD(STACK[0x20C]) ^ *(_DWORD *)(v275
                                                    + 4
                                                    * ((HIBYTE(v363) ^ 0x377FFBCED1F5EA36)
                                                     + ((2 * (HIBYTE(v363) ^ 0xAC)) & 0x134))
                                                    + 0x1EC9F8A417390CFCLL) ^ *(_DWORD *)(v276
                                                                                        + 4
                                                                                        * ((v369 ^ 0x1DFFFCEB7E37FFFFLL)
                                                                                         + ((2 * (_DWORD)v369) & 0xC2FFFFE))
                                                                                        + 0x1DE01173698C7AABLL);
  v370 = *(_DWORD *)(v281
                   + 4
                   * ((v355 ^ 0x3F1CBF203FFDF702) + ((2 * (v355 ^ 0x8Du)) & 0x11ELL))
                   - 0x2475422192B04A0ELL);
  LODWORD(v369) = (BYTE2(v363) ^ 0x85 | 0x511909AB) - (BYTE2(v363) ^ 0x85 | 0xAEE6F654) - 1360595372;
  v371 = ((v369 & 0x1009013C ^ 0xA4002035) + (v369 & 0x41100AC3) - 1) ^ 0xF519292B;
  v372 = *(_DWORD *)(v275
                   + 4 * ((BYTE3(v355) ^ 0x3CCF795FDBB6D702) + ((2 * (BYTE3(v355) ^ 0xD9)) & 0x1B6))
                   + 0x98C025FF03557F8);
  LODWORD(v355) = *(_DWORD *)(v279
                            + 4
                            * (((2 * ((((unsigned __int16)(v355 ^ 0x4720) >> 8) ^ 0x6E) & 0x3F)
                               - (((unsigned __int16)(v355 ^ 0x4720) >> 8) ^ 0x6Eu)
                               + 1216) ^ 0x34F5B5B6F762CF03)
                             + ((2
                               * ((2 * ((((unsigned __int16)(v355 ^ 0x4720) >> 8) ^ 0x6E) & 0x3F)
                                 - (((unsigned __int16)(v355 ^ 0x4720) >> 8) ^ 0x6E)
                                 + 1216) ^ 0x45Du)) & 0x6BCLL))
                            - 0x4F7990E3E0111BAFLL) ^ v366 ^ *(_DWORD *)(v281
                                                                       + 4
                                                                       * ((v365 ^ 0x10F7BFDD3FCF7F5BLL)
                                                                        + ((2 * (v365 ^ 0x6Cu)) & 0x6ELL))
                                                                       - 0x6BE1451591F668AELL);
  LODWORD(v367) = ((((unsigned __int16)(v363 ^ 0x1085) >> 8) ^ 0x73)
                 + (((v363 ^ 0x433F1085) >> 8) & 0xCE ^ 0x8E30AC8C)
                 - ((((unsigned __int16)(v363 ^ 0x1085) >> 8) ^ 0x73) & 0xCE)) ^ 0xA6B0F0CF;
  v373 = ((_DWORD)v367 - ((2 * (_DWORD)v367) & 0x40009CF4) + 541060730) ^ 0x8BFB27Au;
  LODWORD(v357) = *(_DWORD *)(v275
                            + 4 * ((HIBYTE(v365) ^ 0x3DFEBF6AFDF77F4BLL) + ((2 * (HIBYTE(v365) ^ 0xBE)) & 0x1EALL))
                            + 0x4CEEA336732B790) ^ LODWORD(STACK[0x264]) ^ v370 ^ *(_DWORD *)(v279
                                                                                              + 4
                                                                                              * ((((unsigned __int16)(v368 ^ 0x2597) >> 8) ^ 0x1FDDBFFF641F6C3BLL)
                                                                                               + ((2
                                                                                                 * (((unsigned __int16)(v368 ^ 0x2597) >> 8) ^ 0xC2u)) & 0x1F2))
                                                                                              + 0x4E645FA6CFC5DE5) ^ *(_DWORD *)(v276 + 4 * ((v371 ^ 0x2BEFFFDFFFFEDEFALL) + ((2 * v371) & 0x1FFFDBDF4)) - 0x19DFFA5E9D8F0141);
  LODWORD(v366) = v372 ^ LODWORD(STACK[0x29C]) ^ *(_DWORD *)(v281
                                                           + 4
                                                           * ((((v368 ^ 0x1F)
                                                              - ((2 * (v368 ^ 0x46D62597)) & 0x2C)
                                                              + 534) ^ 0x3D7F35C775FEBB8CLL)
                                                            + ((2
                                                              * (((v368 ^ 0x1F)
                                                                - ((2 * (v368 ^ 0x46D62597)) & 0x2C)
                                                                + 534) ^ 0x232)) & 0xEBFD737C))
                                                           - 0x1DFF1CBE6AB352CALL) ^ *(_DWORD *)(v276
                                                                                               + 4
                                                                                               * ((BYTE2(v365) ^ 0x39ED2FFDF3979515)
                                                                                                + ((2
                                                                                                  * (BYTE2(v365) ^ 0xD6u)) & 0x186))
                                                                                               - 0x51D4BAD66BF1DC65) ^ *(_DWORD *)(v279 + 4 * ((v373 ^ 0x1F5BFFDEFFEBFA73) + ((2 * v373) & 0x1FFD7F4E6)) + 0x6ED467BFDCA27FDLL);
  LODWORD(v349) = ((BYTE2(v349) ^ 0x7439397E | 0xEB85B08F) - (BYTE2(v349) ^ 0x7439397E | 0x147A4F70) + 343560048) ^ 0xFECFDCE;
  v374 = (((2 * (_DWORD)v349) | 0xCE64CDBA) - (_DWORD)v349 - 1731356381) ^ 0xF76212B9;
  LODWORD(v331) = ((2 * (BYTE1(v365) ^ 0x65D83CF1)) & 0x89B00126) - (BYTE1(v365) ^ 0x65D83CF1) + 991969132;
  v375 = ((v331 & 0x52F18C79 ^ 0x30210C30) + (v331 & 0xC0E7386 ^ 0x8083003) - 1) ^ 0x66D13F76;
  v376 = *(_DWORD *)(v275
                   + 4 * ((HIBYTE(v368) ^ 0x3F7EFFF3FF3FDF0ELL) + ((2 * (HIBYTE(v368) ^ 0xF5)) & 0x1F6))
                   - 0x13217F09DEEC888) ^ LODWORD(STACK[0x368]) ^ *(_DWORD *)(v276
                                                                              + 4
                                                                              * ((v374 ^ 0x3FDEF574F8FFFFFFLL)
                                                                               + ((2 * v374) & 0xFFFFFFFFF1FFFFFFLL))
                                                                              - 0x699BD0B281938555) ^ *(_DWORD *)(v279 + 4 * ((v375 ^ 0x11FBFFE7FD74DB5FLL) + ((2 * v375) & 0x1FAE9B6BELL)) + 0x3C6D465807A6A44DLL) ^ *(_DWORD *)(v281 + 4 * ((v363 ^ 0x3DFF39FF9EFD7F3ALL) + ((2 * (v363 ^ 0xC1u)) & 0x1F6)) - 0x1FFF2D9F0EAE6BBELL);
  LODWORD(v371) = ((2 * (BYTE2(v376) ^ 5)) | 0x54134692) - (BYTE2(v376) ^ 5) - 705274697;
  v377 = ((v371 & 0x6C832BE9 ^ 0xC08228A8)
        + (v371 ^ 0x2C09C741)
        - ((v371 ^ 0x2C09C741) & 0x6C832BE9)) ^ 0xEA834F39;
  LODWORD(v374) = *(_DWORD *)(v275
                            + 4 * ((BYTE3(v355) ^ 0x37F1FF5D27C7AB8FLL) + ((2 * (BYTE3(v355) ^ 0xC6)) & 0x92))
                            + 0x1D01EA6ABFF20A40) ^ LODWORD(STACK[0x24C]) ^ *(_DWORD *)(v279
                                                                                        + 4
                                                                                        * ((((BYTE1(v366) ^ 0xE1 | 0xC9B800C7)
                                                                                           - (BYTE1(v366) ^ 0xE1 | 0x3647FF38)
                                                                                           + 910688056) ^ 0x3CBDEFBB3465EF90)
                                                                                         + ((2
                                                                                           * (((BYTE1(v366) ^ 0xE1 | 0xC9B800C7)
                                                                                             - (BYTE1(v366) ^ 0xE1 | 0x3647FF38)
                                                                                             + 910688056) ^ 0xC9B8007F)) & 0x1FBBBDFDELL))
                                                                                        - 0x6E9A78F7F9FDADF3) ^ *(_DWORD *)(v281 + 4 * ((((v357 ^ 0xA7) - ((2 * (v357 ^ 0xA7)) & 0xE6u) + 4979) ^ 0x35A8F71BF5FBE575) + ((2 * (((v357 ^ 0xA7) - ((2 * (v357 ^ 0xA7)) & 0xE6) + 4979) ^ 0x13C2u)) & 0x1EBF7ED6ELL)) + 0x159DDEF9557B952) ^ *(_DWORD *)(v276 + 4 * ((v377 ^ 0x5C6363FCFEDFAE6) + ((2 * v377) & 0x19FDBF5CCLL)) + 0x7EC72C2222B48F0FLL);
  LODWORD(v375) = (v366 ^ 0xA7 | 0x2EA49D5E) - (v366 ^ 0xA7 | 0xD15B62A1) - 782540127;
  v378 = ((v375 & 0x26A419DE ^ 0x190180)
        + (v375 ^ 0x77A41C5F)
        - ((v375 ^ 0x77A41C5F) & 0x500001DE)) ^ 0x2FBD98D2;
  LODWORD(v378) = *(_DWORD *)(v281
                            + 4 * ((v378 ^ 0x27BFBDDBD2F9FDEFLL) + ((2 * v378) & 0x1A5F3FBDELL))
                            + 0x38FEC2F0215F9C72);
  LODWORD(v377) = *(_DWORD *)(v275
                            + 4 * ((BYTE3(v366) ^ 0x239E76FBCB3FFD42) + ((2 * (BYTE3(v366) ^ 0xAD)) & 0x1DELL))
                            + 0x6E500BF03210BFA8);
  v379 = *(_DWORD *)(v275
                   + 4 * ((HIBYTE(v376) ^ 0x3BFDFFEE31F8F716) + 2 * ((HIBYTE(v376) ^ 0x69) & 0x7FLL))
                   + 0xCD1E826972CD968);
  v380 = *(_DWORD *)(v275
                   + 4 * ((BYTE3(v357) ^ 0x37FEFFFE3DFFCD3DLL) + ((2 * (BYTE3(v357) ^ 0xDA)) & 0x1CELL))
                   + 0x1CCDE7E667117FC8) ^ LODWORD(STACK[0x374]) ^ *(_DWORD *)(v276
                                                                               + 4
                                                                               * (((((2 * (BYTE2(v355) ^ 0x41582039)) | 0x6AA68624)
                                                                                  - (BYTE2(v355) ^ 0x41582039u)
                                                                                  - 894649106) ^ 0x3EFFCF3F93B6ACDALL)
                                                                                + ((2
                                                                                  * ((((2 * (BYTE2(v355) ^ 0x41582039)) | 0x6AA68624)
                                                                                    - (BYTE2(v355) ^ 0x41582039)
                                                                                    - 894649106) ^ 0x740B6303u)) & 0x1CF7B9FB2))
                                                                               - 0x661F37DE3C8AC4BDLL) ^ *(_DWORD *)(v279 + 4 * ((((BYTE1(v376) ^ 0xB1C72173) - ((2 * (BYTE1(v376) ^ 0xB1C72173)) & 0x401B2) - 1944435495) ^ 0x1FE7F1FDCE2B9A77) + ((2 * (((BYTE1(v376) ^ 0xB1C72173) - ((2 * (BYTE1(v376) ^ 0xB1C72173)) & 0x401B2) - 1944435495) ^ 0x3DDD65C9)) & 0x1E7EDFF7CLL)) + 0x4BD7E002D9E12D1);
  LODWORD(v373) = (BYTE2(v366) ^ 0x4A) + (WORD1(v366) & 0xE ^ 0x97C5F704) - ((BYTE2(v366) ^ 0x4A) & 0xE);
  v381 = ((v373 & 0x30F ^ 0x38600005) + (v373 & 0x1CF0 ^ 0x1010401) - 1) ^ 0x3961133E;
  LODWORD(v366) = v377 ^ LODWORD(STACK[0x25C]) ^ *(_DWORD *)(v279
                                                           + 4
                                                           * ((BYTE1(v355) ^ 0x1FFAFF6AFFF9F78ALL)
                                                            + ((2 * (BYTE1(v355) ^ 0x79u)) & 0x1E6))
                                                           + 0x471484BFD9231FDLL) ^ *(_DWORD *)(v281
                                                                                              + 4
                                                                                              * ((((v376 & 0xC5)
                                                                                                 - 2079849473
                                                                                                 + (v376 & 0x3A ^ 0x2930B32B)) ^ 0x33FADDFE50F7445BLL)
                                                                                               + ((2
                                                                                                 * (((v376 & 0xC5) - 2079849473 + (v376 & 0x3A ^ 0x2930B32B)) ^ 0xAD38B7CE)) & 0x72ALL))
                                                                                              + 0x81242637607C5DALL);
  v382 = *(_DWORD *)(v279
                   + 4 * ((BYTE1(v357) ^ 0x37BFDC6EFFCFFB48) + ((2 * (BYTE1(v357) ^ 0x83u)) & 0x196))
                   - 0x5AA22BC401C5DD63);
  LODWORD(v357) = v366 ^ *(_DWORD *)(v276
                                   + 4
                                   * (((((2 * (BYTE2(v357) ^ 0x14)) | 0xAC33045E) - (BYTE2(v357) ^ 0x14) + 702971345) ^ 0x3ED9B3B338C9F51ALL)
                                    + ((2
                                      * ((((2 * (BYTE2(v357) ^ 0x14)) | 0xAC33045E) - (BYTE2(v357) ^ 0x14) + 702971345) ^ 0xD61982E5)) & 0x1DDA0EFFELL))
                                   - 0x6586C9AE58D56555);
  LODWORD(v355) = ((v355 ^ 0x2F) - ((2 * (v355 ^ 0x2F)) & 0x62) + 1299473713) ^ 0xF3BE4963;
  v383 = (((2 * (_DWORD)v355) & 0x75900B22) - (_DWORD)v355 - 2079966610) ^ 0x3ACC1638u;
  LODWORD(v381) = a59 ^ v379 ^ v382 ^ *(_DWORD *)(v281
                                                + 4 * ((v383 ^ 0x5FF5E6FF3BFCBAALL) + ((2 * v383) & 0x1E77F9754))
                                                - 0x3FFFBF6061B79A7ALL) ^ *(_DWORD *)(v276
                                                                                    + 4
                                                                                    * ((v381 ^ 0x2EBD88DFDDFFDB8FLL)
                                                                                     + ((2 * v381) & 0x1BBFFB71ELL))
                                                                                    - 0x25161E5E1592F395);
  LODWORD(v383) = v380 ^ v378;
  v384 = v380 ^ ~(_DWORD)v378;
  v385 = *(_QWORD *)(v85 - 200);
  v386 = *(_DWORD *)(v385 + 4 * (BYTE3(v357) ^ 0xB8));
  LODWORD(v377) = v381 ^ 0xBE;
  LODWORD(v366) = HIBYTE(v384);
  v387 = *(_DWORD *)(v385 + 4 * (BYTE3(v374) ^ 0x3C));
  v388 = *(_DWORD *)(v385 + 4 * v366);
  v389 = *(_QWORD *)(v85 - 160);
  v390 = *(_DWORD *)(v389 + 4 * (BYTE2(v381) ^ 0xBFu));
  v391 = *(_DWORD *)(v389 + 4 * (BYTE2(v374) ^ 0x7Fu));
  v392 = *(_DWORD *)(v389 + 4 * (BYTE2(v383) ^ 0xCAu));
  LODWORD(v389) = *(_DWORD *)(v389 + 4 * (BYTE2(v357) ^ 0xE9u));
  LODWORD(v385) = LODWORD(STACK[0x310]) ^ a14 ^ a68 ^ *(_DWORD *)(v385 + 4 * (BYTE3(v381) ^ 0xAC));
  v393 = (((2 * ((v385 ^ 0x9A18CF03) & 0xD51BD28A ^ 0x15135202)) | 0x2CF2096C)
        - ((v385 ^ 0x9A18CF03) & 0xD51BD28A ^ 0x15135202)
        + 1770453834) ^ 0x87F53CF4;
  LODWORD(v385) = ((v385 ^ 0x9A18CF03) & 0x2AE42D75 ^ 0xAE40860)
                + (v385 & 0x20840004 ^ 0xE501520E)
                - (((v385 ^ 0x9A18CF03) & 0x2AE42D75 ^ 0xAE40860) & 0x20840004);
  v394 = *(_QWORD *)(v85 - 240);
  v395 = *(_DWORD *)(v394 + 4 * (BYTE1(v357) ^ 0xF0u));
  v396 = ((v393 | 0xC2FDB910) - (v393 | 0x3D0246EF) + 1023559407) ^ 0x427B53D0 | ((v385 & 0x72180555 ^ 0x500A0541)
                                                                                + (v385 & 0x8DE42AA8 ^ 0xDE41203)
                                                                                - 1) ^ 0x920A115E;
  LODWORD(v381) = *(_DWORD *)(v394 + 4 * (BYTE1(v381) ^ 0x24u));
  v397 = *(_DWORD *)(v394 + 4 * (BYTE1(v374) ^ 0xE5u));
  LODWORD(v394) = *(_DWORD *)(v394 + 4 * (BYTE1(v383) ^ 0x18u));
  v398 = v396 - ((2 * v396) & 0xD6997328) - 347293292;
  LODWORD(v357) = a50 ^ a57 ^ a51 ^ v388 ^ v381 ^ *(_DWORD *)(STACK[0x438] + 4 * (v357 ^ 0xF2u));
  LODWORD(v381) = *(_DWORD *)(STACK[0x438] + 4 * (v383 ^ 0x11u));
  v399 = v357 ^ v391;
  LODWORD(v383) = a51 ^ LODWORD(STACK[0x220]) ^ ((a49 ^ 0x3B00A97D)
                                               - 2 * ((a49 ^ 0x3B00A97D) & 0x55498E72 ^ a49 & 2)
                                               - 716599696
                                               + (v386 & 0x80000000)) ^ v392 ^ *(_DWORD *)(STACK[0x438]
                                                                                         + 4 * v377) ^ v397 ^ (((2 * (v386 & 0x7FFFFFFF ^ 0x6253018B)) & 0x8C924C1E) - (v386 & 0x7FFFFFFF ^ 0x6253018B) - 1179198992);
  v400 = a50 ^ a76 ^ a51 ^ v390 ^ v395 ^ v387 ^ v381;
  v401 = *(unsigned __int8 *)(STACK[0x3E8] + (v400 ^ 0x8FLL));
  LODWORD(v377) = *(unsigned __int8 *)(STACK[0x410]
                                     + ((a51 ^ LOBYTE(STACK[0x220]) ^ ((a49 ^ 0x7D)
                                                                                      - 2
                                                                                      * ((a49 ^ 0x7D) & 0x72 ^ a49 & 2)
                                                                                      + 112) ^ v392 ^ *(_BYTE *)(STACK[0x438] + 4 * v377) ^ v397 ^ (((2 * (v386 ^ 0x8B)) & 0x1E) - (v386 ^ 0x8B) - 16)) ^ 0x7CLL));
  LODWORD(v357) = v389 ^ a51 ^ v394 ^ *(_DWORD *)(STACK[0x438] + 4 * (v374 ^ 0x13u));
  v402 = *(unsigned __int8 *)(*(_QWORD *)(v85 - 224) + (BYTE1(v400) ^ 0xCLL));
  LODWORD(v389) = *(unsigned __int8 *)(STACK[0x3E0] + (v399 ^ 0xA9));
  v403 = v357 ^ v398;
  v404 = *(unsigned __int8 *)(*(_QWORD *)(v85 - 192) + (HIBYTE(v400) ^ 0xDELL));
  v405 = *(_QWORD *)(v85 - 168);
  STACK[0x3A8] = v405;
  v406 = *(unsigned __int8 *)(v405 + (BYTE1(v399) ^ 0xCLL));
  v407 = *(unsigned __int8 *)(STACK[0x408] + (BYTE2(v400) ^ 0xD7));
  v408 = *(unsigned __int8 *)(STACK[0x418] + (BYTE1(v383) ^ 0xF5));
  LODWORD(v394) = *(unsigned __int8 *)(STACK[0x3D8] + (((unsigned __int16)(v357 ^ v398) >> 8) ^ 0xA0));
  LODWORD(v374) = *(unsigned __int8 *)(STACK[0x440] + (BYTE3(v383) ^ 0x8ALL));
  LODWORD(v357) = ((((v404 ^ 0x33) - ((2 * (v404 ^ 0x33)) & 0x7C)) << 24) + 1040187392) ^ 0x3E000000;
  v409 = v357 - ((2 * v357) & 0xDA000000);
  LODWORD(v357) = *(unsigned __int8 *)(STACK[0x3F8] + (v403 ^ 0xELL));
  LODWORD(v405) = *(unsigned __int8 *)(STACK[0x3D0] + (BYTE2(v383) ^ 0xC7));
  LODWORD(v383) = ((((v407 ^ 0x5D) - ((2 * (v407 ^ 0x5D)) & 0xFFFFFFBF)) << 16) + 467599360) ^ 0x1BDF0000;
  v410 = v383 - ((2 * v383) & 0xDAC0000);
  LODWORD(v383) = ((((v402 ^ 0x11) - ((2 * (v402 ^ 0x11)) & 0xFFFFFFFB)) << 8) + 2073754880) ^ 0x7B9AFD00;
  v411 = (v383 - ((2 * v383) & 0x7B322400) + 1033441881) ^ 0x3D991259 | ((v401 ^ 0x82) - ((2 * v401) & 0x32) + 1553697561) ^ 0x5C9B8B19;
  v412 = *(unsigned __int8 *)(STACK[0x430] + (BYTE2(v399) ^ 0xAALL)) ^ 0xB7;
  v413 = (((v412 + (~(2 * (_BYTE)v412) | 0xFFFFFFF7)) << 16) + 67436544) ^ 0x4040000;
  v414 = ((((v406 ^ 0x9D) + 7610554 - ((2 * (v406 ^ 0x9D)) & 0x55555555)) << 8) - 4096) ^ 0x7420AA00;
  v415 = (v410 + 1188441715) ^ 0x46D62E73 | (v411 - ((2 * v411) & 0xF3AA8EC) - 945990538) ^ 0xC79D5476;
  v416 = (v415 - ((2 * v415) & 0x5FEFA50E) - 1342713209) ^ 0xAFF7D287 | (v409 + 1841945385) ^ 0x6DC9DB29;
  v417 = (v414 - ((2 * v414) & 0x4C863400) - 1505551682) ^ 0xA6431ABE | ((v389 ^ 0x4C)
                                                                       - ((2 * (v389 ^ 0x4C)) & 0xFFFFFFBF)
                                                                       - 991411745) ^ 0xC4E841DF;
  v418 = (v417 - ((2 * v417) & 0x52B47C32) + 1767521817) ^ 0x695A3E19 | (v413 - ((2 * v413) & 0xE9E0000) + 1733278001) ^ 0x674FB931;
  v419 = *(unsigned __int8 *)(*(_QWORD *)(v85 - 232) + (HIBYTE(v399) ^ 0xA3)) ^ 0xFD;
  v420 = ((v419 - ((2 * v419) & 0xAAAAAAAA)) << 24) - 721420288;
  LODWORD(v405) = ((((v405 ^ 0x13) + (~(2 * (v405 ^ 0x13)) | 0xFE39)) << 16) - 1360789504) ^ 0xAEE30000;
  LODWORD(v389) = v405 - ((2 * v405) & 0x3180000);
  LODWORD(v405) = (v418 - ((2 * v418) & 0x4C6AFF3A) - 1506443363) ^ 0xA6357F9D | ((v420 ^ 0xD5000000)
                                                                                - ((2 * v420) & 0x50000000)
                                                                                + 681800588) ^ 0x28A3738C;
  v421 = ((((v408 ^ 0x73) - ((2 * (v408 ^ 0x73)) & 0xF8)) << 8) + 2015788032) ^ 0x78267C00;
  v422 = (v421 - ((2 * v421) & 0x6AA88600) + 894714805) ^ 0x355443B5 | ((v377 ^ 0xE9)
                                                                      - ((2 * (v377 ^ 0xE9)) & 0x122)
                                                                      + 1072869777) ^ 0x3FF2B191;
  v423 = ((((v394 ^ 0xD8) - ((2 * (v394 ^ 0xD8)) & 0x178)) << 8) - 2031764480) ^ 0x86E5BC00;
  v424 = *(unsigned __int8 *)(STACK[0x420] + (HIBYTE(v403) ^ 0x3ELL)) ^ 0xA8;
  v425 = (((v424 - ((2 * v424) & 0x5E)) << 24) - 1358954496) ^ 0xAF000000;
  v426 = (v389 - 242452401) ^ 0xF18C784F | (v422 - ((2 * v422) & 0x1FF91620) - 805532912) ^ 0xCFFC8B10;
  LODWORD(v374) = ((((v374 ^ 0x6D) - ((2 * (v374 ^ 0x6D)) & 0xFFFFFFDF)) << 24) - 285212672) ^ 0xEF000000;
  LODWORD(v374) = (v426 - ((2 * v426) & 0x3DA0A28E) - 1630514873) ^ 0x9ED05147 | (v374
                                                                                - ((2 * v374) & 0xA4000000)
                                                                                - 764830095) ^ 0xD2699E71;
  LODWORD(v357) = (v423 - ((2 * v423) & 0x2EAD2600) + 391549911) ^ 0x175693D7 | ((v357 ^ 0x88)
                                                                               - ((2 * v357) & 0x64)
                                                                               - 145271502) ^ 0xF7575532;
  LODWORD(v383) = *(unsigned __int8 *)(*(_QWORD *)(v85 - 176) + (BYTE2(v403) ^ 0x3FLL)) ^ 0x82;
  LODWORD(v383) = ((((_DWORD)v383 - ((2 * (_DWORD)v383) & 0x178)) << 16) + 1941700608) ^ 0x73BC0000;
  LODWORD(v383) = (v383 - ((2 * v383) & 0x29D60000) - 722793525) ^ 0xD4EB0BCB | (v357
                                                                               - ((2 * v357) & 0x513A574C)
                                                                               + 1755130790) ^ 0x689D2BA6;
  LODWORD(v383) = (v383 - ((2 * v383) & 0x5F2519E) + 1123625167) ^ 0x42F928CF | (v425
                                                                               - ((2 * v425) & 0x7A000000)
                                                                               + 1023877862) ^ 0x3D0722E6;
  LODWORD(v357) = a82 ^ a61 ^ a60 ^ 0xE5B1706B ^ (v405 - ((2 * v405) & 0x3B8E4632) + 499589913);
  LODWORD(v405) = a60 ^ a61 ^ a83;
  v427 = v405 ^ (v383 - ((2 * v383) & 0xED35E322) - 157617775);
  LODWORD(v374) = v405 ^ (v374 - ((2 * v374) & 0x5825CE3C) - 1408047330);
  LODWORD(v405) = v405 ^ (v416 - ((2 * v416) & 0x13E9117C) + 167020734) ^ v357;
  LODWORD(v383) = v374 ^ v357 ^ v427;
  v428 = *(_QWORD *)(v85 - 152);
  LODWORD(v374) = v374 ^ v405;
  v427 ^= 0x1C10BD31u;
  LODWORD(v357) = v427 ^ v405;
  LODWORD(v405) = ((((unsigned __int16)(v427 ^ v405) >> 8) ^ 0x89)
                 - ((2 * (((unsigned __int16)(v427 ^ v405) >> 8) ^ 0x89)) & 0x196)
                 - 1978077493) ^ 0xDE1442CD;
  v429 = ((_DWORD)v405 - ((2 * (_DWORD)v405) & 0x881813FC) - 989902338) ^ 0x90F3E5FE;
  v430 = *(_QWORD *)(v85 - 216);
  LODWORD(v394) = *(_DWORD *)(v430
                            + 4 * ((v429 ^ 0x3FCBDFF4BFD6E1EELL) + ((2 * v429) & 0x17FADC3DCLL))
                            - 0x679050EC1CCCEF31);
  LODWORD(v429) = v427 ^ v374 ^ v383;
  v431 = ((v429 & 0x90)
        + ((v427 ^ v374 ^ v383) ^ 0xC510A7D2)
        - (((v427 ^ v374 ^ v383) ^ 0xC510A7D2) & 0x84102490)
        + 438523904) ^ 0x5B23DB11;
  v432 = *(_DWORD *)(STACK[0x3F0]
                   + 4 * ((BYTE3(v374) ^ 0x3F6BFE7FBDEB4AALL) + ((2 * (BYTE3(v374) ^ 0x7D)) & 0x1AELL))
                   - 0x52DA670EFE70B0CALL) ^ *(_DWORD *)(v428
                                                       + 4
                                                       * (((((2 * (BYTE2(v383) ^ 0x4C188A4)) | 0xD2EF95A0)
                                                          - (BYTE2(v383) ^ 0x4C188A4)
                                                          + 378025264) ^ 0x179E70FF12C19DCFLL)
                                                        + ((2
                                                          * ((((2 * (BYTE2(v383) ^ 0x4C188A4)) | 0xD2EF95A0)
                                                            - (BYTE2(v383) ^ 0x4C188A4)
                                                            + 378025264) ^ 0xEDB64230)) & 0x1FEEFBFFELL))
                                                       + 0x425123385759F7B4) ^ *(_DWORD *)(STACK[0x400]
                                                                                           + 4
                                                                                           * ((v431 ^ 0x17CFBD7FF87F3EF1)
                                                                                            + ((2 * v431) & 0x1F0FE7DE2))
                                                                                           + 0x51F15FBABF94B289) ^ v394;
  v433 = ((v374 & 0x79) + (v374 ^ 0xFFFFFF79) + (v374 | 0xD19A8386) + 1) ^ 0x51922786;
  v434 = (((2 * v433) & 0x25D92830) - v433 + 1829989351) ^ 0xED1BCFEA;
  LODWORD(v394) = *(_DWORD *)(STACK[0x3F0]
                            + 4 * ((BYTE3(v383) ^ 0x177FCFF7EC37B7E0) + ((2 * (BYTE3(v383) ^ 0xFC)) & 0x38))
                            + 0x5F0158B1402B4622) ^ *(_DWORD *)(v428
                                                                + 4
                                                                * (((((2 * (BYTE2(v357) ^ 0xD2)) & 0xFFFFFF03)
                                                                   - (BYTE2(v357) ^ 0xD2)
                                                                   + 18302) ^ 0x3EF3FFFD5F7B8AF9)
                                                                 + ((2
                                                                   * ((((2 * (BYTE2(v357) ^ 0xD2)) & 0xFFFFFF03)
                                                                     - (BYTE2(v357) ^ 0xD2)
                                                                     + 18302) ^ 0x4704)) & 0x9BFALL))
                                                                - 0x5B0518BD28B5C044) ^ *(_DWORD *)(v430 + 4 * ((((BYTE1(v429) ^ 0x247046FA | 0xBFA52684) - (BYTE1(v429) ^ 0x247046FA | 0x405AD97B) + 1079695739) ^ 0x1FDEDBFC762E7BC6) + ((2 * (((BYTE1(v429) ^ 0x247046FA | 0xBFA52684) - (BYTE1(v429) ^ 0x247046FA | 0x405AD97B) + 1079695739) ^ 0x9BD56000)) & 0x1DBF6378CLL)) + 0x1823BEF32AA2296FLL) ^ *(_DWORD *)(STACK[0x400] + 4 * ((v434 ^ 0x3FDD9FF7EEFFFE5DLL) + ((2 * v434) & 0x1DDFFFCBALL)) - 0x4E462A251A6E4B27);
  v435 = (v383 ^ 0xFFFFFF7F) - 1553124274 + ((2 * v383) | 0xB9259766);
  v436 = ((v435 & 0x18000C72 ^ 0x3090401) + (v435 & 0x4080038D) - 1) ^ 0x5B890FEC;
  v437 = (((2 * (BYTE1(v374) ^ 0x4E)) & 0x1F4) - (BYTE1(v374) ^ 0x4E) + 1409645829) ^ 0x760F3C0D;
  v438 = (v437 - ((2 * v437) & 0x441401D0) + 662350056) ^ 0x570E9EEu;
  LODWORD(v374) = ((BYTE2(v374) ^ 0xCFA5B518 | 0xFB22FE94) - (BYTE2(v374) ^ 0xCFA5B518 | 0x4DD016B) + 81592683) ^ 0x208FF1E5;
  v439 = ((_DWORD)v374 - ((2 * (_DWORD)v374) & 0x1DB1025E) - 1898413777) ^ 0x9AD03B2B;
  v440 = *(_DWORD *)(v428
                   + 4
                   * ((((BYTE2(v429) ^ 0x81 | 0x4CBB2825) - (BYTE2(v429) ^ 0x81 | 0xB344D7DA) - 1287333926) ^ 0xEDF7EFDB344D672)
                    + ((2
                      * (((BYTE2(v429) ^ 0x81 | 0x4CBB2825) - (BYTE2(v429) ^ 0x81 | 0xB344D7DA) - 1287333926) ^ 0x4CBB2881)) & 0x1FFFFFDE6))
                   + 0x654CEB4055397BE4) ^ *(_DWORD *)(STACK[0x3F0]
                                                       + 4
                                                       * ((BYTE3(v357) ^ 0x33D56D7F7FEF15D6)
                                                        + ((2 * (BYTE3(v357) ^ 0x3D)) & 0x1D6))
                                                       - 0x12551D6D0EB2351ALL) ^ *(_DWORD *)(STACK[0x400]
                                                                                           + 4
                                                                                           * ((v436 ^ 0x3ECFF9FCFDCD7C73)
                                                                                            + ((2 * v436) & 0x1FB9AF8E6))
                                                                                           - 0x4A0F923955A4437FLL) ^ *(_DWORD *)(v430 + 4 * ((v438 ^ 0x2F5A7F78DFBFF77BLL) + ((2 * v438) & 0x1BF7FEEF6)) - 0x25CACEFC9C714565);
  LOWORD(v357) = (v357 ^ 0x1B) - ((2 * (v357 ^ 0x1B)) & 0xFF87) + 27587;
  v441 = ((v357 & 0x60E ^ 0x1DA1040D) + (v357 & 0x9F1) - 1) ^ 0x1DA10F3E;
  LODWORD(v383) = (((2 * (BYTE1(v383) ^ 0xDA2A1B9C)) & 0x3044049C) - (BYTE1(v383) ^ 0xDA2A1B9C) - 430155343) ^ 0x7C760287;
  v442 = (((2 * (_DWORD)v383) & 0x520C214) - (_DWORD)v383 + 1967988469) ^ 0x354D5EFFu;
  LODWORD(v441) = *(_DWORD *)(v428
                            + 4 * ((v439 ^ 0x3EF5AEE3FBCEF9BBLL) + ((2 * v439) & 0x1F79DF376))
                            - 0x5B0BD4579A026F3CLL) ^ *(_DWORD *)(STACK[0x3F0]
                                                                + 4
                                                                * ((BYTE3(v429) ^ 0x217DBBFFFBED5331)
                                                                 + ((2 * (BYTE3(v429) ^ 0x6A)) & 0xB6))
                                                                + 0x3709A8910154D526) ^ *(_DWORD *)(v430 + 4 * ((v442 ^ 0x1FEBFFFF76FF3EEELL) + ((2 * (_DWORD)v442) & 0xEDFE7DDC)) + 0x17EF2EE906919CCFLL) ^ *(_DWORD *)(STACK[0x400] + 4 * ((v441 ^ 0xEFFED83FCFCFFDFLL) + ((2 * v441) & 0x1F9F9FFBELL)) + 0x75309FAAAD9DAED1);
  LODWORD(v429) = ((WORD1(v394) & 0x50 ^ 0xAB147A11) + (WORD1(v394) & 0xAF) - 1) ^ 0x2B36767C;
  v443 = (((2 * (_DWORD)v429) | 0x3C3D5F26) - (_DWORD)v429 - 505327507) ^ 0x9E3CA323;
  LODWORD(v442) = *(_DWORD *)(STACK[0x3F0]
                            + 4 * ((HIBYTE(v432) ^ 0x37F5BBF9CDE47AA4) + ((2 * (HIBYTE(v432) ^ 0x53)) & 0x1EELL))
                            - 0x22D657564687C94ALL) ^ *(_DWORD *)(v428
                                                                + 4
                                                                * ((v443 ^ 0x32DF3DE0FB6DEE7DLL)
                                                                 + ((2 * v443) & 0x1F6DBDCFALL))
                                                                - 0x2AB2104B987E4244);
  LODWORD(v439) = ((BYTE1(v440) ^ 0x72) + ((v440 >> 8) & 0xE5 ^ 0x9BCD2D85) - ((BYTE1(v440) ^ 0x72) & 0xE5)) ^ 0xABEF4DF5;
  v444 = ((v439 | 0xA9756B54) - (v439 | 0x568A94AB) + 1451922603) ^ 0x99570B9C;
  LODWORD(v443) = (((2 * (v441 ^ 0xBB928FE)) & 0x3625066)
                 - (v441 ^ 0xBB928FE)
                 + 1515082444) ^ 0x51F54BAF;
  v445 = (((2 * (_DWORD)v443) | 0xADDD595C) - (_DWORD)v443 + 689001298) ^ 0xD6EC9D74;
  LODWORD(v385) = v442 ^ *(_DWORD *)(v430
                                   + 4 * ((v444 ^ 0x3FF773FCFFF3BCFBLL) + ((2 * v444) & 0x1FFE779F6))
                                   - 0x683EA10D1D405B65) ^ *(_DWORD *)(STACK[0x400]
                                                                       + 4
                                                                       * ((v445 ^ 0x2D5FFAFFEAFF37F9)
                                                                        + ((2 * v445) & 0x1D5FE6FF2))
                                                                       - 0x44F96450A6B3197);
  LODWORD(v438) = *(_DWORD *)(STACK[0x3F0]
                            + 4 * ((BYTE3(v394) ^ 0x37EDF6FEF7AEEFCLL) + 2 * (BYTE3(v394) ^ 3))
                            - 0x50FAE52ECCE1996ALL) ^ *(_DWORD *)(v428
                                                                + 4
                                                                * (((((2 * (BYTE2(v440) ^ 0x68338045)) & 0x906100BE)
                                                                   - (BYTE2(v440) ^ 0x68338045)
                                                                   - 1572395360) ^ 0x2BEFFBD737AB594FLL)
                                                                 + ((2
                                                                   * ((((2 * (BYTE2(v440) ^ 0x68338045)) & 0x906100BE)
                                                                     - (BYTE2(v440) ^ 0x68338045)
                                                                     - 1572395360) ^ 0xCA74A6A4)) & 0x1E3BE07D6))
                                                                - 0xEF50827A24687FCLL) ^ *(_DWORD *)(v430 + 4 * (((((2 * (BYTE1(v441) ^ 0x898186F)) & 0x11302190) - (BYTE1(v441) ^ 0x898186Fu) + 52489271) ^ 0x16F846BFD2671AE3) + ((2 * ((((2 * (BYTE1(v441) ^ 0x898186F)) & 0x11302190) - (BYTE1(v441) ^ 0x898186F) + 52489271) ^ 0xBB8F417u)) & 0x1B3BFCDE8)) + 0x3BBE13E77B0EDCB7) ^ *(_DWORD *)(STACK[0x400] + 4 * (((((2 * (v432 ^ 0xAD)) | 0x70B8C44) - (v432 ^ 0xAD) + 2021276126) & 0x7FFFFFF ^ 0x3F7BFC6DBC9A68EELL) + ((2 * ((((2 * (v432 ^ 0xAD)) | 0x70B8C44) - (v432 ^ 0xAD) + 2021276126) & 0x7FFFFFF ^ 0x785C611)) & 0x60B1DFE)) - 0x4CBF9BFC4AED0DAFLL);
  LODWORD(v431) = *(_DWORD *)(v430
                            + 4
                            * (((((2 * (BYTE1(v432) ^ 0x9F)) | 0x4D2861DC) - (BYTE1(v432) ^ 0x9Fu) - 647246062) ^ 0x3FDFDDFBD96BE52ELL)
                             + ((2
                               * ((((2 * (BYTE1(v432) ^ 0x9F)) | 0x4D2861DC) - (BYTE1(v432) ^ 0x9F) - 647246062) ^ 0x269430D3u)) & 0x1FFFFABFALL))
                            - 0x67E049091D70BF6DLL);
  LODWORD(v351) = ((BYTE2(v432) ^ 0x75 | 0x8AA443C7) - (BYTE2(v432) ^ 0x75 | 0x755BBC38) + 1968946232) ^ 0x82464B07;
  v446 = (((2 * (_DWORD)v351) | 0xD1F7B36C) - (_DWORD)v351 + 386147914) ^ 0xE019D1BA;
  LOWORD(v445) = (v394 ^ 0xAA) + (v394 & 0x99 ^ 0x8511) - ((v394 ^ 0xAA) & 0x9999);
  v447 = ((v445 & 0x17F ^ 0x2481C066) + (v445 & 0x680 ^ 0x92221481) - 1) ^ 0xB6A3D1CA;
  v448 = ((BYTE1(v394) ^ 6) - ((2 * (BYTE1(v394) ^ 6)) & 0x1A) - 682111731) ^ 0xDB5B8994;
  v449 = (((2 * v448) | 0x1A5E224) - v448 + 2133659374) ^ 0x8CDEB514;
  LODWORD(v444) = *(_DWORD *)(v428
                            + 4
                            * ((((BYTE2(v441) ^ 0x98048B25 | 0xE5113386)
                               - (BYTE2(v441) ^ 0x98048B25 | 0x1AEECC79)
                               + 451857529) ^ 0x1CDEBFFFB36F427CLL)
                             + ((2
                               * (((BYTE2(v441) ^ 0x98048B25 | 0xE5113386)
                                 - (BYTE2(v441) ^ 0x98048B25 | 0x1AEECC79)
                                 + 451857529) ^ 0x7D15B887)) & 0x19CF5F5F6))
                            + 0x2D4FE7391B4D8BC4) ^ *(_DWORD *)(STACK[0x3F0]
                                                                + 4
                                                                * ((HIBYTE(v440) ^ 0x3EFEE997CF4FDBB6)
                                                                 + ((2 * (HIBYTE(v440) ^ 0x68)) & 0x1BCLL))
                                                                - 0x3EFB0DCE4C354CE6) ^ *(_DWORD *)(STACK[0x400] + 4 * ((v447 ^ 0x17D9EFBA5FFFFFECLL) + ((2 * (_DWORD)v447) & 0xBFFFFFD8)) + 0x51C896D12191AE9DLL) ^ v431;
  LODWORD(v381) = *(_DWORD *)(STACK[0x3F0]
                            + 4 * ((BYTE3(v441) ^ 0x35BE6FFBFFFF7DD5) + 2 * ((BYTE3(v441) ^ 0xAA) & 0x7FLL))
                            - 0x19F9275F0EF3D36ALL) ^ *(_DWORD *)(v430
                                                                + 4
                                                                * ((v449 ^ 0x1FFFFEBF37FBFFA3)
                                                                 + ((2 * (_DWORD)v449) & 0x6FF7FF46))
                                                                + 0x179F33EA029E99FBLL) ^ *(_DWORD *)(STACK[0x400] + 4 * (((((2 * (v440 ^ 0xE48FCAEC)) & 0x481481CC) - (v440 ^ 0xE48FCAEC) + 1268092697) ^ 0x16D19ECF9265BBA4) + ((2 * ((((2 * (v440 ^ 0xE48FCAEC)) & 0x481481CC) - (v440 ^ 0xE48FCAEC) + 1268092697) ^ 0xAF1A45D9)) & 0x72FFFCFA)) + 0x55E9DA7DAB91B459) ^ *(_DWORD *)(v428 + 4 * ((v446 ^ 0xE67FE8DFDD6DF9DLL) + ((2 * v446) & 0x1FBADBF3ALL)) + 0x672AED005DDDF93CLL);
  LODWORD(v446) = (BYTE1(v444) ^ 0xA4) - ((2 * (BYTE1(v444) ^ 0xA4)) & 0x66666666) + 401366835;
  v450 = ((v446 & 0x11C8581A ^ 0x40028802)
        + (v446 ^ 0x37E87239)
        - ((v446 ^ 0x37E87239) & 0x581A)) ^ 0x71CEF59F;
  LODWORD(v449) = (((2 * (v385 ^ 0xAD)) & 0xDC) - (v385 ^ 0xAD) - 821365615) ^ 0xDDCA7482;
  v451 = ((_DWORD)v449 - ((2 * (_DWORD)v449) & 0x21810E4C) - 1193636058) ^ 0xAA1A0FE6;
  LODWORD(v315) = *(_DWORD *)(STACK[0x400]
                            + 4 * ((v451 ^ 0xDFBBFFFFF5F2F7BLL) + ((2 * v451) & 0x1FEBE5EF6))
                            + 0x794155BAA414F061);
  LODWORD(v451) = *(_DWORD *)(v428
                            + 4
                            * (((((2 * (BYTE2(v438) ^ 0x405ACA3)) & 0x80041CA) - (BYTE2(v438) ^ 0x405ACA3u) - 1198682598) ^ 0x39FD7FE35A3BDC94)
                             + ((2
                               * ((((2 * (BYTE2(v438) ^ 0x405ACA3)) & 0x80041CA) - (BYTE2(v438) ^ 0x405ACA3) - 1198682598) ^ 0xBC88225B)) & 0xC007859E))
                            - 0x472B18574596838CLL) ^ *(_DWORD *)(STACK[0x3F0]
                                                                + 4
                                                                * ((BYTE3(v385) ^ 0x3BF7E79F7FFFBAE7)
                                                                 + ((2 * (BYTE3(v385) ^ 0x11)) & 0x1ECLL))
                                                                - 0x32DF05ED0EF4C946) ^ *(_DWORD *)(STACK[0x400] + 4 * ((v381 ^ 0xAE6F4423EEE7CECLL) + ((2 * (v381 ^ 0x53u)) & 0x17ELL)) - 0x7A6B7B4E5A2844AFLL) ^ *(_DWORD *)(v430 + 4 * ((v450 ^ 0x3FADFF6FFFB5FFFDLL) + ((2 * v450) & 0x1FF6BFFFALL)) - 0x6718CED91C49676DLL);
  LODWORD(v442) = *(_DWORD *)(v430
                            + 4
                            * (((((v385 >> 8) & 0xD8 ^ 0x3830A11) + ((v385 >> 8) & 0x27) - 1) ^ 0x1EF6EE27FC6CD4EDLL)
                             + ((2
                               * ((((v385 >> 8) & 0xD8 ^ 0x3830A11)
                                 + ((v385 >> 8) & 0x27)
                                 - 1) ^ 0x3830A1A)) & 0x1FFDFBDEELL))
                            + 0x1BC37646E2CF1CABLL);
  v452 = *(_DWORD *)(v430
                   + 4
                   * ((((BYTE1(v381) ^ 0x5F) + ((v381 >> 8) & 0xA3 ^ 0x8A0) - ((BYTE1(v381) ^ 0x5F) & 0xA3)) ^ 0x3DFEF3F7EFEFF7FCLL)
                    + ((2
                      * (((BYTE1(v381) ^ 0x5F)
                        + ((v381 >> 8) & 0xA3 ^ 0x8A0)
                        - ((BYTE1(v381) ^ 0x5F) & 0xA3)) ^ 0x88B)) & 0x1DFDFFEEELL))
                   - 0x605CA0F8DD316555) ^ *(_DWORD *)(STACK[0x3F0]
                                                       + 4
                                                       * ((BYTE3(v438) ^ 0x27AFFE5BFDD8F7A2)
                                                        + ((2 * (BYTE3(v438) ^ 0x5C)) & 0x1FCLL))
                                                       + 0x1E409F20F9A6429ALL) ^ *(_DWORD *)(v428
                                                                                           + 4
                                                                                           * ((((((WORD1(v444) & 0x70)
                                                                                                + (BYTE2(v444) ^ 0x400CC974)) | 0x11B13400)
                                                                                              - ((BYTE2(v444) ^ 0x400CC974) & 0x40084970)) ^ 0xF6DFF67A4C00B5BLL)
                                                                                            + ((2
                                                                                              * (((((WORD1(v444) & 0x70)
                                                                                                  + (BYTE2(v444) ^ 0x400CC974)) | 0x11B13400)
                                                                                                - ((BYTE2(v444) ^ 0x400CC974) & 0x40084970)) ^ 0x11B5B470)) & 0x16AEB7E56))
                                                                                           + 0x6312E9997F627B04) ^ v315;
  LODWORD(v431) = ((BYTE2(v385) ^ 0x312A2002)
                 + (WORD1(v385) & 0x7E ^ 0x8C504E7C)
                 - ((BYTE2(v385) ^ 0x312A2002) & 0x28007E)) ^ 0x987F6232;
  v453 = (((2 * (_DWORD)v431) & 0x405A1CBE) - (_DWORD)v431 + 1192239520) ^ 0x623D2D92u;
  LODWORD(v385) = ((v438 ^ 0x3C) + (v438 & 0x5F ^ 0x43DD3243) - ((v438 ^ 0x3C) & 0x5F)) ^ 0xC3FD125E;
  v454 = ((_DWORD)v385 - 1677877030 - ((2 * (_DWORD)v385) & 0x404050) + 3918) ^ 0x1BDD9088u;
  v455 = v442 ^ *(_DWORD *)(STACK[0x3F0]
                          + 4 * ((BYTE3(v444) ^ 0x15FEF7EBE67A75F2) + ((2 * (BYTE3(v444) ^ 0x1D)) & 0x1DELL))
                          + 0x6504B8E157204AD6) ^ *(_DWORD *)(v428
                                                              + 4
                                                              * (((((2 * (BYTE2(v381) ^ 0x14103AD)) | 0x7AFD31CA)
                                                                 - (BYTE2(v381) ^ 0x14103ADu)
                                                                 + 1115776795) ^ 0x1BFDFAFF63D07411)
                                                               + ((2
                                                                 * ((((2 * (BYTE2(v381) ^ 0x14103AD)) | 0x7AFD31CA)
                                                                   - (BYTE2(v381) ^ 0x14103AD)
                                                                   + 1115776795) ^ 0xBC3F9BE7)) & 0x1BFDFDFECLL))
                                                              + 0x30D2FB38D579B7D8) ^ *(_DWORD *)(STACK[0x400]
                                                                                                  + 4 * ((v454 ^ 0x3BFFF77F75ECFC3ELL) + ((2 * (_DWORD)v454) & 0xEBD9F87C))
                                                                                                  - 0x3ECF8843362242ABLL);
  LODWORD(v442) = ((BYTE1(v438) ^ 0x43)
                 + ((v438 >> 8) & 0x9F ^ 0xCD9A669C)
                 - ((BYTE1(v438) ^ 0x43) & 0xFFFFFF9F)) ^ 0xBE6E25C6;
  v456 = (((2 * (_DWORD)v442) & 0xA580045A) - v442 + 692019666) ^ 0x5ACB223D;
  LODWORD(v441) = *(_DWORD *)(v428
                            + 4 * ((v453 ^ 0x19EFEFF3DEDD7FBBLL) + ((2 * v453) & 0x1BDBAFF76))
                            + 0x390B2768D9C378C4) ^ *(_DWORD *)(STACK[0x400]
                                                                + 4
                                                                * (((65600
                                                                   - (v444 & 0xA1)
                                                                   + (v444 & 0x5E ^ 0x2788745B)
                                                                   + 96) ^ 0x37D7FFD7D456EB04)
                                                                 + ((2
                                                                   * ((65600
                                                                     - (v444 & 0xA1)
                                                                     + (v444 & 0x5E ^ 0x2788745B)
                                                                     + 96) ^ 0x2789745E)) & 0x1E7BF3EB4))
                                                                - 0x2E2FA9A52DECCF1BLL) ^ *(_DWORD *)(STACK[0x3F0] + 4 * ((BYTE3(v381) ^ 0x2DDFFBFFBFD6F69ALL) + ((2 * (BYTE3(v381) ^ 0x44)) & 0x1BCLL)) + 0x580A891F1AE471ALL) ^ *(_DWORD *)(v430 + 4 * ((v456 ^ 0x1AEAEFFFFF56FEFBLL) + ((2 * v456) & 0x1FEADFDF6)) + 0x2BF36EE6E5329C9BLL);
  LODWORD(v454) = *(_DWORD *)(v430
                            + 4 * ((BYTE1(v441) ^ 0x3B2DB83FFBF56FA7) + ((2 * (BYTE1(v441) ^ 0x54u)) & 0x1E6))
                            - 0x5517B2190D472745);
  v457 = (((2 * (v451 ^ 0x54)) | 0x79E6747A) - (v451 ^ 0x54) - 1022573117) ^ 0xBDE31079;
  v458 = (((2 * v457) | 0x905A7A68) - v457 + 936559308) ^ 0x493D17B4;
  LODWORD(v394) = *(_DWORD *)(STACK[0x3F0]
                            + 4 * ((BYTE3(v451) ^ 0xDB9B85D378ABE11) + ((2 * (BYTE3(v451) ^ 0xF2)) & 0x1C6))
                            - 0x79E648E3ED20D8FALL) ^ *(_DWORD *)(STACK[0x400]
                                                                + 4
                                                                * (((((2 * (v441 ^ 0x172D8F5B)) | 0x955D7A36)
                                                                   - (v441 ^ 0x172D8F5B)
                                                                   - 1252965659) ^ 0x3F7FEBF7E274EC34)
                                                                 + ((2
                                                                   * ((((2 * (v441 ^ 0x172D8F5B)) | 0x955D7A36)
                                                                     - (v441 ^ 0x172D8F5B)
                                                                     - 1252965659) ^ 0x5D8332CB)) & 0x17FEFBDFELL))
                                                                - 0x4CCF5A245E4DCDAFLL) ^ *(_DWORD *)(v428 + 4 * (((((2 * (BYTE2(v452) ^ 0xE2)) | 0x20B90A6C) - (BYTE2(v452) ^ 0xE2u) - 274498870) ^ 0x1EFFFEB7EE015240) + ((2 * ((((2 * (BYTE2(v452) ^ 0xE2)) | 0x20B90A6C) - (BYTE2(v452) ^ 0xE2) - 274498870) ^ 0x105C85A7u)) & 0x1FCBBAFCELL)) + 0x24CAEC585BC21814) ^ *(_DWORD *)(v430 + 4 * ((((BYTE1(v455) ^ 0x73 | 0x34482255) - (BYTE1(v455) ^ 0x73 | 0xCBB7DDAA) - 877142614) ^ 0x2FFD7DFF68A3E97BLL) + ((2 * (((BYTE1(v455) ^ 0x73 | 0x34482255) - (BYTE1(v455) ^ 0x73 | 0xCBB7DDAA) - 877142614) ^ 0x344822A0)) & 0xB9D797B6)) - 0x2856C916912096E5);
  v459 = BYTE3(v441) ^ 0x2F;
  v460 = (((2 * (BYTE2(v441) ^ 0xCC006299)) & 0x8000444E) - (BYTE2(v441) ^ 0xCC006299) - 1085944360) ^ 0x7345AF91;
  LODWORD(v456) = v454 ^ *(_DWORD *)(STACK[0x3F0]
                                   + 4
                                   * ((HIBYTE(v452) ^ 0x3FB6FAF2BB78BE0CLL) + ((2 * (HIBYTE(v452) ^ 0xAB)) & 0x14ELL))
                                   - 0x41DB5339FCD8D80ALL) ^ *(_DWORD *)(v428
                                                                       + 4
                                                                       * ((((BYTE2(v455) ^ 0x9248B47B | 0xBECC359D)
                                                                          - (BYTE2(v455) ^ 0x9248B47B | 0x4133CA62)
                                                                          + 1093913186) ^ 0x2EF6CB7BFAFB9F65)
                                                                        + ((2
                                                                          * (((BYTE2(v455) ^ 0x9248B47B | 0xBECC359D)
                                                                            - (BYTE2(v455) ^ 0x9248B47B | 0x4133CA62)
                                                                            + 1093913186) ^ 0x2C8481DD)) & 0x1ACFE3D70))
                                                                       - 0x1B1046B704C30330) ^ *(_DWORD *)(STACK[0x400] + 4 * ((v458 ^ 0x3350ADF92FFEFEFELL) + ((2 * (_DWORD)v458) & 0x5FFDFDFC)) - 0x1C12622A1E6A4DABLL);
  LODWORD(v458) = (WORD1(v451) & 0x77 ^ 0xD4F34BFC) - (WORD1(v451) & 0x88);
  v461 = ((v458 & 0x44214A1F ^ 0x2048017)
        + (v458 ^ 0x6CB34E88)
        - ((v458 ^ 0x6CB34E88) & 0x2800001F)) ^ 0xD665CFFF;
  LODWORD(v450) = *(_DWORD *)(v430
                            + 4 * ((BYTE1(v451) ^ 0xBEAFF1EBDFFE252) + ((2 * (BYTE1(v451) ^ 0x8Du)) & 0x1BELL))
                            + 0x67F3326BEA8F0D0BLL) ^ *(_DWORD *)(STACK[0x3F0]
                                                                + 4
                                                                * ((HIBYTE(v455) ^ 0x3ADBFD2BFF2B7D9ELL)
                                                                 + ((2 * (HIBYTE(v455) ^ 0x78)) & 0x1CCLL))
                                                                - 0x2E6F5C1F0BA3D506) ^ *(_DWORD *)(STACK[0x400] + 4 * ((v452 ^ 0x394FEFDFEFFD5D09) + 2 * (v452 ^ 0xF6u)) - 0x340F69C51E63C9AFLL) ^ *(_DWORD *)(v428 + 4 * ((v460 ^ 0x3F7FAFDDFF74FFDELL) + ((2 * v460) & 0x1FEE9FFBCLL)) - 0x5D33D83FA89A87C8);
  LODWORD(v451) = *(_DWORD *)(v430
                            + 4
                            * ((((BYTE1(v452) ^ 0x129960A8 | 0x8274E05A)
                               - (BYTE1(v452) ^ 0x129960A8 | 0x7D8B1FA5)
                               + 2106269605) ^ 0x1BF7EF5BCB11FC17)
                             + ((2
                               * (((BYTE1(v452) ^ 0x129960A8 | 0x8274E05A)
                                 - (BYTE1(v452) ^ 0x129960A8 | 0x7D8B1FA5)
                                 + 2106269605) ^ 0x90ED80F8)) & 0xB7F8F9DE))
                            + 0x27BF7179729CA4CBLL) ^ *(_DWORD *)(v428
                                                                + 4
                                                                * ((v461 ^ 0x2BAFFFFBDFBECFE9)
                                                                 + ((2 * v461) & 0x1BF7D9FD2))
                                                                - 0xDF518B729C1C7F4) ^ *(_DWORD *)(STACK[0x3F0] + 4 * ((v459 ^ 0x37FD7EEAFDDDF6FFLL) + 2 * v459) - 0x22F5631B066DB96ALL) ^ *(_DWORD *)(STACK[0x400] + 4 * ((v455 ^ 0x3DC506B9BFAFDFF1) + ((2 * (v455 ^ 0x2Eu)) & 0x1BELL)) - 0x45E3C52C5D2DD12FLL);
  LODWORD(v454) = (((2 * (BYTE2(v456) ^ 0x7A)) | 0xF7D0B07C) - (BYTE2(v456) ^ 0x7A) - 2078824510) ^ 0x39A4113E;
  v462 = ((v454 | 0x32A45BD) - (v454 | 0xFCD5BA42) - 53102014) ^ 0x41660CB9;
  LODWORD(v460) = *(_DWORD *)(v428
                            + 4 * ((v462 ^ 0x3FAA7FDF6DFF55E1) + ((2 * (_DWORD)v462) & 0xDBFEABC2))
                            - 0x5DDF184562C3DFD4) ^ *(_DWORD *)(STACK[0x3F0]
                                                                + 4
                                                                * ((BYTE3(v394) ^ 0xDFFD777EECFFE6ELL)
                                                                 + ((2 * (BYTE3(v394) ^ 1)) & 0xDELL))
                                                                - 0x7AFEC54ECA35D72ALL) ^ *(_DWORD *)(v430 + 4 * ((((BYTE1(v450) ^ 0x3285CB) - ((2 * (BYTE1(v450) ^ 0x3285CB)) & 0x410A26u) + 1411769619) ^ 0x2FFFBBFFEEF09975) + ((2 * (((BYTE1(v450) ^ 0x3285CB) - ((2 * (BYTE1(v450) ^ 0x3285CB)) & 0x410A26) + 1411769619) ^ 0x5417601Fu)) & 0x175CFF2D4)) - 0x285FC11809114D21) ^ *(_DWORD *)(STACK[0x400] + 4 * ((((v451 ^ 0x1A) + (v451 & 0xA9 ^ 0x69B495A1) - ((v451 ^ 0x1A) & 0xA9)) ^ 0x2BBFF6ED9E490AA9) + ((2 * (((v451 ^ 0x1A) + (v451 & 0xA9 ^ 0x69B495A1) - ((v451 ^ 0x1A) & 0xA9)) ^ 0x69B49553)) & 0x1EFFB3FF4)) + 0x2307A02C19B2E65);
  LODWORD(v453) = ((WORD1(v451) & 0xA9) + (BYTE2(v451) ^ 0xFFFFFFA9) + (BYTE2(v451) | 0xBD835956) + 1) ^ 0xBC66FD4A;
  v463 = ((v453 | 0xF940060D) - (v453 | 0x6BFF9F2) + 113244658) ^ 0xF8A5A22F;
  LODWORD(v461) = ((v456 & 0x3E ^ 0x4F5E2D35) + (v456 & 0xC1) - 1) ^ 0xCC0F6DFE;
  v464 = (((2 * (_DWORD)v461) & 0x60081FE) - (_DWORD)v461 - 589455616) ^ 0x5F8CDF1Cu;
  v465 = *(_DWORD *)(v430
                   + 4
                   * ((((BYTE1(v451) ^ 0x82B9CBBF | 0x3FE65640) - (BYTE1(v451) ^ 0x82B9CBBF | 0xC019A9BF) - 1072059969) ^ 0x2FF64FEB4EA88389)
                    + ((2
                      * (((BYTE1(v451) ^ 0x82B9CBBF | 0x3FE65640) - (BYTE1(v451) ^ 0x82B9CBBF | 0xC019A9BF) - 1072059969) ^ 0xBD5F9D1E)) & 0x1E7EE3D2ELL))
                   - 0x283A10C8ED4DE1D5) ^ *(_DWORD *)(STACK[0x3F0]
                                                       + 4
                                                       * ((BYTE3(v456) ^ 0x3FCD4EF9F76ACF17)
                                                        + ((2 * (BYTE3(v456) ^ 0x24)) & 0x66))
                                                       - 0x4234A356ECA11A3ALL) ^ *(_DWORD *)(v428
                                                                                           + 4
                                                                                           * (((((2
                                                                                                * (BYTE2(v450) ^ 0x420100CA)) | 0x993B4110)
                                                                                              - (BYTE2(v450) ^ 0x420100CA)
                                                                                              - 1285398664) ^ 0x3EFF3EFAF3735FEFLL)
                                                                                            + ((2
                                                                                              * ((((2
                                                                                                  * (BYTE2(v450) ^ 0x420100CA)) | 0x993B4110)
                                                                                                - (BYTE2(v450) ^ 0x420100CA)
                                                                                                - 1285398664) ^ 0xE9CA008)) & 0x1FBDFFFCELL))
                                                                                           - 0x5B3214B3A28687ECLL) ^ *(_DWORD *)(STACK[0x400] + 4 * ((v394 ^ 0x1FE7D7D6D6FBFCC8) + ((2 * (v394 ^ 0x33u)) & 0x1F6)) + 0x3190F65F45A1BA61);
  LODWORD(v444) = ((BYTE1(v394) ^ 0x7F | 0x1511DE81) - (BYTE1(v394) ^ 0x7F | 0xEAEE217E) - 353492610) ^ 0xFD919C01;
  v466 = ((v444 | 0x5B9DAE87) - (v444 | 0xA4625178) - 1537060488) ^ 0xB31DEC83;
  v467 = ((BYTE1(v456) ^ 0x2D) + ((v456 >> 8) & 0xB3 ^ 0x992) - ((BYTE1(v456) ^ 0x2D) & 0xB3)) ^ 0x928;
  v468 = *(_DWORD *)(v428 + 4 * ((v463 ^ 0x3FE6DFDBD6FFFBDELL) + ((2 * v463) & 0x1ADFFF7BCLL)) - 0x5ED0983706C677C8) ^ *(_DWORD *)(STACK[0x3F0] + 4 * ((BYTE3(v450) ^ 0x1DFB1EDFD9FF96B1) + ((2 * (BYTE3(v450) ^ 0xE)) & 0x17ELL)) + 0x45141D11890BC796) ^ *(_DWORD *)(STACK[0x400] + 4 * ((v464 ^ 0xF9417AFFDE6F7F3) + ((2 * v464) & 0x1FBCDEFE6)) + 0x72DFF6FAA9F5CE81) ^ *(_DWORD *)(v430 + 4 * ((v466 ^ 0x27EFB3CDEDF3DFFALL) + ((2 * v466) & 0x1DBE7BFF4)) - 0x81FA050D540E761);
  LODWORD(v466) = (WORD1(v394) & 0x1A ^ 0x6BC9C30B) + (WORD1(v394) & 0xE5) - 1;
  v469 = ((v466 & 0x4200C0A1 ^ 0x84142480)
        + (v466 ^ 0x4BC9D13F)
        - ((v466 ^ 0x4BC9D13F) & 0x12A1)) ^ 0xE614E4A8;
  LODWORD(v381) = ((v450 ^ 0x65 | 0xE9FA3215) - (v450 ^ 0x65 | 0x1605CDEA) + 369479146) ^ 0x54FEF7A;
  v470 = (((2 * (_DWORD)v381) & 0xEADC2B5C) - v381 - 1970148783) ^ 0x66243727;
  LODWORD(v469) = *(_DWORD *)(STACK[0x3F0]
                            + 4 * ((BYTE3(v451) ^ 0x3B6FBFDFFF7FC60ELL) + ((2 * (BYTE3(v451) ^ 0xF0)) & 0x1FCLL))
                            - 0x30BE66EF0CF4F966) ^ *(_DWORD *)(v430
                                                                + 4
                                                                * ((v467 ^ 0x3FEFE3BFB3FDF57DLL)
                                                                 + ((2 * v467) & 0x167FBEAFALL))
                                                                - 0x68206017ED693D6DLL) ^ *(_DWORD *)(STACK[0x400] + 4 * ((v470 ^ 0x3927FEE7DDFFF67FLL) + ((2 * v470) & 0x1BBFFECFELL)) - 0x336FA5E4D66E2BAFLL) ^ *(_DWORD *)(v428 + 4 * ((v469 ^ 0x2DFE78CBB7FED4FFLL) + ((2 * v469) & 0x16FFDA9FELL)) - 0x172EFBF68AC1DC4CLL);
  v471 = BYTE3(v469) ^ 0x3FFDFDF9D4F0FB07;
  v472 = (2 * (BYTE3(v469) ^ 0xFC)) & 0x1F6;
  v473 = ((BYTE2(v465) ^ 0xD3) - ((2 * (BYTE2(v465) ^ 0xD3)) & 0x5E) + 1721008175) ^ 0x4FB9900F;
  v474 = (((2 * v473) & 0x251808C) - v473 - 1193852999) ^ 0x91FA2FFA;
  LODWORD(v467) = *(_DWORD *)(v428
                            + 4 * ((v474 ^ 0x367435F3FBBF3DBALL) + ((2 * v474) & 0x1F77E7B74))
                            - 0x3905F09799C37F38) ^ *(_DWORD *)(STACK[0x3F0]
                                                                + 4
                                                                * ((BYTE3(v460) ^ 0x3FAEFE49FFE5EE15)
                                                                 + ((2 * (BYTE3(v460) ^ 0xAE)) & 0x176))
                                                                - 0x41BB60970E8D985ALL);
  LODWORD(v474) = (((v468 >> 8) & 5 ^ 0x41F89B01) + ((v468 >> 8) & 0xFA ^ 0xD9) - 1) ^ 0x45E94B29;
  v475 = ((v474 | 0xAD05E215) - (v474 | 0x52FA1DEA) + 1392123370) ^ 0xA9143206;
  LODWORD(v451) = v467 ^ *(_DWORD *)(STACK[0x400]
                                   + 4
                                   * (((((2 * (v469 ^ 0x18080080)) | 0xB10B9288)
                                      - (v469 ^ 0x18080080)
                                      + 662320828) ^ 0x3B69F07F4D569C9FLL)
                                    + ((2
                                      * ((((2 * (v469 ^ 0x18080080)) | 0xB10B9288)
                                        - (v469 ^ 0x18080080)
                                        + 662320828) ^ 0xC08DC961)) & 0x11BB6ABFCLL))
                                   - 0x3C776C4395DBA9ABLL) ^ *(_DWORD *)(v430
                                                                       + 4
                                                                       * ((v475 ^ 0x3AFE77F2FEBFFEBELL)
                                                                        + ((2 * v475) & 0x1FD7FFD7CLL))
                                                                       - 0x545AB0E518716271);
  LODWORD(v467) = ((BYTE1(v469) ^ 0x4C) - ((2 * (BYTE1(v469) ^ 0x4C)) & 0x12) - 1962651895) ^ 0xAE584B2B;
  v476 = (((2 * (_DWORD)v467) & 0x40883292) - (_DWORD)v467 - 2019858762) ^ 0xA2C762FE;
  v477 = (((2 * (BYTE2(v469) ^ 0xAE)) & 0x126) - (BYTE2(v469) ^ 0xAE) + 1132) ^ 0x4D8u;
  LODWORD(v323) = (v465 & 0x8C ^ 0x82576D8C) - (v465 & 0x8C) + (v465 ^ 0x12);
  v478 = ((v323 & 0x82476DE1 ^ 0x31A800E0)
        + (v323 ^ 0x8647ED0F)
        - ((v323 ^ 0x8647ED0F) & 0x41081E1)) ^ 0xB3EF6DE9;
  LODWORD(v315) = ((v460 ^ 0xF4) - ((2 * (v460 ^ 0xF4)) & 0x80) - 723022272) ^ 0x86E78150;
  v479 = ((_DWORD)v315 - ((2 * (_DWORD)v315) & 0xA00019C0) - 661013280) ^ 0x8A99B3C1;
  LODWORD(v472) = *(_DWORD *)(STACK[0x3F0] + 4 * (v471 + v472) - 0x42F75F5662B9CD5ALL);
  LODWORD(v471) = *(_DWORD *)(v430
                            + 4 * ((BYTE1(v460) ^ 0x1BE77FFBF77F7BF6) + ((2 * (BYTE1(v460) ^ 0x1Du)) & 0x1D6))
                            + 0x28012EF70490A8DBLL);
  LODWORD(v460) = ((BYTE2(v460) ^ 0xD5) - ((2 * (BYTE2(v460) ^ 0xD5)) & 0x62) - 1414851791) ^ 0xFF9E3571;
  v480 = ((v460 | 0xC487D62A) - (v460 | 0x3B7829D5) + 997730773) ^ 0x90B2F032;
  LODWORD(v462) = *(_DWORD *)(STACK[0x3F0]
                            + 4 * ((HIBYTE(v465) ^ 0x37D5731FDCFFA76CLL) + ((2 * (HIBYTE(v465) ^ 3)) & 0xDELL))
                            - 0x225533EE82F47B2ALL) ^ *(_DWORD *)(v428
                                                                + 4
                                                                * ((((HIWORD(v468) & 0x24 ^ 0xB24)
                                                                   - (HIWORD(v468) & 0x24)
                                                                   + (BYTE2(v468) ^ 0x8A)) ^ 0x2A393EDFBD6D36FFLL)
                                                                 + ((2
                                                                   * (((HIWORD(v468) & 0x24 ^ 0xB24)
                                                                     - (HIWORD(v468) & 0x24)
                                                                     + (BYTE2(v468) ^ 0x8A)) ^ 0xB90)) & 0x17ADA7ADELL))
                                                                - 0x81A1446A07B7E0CLL) ^ *(_DWORD *)(STACK[0x400] + 4 * ((v479 ^ 0x1FECFCCAEDD9DFF1) + ((2 * v479) & 0x1DBB3BFE2)) + 0x317C628EEA2A2E89) ^ *(_DWORD *)(v430 + 4 * ((v476 ^ 0x2DEBCFFDEF7FBEFFLL) + ((2 * v476) & 0x1DEFF7DFELL)) - 0x20101110DB706375);
  LODWORD(v472) = *(_DWORD *)(v428
                            + 4 * ((v480 ^ 0x2DEBB7BFFFFFDF7BLL) + ((2 * v480) & 0x1FFFFBEF6))
                            - 0x16E3F7C7AAC6063CLL) ^ v472 ^ *(_DWORD *)(v430
                                                                       + 4
                                                                       * (((((2 * (BYTE1(v465) ^ 0x6E)) & 0x14)
                                                                          - (BYTE1(v465) ^ 0x6Eu)
                                                                          + 2293) ^ 0x1FDF9A74FBF7FD26)
                                                                        + ((2
                                                                          * ((((2 * (BYTE1(v465) ^ 0x6E)) & 0x14)
                                                                            - (BYTE1(v465) ^ 0x6E)
                                                                            + 2293) ^ 0x870u)) & 0xAACLL))
                                                                       + 0x1820C512F2AEC32FLL);
  LODWORD(v480) = ((v468 ^ 0xF4 | 0x16AFC698) - (v468 ^ 0xF4 | 0xE9503967) - 380618393) ^ 0x96AEC2B8;
  v481 = (((2 * (_DWORD)v480) & 0x941B8DE4) - (_DWORD)v480 + 905066765) ^ 0xB5F33D87;
  LODWORD(v475) = *(_DWORD *)(STACK[0x400]
                            + 4 * ((v481 ^ 0x1DDFFCB7DB7E7FB6) + ((2 * v481) & 0x1B6FCFF6CLL))
                            + 0x39B062DB3397AF75);
  LODWORD(v481) = *(_DWORD *)(STACK[0x3F0]
                            + 4 * ((HIBYTE(v468) ^ 0x3F7F5BD5AFBBFF9FLL) + ((2 * (HIBYTE(v468) ^ 0x30)) & 0x15ELL))
                            - 0x40FCD6C5CDE5DC2ALL) ^ *(_DWORD *)(STACK[0x400]
                                                                + 4
                                                                * ((v478 ^ 0x1FB5FFFF7FD2E1FFLL)
                                                                 + ((2 * (_DWORD)v478) & 0xFFA5C3FE))
                                                                + 0x325855BCA2462651) ^ v471 ^ *(_DWORD *)(v428 + 4 * ((v477 ^ 0x37EFF7F6BF7DFDFFLL) + ((2 * (int)v477) & 0xBFELL)) - 0x3EF4F8A2A8BE804CLL);
  LODWORD(v477) = v472 ^ v475;
  v482 = ((v472 ^ v475) >> 24) ^ 0x3DBF9ABFEFDFFF28;
  v483 = (2 * (((v472 ^ v475) >> 24) ^ 0xD2)) & 0x1F4;
  LOWORD(v434) = (v477 & 0xF1 ^ 0x6201) + (v477 & 0xE ^ 0xB) - 1;
  v484 = ((v434 & 0x352 ^ 0xC12D0111) + (v434 & 0xAD) - 1) ^ 0xC12D03F2;
  LODWORD(v464) = (((v477 >> 8) & 0xF4 ^ 0xB5C5E8F4)
                 - ((v477 >> 8) & 0xF4)
                 + (BYTE1(v477) ^ 0xB)) ^ 0x34201E29;
  v485 = (((2 * (_DWORD)v464) | 0x815ECFFA) - v464 + 1062246403) ^ 0x414A9135;
  LODWORD(v478) = ((v451 ^ 0xA2) + (v451 & 0x3D ^ 0x4AECFA1D) - ((v451 ^ 0xA2) & 0x3D)) ^ 0xA8A76FF4;
  v486 = ((v478 | 0xE11DFBB2) - (v478 | 0x1EE2044D) + 518128717) ^ 0x3566E22;
  LODWORD(v472) = (((2 * (v462 ^ 0x55)) | 0x37867B58) - (v462 ^ 0x55) + 1681703508) ^ 0xDB8139A5;
  v487 = ((_DWORD)v472 - ((2 * (_DWORD)v472) & 0xBB621C4A) - 575599067) ^ 0x9DF30A61;
  v488 = *(_DWORD *)(STACK[0x400]
                   + 4 * ((v487 ^ 0x3FAF4FCF57FFCEE6) + ((2 * (_DWORD)v487) & 0xAFFF9DCC))
                   - 0x4D8CE982BE6D8D4BLL);
  LODWORD(v487) = *(_DWORD *)(STACK[0x3F0]
                            + 4 * ((BYTE3(v451) ^ 0x38D67FE7577FFF70) + ((2 * (BYTE3(v451) ^ 0xA7)) & 0x1AELL))
                            - 0x2659670C6CF5DCCALL) ^ *(_DWORD *)(v430
                                                                + 4
                                                                * (((((v481 >> 8) & 7 ^ 0x702)
                                                                   + ((v481 >> 8) & 0xF8 ^ 0x19)
                                                                   - 1) ^ 0x3FEF737FB3ADB836)
                                                                 + ((2
                                                                   * ((((v481 >> 8) & 7 ^ 0x702)
                                                                     + ((v481 >> 8) & 0xF8 ^ 0x19)
                                                                     - 1) ^ 0x7D9)) & 0x1FDELL))
                                                                - 0x681E9F17EC286735) ^ *(_DWORD *)(v428 + 4 * ((((BYTE2(v462) ^ 0x2901643D) - ((2 * (BYTE2(v462) ^ 0x2901643D)) & 0x2007Eu) + 2298431) ^ 0x1EEF1FFDA6E1D8CBLL) + ((2 * (((BYTE2(v462) ^ 0x2901643D) - ((2 * (BYTE2(v462) ^ 0x2901643D)) & 0x2007E) + 2298431) ^ 0x2922769Du)) & 0x11F875CACLL)) + 0x250E6742162ABE58) ^ *(_DWORD *)(STACK[0x400] + 4 * ((v484 ^ 0x1BCFFFDD67E6E5BELL) + ((2 * (_DWORD)v484) & 0xCFCDCB7C)) + 0x41F0564501F61755);
  LODWORD(v486) = *(_DWORD *)(v430
                            + 4 * ((v485 ^ 0x1FBEBE2FFFDFFF8FLL) + ((2 * v485) & 0x1FFBFFF1ELL))
                            + 0x18A43626E30E9A4BLL) ^ *(_DWORD *)(STACK[0x3F0]
                                                                + 4
                                                                * ((BYTE3(v462) ^ 0xAD77FF6EFBFF8D5)
                                                                 + ((2 * (BYTE3(v462) ^ 0xE)) & 0x1B6))
                                                                - 0x6E5D674ACDF5C0DALL) ^ *(_DWORD *)(v428 + 4 * ((((BYTE2(v481) ^ 0x51284086 | 0xEB16CC82) - (BYTE2(v481) ^ 0x51284086 | 0x14E9337D) + 350827389) ^ 0x2E3576FF45C1F27DLL) + ((2 * (((BYTE2(v481) ^ 0x51284086 | 0xEB16CC82) - (BYTE2(v481) ^ 0x51284086 | 0x14E9337D) + 350827389) ^ 0xBA3E8CA6)) & 0x1FFFEFDB6)) - 0x180AF4C7AAC483BCLL) ^ *(_DWORD *)(STACK[0x400] + 4 * ((v486 ^ 0x36FE7EFD9DFBBED7) + ((2 * v486) & 0x13BF77DAELL)) - 0x2AC9A63BD65D4D0FLL);
  LODWORD(v475) = *(_DWORD *)(STACK[0x3F0] + 4 * (v482 + v483) - 0x39FDD26ECE75DD56) ^ *(_DWORD *)(v428 + 4 * (((-2 - ((~BYTE2(v451) | 0xE8) + (BYTE2(v451) | 0xC1A5F17u))) ^ 0x1A4FBBFDBF2AAB7BLL) + ((2 * ((-2 - ((~BYTE2(v451) | 0xE8) + (BYTE2(v451) | 0xC1A5F17))) ^ 0xF3E5A000)) & 0x999E16F6)) + 0x378BF74321FD49C4);
  LODWORD(v451) = *(_DWORD *)(STACK[0x3F0]
                            + 4 * ((BYTE3(v481) ^ 0x2F3EFF37FFFEED19) + ((2 * (BYTE3(v481) ^ 0xC6)) & 0x1BELL))
                            + 0x49BB0F10E6B16) ^ *(_DWORD *)(v428
                                                             + 4
                                                             * ((BYTE2(v477) ^ 0x37EF3DAFDFBFFF24)
                                                              + ((2 * (BYTE2(v477) ^ 0xCBu)) & 0x1DELL))
                                                             - 0x3EF20F8729C6880CLL) ^ *(_DWORD *)(v430
                                                                                                 + 4
                                                                                                 * (((((v451 >> 8) & 0xA4) + (BYTE1(v451) ^ 0xFFFFFFE5) + (BYTE1(v451) | 0x141DE35B) + 1) ^ 0x35FBFFF7DFE00097)
                                                                                                  + ((2 * ((((v451 >> 8) & 0xA4) + (BYTE1(v451) ^ 0xFFFFFFE5) + (BYTE1(v451) | 0x141DE35B) + 1) ^ 0x141DE36B)) & 0x197FBC7F8))
                                                                                                 - 0x4050D0F84D68F769) ^ v488;
  v489 = ((v481 ^ 0xE574AD9B) - ((2 * (v481 ^ 0xE574AD9B)) & 0x48690A84) + 775800130) & 0x48490FFF ^ 0x48490811;
  LODWORD(v475) = v475 ^ *(_DWORD *)(STACK[0x400]
                                   + 4 * ((v489 ^ 0x1F6D6FFBFE3C9F9FLL) + ((2 * (_DWORD)v489) & 0x90101F3E))
                                   + 0x337A95CAA89F2FD1) ^ *(_DWORD *)(v430
                                                                       + 4
                                                                       * (((((v462 >> 8) & 0xCB)
                                                                          + ((v462 >> 8) & 0x34 ^ 0xF1306A05)
                                                                          - 1) ^ 0x35F7ED71089D13F6)
                                                                        + ((2
                                                                          * ((((v462 >> 8) & 0xCB)
                                                                            + ((v462 >> 8) & 0x34 ^ 0xF1306A05)
                                                                            - 1) ^ 0xF1306A19)) & 0x1F35AF3DELL))
                                                                       - 0x404086E104274F35);
  v490 = BYTE3(v475) ^ 0x27EFEDED2376FFC5;
  v491 = (2 * (BYTE3(v475) ^ 0x2A)) & 0x1DELL;
  LODWORD(v482) = ((v475 ^ 0x6C | 0x8DC94F86) - (v475 ^ 0x6C | 0x7236B079) + 1916186745) ^ 0xCC814716;
  v492 = (((2 * (_DWORD)v482) & 0xAC6C6B24) - (_DWORD)v482 - 1446393235) ^ 0xE881C245;
  LODWORD(v479) = *(_DWORD *)(v428
                            + 4 * ((BYTE2(v486) ^ 0x3BDDFF9BCB8DD7C4) + 2 * (BYTE2(v486) ^ 0x3Bu))
                            - 0x4EAD1736D8FDE84CLL) ^ *(_DWORD *)(STACK[0x3F0]
                                                                + 4
                                                                * ((BYTE3(v487) ^ 0x3DDA7FFFDFF3F549)
                                                                 + ((2 * (BYTE3(v487) ^ 0xD2)) & 0x136))
                                                                - 0x3A69676E8EC5B3DALL) ^ *(_DWORD *)(v430 + 4 * ((BYTE1(v451) ^ 0x3BFE64DDFDBFF6B5) + ((2 * (BYTE1(v451) ^ 0xE9u)) & 0xB8)) - 0x585A6491147140E9) ^ *(_DWORD *)(STACK[0x400] + 4 * ((v492 ^ 0x37DDFDFF57BFED5FLL) + ((2 * (_DWORD)v492) & 0xAF7FDABE)) - 0x2E47A242BD6E072FLL);
  LODWORD(v485) = *(_DWORD *)(v430
                            + 4 * ((BYTE1(v475) ^ 0x3D6DBEBFF6FFD697) + 2 * (BYTE1(v475) ^ 0x68u))
                            - 0x5E17CC18F970C375);
  v493 = (((2 * (BYTE2(v475) ^ 0x6E)) | 0x9ED65D1C) - (BYTE2(v475) ^ 0x6E) + 815059314) ^ 0xCF6B2E07;
  LODWORD(v462) = v485 ^ *(_DWORD *)(STACK[0x3F0]
                                   + 4 * ((BYTE3(v486) ^ 0x1EBCDDFFFD6ECE31) + ((2 * (BYTE3(v486) ^ 0xCF)) & 0x1FCLL))
                                   + 0x420D2090FB4EE69ALL) ^ *(_DWORD *)(STACK[0x400]
                                                                       + 4
                                                                       * ((v487 ^ 0x3FFB3FFFFFA7BFE9)
                                                                        + 2 * (v487 ^ 0x16u))
                                                                       - 0x4EBCAA455D0D51AFLL) ^ *(_DWORD *)(v428 + 4 * ((BYTE2(v451) ^ 0x257FFFDF7FFD6B3CLL) + 2 * (BYTE2(v451) ^ 0xC3u)) + 0xACAE7BA5543C7B4);
  LODWORD(v476) = *(_DWORD *)(v430
                            + 4
                            * (((((2 * (BYTE1(v487) ^ 0x40422464)) & 0x48FC) - (BYTE1(v487) ^ 0x40422464u) + 1248266625) ^ 0x3B777FB5FC5AE65ELL)
                             + ((2
                               * ((((2 * (BYTE1(v487) ^ 0x40422464)) & 0x48FC) - (BYTE1(v487) ^ 0x40422464) + 1248266625) ^ 0xA252DB1u)) & 0x397DELL))
                            - 0x563ECFF0F7709735) ^ *(_DWORD *)(v428
                                                                + 4
                                                                * ((v493 ^ 0x3B9ECFFFFFCFD27BLL)
                                                                 + ((2 * v493) & 0x1FF9FA4F6))
                                                                - 0x4DB058C7AA05D23CLL) ^ *(_DWORD *)(STACK[0x3F0] + 4 * ((BYTE3(v451) ^ 0x5FDFF3DDAFF7DEDLL) + ((2 * (BYTE3(v451) ^ 0x42)) & 0x15ELL)) - 0x5AF764667AF3D42ALL) ^ *(_DWORD *)(STACK[0x400] + 4 * (((((2 * (v486 ^ 0xC00181DD)) & 0x8002038E) - (v486 ^ 0xC00181DD) + 844672568) ^ 0x3BF9EDBF2D27E217) + ((2 * ((((2 * (v486 ^ 0xC00181DD)) & 0x8002038E) - (v486 ^ 0xC00181DD) + 844672568) ^ 0xF2592F38)) & 0x1001C1A5ELL)) - 0x3EB76144DC69866FLL);
  LODWORD(v490) = *(_DWORD *)(STACK[0x3F0] + 4 * (v490 + v491) + 0x1D40E0DC632E22D6) ^ *(_DWORD *)(v428 + 4 * ((BYTE2(v487) ^ 0x17387FEFCFB77BBBLL) + ((2 * (BYTE2(v487) ^ 0x65u)) & 0x1BCLL)) + 0x43E8E779165B8838) ^ *(_DWORD *)(STACK[0x400] + 4 * ((v451 ^ 0x374DDFFEF7FAFB29) + ((2 * (v451 ^ 0xD7u)) & 0x1FCLL)) - 0x2C072A413E5A41ABLL) ^ *(_DWORD *)(v430 + 4 * ((((BYTE1(v486) ^ 0x37) - 1434848922 - ((2 * (BYTE1(v486) ^ 0x37)) & 0x150u) + 66) ^ 0x135AF5AF051C7E12) + ((2 * (((BYTE1(v486) ^ 0x37) - 1434848922 - ((2 * (BYTE1(v486) ^ 0x37)) & 0x150) + 66) ^ 0xAA79F166)) & 0x15ECB1EE8)) + 0x4A33582824F85AB7);
  LODWORD(v463) = (((2 * (BYTE2(v462) ^ 0xC1)) | 0x308C8F74) - (BYTE2(v462) ^ 0xC1) - 407259066) ^ 0x286E55BB;
  v494 = ((v463 | 0x76D30712) - (v463 | 0x892CF8ED) - 1993541395) ^ 0x46FB1578;
  LODWORD(v493) = (((2 * (BYTE2(v476) ^ 0x56)) | 0xC8191250) - (BYTE2(v476) ^ 0x56) + 468940504) ^ 0xEA0EC828;
  v495 = ((_DWORD)v493 - ((2 * (_DWORD)v493) & 0x1E08B8EC) + 1325685878) ^ 0x41061D38u;
  LODWORD(v486) = *(_DWORD *)(v428
                            + 4 * ((v495 ^ 0x13D63FFFE7FE7E7FLL) + ((2 * v495) & 0x1CFFCFCFELL))
                            + 0x5171E738B53F7DB4);
  LODWORD(v495) = ((BYTE1(v476) ^ 0xBD | 0x77DCCC2D) - (BYTE1(v476) ^ 0xBD | 0x882333D2) - 2010958894) ^ 0x12DCDE2D;
  v496 = ((v495 | 0xA95D6F33) - (v495 | 0x56A290CC) + 1453494476) ^ 0xCC5D7D31;
  LODWORD(v477) = *(_DWORD *)(v428
                            + 4 * ((v494 ^ 0x2A83F7FD7F8B9FEELL) + ((2 * (_DWORD)v494) & 0xFF173FDC))
                            - 0x944F8BDA8F50808) ^ *(_DWORD *)(STACK[0x3F0]
                                                               + 4
                                                               * ((BYTE3(v479) ^ 0x2FFDFBFDFFFAFD19)
                                                                + ((2 * (BYTE3(v479) ^ 0x17)) & 0x1CLL))
                                                               - 0x2F757670EE1D1A6) ^ *(_DWORD *)(STACK[0x400]
                                                                                                  + 4 * ((((v490 ^ 0x78 | 0xDBE74C4D) - (v490 ^ 0x78 | 0x2418B3B2) + 605598642) ^ 0x3FF7F91B7489B316) + ((2 * (((v490 ^ 0x78 | 0xDBE74C4D) - (v490 ^ 0x78 | 0x2418B3B2) + 605598642) ^ 0xDBE74CC1)) & 0x15EDDFFAELL))
                                                                                                  - 0x4EAF8EB41C2A510FLL) ^ *(_DWORD *)(v430 + 4 * ((v496 ^ 0x3AEBBFFDDF5BFFFFLL) + ((2 * v496) & 0x1BEB7FFFELL)) - 0x540FD1109AE16775);
  LODWORD(v496) = (v479 ^ 0xAB) + (v479 & 0x8E ^ 0xDC86BA04) - ((v479 ^ 0xAB) & 0x8E);
  v497 = ((v496 & 0x1884105A ^ 0x290050)
        + (v496 ^ 0x1E96B48E)
        - ((v496 ^ 0x1E96B48E) & 0xC000045A)) ^ 0x1ABD1A56;
  LODWORD(v494) = *(_DWORD *)(STACK[0x3F0]
                            + 4 * ((BYTE3(v462) ^ 0x1EFFDFFF677FFF22) + 2 * (BYTE3(v462) ^ 0xDD))
                            + 0x41011893530A2296) ^ *(_DWORD *)(v430
                                                                + 4
                                                                * (((((v490 >> 8) & 0xCA)
                                                                   + (BYTE1(v490) ^ 0xFFFFFFEE)
                                                                   + (BYTE1(v490) | 0x4B740535)
                                                                   + 1) ^ 0x2FFCED5F741B6943)
                                                                 + ((2
                                                                   * ((((v490 >> 8) & 0xCA)
                                                                     + (BYTE1(v490) ^ 0xFFFFFFEE)
                                                                     + (BYTE1(v490) | 0x4B740535)
                                                                     + 1) ^ 0x4B7405BC)) & 0x7EDED9FE))
                                                                - 0x285486961B2F1B75) ^ *(_DWORD *)(STACK[0x400] + 4 * ((v497 ^ 0x2CFEE96789DAD47FLL) + ((2 * v497) & 0x113B5A8FELL)) - 0x2CB4FE385D9A3AFLL);
  LODWORD(v497) = (((2 * (BYTE1(v479) ^ 0x63)) & 0x16E) - (BYTE1(v479) ^ 0x63) + 1857469512) ^ 0xEA49C48;
  v498 = ((_DWORD)v497 - ((2 * (_DWORD)v497) & 0xC00041B2) - 505059111) ^ 0x81F7486C;
  LODWORD(v494) = v494 ^ v486;
  LODWORD(v486) = *(_DWORD *)(v430
                            + 4 * ((v498 ^ 0xFF3FF5FEBBBEBF3) + ((2 * v498) & 0x1D777D7E6))
                            + 0x57CF3167339EE8BBLL) ^ *(_DWORD *)(STACK[0x3F0]
                                                                + 4
                                                                * ((BYTE3(v476) ^ 0x35FBFBCDDFBBBDAALL)
                                                                 + ((2 * (BYTE3(v476) ^ 0x59)) & 0x1E6))
                                                                - 0x1AEF56A68DE4D53ALL) ^ *(_DWORD *)(v428 + 4 * ((((WORD1(v490) & 0x9D) + (WORD1(v490) & 0x62 ^ 0x523) - 1) ^ 0x2DB76F775FCBB29DLL) + ((2 * (((WORD1(v490) & 0x9D) + (WORD1(v490) & 0x62 ^ 0x523) - 1) ^ 0x573)) & 0xFDCLL)) - 0x1612D6A529F56808) ^ *(_DWORD *)(STACK[0x400] + 4 * (((((2 * (v462 ^ 0x40601067)) | 0x7DA19FB8) - (v462 ^ 0x40601067u) + 1093611556) ^ 0x3F1FEFFF015EA0DDLL) + ((2 * ((((2 * (v462 ^ 0x40601067)) | 0x7DA19FB8) - (v462 ^ 0x40601067) + 1093611556) ^ 0xFEB0DF74)) & 0x1FFDCFF52)) - 0x4B4F6A455E285057);
  LODWORD(v471) = ((BYTE2(v479) ^ 0x9F | 0x40D70CAC) - (BYTE2(v479) ^ 0x9F | 0xBF28F353) - 1087835309) ^ 0x20834F3F;
  v499 = (((2 * (_DWORD)v471) | 0x2E5380A2) - (_DWORD)v471 - 388612177) ^ 0x777D8359u;
  LODWORD(v476) = ((v476 ^ 0xDC) - ((2 * (v476 ^ 0xDC)) & 0x2A) - 857202155) ^ 0x46892317;
  v500 = ((_DWORD)v476 - ((2 * (_DWORD)v476) & 0x10020252) + 143913257) ^ 0x82F2F00D;
  v501 = ((BYTE1(v462) ^ 0x2B200079)
        + ((v462 >> 8) & 0x53 ^ 0x10C3BD02)
        - ((BYTE1(v462) ^ 0x2B200079) & 0x23200053)) ^ 0x18C3BD7B;
  LODWORD(v490) = *(_DWORD *)(STACK[0x400]
                            + 4 * ((v500 ^ 0x2FFBDDFDFF5FFFFFLL) + ((2 * v500) & 0x1FEBFFFFELL))
                            - 0xEBF223D5BEE51AFLL) ^ *(_DWORD *)(v428
                                                               + 4
                                                               * ((v499 ^ 0x3DD4F6DF61F57B9FLL)
                                                                + ((2 * (_DWORD)v499) & 0xC3EAF73E))
                                                               - 0x5688F445329C76CCLL) ^ *(_DWORD *)(STACK[0x3F0] + 4 * ((BYTE3(v490) ^ 0x39FE5D982E7BF38ELL) + ((2 * (BYTE3(v490) ^ 0x1C)) & 0x124)) - 0x2AF8DDCFC8E5ABB6) ^ *(_DWORD *)(v430 + 4 * ((v501 ^ 0x19FEBFCFFFC7AFF6) + ((2 * v501) & 0x1FF8F5FECLL)) + 0x2FA42FA6E36FD8AFLL);
  LODWORD(v499) = ((((v477 ^ 0xC1A46FA) >> (BYTE2(v479) & 8))
                  - ((2 * ((v477 ^ 0xC1A46FA) >> (BYTE2(v479) & 8))) & 0xE80737F8)
                  - 201090052) ^ 0xF4039BFC) >> (BYTE2(v479) & 8 ^ 8);
  v502 = *(_QWORD *)(v85 - 208);
  v503 = *(_QWORD *)(v85 - 248);
  LODWORD(v498) = *(_DWORD *)(v502 + 4 * (BYTE1(v486) ^ 0x37u)) ^ *(_DWORD *)(STACK[0x448] + 4 * (BYTE3(v477) ^ 0xC)) ^ *(_DWORD *)(v503 + 4 * (BYTE2(v494) ^ 0xFBu));
  LODWORD(v479) = v477 ^ 0xFA;
  LODWORD(v451) = *(_DWORD *)(STACK[0x448] + 4 * (BYTE3(v494) ^ 0x41));
  LODWORD(v499) = *(_DWORD *)(STACK[0x448] + 4 * (BYTE3(v486) ^ 0x5A)) ^ *(_DWORD *)(v503 + 4
                                                                                            * (BYTE2(v490) ^ 0xEDu)) ^ *(_DWORD *)(STACK[0x458] + 4 * (v494 ^ 0xA0u)) ^ *(_DWORD *)(v502 + 4 * ((v499 - ((2 * v499) & 4) - 126) ^ 0x82u));
  LODWORD(v485) = *(_DWORD *)(v502 + 4 * (BYTE1(v490) ^ 0x50u));
  LODWORD(v477) = *(_DWORD *)(STACK[0x448] + 4 * (BYTE3(v490) ^ 0x54)) ^ *(_DWORD *)(v503 + 4
                                                                                            * (BYTE2(v477) ^ 0x1Au)) ^ *(_DWORD *)(v502 + 4 * (BYTE1(v494) ^ 0xB6u)) ^ *(_DWORD *)(STACK[0x458] + 4 * (v486 ^ 0x3Eu));
  LODWORD(v502) = a65 ^ a83 ^ a62;
  LODWORD(v494) = v498 ^ *(_DWORD *)(STACK[0x458] + 4 * (v490 ^ 0xF0u)) ^ v502;
  LODWORD(v490) = v451 ^ *(_DWORD *)(v503 + 4 * (BYTE2(v486) ^ 0xBFu)) ^ v485 ^ *(_DWORD *)(STACK[0x458]
                                                                                            + 4 * v479) ^ 0x12B1B07F ^ v499;
  LODWORD(v499) = v499 ^ v477;
  LODWORD(v477) = v477 ^ v502;
  LODWORD(v479) = STACK[0x3B8];
  v504 = (char *)*(&off_10112C750 + (LODWORD(STACK[0x3B8]) ^ 0x314Bu)) - 1038358098;
  LOBYTE(v498) = v504[BYTE3(v494) ^ 0x37];
  LOBYTE(v502) = (v498 - ((2 * v498 + 100) & 0x56) + 29) ^ 0x8B;
  LODWORD(v477) = v477 ^ v490;
  LODWORD(v498) = v494 ^ v490;
  v505 = (_BYTE *)STACK[0x3B0];
  v505[5] = v502;
  LOBYTE(v490) = v504[((v494 ^ v490) >> 24) ^ 0x7CLL];
  LOBYTE(v377) = v490 - 2 * ((v490 + 114) & 0xFD ^ v490 & 1);
  LODWORD(v490) = v498 ^ v499;
  v505[10] = (v377 - 18) ^ 0x5C;
  LOBYTE(v499) = v504[((v498 ^ v499) >> 24) ^ 0x5CLL];
  *v505 = (v499 - 2 * ((v499 + 114) & 0xC7 ^ v499 & 1) + 56) ^ 0xE6;
  LOBYTE(v499) = v504[BYTE3(v477) ^ 0xF4];
  v505[11] = (v499 - ((2 * v499 - 28) & 0x88) + 54) ^ 0xE4;
  v506 = (char *)*(&off_10112C750 + (int)v479 - 9530) - 1755544131;
  LOBYTE(v499) = v506[((BYTE2(v490) ^ 0x98) - ((v490 >> 15) & 0xCE) - 115643033) ^ 0xF91B6DCA];
  LOBYTE(v504) = v499 - ((2 * v499 + 100) & 0x44) - 108;
  v505[13] = (((_BYTE)v499 << 6) - 108) ^ v504 ^ (((16 * (_BYTE)v504) ^ 0x20)
                                                                 - ((2 * ((16 * (_BYTE)v504) ^ 0x20)) & 0x40)
                                                                 - 85) ^ 0xF7;
  v507 = (char *)*(&off_10112C750 + (v479 ^ 0x3FCB)) - 1282503634;
  v505[7] = (v507[v477 ^ 0x19] - ((2 * v507[v477 ^ 0x19] + 74) & 0x6A) - 38) ^ 0x83;
  v508 = (char *)*(&off_10112C750 + (v479 ^ 0x390D)) - 1497428442;
  v505[6] = v508[((BYTE1(v490) ^ 0xC9 | 0x3B13A968) - (BYTE1(v490) ^ 0xC9 | 0xC4EC5697) - 991144297) ^ 0x3B13A93D] ^ 0x61;
  LODWORD(v499) = (BYTE2(v494) ^ 0x4AB5565A) - ((2 * (BYTE2(v494) ^ 0x4AB5565A)) & 0x428C14) + 895569674;
  LOBYTE(v499) = v506[((v499 & 0x1000A09 ^ 0x80228A08)
                     + (v499 ^ 0x4FC57151)
                     - ((v499 ^ 0x4FC57151) & 0x8112EA09)) ^ 0xB1238286];
  v505[14] = (v499 - ((2 * v499 - 28) & 0xAE) + 73) ^ ((~((_BYTE)v499 - ((2 * (_BYTE)v499 - 28) & 0xAE) + 77) << 6) - 120) ^ (((16 * (v499 - ((2 * v499 - 28) & 0xAE) + 73)) ^ 0x77) - 5) ^ 0x37;
  LODWORD(v487) = (((2 * (v494 ^ 0x5ED97806)) & 0x213061D6)
                 - (v494 ^ 0x5ED97806)
                 + 1331808532) ^ 0x999AA569;
  LOBYTE(v487) = v507[(((2 * (_DWORD)v487) & 0xF8E09AF8) - v487 + 59683459) ^ 0x8BACA671];
  v505[12] = (v487 - ((2 * v487 + 74) & 0xEF) + 28) ^ 0xC1;
  LOBYTE(v487) = v507[((v498 ^ 0x8C00146)
                     - ((2 * (v498 ^ 0x8C00146)) & 0x108002E4u)
                     + 477460338) ^ 0x14B57662];
  v505[2] = (v487 - ((2 * v487 + 74) & 0xD8) - 111) ^ 0x5A;
  LODWORD(v487) = ((BYTE2(v498) ^ 0x3C) - ((2 * (BYTE2(v498) ^ 0x3C)) & 0x68) + 2035733044) ^ 0x401740B8;
  LOBYTE(v487) = v506[(v487 - ((2 * (_DWORD)v487) & 0x6283249E) + 1943658063) ^ 0x4A984C9ELL];
  LOBYTE(v487) = v487 - ((2 * v487 + 36) & 0x36);
  v505[9] = (v487 + 13) ^ (57 - ((_BYTE)v487 << 6)) ^ 0x69 ^ (((16 * (v487 + 13)) ^ 0xB0)
                                                            + (~(2 * ((16 * (v487 + 13)) ^ 0xB0)) | 0xBF)
                                                            + 34);
  v505[3] = v508[BYTE1(v477) ^ 0x74] ^ 0x61;
  LODWORD(v500) = (((2 * (BYTE1(v494) ^ 0x82)) & 0x124) - (BYTE1(v494) ^ 0x82) + 35509101) ^ 0x838843ED;
  v505[4] = v508[((v500 | 0x373A7F06) - (v500 | 0xC8C580F9) - 926580487) ^ 0xB6AFEFE2] ^ 0x61;
  v505[15] = v508[BYTE1(v498) ^ 0xEFLL] ^ 0x61;
  LOBYTE(v500) = v506[BYTE2(v477) ^ 0xEFLL];
  v505[8] = ((((_BYTE)v500 - 114) << 6) - 126) ^ (v500 - 114 - ((2 * v500 + 36) & 0x38)) ^ 0x3A ^ (((16 * (v500 - 114 - ((2 * v500 + 36) & 0x38))) ^ 0xC0)
                                                                                                 + ((2 * ((16 * (v500 - 114 - ((2 * v500 + 36) & 0x38))) ^ 0xC0)) & 0x80)
                                                                                                 - 50);
  LOBYTE(v500) = v507[((v490 ^ 0x620C2054)
                     - ((2 * (v490 ^ 0x620C2054)) & 0x180156u)
                     + 77438123) ^ 0x6691BCDELL];
  v505[1] = (v500 - ((2 * v500 + 10) & 0x38) - 63) ^ 0xAA;
  LODWORD(STACK[0x454]) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3C0] + 8 * v479) - 4))();
}

uint64_t sub_1000406D0()
{
  uint64_t v0;
  int v1;
  void (*v2)(unint64_t);

  v2 = (void (*)(unint64_t))((char *)*(&off_10112C750 + v1 - 10284) - 1962337647);
  v2(STACK[0x3C8] - 0x7BA2BA080285EE37);
  v2(*(_QWORD *)(v0 - 184) - 0x3361820A0EF489CLL);
  v2(*(_QWORD *)(v0 - 256) - 0x6A1FFADE9D938559);
  v2(STACK[0x438]);
  v2(*(_QWORD *)(v0 - 160));
  v2(*(_QWORD *)(v0 - 200));
  v2(STACK[0x428] - 0x280245A092B86BD2);
  v2(*(_QWORD *)(v0 - 152) - 0x5F3518C7AAC68850);
  v2(*(_QWORD *)(v0 - 208));
  v2(STACK[0x3F0] - 0x42FF676F0EF5DD6ELL);
  v2(*(_QWORD *)(v0 - 240));
  v2(STACK[0x3F8]);
  v2(STACK[0x448]);
  v2(STACK[0x458]);
  v2(*(_QWORD *)(v0 - 248));
  v2(STACK[0x400] - 0x4ECFAA455E6E51B3);
  v2(*(_QWORD *)(v0 - 216) - 0x6860D1191D716779);
  v2(*(_QWORD *)(v0 - 232));
  v2(STACK[0x430]);
  v2(*(_QWORD *)(v0 - 224));
  v2(STACK[0x440]);
  v2(STACK[0x408]);
  v2(STACK[0x3E0]);
  v2(*(_QWORD *)(v0 - 192));
  v2(*(_QWORD *)(v0 - 176));
  v2(STACK[0x410]);
  v2(STACK[0x418]);
  v2(STACK[0x3D8]);
  v2(STACK[0x420]);
  v2(STACK[0x3A8]);
  v2(STACK[0x3D0]);
  v2(STACK[0x3E8]);
  return (*(uint64_t (**)(unint64_t))(STACK[0x3C0] + 8 * (v1 + 46)))(STACK[0x378]);
}

uint64_t sub_1000408BC@<X0>(uint64_t result@<X0>, int a2@<W3>, int a3@<W8>)
{
  int v3;

  if ((a3 ^ 0x9E69AAD9) + a2 + ((2 * a3) & 0x3CD210B2) == 405283480)
    v3 = 2134650450;
  else
    v3 = 2134608426;
  *(_DWORD *)(result + 8) = v3;
  return result;
}

void sub_10004093C(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1000409E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(a3 + 8 * (v3 + 560049961)) - 12))(a1, a2);
}

uint64_t sub_100040A0C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((2041 * (v1 < (char)(((v2 - 93) | 0x14) + 79))) ^ (v3 + v2 + 716)))
                            - 4))();
}

uint64_t sub_100040A50@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8 * (((((v2 + 12108) | 0x2E0) - 19418) * ((v1 - 2) < 2)) ^ v2))
                            - 12))();
}

uint64_t sub_100040A88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  int v4;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(a3
                                                               + 8
                                                               * ((v4 + 560027575) | (8
                                                                                    * (((((v4 + 53) | 0x82) ^ 0x3C) + v3) < (((v4 + 53) ^ 0xD6) + 33)))))
                                                   - 12))(a1, a2);
}

uint64_t sub_100040ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(a3 + 8 * v3) - ((v3 - 4148) | 0x4260u) + 19414))(a1, a2);
}

uint64_t sub_100040B0C@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * v1) - (((v1 + 1109144843) | 0x9C824112) ^ 0xDE9EC1FBLL)))();
}

uint64_t sub_100040B40@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v1 + 560040419)) - 4))();
}

uint64_t sub_100040B78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 16) = v1;
  return result;
}

uint64_t sub_100040B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(a3
                                                               + 8
                                                               * (int)((v3 - 1529483912) ^ 0x8374A406 ^ (4738 * ((v3 - 1529483912) > 0x65EC6F20))))
                                                   - (((v3 + 560035533) | 0x4420u) ^ 0x7CE0)))(a1, a2);
}

uint64_t sub_100040BEC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(a1 + 8 * (((v1 < (char)(-76 * ~(_BYTE)v2 - 60)) * ((v2 ^ 0x655A) - 6071)) ^ v2)))();
}

uint64_t sub_100040C28@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((v2 + 12844) ^ 0x4BEA) * (v1 == 30)) ^ v2)) - 12))();
}

uint64_t sub_100040C54@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (8 * (v1 == 5)))) - ((v2 - 925190612) & 0x37257BFF) + 19414))();
}

uint64_t sub_100040C8C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((37 * (v1 < (((v2 + 153) & 0xA62A ^ 6) & 0x1FE))) ^ v2)) - 4))();
}

uint64_t sub_100040CCC@<X0>(uint64_t a1@<X8>)
{
  char v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (v2 ^ (3291 * (v2 ^ 0x22)) ^ (8
                                                                      * (((((v1 - v2) | (v2 - v1)) >> (v2 - 25)) & 1) == 0)) ^ 0x20))
                            - 12))();
}

uint64_t sub_100040D20@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((v2 - 16294) ^ (8
                                                         * ((((-26 * ((v2 + 90) ^ 0xBD)) ^ 0xC4) & 0xFE) == v1))))
                            - 12))();
}

void sub_100040D5C(uint64_t a1)
{
  int v1;
  BOOL v3;

  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x61EB587DDF0B8AA3) == 440910327
    || *(_DWORD *)(*(_QWORD *)a1 - 0x61EB587DDF0B8AA3) == 440910327;
  v1 = *(_DWORD *)(a1 + 16) + 967721411 * (a1 ^ 0xA63D912F);
  __asm { BR              X15 }
}

uint64_t sub_100040E68@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  int v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(a10
                                        + 8
                                        * ((((((v11 & 0x2EEB7FBD) - 32680) | 0x8A62) - 35340)
                                          * ((a1 + v10 - 133) < 0x7FFFFF7D)) ^ v11 & 0x2EEB7FBD))
                            - 8))();
}

uint64_t sub_100040EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  _BOOL4 v18;

  v18 = (int)a7 > ((251 * ((v17 - 22407) ^ 0x280B)) ^ 0x2833);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a17 + 8 * ((v18 | (16 * v18)) ^ (v17 - 22407)))
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_100040F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  _BOOL4 v24;
  int v25;
  int v26;
  _BOOL4 v27;

  v24 = a7 > v22;
  *(_DWORD *)(a19
            + 4 * (((v23 - 211205800) ^ 0x3FF7F3FFDFF9FF94) + ((2 * (v23 - 211205800)) & 0x3FEFE7FFBFF3FF28))
            - 0x420F9655460C2ED9) = v19;
  v25 = v20 - 17 + v23 + 1966229409;
  v26 = v24 ^ (v25 < 29961834);
  v27 = v25 < v21;
  if (!v26)
    v24 = v27;
  return ((uint64_t (*)(void))(*(_QWORD *)(a17 + 8 * ((31514 * !v24) ^ v20)) - 12))();
}

uint64_t sub_10004100C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  int v18;

  return ((uint64_t (*)(void))(*(_QWORD *)(a17 + 8 * ((46618 * (v17 == ((v18 - 9106) | 0x4061) - 17649)) ^ v18))
                            - ((2061 * (v18 ^ 0x2821u)) ^ 0x182BLL)))();
}

uint64_t sub_100041060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a17 + 8 * (v17 ^ (58954 * ((int)a7 > a10)))) - (((v17 ^ 0xCE92u) - 29878) ^ v17 ^ 0x5154u)))(a1, a2, a3, a4, a5, a6, a7, v17 ^ 0xCE92u);
}

uint64_t sub_1000410CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a17 + 8 * (a8 - 21357))
                                                                                                - 8))(0x39810B0108A02004, 14090, 9043, 29886, 2147483646, 29191, 35419);
}

uint64_t sub_10004115C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v12;
  int v13;
  int v14;
  char v15;
  char v16;
  int v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;

  return ((uint64_t (*)(void))(*(_QWORD *)(a12
                                        + 8
                                        * (((*(_DWORD *)(a3
                                                       + 4
                                                       * (((v21 + v23 + 1) ^ v18)
                                                        + (((unint64_t)(v21 + v23 + 1) << (((v22 + v15) | v16) ^ v19)) & v20))
                                                       + a1) == v12)
                                          * (((v22 ^ v13) * v14) ^ a2)) ^ (v22 + v17)))
                            - 8))();
}

uint64_t sub_1000411B8(uint64_t a1, uint64_t a2, unsigned int a3, int a4, unsigned int a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  int v18;

  return ((uint64_t (*)(void))(*(_QWORD *)(a17 + 8 * (a8 ^ ((v18 + v17 > a5) * a6))) - ((a8 ^ a3) + a4) + a7))();
}

uint64_t sub_1000411EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v25 = 8 * v23;
  v26 = 842727511 * ((~(v24 - 120) & 0xBCEAA99FDE51B034 | (v24 - 120) & 0x4315566021AE4FCBLL) ^ 0x1D070286E953D769);
  v27 = *(_QWORD *)(a17 + v25) - v26 - 12;
  *(_QWORD *)(v24 - 120) = a11;
  *(_QWORD *)(v24 - 112) = v27;
  *(_DWORD *)(v24 - 104) = v23 - 588285052 + v26;
  v28 = (void (*)(uint64_t))((char *)*(&off_10112C750 + v23 - 2008) - 1213656063);
  v28(v24 - 120);
  v29 = 842727511
      * ((-2 - ((~(v24 - 120) | 0x58EFED0F407AABD1) + ((v24 - 120) | 0xA71012F0BF85542ELL))) ^ 0xF90246167778CC8CLL);
  v30 = *(_QWORD *)(a17 + v25) - v29 + (v23 + 29886) - 35439;
  *(_QWORD *)(v24 - 120) = a12;
  *(_QWORD *)(v24 - 112) = v30;
  *(_DWORD *)(v24 - 104) = v23 - 588285052 + v29;
  v28(v24 - 120);
  a20 = *(_QWORD *)(a17 + 8 * (v23 + 316)) - 8;
  a22 = a16;
  a23 = a12;
  *(_DWORD *)(v24 - 120) = v23
                         - 263575687 * (((v24 - 120) & 0xF578E441 | ~((v24 - 120) | 0xF578E441)) ^ 0x92A7DBF8)
                         - 639492808;
  *(_QWORD *)(v24 - 112) = &a20;
  v31 = ((uint64_t (*)(uint64_t))((char *)*(&off_10112C750 + v23 - 2577) - 361318118))(v24 - 120);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a17 + 8 * (v23 ^ 0x6A5B)) - 8))(v31);
}

uint64_t sub_100041420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  int v18;
  _DWORD *v19;

  *v19 = v17;
  return ((uint64_t (*)(void))(*(_QWORD *)(a17 + 8 * (v18 - 2661)) - 8))();
}

void sub_100041A44(uint64_t a1)
{
  uint64_t v1;
  _BOOL4 v4;
  int v5;

  v5 = *(_DWORD *)a1 + 1699881553 * ((-2 - ((a1 | 0x5DC4100E) + (~(_DWORD)a1 | 0xA23BEFF1))) ^ 0x2107745);
  v1 = *(_QWORD *)(a1 + 8);
  v4 = (unint64_t)*(&off_10112C750 + (v5 ^ 0x33BE)) - v1 - 926068843 < 0x10
    || (unint64_t)*(&off_10112C750 + v5 - 8891) - v1 - 375037474 < 0x10
    || (unint64_t)*(&off_10112C750 + v5 - 10226) - v1 - 88721867 < 0x10;
  __asm { BR              X15 }
}

uint64_t sub_100048010@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;

  *(_BYTE *)(a1 + v11 - 1627687571) = *(&a6 + v11 - 1627687571) ^ *(_BYTE *)(v6 + v11 - 1627687571) ^ ((v11 + 109) * v12) ^ *(_BYTE *)(v7 + v11 - 1627687571) ^ *(_BYTE *)(v8 + v11 - 1627687571) ^ 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((41500 * (v11 - 1 == (v10 ^ 0x38u) + 1627675081)) ^ v10)) - 12))();
}

uint64_t sub_100048080@<X0>(int8x16_t *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int8x16_t a6)
{
  uint64_t v6;
  unsigned int v7;

  *a1 = veorq_s8(a6, (int8x16_t)xmmword_100DF7510);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)(v7 + 25124)) - v7 + 12477))();
}

void sub_1000480BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(_DWORD *)(a6 + 16) = 2134650450;
}

void sub_100048104(uint64_t a1)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  _BOOL4 v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v2 = (*(_QWORD *)(a1 + 16) ^ 0x5BFBD31BB7E8FFF7)
     - 0x5BFBD31B0B08E5B5
     + ((2 * *(_QWORD *)(a1 + 16)) & 0xB7F7A6376FD1FFEELL);
  v3 = (*(_QWORD *)(a1 + 40) ^ 0xB1FEBDFB7EF5DB1DLL)
     + 0x4E0142052DEA3F25
     + ((2 * *(_QWORD *)(a1 + 40)) & 0x63FD7BF6FDEBB63ALL);
  v4 = v2 < 0xACE01A42;
  v5 = v2 > v3;
  if (v4 != v3 < 0xACE01A42)
    v6 = v4;
  else
    v6 = v5;
  v1 = *(_DWORD *)(a1 + 24) ^ (1075146641 * ((-2 - ((a1 | 0xA67AB1F6) + (~(_DWORD)a1 | 0x59854E09))) ^ 0xCB1385D7));
  __asm { BR              X14 }
}

uint64_t sub_100048320@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((473
                                          * ((a1 & 0x597FBFFE ^ 0x4954A2A4) + (v2 ^ 0xCB15AEAD) + 2144658800 != ((51 * (v1 ^ 0x69CE) - 76988139) & 0x496BFF3 ^ 0x2C9458BD))) ^ (v1 - 9188)))
                            - 4))();
}

uint64_t sub_1000483B0(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((49 * (v2 + v1 + ((a1 + 1396690298) ^ a1 ^ 0xD68Bu) > 7)) ^ a1))
                            - 8))();
}

uint64_t sub_1000483FC(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (a2 ^ (39 * (a3 >> 4 != 181140992))))
                            - (((a2 - 2046) | 0x821u) ^ 0x4A69)))();
}

uint64_t sub_100048444@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  BOOL v19;

  v9 = (v6 + v5 + 1396711424);
  v10 = v9 + v1;
  v11 = v9 + v8;
  v12 = (v6 + v5) & 0xF;
  v13 = v12 + v2 - v11;
  v14 = (v12 | v3) - v11;
  v15 = v12 + v4 - v11;
  v19 = (unint64_t)(v10 - v11) < 0x10 || v13 < 0x10 || (unint64_t)(v14 + 1) < 0x10 || v15 < 0x10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((12755 * ((v19 ^ (a1 - 80)) & 1)) ^ a1)) - 12))();
}

uint64_t sub_1000484C8@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v3
                                                    + 8
                                                    * (((((v2 < 0x10) ^ (a2 + 18)) & 1)
                                                      * ((a2 + 6280) ^ 0x7532)) ^ (a2 + 16145))))(a1, 0);
}

uint64_t sub_100048510(__n128 a1, uint64_t a2, uint64_t a3, int a4)
{
  char v4;
  __n128 v5;
  __n128 v6;
  __n128 v7;
  __n128 v8;

  v5.n128_u64[0] = (v4 + 14) & 0xF;
  v5.n128_u64[1] = (v4 + 13) & 0xF;
  v6.n128_u64[0] = (v4 + 12) & 0xF;
  v6.n128_u64[1] = (v4 + 11) & 0xF;
  v7.n128_u64[0] = (v4 + 10) & 0xF;
  v7.n128_u64[1] = (v4 + 9) & 0xF;
  v8.n128_u64[0] = 0xA9A9A9A9A9A9A9A9;
  v8.n128_u64[1] = 0xA9A9A9A9A9A9A9A9;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(STACK[0x2D0] + 8 * a4)
                                                                                 - 4))(a1, v5, v6, v7, (__n128)xmmword_100DF7480, v8);
}

uint64_t sub_10004861C@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X4>, int a5@<W7>, int a6@<W8>, __n128 a7@<Q1>, int8x16_t a8@<Q4>, int8x16_t a9@<Q5>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v22;
  uint64_t v23;
  int8x16_t v25;
  int8x16_t v26;

  v22 = (a6 - a3);
  v23 = ((_BYTE)a6 - (_BYTE)a3) & 0xF;
  v25.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a7 - 1), a8).u64[0];
  v25.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v18, a8).u64[0];
  v26 = vrev64q_s8(vmulq_s8(v25, a9));
  *(int8x16_t *)(v15 + v22) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v12 + (v22 & 0xF) - 15), *(int8x16_t *)(a4 + v22)), veorq_s8(*(int8x16_t *)((v22 & 0xF) + v13 - 14), *(int8x16_t *)(v14 + (v22 & 0xF) - 15))), vextq_s8(v26, v26, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * (((a5 + a3 == a1) * v16) ^ a2)) - 4))();
}

uint64_t sub_100048694(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a7 ^ (31352 * (v7 != a2))))
                            - ((a7 - 1859485191) & 0x6ED5DFDE ^ 0x9DDELL)))();
}

uint64_t sub_1000486EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((((a7 + 9010) ^ 0xFFFFCA6C) + a7 + 12003) * ((v7 >> 3) & 1)) ^ (a7 + 19825))))();
}

uint64_t sub_100048728(double a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  uint64_t (*v9)(__n128, __n128);

  LODWORD(STACK[0x384]) = v7;
  v9 = *(uint64_t (**)(__n128, __n128))(v8 + 8 * a7);
  LODWORD(STACK[0x380]) = v7 & 0xFFFFFFF8;
  LODWORD(STACK[0x37C]) = a7 - 9010;
  a2.n128_u16[0] = -22103;
  a2.n128_u8[2] = -87;
  a2.n128_u8[3] = -87;
  a2.n128_u8[4] = -87;
  a2.n128_u8[5] = -87;
  a2.n128_u8[6] = -87;
  a2.n128_u8[7] = -87;
  return v9((__n128)xmmword_100DF7490, a2);
}

uint64_t sub_1000487AC(int8x16_t a1, int8x8_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, int a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  int8x16x4_t v24;

  v21 = (a4 + a8);
  v24.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)a8) & 0xF;
  v24.val[0].i64[1] = (v20 + (_BYTE)a8) & 0xF;
  v24.val[1].i64[0] = (v18 + (_BYTE)a8) & 0xF;
  v24.val[1].i64[1] = (v19 + (_BYTE)a8) & 0xF;
  v24.val[2].i64[0] = (v17 + (_BYTE)a8) & 0xF;
  v24.val[2].i64[1] = (v15 + (_BYTE)a8) & 0xF;
  v24.val[3].i64[0] = (v14 + a8) & 0xFLL;
  v22 = STACK[0x2D0];
  v24.val[3].i64[1] = (v13 + (_BYTE)a8) & 0xF;
  *(int8x8_t *)(a9 + v21) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v10 + (v21 & 0xF) - 7), *(int8x8_t *)(v16 + v21)), veor_s8(*(int8x8_t *)((v21 & 0xF) + v11 - 6), *(int8x8_t *)(v12 + (v21 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v24, a1), a2)));
  return (*(uint64_t (**)(void))(v22 + 8 * ((26 * (a10 == a8)) ^ a7)))();
}

uint64_t sub_10004887C()
{
  uint64_t v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (((((LODWORD(STACK[0x37C]) + 1106) | 0x2A91) ^ 0x1B42)
                                          * (LODWORD(STACK[0x384]) != LODWORD(STACK[0x380]))) ^ LODWORD(STACK[0x37C])))
                            - ((LODWORD(STACK[0x37C]) + 1106) ^ 0xDD9Eu)
                            + 40390))();
}

uint64_t sub_1000488D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a6 - 12026)) - 12))();
}

uint64_t sub_10004891C@<X0>(int a1@<W3>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  char v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = (a1 + a2);
  *(_BYTE *)(v12 + v13) = *(_BYTE *)(v3 + (v13 & 0xF)) ^ *(_BYTE *)(v2 + v13) ^ *(_BYTE *)((v13 & 0xF) + v4 + 1) ^ *(_BYTE *)(v5 + (v13 & 0xF)) ^ ((v13 & 0xF) * v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((v7 + a1 == v9) * v10) ^ v6)) - 12))();
}

uint64_t sub_100048970@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((43252
                                          * (((((2 * v1) ^ 0x4868) + 439538204) ^ v2)
                                           + 2130686827
                                           + (a1 & 0xFB323D78 ^ (v1 + 673142049) & 0xD7E07BFB ^ 0xCB101BDA) != -57093593)) ^ (v1 - 12003)))
                            - 12))();
}

uint64_t sub_100048A04@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = a1 < v6;
  *(_BYTE *)(v9 + (v5 - 1217792695)) = *(_BYTE *)(v2 + ((v5 - 1217792695) & 0xFLL)) ^ *(_BYTE *)(v1 + (v5 - 1217792695)) ^ *(_BYTE *)((((_BYTE)v5 + 73) & 0xF) + v3 + 1) ^ *(_BYTE *)(v4 + (((_BYTE)v5 + 73) & 0xF)) ^ (-87 * ((v5 + 73) & 0xF));
  if (v10 == v5 - 1274886287 < v6)
    v10 = v5 - 1274886287 < a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v10 * ((v7 - 2143067140) & 0x7FBCFDDB ^ 0x3526)) ^ v7)) - 12))();
}

uint64_t sub_100048AAC(uint64_t a1, uint64_t a2, int a3)
{
  int8x16_t **v3;
  uint64_t v4;
  unint64_t *v5;

  *(int8x16_t *)&STACK[0x390] = veorq_s8(**v3, (int8x16_t)xmmword_100DF7520);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a3 ^ (782 * (&STACK[0x390] == v5)))) - 12))();
}

uint64_t sub_100048B08(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  _BYTE *v4;

  LOBYTE(STACK[0x410]) = *v4;
  LOBYTE(STACK[0x411]) = v4[1];
  LOBYTE(STACK[0x412]) = v4[2];
  LOBYTE(STACK[0x413]) = v4[3];
  LOBYTE(STACK[0x414]) = v4[4];
  LOBYTE(STACK[0x415]) = v4[5];
  LOBYTE(STACK[0x416]) = v4[6];
  LOBYTE(STACK[0x417]) = v4[7];
  LOBYTE(STACK[0x418]) = v4[8];
  LOBYTE(STACK[0x419]) = v4[9];
  LOBYTE(STACK[0x41A]) = v4[10];
  LOBYTE(STACK[0x41B]) = v4[11];
  LOBYTE(STACK[0x41C]) = v4[12];
  LOBYTE(STACK[0x41D]) = v4[13];
  LOBYTE(STACK[0x41E]) = v4[14];
  LOBYTE(STACK[0x41F]) = v4[15];
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * a3) - ((a3 + 1604346403) & 0xA05F4F1E ^ 0x4F18)))();
}

uint64_t sub_100048BCC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v9;
  uint64_t (*v10)(void);

  v6 = *(_QWORD *)(v3 + 32);
  LODWORD(STACK[0x2CC]) = (v0 - 12036) | 0x4044;
  if (v5)
    v7 = v2 == v1;
  else
    v7 = 1;
  v9 = v7 || v6 == 0;
  v10 = *(uint64_t (**)(void))(v4 + 8 * ((101 * (((v0 - 1) ^ v9) & 1)) ^ v0));
  LODWORD(STACK[0x2C8]) = -42900;
  return v10();
}

uint64_t sub_100048C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  int v47;
  int v48;
  uint64_t v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  _BOOL4 v54;
  uint64_t (*v55)(void);

  v50 = a47 - (((v48 ^ 0x86EC4EC6) + 2 * a47) & 0xB9718ED2) - 1607546798;
  v51 = ((2 * v50) & 0xFDEFD3CC ^ 0xB96182C0) + (v50 ^ 0xA24F2E8F);
  v52 = (v47 - 1123278654) & 0x42F3F07D;
  LOBYTE(v50) = ((2 * v50) & 0xCC ^ 0xC0) + (v50 ^ 0x8F) + 10;
  LODWORD(STACK[0x2CC]) = v52;
  v54 = (v50 & 0xF) == 2 * (v50 & 7) && v51 != v52 + 2130151826;
  v55 = *(uint64_t (**)(void))(v49 + 8 * ((55966 * v54) ^ v47));
  LODWORD(STACK[0x2C8]) = -42899;
  return v55();
}

#error "100053938: call analysis failed (funcsize=9141)"

uint64_t sub_10005393C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  int a64;
  int a65;
  int a66;
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int a83;
  int a84;
  int a85;
  int a86;
  int a87;
  int a88;
  int a89;
  int a90;
  int a91;
  int a92;
  int a93;
  int a94;
  int a95;
  int a96;
  int a97;
  unsigned int v97;
  int v98;
  int v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int v104;
  unint64_t v105;
  unint64_t v106;
  int v107;
  unint64_t v108;
  uint64_t v109;
  int v110;
  unint64_t v111;
  uint64_t v112;
  int v113;
  unint64_t v114;
  int v115;
  unsigned int v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  int v121;
  unint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  unsigned int v126;
  int v127;
  int v128;
  unsigned int v129;
  int v130;
  unint64_t v131;
  int v132;
  unint64_t v133;
  int v134;
  int v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  int v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  int v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  int v164;
  int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  int v182;
  int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  unsigned int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  unsigned int v209;
  int v210;
  int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  unsigned int v216;
  int v217;
  unsigned int v218;
  int v219;
  int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  int v250;
  unsigned int v251;
  int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  unsigned int v275;
  int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  int v290;
  unsigned int v291;
  int v292;
  unsigned int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  int v297;
  int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  unsigned int v309;
  unsigned int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  int v314;
  int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  int v324;
  unsigned int v325;
  int v326;
  unsigned int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  unint64_t v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  char *v351;
  int v352;
  int v353;
  int v354;
  unsigned int v355;
  unsigned int v356;
  int v357;
  unsigned int v358;
  char *v359;
  int v360;
  int v361;
  int v362;
  int v363;
  int v364;
  int v365;
  unsigned int v366;
  int v367;
  char *v368;
  int v369;
  int v370;
  int v371;
  unsigned int v372;
  char *v373;
  int v374;
  unsigned int v375;
  int v376;
  int v377;
  int v378;
  unsigned int v379;
  int v380;
  uint64_t v381;
  char *v382;
  unsigned int v383;
  unsigned int v384;
  unsigned int v385;
  char *v386;
  int v387;
  unsigned int v388;
  unint64_t v389;
  unint64_t v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  char *v394;
  char *v395;
  int v396;
  int v397;
  int v398;
  int v399;
  int v400;
  unsigned int v401;
  unsigned int v402;
  int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  int v407;
  int v408;
  int v409;

  LODWORD(STACK[0x2E4]) = v99;
  LODWORD(STACK[0x30C]) = v101;
  LODWORD(STACK[0x318]) = a4;
  LODWORD(STACK[0x324]) = v98;
  LODWORD(STACK[0x2C8]) = 0;
  LODWORD(STACK[0x37C]) = LODWORD(STACK[0x380]) < 0x9F6070C4;
  v103 = v97 < 0x707080AA;
  v104 = v97;
  v105 = (v97 - 1015391498) | ((unint64_t)(v97 - 1015391498 < 0x33EADB92) << 32);
  v106 = ((v97 - 111012268) | ((unint64_t)(v97 - 111012268 < 0x69D296F7) << 32)) + v102;
  STACK[0x338] = v106;
  LODWORD(v106) = *(unsigned __int8 *)(v106 - 1775408887);
  v107 = ((2 * (v106 ^ 0x10)) & 0x77777777) + (v106 ^ 0x7DAEF7EF);
  LODWORD(v106) = (v106 ^ 0x9F) - ((2 * (v106 ^ 0x9F)) & 0x9A) - 1302048179;
  v108 = (v104 | (unint64_t)(v103 << 32)) + v102;
  STACK[0x360] = v108;
  v109 = *(unsigned __int8 *)(v108 - 1886421162);
  v110 = ((2 * (v109 ^ 0xAC)) & 0xFFFFFF7F) + (v109 ^ 0xAFFAEF13);
  LODWORD(STACK[0x348]) = v110 + 615143510 + ((2 * v110 + 582) & 0x264 ^ 0xFE6BFFFF);
  v111 = ((v104 - 1003892595) | ((unint64_t)(v104 - 1003892595 < 0x349A512E) << 32)) + v102;
  STACK[0x368] = v111;
  v112 = *(unsigned __int8 *)(((v104 - 1544517018) | ((unint64_t)(v104 - 1544517018 < 0x14610B04) << 32))
                            + v102
                            - 341904132);
  LODWORD(v108) = (v106 ^ 0x4D9BADB2) - ((2 * (v106 ^ 0x4D9BADB2) + 2) & 0x9DEF27C4);
  v113 = ((2 * (v112 ^ 0xDDDDDDDD)) & 0x6E) + (v112 ^ 0xFFFDF76A);
  LODWORD(v106) = v106 ^ (-1959008809 - v107 - ((459141388 - 2 * v107) & 0x1B19DAA2)) ^ 0xF11F2CFE;
  v114 = STACK[0x278];
  LODWORD(v111) = *(_DWORD *)(STACK[0x278] + 4 * (*(unsigned __int8 *)(v111 - 882528558) ^ 0xDALL));
  v115 = v113 - ((2 * v113 + 8022) & 0x44F8);
  v116 = v104;
  v117 = (v104 - 947681989) | ((unint64_t)(v104 - 947681989 < 0x37F405E3) << 32);
  v118 = ((v104 - 1164677312) | ((unint64_t)(v104 - 1164677312 < 0x2B04EFE9) << 32)) + v102;
  STACK[0x358] = v118;
  LODWORD(v118) = *(_DWORD *)(v114 + 4 * (*(unsigned __int8 *)(v118 - 721743849) ^ 0xCFLL));
  v119 = ((v104 - 1129184273) | ((unint64_t)(v104 - 1129184273 < 0x2D22848E) << 32)) + v102;
  STACK[0x370] = v119;
  LODWORD(v108) = v106 ^ (v108 + 1324848099);
  v120 = STACK[0x280];
  v121 = *(unsigned __int8 *)(STACK[0x280] + (*(unsigned __int8 *)(v119 - 757236878) ^ 0x3DLL));
  v122 = ((v104 - 294534741) | ((unint64_t)(v104 - 294534741 < 0x5EE24251) << 32)) + v102;
  STACK[0x328] = v122;
  v123 = *(unsigned __int8 *)(v122 - 1591886417);
  v124 = ((2 * (v123 ^ 0x89)) & 0xFFFFFFDF) + (v123 ^ 0x9C3ECF76);
  LODWORD(v106) = v118 - ((2 * v118 + 1249972252) & 0x62F7A0CE);
  LODWORD(v118) = v124 - ((2 * v124 + 85388774) & 0x500768E);
  v125 = *(unsigned __int8 *)(((v104 - 1043805995) | ((unint64_t)(v104 - 1043805995 < 0x32394977) << 32))
                            + v102
                            - 842615159);
  v126 = ((-106 * (v121 ^ 0xF2)) & 0xBE) + ((75 * (v121 ^ 0xFFFFFFF2)) ^ 0xDF);
  v127 = ((2 * (v125 ^ 0x52)) & 0xFC) + (v125 ^ 0xEFFFE7AD);
  LODWORD(v108) = *(unsigned __int8 *)(v120 + (v108 + 203)) ^ 0xFFFFFFF2;
  v128 = *(_DWORD *)(v114
                   + 4
                   * (*(unsigned __int8 *)(((v116 - 712303159) | ((unint64_t)(v116 - 712303159 < 0x45FB9E6E) << 32))
                                         + v102
                                         - 1174117998) ^ 0xB5));
  v129 = v127 - 381495002 + ((2 * v127 + 48840) & 0xF382 ^ 0xFB6FFFFF);
  v130 = v128 - ((2 * v128 + 1249972252) & 0x73DF8B1E);
  v131 = (v116 - 967324733) | ((unint64_t)(v116 - 967324733 < 0x36C84C60) << 32);
  v132 = (v126 + 33) - ((2 * (v126 + 33)) & 0x5E);
  v133 = (v116 - 1252247996) | ((unint64_t)(v116 - 1252247996 < 0x25CCB6DF) << 32);
  STACK[0x300] = v131 + v102;
  v134 = *(_DWORD *)(v114 + 4 * (*(unsigned __int8 *)(v131 + v102 - 919096416) ^ 0x2CLL));
  LODWORD(v114) = v134 - ((2 * v134 + 1249972252) & 0x78F880C0);
  LODWORD(v108) = ((75 * v108) ^ 0x7F) - 106 * v108 - 127;
  v135 = v108 - ((2 * v108) & 0x1C4);
  STACK[0x350] = v133 + v102;
  LODWORD(v108) = *(unsigned __int8 *)(v120 + (*(unsigned __int8 *)(v133 + v102 - 634173151) ^ 0xEALL));
  HIDWORD(v136) = v108;
  LODWORD(v136) = ((75 * (v108 ^ 0xFFFFFFF2) - ((-106 * (v108 ^ 0xFFFFFFF2)) & 0xCA) - 27) ^ 0xE4) << 24;
  v137 = (v116 + 187160844) | ((unint64_t)(v116 + 187160844 < 0x7B9859AC) << 32);
  LODWORD(v108) = ((v136 >> 25) ^ 0xFFFFFF80) - 4 * ((v136 >> 25) >> 1) - 2;
  HIDWORD(v136) = v108 ^ 0x7E;
  LODWORD(v136) = (_DWORD)v108 << 24;
  STACK[0x2F0] = v105 + v102;
  LODWORD(v133) = LODWORD(STACK[0x384]) + 4416;
  v138 = *(unsigned __int8 *)(v105 + v102 - 871029650);
  LODWORD(STACK[0x2CC]) = v133;
  v139 = v138 - ((v133 ^ 0x61B2) & (2 * v138)) + 1545364467;
  v140 = STACK[0x270];
  v141 = STACK[0x268];
  LODWORD(v108) = (v136 >> 31) - ((2 * (v136 >> 31)) & 0xC6);
  LODWORD(v138) = v139 ^ *(_DWORD *)(STACK[0x270] + 4 * (v138 ^ 6)) ^ *(_DWORD *)(STACK[0x268] + 4 * (v112 ^ 0x3C)) ^ (v115 - 271519193) ^ (v114 - 507721618);
  STACK[0x2F8] = v137 + v102;
  v142 = *(unsigned __int8 *)(v137 + v102 - 2073581996);
  v143 = v142 - ((2 * v142) & 0xCA);
  LODWORD(v142) = *(_DWORD *)(v140 + 4 * (v142 ^ 0x17));
  HIDWORD(v136) = v142 ^ 0x2532CF;
  LODWORD(v136) = v142 ^ 0x9C00000;
  LODWORD(v142) = ((((v143 << 10) - 762473472) ^ 0xD28D9400)
                 - ((2 * (((v143 << 10) - 762473472) ^ 0xD28D9400)) & 0x41C24800)
                 - 522116056) ^ ((v136 >> 22) - ((2 * (v136 >> 22)) & 0xE0C9F7C2) - 261817375);
  HIDWORD(v136) = v142 ^ 0x3EC;
  LODWORD(v136) = v142 ^ 0xF3599C00;
  LODWORD(STACK[0x2E8]) = v116;
  LODWORD(v125) = *(_DWORD *)(v141 + 4 * (v125 ^ 0xB2)) ^ (v111 - ((2 * v111 + 1249972252) & 0x5BA0F766) - 753859647) ^ v129 ^ (v132 + 1586608431) ^ ((v136 >> 10) - ((2 * (v136 >> 10)) & 0x2C6107EC) - 1775205386);
  LODWORD(STACK[0x34C]) = v125;
  v144 = (v116 - 20062107) | ((unint64_t)(v116 - 20062107 < 0x6F3E610C) << 32);
  LODWORD(v109) = *(_DWORD *)(v141 + 4 * (v109 ^ 0xCD));
  v145 = *(unsigned __int8 *)(v117 + v102 - 938739171);
  LODWORD(v118) = *(_DWORD *)(v141 + 4 * (v123 ^ 0xF8)) ^ (v118 - 1438600646);
  LODWORD(v123) = v145 - ((2 * v145) & 0x1A) + 1012149773;
  LODWORD(v145) = *(_DWORD *)(v140 + 4 * (v145 ^ 0x7D));
  LODWORD(v142) = v106 + 1455183989;
  LODWORD(v106) = v130 + 1597001117;
  v146 = *(unsigned __int8 *)(((v116 - 1797784490) | ((unint64_t)(v116 - 1797784490 < 0x5487CFA) << 32))
                            + v102
                            - 88636666);
  v147 = v146 - ((2 * v146) & 0x76) - 2090728645;
  LODWORD(v146) = *(_DWORD *)(v140 + 4 * (v146 ^ 0x30));
  STACK[0x310] = v144 + v102;
  LODWORD(v118) = v118 ^ v106 ^ v146;
  v148 = *(unsigned __int8 *)(v144 + v102 - 1866359052);
  LODWORD(v122) = v118 ^ v147 ^ (v135 - 949165598);
  LODWORD(STACK[0x344]) = v122;
  LODWORD(v118) = *(unsigned __int8 *)(v120 + (v148 ^ 0xD4)) ^ 0xFFFFFFF2;
  LODWORD(v118) = ((-106 * v118) & 0xF2) + ((75 * v118) ^ 0x79) - 121;
  v149 = v145 ^ v109 ^ LODWORD(STACK[0x348]) ^ v123 ^ v142 ^ (v118 - ((2 * v118) & 0x96) - 375001781);
  LODWORD(STACK[0x348]) = v149;
  v150 = LODWORD(STACK[0x258]) ^ v149;
  v151 = LODWORD(STACK[0x264]) ^ v125;
  v152 = v138 ^ ((((v108 - 21) ^ 1) - 8) - ((2 * (((v108 - 21) ^ 1) - 8)) & 0x16) - 1499240693);
  LODWORD(STACK[0x334]) = v152;
  LODWORD(v108) = ((BYTE1(v151) ^ 0xF7) - ((2 * (BYTE1(v151) ^ 0xF7)) & 0xFFFFFFF7) - 1363448581) ^ 0x61BBC4F9;
  LODWORD(v118) = LODWORD(STACK[0x288]) ^ v122;
  LODWORD(v108) = ((((2 * v108) & 0x82004D1A) - v108 - 1896969870) ^ 0x41EE21A3)
                + ((((((2 * v108) & 0x82004D1A) - v108 - 1896969870) ^ 0xF34DD40F) + 1) ^ 0x7367DFFE)
                + ((2 * (((((2 * v108) & 0x82004D1A) - v108 - 1896969870) ^ 0xF34DD40F) + 1)) & 0xE6CFBFFC)
                - 1936187390;
  v153 = *(_QWORD *)(v100 + 8 * a73) - 28766794;
  LODWORD(v148) = *(_DWORD *)(v153 + 4 * ((LOBYTE(STACK[0x288]) ^ v122) ^ 0x64u));
  v154 = *(_QWORD *)(v100 + 8 * a76) - 16569858;
  v155 = *(_QWORD *)(v100 + 8 * a74) - 1319596050;
  LODWORD(v123) = LODWORD(STACK[0x254]) ^ v152;
  v156 = *(_QWORD *)(v100 + 8 * a75) - 1667639947;
  LODWORD(v144) = (4
                 * ((v148 ^ 0xDE28B1E8) * (v148 ^ 0xDE28B1E8)
                  - ((2 * (v148 ^ 0xDE28B1E8) * (v148 ^ 0xDE28B1E8)) & 0x3DCDA8A4))
                 - 73707192) ^ 0xFB9B5148;
  LODWORD(v109) = *(_DWORD *)(v154 + 4 * (HIBYTE(v150) ^ 0x74)) ^ LODWORD(STACK[0x2B4]) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v151) ^ 0x24u)) ^ v148 ^ ((HIBYTE(v150) ^ 0x23) + 654845366 + ((2 * (HIBYTE(v150) ^ 0x23) + 252) & 0x26E ^ 0xFFDF6BFF)) ^ *(_DWORD *)(v156 + 4 * (BYTE2(v123) ^ 0xE4u)) ^ (v108 - ((2 * v108) & 0x982D7C3A) + 1276558877) ^ (v144 - ((2 * v144) & 0x6639F380) + 857536960);
  LODWORD(v144) = (596108512 - (BYTE1(v123) ^ 0x6A | 0x2387E4E0) + (BYTE1(v123) ^ 0x6A | 0xDC781B1F)) ^ 0x67C1B1E;
  LODWORD(v144) = (((v144 | 0x5CFB3943) - (v144 | 0xA304C6BC) - 1559968068) ^ 0x86FF3953)
                + (((((v144 | 0x5CFB3943) - (v144 | 0xA304C6BC) - 1559968068) ^ 0x345CCCFF) + 1) ^ 0xBFDBF1F2)
                + ((2 * ((((v144 | 0x5CFB3943) - (v144 | 0xA304C6BC) - 1559968068) ^ 0x345CCCFF) + 1)) & 0x7FB7E3E4)
                + 1076104718;
  LODWORD(v148) = *(_DWORD *)(v153 + 4 * (v151 ^ 0x72u));
  v157 = (4
        * ((v148 ^ 0xDE28B1E8) * (v148 ^ 0xDE28B1E8) - ((2 * (v148 ^ 0xDE28B1E8) * (v148 ^ 0xDE28B1E8)) & 0x23BA8F4A))
        + 1198857876) ^ 0x47751E94;
  v158 = (BYTE1(v150) ^ 0x44400121) + ((v150 >> 8) & 0x37 ^ 0x822D0616) - ((BYTE1(v150) ^ 0x44400121) & 0x44400037);
  v159 = (v158 ^ 0x822D073D)
       + (((v158 ^ 0x308EF291) + 1) ^ 0x57DEFE7D)
       + ((2 * ((v158 ^ 0x308EF291) + 1)) & 0xAFBDFCFA)
       - 1474231933;
  v160 = v159 - ((2 * v159) & 0xF3F0D3C4);
  v161 = LODWORD(STACK[0x250]) ^ *(_DWORD *)(v154 + 4 * (BYTE3(v118) ^ 0x71)) ^ ((BYTE3(v118) ^ 0x26)
                                                                                 - ((2 * (BYTE3(v118) ^ 0x26) + 136877308) & 0x82802DC)
                                                                                 - 1290667028) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v123) ^ 0x7Bu)) ^ *(_DWORD *)(v156 + 4 * (BYTE2(v150) ^ 0x27u)) ^ v148 ^ (v157 - ((2 * v157) & 0x917D1938) - 927036259) ^ (v144 - ((2 * v144) & 0xB7D42D42) + 1542067873);
  LODWORD(v108) = *(_DWORD *)(v153 + 4 * ((LOBYTE(STACK[0x254]) ^ v152) ^ 0xA1u));
  LODWORD(v144) = (v108 ^ 0xDE28B1E8) * (v108 ^ 0xDE28B1E8)
                - ((2 * (v108 ^ 0xDE28B1E8) * (v108 ^ 0xDE28B1E8)) & 0x29A801E8);
  LODWORD(v108) = LODWORD(STACK[0x248]) ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v151) ^ 0x3E)) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v150) ^ 0x2Bu)) ^ *(_DWORD *)(v156 + 4 * (BYTE2(v118) ^ 0xFAu)) ^ ((HIBYTE(v151) ^ 0x69) + 1650933674 + ((2 * (HIBYTE(v151) ^ 0x69) + 252) & 0x256 ^ 0xF7DF7FFF)) ^ v108 ^ (v160 - 101160478);
  LODWORD(v123) = BYTE3(v123);
  LODWORD(v118) = BYTE1(v118);
  v162 = (((2 * (v118 ^ 0x8F)) & 0x162) - (v118 ^ 0x8F) + 806478) & 0x803FF;
  v163 = (v162 ^ 0x8028C)
       + (((v162 ^ 0xB2ABF720) + 1) ^ 0x7F3FFEFF)
       + ((2 * ((v162 ^ 0xB2ABF720) + 1)) & 0x6457FDFE)
       - 2134900479;
  v164 = *(_DWORD *)(v153 + 4 * (v150 ^ 0xF6u));
  LODWORD(v137) = 4
                * ((v164 ^ 0xDE28B1E8) * (v164 ^ 0xDE28B1E8)
                 - ((2 * (v164 ^ 0xDE28B1E8) * (v164 ^ 0xDE28B1E8)) & 0x384E1922))
                + 1889284676;
  LODWORD(v118) = LODWORD(STACK[0x244]) ^ *(_DWORD *)(v156 + 4 * (BYTE2(v151) ^ 0xF9u)) ^ *(_DWORD *)(v154 + 4 * (v123 ^ 0xFF)) ^ *(_DWORD *)(v155 + 4 * (v118 ^ 0x4D)) ^ v164 ^ ((v123 ^ 0xA8) - 1675944704 + ((2 * (v123 ^ 0xA8) + 252) & 0x102 ^ 0xFFF77BFF)) ^ ((v137 ^ 0x709C3244) + 1483613837 - 2 * ((v137 ^ 0x709C3244) & 0x586E269C ^ v137 & 0x10)) ^ (v163 - ((2 * v163) & 0x253F2BCC) + 312448486);
  LODWORD(v123) = v108 ^ (((4 * v144 - 749730864) ^ 0xD35003D0)
                        + 1662571767
                        - 2 * (((4 * v144 - 749730864) ^ 0xD35003D0) & 0x6318D4FC ^ (4 * (_BYTE)v144 + 64) & 8));
  LODWORD(v148) = ((unsigned __int16)(v108 ^ (((4 * v144 + 976) ^ 0x3D0)
                                                             - 11017
                                                             - 2
                                                             * (((4 * v144 + 976) ^ 0x3D0) & 0xD4FC ^ (4 * (_BYTE)v144 + 64) & 8))) >> 8) ^ 0x3E;
  v165 = v148
       + (((BYTE1(v123) ^ 0xB2A3F592) + 1) ^ 0xFFF7B72E)
       + ((2 * ((BYTE1(v123) ^ 0xB2A3F592) + 1)) & 0x65476E5C)
       + 542930;
  v166 = *(_DWORD *)(v153 + 4 * (LODWORD(STACK[0x29C]) ^ v161 ^ 0xFCu));
  v167 = 4
       * ((v166 ^ 0xDE28B1E8) * (v166 ^ 0xDE28B1E8) - ((2 * (v166 ^ 0xDE28B1E8) * (v166 ^ 0xDE28B1E8)) & 0x3456DA3A))
       - 391269260;
  LODWORD(v108) = LODWORD(STACK[0x240]) ^ *(_DWORD *)(v156 + 4 * (BYTE2(v118) ^ 0x90u)) ^ *(_DWORD *)(v154 + 4 * (BYTE3(v109) ^ 0x51)) ^ v166 ^ *(_DWORD *)(v155 + 4 * v148) ^ (v165 - ((2 * v165) & 0x5DC28572) - 1360969031) ^ ((BYTE3(v109) ^ 6) - 2050546942 + ((2 * (BYTE3(v109) ^ 6) + 252) & 0x106 ^ 0xFFDF6FFF));
  LODWORD(v148) = (v167 ^ 0xE8ADB474) + 1517914823 - 2 * ((v167 ^ 0xE8ADB474) & 0x5A798ACC ^ v167 & 8);
  LODWORD(v144) = (-1586439228 - (BYTE1(v118) ^ 0xB2 | 0xA170DBC4) + (BYTE1(v118) ^ 0xB2 | 0x5E8F243B)) ^ 0x7E95E618;
  LODWORD(v144) = v144 - ((2 * v144) & 0x435954FC) + 1638705790;
  v168 = v144 ^ 0x41B6687E;
  LODWORD(v144) = (v144 ^ 0x41B6687E)
                + (((v144 ^ 0xF3159DD2) + 1) ^ 0xFB3FBB72)
                + ((2 * ((v144 ^ 0xF3159DD2) + 1)) & 0xF67F76E4)
                + 79709326;
  v169 = *(_DWORD *)(v153 + 4 * (LODWORD(STACK[0x23C]) ^ v123));
  LODWORD(v137) = (v169 ^ 0xDE28B1E8) * (v169 ^ 0xDE28B1E8)
                - ((2 * (v169 ^ 0xDE28B1E8) * (v169 ^ 0xDE28B1E8)) & 0x1884418C);
  v170 = LODWORD(STACK[0x238]) ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v161) ^ 0x80)) ^ *(_DWORD *)(v156
                                                                                             + 4
                                                                                             * (BYTE2(v109) ^ 0xC4u)) ^ v169 ^ *(_DWORD *)(v155 + 4 * v168);
  v171 = v108 ^ v148;
  v172 = ((2 * BYTE1(v109)) | 0x13AE7898) - BYTE1(v109) + 1982383028;
  v173 = (v172 ^ 0x89D73CCA)
       + (((v172 ^ 0x3B74C966) + 1) ^ 0xFFE1BF7F)
       + ((2 * ((v172 ^ 0x3B74C966) + 1)) & 0xFFC37EFE)
       + 1982593;
  v174 = (((v118 ^ STACK[0x2B8]) & 0x24 ^ 0x60882020)
        + (v118 ^ STACK[0x2B8] ^ 0x95)
        - ((v118 ^ STACK[0x2B8] ^ 0x95) & 0x24)) ^ 0x21892527;
  v175 = *(_DWORD *)(v153 + 4 * ((((2 * v174) | 0x8B69F55C) - v174 + 977995090) ^ 0x84B5FFD5));
  v176 = (4
        * ((v175 ^ 0xDE28B1E8) * (v175 ^ 0xDE28B1E8) - ((2 * (v175 ^ 0xDE28B1E8) * (v175 ^ 0xDE28B1E8)) & 0x548C19E))
        + 177308476) ^ 0xA91833C;
  v177 = v170 ^ ((HIBYTE(v161) ^ 0xD7) + 846880291 + ((2 * (HIBYTE(v161) ^ 0xD7) + 252) & 0x348 ^ 0xF7F7FBFF)) ^ (v144 - ((2 * v144) & 0xF755C10A) - 72687483) ^ (((4 * v137 - 1324842216) ^ 0xB1088318) - 1398753234 + (~(2 * ((4 * v137 - 1324842216) ^ 0xB1088318)) | 0xA6BE8FA7));
  LODWORD(v108) = ((v161 >> 8) & 0xB6 ^ 0x94C854B1) + ((v161 >> 8) & 0x49) - 1;
  v178 = LODWORD(STACK[0x234]) ^ *(_DWORD *)(v156 + 4 * (BYTE2(v161) ^ 0x9Au)) ^ *(_DWORD *)(v155
                                                                                             + 4
                                                                                             * (BYTE1(v109) ^ 0x86u)) ^ *(_DWORD *)(v154 + 4 * (BYTE3(v123) ^ 0x44)) ^ ((BYTE3(v123) ^ 0x13) + 870289350 + ((2 * (BYTE3(v123) ^ 0x13) + 252) & 0x28E ^ 0xF7FF7FFF)) ^ v175 ^ (v173 - ((2 * v173) & 0x3606F7AA) - 1694270507) ^ (v176 - ((2 * v176) & 0xCA5B2EF8) + 1697486717);
  LODWORD(v108) = (v108 ^ 0x94C85494)
                + (((v108 ^ 0x266BA138) + 1) ^ 0xD63DDB6D)
                + ((2 * ((v108 ^ 0x266BA138) + 1)) & 0xAC7BB6DA)
                + 700589203;
  LODWORD(v109) = *(_DWORD *)(v153 + 4 * (v109 ^ 0x67u));
  LODWORD(v144) = (4
                 * ((v109 ^ 0xDE28B1E8) * (v109 ^ 0xDE28B1E8)
                  - ((2 * (v109 ^ 0xDE28B1E8) * (v109 ^ 0xDE28B1E8)) & 0x1E0E998C))
                 + 1008546584) ^ 0x3C1D3318;
  LODWORD(v123) = LODWORD(STACK[0x230]) ^ *(_DWORD *)(v154 + 4 * (BYTE3(v118) ^ 0xCC)) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v161) ^ 0x24u)) ^ v109 ^ ((BYTE3(v118) ^ 0x9B) + 1895309846 + ((2 * (BYTE3(v118) ^ 0x9B) + 252) & 0x32E ^ 0xF7FF7BFF)) ^ *(_DWORD *)(v156 + 4 * (BYTE2(v123) ^ 0x69u)) ^ (v108 - ((2 * v108) & 0x64841940) + 843189408) ^ (v144 - 970421105 + (~(2 * v144) | 0x73AEE6E7));
  LODWORD(v144) = ((2 * (BYTE1(v178) ^ 0x4005C10)) | 0xDF71B7BA) - (BYTE1(v178) ^ 0x4005C10) - 1874385885;
  LODWORD(v144) = (v144 ^ 0x6BB887EC)
                + (((v144 ^ 0xD91B7240) + 1) ^ 0x37F73FF6)
                + ((2 * ((v144 ^ 0xD91B7240) + 1)) & 0x6FEE7FEC)
                - 938950646;
  LODWORD(v148) = *(_DWORD *)(v153 + 4 * (a72 ^ v177));
  LODWORD(v118) = (v144 - ((2 * v144) & 0x2EE93D0A) - 1753964923) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v178) ^ 0x21u));
  HIDWORD(v136) = v118 ^ 0x1B6573E;
  LODWORD(v136) = v118 ^ 0x72000000;
  LODWORD(v109) = (4
                 * ((v148 ^ 0xDE28B1E8) * (v148 ^ 0xDE28B1E8)
                  - ((2 * (v148 ^ 0xDE28B1E8) * (v148 ^ 0xDE28B1E8)) & 0x186E3376))
                 + 819750636) ^ 0x30DC66EC;
  v179 = (BYTE1(v123) ^ 0x330941 | 0xEFD89B2F) - (BYTE1(v123) ^ 0x330941 | 0x102764D0) + 271017168;
  v180 = (v179 ^ 0xEFEB922F)
       + (((v179 ^ 0x5D486783) + 1) ^ 0xBF73F7EF)
       + ((2 * ((v179 ^ 0x5D486783) + 1)) & 0x7EE7EFDE)
       + 1082918929;
  v181 = *(_DWORD *)(v153 + 4 * (LODWORD(STACK[0x228]) ^ v178));
  LODWORD(v137) = (4
                 * ((v181 ^ 0xDE28B1E8) * (v181 ^ 0xDE28B1E8)
                  - ((2 * (v181 ^ 0xDE28B1E8) * (v181 ^ 0xDE28B1E8)) & 0x3547BEDC))
                 - 359694920) ^ 0xEA8F7DB8;
  LODWORD(v118) = LODWORD(STACK[0x22C]) ^ *(_DWORD *)(v156 + 4 * (BYTE2(v123) ^ 0xACu)) ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v171) ^ 0xCF)) ^ v148 ^ ((HIBYTE(v171) ^ 0x98) - 775934825 + ((2 * (HIBYTE(v171) ^ 0x98) + 60) & 0x30 ^ 0xF7FF7BFF)) ^ (v109 - ((2 * v109) & 0x7DB8D3A8) + 1054632407);
  LODWORD(v109) = ((v171 >> 8) & 0x7E ^ 0x218F9407) + ((v171 >> 8) & 0x81) - 1;
  LODWORD(v109) = (v109 & 0x40F) + 1677896191 + (v109 & 0xF0 ^ 0x122000F1);
  LODWORD(v148) = (v109 ^ 0xC4815B13) + 1;
  v182 = (v109 ^ 0x7622AEBF) + (v148 ^ 0x7BE7FBF3);
  LODWORD(v109) = *(_DWORD *)(v154 + 4 * (HIBYTE(v177) ^ 0x6E)) ^ LODWORD(STACK[0x2B0]) ^ *(_DWORD *)(v156 + 4 * (BYTE2(v171) ^ 0x4Eu)) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v123) ^ 0x41u)) ^ v181 ^ ((HIBYTE(v177) ^ 0x39) + 539097018 + ((2 * (HIBYTE(v177) ^ 0x39) + 252) & 0x276 ^ 0xF7F7EFFF)) ^ (v180 - ((2 * v180) & 0x41485F0A) - 1599852667) ^ (v137 - ((2 * v137) & 0x614592F8) + 815974783);
  LODWORD(v108) = v182
                + ((2 * v148) & 0x654FF7E6)
                - 2078800883
                - ((2 * (v182 + ((2 * v148) & 0x654FF7E6) - 2078800883)) & 0xFE5BCA76);
  LODWORD(v148) = *(_DWORD *)(v153 + 4 * (LODWORD(STACK[0x224]) ^ v123));
  v183 = (4
        * ((v148 ^ 0xDE28B1E8) * (v148 ^ 0xDE28B1E8) - ((2 * (v148 ^ 0xDE28B1E8) * (v148 ^ 0xDE28B1E8)) & 0x23CE0286))
        - 946076404) ^ 0xC79C050C;
  v184 = LODWORD(STACK[0x220]) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v171) ^ 0x49u)) ^ *(_DWORD *)(v156
                                                                                             + 4
                                                                                             * (BYTE2(v177) ^ 0x1Du)) ^ v148 ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v178) ^ 0x83)) ^ ((HIBYTE(v178) ^ 0xD4) - 686837873 + ((2 * (HIBYTE(v178) ^ 0xD4) + 252) & 0x220 ^ 0xFFDF7FFF)) ^ (v108 + 2133714235) ^ (v183 - ((2 * v183) & 0x343D21B0) - 1709272871);
  LODWORD(v108) = BYTE3(v123);
  LODWORD(v123) = (((BYTE3(v123) ^ 0x71) + 68438654) ^ 0x1CF8FC17)
                - 486079511
                + ((2 * ((BYTE3(v123) ^ 0x71) + 68438654)) & 0x820902E);
  LODWORD(v108) = LODWORD(STACK[0x21C]) ^ *(_DWORD *)(v154 + 4 * (v108 ^ 0x26));
  LODWORD(v148) = (v123 & v108) - ((2 * (v123 & v108)) & 0x7E37D21E);
  LODWORD(v108) = (v123 | v108) - ((2 * (v123 | v108)) & 0x1E71ADB2);
  LODWORD(v123) = (v136 >> 25) - ((2 * (v136 >> 25)) & 0x9FC921A4) - 807104302;
  HIDWORD(v136) = v123 ^ 0x53;
  LODWORD(v136) = v123 ^ 0x5D4EF080;
  v185 = ((BYTE1(v177) ^ 0xF72A0967) - ((2 * (BYTE1(v177) ^ 0xF72A0967)) & 0x64401C6) + 57106659) ^ 0xB44551D6;
  v186 = (((v185 | 0x336C17A1) - (v185 | 0xCC93E85E) - 862721954) ^ 0x73642FA9)
       + (((((v185 | 0x336C17A1) - (v185 | 0xCC93E85E) - 862721954) ^ 0xC1C7DA05) + 1) ^ 0xCEEDEA8F)
       + ((2 * ((((v185 | 0x336C17A1) - (v185 | 0xCC93E85E) - 862721954) ^ 0xC1C7DA05) + 1)) & 0x9DDBD51E)
       + 823268721;
  v187 = (v186 + 1227238124 - ((2 * v186) & 0x924C55D8)) ^ 0x49262AED;
  v188 = *(_DWORD *)(v153 + 4 * (v171 ^ 0x72u));
  v189 = (4
        * ((v188 ^ 0xDE28B1E8) * (v188 ^ 0xDE28B1E8) - ((2 * (v188 ^ 0xDE28B1E8) * (v188 ^ 0xDE28B1E8)) & 0x17BBCFEE))
        - 1351114788) ^ 0xAF779FDC;
  v190 = v118 ^ ((v136 >> 7) - ((2 * (v136 >> 7)) & 0x3333AF22) + 429512593);
  LODWORD(v123) = *(_DWORD *)(v156 + 4 * (BYTE2(v178) ^ 0x5Du)) ^ LODWORD(STACK[0x2A0]) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v177) ^ 0x5Au)) ^ v188 ^ (v148 + 2132535567) ^ (v108 - 1892100391) ^ (v189 - ((2 * v189) & 0x22F1EE08) + 293140228) ^ (v187 - ((2 * v187 + 2) & 0x5E9245AC) - 1354161449);
  LODWORD(v144) = (((v184 >> 8) & 0xDA ^ 0xAABE6BD1) + ((v184 >> 8) & 0x25) - 1) ^ 0x826A6BED;
  LODWORD(v144) = (((v144 | 0x38DE8F5B) - (v144 | 0xC72170A4) - 954109788) ^ 0x100A8FD3)
                + (((((v144 | 0x38DE8F5B) - (v144 | 0xC72170A4) - 954109788) ^ 0xA2A97A7F) + 1) ^ 0x676DEDBB)
                + ((2 * ((((v144 | 0x38DE8F5B) - (v144 | 0xC72170A4) - 954109788) ^ 0xA2A97A7F) + 1)) & 0xCEDBDB76)
                - 1735257531;
  v191 = *(_DWORD *)(v153 + 4 * (v109 ^ 0xE8u));
  LODWORD(v148) = 4
                * ((v191 ^ 0xDE28B1E8) * (v191 ^ 0xDE28B1E8)
                 - ((2 * (v191 ^ 0xDE28B1E8) * (v191 ^ 0xDE28B1E8)) & 0x26A00B32))
                + 1296045668;
  LODWORD(v108) = *(_DWORD *)(v154 + 4 * (HIBYTE(v190) ^ 0x49)) ^ LODWORD(STACK[0x2AC]) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v184) ^ 0xB5u)) ^ *(_DWORD *)(v156 + 4 * (BYTE2(v123) ^ 0xEu)) ^ v191 ^ (v144 - ((2 * v144) & 0x4ECDF190) + 661059784) ^ ((HIBYTE(v190) ^ 0x1E) + 1877960745 + ((2 * (HIBYTE(v190) ^ 0x1E) + 252) & 0x354 ^ 0xFFDFEFFF));
  LODWORD(v144) = ((2 * BYTE3(v109)) ^ 0xAA) - ((v109 >> 22) & 0x28) + 405;
  v192 = BYTE3(v109) ^ 0x4144A2B;
  LODWORD(v144) = v192 + (v144 & 0xFC ^ 0xDEDEF6E7) + ((2 * v144) & 0xE0 ^ 0x20) + 555813261;
  LODWORD(v144) = v144 - 2 * (v144 & 0x17F ^ v192 & 1);
  v193 = (BYTE1(v123) ^ 0x8444B003 | 0x60BB767B) - (BYTE1(v123) ^ 0x8444B003 | 0x9F448984) - 1622898300;
  v194 = (v193 ^ 0xE4FFC67E)
       + (((v193 ^ 0x565C33D2) + 1) ^ 0x6B7B5B6D)
       + ((2 * ((v193 ^ 0x565C33D2) + 1)) & 0xD6F6B6DA)
       - 1803246445;
  v195 = *(_DWORD *)(v153 + 4 * (a71 ^ v184));
  LODWORD(v137) = 4
                * ((v195 ^ 0xDE28B1E8) * (v195 ^ 0xDE28B1E8)
                 - ((2 * (v195 ^ 0xDE28B1E8) * (v195 ^ 0xDE28B1E8)) & 0x15114EE2));
  LODWORD(v118) = LODWORD(STACK[0x210]) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v123) ^ 6u)) ^ *(_DWORD *)(v154 + 4 * (BYTE3(v109) ^ 2)) ^ v195;
  v196 = v108 ^ ((v148 ^ 0x4D401664) + 737935081 - 2 * ((v148 ^ 0x4D401664) & 0x2BFBFEF8 ^ v148 & 0x10));
  v197 = v118 ^ *(_DWORD *)(v156 + 4 * (BYTE2(v190) ^ 0x4Cu)) ^ (((v137 + 706911684) ^ 0x2A229DC4)
                                                                 + 70770633
                                                                 - 2
                                                                 * (((v137 + 706911684) ^ 0x2A229DC4) & 0x437DFD8 ^ ((_BYTE)v137 + 36) & 0x10)) ^ (v144 + 851640702) ^ (v194 - ((2 * v194) & 0x5A2F294A) - 1390963547);
  LODWORD(v118) = (BYTE1(v190) ^ 5) - ((2 * (BYTE1(v190) ^ 5)) & 0x12C) + 662;
  LODWORD(v118) = (v118 ^ 0x2B6)
                + (((v118 ^ 0xB2A3F71A) + 1) ^ 0x76FF7CD1)
                + ((2 * ((v118 ^ 0xB2A3F71A) + 1)) & 0xEDFEF9A2)
                - 1996455121;
  LODWORD(v144) = *(_DWORD *)(v153 + 4 * (v123 ^ 7u));
  LODWORD(v148) = (4
                 * ((v144 ^ 0xDE28B1E8) * (v144 ^ 0xDE28B1E8)
                  - ((2 * (v144 ^ 0xDE28B1E8) * (v144 ^ 0xDE28B1E8)) & 0x27853C7A))
                 + 1326086388) ^ 0x4F0A78F4;
  LODWORD(v123) = BYTE3(v123);
  v198 = (v123 ^ 0x99) + 1419940036 + ((2 * (v123 ^ 0x99) + 252) & 0x8A ^ 0xFFF77BFF);
  LODWORD(v108) = LODWORD(STACK[0x20C]) ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v184) ^ 0x5E)) ^ *(_DWORD *)(v156 + 4 * (BYTE2(v109) ^ 0x7Au)) ^ v144 ^ ((HIBYTE(v184) ^ 9) - ((2 * (HIBYTE(v184) ^ 9) + 5372) & 0x10D6) + 1567905513) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v190) ^ 0x25u)) ^ (v148 - ((2 * v148) & 0xB46DD4E8) + 1513548406);
  LODWORD(v144) = BYTE1(v109);
  LODWORD(v109) = (BYTE1(v109) ^ 0x2F | 0x227A2717) - (BYTE1(v109) ^ 0x2F | 0xDD85D8E8) - 578430744;
  v199 = (v109 ^ 0x90D9D257) + 1;
  LODWORD(v148) = (v109 ^ 0x227A27FB) + (v199 ^ 0x1EF4DBF3);
  v200 = v108 ^ (v118 - ((2 * v118) & 0xF1D14676) + 2028512059);
  LODWORD(v118) = v123 ^ 0xCE;
  LODWORD(v123) = *(_DWORD *)(v155 + 4 * (v144 ^ 0xC3));
  LODWORD(v144) = *(_DWORD *)(v153 + 4 * (v190 ^ 0x37u));
  LODWORD(v118) = LODWORD(STACK[0x208]) ^ *(_DWORD *)(v154 + 4 * v118) ^ v123 ^ *(_DWORD *)(v156 + 4 * (BYTE2(v184) ^ 0x1Du));
  LODWORD(v123) = (4
                 * ((v144 ^ 0xDE28B1E8) * (v144 ^ 0xDE28B1E8)
                  - ((2 * (v144 ^ 0xDE28B1E8) * (v144 ^ 0xDE28B1E8)) & 0x19C1B720))
                 - 1283232192) ^ 0xB3836E40;
  v201 = v118 ^ v144 ^ (v148
                      + ((2 * v199) & 0x3DE9B7E6)
                      - 519363571
                      - ((2 * (v148 + ((2 * v199) & 0x3DE9B7E6) - 519363571)) & 0x69C2906)
                      - 2092034941) ^ v198 ^ (v123 - ((2 * v123) & 0x17A7D4B8) + 198437468);
  LODWORD(v118) = ((BYTE1(v200) ^ 0x4C) + ((v200 >> 8) & 0x29 ^ 0x8C0DB821) - ((BYTE1(v200) ^ 0x4C) & 0x29)) ^ 0x8819B01A;
  LODWORD(v118) = (((v118 | 0xE498D26D) - (v118 | 0x1B672D92) + 459746706) ^ 0xE08CDA2D)
                + 2359340
                + (((((v118 | 0xE498D26D) - (v118 | 0x1B672D92) + 459746706) ^ 0x522F2F81) + 1) ^ 0xFFDBFFD4)
                + ((2 * ((((v118 | 0xE498D26D) - (v118 | 0x1B672D92) + 459746706) ^ 0x522F2F81) + 1)) & 0xFFB7FFA8);
  v202 = v118 - (a70 & (2 * v118));
  LODWORD(v148) = *(_DWORD *)(v153 + 4 * (v197 ^ 0x83u));
  LODWORD(v137) = 4
                * ((v148 ^ 0xDE28B1E8) * (v148 ^ 0xDE28B1E8)
                 - ((2 * (v148 ^ 0xDE28B1E8) * (v148 ^ 0xDE28B1E8)) & 0x3183BAD6))
                + 1661433260;
  LODWORD(v108) = LODWORD(STACK[0x204]) ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v196) ^ 0x50)) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v200) ^ 0x3Fu)) ^ v148 ^ *(_DWORD *)(v156 + 4 * (BYTE2(v201) ^ 0x8Fu)) ^ ((HIBYTE(v196) ^ 7) - 1819413592 + ((2 * (HIBYTE(v196) ^ 7) + 252) & 0x252 ^ 0xF7DFEFFF));
  v203 = *(_DWORD *)(v156 + 4 * (BYTE2(v196) ^ 0xF2u));
  LODWORD(v144) = LODWORD(STACK[0x200]) ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v197) ^ 0xA)) ^ ((HIBYTE(v197) ^ 0x5D)
                                                                                          + 290912962
                                                                                          + ((2 * (HIBYTE(v197) ^ 0x5D)
                                                                                            + 252) & 0x86 ^ 0xF7FFFFFF));
  LODWORD(v148) = v144 & 0x40000000;
  v204 = (v144 & 0x40000000 & v203) - 170648607 + 2 * (v144 & 0x40000000 & v203);
  v205 = v108 ^ ((v137 ^ 0x630775AC) + 2134301511 - 2 * ((v137 ^ 0x630775AC) & 0x7F36DB54 ^ v137 & 0x10));
  v206 = 2063582771 - (a97 ^ v144 & 0xBFFFFFFF | 0x7AFFC633) + (a97 ^ v144 & 0xBFFFFFFF | 0x850039CC);
  LODWORD(v137) = ((2 * (BYTE1(v201) ^ 0x17BB2FD4)) & 0x3761B16) - (BYTE1(v201) ^ 0x17BB2FD4) - 1107008908;
  v207 = (v137 ^ 0xA9BF4DC1) + (((v137 ^ 0x1B1CB86D) + 1) ^ 0xB47BFFCB) + ((2 * ((v137 ^ 0x1B1CB86D) + 1)) & 0x68F7FF96);
  v208 = v148 | 0x36FF1FAE;
  if (v204 != -170648607)
    v208 = 1845378908 - v208;
  v209 = v205 ^ (v202 + 788150005);
  v210 = (v203 ^ 0xFBBA6C2) - 922689454 + v208 - ((2 * ((v203 ^ 0xFBBA6C2) - 922689454 + v208)) & 0x66482470);
  v211 = *(_DWORD *)(v153 + 4 * (v200 ^ 0x9Bu));
  v212 = 4
       * ((v211 ^ 0xDE28B1E8) * (v211 ^ 0xDE28B1E8) - ((2 * (v211 ^ 0xDE28B1E8) * (v211 ^ 0xDE28B1E8)) & 0x2B07E908))
       - 703606256;
  v213 = v211 ^ *(_DWORD *)(v155 + 4 * (BYTE1(v201) ^ 0x61u)) ^ ((v212 ^ 0xD60FD210)
                                                                 + 221120416
                                                                 - 2 * ((v212 ^ 0xD60FD210) & 0xD2E07A8 ^ v212 & 8));
  v214 = BYTE1(v196) ^ 0xC6;
  v215 = (v207 + 1266942005 - ((2 * (v207 + 1266942005)) & 0xA2F83BDE) - 780395025) ^ v206;
  v216 = v214
       + (((BYTE1(v196) ^ 0xB2A3F56A) + 1) ^ 0x69F9681F)
       + ((2 * ((BYTE1(v196) ^ 0xB2A3F56A) + 1)) & 0x4142C03E)
       - 1777952799;
  v217 = *(_DWORD *)(v153 + 4 * (a69 ^ v201));
  v218 = a96 ^ *(_DWORD *)(v156 + 4 * (BYTE2(v197) ^ 0xEFu)) ^ *(_DWORD *)(v155 + 4 * v214) ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v200) ^ 0xFD)) ^ v217 ^ (v216 - ((2 * v216) & 0xFB4CAF3E) - 39430241) ^ ((HIBYTE(v200) ^ 0xAA) - 1682446860 + ((2 * (HIBYTE(v200) ^ 0xAA) + 252) & 0x2EA ^ 0xF7FFEBFF));
  v219 = v213 ^ v215;
  v220 = BYTE1(v197);
  v221 = (BYTE1(v197) ^ 0xC018CB77) - ((2 * (BYTE1(v197) ^ 0xC018CB77)) & 0x21157E);
  v222 = v219 ^ (v210 + 858001976);
  v223 = 4 * ((v217 ^ 0xDE28B1E8) * (v217 ^ 0xDE28B1E8) - ((2 * (v217 ^ 0xDE28B1E8) * (v217 ^ 0xDE28B1E8)) & 0xF18B99C))
       - 1640926408;
  v224 = ((v221 - 1992974657) ^ 0x8D2D65D2 | 0x1E550C17) - ((v221 - 1992974657) ^ 0x8D2D65D2 | 0xE1AAF3E8) - 508890136;
  v225 = (v224 ^ 0xDA553C5D) + (((v224 ^ a68) + 1) ^ 0xFDFEF995) + ((2 * ((v224 ^ a68) + 1)) & 0xFBFDF32A) + 33621611;
  v226 = (v223 ^ 0x9E317338) + 108160249 - 2 * ((v223 ^ 0x9E317338) & 0x67264FC ^ v223 & 4);
  v227 = *(_DWORD *)(v153 + 4 * (v196 ^ 0xC4u));
  v228 = (4
        * ((v227 ^ 0xDE28B1E8) * (v227 ^ 0xDE28B1E8) - ((2 * (v227 ^ 0xDE28B1E8) * (v227 ^ 0xDE28B1E8)) & 0x3620E7AA))
        - 331231404) ^ 0xEC41CF54;
  v229 = a95 ^ *(_DWORD *)(v156 + 4 * (BYTE2(v200) ^ 0x9Fu)) ^ *(_DWORD *)(v155 + 4 * (v220 ^ 0x50u)) ^ v227 ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v201) ^ 0xDC)) ^ ((HIBYTE(v201) ^ 0x8B) + 1367154447 + ((2 * (HIBYTE(v201) ^ 0x8B) + 252) & 0x120 ^ 0xF7FF7FFF)) ^ (v225 - ((2 * v225) & 0x55C36A7C) + 719435070) ^ (v228 - ((2 * v228) & 0x8AA01110) - 984610678);
  v230 = ((v229 >> 15) & 0x1BE ^ 0x1B2) + (BYTE2(v229) ^ 0x7AE7DC06);
  v231 = v218 ^ v226;
  v232 = (((2 * (BYTE2(v229) ^ 0xE7)) | 0xE75ED088) - (BYTE2(v229) ^ 0xE7) + 206608316) ^ 0xF73FC764;
  v233 = ((-310367377 - (v232 | 0xED802B6F) + (v232 | 0x127FD490)) ^ 0xE91084F0) + 1;
  v234 = (v233 ^ 0x59FFDFAB) + v230 + ((2 * v233) & 0xB3FFBF56);
  v235 = v230 - 2062015711 + ((v234 - ((2 * v234 + 372279020) & 0x2BAE74CE) + 1089437149) ^ 0xEA28C599);
  v236 = (1428867609 - (BYTE1(v231) ^ 0xF0 | 0x552ACA19) + (BYTE1(v231) ^ 0xF0 | 0xAAD535E6)) ^ 0x26C437C6;
  v237 = ((((2 * v236) | 0x1A26C3DE) - v236 - 219374063) ^ 0x81026375)
       + ((((((2 * v236) | 0x1A26C3DE) - v236 - 219374063) ^ 0x33A196D9) + 1) ^ 0x7FF57FFF)
       + ((2 * (((((2 * v236) | 0x1A26C3DE) - v236 - 219374063) ^ 0x33A196D9) + 1)) & 0xFFEAFFFE);
  v238 = *(_DWORD *)(v153
                   + 4
                   * ((((2 * (v222 ^ 0x26409064)) | 0x10818D54)
                     - (v222 ^ 0x26409064)
                     + 2009020758) ^ 0xAE00565D));
  v239 = (v238 ^ 0xDE28B1E8) * (v238 ^ 0xDE28B1E8) - ((2 * (v238 ^ 0xDE28B1E8) * (v238 ^ 0xDE28B1E8)) & 0xE91E378);
  v240 = a94 ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v209) ^ 0x49)) ^ v238 ^ *(_DWORD *)(v155 + 4 * (BYTE1(v231) ^ 0x4Au)) ^ *(_DWORD *)(v156 + 4 * v235) ^ ((HIBYTE(v209) ^ 0x1E) + 856259849 + ((2 * (HIBYTE(v209) ^ 0x1E) + 252) & 0x114 ^ 0xF7D7FBFF));
  v241 = ((BYTE1(v229) ^ 0xFFFFFF1F) - 1928941298 + ((2 * BYTE1(v229)) | 0xE5F29DE6)) ^ 0x52F9CE63;
  v242 = ((((2 * v241) & 0x540) - v241 + 728358239) ^ 0xB695D57)
       + ((((((2 * v241) & 0x540) - v241 + 728358239) ^ 0xB9CAA8FB) + 1) ^ 0x7B47D7DF)
       + ((2 * (((((2 * v241) & 0x540) - v241 + 728358239) ^ 0xB9CAA8FB) + 1)) & 0xF68FAFBE)
       - 2068305887;
  v243 = *(_DWORD *)(v153 + 4 * (a67 ^ v231));
  v244 = (v243 ^ 0xDE28B1E8) * (v243 ^ 0xDE28B1E8) - ((2 * (v243 ^ 0xDE28B1E8) * (v243 ^ 0xDE28B1E8)) & 0x2315B14C);
  v245 = a93 ^ *(_DWORD *)(v156 + 4 * (BYTE2(v209) ^ 0x4Du)) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v229) ^ 0x78u)) ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v222) ^ 0xB9)) ^ v243 ^ ((HIBYTE(v222) ^ 0xEE) - 705684291 + ((2 * (((HIBYTE(v222) ^ 0xEE) + 62) & 0x3F ^ (HIBYTE(v222) | 0x7FFFFFFE))) ^ 0x208403)) ^ (v242 - ((2 * v242) & 0x83AD2F34) - 1042901094);
  v246 = (BYTE1(v209) ^ 0xDF | 0x938550B5) - (BYTE1(v209) ^ 0xDF | 0x6C7AAF4A) + 1819979594;
  v247 = (v246 ^ 0x93855034)
       + (((v246 ^ 0x2126A598) + 1) ^ 0x97DFDF7E)
       + ((2 * ((v246 ^ 0x2126A598) + 1)) & 0x2FBFBEFC)
       + 1746935938;
  v248 = v247 - ((2 * v247) & 0xF31E9E00);
  v249 = v240 ^ (v237 - 2146795519 - ((2 * (v237 - 2146795519)) & 0xF781ACA8) + 2076235348);
  v250 = *(_DWORD *)(v153 + 4 * (a66 ^ v229));
  v251 = 4
       * ((v250 ^ 0xDE28B1E8) * (v250 ^ 0xDE28B1E8) - ((2 * (v250 ^ 0xDE28B1E8) * (v250 ^ 0xDE28B1E8)) & 0x13460B44))
       + 646715016;
  v252 = (v251 ^ 0x268C1688) + 1231891560 - 2 * ((v251 ^ 0x268C1688) & 0x496D2C7C ^ v251 & 0x14);
  v253 = HIBYTE(v229);
  v254 = (HIBYTE(v229) ^ 0x42) - 1992781946 + ((2 * (HIBYTE(v229) ^ 0x42) + 252) & 0xFFFFFE0F ^ 0xF7F77FFF);
  v255 = v245 ^ (((4 * v244 + 1177248408) ^ 0x462B6298)
               - ((2 * ((4 * v244 + 1177248408) ^ 0x462B6298)) & 0x761124A0)
               - 1157066157);
  v256 = a92 ^ *(_DWORD *)(v156 + 4 * (BYTE2(v222) ^ 0x49u)) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v209) ^ 0x5Eu)) ^ v250 ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v231) ^ 0x91)) ^ ((HIBYTE(v231) ^ 0xC6) + 116233784 + ((2 * (HIBYTE(v231) ^ 0xC6) + 252) & 0x372 ^ 0xFFDF6BFF)) ^ (v248 - 108048640) ^ v252;
  v257 = ((BYTE1(v222) ^ 0x31) + ((v222 >> 8) & 0xDA ^ 0xCD0740CA) - ((BYTE1(v222) ^ 0x31) & 0xDA)) ^ 0xDD0B40F6;
  v258 = ((((2 * v257) & 0x82D2E) - v257 - 571938456) ^ 0xCDE4E968)
       + ((((((2 * v257) & 0x82D2E) - v257 - 571938456) ^ 0x7F471CC4) + 1) ^ 0x5F7FDCFF)
       + ((2 * (((((2 * v257) & 0x82D2E) - v257 - 571938456) ^ 0x7F471CC4) + 1)) & 0xBEFFB9FE)
       - 1602215167;
  v259 = *(_DWORD *)(v153 + 4 * (a65 ^ v209));
  v260 = (4
        * ((v259 ^ 0xDE28B1E8) * (v259 ^ 0xDE28B1E8) - ((2 * (v259 ^ 0xDE28B1E8) * (v259 ^ 0xDE28B1E8)) & 0x10FC5E8C))
        - 1577534184) ^ 0xA1F8BD18;
  v261 = v249 ^ (((4 * v239 - 1658599696) ^ 0x9D23C6F0)
               - ((2 * ((4 * v239 - 1658599696) ^ 0x9D23C6F0)) & 0x342EC0B8)
               + 437739613);
  v262 = a91 ^ *(_DWORD *)(v154 + 4 * (v253 ^ 0x15)) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v222) ^ 0x1Du)) ^ v259 ^ *(_DWORD *)(v156 + 4 * (BYTE2(v231) ^ 0xC9u)) ^ v254 ^ (v260 - ((2 * v260) & 0xEF885B8) - 2021899556) ^ (v258 - ((2 * v258) & 0xA35F0FCE) - 777025561);
  v263 = (BYTE1(v256) ^ 0x800669) - ((2 * (BYTE1(v256) ^ 0x800669)) & 0x1000042) - 707039199;
  v264 = (v263 ^ 0xD55B7691)
       + (((v263 ^ 0x67F8833D) + 1) ^ 0xB7D3F95F)
       + ((2 * ((v263 ^ 0x67F8833D) + 1)) & 0x6FA7F2BE)
       + 1210844833;
  v265 = v264 - ((2 * v264) & 0x64746772);
  v266 = *(_DWORD *)(v153 + 4 * (a90 ^ v255));
  v267 = a89 ^ *(_DWORD *)(v156 + 4 * (BYTE2(v262) ^ 0x65u)) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v256) ^ 0xD9u)) ^ v266 ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v261) ^ 0x1A)) ^ ((HIBYTE(v261) ^ 0x4D) - 436813293 + ((2 * (HIBYTE(v261) ^ 0x4D) + 252) & 0x328 ^ 0xFFFF7BFF)) ^ (v265 - 1304808519);
  v268 = (762182791 - (BYTE1(v262) ^ 0xF5 | 0x2D6DFC87) + (BYTE1(v262) ^ 0xF5 | 0xD2920378)) ^ 0xC292F768;
  v269 = ((((2 * v268) | 0xB6BF0150) - v268 + 614498136) ^ 0xCB5F74A9)
       + ((((((2 * v268) | 0xB6BF0150) - v268 + 614498136) ^ 0x79FC8105) + 1) ^ 0x78BEFF79)
       + ((2 * (((((2 * v268) | 0xB6BF0150) - v268 + 614498136) ^ 0x79FC8105) + 1)) & 0xF17DFEF2)
       - 2025783161;
  v270 = *(_DWORD *)(v153
                   + 4
                   * ((((v256 ^ LODWORD(STACK[0x294])) & 0x64 ^ 0x500D4020)
                     + (v256 ^ LODWORD(STACK[0x294]) ^ 0xA22218C4)
                     - ((v256 ^ LODWORD(STACK[0x294]) ^ 0xA22218C4) & a64)) ^ 0xF20F50E4));
  v271 = *(_DWORD *)(v154 + 4 * (HIBYTE(v255) ^ 0xC0)) ^ LODWORD(STACK[0x2A8]) ^ *(_DWORD *)(v156
                                                                                             + 4
                                                                                             * (BYTE2(v261) ^ 0x55u)) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v262) ^ 0xE4u)) ^ v270 ^ ((HIBYTE(v255) ^ 0x97) - ((2 * (HIBYTE(v255) ^ 0x97) + 136877308) & 0x828176E) - 660055499) ^ (v269 - ((2 * v269) & 0xDEEB59B4) - 277500710);
  v272 = (4
        * ((v270 ^ 0xDE28B1E8) * (v270 ^ 0xDE28B1E8) - ((2 * (v270 ^ 0xDE28B1E8) * (v270 ^ 0xDE28B1E8)) & 0x2811B9C6))
        + 1344500620) ^ 0x5023738C;
  v273 = (((2 * (BYTE2(v255) ^ 0x14)) | 0x6E0DD696) - (BYTE2(v255) ^ 0x14) + 1224283317) ^ 0xB4272BE3;
  v274 = ((2 * (BYTE1(v261) ^ 0x80C110A)) & 0x10180254) - (BYTE1(v261) ^ 0x80C110A) - 981347115;
  v275 = (v274 ^ 0xCD8DC5D0)
       + (((v274 ^ 0x7F2E307C) + 1) ^ 0x75F6FD37)
       + ((2 * ((v274 ^ 0x7F2E307C) + 1)) & 0xE1E5FA6E)
       - 1979120951;
  v276 = *(_DWORD *)(v153 + 4 * (v262 ^ 0x97u));
  v277 = (4
        * ((v276 ^ 0xDE28B1E8) * (v276 ^ 0xDE28B1E8) - ((2 * (v276 ^ 0xDE28B1E8) * (v276 ^ 0xDE28B1E8)) & 0x236B90FE))
        + 1188504060) ^ 0x46D721FC;
  v278 = HIBYTE(v262);
  v279 = (HIBYTE(v262) ^ 7) + 1971590284 + ((2 * (HIBYTE(v262) ^ 7) + 28) & 0x1A ^ 0xFFF76BFF);
  v280 = v271 ^ (v272 - ((2 * v272) & 0x6EA4DFF0) + 928149497);
  v281 = (4
        * ((v266 ^ 0xDE28B1E8) * (v266 ^ 0xDE28B1E8) - ((2 * (v266 ^ 0xDE28B1E8) * (v266 ^ 0xDE28B1E8)) & 0x2FB1A472))
        - 547141404) ^ 0xDF6348E4;
  v282 = a88 ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v256) ^ 0x2E)) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v261) ^ 0xFu)) ^ v276 ^ (v277 - ((2 * v277) & 0xBE5BE4D0) + 1596846696) ^ *(_DWORD *)(v156 + 4 * ((((2 * v273) & 0x31A4544C) - v273 - 416426535) ^ 0xE40C156F)) ^ ((HIBYTE(v256) ^ 0x79) - 2006946289 + ((2 * (HIBYTE(v256) ^ 0x79) + 252) & 0x320 ^ 0xF7F7FBFF)) ^ (v275 - ((2 * v275) & 0x70B42816) - 1202056181);
  v283 = (((v255 >> 8) & 0x64 ^ 0xA2EE764) - ((v255 >> 8) & 0x64) + (BYTE1(v255) ^ 0x13)) ^ 0x232AE646;
  v284 = v267 ^ (v281 - ((2 * v281) & 0xFAF8C370) + 2105303481);
  v285 = ((v283 - ((2 * v283) & 0x20813DE) - 1817191953) ^ 0xBAABD87F)
       + ((((v283 - ((2 * v283) & 0x20813DE) - 1817191953) ^ 0x8082DD3) + 1) ^ 0xEF3F04FF)
       + ((2 * (((v283 - ((2 * v283) & 0x20813DE) - 1817191953) ^ 0x8082DD3) + 1)) & 0xDE7E09FE)
       + 281082625;
  v286 = *(_DWORD *)(v153 + 4 * (LODWORD(STACK[0x298]) ^ v261 ^ 0xCu));
  v287 = (4
        * ((v286 ^ 0xDE28B1E8) * (v286 ^ 0xDE28B1E8) - ((2 * (v286 ^ 0xDE28B1E8) * (v286 ^ 0xDE28B1E8)) & 0x2B6698C6))
        + 1456288140) ^ 0x56CD318C;
  v288 = a87 ^ *(_DWORD *)(v154 + 4 * (v278 ^ 0x50)) ^ *(_DWORD *)(v156 + 4 * (BYTE2(v256) ^ 0xA8u)) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v255) ^ 0xA1u)) ^ v286 ^ v279 ^ (v285 - ((2 * v285) & 0xABE4A3F6) - 705539589) ^ (v287 - ((2 * v287) & 0x71102F38) + 948443036);
  v289 = ((v282 >> 8) & 0xED ^ 0x82AF2936) - ((v282 >> 8) & 0x12);
  v290 = v289 & 0x6F ^ 0x8E280F | v289 & 0x190 | 0x1200;
  v291 = (v290 ^ 0x8E3B6B)
       + (((v290 ^ 0xB22DCEC7) + 1) ^ 0x27ED3FDE)
       + ((2 * ((v290 ^ 0xB22DCEC7) + 1)) & 0x4FDA7FBC)
       - 669859806;
  v292 = *(_DWORD *)(v153 + 4 * (v280 ^ 0xC7u));
  v293 = (v292 ^ 0xDE28B1E8) * (v292 ^ 0xDE28B1E8) - ((2 * (v292 ^ 0xDE28B1E8) * (v292 ^ 0xDE28B1E8)) & 0x369C6D28);
  v294 = a86 ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v284) ^ 0xB2)) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v282) ^ 0x52u)) ^ *(_DWORD *)(v156 + 4 * (BYTE2(v288) ^ 0x3Fu)) ^ v292 ^ ((HIBYTE(v284) ^ 0xE5) + 1236282422 + ((2 * (HIBYTE(v284) ^ 0xE5) + 252) & 0x36E ^ 0xF7DF7FFF));
  v295 = (BYTE1(v288) ^ 0x60042A81) + ((v288 >> 8) & 0x33 ^ 0x8F38532) - ((BYTE1(v288) ^ 0x60042A81) & 0x20002033);
  v296 = (v295 ^ 0x48F78F37) + (((v295 ^ 0xFA547A9B) + 1) ^ 0x7F5E6FCF) + ((2 * ((v295 ^ 0xFA547A9B) + 1)) & 0xFEBCDF9E);
  v297 = v294 ^ (v291 - ((2 * v291) & 0x383B5DBA) - 1675776291);
  v298 = *(_DWORD *)(v153 + 4 * (a63 ^ v282));
  v299 = (4
        * ((v298 ^ 0xDE28B1E8) * (v298 ^ 0xDE28B1E8) - ((2 * (v298 ^ 0xDE28B1E8) * (v298 ^ 0xDE28B1E8)) & 0x19210B82))
        - 1304291580) ^ 0xB2421704;
  v300 = a85 ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v280) ^ 0xF8)) ^ *(_DWORD *)(v156 + 4 * (BYTE2(v284) ^ 0x92u)) ^ v298 ^ *(_DWORD *)(v155 + 4 * (BYTE1(v288) ^ 0x85u)) ^ ((HIBYTE(v280) ^ 0xAF) - ((2 * (HIBYTE(v280) ^ 0xAF) + 136877308) & 0x808163A) - 1734284901) ^ (v296 - 2136895439 - ((2 * (v296 - 2136895439)) & 0x8DA53C96) + 1188208203);
  v301 = ((2 * (BYTE1(v284) ^ 0xDF15962B)) | 0x3B764910) - (BYTE1(v284) ^ 0xDF15962B) + 1648679800;
  v302 = (v301 ^ 0x42AEB2FB)
       + (((v301 ^ 0xF00D4757) + 1) ^ 0xF6DBB7FA)
       + ((2 * ((v301 ^ 0xF00D4757) + 1)) & 0xEDB76FF4)
       + 153372678;
  v303 = v302 - ((2 * v302) & 0x32F8D506);
  v304 = *(_DWORD *)(v153 + 4 * (STACK[0x2C0] ^ v288 ^ 0xC0));
  v305 = (v304 ^ 0xDE28B1E8) * (v304 ^ 0xDE28B1E8) - ((2 * (v304 ^ 0xDE28B1E8) * (v304 ^ 0xDE28B1E8)) & 0x1CFD5948);
  v306 = a84 ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v282) ^ 0xB2)) ^ *(_DWORD *)(v156
                                                                           + 4
                                                                           * ((-1138536461
                                                                             - (BYTE2(v280) ^ 0x19 | 0xBC234FF3)
                                                                             + (BYTE2(v280) ^ 0x19 | 0x43DCB00C)) ^ 0x43DCB0F4)) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v284) ^ 0x58u)) ^ v304 ^ ((HIBYTE(v282) ^ 0xE5) + 388151135 + ((2 * (HIBYTE(v282) ^ 0xE5) + 252) & 0x1C0 ^ 0xFFF76FFF));
  v307 = v297 ^ (((4 * v293 - 315041200) ^ 0xED38DA50)
               + 205251853
               - 2 * (((4 * v293 - 315041200) ^ 0xED38DA50) & 0xC3BE52C ^ (4 * v293 - 315041200) & 0x20));
  v308 = v306 ^ (v303 - 1719899517);
  v309 = HIBYTE(v288);
  v310 = (HIBYTE(v288) ^ 0x5D) + 868498426 + ((2 * (HIBYTE(v288) ^ 0x5D) + 252) & 0x2F6 ^ 0xF7F77FFF);
  v311 = (BYTE1(v280) ^ 0x11820096) - ((2 * (BYTE1(v280) ^ 0x11820096)) & 0x20400B0) - 1518868904;
  v312 = (v311 ^ 0xB4F5E6FA) + (((v311 ^ 0x6561356) + 1) ^ 0x7DDFFFFE) + ((2 * ((v311 ^ 0x6561356) + 1)) & 0xFBBFFFFC);
  v313 = v300 ^ (v299 - ((2 * v299) & 0x43751C88) - 1581609401);
  v314 = *(_DWORD *)(v153 + 4 * (a62 ^ v284));
  v315 = v312 - 2111832062 - ((2 * (v312 - 2111832062)) & 0x789C46D0);
  v316 = (4
        * ((v314 ^ 0xDE28B1E8) * (v314 ^ 0xDE28B1E8) - ((2 * (v314 ^ 0xDE28B1E8) * (v314 ^ 0xDE28B1E8)) & 0x9B9349A))
        + 326265140) ^ 0x13726934;
  v317 = a83 ^ *(_DWORD *)(v156 + 4 * (BYTE2(v282) ^ 0xF5u)) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v280) ^ 0x34u)) ^ v314 ^ *(_DWORD *)(v154 + 4 * (v309 ^ 0xA)) ^ v310 ^ (v315 - 1135729816) ^ (v316 - ((2 * v316) & 0x2C215E38) + 370192156);
  v318 = v308 ^ (((4 * v305 + 972731024) ^ 0x39FAB290)
               - 2 * (((4 * v305 + 972731024) ^ 0x39FAB290) & 0x7CBDF33C ^ (4 * v305 + 972731024) & 0xC)
               - 54660303);
  v319 = ((unsigned __int16)(v308 ^ (((4 * v305 - 19824) ^ 0xB290)
                                                    - 2
                                                    * (((4 * v305 - 19824) ^ 0xB290) & 0xF33C ^ (4 * v305 - 19824) & 0xC)
                                                    - 3279)) >> 8) ^ 0x3E;
  v320 = *(_DWORD *)(v153 + 4 * (v313 ^ 0xA1u));
  v321 = (v320 ^ 0xDE28B1E8) * (v320 ^ 0xDE28B1E8) - ((2 * (v320 ^ 0xDE28B1E8) * (v320 ^ 0xDE28B1E8)) & 0x230FA946);
  v322 = *(_DWORD *)(v154 + 4 * (HIBYTE(v307) ^ 0x77)) ^ LODWORD(STACK[0x2A4]) ^ *(_DWORD *)(v156
                                                                                             + 4
                                                                                             * (BYTE2(v317) ^ 0x45u)) ^ v320 ^ *(_DWORD *)(v155 + 4 * v319) ^ ((HIBYTE(v307) ^ 0x20) - 1015119207 + ((2 * HIBYTE(v307) + 60) & 0x34 ^ 0xF7FFEFFF));
  v323 = v319
       + (((BYTE1(v318) ^ 0xB2A3F592) + 1) ^ 0x657D9FFD)
       + ((2 * ((BYTE1(v318) ^ 0xB2A3F592) + 1)) & 0x40432FFA)
       - 1702731773;
  v324 = v322 ^ (v323 - ((2 * v323) & 0x7526B978) - 1164747588);
  v325 = ((4 * v321 - 971025780) ^ 0xC61F528C) - ((2 * ((4 * v321 - 971025780) ^ 0xC61F528C)) & 0x4AFD3B30);
  v326 = ((BYTE1(v317) ^ 0x3B31E702) - ((2 * (BYTE1(v317) ^ 0x3B31E702)) & 0x660283F6) + 1942573563) & 0x408087FF;
  v327 = (v326 ^ 0x40808621)
       + (((v326 ^ 0xF223738D) + 1) ^ 0xF779BFBB)
       + ((2 * ((v326 ^ 0xF223738D) + 1)) & 0xE4437F76)
       + 143016005;
  v328 = *(_DWORD *)(v153 + 4 * (a61 ^ v318));
  v329 = a82 ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v313) ^ 0xB6)) ^ *(_DWORD *)(v156 + 4 * (BYTE2(v307) ^ 0xB1u)) ^ *(_DWORD *)(v155 + 4 * (BYTE1(v317) ^ 0xD8u)) ^ v328 ^ ((HIBYTE(v313) ^ 0xE1) - 181693213 + ((2 * (HIBYTE(v313) ^ 0xE1) + 252) & 0xC8 ^ 0xFFD76BFF)) ^ (v327 - ((2 * v327) & 0xF8546718) - 64343156);
  v330 = ((HIBYTE(v318) ^ 0x5F) + 259173015 + ((2 * (HIBYTE(v318) ^ 0x5F) + 60) & 0x30 ^ 0xFFD77FFF)) ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v318) ^ 8));
  HIDWORD(v331) = v330 ^ 0x3DC24;
  LODWORD(v331) = v330 ^ 0x1BA00000;
  v332 = v324 ^ (v325 - 1518428775);
  v333 = (((v307 >> 8) & 1 ^ 0xB9C56401) - ((v307 >> 8) & 1) + (BYTE1(v307) ^ 0xE6)) ^ 0xB544348A;
  v334 = ((((2 * v333) | 0xEDBFD078) - v333 - 1994385468) ^ 0x7A5EB83C)
       + ((((((2 * v333) | 0xEDBFD078) - v333 - 1994385468) ^ 0xC8FD4D90) + 1) ^ 0x5FB7F6BC)
       + ((2 * (((((2 * v333) | 0xEDBFD078) - v333 - 1994385468) ^ 0xC8FD4D90) + 1)) & 0xBF6FED78)
       - 1605891772;
  v335 = (v328 ^ 0xDE28B1E8) * (v328 ^ 0xDE28B1E8) - ((2 * (v328 ^ 0xDE28B1E8) * (v328 ^ 0xDE28B1E8)) & 0x341B8C6);
  v336 = *(_DWORD *)(v153 + 4 * (a60 ^ v317));
  v337 = (4
        * ((v336 ^ 0xDE28B1E8) * (v336 ^ 0xDE28B1E8) - ((2 * (v336 ^ 0xDE28B1E8) * (v336 ^ 0xDE28B1E8)) & 0x3CD67060))
        - 106110784) ^ 0xF9ACE0C0;
  v338 = ((v331 >> 18) - ((2 * (v331 >> 18)) & 0xE5043C7E) + 1921130047) ^ LODWORD(STACK[0x260]);
  HIDWORD(v331) = v338 ^ 0x5E9;
  LODWORD(v331) = v338 ^ 0xF10DC000;
  v339 = *(_DWORD *)(v155 + 4 * (BYTE1(v307) ^ 0x6Du)) ^ *(_DWORD *)(v156 + 4 * (BYTE2(v313) ^ 0xF2u)) ^ v336 ^ (v334 - ((2 * v334) & 0xA430CC14) - 770152950) ^ (v337 - ((2 * v337) & 0x2DDDDC28) + 384757269);
  v340 = BYTE1(v313);
  v341 = *(_DWORD *)(v155 + 4 * (v340 ^ 0x2Bu));
  v342 = (-510577775 - (v340 ^ 0x92 | 0xE1913391) + (v340 ^ 0x92 | 0x1E6ECC6E)) ^ 0x1AEE5EE6;
  v343 = ((((2 * v342) & 0xAB38D60) - v342 - 1163511473) ^ 0xBE26AB7E)
       + ((((((2 * v342) & 0xAB38D60) - v342 - 1163511473) ^ 0xC855ED2) + 1) ^ 0x7F73DDEB)
       + ((2 * (((((2 * v342) & 0xAB38D60) - v342 - 1163511473) ^ 0xC855ED2) + 1)) & 0xFEE7BBD6)
       - 2138299883;
  v344 = *(_DWORD *)(v153 + 4 * (a59 ^ v307));
  v345 = (4
        * ((v344 ^ 0xDE28B1E8) * (v344 ^ 0xDE28B1E8) - ((2 * (v344 ^ 0xDE28B1E8) * (v344 ^ 0xDE28B1E8)) & 0x10B30DAC))
        - 1587143848) ^ 0xA1661B58;
  v346 = a81 ^ *(_DWORD *)(v154 + 4 * (HIBYTE(v317) ^ 0xBC)) ^ v341 ^ v344 ^ *(_DWORD *)(v156
                                                                                         + 4 * (BYTE2(v318) ^ 0x8Bu));
  v347 = v329 ^ (((4 * v335 + 109277580) ^ 0x683718C)
               + 1173707329
               - 2 * (((4 * v335 + 109277580) ^ 0x683718C) & 0x45F55A50 ^ (4 * v335 + 109277580) & 0x10));
  v348 = v346 ^ ((HIBYTE(v317) ^ 0xEB) + 2088243770 + ((2 * (HIBYTE(v317) ^ 0xEB) + 252) & 0x77777777 ^ 0xFFFF7BFF)) ^ (v343 - ((2 * v343) & 0xF42F13A) + 128022685);
  v349 = v339 ^ ((v331 >> 14) - ((2 * (v331 >> 14)) & 0x353B5376) + 446540219);
  v350 = v348 ^ (v345 - ((2 * v345) & 0x918C9818) + 1220955151);
  v351 = (char *)*(&off_10112C750 + a57) - 1201208326;
  v352 = *(_DWORD *)&v351[4 * (BYTE2(v332) ^ 0x83)];
  v353 = v352 - ((2 * v352 + 1221828048) & 0x495974AE);
  v354 = BYTE1(v350);
  v355 = (((v349 >> 8) & 0xD8 ^ 0xBF3C6D41) + ((v349 >> 8) & 0x27) - 1) ^ 0xF630ADFE;
  v356 = ((2 * v355) & 0x920880DE) - v355;
  v357 = ((BYTE1(v350) ^ 0x8A) - ((2 * (BYTE1(v350) ^ 0x8A)) & 0x4C) + 876577830) ^ 0x3C3FCE26;
  v358 = ((2 * v357) | 0xFEA5DBC2) - v357;
  v359 = (char *)*(&off_10112C750 + a58) - 227939423;
  LODWORD(STACK[0x2DC]) = *(_DWORD *)&v359[4 * (HIBYTE(v332) ^ 0x11)];
  v360 = *(_DWORD *)&v359[4 * (HIBYTE(v347) ^ 0xBC)];
  v361 = *(_DWORD *)&v359[4 * (HIBYTE(v349) ^ 0x8E)];
  v362 = *(_DWORD *)&v359[4 * (HIBYTE(v350) ^ 0x12)];
  v363 = *(_DWORD *)&v351[4 * (BYTE2(v350) ^ 0xBF)];
  v364 = (((2 * (BYTE1(v332) ^ 0xDE6225)) & 0x84C5A2) - (BYTE1(v332) ^ 0xDE6225) + 1016957230) ^ 0x387B41E2;
  v365 = *(_DWORD *)&v351[4 * (BYTE2(v347) ^ 0xC6)];
  v366 = -407371980 - (v364 | 0xE7B7FF34) + (v364 | 0x184800CB);
  v367 = *(_DWORD *)&v351[4 * (BYTE2(v349) ^ 0x27)];
  v368 = (char *)*(&off_10112C750 + a55) - 933438927;
  LODWORD(STACK[0x2E0]) = *(_DWORD *)&v368[4 * (a80 ^ v347)];
  v369 = *(_DWORD *)&v368[4 * (a54 ^ v350)];
  v370 = *(_DWORD *)&v368[4 * (v349 ^ 0xB7)];
  v371 = *(_DWORD *)&v368[4 * (v332 ^ 0xE9)];
  LODWORD(v368) = v353 + 152471871;
  LODWORD(v351) = 58109173
                - (((v353 + 152471871) >> 1) & 0x54922182 ^ 0x10900002 | 0x376ACF5)
                + (((v353 + 152471871) >> 1) & 0x54922182 ^ 0x10900002 | 0xFC89530A);
  v372 = (((2 * (BYTE1(v347) ^ 0x78)) | 0xB2ABFBE0) - (BYTE1(v347) ^ 0x78) - 1498807792) ^ 0x1A44EC90;
  v373 = (char *)*(&off_10112C750 + a56) - 189834998;
  v374 = STACK[0x2E8];
  v375 = LODWORD(STACK[0x2E4]) ^ LODWORD(STACK[0x25C]) ^ v360 ^ v370 ^ *(_DWORD *)&v373[4
                                                                                      * ((v358 - 2136141281) ^ 0x7752A7F6)] ^ v368;
  v376 = *(_DWORD *)&v373[4 * ((v356 - 1233611888) ^ 0xFF74538F)];
  v377 = *(_DWORD *)&v373[4 * (v366 ^ 0x1C70AADC)];
  v378 = *(_DWORD *)&v373[4 * ((((2 * v372) | 0x6955C1D6) - v372 - 883613931) ^ 0x77BBF1EE)];
  LODWORD(v368) = ((2 * (2 * v374 + 4)) & 8)
                + ((2 * v374 + 4) & 0xC ^ 0xF7BDF7CF)
                + 138545209
                + ((((v374 - 1886421162) ^ 6)
                  + 1665753523
                  - 2 * (((v374 - 1886421162) ^ 6) & 0x634961BA ^ (v374 - 1886421162) & 8)) ^ 0x634961B3);
  v379 = v375 ^ ((v351 ^ 0x99F2C029) - 1);
  v380 = v379 ^ v354;
  v381 = (v368 ^ 0x7FF0B7DF) - 1127219392 + ((2 * (_DWORD)v368) & 0xFFE16FBE);
  v382 = (char *)*(&off_10112C750 + a53) - 480467054;
  *(_BYTE *)((v381 | ((unint64_t)(v381 < 0x3CC0B71F) << 32)) + STACK[0x388] - 1019262751) = v382[(((2 * (((unsigned __int16)(v379 ^ v354 ^ 0x6168) >> 8) ^ 0x404A43F)) | 0x75B17D48) - (((unsigned __int16)(v379 ^ v354 ^ 0x6168) >> 8) ^ 0x404A43Fu) + 1160200540) ^ 0xBEDC1A47] ^ 0x19;
  LODWORD(v381) = (BYTE1(v347) ^ 0xF0) - ((v347 >> 7) & 0x14);
  v383 = v367 - 2 * ((v367 + 74043112) & 0x51C456E ^ v367 & 4) + 1770394706;
  v384 = (((v383 >> 1) & 0x54922182 ^ 0x725C2FB)
        - ((2 * ((v383 >> 1) & 0x54922182 ^ 0x725C2FB)) & 0x2547C130)
        - 1830554468) ^ 0xD0451EC6;
  v385 = a77 ^ LODWORD(STACK[0x28C]) ^ LODWORD(STACK[0x30C]) ^ v362 ^ v371 ^ v383 ^ v378 ^ (((v381 - 49003510) & 0x58000539 ^ 0xC80521)
                                                                                          + ((v381 - 49003510) ^ 0x591698DA)
                                                                                          - (((v381 - 49003510) ^ 0x591698DA) & 0xA002D539)) ^ (1959962511 - (v384 | 0x74D2A78F) + (v384 | 0x8B2D5870));
  v386 = (char *)*(&off_10112C750 + a52) - 1335599030;
  *(_BYTE *)(STACK[0x300] - 919096416) = v386[((BYTE2(v385) ^ 0xCC) - ((2 * (BYTE2(v385) ^ 0xCC)) & 0x188u) + 1220) ^ 0x415] ^ 0x58;
  v387 = (BYTE1(v385) ^ 0x93) - 2 * ((BYTE1(v385) ^ 0x93) & 0x3F) - 407875521;
  *(_BYTE *)(STACK[0x2F0] - 871029650) = v382[((v387 & 0x8500152A ^ 0x10002402)
                                             + (v387 ^ 0xAFF5D16D)
                                             - ((v387 ^ 0xAFF5D16D) & a51)) ^ 0x9D45B403] ^ 1;
  v388 = v365 - ((2 * v365 + 13868496) & 0x2D47F6A) - 439087459;
  v389 = STACK[0x2D0];
  LODWORD(v359) = ((v332 >> 8) & 0xA5 ^ 0x18F3A0) + ((v332 >> 8) & 0x5A ^ 0x19);
  v390 = STACK[0x388];
  LODWORD(v381) = (713780518
                 - ((v388 >> 1) & 0x54922182 ^ 0x922100 | 0x2A8B6D26)
                 + ((v388 >> 1) & 0x54922182 ^ 0x922100 | 0xD57492D9)) ^ 0x7B2AECE3;
  v391 = a78 ^ LODWORD(STACK[0x318]) ^ v361 ^ v377 ^ v369 ^ v388 ^ (((2 * v381) & 0xD6EFD1E8) - v381 - 1803020533);
  v392 = v391 ^ ((_DWORD)v359 - 1) & 0x1097FF;
  v393 = (BYTE1(v392) ^ 0x8D | 0x9F841329) - (BYTE1(v392) ^ 0x8D | 0x607BECD6) + 1618734294;
  *(_BYTE *)(STACK[0x2F8] - 2073581996) = v382[((v393 & 0x150412B7 ^ 0x41204A86) + (v393 & 0x8A800548 ^ 0x8A828541) - 1) ^ 0x5426DC22] ^ 0xBD;
  LOWORD(v393) = (v380 & 1 ^ 0x6D01) - (v380 & 1) + (v380 ^ 0xAC);
  v394 = (char *)*(&off_10112C750 + a50) - 1735726310;
  LOBYTE(v393) = v394[((v393 & 0x402 ^ 0x14424803) + (v393 & 0x3FD) - 1) ^ 0x14424DC3];
  *(_BYTE *)(STACK[0x338] - 1775408887) = (v393 - ((2 * v393 - 2) & 0xDA) + 108) ^ 0xA3;
  v395 = (char *)*(&off_10112C750 + a49) - 1589649075;
  v396 = v395[HIBYTE(v379) ^ 0xELL];
  HIDWORD(v331) = v396 ^ 0x1F;
  LODWORD(v331) = ~v396 << 24;
  LOBYTE(v396) = (v331 >> 30) - 2 * ((v331 >> 30) & 3) + 3;
  *(_BYTE *)(STACK[0x328] - 1591886417) = v396 ^ ((v396 & 0xF0) >> 4) ^ 0xF0;
  v397 = v395[HIBYTE(v385) ^ 0xC2];
  v398 = v363 - ((2 * v363 + 1221828048) & 0x5B6CF2E4);
  HIDWORD(v331) = v397 ^ 0x1F;
  LODWORD(v331) = ~v397 << 24;
  v399 = (v331 >> 30) - ((2 * (v331 >> 30)) & 0x2E);
  *(_BYTE *)(((v374 + 211574709) | ((unint64_t)((v374 + 211574709) < 0x7D0CE053) << 32))
           + v390
           - 2097995859) = (v399 + 23) ^ (((v399 + 23) & 0xF0) >> 4) ^ 0x95;
  v400 = (BYTE1(v349) ^ 0xEB) - ((2 * (BYTE1(v349) ^ 0xEB)) & 0x1C) + 2095998990;
  v401 = a79 ^ LODWORD(STACK[0x290]) ^ LODWORD(STACK[0x324]) ^ LODWORD(STACK[0x2DC]) ^ LODWORD(STACK[0x2E0]) ^ (v398 + 304105562) ^ (((2 * (((v398 + 304105562) >> 1) & 0x54922182 ^ 0x10020180)) | 0x4DD1E7AC) - (((v398 + 304105562) >> 1) & 0x54922182 ^ 0x10020180) + 1494682666) ^ ((v400 & 0x608E0251 ^ 0x80018240) + (v400 ^ 0x6DAE6917) - ((v400 ^ 0x6DAE6917) & 0x1400251)) ^ v376;
  *(_BYTE *)(((v374 - 251585970) | ((unint64_t)((v374 - 251585970) < 0x61719AF3) << 32))
           + v390
           - 1634835187) = v386[(((2 * (((v380 ^ 0xAE9C6168) >> 16) ^ 0xF5)) & 0xA8)
                               - (((v380 ^ 0xAE9C6168) >> 16) ^ 0xF5u)
                               + 16555) ^ 0x40F3] ^ 0x80;
  v402 = ((v401 ^ 0xC7170493)
        + (v401 & 0x24 ^ 0x28C0E224)
        - ((v401 ^ 0xC7170493) & 0x47060424)) ^ 0x9AB324D6;
  *(_BYTE *)(STACK[0x310] - 1866359052) = (v394[(v402 - ((2 * v402) & 0x44848254) + 727597354) ^ 0x193C8788] - 1) ^ 0x66;
  v403 = v395[HIBYTE(v401) ^ 0x82];
  HIDWORD(v331) = v403 ^ 0x1F;
  LODWORD(v331) = ~v403 << 24;
  LOBYTE(v403) = (v331 >> 30) - ((2 * (v331 >> 30)) & 0x5E) + 47;
  *(_BYTE *)(STACK[0x360] - 1886421162) = v403 ^ ((v403 & 0xF0) >> 4) ^ 0xBE;
  v404 = (BYTE1(v401) ^ 0xE6 | 0xCD195ECB) - (BYTE1(v401) ^ 0xE6 | 0x32E6A134) + 853975348;
  *(_BYTE *)(((v374 - 747148155) | ((unint64_t)((v374 - 747148155) < 0x43E7ED2D) << 32))
           + v390
           - 1139273005) = v382[((v404 & 0x4C000550 ^ 0x40440) + (v404 ^ 0xEFF8B136) - ((v404 ^ 0xEFF8B136) & 0x4E24A550)) ^ 0x6CC54AA3] ^ 0x26;
  v405 = (HIWORD(v401) & 5 ^ 0x8BF58305) - (HIWORD(v401) & 5) + (BYTE2(v401) ^ 0xCA);
  *(_BYTE *)(STACK[0x358] - 721743849) = v386[((v405 & 0x190013B ^ 0x1002101A)
                                             + (v405 ^ 0xBF10725)
                                             - ((v405 ^ 0xBF10725) & a48)) ^ 0x11969529] ^ 0x99;
  *(_BYTE *)(STACK[0x368] - 882528558) = v386[((BYTE2(v392) ^ 0xD7)
                                             + (HIWORD(v392) & 0x76 ^ 0x1720)
                                             - ((BYTE2(v392) ^ 0xD7) & 0x76)) ^ 0x172DLL] ^ 0x3C;
  v406 = ((2 * (v385 ^ 0x87)) & 0xFFFFFFFB) - (v385 ^ 0x87) + 1318947586;
  LOBYTE(v406) = v394[((v406 & 0xC890F93 ^ 0x1606491) + (v406 ^ 0xFE9B1B42) - ((v406 ^ 0xFE9B1B42) & 0xB0068F93)) ^ 0xDE97FA2];
  *(_BYTE *)(STACK[0x350] - 634173151) = v406 - ((2 * v406 - 2) & 0x87) - 62;
  LOBYTE(v406) = v394[(((2 * ((v391 ^ ((_BYTE)v359 - 1)) ^ 0x3A049AD)) & 0x44010A2)
                     - ((v391 ^ ((_BYTE)v359 - 1)) ^ 0x3A049ADu)
                     - 1714424402) ^ 0x9A6FBCFELL];
  *(_BYTE *)(STACK[0x370] - 757236878) = (v406 - ((2 * v406 + 62) & 0x2A) - 108) ^ 0xAF;
  v407 = v395[HIBYTE(v391) ^ 0xC6];
  HIDWORD(v331) = v407 ^ 0x1F;
  LODWORD(v331) = ~v407 << 24;
  v408 = (v331 >> 30) - ((2 * (v331 >> 30)) & 0xFFFFFF9F);
  *(_BYTE *)(((v374 + 149034616) | ((unint64_t)((v374 + 149034616) < 0x7952971A) << 32))
           + v390
           - 2035455770) = (v408 - 49) ^ (((v408 - 49) & 0xF0) >> 4) ^ 0xB2;
  v409 = (v374 + 787476522) < LODWORD(STACK[0x380]);
  if (LODWORD(STACK[0x37C]) != (v374 + 787476522) < 0x9F6070C4)
    v409 = STACK[0x37C];
  return (*(uint64_t (**)(void))(v389 + 8 * ((54318 * v409) ^ LODWORD(STACK[0x384]))))();
}

uint64_t sub_1000588B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,uint64_t a46,int a47)
{
  uint64_t v47;
  int v48;

  v48 = a47 - ((a45 + 99334612) & 0x85C1F46) + LODWORD(STACK[0x2CC]) - 945573832;
  return ((uint64_t (*)(void))(*(_QWORD *)(v47
                                        + 8
                                        * ((42
                                          * (((2 * v48) & 0xDFF5BFDA ^ 0x8541F42) + (v48 ^ 0xEBD4D04E) + 1932867328 == 1664095981)) | LODWORD(STACK[0x2CC])))
                            - 8))();
}

uint64_t sub_10005898C(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((102
                                          * ((((v1 ^ 0x1C) - 8) ^ (a1
                                                                                  + v2
                                                                                  + ((829 * (v1 ^ 0x761C)) ^ 0x10054ACEu) < 8)) & 1)) ^ v1))
                            - 12))();
}

uint64_t sub_100058A2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5
                                                               + 8
                                                               * ((((a3 + 6918) ^ 0x6237)
                                                                 * ((a5 + 268771330) < 0xFFFFFFF0)) ^ a3))
                                                   - (a3 ^ 0x2DC4u)
                                                   + 27349))(a1, 268771346);
}

uint64_t sub_100058A7C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v20;
  int v22;
  int v24;

  v9 = (a1 + v6 + a2);
  v10 = v9 + v8 + 1;
  v11 = ((_BYTE)a1 + (_BYTE)v6 + (_BYTE)a2) & 0xF;
  v12 = v4 + v11 - v9;
  v13 = v11 + (a3 ^ 0x8C2u) - 13063 + v4 - 14293;
  v14 = v11 + v3 - v9 + 5;
  v15 = v11 + v3 + 6;
  v16 = v11 + v5;
  v17 = v16 - v9 + 1;
  v18 = v16 + 2;
  v20 = v15 > v8 && v14 < v10;
  v22 = v12 < v10 && v13 > v8 || v20;
  if (v18 <= v8 || v17 >= v10)
    v24 = v22;
  else
    v24 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((39 * v24) ^ a3)) - 4))();
}

uint64_t sub_100058B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, _QWORD);

  v10 = (uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * (a7 ^ (v7 > 0xF)))
                                                         - (a7 ^ 0x9E6u)
                                                         - 3243 * (a7 ^ 0x37D4u)
                                                         + 22398);
  LODWORD(STACK[0x384]) = v8;
  LODWORD(STACK[0x380]) = v7;
  return v10(a1, a2, 0);
}

uint64_t sub_100058B60(uint64_t a1, uint64_t a2, __n128 a3, uint64_t a4, int a5)
{
  char v5;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;

  v6.n128_u64[0] = v5 & 0xF;
  v6.n128_u64[1] = (v5 - 1) & 0xF;
  v7.n128_u64[0] = (v5 + 14) & 0xF;
  v7.n128_u64[1] = (v5 + 13) & 0xF;
  v8.n128_u64[0] = (v5 + 12) & 0xF;
  v8.n128_u64[1] = (v5 + 11) & 0xF;
  v9.n128_u64[0] = (v5 + 10) & 0xF;
  v9.n128_u64[1] = (v5 + 9) & 0xF;
  v10.n128_u64[0] = (v5 + 8) & 0xF;
  v10.n128_u64[1] = (v5 + 7) & 0xF;
  v11.n128_u64[0] = (v5 + 6) & 0xF;
  v11.n128_u64[1] = (v5 + 5) & 0xF;
  v12.n128_u64[0] = (v5 + 4) & 0xF;
  v12.n128_u64[1] = (v5 + 3) & 0xF;
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(STACK[0x2D0] + 8 * a5))(a1, a2, a3, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_100058C64@<X0>(int a1@<W3>, uint64_t a2@<X4>, int a3@<W7>, int a4@<W8>, __n128 a5@<Q1>, __n128 a6@<Q4>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16_t v20;
  uint64_t v21;
  int8x16_t v23;
  int8x16_t v24;
  int8x16_t v25;

  v21 = ((_BYTE)v17 + (_BYTE)a4) & 0xF;
  v23.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a5 - 1), v18).u64[0];
  v23.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a6.n128_u64, v18).u64[0];
  v24 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a2 + (v17 + a4)), *(int8x16_t *)(v14 + v21 - 15)), veorq_s8(*(int8x16_t *)(v21 + v13 - 10), *(int8x16_t *)(v21 + v15 - 14))));
  v25 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v24, v24, 8uLL), v20), vmulq_s8(v23, v19)));
  *(int8x16_t *)(a2 + (v17 + a4)) = vextq_s8(v25, v25, 8uLL);
  return (*(uint64_t (**)(void))(v12 + 8 * (((a3 == 0) * v16) ^ a1)))();
}

uint64_t sub_100058CE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6 + 8 * ((((a6 ^ 0x1691) - 27118) * (LODWORD(STACK[0x380]) != a3)) ^ a6)))();
}

uint64_t sub_100058D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  uint64_t v4;
  int v5;
  char v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                                + 8
                                                                                * ((28903
                                                                                  * ((v6 & 8) == (a4 ^ 0x54ED) - 15920)) ^ (a4 - 13063)))
                                                                    - 8))(a1, a2, a3, (v5 - a3));
}

uint64_t sub_100058D68(int a1, int a2, int a3, double a4, __n128 a5, __n128 a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD, _QWORD, _QWORD, _QWORD, __n128, __n128, __n128);

  v13 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, __n128, __n128, __n128))(*(_QWORD *)(v12 + 8 * a8)
                                                                                       - 8);
  LODWORD(STACK[0x37C]) = v9 & 0xFFFFFFF8;
  a5.n128_u16[0] = 31097;
  a5.n128_u8[2] = 121;
  a5.n128_u8[3] = 121;
  a5.n128_u8[4] = 121;
  a5.n128_u8[5] = 121;
  a5.n128_u8[6] = 121;
  a5.n128_u8[7] = 121;
  a6.n128_u16[0] = 2056;
  a6.n128_u8[2] = 8;
  a6.n128_u8[3] = 8;
  a6.n128_u8[4] = 8;
  a6.n128_u8[5] = 8;
  a6.n128_u8[6] = 8;
  a6.n128_u8[7] = 8;
  return v13((v10 + a1 + v11 + 12), (a1 + v11 + a2), (-8 - a3), v8 - (v9 & 0xFFFFFFF8), (__n128)xmmword_100DF7490, a5, a6);
}

uint64_t sub_100058DC8(char a1, int a2, int a3, int8x16_t a4, int8x8_t a5, int8x8_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, int a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  int v16;
  char v17;
  char v18;
  char v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  int8x16x4_t v24;

  v20 = v14 + a3 + 8;
  v21 = (a2 + a3 + 8);
  v24.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a3 + 8) & 0xF;
  v24.val[0].i64[1] = (v20 + v16) & 0xF;
  v22 = STACK[0x2D0];
  v24.val[1].i64[0] = v20 & 0xF;
  v24.val[1].i64[1] = (v19 + (_BYTE)a3 + 8) & 0xF;
  v24.val[2].i64[0] = (v18 + (_BYTE)a3 + 8) & 0xF;
  v24.val[2].i64[1] = (v17 + (_BYTE)a3 + 8) & 0xF;
  v24.val[3].i64[0] = (a1 + (_BYTE)a3 + 8) & 0xF;
  v24.val[3].i64[1] = (v15 + (_BYTE)a3 + 8) & 0xF;
  *(int8x8_t *)(a10 + v21) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a10 + v21), *(int8x8_t *)(v12 + (v21 & 0xF) - 7)), veor_s8(*(int8x8_t *)((v21 & 0xF) + v11 - 2), *(int8x8_t *)((v21 & 0xF) + v13 - 6)))), a6), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v24, a4), a5)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v22 + 8 * ((18357 * (a11 == a3)) ^ a8)) - 8))();
}

uint64_t sub_100058EBC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ (10063 * (LODWORD(STACK[0x380]) == LODWORD(STACK[0x37C])))))
                            - ((v0 + 9132) ^ 0x6AD5)))();
}

uint64_t sub_100058F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a6 - 3555)) - 12))();
}

uint64_t sub_100058F20@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = (a1 + v6);
  *(_BYTE *)(v10 + v11) ^= *(_BYTE *)(v4 + (v11 & 0xF)) ^ *(_BYTE *)((v11 & 0xF) + v3 + 5) ^ *(_BYTE *)((v11 & 0xF) + v5 + 1) ^ ((v11 & 0xF) * v7) ^ 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((a1 - 1 == v2) * v8) ^ a2)) - 12))();
}

void sub_100058F7C()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 602200999)
    v1 = 2134650450;
  else
    v1 = 2134608426;
  *(_DWORD *)(v2 + 8) = v1;
}

void sub_100058FE0(uint64_t a1)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v2 = (*(_QWORD *)(a1 + 32) ^ 0x5FE77F7FFBFF5FE7)
     - 0x5FE77F7FA231DE82
     + ((2 * *(_QWORD *)(a1 + 32)) & 0xBFCEFEFFF7FEBFCELL);
  v3 = (*(_QWORD *)(a1 + 24) ^ 0xAF7BBFBE97BE55F7)
     + 0x50844041C20F2B6ELL
     + ((2 * *(_QWORD *)(a1 + 24)) & 0x5EF77F7D2F7CABEELL);
  v4 = v2 < 0x59CD8165;
  v5 = v2 > v3;
  if (v4 != v3 < 0x59CD8165)
    v5 = v4;
  v1 = *(_DWORD *)(a1 + 16)
     - 1699881553
     * (((a1 ^ 0x897825B7 | 0xD3A8D9F8) - (a1 ^ 0x897825B7) + ((a1 ^ 0x897825B7) & 0x2C572607)) ^ 0xFAFB64FB);
  __asm { BR              X8 }
}

uint64_t sub_1000591FC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((v2 & 0x9DDEA6FE ^ 0x15C48006)
                                           + (v1 ^ 0xC51D3B7C)
                                           + ((v0 - 3569) ^ 0xDCE74004) != -1411990379)
                                          * (((v0 - 3569) | 0xC0) - 10642)) | (v0 - 3817)))
                            - 4))();
}

uint64_t sub_10005927C@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  v10 = v6 < a1;
  v11 = (v7 - 2111506382);
  *(_BYTE *)(v8 + v11) = *(_BYTE *)(v3 + (v11 & 0xF)) ^ *(_BYTE *)(v1 + v11) ^ *(_BYTE *)((v11 & 0xF) + v4 + 4) ^ *(_BYTE *)((v11 & 0xF) + v2 + 1) ^ (99 * (v11 & 0xF));
  if (v10 == v7 + 771470536 < a1)
    v10 = v7 + 771470536 < v6;
  return ((uint64_t (*)(BOOL))(*(_QWORD *)(v9 + 8 * (v5 | (v10 << 6))) - 4))(v7 + 771470536 < v6);
}

uint64_t sub_100059324()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((510
                                * (((((v0 - 1084783888) & 0x40A86FDE) - 719923672) & v2 ^ 0x1504D002)
                                 + ((((v0 - 4800) | 0x110C) - 512171345) ^ v1)
                                 + 2013248072 == 1653291589)) ^ (v0 + 8188))))();
}

uint64_t sub_1000593B4@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((23 * (a1 + v2 + 359956483 >= ((149 * (a2 ^ 0x357A)) ^ 0x1ED1u))) ^ a2)))();
}

uint64_t sub_100059408(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((v5 + a5 - 16 < ((a3 - 1395711708) & 0x5330DEE7 ^ 0xFFFFE115)) * (a3 - 7837)) ^ a3))
                            - 4))();
}

uint64_t sub_100059460@<X0>(int a1@<W0>, unsigned int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v16;
  unint64_t v17;
  int v19;

  v10 = (a1 + v6 + v7) + v8;
  v11 = ((_BYTE)a1 + (_BYTE)v6 + (_BYTE)v7) & 0xF;
  v12 = v11 + v4 - v10;
  v13 = (v11 | v5) - v10;
  v14 = (v11 | v3) - v10;
  v16 = (unint64_t)(v2 - v8) > 0xF
     && v12 > 0xF
     && v13 + (unint64_t)(a2 + 2604) - 10509 >= (unint64_t)((a2 + 5917) | 0x101) - 14067;
  v17 = v14 + 1;
  v19 = v16 && v17 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((29553 * v19) ^ a2)) - 4))();
}

uint64_t sub_1000594EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;
  int v7;

  v7 = v5 < (((a5 - 4095) | 0x6045) ^ 0x7947u);
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6 + 8 * ((v7 | (v7 << 6)) ^ a5))
                                                           - ((a5 + 915163886) & 0xC973ECAA)
                                                           + 24738))(a1, a2, 0);
}

uint64_t sub_100059544@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W8>, __n128 a4@<Q0>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  __n128 v47;
  __n128 v48;
  __n128 v49;
  __n128 v50;

  STACK[0x208] = (a2 + 8) & 0xF;
  STACK[0x200] = (a2 + 7) & 0xF;
  v47.n128_u64[0] = STACK[0x208];
  v47.n128_u64[1] = STACK[0x200];
  v48.n128_u64[0] = (((85 * (a3 ^ 0xC)) ^ 1) + a2) & 0xF;
  v48.n128_u64[1] = (a2 + 5) & 0xF;
  v49.n128_u64[0] = (a2 + 4) & 0xF;
  v49.n128_u64[1] = (a2 + 3) & 0xF;
  v50.n128_u64[0] = 0x6363636363636363;
  v50.n128_u64[1] = 0x6363636363636363;
  return ((uint64_t (*)(uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(a47 + 8 * a3)
                                                                                          - 4))(a1, a4, v47, v48, v49, (__n128)xmmword_100DF7480, v50);
}

uint64_t sub_100059678@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, uint64_t a4@<X5>, int a5@<W7>, int a6@<W8>, __n128 a7@<Q1>, int8x16_t a8@<Q4>, int8x16_t a9@<Q5>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v22;
  uint64_t v23;
  int8x16_t v25;
  int8x16_t v26;

  v22 = (a5 - a2);
  v23 = ((_BYTE)a5 - (_BYTE)a2) & 0xF;
  v25.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a7 - 1), a8).u64[0];
  v25.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v18, a8).u64[0];
  v26 = vrev64q_s8(vmulq_s8(v25, a9));
  *(int8x16_t *)(v15 + v22) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v13 + (v22 & 0xF) - 15), *(int8x16_t *)(a4 + v22)), veorq_s8(*(int8x16_t *)((v22 & 0xF) + v14 - 11), *(int8x16_t *)((v22 & 0xF) + v12 - 14))), vextq_s8(v26, v26, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(v17
                                        + 8 * (((32 * (a6 + a2 + v16 != a1)) | ((a6 + a2 + v16 != a1) << 6)) ^ a3))
                            - 4))();
}

uint64_t sub_1000596F8@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  uint64_t v65;

  return ((uint64_t (*)(void))(*(_QWORD *)(v65
                                        + 8 * (int)((((a2 + 1736480229) & 0x987F6BD2 ^ 0x2DC2) * (a65 != a1)) ^ a2))
                            - (((a2 - 7882) | 0x2000u) ^ 0x2954)))();
}

uint64_t sub_100059754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8
                                                                                + 8
                                                                                * ((46304
                                                                                  * ((((a7 ^ 0x49FA) - 24738) & v7) == 0)) ^ a7))
                                                                    - 8))(a1, a2, a3, (a2 - a3));
}

uint64_t sub_100059790(int a1, uint64_t a2, int a3, double a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  STACK[0x208] = v10 - 7;
  STACK[0x200] = v14 - 7;
  a5.n128_u16[0] = 25443;
  a5.n128_u8[2] = 99;
  a5.n128_u8[3] = 99;
  a5.n128_u8[4] = 99;
  a5.n128_u8[5] = 99;
  a5.n128_u8[6] = 99;
  a5.n128_u8[7] = 99;
  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, __n128, __n128))(*(_QWORD *)(v15 + 8 * a10) - 12))((v12 + a1 + v13 + 5), a2, -a3, a2 - ((a10 - 24754) & v11), (__n128)xmmword_100DF7490, a5);
}

uint64_t sub_100059818(int a1, int8x16_t a2, int8x8_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a70;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  int v80;
  uint64_t v81;
  int8x16x4_t v83;

  v81 = (a5 + v80);
  v83.val[0].i64[0] = ((_BYTE)a5 + (_BYTE)v80) & 0xF;
  v83.val[0].i64[1] = ((_BYTE)a5 + v79) & 0xF;
  v83.val[1].i64[0] = ((_BYTE)a5 + v78) & 0xF;
  v83.val[1].i64[1] = ((_BYTE)a5 + v77 + v75) & 0xF;
  v83.val[2].i64[0] = ((_BYTE)a5 + v76) & 0xF;
  v83.val[2].i64[1] = ((_BYTE)a5 + (_BYTE)a1) & 0xF;
  v83.val[3].i64[0] = ((_BYTE)a5 + v74) & 0xF;
  v83.val[3].i64[1] = ((_BYTE)a5 + v73) & 0xF;
  *(int8x8_t *)(STACK[0x200] + v81) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v71 + (v81 & 0xF) - 7), *(int8x8_t *)(STACK[0x208] + v81)), veor_s8(*(int8x8_t *)((v81 & 0xF) + v72 - 3), *(int8x8_t *)((v81 & 0xF) + v70 - 6))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v83, a2), a3)));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a53 + 8 * ((221 * (a5 != a10)) ^ a70)) - 12))((a1 - 8));
}

uint64_t sub_100059918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a70;
  int a72;
  int v72;

  return ((uint64_t (*)(void))(*(_QWORD *)(a51 + 8
                                              * ((((v72 - 1058268394) & 0x3F13EFD6 ^ 0x1F2D) * (a72 == a70)) ^ v72))
                            - ((v72 + 6174) ^ 0x3707)))();
}

uint64_t sub_100059978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6 + 8 * (a6 + 10534)) - 12))(99);
}

uint64_t sub_1000599B0@<X0>(char a1@<W0>, int a2@<W3>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v14 = (a2 + a3);
  v15 = ((v8 | v9) + v11) & v14;
  *(_BYTE *)(v12 + v14) = *(_BYTE *)(v5 + v15) ^ *(_BYTE *)(v3 + v14) ^ *(_BYTE *)(v15 + v6 + 4) ^ *(_BYTE *)(v15 + v4 + 1) ^ (v15 * a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((56 * (a2 - 1 != v7)) ^ v10)) - 12))();
}

uint64_t sub_100059A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v53 = *(_QWORD *)(v51 + 40);
  *(int8x16_t *)&STACK[0x210] = veorq_s8(*(int8x16_t *)*(_QWORD *)v51, (int8x16_t)xmmword_100DF7530);
  *(int8x16_t *)&STACK[0x220] = veorq_s8(*(int8x16_t *)(v53 - 0x3FDEA928E6C54AE8), (int8x16_t)xmmword_100DF7540);
  v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * (int)(a5 ^ (20592 * (&a9 != (uint64_t *)-528)))) - 12);
  a50 = -42900;
  a51 = (a5 - 2242) | 0x126A;
  return v54(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_100059A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8
                                             * ((a5 - 887138771) & 0x34E0E2F3 ^ (58357 * (v5 == v6))))
                            - (((((a5 - 887138771) & 0x34E0E2F3) - 23025) | 0x20D0u) ^ 0x29DELL)))();
}

uint64_t sub_100059ADC()
{
  unsigned int v0;
  _BYTE *v1;
  uint64_t v2;

  LOBYTE(STACK[0x240]) = *v1;
  LOBYTE(STACK[0x241]) = v1[1];
  LOBYTE(STACK[0x242]) = v1[2];
  LOBYTE(STACK[0x243]) = v1[3];
  LOBYTE(STACK[0x244]) = v1[4];
  LOBYTE(STACK[0x245]) = v1[5];
  LOBYTE(STACK[0x246]) = v1[6];
  LOBYTE(STACK[0x247]) = v1[7];
  LOBYTE(STACK[0x248]) = v1[8];
  LOBYTE(STACK[0x249]) = v1[9];
  LOBYTE(STACK[0x24A]) = v1[10];
  LOBYTE(STACK[0x24B]) = v1[11];
  LOBYTE(STACK[0x24C]) = v1[12];
  LOBYTE(STACK[0x24D]) = v1[13];
  LOBYTE(STACK[0x24E]) = v1[14];
  LOBYTE(STACK[0x24F]) = v1[15];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * v0) - ((v0 - 23217) | 0x2190) + 10694))();
}

uint64_t sub_100059B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  int v47;

  if (v44)
    v46 = v43 == 0;
  else
    v46 = 1;
  v47 = !v46;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 + 8 * ((59 * v47) ^ v42)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_100059BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  char v42;
  int v43;
  uint64_t v44;
  int v45;
  unsigned int v46;
  uint64_t v47;
  _BOOL4 v49;

  v45 = (v43 ^ 0x567D0DAA) + a12 - ((((_DWORD)a12 + 496745328) & 0x18E1B3ED ^ a12 & 4) << (v42 ^ 0x7Bu));
  v46 = ((2 * v45) & 0xD7BF9EFA ^ 0x118306D2) + (v45 ^ 0x733E7C94);
  v47 = (a8 - 22273) | 0x1400u;
  v49 = ((v46 + 3) & 0xF) - ((2 * (v46 + 3)) & 8) + ((a8 - 19882) ^ 0xBEFEE2FE) + (_DWORD)v47 != -1090580569
     || v46 == -337653891;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 + 8 * (a8 ^ (2 * v49))) - 4))(a1, a2, v47, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_100059CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  uint64_t v51;

  return ((uint64_t (*)(void))(*(_QWORD *)(v51
                                        + 8
                                        * (a51 ^ (236
                                                * (((2 * (a12 - ((a10 - 185859278) & 0xAA8D06A0) - 1830666560)) & 0x9FFDB7BE ^ 0x8A8D06A0)
                                                 + ((a12 - ((a10 - 185859278) & 0xAA8D06A0) - 1830666560) ^ 0x1AB8588F)
                                                 + 1987018555 == 1181637402))))
                            - 8))();
}

uint64_t sub_100059D9C@<X0>(int a1@<W0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((a1 + v2 + ((a2 + 1) ^ 0x30016F4A) < 8) | a2))
                            - (a2 ^ 0x4B62)))();
}

uint64_t sub_100059E30(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((((v3 - 15159) | 0x864A) + 11449) * (a3 >> 4 == 218099134)) ^ v3))
                            - 8))();
}

uint64_t sub_100059E78@<X0>(int a1@<W0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _BOOL4 v19;
  int v22;

  v8 = (a1 + v5 + 805381152);
  v9 = v8 + v6 + 1;
  v10 = (a1 + v5) & 0xF;
  v11 = v10 - v8;
  v12 = v2 + v11;
  ++v10;
  v13 = v2 + v10;
  v14 = v4 + v11;
  v15 = v4 + v10;
  v16 = v3 + v11;
  v17 = v3 + v10;
  v19 = v13 > v6 && v12 < v9;
  if (v15 > v6 && v14 < v9)
    v19 = 1;
  v22 = v17 > v6 && v16 < v9 || v19;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((((a2 ^ 0xE1A8) - 16595) ^ 0x3780) * (v22 ^ 1)) ^ a2)) - 12))();
}

uint64_t sub_100059F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t (*v9)(uint64_t, uint64_t, _QWORD);

  v9 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v7
                                                          + 8
                                                          * (int)(((((a6 - 578853593) & 0xBFFCFF1B)
                                                                  + 1652732020
                                                                  + 9863 * (a6 ^ 0x77D5))
                                                                 * (v8 < 0x10)) ^ a6));
  LODWORD(STACK[0x208]) = v6;
  return v9(a1, a2, 0);
}

uint64_t sub_100059F64(uint64_t a1, int a2, __n128 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  __n128 v52;
  __n128 v53;
  __n128 v54;
  __n128 v55;

  LODWORD(STACK[0x200]) = a2 + 6;
  v52.n128_u64[0] = ((_BYTE)a2 + 3) & 0xF;
  v52.n128_u64[1] = ((_BYTE)a2 + 2) & 0xF;
  v53.n128_u64[0] = ((_BYTE)a2 - 30 + (_BYTE)a9 - 122) & 0xF;
  v53.n128_u64[1] = a2 & 0xF;
  v54.n128_u64[0] = ((_BYTE)a2 - 1) & 0xF;
  v54.n128_u64[1] = ((_BYTE)a2 + 14) & 0xF;
  v55.n128_u64[0] = 0xE7E7E7E7E7E7E7E7;
  v55.n128_u64[1] = 0xE7E7E7E7E7E7E7E7;
  return (*(uint64_t (**)(uint64_t, __n128, __n128, __n128, __n128, __int128, __n128))(a52
                                                                                              + 8
                                                                                              * ((43552
                                                                                                * (a9 == 21022421)) ^ (a9 + 1652787718))))(a1, a3, v52, v53, v54, xmmword_100DF7480, v55);
}

uint64_t sub_10005A0B8@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, uint64_t a4@<X5>, int a5@<W7>, int a6@<W8>, __n128 a7@<Q1>, int8x16_t a8@<Q4>, int8x16_t a9@<Q5>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v22;
  uint64_t v23;
  int8x16_t v25;
  int8x16_t v26;

  v22 = (a5 - a2);
  v23 = ((_BYTE)a5 - (_BYTE)a2) & 0xF;
  v25.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a7 - 1), a8).u64[0];
  v25.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v18, a8).u64[0];
  v26 = vrev64q_s8(vmulq_s8(v25, a9));
  *(int8x16_t *)(a4 + v22) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v12 + (v22 & 0xF) - 15), *(int8x16_t *)(a4 + v22)), veorq_s8(*(int8x16_t *)(v14 + (v22 & 0xF) - 15), *(int8x16_t *)(v13 + (v22 & 0xF) - 15))), vextq_s8(v26, v26, 8uLL));
  return (*(uint64_t (**)(void))(v17 + 8 * (((a2 + v15 + a6 == a1) * v16) ^ a3)))();
}

uint64_t sub_10005A130@<X0>(int a1@<W2>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (a2 ^ (53 * (v2 == a1))))
                            - ((a2 + 1904485582) & 0x8E7B48A7)
                            - 12))();
}

uint64_t sub_10005A17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v7
                                                                                        + 8
                                                                                        * (int)(a6 ^ 0x75C2 ^ (11 * ((((((a6 ^ 8) & v6) - a6) | (a6 - ((a6 ^ 8) & v6))) >> (a6 + 31)) & 1))))
                                                                            - 4))(a1, a2, a3, (a2 - a3), (a6 + 14083));
}

#error "10005A254: call analysis failed (funcsize=32)"

uint64_t sub_10005A258@<X0>(char a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W4>, int a5@<W6>, int a6@<W7>, char a7@<W8>, int8x16_t a8@<Q0>, int8x8_t a9@<D1>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  int v56;
  int v57;
  char v58;
  char v59;
  char v60;
  uint64_t v61;
  int8x16x4_t v63;

  v61 = (v57 + a4);
  v63.val[0].i64[0] = ((_BYTE)v57 + (_BYTE)a4) & 0xF;
  v63.val[0].i64[1] = (a7 + (_BYTE)a4) & 0xF;
  v63.val[1].i64[0] = (v60 + (_BYTE)a4) & 0xF;
  v63.val[1].i64[1] = (v59 + (_BYTE)a4) & 0xF;
  v63.val[2].i64[0] = (v58 + (_BYTE)a4) & 0xF;
  v63.val[2].i64[1] = (v55 + (_BYTE)a4) & 0xF;
  v63.val[3].i64[0] = (a1 + (_BYTE)a4) & 0xF;
  v63.val[3].i64[1] = (v56 + a4) & 0xFLL;
  *(int8x8_t *)(a2 + v61) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v52 + (v61 & 0xF) - 7), *(int8x8_t *)(a2 + v61)), veor_s8(*(int8x8_t *)(v54 + (v61 & 0xF) - 7), *(int8x8_t *)(v53 + (v61 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v63, a8), a9)));
  return ((uint64_t (*)(void))(*(_QWORD *)(a52 + 8 * (((a6 != a4) * a3) ^ a5)) - 12))();
}

uint64_t sub_10005A324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  uint64_t v68;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v68
                                                                                         + 8
                                                                                         * (((a7 + 33097)
                                                                                           * (LODWORD(STACK[0x200]) == a68)) ^ (a7 + 602)))
                                                                             - ((a7 - 2004431873) & 0x7778F79B ^ 0x3707)))(a1, a2, a3, a4, (a7 - 15461));
}

uint64_t sub_10005A384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a5 + 19048)) - 4))();
}

uint64_t sub_10005A3A4@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v10 = (a1 + a2);
  *(_BYTE *)(v8 + v10) ^= *(_BYTE *)(v3 + (v10 & 0xF)) ^ *(_BYTE *)(v5 + (v10 & 0xF)) ^ *(_BYTE *)(v4 + (v10 & 0xF)) ^ ((v10 & 0xF) * v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((8 * (a1 - 1 == v2)) | (16 * (a1 - 1 == v2))) ^ v6)) - 4))();
}

void sub_10005A3F8()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1295138239)
    v1 = 28982978;
  else
    v1 = 28940954;
  *(_DWORD *)(v2 + 8) = v1;
}

uint64_t sub_10005A458(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  int v61;
  unsigned __int8 *v62;
  char *v63;
  int v64;
  unsigned int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  char *v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  char *v73;
  unint64_t v74;
  uint64_t v75;
  char v76;
  int v77;
  uint64_t v78;
  char *v79;
  int v80;
  int v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  char v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  char *v95;
  int v96;
  char *v97;
  char *v98;
  int v99;
  int v100;
  unsigned int v101;
  char *v102;
  char *v103;
  unsigned int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  unsigned int v110;
  int v111;
  int v112;
  char *v113;
  int v114;
  unsigned int v115;
  int v116;
  int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  char *v122;
  int v123;
  char *v124;
  int v125;
  int v126;
  char *v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  int v149;
  unsigned int v150;
  char *v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  int v168;
  int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  BOOL v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  int v195;
  unint64_t v196;
  unsigned int v197;
  unsigned int v198;
  int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  uint64_t v213;
  uint64_t v214;
  int v215;
  int v216;
  int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  int v224;
  char *v225;
  char *v226;
  char *v227;
  int v228;
  uint64_t v229;
  char *v230;
  int v231;
  int v232;
  unsigned int v233;
  int v234;
  uint64_t v235;
  int v236;
  uint64_t v237;
  int v238;
  unsigned int v239;
  int v240;
  int v241;
  int v242;
  unsigned int v243;
  int v244;
  int v245;
  unsigned int v246;
  uint64_t v247;
  unsigned int v248;
  int v249;
  unsigned int v250;
  unsigned int v251;
  int v252;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  unint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char v286[8];
  char v287[8];
  int v288;
  int v289;
  char v290[8];
  char v291;
  unsigned int v292;
  char v293;
  int v294;
  unsigned __int8 *v296;
  int v297;

  v297 = v61;
  LODWORD(STACK[0x208]) = (a3 + 1792065792) & 0x952F37DF;
  v63 = (char *)*(&off_10112C750 + a3 - 15278) - 1083071399;
  v64 = LOBYTE(STACK[0x220]) ^ 0x8B ^ v63[LOBYTE(STACK[0x220]) ^ 4];
  v65 = (((v64 - ((v64 << ((a3 & 0xDF) - 2)) & 0xF0)) << 24) - 0x8000000) ^ 0xF8000000;
  v66 = LOBYTE(STACK[0x221]);
  v67 = ((v66 ^ 0x4B) + (v66 ^ 0x68) - ((2 * ((v66 ^ 0x4B) + (v66 ^ 0x68))) & 0x87) + 67);
  v68 = v66 ^ 0xD9;
  v69 = (char *)*(&off_10112C750 + (a3 ^ 0x2CB8)) - 1863516943;
  v70 = v69[v68] ^ v67 ^ 0xBE;
  v71 = (((v70 - ((2 * v70) & 0x144)) << 16) - 878575616) ^ 0xCBA20000;
  v72 = (v71 - ((2 * v71) & 0x8460000) - 1004296082) ^ 0xC423A86E | (v65 - ((2 * v65) & 0x28000000) - 1804441840) ^ 0x94726710;
  v73 = (char *)*(&off_10112C750 + a3 - 13827) - 599615986;
  LODWORD(v68) = v73[LOBYTE(STACK[0x222]) ^ 0xFDLL];
  HIDWORD(v74) = v68 ^ 0x33;
  LODWORD(v74) = (v68 ^ 0x80) << 24;
  LODWORD(v68) = ((((((v74 >> 30) - ((2 * (v74 >> 30)) & 0x26) - 109) ^ 0xA5)
                  - ((2 * (((v74 >> 30) - ((2 * (v74 >> 30)) & 0x26) - 109) ^ 0xA5)) & 0x1AA)) << 8)
                - 260713216) ^ 0xF075D500;
  v75 = LOBYTE(STACK[0x223]);
  v296 = v62;
  v76 = (v75 ^ 0x4F) + (((v75 ^ 0x54) + 1) ^ 0xDD) + ((2 * ((v75 ^ 0x54) + 1)) & 0xBB) + 35;
  v77 = (v72 - ((2 * v72) & 0xFF5F0F84) - 5273662) ^ 0xFFAF87C2 | (v68 - ((2 * v68) & 0x1680E00) + 1085540214) ^ 0x40B40776;
  v78 = LOBYTE(STACK[0x224]);
  v79 = (char *)*(&off_10112C750 + a3 - 13779) - 1169703970;
  LODWORD(v75) = v79[v75 ^ 0x6A] ^ (v76 + (~(2 * v76) | 3) + 127) ^ 0x9A;
  v80 = (v77 + 1285412823 + (~(2 * v77) | 0x66C45051) + 1) ^ 0x4C9DD7D7 | (v75 - ((2 * v75) & 0x1A4) + 1946105042) ^ 0x73FF34D2;
  v81 = v80 - ((2 * v80) & 0x43F48FBC) + 570050526;
  LOBYTE(v80) = v63[v78 ^ 0x84];
  LODWORD(v68) = v80 & 0x80;
  LOBYTE(v80) = (((2 * (v80 & 0x7F ^ 0x27)) | 0xD8) - (v80 & 0x7F ^ 0x27) - 108) ^ 0x28;
  v286[0] = v80 - ((2 * v80) & 0xB4);
  HIDWORD(v285) = (v78 ^ 0x4A) + v68 - 2 * ((v78 ^ 0x4A) & 0x55555555 ^ v78 & 1);
  v82 = LOBYTE(STACK[0x225]);
  LODWORD(v78) = v73[LOBYTE(STACK[0x226]) ^ 0x23];
  v83 = (v82 ^ 0x13) + (v82 ^ 0x30) - ((2 * ((v82 ^ 0x13) + (v82 ^ 0x30))) & 0xB4);
  HIDWORD(v74) = v78 ^ 0x33;
  LODWORD(v74) = (v78 ^ 0x80) << 24;
  v288 = (v74 >> 30) - ((2 * (v74 >> 30)) & 0x7A);
  v84 = LOBYTE(STACK[0x227]);
  v85 = (v84 ^ 0xFFFFFFBA) + (((v84 ^ 0xFFFFFFA1) + 1) ^ 0x7E) + 4 * (((v84 ^ 0xFFFFFFA1) + 1) >> 1) - 126;
  v290[0] = v85 - ((2 * v85) & 0xC4);
  v86 = LOBYTE(STACK[0x229]);
  v291 = (v86 ^ 0xF) + (v86 ^ 0x2C) - 2 * (((v86 ^ 0xF) + (v86 ^ 0x2C)) & 3);
  LODWORD(v78) = v73[LOBYTE(STACK[0x22A]) ^ 0x9DLL];
  HIDWORD(v74) = v78 ^ 0x33;
  LODWORD(v74) = (v78 ^ 0x80) << 24;
  LODWORD(STACK[0x200]) = (v74 >> 30) - ((2 * (v74 >> 30)) & 0x96);
  v87 = LOBYTE(STACK[0x22B]);
  v88 = LOBYTE(STACK[0x228]);
  HIDWORD(v284) = v63[v88 ^ 0x8B];
  v89 = LOBYTE(STACK[0x22C]);
  v90 = v63[v89 ^ 0xFA];
  LOBYTE(v63) = (v87 ^ 0x68) + (((v87 ^ 0x73) + 1) ^ 0xCB) + ((2 * ((v87 ^ 0x73) + 1)) & 0x96) + 53;
  v293 = (_BYTE)v63 - ((2 * (_BYTE)v63) & 0x18);
  v91 = v69[v82 ^ 0x81];
  LODWORD(v285) = v69[v86 ^ 0x9D];
  v92 = LOBYTE(STACK[0x22D]);
  LOBYTE(v69) = v69[v92 ^ 0x7F];
  v93 = (v92 ^ 0xED) + (v92 ^ 0xCE) - 2 * (((v92 ^ 0xED) + (v92 ^ 0xCE)) & 0x1F);
  LODWORD(v92) = v73[LOBYTE(STACK[0x22E]) ^ 0xA2];
  HIDWORD(v74) = v92 ^ 0x33;
  LODWORD(v74) = (v92 ^ 0x80) << 24;
  LOBYTE(v82) = (v74 >> 30) - ((2 * (v74 >> 30)) & 0xB6);
  v94 = LOBYTE(STACK[0x22F]);
  LODWORD(v284) = v79[v84 ^ 0x9F];
  v287[0] = v79[v87 ^ 0x4D];
  LOBYTE(v63) = (v94 ^ 0xFA) + (((v94 ^ 0xE1) + 1) ^ 0xDE) + ((2 * ((v94 ^ 0xE1) + 1)) & 0xBC) + 34;
  LOBYTE(v84) = (_BYTE)v63 - ((2 * (_BYTE)v63) & 0x5A);
  LOBYTE(v63) = v79[v94 ^ 0xDF];
  LOBYTE(v94) = v89 ^ 0x5B ^ v90;
  v95 = (char *)*(&off_10112C750 + a3 - 13581) - 300091434;
  LODWORD(v94) = *(_DWORD *)&v95[4 * v94];
  HIDWORD(v74) = v94 ^ 0x1A;
  LODWORD(v74) = v94 ^ 0xFFBAFAC0;
  LODWORD(v79) = (v74 >> 5) - ((2 * (v74 >> 5)) & 0xBD7BC80C) + 1589502982;
  LODWORD(v94) = (((16 * (_DWORD)v79) ^ 0xEBDE4060) - ((2 * ((16 * (_DWORD)v79) ^ 0xEBDE4060)) & 0x2B424DA0) + 362882778) & 0x49896440 ^ 0xB7F7BFF0;
  v96 = v94 + 1107119026 + ((2 * v94) & 0x83128000 ^ 0xFF17E89F);
  v97 = (char *)*(&off_10112C750 + (a3 ^ 0x3E2A)) - 161885883;
  LODWORD(v94) = *(_DWORD *)&v97[4 * (v69 ^ (v93 - 97) ^ 0xEA)];
  LODWORD(v94) = 1786191047 * v94 - ((15612302 * v94 + 59946234) & 0x28E85F0) + 1561369973;
  v98 = (char *)*(&off_10112C750 + a3 - 14813) - 700218714;
  v99 = *(_DWORD *)&v98[4 * ((v82 + 91) ^ 0xC5)];
  HIDWORD(v74) = v99 ^ 0x2E;
  LODWORD(v74) = v99 ^ 0xB2C6B200;
  v100 = (v74 >> 9) - ((2 * (v74 >> 9)) & 0xC8A255A8) - 464442668;
  v101 = 4
       * ((v100 ^ 0xE4512AD4) * (v100 ^ 0xE4512AD4) - ((2 * (v100 ^ 0xE4512AD4) * (v100 ^ 0xE4512AD4)) & 0x1EBF5D7A))
       - 1115768076;
  v102 = (char *)*(&off_10112C750 + a3 - 12888) - 477673023;
  LODWORD(v84) = v102[v63 ^ (v84 - 83) ^ 9];
  LODWORD(v84) = v84 ^ ((v84 >> 7) | 0xE6) ^ ((v84 >> 4) | 0xC0) ^ 0x2D;
  LODWORD(v63) = v94 ^ v79 ^ (v94 >> 4) ^ (v94 >> 3) ^ (v84
                                                                                                - ((2 * v84) & 0x15C)
                                                                                                - 1718049874) ^ v100 ^ v96 ^ ((v101 ^ 0xBD7EBAF4) - 2 * ((v101 ^ 0xBD7EBAF4) & 0x53AFB1C ^ v101 & 8) + 87751445);
  v103 = (char *)*(&off_10112C750 + a3 - 14468) - 1039629715;
  LODWORD(v94) = *(_DWORD *)&v103[4
                                * ((((v63 >> 15) & 0x60) + (BYTE2(v63) ^ 0xFFFFFFF3) - 72834864) ^ 0xFBA8A0CB)];
  HIDWORD(v74) = v94 ^ 0x12284;
  LODWORD(v74) = v94 ^ 0xF4A00000;
  LODWORD(v94) = (v74 >> 19) - ((2 * (v74 >> 19)) & 0x225D8D80) - 1859205440;
  LODWORD(v79) = (v94 >> 4) & 0xD0A54B3 ^ v94;
  LODWORD(v94) = v81 ^ ((v81 ^ 0x15A27C0) - ((2 * (v81 ^ 0x15A27C0) + 1052721092) & 0x76A3A844) - 1699646460) ^ ((v81 ^ 0xDE05B821) - ((2 * (v81 ^ 0xDE05B821) + 2) & 0xBBD70DF6) + 1575716604) ^ 0xC7401507;
  v104 = v94 - ((2 * v94 - 1094762558) & 0xA5EECAA4) - 1302919885;
  LODWORD(v94) = *(_DWORD *)&v95[4 * (HIBYTE(v104) ^ 0x18)];
  HIDWORD(v74) = v94 ^ 0x1A;
  LODWORD(v74) = v94 ^ 0xFFBAFAC0;
  v105 = (v74 >> 5) - ((2 * (v74 >> 5)) & 0xC4577DC8) - 500449564;
  LODWORD(v94) = (((16 * v105) ^ 0x22BBEE40) - ((2 * ((16 * v105) ^ 0x22BBEE40)) & 0x55ECFF20) + 1794539411) & 0x49896440 ^ 0xFEF6FFB0;
  v106 = v94 - ((2 * v94) & 0x1102C000) + 140561747;
  LODWORD(v94) = ((BYTE2(v104) ^ 0xC3) - 2 * ((BYTE2(v104) ^ 0xC3) & 0x3F) - 360771009) ^ 0x5B09103F;
  LODWORD(v94) = *(_DWORD *)&v97[4 * (((_DWORD)v94 - ((2 * (_DWORD)v94) & 0x2280074E) + 1530921895) ^ 0xEA360102)];
  v107 = *(_DWORD *)&v98[4 * ((((v104 >> 8) & 0xAB ^ 0x181) + ((v104 >> 8) & 0x54 ^ 0xE51) - 1) ^ 0xF7F)];
  HIDWORD(v74) = v107 ^ 0x2E;
  LODWORD(v74) = v107 ^ 0xB2C6B200;
  v108 = (v74 >> 9) - ((2 * (v74 >> 9)) & 0xCF0DBE2) + 108555761;
  v109 = (4 * ((v108 ^ 0x6786DF1) * (v108 ^ 0x6786DF1) - ((2 * (v108 ^ 0x6786DF1) * (v108 ^ 0x6786DF1)) & 0x126B82B0))
        + 618071392) ^ 0x24D70560;
  v110 = v102[((v104 ^ 0x8481005A)
                              - ((2 * (v104 ^ 0x8481005A)) & 0x9000114)
                              - 134568054) ^ 0x737BA710];
  v111 = v110 ^ (v110 >> 4) ^ ((v110 >> 7) | 0xB8) ^ 0xB3;
  LODWORD(v94) = 1786191047 * v94 - ((1424898446 * v94 + 932361466) & 0x48E61DD4) + 3959143;
  v112 = v105 ^ v94 ^ (v94 >> 4) ^ (v94 >> 3) ^ v108 ^ (v111
                                                                                  - ((2 * v111) & 0xD6)
                                                                                  - 1508724885) ^ v106 ^ 0x331064EC ^ (v109 - ((2 * v109) & 0x3BC28F8) + 31331455);
  v113 = (char *)*(&off_10112C750 + (a3 ^ 0x3F95)) - 1498950858;
  v114 = ((((2 * BYTE1(v63)) | 0x8371B42) - BYTE1(v63) - 69965217) ^ 0x164032B) + 1;
  v115 = v114 ^ 0xEFEBF9F4;
  v116 = (2 * v114) & 0x5FD7F3E8;
  v117 = *(_DWORD *)&v113[4
                        * (((BYTE1(v63) ^ 0x2202A07C) - ((2 * (BYTE1(v63) ^ 0x2202A07C)) & 0x440400E4) + 2047494770) ^ 0x5808EA83)];
  v118 = ((2 * (v117 & 0x4A397D8F ^ 0x112C02)) | 0x74590588) - (v117 & 0x4A397D8F ^ 0x112C02) + 1171488060;
  LODWORD(v94) = (((BYTE1(v63) ^ 0xC0) - ((2 * (BYTE1(v63) ^ 0xC0)) & 0x104) + 21890) ^ 0x55C4)
               + v115
               + v116
               + 269747724;
  LODWORD(v94) = ((2 * v94) & 0x79E7D3A8) + (v94 ^ 0x7CF3E9D4);
  v119 = (v117 & 0xB5060210 ^ 0x3838268B | v117 & 0xC08060) - 1;
  LODWORD(v282) = v112;
  LODWORD(v79) = v79 ^ v112;
  v120 = (v79 ^ 0x6B39A56) + 1;
  LODWORD(v79) = v79 ^ 0x5AB8233F;
  v121 = (_DWORD)v79 + (v120 ^ 0x3AFFE7FD) + ((2 * v120) & 0x75FFCFFA) - 989849597;
  LODWORD(v94) = ((v119 & 0x11180450) + (v119 ^ 0x395A275A) - ((v119 ^ 0x395A275A) & 0x11000150) + 0x40000000) ^ (((v94 + 51123756) & 0x5468270) - ((2 * (v94 + 51123756)) & 0x8050480) - 558654773) ^ 0x9E099E0B | ((v118 & 0xF6B3852 ^ 0x7631042) + (v118 ^ 0xC80CAA14) - ((v118 ^ 0xC80CAA14) & 0xF6B3852)) ^ (((v94 + 792108) & 0x290D8F) - ((2 * (v94 + 792108)) & 0x400A0C) + 175113558) ^ 0x351B3C54;
  LODWORD(v79) = ((v121 - ((2 * v121) & 0x6979198C) - 1262711610) ^ 0x4B43733A) + (_DWORD)v79;
  v122 = (char *)*(&off_10112C750 + (a3 ^ 0x3CAD)) - 1916863138;
  v123 = *(_DWORD *)&v122[4
                        * (((v63 ^ 0xA8) - ((2 * (v63 ^ 0xA8)) & 0xC4) - 736242846) ^ 0xD41DD3AB)];
  HIDWORD(v74) = v123 ^ 0x347D16;
  LODWORD(v74) = v123 ^ 0xDBC00000;
  v124 = (char *)*(&off_10112C750 + (a3 ^ 0x3BA9)) - 253345310;
  v125 = (int)v63;
  HIDWORD(v283) = (_DWORD)v63;
  v126 = v124[(v63 >> 24) ^ 0x98];
  v127 = v124;
  v128 = (v74 >> 22) - ((2 * (v74 >> 22)) & 0x96A54932) + 1263707289;
  v129 = (((8 * v126) ^ 0xFFFFFFC0) - ((2 * ((8 * v126) ^ 0xFFFFFFC0)) & 0xFFFFFFA0) + 80) & 0xFFFFFFEF ^ 0x50;
  v130 = v126 ^ 0xB1 ^ (v129 + (~(2 * v129) | 0x6F) - 54);
  v131 = *(_DWORD *)&v95[4 * ((BYTE4(v285) + 84) ^ 0xA ^ (v286[0] - 38))];
  HIDWORD(v74) = v131 ^ 0x1A;
  LODWORD(v74) = v131 ^ 0xFFBAFAC0;
  LODWORD(v124) = v128 ^ (v128 >> 1) & 0x7F33A859 ^ (v130 - ((2 * v130) & 0x194) + 1719141834) ^ (v94 - ((2 * v94) & 0xA0DE7B04) + 1349467522) ^ 0xADEBD4B5 ^ ((_DWORD)v79 - ((2 * (_DWORD)v79) & 0x6A6BEE26) - 1254754541);
  LODWORD(v79) = *(_DWORD *)&v97[4 * (v91 ^ (v83 + 90) ^ 0xA7)];
  LODWORD(v94) = (v74 >> 5) - ((2 * (v74 >> 5)) & 0x6C5D770) + 56814520;
  LODWORD(v79) = 1786191047 * (_DWORD)v79 - ((-722585202 * (_DWORD)v79 - 1215122182) & 0xBD0C31CE) - 1169198236;
  v132 = (((16 * v94) ^ 0x362EBB80) - ((2 * ((16 * v94) ^ 0x362EBB80)) & 0xF25AB40) + 1200805280) & 0x49896440 ^ 0xF7F6DFB0;
  v133 = *(_DWORD *)&v98[4 * ((v288 + 61) ^ 0x39)];
  HIDWORD(v74) = v133 ^ 0x2E;
  LODWORD(v74) = v133 ^ 0xB2C6B200;
  v134 = (v74 >> 9) - ((2 * (v74 >> 9)) & 0xCB2D3A78) + 1704369468;
  v135 = (4
        * ((v134 ^ 0x65969D3C) * (v134 ^ 0x65969D3C) - ((2 * (v134 ^ 0x65969D3C) * (v134 ^ 0x65969D3C)) & 0x388284AE))
        + 1896155484) ^ 0x7105095C;
  v136 = v102[(v284 ^ (v290[0] - 30)) ^ 0xDF];
  v137 = v136 ^ (v136 >> 7) ^ (v136 >> 4) ^ 0xB;
  v138 = v94 ^ v79 ^ (v79 >> 4) ^ (v79 >> 3) ^ v134 ^ (v137
                                                                                               - ((2 * v137) & 0x52)
                                                                                               + 1123896617) ^ (v132 - ((2 * v132) & 0x9210C800) - 1801037103) ^ (v135 - ((2 * v135) & 0x7352D428) - 1180079593) ^ 0x13A82B49;
  LODWORD(v94) = *(_DWORD *)&v95[4 * (v88 ^ 0xD6 ^ BYTE4(v284))];
  HIDWORD(v74) = v94 ^ 0x1A;
  LODWORD(v74) = v94 ^ 0xFFBAFAC0;
  LODWORD(v94) = (v74 >> 5) - ((2 * (v74 >> 5)) & 0x520886F0) - 1459338376;
  LODWORD(v88) = (((16 * v94) ^ 0x90443780) - ((2 * ((16 * v94) ^ 0x90443780)) & 0x291F0400) + 344949250) & 0x49896440 ^ 0xB6FF9BB0;
  LODWORD(v97) = *(_DWORD *)&v97[4 * ((v285 ^ (v291 - 125)) ^ 0x10)];
  LODWORD(v98) = *(_DWORD *)&v98[4 * ((LODWORD(STACK[0x200]) + 75) ^ 0x5E)];
  LODWORD(v97) = 1786191047 * (_DWORD)v97 - ((1424898446 * (_DWORD)v97 + 932361466) & 0x644CCD4A) - 1913667294;
  HIDWORD(v74) = v98 ^ 0x2E;
  LODWORD(v74) = v98 ^ 0xB2C6B200;
  LODWORD(v98) = (v74 >> 9) - ((2 * (v74 >> 9)) & 0xD07CC980) - 398564160;
  LODWORD(v79) = (4
                * ((v98 ^ 0xE83E64C0) * (v98 ^ 0xE83E64C0)
                 - ((2 * (v98 ^ 0xE83E64C0) * (v98 ^ 0xE83E64C0)) & 0x3D0C8E0C))
                + 2048465944) ^ 0x7A191C18;
  LODWORD(v63) = v102[(v287[0] ^ (v293 - 116)) ^ 0x99];
  LODWORD(v63) = v63 ^ ((v63 >> 7) | 0x68) ^ ((v63 >> 4) | 0x90) ^ 0xF3;
  LODWORD(v98) = v97 ^ v94 ^ (v97 >> 4) ^ (v97 >> 3) ^ ((_DWORD)v63
                                                                                                - ((2 * (_DWORD)v63) & 0x26)
                                                                                                + 1679022611) ^ v98 ^ (v88 + 505391350 + ((2 * v88) & 0x10124080 ^ 0xD3D2EE9F)) ^ ((_DWORD)v79 - ((2 * (_DWORD)v79) & 0x1A709320) - 1925690992);
  v281 = __PAIR64__(v124, v138);
  LODWORD(v283) = v124 ^ v138;
  LODWORD(v63) = v124 ^ v138 ^ 0x3B8BB832;
  HIDWORD(v280) = (_DWORD)v98;
  LODWORD(v82) = v98 ^ 0x368CC39F ^ v63;
  LODWORD(v94) = ((v82 ^ v125) >> 16) ^ 0xDC;
  LODWORD(v94) = *(_DWORD *)&v103[4 * ((((2 * (_DWORD)v94) & 0x172) - (_DWORD)v94 + 1094) ^ 0x47C)];
  HIDWORD(v74) = v94 ^ 0x12284;
  LODWORD(v74) = v94 ^ 0xF4A00000;
  LODWORD(v98) = (v74 >> 19) - ((2 * (v74 >> 19)) & 0xE665291C) - 214788978;
  LODWORD(v94) = ((2 * ((v98 >> 4) & 0xD0A54B3 ^ 0x8001081)) | 0x53793220)
               - ((v98 >> 4) & 0xD0A54B3 ^ 0x8001081)
               - 700225808;
  LODWORD(v79) = (v94 & 0x39C0F733 ^ 0x11C04722) + (v94 ^ 0xAC3AB8D5) - ((v94 ^ 0xAC3AB8D5) & 0xB9C0F733);
  LODWORD(v94) = ((((v82 ^ v125) >> 8) & 0xF0 ^ 0xE6BBD4C1) + (((v82 ^ v125) >> 8) & 0xF) - 1) ^ 0xA639F8B0;
  LODWORD(v94) = (((v94 | 0xA7283478) - (v94 | 0x58D7CB87) + 1490537351) ^ 0xE2C59E1A) + 1;
  LODWORD(v95) = ((unsigned __int16)(v82 ^ v125) >> 8);
  LODWORD(v94) = (((v95 ^ 0xA80804FC | 0xF6ED5C05)
                 - (v95 ^ 0xA80804FC | 0x912A3FA)
                 + 152216570) ^ 0x5EE558E7)
               + (v94 ^ 0x2FFFDEFF)
               + ((2 * v94) & 0x5FFFBDFE)
               - 805297919;
  v139 = *(_DWORD *)&v122[4
                        * ((((v82 ^ v125) & 0xB4 ^ 0x1725) + ((v82 ^ v125) & 0x4B) - 1) ^ 0x174B)];
  HIDWORD(v74) = v139 ^ 0x347D16;
  LODWORD(v74) = v139 ^ 0xDBC00000;
  v140 = (v74 >> 22) - ((2 * (v74 >> 22)) & 0x5DB4EE50) - 1361414360;
  v141 = v127[((v82 ^ v125) >> 24) ^ 0x83];
  v142 = v141 ^ 0x71 ^ (((((8 * v141) ^ 0xFFFFFFC0) - 91 - ((16 * v141) & 0x40)) & 0xFFFFFFE8 ^ 0xB0)
                      - ((2 * (((8 * v141) ^ 0xFFFFFFC0) - 91)) & 0x10)
                      + 9);
  LODWORD(v94) = *(_DWORD *)&v113[4
                                * (((v95 ^ 0x80448E4)
                                  - ((2 * (v95 ^ 0x80448E4)) & 0x100800F0)
                                  + 2036834936) ^ 0x7163EA89)] ^ v140 ^ v98 ^ (((v140 >> 1) & 0x2F02A810 ^ 0x84082B1)
                                                                                           + ((v140 >> 1) & 0x50310049)
                                                                                           - 1) ^ (v142
                                                                                                 - ((2 * v142) & 0xE8)
                                                                                                 - 550455180) ^ v124 ^ (v94 - ((2 * v94) & 0x7C6901DC) + 1043628270) ^ 0x769D421B ^ v79;
  HIDWORD(v278) = v94 ^ v63;
  LODWORD(v63) = v94 ^ v63 ^ 0x653DC840;
  LODWORD(v280) = v82;
  LODWORD(v278) = v63 ^ v82;
  LODWORD(v98) = v63 ^ v82 ^ 0xFCBEC617;
  HIDWORD(v279) = v82 ^ v125;
  LODWORD(v95) = ((v98 ^ v82 ^ v125) >> 16) ^ 0xCA;
  LODWORD(v102) = ((_DWORD)v95
                 + (((v98 ^ v82 ^ v125) >> 16) & 0xA7 ^ 0x7C7AC525)
                 - (v95 & 0xA7)) ^ 0x24EA1235;
  LODWORD(v102) = *(_DWORD *)&v103[4 * (((_DWORD)v102 - ((2 * (_DWORD)v102) & 0x8101054E) - 521295193) ^ 0xB87D7D80)];
  HIDWORD(v74) = v102 ^ 0x12284;
  LODWORD(v74) = v102 ^ 0xF4A00000;
  LODWORD(v102) = (v74 >> 19) - ((2 * (v74 >> 19)) & 0x75472E0E) + 983799559;
  v143 = ((unsigned __int16)((unsigned __int16)v98 ^ v82 ^ v125) >> 8);
  v144 = (v143 ^ 0xC8) + (((v98 ^ v82 ^ v125) >> 8) & 0xC ^ 0xB04) - ((v143 ^ 0xC8) & 0xC);
  v145 = (((2 * (v143 ^ 0x3C)) & 0xD0) - (v143 ^ 0x3C) - 779170409) ^ 0xD3CBBDC6;
  v146 = ((((2 * v145) & 0x480CECE) - v145 + 2081888408) ^ 0x7E526858) + (v144 ^ 0xFA90729A);
  v147 = (v146 ^ 0x336EFBFF) + ((2 * v144) ^ 0xE464DEB5) + ((4 * v144) & 0x8FC ^ 0x37BE7797) + ((2 * v146) & 0x66DDF7FE);
  v148 = (((2 * ((v98 ^ BYTE4(v279)) ^ 0x8B)) & 0x36)
        - ((v98 ^ BYTE4(v279)) ^ 0x8B)
        + 1355452132) ^ 0xA8FC4;
  v149 = *(_DWORD *)&v122[4 * ((((2 * v148) & 0xA0800174) - v148 + 730688325) ^ 0x7B4D6A25)];
  HIDWORD(v74) = v149 ^ 0x347D16;
  LODWORD(v74) = v149 ^ 0xDBC00000;
  v150 = (v74 >> 22) - ((2 * (v74 >> 22)) & 0x481E5C86) + 604974659;
  LODWORD(v279) = v94;
  LODWORD(v102) = v102 ^ *(_DWORD *)&v113[4
                                                      * ((((2 * (v143 ^ 0x106000CB)) & 0xFF80000F)
                                                        - (v143 ^ 0x106000CB)
                                                        + 1270166520) ^ 0x5BD53395)] ^ v150 ^ (v150 >> 1) & 0x7F33A859 ^ v94 ^ (((v102 >> 4) & 0xD0A54B3 ^ 0x40A5020) + ((v102 >> 4) & 0xD0A04B3 ^ 0x59500D9B) - (((v102 >> 4) & 0xD0A54B3 ^ 0x40A5020) & 0xD0A04B3)) ^ (v147 + 1 - 2 * ((v147 + 994887809) & 0x5E91CFDD ^ (v147 + 1) & 5) - 1713465256);
  LODWORD(v79) = v127[((v98 ^ v82 ^ v125) >> 24) ^ 0x9CLL];
  v151 = v127;
  LODWORD(v95) = ((8 * (_DWORD)v79) ^ 0xFFFFFFC0) - 16 * (v79 & 3) - 100;
  LODWORD(v79) = v79 ^ ((v95 & 0xFFFFFFE8 ^ 0x98) + ((2 * (_DWORD)v95) & 0x80) + 68) ^ 0x3C;
  LODWORD(v95) = ((2 * (_DWORD)v102) ^ 0x2D07D37A) - ((2 * ((2 * (_DWORD)v102) ^ 0x2D07D37A)) & 0x7A8859F0);
  LODWORD(v79) = ((v79 - ((2 * (_DWORD)v79) & 0x148) + 1405629092) ^ 0xC54BDB55 ^ v102)
               + 1392508928;
  LODWORD(v79) = (v79 ^ 0x64FF11FF) - 1241247231 + ((2 * (_DWORD)v79) & 0xC9FE23FE);
  LODWORD(v102) = (_DWORD)v79 - ((-2055756276 - 2 * (_DWORD)v95) & 0x48000000 | ((_DWORD)v95 + 1027878136) & 0xA6000000);
  LODWORD(v94) = (_DWORD)v102 - 2 * (((_DWORD)v102 + 150789120) & 0x54781D9F ^ v79 & 0x1A) - 579536507;
  v152 = v94 ^ v63 ^ v98;
  HIDWORD(v277) = v98 ^ HIDWORD(v279) ^ 0x15A51020;
  LODWORD(v98) = ((v152 ^ HIDWORD(v277)) >> 16) ^ 0xC2081239;
  LODWORD(v98) = *(_DWORD *)&v103[4 * ((((2 * (_DWORD)v98) | 0x3053F5F8) - (_DWORD)v98 - 405404412) ^ 0xDA21E8EB)];
  HIDWORD(v74) = v98 ^ 0x12284;
  LODWORD(v74) = v98 ^ 0xF4A00000;
  LODWORD(v98) = (v74 >> 19) - ((2 * (v74 >> 19)) & 0x956B7D62) - 894058831;
  LODWORD(v79) = (((2 * ((v98 >> 4) & 0xD0A54B3 ^ 0x8020092)) | 0x4549AA44)
                - ((v98 >> 4) & 0xD0A54B3 ^ 0x8020092)
                + 1566255838) ^ 0x2A0572B;
  LODWORD(v95) = ((unsigned __int16)(v152 ^ WORD2(v277)) >> 8);
  LODWORD(v102) = ((v95 ^ 0x51)
                 + (((v152 ^ HIDWORD(v277)) >> 8) & 0xC3 ^ 0xB82)
                 - ((v95 ^ 0x51) & 0xFFFFFFC3)) ^ 0xB2A;
  v153 = (v95 ^ 0x56F86BF) + 1;
  LODWORD(v95) = (((2 * (v95 ^ 0x65)) & 0x1A4) - (v95 ^ 0x65) + 525253677) ^ 0x1A0F141D;
  LODWORD(v95) = (v153 ^ 0x7BBDDBFD)
               + ((2 * v153) & 0x25B07FA)
               - 2076040189
               + ((((2 * (_DWORD)v95) | 0x5C5CA7E4) - (_DWORD)v95 + 1372695566) ^ 0xAB6FFB14);
  LOWORD(v153) = ((v152 ^ WORD2(v277)) & 0xA5 ^ 0x827B) - ((v152 ^ WORD2(v277)) & 0x5A);
  v154 = *(_DWORD *)&v122[4 * (((v153 & 0x29A ^ 0xAD7A5891) + (v153 & 0x65) - 1) ^ 0xAD7A5AA6)];
  HIDWORD(v74) = v154 ^ 0x347D16;
  LODWORD(v74) = v154 ^ 0xDBC00000;
  v155 = (v74 >> 22) - ((2 * (v74 >> 22)) & 0x3701BD3E) + 461430431;
  v156 = v127[((v152 ^ HIDWORD(v277)) >> 24) ^ 0x88];
  v157 = (((8 * v156) ^ 0xFFFFFFC0) - ((16 * v156) & 0x40) + 33) & 0xFFFFFFE8 ^ 0x30;
  LODWORD(v277) = v94;
  v289 = v98 ^ *(_DWORD *)&v113[4 * v102] ^ v155 ^ (((v155 >> 1) & 0x7F33A859 ^ 0x6213A818 | 0x97CAFB98)
                                                                              - ((v155 >> 1) & 0x7F33A859 ^ 0x6213A818 | 0x68350467)
                                                                              + 1748304999) ^ ((v156 ^ 0x5E ^ (v157 - ((2 * v157) & 0x40) + 38))
                                                                                             - ((2
                                                                                               * (v156 ^ 0x5E ^ (v157 - ((2 * v157) & 0x40) + 38))) & 0x56)
                                                                                             - 337570517) ^ v94 ^ ((_DWORD)v95 - ((2 * (_DWORD)v95) & 0x3B1E98D4) - 577811350) ^ (((2 * (_DWORD)v79) | 0xAD203B86) - (_DWORD)v79 + 695198269);
  HIDWORD(v275) = v152 ^ HIDWORD(v277) ^ 0x7E4FC922;
  LODWORD(v276) = v152;
  HIDWORD(v276) = v94 ^ v63;
  LODWORD(v98) = v289 ^ 0xEF67E669 ^ v94 ^ v63;
  LODWORD(v275) = v98 ^ 0x4D4869B8;
  v292 = v98 ^ 0x4D4869B8 ^ v152 ^ 0xEEBD6A64;
  LODWORD(v95) = *(_DWORD *)&v103[4
                                * (((((v292 ^ HIDWORD(v275)) >> 16) & 0x61 ^ 0x8B040F40)
                                  + (((v292 ^ HIDWORD(v275)) >> 16) & 0x9E ^ 0x400801F)
                                  - 1) ^ 0x8F048F35)];
  HIDWORD(v74) = v95 ^ 0x12284;
  LODWORD(v74) = v95 ^ 0xF4A00000;
  v158 = (v74 >> 19) - ((2 * (v74 >> 19)) & 0x2834C278) + 337273148;
  LODWORD(v95) = ((unsigned __int16)(v292 ^ WORD2(v275)) >> 8);
  v159 = (((2 * (v95 ^ 0xAB)) & 0xFFFFFFE3) - (v95 ^ 0xAB) + 723451662) ^ 0x23EEB1B;
  v160 = (((v159 | 0xEA6127F8) - (v159 | 0x159ED807) + 362731527) ^ 0xC62EB53E) + 1;
  v161 = ((v95 ^ 0x9E) - ((2 * (v95 ^ 0x9E)) & 0x108) - 1916794236) ^ 0xC3A70A84;
  LODWORD(v94) = (((v161 | 0xF99BF4F) - (v161 | 0xF06640B0) - 261734224) ^ 0x41FEBFA5)
               + (v160 ^ 0xFFE791FF)
               + ((2 * v160) & 0x7FCF23FE)
               + 1601025;
  v162 = v94 - ((2 * v94) & 0xD09DDD8) + 109375212;
  LODWORD(v94) = *(_DWORD *)&v122[4
                                * ((((v292 ^ BYTE4(v275)) ^ 0xD8182095)
                                  + ((v292 ^ HIDWORD(v275)) & 0xE2 ^ 0x5609462)
                                  - (((v292 ^ BYTE4(v275)) ^ 0xD8182095) & 0x800020E2)) ^ 0x5D7894FA)];
  HIDWORD(v74) = v94 ^ 0x347D16;
  LODWORD(v74) = v94 ^ 0xDBC00000;
  LODWORD(v94) = (v74 >> 22) - ((2 * (v74 >> 22)) & 0x5899BDEE) - 1404248329;
  v163 = (((2 * ((v94 >> 1) & 0x7F33A859 ^ 0x700A810)) | 0xDF4658DC)
        - ((v94 >> 1) & 0x7F33A859 ^ 0x700A810)
        - 1872964718) ^ 0x7EA3AD81;
  LODWORD(v88) = v127[((v292 ^ HIDWORD(v275)) >> 24) ^ 0x4ELL];
  LODWORD(v88) = v88 ^ 0xBE ^ (((122 - ((8 * v88) ^ 0x68)) & 0xFFFFFFC0 ^ 0x53)
                             + ((122 - ((8 * v88) ^ 0x68)) & 0x28 ^ 9)
                             - 2);
  v294 = v158 ^ *(_DWORD *)&v113[4
                               * (((v95 ^ 0x809C)
                                 - ((2 * (v95 ^ 0x809C)) & 0x1005C)
                                 - 595987410) ^ 0xDC7974CD)] ^ v94 ^ (((v158 >> 4) & 0xD0A54B3 ^ 0x90000A3)
                                                                    - ((2 * ((v158 >> 4) & 0xD0A54B3 ^ 0x90000A3)) & 0x8000022)
                                                                    + 921018897) & 0xFD0E57FF ^ (v88
                                                                                               - ((2 * v88) & 0x68)
                                                                                               + 2041145652) ^ v289 ^ 0xEF67E669 ^ (((2 * v163) & 0x960F1ED8) - v163 + 888696979) ^ v162;
  HIDWORD(v282) = v294 ^ 0x72C04006 ^ v152 ^ 0xEEBD6A64;
  HIDWORD(v274) = v292 ^ HIDWORD(v275) ^ 0xCB3E7FB6;
  v164 = HIDWORD(v282) ^ 0x37B02F5B ^ HIDWORD(v274);
  LODWORD(v94) = ((HIWORD(v164) & 0xCF ^ 0x7DC1AF8F) + (HIWORD(v164) & 0x30 ^ 0x21) - 1) ^ 0x67C1B7CB;
  LODWORD(v94) = *(_DWORD *)&v103[4 * ((((2 * (_DWORD)v94) | 0xA7535586) - v94 - 1403628227) ^ 0x49A9B2B3)];
  HIDWORD(v74) = v94 ^ 0x12284;
  LODWORD(v74) = v94 ^ 0xF4A00000;
  v165 = (v74 >> 19) - ((2 * (v74 >> 19)) & 0xD6E7FCE8) + 1802763892;
  LODWORD(v94) = (((v165 >> 4) & 0xD0A54B3 ^ 0x89598637)
                - ((2 * ((v165 >> 4) & 0xD0A54B3 ^ 0x89598637)) & 0x1A342D4C)
                + 1595547558) ^ 0x4A53C736;
  v166 = v94 - ((2 * v94) & 0x2E6827C4) + 397743074;
  LODWORD(v94) = (((v164 >> 8) & 1 ^ 0xE50E9D01) - ((v164 >> 8) & 1) + (BYTE1(v164) ^ 0xC4)) ^ 0x641A1B13;
  LODWORD(v94) = ((((2 * v94) & 0x2090970) - v94 + 1283029831) ^ 0xC8027BE9) + 1;
  v167 = (((2 * (BYTE1(v164) ^ 0xCA)) | 0xC64F425C) - (BYTE1(v164) ^ 0xCA) + 483942098) ^ 0xE328F12A;
  LODWORD(v94) = ((((2 * v167) & 0x68488BB4) - v167 + 1272691237) ^ 0x4BD4EA9F)
               + (v94 ^ 0x6EF7DFEF)
               + ((2 * v94) & 0x5DEFBFDE)
               - 1861738479;
  v168 = v94 - ((2 * v94) & 0x433316D0) + 1637452648;
  LODWORD(v94) = ((2 * (BYTE4(v282) ^ 0x5B ^ BYTE4(v274) ^ 0xDA)) | 0xF8245292)
               - (BYTE4(v282) ^ 0x5B ^ BYTE4(v274) ^ 0xDA)
               - 2081565001;
  LODWORD(v94) = *(_DWORD *)&v122[4
                                * (((v94 & 0x701200B9 ^ 0xC3A80018) + (v94 & 0xC002F46 ^ 0x4003801) - 1) ^ 0xBBBA116F)];
  HIDWORD(v74) = v94 ^ 0x347D16;
  LODWORD(v74) = v94 ^ 0xDBC00000;
  LODWORD(v94) = (v74 >> 22) - ((2 * (v74 >> 22)) & 0x2816EF9E) + 336295887;
  LODWORD(v82) = (((v94 >> 1) & 0x7F33A859 ^ 0x62232018)
                + ((v94 >> 1) & 0x48312011 ^ 0x85C5201)
                - (((v94 >> 1) & 0x7F33A859 ^ 0x62232018) & 0x48312011)) ^ 0x40F5EA08;
  LOBYTE(v95) = v127[HIBYTE(v164) ^ 0x9BLL];
  LOBYTE(v95) = (((8 * (_BYTE)v95) ^ 0xC0) - ((2 * ((8 * (_BYTE)v95) ^ 0xC0)) & 0xDF) + 108) & 0xE8 ^ v95;
  v169 = v165 ^ *(_DWORD *)&v113[4 * (BYTE1(v164) ^ 0x7F)] ^ v94 ^ (v95
                                                                  - 2 * (v95 & 0x7F)
                                                                  - 899751297) ^ (((2 * v82) | 0xA1FD2852)
                                                                                - v82
                                                                                - 1358861353) ^ v294 ^ 0x72C04006 ^ v166 ^ v168;
  v170 = v98 ^ 0x39F1259C ^ v294 ^ 0x72C04006;
  HIDWORD(v272) = v169 ^ 0x34DE62C5 ^ v170;
  v171 = HIDWORD(v272) ^ HIDWORD(v282) ^ 0x37B02F5B;
  LODWORD(v274) = v164 ^ 0x5AA77EF2;
  v172 = v171 ^ 0xFACDF09 ^ v164 ^ 0x5AA77EF2;
  LODWORD(v94) = *(_DWORD *)&v103[4
                                * (((BYTE2(v172) ^ 0xD8)
                                  + (HIWORD(v172) & 0xA8 ^ 0xE9EF9220)
                                  - ((BYTE2(v172) ^ 0xD8) & 0xA8)) ^ 0xE9EF92FD)];
  HIDWORD(v74) = v94 ^ 0x12284;
  LODWORD(v74) = v94 ^ 0xF4A00000;
  v173 = (v74 >> 19) - ((2 * (v74 >> 19)) & 0x83C98D66) - 1041971533;
  LODWORD(v94) = (((v173 >> 4) & 0xD025482 ^ 0xA0F2E585) + ((v173 >> 4) & 0x80031) - 1) ^ 0xBDA1B3B3;
  v174 = (v94 | 0x4A412E65) - (v94 | 0xB5BED19A) - 1245785702;
  LODWORD(v94) = ((BYTE1(v172) ^ 0x82) - ((v172 >> 7) & 0x20) - 1628524016) ^ 0x9EAAB20E;
  LODWORD(v94) = ((((2 * v94) & 0x8007EC) - v94 - 1601813495) ^ 0xA5ADC2CF) + 1;
  LODWORD(v82) = ((BYTE1(v172) ^ 0xEA3B9A4B | 0xFC6E0B53) - (BYTE1(v172) ^ 0xEA3B9A4B | 0x391F4AC) + 59897004) ^ 0x50459125;
  LODWORD(v94) = (((v82 | 0xDD10B2B2) - (v82 | 0x22EF4D4D) + 586108237) ^ 0x9B00B2D9)
               + (v94 ^ 0xEFB6BA7E)
               + ((2 * v94) & 0x5F6D74FC)
               + 273237378;
  v175 = v94 - ((2 * v94) & 0x387734CC) + 473668198;
  LODWORD(v94) = (((v172 >> 8) & 0x79 ^ 0x4C1CEE08) + ((v172 >> 8) & 0x86 ^ 0x83) - 1) ^ 0xC3121E77;
  v176 = (((2 * v94) | 0xE5D86604) - v94 - 1928082178) ^ 0xFDE2C3A2;
  LOWORD(v94) = (v172 ^ 0xFA) + (v172 & 0xCC ^ 0xBB04) - ((v172 ^ 0xFA) & 0xCCCC);
  LODWORD(v94) = *(_DWORD *)&v122[4 * (((v94 & 0xBF4 ^ 0x25D17031) + (v94 & 0x40B ^ 0x80000008) - 1) ^ 0xA5D17B3D)];
  HIDWORD(v74) = v94 ^ 0x347D16;
  LODWORD(v74) = v94 ^ 0xDBC00000;
  LODWORD(v94) = (v74 >> 22) + 196505903 + (~(2 * (v74 >> 22)) | 0xE8931DA3);
  LODWORD(v82) = v127[HIBYTE(v172) ^ 0x8ALL];
  LODWORD(v95) = (((8 * v82) ^ 0xFFFFFFC0) - ((2 * ((8 * v82) ^ 0xFFFFFFC0)) & 0xFFFFFFBF) + 90) & 0xFFFFFFE8 ^ 0x58;
  LODWORD(v82) = v82 ^ 0xD6 ^ ((_DWORD)v95 - ((2 * (_DWORD)v95) & 0xC0) - 30);
  LODWORD(v94) = v173 ^ *(_DWORD *)&v113[4 * v176] ^ v94 ^ (v94 >> 1) & 0x7F33A859 ^ (v82
                                                                                                  - ((2 * v82) & 0x19E)
                                                                                                  - 934900529) ^ v174 ^ v175;
  LODWORD(v273) = v170;
  v177 = v170 ^ 0xDD1C51FB ^ v94;
  v178 = v177 ^ v171 ^ 0xFACDF09;
  v179 = v178 ^ 0x85971145 ^ v172 ^ 0xD7F941DD;
  LODWORD(v82) = (((2 * (BYTE2(v179) ^ 0xAB)) & 0x192) - (BYTE2(v179) ^ 0xAB) + 826242614) ^ 0x313772A2;
  LODWORD(v82) = *(_DWORD *)&v103[4
                                * (((v82 | 0xB477504B) - (v82 | 0x4B88AFB4) + 1267249076) ^ 0xB47F5468)];
  HIDWORD(v74) = v82 ^ 0x12284;
  LODWORD(v74) = v82 ^ 0xF4A00000;
  v180 = (v74 >> 19) - ((2 * (v74 >> 19)) & 0x108BC7A4) - 2008685614;
  LODWORD(v63) = v169 ^ 0xA72C501C ^ v94;
  LODWORD(v79) = ((((2 * (BYTE1(v179) ^ 0x7E53782A)) | 0x44FBBFE4) - (BYTE1(v179) ^ 0x7E53782A) - 578674674) ^ 0x594121FD)
               + 1;
  LODWORD(v97) = (((2 * (BYTE1(v179) ^ 0xB4)) & 0x3A) - (BYTE1(v179) ^ 0xB4) - 1408528926) ^ 0x9D6F8DB1;
  LODWORD(v97) = (v79 ^ 0xC7F768DF)
               + ((2 * (_DWORD)v79) & 0xFEED1BE)
               + 940087073
               + ((((2 * (_DWORD)v97) | 0x9989A642) - (_DWORD)v97 + 859516127) ^ 0xFDA0D3EF);
  LODWORD(v79) = (_DWORD)v97 - ((2 * (_DWORD)v97) & 0x2739810C) - 744701818;
  LODWORD(v94) = (BYTE1(v179) ^ 0xE2) - ((2 * (BYTE1(v179) ^ 0xE2)) & 0x130) + 1129677208;
  LODWORD(v97) = (v177 ^ BYTE4(v272) ^ BYTE4(v282) ^ 0x5B ^ 9) ^ 0x45 ^ v172 ^ 0xDD ^ 0xBE;
  LODWORD(v97) = ((v97 | 0x3E1C2363) - (v97 | 0xC1E3DC9C) - 1042031460) ^ 0xF6E8A3E3;
  LODWORD(v97) = *(_DWORD *)&v122[4 * ((((2 * (_DWORD)v97) & 0x7B7F6CAA) - (_DWORD)v97 + 1111509418) ^ 0x8AB4C9AA)];
  HIDWORD(v74) = v97 ^ 0x347D16;
  LODWORD(v74) = v97 ^ 0xDBC00000;
  LODWORD(v97) = (v74 >> 22) - ((2 * (v74 >> 22)) & 0xC42F23B2) - 501771815;
  LODWORD(v82) = v127[HIBYTE(v179) ^ 0x7ALL];
  LODWORD(v95) = ((((8 * v82) ^ 0xFFFFFFC0) - ((16 * v82) & 0x20) + 31) & 0xFFFFFFF8) - 8;
  LODWORD(v82) = v82 ^ 0xBC ^ ((v95 | 0x10) + ((2 * (_DWORD)v95) & 0x80) - 60);
  HIDWORD(v269) = v179 ^ 0xEF2E39C4;
  LODWORD(v270) = (_DWORD)v63;
  v181 = *(_DWORD *)&v113[4
                        * (((v94 & 0x4154BB0C ^ 0xC002B04)
                          + (v94 ^ 0xE374D0B9)
                          - ((v94 ^ 0xE374D0B9) & 0x2000BB0C)) ^ 0xCD75EAED)] ^ v180 ^ v97 ^ (v97 >> 1) & 0x7F33A859 ^ (v82 - ((2 * v82) & 0x142) - 1038158431) ^ v63 ^ v79 ^ 0x4CE18D54 ^ (((2 * ((v180 >> 4) & 0xD0A54B3 ^ 0x5845C20)) | 0xA7BF22DC) - ((v180 >> 4) & 0xD0A54B3 ^ 0x5845C20) - 1407160686);
  LODWORD(v271) = v177;
  v182 = v177 ^ 0xC3AFAD31 ^ v181;
  v183 = v182 ^ v178 ^ 0x85971145;
  LODWORD(v94) = ((v183 ^ v179 ^ 0xEF2E39C4) >> 16) ^ 0x74;
  LODWORD(v94) = *(_DWORD *)&v103[4 * ((((2 * (_DWORD)v94) | 0xD7EF8958) - v94 - 1811399852) ^ 0x6BF7C4C2)];
  HIDWORD(v74) = v94 ^ 0x12284;
  LODWORD(v74) = v94 ^ 0xF4A00000;
  v184 = (v74 >> 19) - ((2 * (v74 >> 19)) & 0x977730A2) - 876898223;
  v185 = v182 ^ v172 ^ 0xD7F941DD;
  LODWORD(v97) = ((BYTE1(v185) ^ 0x8A) - ((2 * (BYTE1(v185) ^ 0x8A)) & 0x172) - 336949831) ^ 0xEAF28EB9;
  LODWORD(v97) = (((_DWORD)v97 - ((2 * (_DWORD)v97) & 0x200C00) - 690635264) ^ 0xD2A23BFD) + 1;
  LODWORD(v94) = (((BYTE1(v185) ^ 0x9C00505B)
                 + ((v185 >> 8) & 0x88 ^ 0x22990B80)
                 - ((BYTE1(v185) ^ 0x9C00505B) & 0x10005088)) ^ 0xAE990BA8)
               + (v97 ^ 0xBF77CEEE)
               + ((2 * (_DWORD)v97) & 0x7EEF9DDC)
               + 1082667282;
  LODWORD(v63) = *(_DWORD *)&v122[4 * ((v183 ^ BYTE4(v269)) ^ 0x94)];
  HIDWORD(v74) = v63 ^ 0x347D16;
  LODWORD(v74) = v63 ^ 0xDBC00000;
  LODWORD(v63) = (v74 >> 22) - ((2 * (v74 >> 22)) & 0xDF8CBA24) - 272212718;
  LODWORD(v97) = (((v63 >> 1) & 0x7F33A859 ^ 0x1012A840)
                + ((v63 >> 1) & 0x24012809 ^ 0x248D5009)
                - (((v63 >> 1) & 0x7F33A859 ^ 0x1012A840) & 0x24012809)) ^ 0xC2C47C48;
  LODWORD(v82) = v151[((v183 ^ HIDWORD(v269)) >> 24) ^ 0xF3];
  LODWORD(v82) = v82 ^ (-((((8 * v82) ^ 0xFFFFFFC0) + (~(2 * ((8 * v82) ^ 0xFFFFFFC0)) | 0x7F) + 70) & 0xFFFFFFE8 ^ 0x50)
                      - 6);
  LODWORD(v269) = v181;
  v186 = *(_DWORD *)&v113[4
                        * (((BYTE1(v185) ^ 0xBF) + ((v185 >> 8) & 0x44 ^ 0x540) - ((BYTE1(v185) ^ 0xBF) & 0x44444444)) ^ 0x58B)] ^ v63 ^ v184 ^ ((_DWORD)v97 - ((2 * (_DWORD)v97) & 0xB249349C) - 651912626) ^ ((v82 ^ 0x82) - ((2 * v82) & 0xAA) - 122348203) ^ (((2 * ((v184 >> 4) & 0xD0A54B3 ^ 0xC021081)) | 0x6F0ECEB6) - ((v184 >> 4) & 0xD0A54B3 ^ 0xC021081) + 1215862949) ^ v181 ^ (v94 - ((2 * v94) & 0x63D4FC9A) + 1911193165) ^ 0xCD66EFC8;
  LODWORD(v98) = v183 ^ 0x3B78A246;
  LODWORD(v94) = (((v183 ^ HIDWORD(v269)) & 0xFFFFFDFF ^ 0x7432CDC2)
                + ((v183 ^ HIDWORD(v269)) & 0xE71B9D6A ^ 0x83091228)
                - (((v183 ^ HIDWORD(v269)) & 0xFFFFFDFF ^ 0x7432CDC2) & 0xE71B9D6A)) ^ 0x2B1B1B22;
  v187 = ((2 * v94) | 0x7585DF8C) - v94 - 985853894;
  LODWORD(v97) = (v183 ^ HIDWORD(v269)) & 0x200;
  v188 = v97 | 0x58B448A7;
  HIDWORD(v268) = v182;
  v189 = v186 ^ v182;
  LODWORD(v267) = (_DWORD)v98;
  v190 = v186 ^ v182 ^ v98;
  v191 = (v97 & ~v190) == 0;
  v192 = -1318547122 - (v97 | 0x58B448A7);
  if (v191)
    v192 = v188;
  v193 = ((v190 ^ 0x12845693)
        - 1488210087
        + v192
        - 2 * (((v190 ^ 0x12845693) - 1488210087 + v192) & 0x1F1FC97F ^ (v190 ^ 0x12845693) & 3)
        - 1625306756) ^ v187;
  v194 = (((2 * (BYTE2(v193) ^ 0x5A)) | 0x46B6DBB0) - (BYTE2(v193) ^ 0x5A) + 1554289192) ^ 0x25FB6DDC;
  v195 = *(_DWORD *)&v103[4 * ((v194 - ((2 * v194) & 0xD1C1B0E4) + 1759565938) ^ 0xEE40D84F)];
  HIDWORD(v196) = v195 ^ 0x12284;
  LODWORD(v196) = v195 ^ 0xF4A00000;
  v197 = (v196 >> 19) - ((2 * (v196 >> 19)) & 0x35FE7C2) - 2119175199;
  v198 = (BYTE1(v193) ^ 0xE0)
       + (((BYTE1(v193) ^ 0x56F86EC) + 1) ^ 0xBFCDFAEF)
       + ((2 * ((BYTE1(v193) ^ 0x56F86EC) + 1)) & 0xA9B05DE)
       + 1077019921;
  v199 = *(_DWORD *)&v113[4
                        * ((((2 * (BYTE1(v193) ^ 0x804003CF)) & 0x800328) - (BYTE1(v193) ^ 0x804003CF) + 187051627) ^ 0x8B662D4F)];
  v200 = ((v193 ^ 0x62) - ((2 * (v193 ^ 0x62)) & 0xF0) - 631872392) ^ 0xFA46E779;
  v201 = *(_DWORD *)&v122[4 * ((((2 * v200) & 0x4020014A) - v200 + 446734170) ^ 0x3AB01C38)];
  HIDWORD(v196) = v201 ^ 0x347D16;
  LODWORD(v196) = v201 ^ 0xDBC00000;
  v202 = (v196 >> 22) - ((2 * (v196 >> 22)) & 0x851FFA1A) - 1030750963;
  LODWORD(STACK[0x200]) = v193 ^ 0x5F0806F7;
  v203 = v151[HIBYTE(v193) ^ 0xC7];
  v204 = v203 ^ 0x22 ^ (((((8 * v203) ^ 0xFFFFFFC0) - ((2 * ((8 * v203) ^ 0xFFFFFFC0)) & 0xFFFFFFBF) - 40) & 0xE8 ^ 0xD8)
                      - 10);
  HIDWORD(v267) = v186;
  v205 = v199 ^ v197 ^ v202 ^ (((v197 >> 4) & 0xD0A54B3 ^ 0x80A54A3)
                             + ((v197 >> 4) & 0xD0044A3 ^ 0x55F1234C)
                             - (((v197 >> 4) & 0xD0A54B3 ^ 0x80A54A3) & 0xD0044A3)) ^ (v204
                                                                                     - ((2 * v204) & 0x1D6)
                                                                                     + 711964395) ^ (((2 * ((v202 >> 1) & 0x7F33A859 ^ 0x69022010)) | 0xEF5DCA82) - ((v202 >> 1) & 0x7F33A859 ^ 0x69022010) + 139532991) ^ v186 ^ (v198 - ((2 * v198) & 0x72B05E) - 2143725521) ^ 0xCAB5DE38;
  v206 = (v283 ^ 0x4B3331DA)
       + (((HIDWORD(v282) ^ 0xC0845A86) - 579599576) ^ 0x7673EB7D)
       + ((2 * ((HIDWORD(v282) ^ 0xC0845A86) - 579599576)) & 0xECE7D6FA)
       - 1987308413;
  v207 = ((v206 - ((2 * v206) & 0xF628AC9C) - 82553266) ^ 0xFB14564E) + 1939570074;
  v208 = (HIDWORD(v283) ^ 0xD0859C3C) + (v207 ^ 0x5EF6F6CF) + ((2 * v207) & 0xBDEDED9E) - 1593243342;
  HIDWORD(v270) = v178;
  v209 = (v208 ^ 0x17E76A31) + ((2 * v208) & 0x2FCED462) - 401041969 + (v178 ^ 0xF5720268);
  v210 = (v209 - ((2 * v209) & 0x4D7B0FE2) - 1497528335) ^ 0xA6BD87F1;
  HIDWORD(v265) = v210 - ((2 * v210 - 1891954158) & 0x95D6B2A4) + 310960731;
  LODWORD(v268) = v182 ^ v172 ^ 0xD7F941DD;
  v211 = (((HIDWORD(v265) ^ 0xCAEB5952) + (v185 ^ 0x5BCBDF7D) + 1) ^ 0xFF5F9389)
       + ((2 * ((HIDWORD(v265) ^ 0xCAEB5952) + (v185 ^ 0x5BCBDF7D) + 1)) & 0xFEBF2712)
       + 284402157
       + (v189 ^ 0xAFE0AB8A);
  v212 = (v289 ^ 0xFDA46EE1) + (v211 ^ 0x3C97FFBB) + ((2 * v211) & 0x792FFF76) - 850928896;
  v213 = ((2 * v212) & 0xAFEFD7EC) + (v212 ^ 0x57F7EBF6);
  v214 = (v213 - 1475865590);
  LODWORD(v265) = (v289 ^ 0x25B911E ^ v214) - ((2 * (v289 ^ 0x25B911E ^ v214)) & 0xC909C3C6) + 1686430179;
  v215 = v213 - ((2 * v213 - 69301612) & 0xCAAEF486) - 481902707;
  v266 = __PAIR64__(v189, v205);
  v216 = v205 ^ v189;
  v217 = ((2 * (v213 + 237051347 + (v216 ^ 0x8702940F))) & 0xFF7FB5AE)
       + ((v213 + 237051347 + (v216 ^ 0x8702940F)) ^ 0xFFBFDAD7);
  LODWORD(v272) = HIDWORD(v272) ^ HIDWORD(v282) ^ 0x37B02F5B;
  v218 = (v171 ^ 0x489A7391)
       + ((v217 - 2 * ((v217 + 1764440464) & 0x71F232AE ^ v217 & 4) + 1528654906) ^ 0xF1F232AA)
       + 1;
  v219 = ((2 * v218) & 0xFCEDBFEE) + (v218 ^ 0x7E76DFF7);
  v220 = v219 - ((2 * v219 - 1191478782) & 0xD09C8CD6) - 993262740;
  HIDWORD(v271) = v172;
  HIDWORD(v273) = v169;
  v221 = (v169 ^ 0x49E36D2C)
       + (((v172 ^ 0xB3704656)
         + 650292765
         + v219
         - ((2 * ((v172 ^ 0xB3704656) + 650292765 + v219)) & 0x5830C13A)
         - 1407688547) ^ 0xAC18609D)
       + 1;
  v222 = ((v221 - ((2 * v221) & 0x41FF0F6E) - 1593866313) ^ 0xA0FF87B7) - 1445969421;
  v223 = (v292 ^ 0x14FA07CE) + (v222 ^ 0xFDA9BF3B) + ((2 * v222) & 0xFB537E76) + 39207109;
  v224 = v223 - ((2 * v223) & 0x3B817C4A) - 1648312795;
  v225 = (char *)*(&off_10112C750 + (a3 ^ 0x3E70)) - 2114513351;
  v226 = (char *)*(&off_10112C750 + a3 - 11586) - 1982665875;
  v227 = (char *)*(&off_10112C750 + (a3 ^ 0x3A56)) - 721558951;
  v228 = *(_DWORD *)&v226[4 * (v296[14] ^ 0xE6)];
  v229 = v228 - ((2 * v228 + 1992499980) & 0x4582C9B4u) - 1641875872;
  v230 = (char *)*(&off_10112C750 + a3 - 12722) - 1375485475;
  v231 = *(_DWORD *)&v230[4 * (v296[8] ^ 0x4BLL)];
  v232 = (v231 ^ 0x17BD79A) + 1;
  v231 ^= 0x87B214A1;
  v233 = v231 + (v232 ^ 0x5DFCCD97) + ((2 * v232) & 0xBBF99B2E) - 1576848791;
  v234 = ((v233 - ((2 * v233) & 0xC0827110) - 532596600) ^ 0x1FBEC770) + v231;
  v235 = v234 - ((2 * v234) & 0xC492F3EC) - 498501130;
  v236 = *(_DWORD *)&v226[4 * (v296[6] ^ 0x25)];
  v237 = v236 - ((2 * v236 + 1992499980) & 0x6EA45BAEu) + 850640733;
  v238 = v296[7];
  v239 = ((2 * (v238 ^ 0x60)) & 0xF6) + (v238 ^ 0xDF59DA9B);
  v240 = (v238 ^ 0x301503C2) - ((2 * (v238 ^ 0x80)) & 0x17A) + v239 + 1;
  v241 = v225[v239
                             + 547759493
                             + ((v240 - ((2 * v240 + 555893892) & 0x3F604FF6) - 1874769347) ^ 0x604FD83B)]
       + 127;
  v242 = v241 - ((2 * v241) & 0xC2) + 687530337;
  v243 = ((2 * v215) ^ 0xCAAEF486) - ((2 * ((2 * v215) ^ 0xCAAEF486)) & 0x6AFE204) + 458748162;
  v244 = v213 + (v243 & 0x864AFD6 ^ 0xA804A511) + ((2 * v243) & 0x10495788 ^ 0xEFF6BDFF);
  HIDWORD(v196) = v224 ^ 0xBE25;
  LODWORD(v196) = v224 ^ 0x9DC00000;
  v245 = (v196 >> 16) - ((2 * (v196 >> 16)) & 0x34DBA51A) - 1704078707;
  HIDWORD(v196) = v245 ^ 0xC7B9;
  LODWORD(v196) = v245 ^ 0xC3EC0000;
  v246 = *(_DWORD *)&v230[4 * (v296[12] ^ 0xF1)];
  v247 = v229 ^ v246 ^ (v246 >> 7) ^ (v246 >> 3) ^ *(_DWORD *)&v227[4 * (v296[13] ^ 0x3ELL)] ^ ((v225[v296[15] ^ 0xBALL] + 127) - ((2 * (v225[v296[15] ^ 0xBALL] + 127)) & 0x28) - 548294636) ^ 0xA39FC035;
  v248 = *(_DWORD *)&v230[4 * (v296[4] ^ 0x4BLL)];
  HIDWORD(a53) = *(_DWORD *)&v227[4 * (v296[5] ^ 0xA3)] ^ v237 ^ v242 ^ v248 ^ (v248 >> 3) ^ (v248 >> 7) ^ 0x4BADF47E;
  HIDWORD(v264) = (v214 & 0xFFFBFFFF) - ((2 * v214) & 0x2870BECA) - 1807982747;
  v249 = v294 ^ 0x218CE8D6 ^ v220;
  LODWORD(v225) = ((2 * (v249 & 0xB23ABC5 ^ 0x2B012975)) | 0x6AA27D1E) - (v249 & 0xB23ABC5 ^ 0x2B012975) - 894516879;
  v250 = (((2 * (v249 & 0xF4DC543A ^ 0x44980038)) | 0x9258A76A) - (v249 & 0xF4DC543A ^ 0x44980038) - 1227641781) ^ 0x5A84D8B4;
  v251 = (v250 - ((2 * v250) & 0xD8459134) + 1814218906) ^ 0x6F460793 | v225 ^ 0x15503EBF;
  LODWORD(v264) = v297 + 337653891;
  HIDWORD(v263) = v224 ^ v292 ^ ((v196 >> 16) - ((2 * (v196 >> 16)) & 0xFD150FD4) + 2123007978);
  LODWORD(v263) = (v251 - ((2 * v251) & 0x23B99690) + 299682632) ^ v220;
  v252 = v190 ^ 0x257B4D09;
  HIDWORD(v262) = v215 ^ v252 ^ (v244 + 1 - 2 * ((v244 + 31562019) & 0xF94FF95 ^ (v244 + 1) & 1) - 243885898);
  HIDWORD(a29) = v216;
  LODWORD(v262) = v216 ^ v252;
  HIDWORD(v261) = (v213 + 5130) & 0x40000;
  HIDWORD(v260) = -118244728 - (HIDWORD(v261) | 0x7C79DD44);
  LODWORD(v261) = HIDWORD(v261) | 0x7C79DD44;
  LODWORD(v260) = LODWORD(STACK[0x208]) - 5603;
  HIDWORD(v259) = LODWORD(STACK[0x208]) - 9687;
  LODWORD(v259) = LODWORD(STACK[0x208]) ^ 0x3BD3;
  HIDWORD(v258) = LODWORD(STACK[0x208]) - 11208;
  LODWORD(v258) = LODWORD(STACK[0x208]) ^ 0x3509;
  HIDWORD(v257) = LODWORD(STACK[0x208]) ^ 0x25D0;
  LODWORD(v257) = LODWORD(STACK[0x208]) ^ 0x366D;
  HIDWORD(v256) = LODWORD(STACK[0x208]) ^ 0x30E1;
  LODWORD(v256) = LODWORD(STACK[0x208]) ^ 0x3E18;
  LODWORD(v255) = LODWORD(STACK[0x208]) - 13003;
  HIDWORD(v255) = 68093;
  HIDWORD(v254) = LODWORD(STACK[0x208]) ^ 0x3EC3;
  LODWORD(v254) = LODWORD(STACK[0x208]) - 12462;
  HIDWORD(a13) = LODWORD(STACK[0x208]) - 10456;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a51 + 8 * a3) - 4))(v214, v247, 2745155637, v213, v229, v237, v235, *(_DWORD *)&v226[4 * (v296[10] ^ 0x7ALL)]- ((2 * *(_DWORD *)&v226[4 * (v296[10] ^ 0x7ALL)] + 113451788) & 0x7F0CC10u), a9, a10, a11, a12, a13, v254, v255, v256, v257, v258,
           v259,
           v260,
           v261,
           v262,
           v263,
           v264,
           v230,
           v227,
           v226,
           (char *)*(&off_10112C750 + (a3 ^ 0x3E70)) - 2114513351,
           a29,
           v265,
           v266,
           v267,
           v268,
           v269,
           v270,
           v271,
           v272,
           v273,
           v274,
           v275,
           v276,
           v277,
           v278,
           v279,
           v280,
           v281,
           v282,
           v283,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           v284,
           v285);
}

#error "100063974: call analysis failed (funcsize=4460)"

uint64_t sub_100063978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v45;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 + 8 * (LODWORD(STACK[0x208]) + 1824)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

void sub_1000639C4(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  unint64_t v4;

  v1 = *(_DWORD *)(a1 + 8) - 263575687 * (((a1 | 0x75246390) - a1 + (a1 & 0x8ADB9C6F)) ^ 0xED04A3D6);
  v2 = ((((v1 + 500895981) & 0x69967FBF) - 0x7A6A9464EF2C2EF7) & (2 * *(_QWORD *)(a1 + 16)))
     - *(_QWORD *)(a1 + 16)
     + 0x3D354A327795EA39;
  v4 = 2 * (v2 | (unint64_t)&v3) - (v2 ^ (unint64_t)&v3);
  v3 = v4 - 965932961;
  __asm { BR              X3 }
}

uint64_t sub_100063B28(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  _BOOL4 v9;

  v7 = 2 * (v4 & 1) + (v4 ^ 1);
  v9 = *(_QWORD *)(v5 + 8) == v5 || v7 > 0x13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((v9 * a3) ^ v3)) - 4))();
}

uint64_t sub_100063BA4(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * (int)((v1 - 84514934 + v1 - 84530672) ^ (18043 * (v1 > 0x83A5C087)))) - 8))(a1, 34, (v1 - 84530672) ^ 0x1207, -105745659, 3460727823, 143934760, 575220290, 354586772);
}

uint64_t sub_100063C5C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)(v6 ^ ((((((v3 + v0) | v2) ^ v1) & (~v1 - ((v3 + v0) | v2)) | ~((v3 + v0) | v2) & ~v1) >> 31)
                                                    * v5)))
                            - 8))();
}

uint64_t sub_100063D44(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;

  v14 = *a1;
  v15 = *(_QWORD *)(v12 + 8 * (v10 - 610));
  v16 = *(unsigned int *)(v15 - 634675579);
  v17 = ((((-130290961 * v11) | a10) << (((v10 - 87) | 2) + 43)) - ((-130290961 * v11) ^ a10)) ^ a10;
  v18 = *(_QWORD *)(v12 + 8 * (v10 ^ 0x4EE)) + 4 * v16;
  v19 = *(_DWORD *)(v18 - 1841666295);
  v20 = v17 + v17 * v19;
  if (v17)
    v21 = 0;
  else
    v21 = *(_DWORD *)(v18 - 1841666295);
  *(_DWORD *)(v18 - 1841666295) = (v21 + v20) * v19;
  *(_DWORD *)(v15 - 634675579) = ((int)v16 + 1) % 6u;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((34663 * (v14 != 0x64CF0D0F10F76273)) ^ v10)) - 12))();
}

uint64_t sub_100063E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (((16 * (*(_QWORD *)(v9 - 0x64CF0D0F10F7621BLL) != 0x6CA6F0EE111A2BB6)) | (32 * (*(_QWORD *)(v9 - 0x64CF0D0F10F7621BLL) != 0x6CA6F0EE111A2BB6))) ^ (v7 + 7910))) - ((v10 + v7 + 2022620331 + 2048) | 0x52Eu) + 3363))(a1, a2, a3, a4, a5, a6, a7, 2022620344, v9 - 0x64CF0D0F10F7621BLL);
}

uint64_t sub_100063ECC()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(2022623698 - (v0 - v2 - 3374) + *(_QWORD *)(v1 + 8 * (v0 ^ 0x326F)) - 8))();
}

uint64_t sub_100063F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9, int a10)
{
  uint64_t v10;

  *a9 = 0x6CA6F0EE111A2BB6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (a10 - 2022612421)) - 12))();
}

uint64_t sub_100063F54@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((5912 * (*(_QWORD *)(v3 - 0x64CF0D0F10F7622BLL) != 0)) ^ (v1 + a1 + 2744)))
                            - 12))();
}

uint64_t sub_100063F94@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v2 + a1 + 16191)) - 12))();
}

uint64_t sub_100063FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  int v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v12 - 0x64CF0D0F10F7622BLL) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (v10 + a10 + 2744)) - 12))();
}

uint64_t sub_100063FE8@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((9394 * (*(_QWORD *)(v4 - 0x64CF0D0F10F7620BLL) != 0x6CA6F0EE111A2BB6)) ^ (a2 + v2)))
                            - ((a2 - a1) ^ 0xD16)))();
}

uint64_t sub_100064040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(2022623698 - (v8 ^ (a8 + 2064)) + *(_QWORD *)(v9 + 8 * (v8 ^ 0x325E)) - 8))();
}

uint64_t sub_100064088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  int v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v12 - 0x64CF0D0F10F7620BLL) = 0x6CA6F0EE111A2BB6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (a10 + v10)) - 8))();
}

uint64_t sub_1000640C4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((40210
                                          * (((*(_QWORD *)(v2 - 0x64CF0D0F10F761FBLL) == 0) ^ (v4 + a1 + 42)) & 1)) ^ (v3 + a1 + 2607)))
                            - (a1 - 2022608274)
                            + 15424))();
}

uint64_t sub_100064128()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v4 = sub_100DD0758();
  *v3 = 0;
  *(_QWORD *)(v2 - 0x64CF0D0F10F761F3) = 0x2E59505C36D6656DLL;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * v0) - ((v0 - 12057) ^ 0xD2FLL)))(v4);
}

uint64_t sub_100064184()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(v0 + v2 + ((v0 + 2126442707) & 0xF9CFCBD7))) - 12))();
}

uint64_t sub_1000641C8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 + v2 + 53)) - (a1 + v2) + 37539))();
}

uint64_t sub_100064218()
{
  int v0;
  int v1;
  uint64_t v2;

  __clrex();
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ v0)) - 4))();
}

uint64_t sub_100064238()
{
  int v0;
  uint64_t v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;

  v5 = (unsigned int *)(*(_QWORD *)(v4 + 8 * v0) + v1);
  while (1)
  {
    v6 = __ldaxr(v5);
    if (v6 != v2)
      break;
    if (!__stlxr(v3, v5))
      JUMPOUT(0x100064220);
  }
  return sub_100064218();
}

uint64_t sub_10006425C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 8 * (v0 ^ 0xAF92)) - 1624708666) == (((v0 - 104) | 0x44) + 43)
    && *(_DWORD *)(*(_QWORD *)(v1 + 8 * (v0 ^ 0xAC2E)) - 1652908582) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((491 * v4) ^ v0)))();
}

uint64_t sub_1000642BC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((((v0 - 1963598640) & 0x7509AB7F)
                                                + ((v0 + 2144224997) & 0xF8BFDFF6)
                                                - 2022634683)
                                               * (v1 == 0)) ^ (v0 - 30667)))
                            - 4))();
}

uint64_t sub_100064320()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((31285
                                          * (((3 * (v0 ^ 0x33DB)) ^ 0x358C01A5B82F1945) + *(_QWORD *)(v1 - 16) >= 0)) ^ v0))
                            - 4))();
}

uint64_t sub_100064378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8
                                                                                                  + 8 * ((7 * (*(_QWORD *)(v6 - 16) == 0x4A73FE5A47D0AEF2)) ^ v7))
                                                                                      - 12))(8 * (*(_QWORD *)(v6 - 16) == 0x4A73FE5A47D0AEF2), a2, a3, a4, a5, a6);
}

uint64_t sub_10006454C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, unsigned __int8 a13)
{
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;
  _BOOL4 v21;

  v16 = ((((_DWORD)v14 - 1204858634) << (((v13 - 103) ^ 0xA7) + (v13 ^ 0xE5))) & 0xCAADCFC8)
      + ((v14 - 1204858634) ^ 0x6556E7E4);
  v17 = ((a13 ^ 0xF7E37FAF) + 136085538 + ((2 * (a13 ^ 0x70)) & 0x1BC)) % (1700194252 - v16);
  v18 = v16 + ((2 * v17) & 0x5EFBEBD4) + (v17 ^ 0x2F7DF5EA);
  if ((v18 + 1797989188) >= 0xFB)
    v19 = 477905274;
  else
    v19 = -1320083914 - v18;
  v21 = v14 != 0x4A73FE5A47D0AEF1 && v19 != 477905024;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (((2 * v21) | (8 * v21)) ^ v13)) - 12))();
}

uint64_t sub_100064654(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  unint64_t v12;

  v8 = (a1 - 557900928) | ((unint64_t)(a1 - 557900928 < ((v5 - 809508406) & 0x303FFFCBu)
                                                                           + 238872096) << 32);
  v12 = v8 - 716788202 + (v6 | ((unint64_t)(v6 < a4) << 32));
  v8 += 469477520;
  v9 = (v8 < 0x2A38B9FA) ^ (v12 > 0xFFFFFFFFD5C74605);
  v10 = v12 + 708360698 > v8;
  if ((_DWORD)v9)
    v10 = v12 > 0xFFFFFFFFD5C74605;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                          + 8 * ((56626 * v10) ^ v5))
                                                                              - 12))(56626, v9, a3, a4, a5);
}

uint64_t sub_10006470C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (v0 + 12599))
                                                                              - 4))(11248, 3282505080, 38, 19, 50857);
}

uint64_t sub_1000647A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  char v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  _BOOL4 v15;

  v13 = v9 - 1;
  v14 = (((v6 ^ (v10 - 49) ^ a1) + v11 - (a2 & (2 * (v6 ^ (v10 - 49) ^ a1)))) ^ v11) * (v10 - 32);
  *(_BYTE *)(v5 + v13) = (v14 - (a3 & (2 * v14)) + 19) ^ a4;
  v15 = v13 + 708360698 > v7;
  if (v7 < 0x2A38B9FA != v13 > 0xFFFFFFFFD5C74605)
    v15 = v13 > 0xFFFFFFFFD5C74605;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12
                                                                                          + 8 * (int)((v15 * a5) ^ v8))
                                                                              - 12))(a1, a2, a3, a4, a5);
}

uint64_t sub_100064844()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * v0)
                                                                    - ((2 * v0) ^ 0x9C60u)
                                                                    + 18856))(((2 * v0) ^ 0x9C60u) - 959829445, 145, 9054, 1);
}

uint64_t sub_1000648C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);

  v10 = (v6 - 90584161) ^ v7;
  v11 = v10 & a1 ^ (v6 - 90584161) & 4;
  v12 = ((v10 + v9 - 2 * v11) ^ v9) * (v6 - 90584144);
  v13 = (2 * v12) & 0x22222222;
  *(_BYTE *)(v4 + a4 - 1) = (v12 - ((2 * v12) & 0x22) - 111) ^ a2;
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (((a4 != 1) * (int)a3) ^ v5))
                                                                                             - 12);
  return v14(a1, a2, a3, a4 - 1, v14, v13, v11);
}

uint64_t sub_100064944()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((*(_QWORD *)(v0 + 0x4A73FE5A47D0AF0ALL - *(_QWORD *)(v1 - 16)) == 0x4A73FE5A47D0AF0ALL)
                                          * ((v2 + 2022612620) ^ 0x788E7B71)) ^ v2))
                            - ((29 * (v2 ^ 0x29BCu)) ^ 0x55DALL)))();
}

uint64_t sub_1000649B4()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v3 + 8 * (v2 - 21011));
  *(_QWORD *)(v5 - 1923722775) += v1 + ((v2 + 1200) ^ 0xB58C01A5B82F0A78);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * (int)(((*v0 == 0x4A73FE5A47D0AF0ALL)
                                                             * (((v2 + 1990338944) & 0x895DABEB) - 10060)) ^ v2))
                                          - 8))(0x4A73FE5A47D0AF0ALL - *v0);
}

uint64_t sub_100064A40()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1782 * (*(_QWORD *)(*(_QWORD *)(v1 - 1923722735) + 24) == v1 - 1923722767)) ^ v0))
                            - ((v0 - 102775668) & 0x7EAED9FF ^ 0x788EC9D2)))();
}

uint64_t sub_100064A9C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((*(_QWORD *)(*(_QWORD *)(v1 + 72) + 32) == v2)
                                               * (((v0 + 2030019212) & 0xFF8EFBFF) - 2022616307)) ^ v0))
                            - 4))();
}

uint64_t sub_100064AE8()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v6 = v2 + 3165;
  *v1 = v4;
  v1[1] = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(v3 + 80) = v0;
  *(_QWORD *)(v1[1] + 24) = v0;
  *(v1 - 2) = ((v6 - 7970) | 0x4Au) - *(v1 - 2) - 0x6B18034B705EBABBLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * v6) - 4))();
}

uint64_t sub_100064B40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((((v3 + 1074013574) | 0x388A49C2) ^ 0x788ED7AC ^ (4749 * (v3 ^ 0x5A8D)))
                                          * (*(_QWORD *)(v1 + a1 + 8) == v2)) ^ v3))
                            - 12))();
}

uint64_t sub_100064BA0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 8) = v3 - *(_QWORD *)(v1 - 16) + 0x4A73FE5A47D0963BLL + (v2 - 7896);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * v2) - 4))();
}

uint64_t sub_100064BEC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((unint64_t)(*(_QWORD *)(v0
                                                                + *(_QWORD *)(v1 - 0x4419796044B4DC32)
                                                                - 0x4A73FE5A47D0AF0ALL
                                                                + 8)
                                                    - 0x4A73FE5A47D0AF0BLL) < 0x7FFFFFFFFFFFFFFFLL)
                                * (((v2 - 6287) | 0x2B0A) + 26971)) ^ v2)))();
}

uint64_t sub_100064C6C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((50096
                                          * (*(_QWORD *)(v0
                                                       + ((6 * (((v1 + 1208505654) | 0x30864956) ^ 0x788ECEE1u)) ^ 0xB58C01A5B82F7BBCLL)
                                                       + v2) == v2)) ^ (v1 + 12100)))
                            - 12))();
}

uint64_t sub_100064CDC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(2022623698
                            - (v1 + 2022612620)
                            + *(_QWORD *)(v2 + 8 * ((6573 * (*(_QWORD *)(*(_QWORD *)(v0 + 32) + 24) == v0)) ^ v1))))();
}

uint64_t sub_100064D1C()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (int)((42023 * (*(_QWORD *)(*(_QWORD *)(v0 + 24) + 32) == v0)) ^ v1))
                            - ((v1 ^ 0xFFFFFFFF1B7A97A3)
                             + ((v1 - 455259051) & 0xFFA7CB7B))))();
}

uint64_t sub_100064D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;

  *(_QWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v4[3] + 32) = v4[4];
  *v3 += v4[1] + a3;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)((10623 * (v7 < ((v7 + 2039672003) & 0xA1E7FB6B) + 1350880637)) ^ (v7 + 461034932))))();
}

uint64_t sub_100064E00()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v1 + 0x358C01A5B82F50F6 >= 0)
                                          * (((v0 + 1074535884) | 0x388280C0) ^ 0x788ED3B0)) ^ v0))
                            - 4))();
}

uint64_t sub_100064E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned __int8 a11)
{
  uint64_t v11;
  uint64_t *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v11 + v15) = v14;
  v17 = *(&a11 + ((v13 ^ 0x49u) & (unint64_t)a11 ^ 1));
  v18 = *v12;
  v19 = (*v12 + a3) / (((v13 + 679859784) | 0x5008C844u) ^ 0x788EC9D2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v16
                                        + 8
                                        * ((44838
                                          * ((((_DWORD)v18 - 1204858634) ^ 0xFF5FFE3F)
                                           - (((unsigned __int16)(((v17 ^ 0xFFDEF80E)
                                                                 + 2164609
                                                                 + 2 * ((v17 ^ 0xF1) & 0x7F))
                                                                % (((_DWORD)v19
                                                                  - ((2 * (_DWORD)v19) & 0x705A94C0)
                                                                  + 942492256) ^ 0x382D4A60u))
                                             + 43) & 0x1FC)
                                           + ((2 * ((_DWORD)v18 - 1204858634)) & 0xFEBFFC7E)
                                           + 2059052161
                                           - 2048565977 < 0x7FFFFFFF)) ^ v13))
                            - 4))();
}

uint64_t sub_100064F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  BOOL v21;
  unint64_t v22;

  v17 = v13 ^ 0x2B4Au;
  v18 = *(unsigned __int8 *)(v14 | a12 & 3 ^ 1) ^ 0xF6 ^ ((v17 ^ (a8 + 3358)) - 2022604623);
  v19 = (int)((v18 ^ 0xDDDDB7F6) + ((2 * v18) & 0x1EC) + 572672010) % (v12 + v15 + 1);
  v20 = (v19 ^ 0xDD7F1EDE) + 651163648 + ((2 * v19) & 0xBAFE3DBC);
  v21 = (_DWORD)v20 == 72292062;
  v22 = (v20 | ((unint64_t)(v20 < 0x44F16DE) << 32)) - 72292062;
  if (v21)
    v22 = 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 + 8 * (int)((((v22 - v17) | (v17 - v22)) >> 63) | (16 * (((v22 - v17) | (v17 - v22)) >> 63)) | (v17 + 23182))) - 12))(492, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_100065054()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 8 * v0)
                                                                                      - ((v0 - 19079) ^ 4)))(1248606855, 3271230557, 216, 236, 25037, (v0 - 19079) ^ 0x2B4Au);
}

uint64_t sub_100065110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t);
  uint64_t v18;

  v18 = v8 - 1;
  v15 = ((v9 + ((v11 + v7) ^ v12) - (v13 & (2 * ((v11 + v7) ^ v12))) + a1) ^ a2) * (v11 + v7 + 17);
  *(_BYTE *)(v6 + v18) = (v15 - (a3 & (2 * v15)) - 20) ^ a4;
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 + 8 * (int)(a6 ^ ((((v18 - v10) | (unint64_t)(v10 - v18)) >> 63) * a5))) - 4);
  return v16(a1, a2, a3, a4, a5, a6, v16, 2022620344);
}

uint64_t sub_100065184@<X0>(uint64_t (*a1)(void)@<X8>)
{
  _DWORD *v1;

  *v1 = 23958;
  return a1();
}

void sub_1000651B0(uint64_t a1)
{
  int v1;
  BOOL v4;
  uint64_t v5;

  v1 = *(_DWORD *)(a1 + 20) - 1891100677 * ((-1778077189 - (a1 | 0x9604B1FB) + (a1 | 0x69FB4E04)) ^ 0x5F36F94);
  v5 = *(_QWORD *)(a1 + 8);
  v4 = (unint64_t)*(&off_10112C750 + v1 - 20841) + 0x8984546B8A58392 - v5 - 813018378 < 0x10
    || (unint64_t)*(&off_10112C750 + v1 - 18551) + 0x8984546B8A58392 - v5 - 1167420346 < 0x10
    || (unint64_t)*(&off_10112C750 + (v1 ^ 0x518D)) + 0x8984546B8A58392 - v5 - 1278437990 < 0x10;
  __asm { BR              X0 }
}

uint64_t sub_10006B7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int8x16_t a15)
{
  uint64_t v15;
  uint64_t v16;
  int v17;

  *(int8x16_t *)(a2 + v15) = veorq_s8(a15, (int8x16_t)xmmword_100DF75A0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * v17) - (v17 + 38) + 23387))();
}

uint64_t sub_10006B80C@<X0>(int a1@<W4>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)(v14 + v15 - 1041408572) = *(&a9 + v15 - 1041408572) ^ *(_BYTE *)(a2 + v15 - 1041408572) ^ (-83 * (v15 - 60)) ^ *(_BYTE *)(v10 + v15 - 1041408572) ^ *(_BYTE *)(v11 + v15 - 1041408572) ^ 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((((v12 ^ (v15 - 1 == v9)) & 1) * a1) ^ v12))
                            - 4))();
}

void sub_10006B874()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 16) = 2134650450;
}

void sub_10006B8C0(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_10006B9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  BOOL v28;
  int v30;

  v20 = *(_QWORD *)(v18 + 32);
  v21 = *(_QWORD *)(v18 + 48);
  v22 = *(_DWORD *)(v18 + 56);
  v23 = *(_QWORD *)(v18 + 16);
  v24 = *(_QWORD *)(v18 + 8) ^ 0x26292E1E9BFAC413;
  v25 = v24 & 0x4914924294251494;
  v26 = (v24 & 0x224929284A90A249 ^ (unint64_t)&STACK[0x208] & 0x224929284A90A248 | (2
                                                                                              * (v24 & (unint64_t)&STACK[0x208] & 0x224929284A90A248)))
      + 2 * (v24 & (unint64_t)&STACK[0x208] & 0x94A24495214A4920)
      + ((((unint64_t)&STACK[0x208] & 0x94A24495214A4920) - (v24 & 0x94A24495214A4922) + 0x2944892A42949244) & 0x94A24495214A4922)
      + (((((a4 - 1074088188) ^ 0x49149242942501D8) & (unint64_t)&STACK[0x208] | 0x12292485284A2928)
        - (v24 & 0x4914924294251494)) & 0x4914924294251494 | (2
                                                                * (((a4 - 1074088188) ^ 0x49149242942501D8) & (unint64_t)&STACK[0x208] & v24)));
  STACK[0x210] = v26;
  LODWORD(STACK[0x208]) = (v26 & 0x2491488A)
                        + ((2 * v26) & 0x20484A40)
                        + ((2 * v26) & 0x10040028)
                        + (((v26 & 0x9224A521) + 337978658) & 0x9224A521)
                        + ((446047420 - (v26 & 0x494A1254)) & 0x494A1254)
                        + 2048;
  STACK[0x708] = (unint64_t)&STACK[0x669D1D41D800F74E];
  STACK[0x710] = (unint64_t)&STACK[0x669D1D41D800F836];
  STACK[0x718] = (unint64_t)&STACK[0x669D1D41D800F812];
  STACK[0x720] = (unint64_t)&STACK[0x669D1D41D800F86A];
  STACK[0x728] = (unint64_t)&STACK[0x47207F1580B2629D];
  LODWORD(STACK[0x274]) = 381450761;
  LODWORD(STACK[0x380]) = 2134650450;
  v28 = v23 == 0x6F7634AB0303F6BELL || v20 == 0 || v21 == 0;
  LODWORD(STACK[0x444]) = 2134608427;
  v30 = !v28 && v22 != 1384170813;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 + 8 * (int)((a4 - 1074085578) ^ (35930 * v30))) - 12))(v25, 0x2944892A42949244, v21, 2134650450, 381450761, a4, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_10006BC0C@<X0>(int *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;

  STACK[0x730] = v2 - 0x6F7634AB0303F6BELL;
  v7 = *a1;
  v8 = *(_QWORD *)(v3 + 8 * v4);
  v9 = *(_QWORD *)(v2 - 0x6F7634AB0303F6BELL);
  *(_QWORD *)(v6 - 152) = a1 + 1;
  *(_QWORD *)(v6 - 144) = (char *)&STACK[0x274] + v1;
  *(_DWORD *)(v6 - 116) = v7
                        - 210615973 * ((((2 * (v6 - 168)) | 0xF450098C) - (v6 - 168) + 98040634) ^ 0x53C7CDD9)
                        - 763888946;
  *(_QWORD *)(v6 - 128) = v8 ^ (210615973
                              * ((((2 * (v6 - 168)) | 0x31955253F450098CLL) - (v6 - 168) - 0x18CAA929FA2804C6) ^ 0x57094CC753C7CDD9));
  *(_DWORD *)(v6 - 136) = 210615973 * ((((2 * (v6 - 168)) | 0xF450098C) - (v6 - 168) + 98040634) ^ 0x53C7CDD9)
                        + 1741049975
                        + v4
                        + 32;
  *(_QWORD *)(v6 - 168) = v9;
  *(_QWORD *)(v6 - 160) = &STACK[0x441CD476C0591FA2];
  v10 = ((uint64_t (*)(uint64_t))((char *)*(&off_10112C750 + (v4 ^ 0x11EF)) - 1291646935))(v6 - 168);
  v11 = *(_DWORD *)(v6 - 120) != ((v4 - 36353763) & 0x422FFFDE) + 1060556812;
  LODWORD(STACK[0x444]) = v5 + 15;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8 * ((v11 * (((v4 + 11960) | 0x2010) ^ 0x643A)) | (v4 + 2570)))
                                          - 12))(v10);
}

uint64_t sub_10006BD74()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;

  LODWORD(STACK[0x73C]) = STACK[0x274];
  STACK[0x740] = (unint64_t)&STACK[0x1140];
  LODWORD(STACK[0x268]) = 381450761;
  LODWORD(STACK[0x32C]) = 381450761;
  LODWORD(STACK[0x384]) = 381450761;
  LODWORD(STACK[0x370]) = 381450761;
  LODWORD(STACK[0x294]) = 2134650450;
  LODWORD(STACK[0x440]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((v0 == 0x6F7634AB0303F6BELL) ^ (v2 - 1)) & 1)
                                          * (((v2 + 1073799154) | 0x41A42) - 1074093632)) ^ v2))
                            - 12))();
}

uint64_t sub_10006BE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v59;
  uint64_t v60;

  v56 = v53 - 25490;
  STACK[0x288] = *(_QWORD *)(v52 + 8 * (v56 | 0x32)) - 4;
  LODWORD(STACK[0x748]) = v51 + 503178996;
  LODWORD(STACK[0x74C]) = (HIDWORD(a32) ^ 0xC9159FEF)
                        + 1475428310
                        + ((HIDWORD(a32) << ((((v53 + 110) | 0x32) - 26) ^ 0x99)) & 0x53FFEC7E ^ 0x41D4C020);
  v57 = STACK[0x73C];
  LODWORD(STACK[0x750]) = 43222221 * LODWORD(STACK[0x73C]) - 222792285;
  LODWORD(STACK[0x754]) = (v50 ^ 0x47130948) - 1778778282 + ((2 * v50) & 0xD7EE6D7E ^ 0x51C86D6E);
  STACK[0x758] = (unint64_t)&STACK[0x2E9];
  STACK[0x760] = (unint64_t)&STACK[0x2EA];
  STACK[0x768] = (unint64_t)&STACK[0x2EB];
  STACK[0x770] = ((unint64_t)&STACK[0x2C0] ^ 0x1F7DFFFD7EFF819FLL)
               - 0x1048146028C00082
               + ((2 * (_QWORD)&STACK[0x2C0]) & 0x3EFBFFFAFDFF0330);
  STACK[0x778] = ((unint64_t)&STACK[0x320] ^ 0x7EFCCFCF17BAFFBELL)
               - 0x4C04028000102700
               + ((2 * (_QWORD)&STACK[0x320]) & 0xFDF99F9E2F75FF70);
  STACK[0x780] = ((unint64_t)&STACK[0x2A0] ^ 0xFFBE7F7E7E7C5B7BLL)
               + 0xBEFB3F5FDFFFCE0
               + ((2 * (_QWORD)&STACK[0x2A0]) & 0xFF7CFEFCFCF8B6F0);
  STACK[0x788] = ((unint64_t)&STACK[0x2D0] ^ 0x7FB949FFEF6DCF5DLL)
               - 0x6110014A80018C00
               + ((2 * (_QWORD)&STACK[0x2D0]) & 0xFF7293FFDEDB9EB0);
  LODWORD(STACK[0x794]) = 1221320497 * v57 + 1413675938;
  LODWORD(STACK[0x4C8]) = v50 ^ 0x4C0E5627;
  LOBYTE(STACK[0x4CF]) = 1;
  LODWORD(STACK[0x4D0]) = 1935860696;
  LODWORD(v59) = v54 - 1074054092;
  HIDWORD(a13) = v49 + 4;
  LODWORD(v60) = 1935861731;
  HIDWORD(a10) = v54 + 78109010;
  HIDWORD(v60) = (v54 + 78109010) ^ 0xDB2F751A;
  LODWORD(a26) = (v54 + 1197702808) & 0x789767AF;
  LODWORD(a32) = v54 ^ 0x4005C740;
  HIDWORD(a31) = (v54 ^ 0x4005C740) - 27539;
  HIDWORD(a34) = HIDWORD(a31) ^ 0xBDDCC833;
  HIDWORD(v59) = v54 - 787556967;
  HIDWORD(a16) = 1074009666;
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * (int)((v56 | 0x32) + 19531)) - 4))(v55 - 168, 1413675938, 0x9EEFFEB57FFE7400, a4, a5, a6, a7, a8, a9, a10, 210615973* ((-2 - ((~(v55 - 168) | 0x2474FCE8F7125D3FLL) + ((v55 - 168) | 0xDB8B031708EDA2C0))) ^ 0x6BB719065EFD9420), (v54 - 2042634698) & 0x39BAF7C7, a13, v59, (unint64_t)&STACK[0x208] ^ 0x347FCB7FDED547FDLL, a16, 210615973* ((((2 * (v55 - 168)) | 0xE6BDE52E020A6EFALL) - (v55 - 168) + 0xCA10D68FEFAC883) ^ 0xBC9D1779A8EAFE62),
           (unint64_t)&STACK[0x208] ^ 0xE5C4AD89DFE5F46DLL,
           210615973
         * ((2 * ((v55 - 168) & 0x51CAD48615840BB8) - (v55 - 168) - 0x51CAD48615840BC0) ^ 0xE1F6CE9743943D5FLL),
           (unint64_t)&STACK[0x208] ^ 0xB89F8D249C9A326ALL,
           a21,
           a22,
           v60,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_10006C2C0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  v7 = *(_QWORD *)(v4 + 8);
  v8 = *(unsigned int *)(v4 + 56);
  v9 = v5 + a4 + 1535;
  STACK[0xF68] = (unint64_t)&STACK[0x778D07D732A167FA];
  STACK[0xF70] = (unint64_t)&STACK[0x2DF17271E48F2C13];
  STACK[0xF78] = (unint64_t)&STACK[0xE6D86422897058B];
  STACK[0xF80] = (unint64_t)&STACK[0x7F3D8D28242D37E];
  STACK[0xF88] = (unint64_t)&STACK[0xFBFDA0DCF397A8];
  STACK[0xF90] = (unint64_t)&STACK[0x778D07D732A168B6];
  STACK[0xF98] = (unint64_t)&STACK[0x5AD6BB4C0EB654BA];
  STACK[0xFA0] = (unint64_t)&STACK[0x56695B5CBB16C553];
  STACK[0xFA8] = (unint64_t)&STACK[0x5AD6BB4C0EB655AA];
  STACK[0xFB0] = (unint64_t)&STACK[0x56695B5CBB16C57B];
  STACK[0xFB8] = (unint64_t)&STACK[0x3C3B3BEE39C439A9];
  v10 = (a4 - 1074080200) - 13442 + *(_QWORD *)(v6 + 8 * v9);
  STACK[0xA58] = v10;
  STACK[0xFC0] = ((unint64_t)&STACK[0xB28] ^ 0x6F5EDAB7BEFECFEFLL)
               - 0x40104AA016524840
               + ((2 * (_QWORD)&STACK[0xB28]) & 0xDEBDB56F7DFD9FD0);
  STACK[0xFC8] = (unint64_t)&STACK[0x1244];
  STACK[0xFD0] = (unint64_t)&STACK[0x67B7A9860F132CC3];
  STACK[0xFD8] = ((unint64_t)&STACK[0xBA0] ^ 0xF763FF66F337BDACLL)
               + 0x2FBFC7993EDA4FE0
               + ((2 * (_QWORD)&STACK[0xBA0]) & 0xEEC7FECDE66F7B50);
  STACK[0xFE0] = (unint64_t)&STACK[0xB35];
  STACK[0xFE8] = (unint64_t)&STACK[0xB36];
  STACK[0xFF0] = (unint64_t)&STACK[0xB37];
  STACK[0xFF8] = ((unint64_t)&STACK[0xA38] ^ 0x74E5BEFF97C7A9D3)
               - 0x10A41246940008D0
               + ((2 * (_QWORD)&STACK[0xA38]) & 0xE9CB7DFF2F8F53A0);
  STACK[0x1000] = ((unint64_t)&STACK[0xBC0] ^ 0x5D5DF3C157FF6DBFLL)
                - 0x1405020102054D10
                + ((2 * (_QWORD)&STACK[0xBC0]) & 0xBABBE782AFFEDB70);
  STACK[0xCC0] = v10;
  STACK[0xCC8] = 0;
  STACK[0xCD0] = v7 + v8;
  return ((uint64_t (*)(unint64_t *))(*(_QWORD *)(v6 + 8 * (v9 ^ 0x99E5)) - 12))(&STACK[0x1890]);
}

uint64_t sub_10006C7AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W7>, int a4@<W8>)
{
  unint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  int v19;

  v12 = a4 - v6 + 1031;
  v13 = (a4 + v7) & v8;
  LODWORD(STACK[0x4FC]) = v5;
  LODWORD(STACK[0x7F4]) = v5;
  STACK[0x260] = v4;
  v14 = STACK[0xCD0];
  v15 = STACK[0xCC8];
  v16 = STACK[0xCC0];
  v17 = a1 + STACK[0xCC8];
  STACK[0x278] = v17;
  STACK[0x288] = v17 + v10;
  v15 += 112;
  STACK[0xA40] = v15;
  STACK[0xBB0] = v14;
  STACK[0xD08] = v16;
  STACK[0xD10] = v15;
  LODWORD(STACK[0x510]) = a3;
  if (v14)
    v18 = v4 == a2;
  else
    v18 = 1;
  v19 = !v18;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((v19 * ((v9 + v13 + 1016) ^ v12)) ^ a4)) - 8))();
}

uint64_t sub_10006C830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v9 = STACK[0x278];
  v10 = STACK[0x278];
  *(_QWORD *)(v9 + 8) = 0;
  *(_DWORD *)v9 = a7;
  STACK[0x2D8] = v9 + 8;
  *(_DWORD *)(v9 + 16) = 1627851582;
  *(_DWORD *)(v9 + 24) = a7;
  *(_QWORD *)(v9 + 32) = 0;
  *(_DWORD *)(v9 + 40) = a7;
  STACK[0xB78] = v9 + 40;
  *(_QWORD *)(v9 + 48) = 0;
  STACK[0xA30] = v9 + 48;
  *(_DWORD *)(v9 + 56) = a7;
  STACK[0xB18] = v9 + 56;
  *(_QWORD *)(v9 + 64) = 0;
  STACK[0xBE0] = v9 + 64;
  *(_DWORD *)(v9 + 72) = a7;
  STACK[0xB48] = v9 + 72;
  *(_QWORD *)(v10 + 80) = 0;
  v10 += 80;
  STACK[0xB98] = v10;
  *(_BYTE *)(v10 + 8) = 63;
  *(_DWORD *)(STACK[0x260] - 0x3C3B3BEE39C42781) = a7;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C4277DLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C4277CLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C4277BLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C4277ALL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42779) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42778) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42777) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42776) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42775) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42774) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42773) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42772) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42771) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42770) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C4276FLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C4276ELL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C4276DLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C4276CLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C4276BLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C4276ALL) = 0;
  *(_DWORD *)(STACK[0x260] - 0x3C3B3BEE39C42769) = a7;
  *(_DWORD *)(STACK[0x260] - 0x3C3B3BEE39C42765) = 1760337715;
  *(_DWORD *)(STACK[0x260] - 0x3C3B3BEE39C42699) = 1760337715;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425CDLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425CCLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425CBLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425CALL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425C9) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425C8) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425C7) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425C6) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425C5) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425C4) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425C3) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425C2) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425C1) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425C0) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425BFLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425BELL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425BDLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425BCLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425BBLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425BALL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425B9) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425B8) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425B7) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425B6) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425B5) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425B4) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425B3) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425B2) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425B1) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425B0) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425AFLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425AELL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425ADLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425ACLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425ABLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425AALL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425A9) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425A8) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425A7) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C425A6) = 0;
  memset((void *)(STACK[0x260] - 0x3C3B3BEE39C42319), 8, 20);
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42305) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42304) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42303) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42302) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42301) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42300) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C422FFLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C422FELL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C422FDLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C422FCLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C422FBLL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C422FALL) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C422F9) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C422F8) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C422F7) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C422F6) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C422F5) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C422F4) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C422F3) = 0;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C422F2) = 0;
  STACK[0x2E0] = STACK[0x260] - 0x3C3B3BEE39C422F1;
  STACK[0xCD8] = 0x1226CECD27762899;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8 * v7))(a1, 5368);
}

uint64_t sub_10006D2E0@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  unsigned int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v3 + STACK[0x2E0] + v6) = 0;
  return (*(uint64_t (**)(void))(v8 + 8 * (((((v2 + v4) & v5 ^ v7) + v3 == a2 + 256) * a1) ^ v2)))();
}

uint64_t sub_10006D318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  STACK[0xCD8] = v8;
  *(_DWORD *)(STACK[0x260] - 0x3C3B3BEE39C421F1) = a7;
  *(_DWORD *)(STACK[0x260] - 0x3C3B3BEE39C421EDLL) = 660481360;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421E9) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421E8) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421E7) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421E6) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421E5) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421E4) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421E3) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421E2) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421E1) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421E0) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421DFLL) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421DELL) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421DDLL) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421DCLL) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421DBLL) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421DALL) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421D9) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421D8) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421D7) = v9;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C421D6) = v9;
  STACK[0x2F0] = STACK[0x260] - 0x3C3B3BEE39C421D5;
  STACK[0xCE0] = 0x6FDF9E825D4CE980;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * v7))(a1, 1326, 43, 1881110396);
}

uint64_t sub_10006D5BC@<X0>(unint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v4 + v5 + v8) = 0;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((((v3 + v6) | v7) ^ a1) + v4 != a3 + 64) * a2) ^ v3)))();
}

uint64_t sub_10006D5F8()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  STACK[0xCE0] = v1;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42195) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42194) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42193) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42192) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42191) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42190) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C4218FLL) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C4218ELL) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C4218DLL) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C4218CLL) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C4218BLL) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C4218ALL) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42189) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42188) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42187) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42186) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42185) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42184) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42183) = v2;
  *(_BYTE *)(STACK[0x260] - 0x3C3B3BEE39C42182) = v2;
  v4 = STACK[0x278];
  v5 = STACK[0x260];
  *(_QWORD *)(v4 + 96) = STACK[0x260];
  STACK[0xBA8] = v4 + 96;
  *(_DWORD *)(v5 - 0x3C3B3BEE39C425A5) = 1286214708;
  v6 = *(_QWORD *)(v3 + 8 * v0) + (v0 ^ 0xFFFFFFFFFFFFFAD7);
  v7 = STACK[0x260];
  STACK[0x2F8] = STACK[0x260] + 0x34E995F368615DB2;
  STACK[0x300] = v7 + 0x34E995F368615CE6;
  STACK[0x10C0] = STACK[0xA40];
  STACK[0xD80] = v6;
  STACK[0xD88] = (unint64_t)*(&off_10112C750 + (int)v0 + 1039) - 775164754;
  LODWORD(STACK[0x514]) = 2072780493;
  STACK[0xD90] = STACK[0xBB0];
  STACK[0xD98] = STACK[0x288];
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(v0 ^ 0x9148)))();
}

uint64_t sub_10006D8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (((LODWORD(STACK[0x9A4]) == a7) * ((v8 ^ 0x40055B12) + 37474)) ^ (v7 + v8 - 788)))
                            - 4))();
}

uint64_t sub_10006D8F4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0xA30];
  STACK[0xCE8] = *(_QWORD *)(v1 + 8 * a1) - 8;
  STACK[0xCF0] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 ^ 0x5FDE25FF ^ a1 ^ 0x5FDE38F5)) - 4))();
}

uint64_t sub_10006D944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  unint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unint64_t v8;

  v8 = *(_QWORD *)STACK[0xCF0];
  STACK[0xD80] = STACK[0xCE8];
  STACK[0xD88] = (unint64_t)*(&off_10112C750 + (int)(v3 ^ (v5 + 2937))) - 463192459;
  LODWORD(STACK[0x514]) = 2072780471;
  STACK[0xD90] = v8;
  STACK[0xD98] = v4;
  return (*(uint64_t (**)(unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                           + 8
                                                                                           * (int)((33622
                                                                                                  * (v3 < 0x715CED8C)) ^ (v3 + v6))))(&STACK[0x1890], a2, a3, 1881110396, 450445913);
}

uint64_t sub_10006D9DC@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W4>, int a4@<W6>, int a5@<W8>)
{
  int v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t (*v10)(void);

  STACK[0x538] = STACK[0xD98];
  v7 = STACK[0xD90];
  v8 = STACK[0x514];
  STACK[0x550] = STACK[0xD88];
  STACK[0x560] = STACK[0xD80];
  v9 = STACK[0x10C0];
  STACK[0x568] = a1 + STACK[0x10C0];
  STACK[0xA40] = v9 + 432;
  LODWORD(STACK[0x478]) = a3 - 15;
  LODWORD(STACK[0x42C]) = a4;
  STACK[0xA80] = 0;
  LODWORD(STACK[0x454]) = 1812939928;
  *(_DWORD *)(a1 + v9) = 682717284;
  LODWORD(STACK[0x81C]) = v5 - 2134650450;
  LODWORD(STACK[0x82C]) = v8 + 647096438;
  LODWORD(STACK[0x838]) = ((a5 + 912151131) & 0xC9A17DBF) + 276726166 + v8;
  LODWORD(STACK[0x83C]) = v8 + 576024156;
  LODWORD(STACK[0x844]) = v8 - 95938170;
  LODWORD(STACK[0x850]) = v8 + 578785929;
  LODWORD(STACK[0x52C]) = v5;
  STACK[0xDA0] = v7;
  STACK[0xDA8] = v7;
  STACK[0xDB0] = v7;
  LODWORD(STACK[0x540]) = a2 + 1;
  LODWORD(STACK[0x55C]) = v5;
  LODWORD(STACK[0x57C]) = a2 + 1;
  LODWORD(STACK[0x58C]) = v5;
  v10 = (uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * a5) - 4);
  LODWORD(STACK[0x5A4]) = a2 + 1;
  return v10();
}

uint64_t sub_10006DAF0(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  int v14;
  uint64_t v15;

  LODWORD(STACK[0x660]) = v14;
  LODWORD(STACK[0x934]) = v14;
  LODWORD(STACK[0x664]) = v8;
  STACK[0xDF8] = v9;
  STACK[0xE00] = v10;
  STACK[0xE08] = v11;
  LODWORD(STACK[0x66C]) = v7;
  LODWORD(STACK[0x674]) = v7;
  LODWORD(STACK[0x6A0]) = a7;
  STACK[0x5F0] = v13;
  LODWORD(STACK[0x6A4]) = a3;
  LODWORD(STACK[0x96C]) = v12;
  return (*(uint64_t (**)(void))(v15 + 8 * a2))();
}

uint64_t sub_10006DB38@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _BOOL4 v11;

  v2 = STACK[0x6A0];
  v3 = STACK[0x68C];
  v4 = STACK[0x674];
  v5 = STACK[0x670];
  v6 = STACK[0x66C];
  v7 = STACK[0x668];
  v8 = STACK[0xE08];
  v9 = STACK[0xE00];
  v10 = STACK[0xDF8];
  v11 = LODWORD(STACK[0x6A0]) == (((a1 + 3062) | 0x101) ^ 0x7F3C77C1);
  LODWORD(STACK[0x52C]) = STACK[0x664];
  STACK[0xDA0] = v10;
  STACK[0xDA8] = v9;
  STACK[0xDB0] = v8;
  LODWORD(STACK[0x540]) = v7;
  LODWORD(STACK[0x55C]) = v6;
  LODWORD(STACK[0x57C]) = v5;
  LODWORD(STACK[0x58C]) = v4;
  LODWORD(STACK[0x5A4]) = v3;
  LODWORD(STACK[0x6A4]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((50660 * v11) ^ a1)) - 4))();
}

uint64_t sub_10006DBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  _BOOL4 v11;
  BOOL v12;

  LODWORD(STACK[0x858]) = STACK[0x5A4];
  LODWORD(STACK[0x85C]) = STACK[0x58C];
  LODWORD(STACK[0x86C]) = STACK[0x57C];
  LODWORD(STACK[0x87C]) = STACK[0x55C];
  LODWORD(STACK[0x880]) = STACK[0x540];
  STACK[0x570] = STACK[0xDB0];
  STACK[0x598] = STACK[0xDA8];
  STACK[0x5B0] = STACK[0xDA0];
  LODWORD(STACK[0x884]) = STACK[0x52C];
  v10 = *(_DWORD *)STACK[0x568];
  LODWORD(STACK[0x890]) = v10;
  v11 = v10 == 682717284;
  LOBYTE(STACK[0x10D3]) = v11;
  v12 = LODWORD(STACK[0x858]) == v9;
  LOBYTE(STACK[0x10D4]) = v12;
  if (!v12)
    v11 = 0;
  LODWORD(STACK[0x6A4]) = a7;
  return (*(uint64_t (**)(void))(v8
                              + 8 * (int)((!v11 * ((((v7 + 1649223268) & 0xDDB7DE4E) - 1074066222) ^ 0x6B15)) ^ v7)))();
}

uint64_t sub_10006DC8C@<X0>(int a1@<W6>, int a2@<W8>)
{
  uint64_t v2;

  LODWORD(STACK[0x5DC]) = STACK[0x884];
  STACK[0xDD0] = STACK[0x5B0];
  STACK[0xDD8] = STACK[0x598];
  STACK[0xDE0] = STACK[0x570];
  LODWORD(STACK[0x5E0]) = STACK[0x880];
  LODWORD(STACK[0x5E4]) = STACK[0x87C];
  LODWORD(STACK[0x610]) = STACK[0x858];
  LODWORD(STACK[0x614]) = a1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((LOBYTE(STACK[0x10D4])
                                * (((a2 - 27240) | 0x840C) ^ (a2 - 367192923) & 0x15E2B7EF ^ 0x4220)) ^ a2)))();
}

uint64_t sub_10006DD14()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((20915
                                          * (((((LODWORD(STACK[0x85C]) - 2134650447) & 0xFFFFFFFC)
                                             + 1129817146
                                             - (((LODWORD(STACK[0x85C]) - 2134650447) << (((v0 - 45) | 0x16) + 107)) & 0x86AF4870)) ^ 0x4357A43A) != LODWORD(STACK[0x81C]))) ^ v0))
                            - 8))();
}

uint64_t sub_10006DD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  _BOOL4 v11;

  v10 = STACK[0x85C];
  v11 = LODWORD(STACK[0x454]) - LODWORD(STACK[0x85C]) == (((v8 - 3214) | 0x4010) ^ 0xECD37D5E);
  LODWORD(STACK[0x5A8]) = STACK[0x884];
  STACK[0xDB8] = STACK[0x5B0];
  STACK[0xDC0] = STACK[0x598];
  STACK[0xDC8] = STACK[0x570];
  LODWORD(STACK[0x5AC]) = STACK[0x880];
  LODWORD(STACK[0x5C0]) = STACK[0x87C];
  LODWORD(STACK[0x5C4]) = STACK[0x86C];
  LODWORD(STACK[0x5D4]) = v10;
  LODWORD(STACK[0x5D8]) = a8 + 5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((59 * v11) ^ v8)) - 8))();
}

uint64_t sub_10006DE24@<X0>(int a1@<W7>, int a2@<W8>)
{
  uint64_t v2;

  LODWORD(STACK[0x5A8]) = STACK[0x884];
  STACK[0xDB8] = STACK[0x5B0];
  STACK[0xDC0] = STACK[0x598];
  STACK[0xDC8] = STACK[0x570];
  LODWORD(STACK[0x5AC]) = STACK[0x880];
  LODWORD(STACK[0x5C0]) = STACK[0x87C];
  LODWORD(STACK[0x5C4]) = STACK[0x86C];
  LODWORD(STACK[0x5D4]) = STACK[0x85C];
  LODWORD(STACK[0x5D8]) = a1 + 5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((LOBYTE(STACK[0x10D3]) * ((a2 - 16162) ^ 0x5CFB ^ ((a2 - 13728) | 0x2A00))) ^ a2))
                            - 4))();
}

uint64_t sub_10006DEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  _DWORD *v12;
  _DWORD *v13;
  int v14;
  int v15;
  unint64_t v16;
  int v17;

  v11 = STACK[0x890];
  v12 = (_DWORD *)STACK[0x568];
  *v12 = LODWORD(STACK[0x890]) - 1;
  v12 += 2;
  v13 = &v12[6 * (v11 - 682717285)];
  v14 = *v13;
  v15 = v13[1];
  v16 = *((_QWORD *)v13 + 1);
  LODWORD(STACK[0x454]) = v12[6 * (v7 + 13186 + v11 - 682744701) + 4];
  v17 = *(_DWORD *)(STACK[0x550] + (v14 - 1881110397) * (uint64_t)v10 + 36);
  if (v17 + 838766508 < SLODWORD(STACK[0x82C]) || v17 + 838766508 > 572393256)
    v8 = a7;
  LODWORD(STACK[0x5A8]) = v15;
  STACK[0xDB8] = v16;
  STACK[0xDC0] = v16;
  STACK[0xDC8] = v16;
  LODWORD(STACK[0x5AC]) = v17;
  LODWORD(STACK[0x5C0]) = v15;
  LODWORD(STACK[0x5C4]) = v17;
  LODWORD(STACK[0x5D4]) = v15;
  LODWORD(STACK[0x5D8]) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * v7) - 8))();
}

uint64_t sub_10006DF68()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  _BOOL4 v11;

  v2 = STACK[0x5D8];
  v3 = STACK[0x5D4];
  v4 = STACK[0x5C4];
  v5 = STACK[0x5C0];
  v6 = STACK[0x5AC];
  v7 = STACK[0xDC8];
  v8 = STACK[0xDC0];
  v9 = STACK[0xDB8];
  v10 = STACK[0x5A8];
  v11 = LODWORD(STACK[0x5C4]) == ((v0 - 7804) ^ 0x701F3BE0);
  LODWORD(STACK[0x5DC]) = STACK[0x5A8];
  STACK[0xDD0] = v9;
  STACK[0xDD8] = v8;
  STACK[0xDE0] = v7;
  LODWORD(STACK[0x5E0]) = v6;
  LODWORD(STACK[0x5E4]) = v5;
  LODWORD(STACK[0x610]) = v4;
  LODWORD(STACK[0x614]) = v2;
  LODWORD(STACK[0x664]) = v10;
  STACK[0xDF8] = v9;
  STACK[0xE00] = v8;
  STACK[0xE08] = v7;
  LODWORD(STACK[0x668]) = v6;
  LODWORD(STACK[0x66C]) = v5;
  LODWORD(STACK[0x670]) = 1881110396;
  LODWORD(STACK[0x674]) = v3;
  LODWORD(STACK[0x68C]) = 1881110396;
  LODWORD(STACK[0x6A0]) = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((16 * v11) | (32 * v11)) ^ v0)))();
}

uint64_t sub_10006E01C()
{
  int v0;
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;

  LODWORD(STACK[0x8A4]) = STACK[0x614];
  LODWORD(STACK[0x8BC]) = STACK[0x610];
  v2 = STACK[0x5E4];
  LODWORD(STACK[0x8CC]) = STACK[0x5E4];
  LODWORD(STACK[0x8F0]) = STACK[0x5E0];
  STACK[0x5B8] = STACK[0xDE0];
  STACK[0x5C8] = STACK[0xDD8];
  STACK[0x608] = STACK[0xDD0];
  LODWORD(STACK[0x8F4]) = STACK[0x5DC];
  v3 = STACK[0x454];
  LODWORD(STACK[0x8F8]) = STACK[0x454];
  v3 += 326777147;
  v2 += 5066625;
  v4 = v2 < 0x7F897DD3;
  v5 = v3 < v2;
  if (v3 < 0x7F897DD3 != v4)
    v5 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v5 * ((v0 - 28155) ^ 0x16A9)) ^ v0)) - 4))();
}

uint64_t sub_10006E0CC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;

  v3 = *(_QWORD *)(v1 + 8 * v0) - 4;
  LODWORD(STACK[0xC18]) = LODWORD(STACK[0x8CC]) + 1344881762 + ((v0 + 1833584926) ^ 0x2D4F0199);
  v4 = STACK[0x5B8];
  STACK[0xBE8] = v3;
  STACK[0xBF8] = v4;
  v5 = STACK[0xF78];
  STACK[0xC28] = STACK[0xF70];
  STACK[0xC30] = v5;
  v6 = STACK[0xF88];
  STACK[0xC38] = STACK[0xF80];
  STACK[0xC40] = v6;
  *(_QWORD *)(v2 - 168) = &STACK[0xBE8];
  *(_DWORD *)(v2 - 160) = v0
                        + 263575687
                        * ((1033390246 - ((v2 - 168) | 0x3D9848A6) + ((v2 - 168) | 0xC267B759)) ^ 0x5A47771F)
                        + 808437794;
  v7 = ((uint64_t (*)(uint64_t))((char *)*(&off_10112C750 + v0 - 3603) - 1212384450))(v2 - 168);
  v8 = *(_DWORD *)(v2 - 156);
  LODWORD(STACK[0x6A4]) = v8;
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (v0 ^ 0x4F52 ^ (50351
                                                            * (v8 == ((v0 + 1833584926) & 0x92B5ECBE ^ 0x7F3C62CC))))))(v7);
}

uint64_t sub_10006E20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  int v6;

  v6 = STACK[0x478];
  LODWORD(STACK[0x8FC]) = STACK[0x478];
  LODWORD(STACK[0x900]) = v5 ^ 0x5198 ^ v6 ^ 0x1AD95F4C;
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8 * v5))(LODWORD(STACK[0x8F0]), a2, a3, a4, 3844521441, 2413856899);
}

uint64_t sub_10006E270(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8 * ((14 * (*(_DWORD *)(v6 + (a1 + a6) * (uint64_t)v9) != 1886904888)) ^ v7))
                            - ((v7 + 537928453) | 0x80480550)
                            + 2690139475))();
}

uint64_t sub_10006E2D0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((251 * (v0 != v1 + 8 * (v2 ^ 0x1969) - 1903691184)) ^ (8 * (v2 ^ 0x1969))))
                            - ((8 * (v2 ^ 0x1969) + 2144254535) & 0x80317ADE ^ 0x5892)))();
}

uint64_t sub_10006E334()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;

  v5 = *(_DWORD *)(v1 + 48 * v0 + 40) & 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((v5 << (((v2 + 8) | 0x1C) + 101))
                                           + ((((v2 - 20436) | 0x401) + 35174291) ^ v5) != 35193920)
                                          * v4) ^ v2))
                            - 12))();
}

uint64_t sub_10006E3AC(int a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;

  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((10074 * (a4 & ~((a1 - 18581) ^ (*(_DWORD *)(v5 + v4 * (uint64_t)v8 + 36) == v6)))) ^ a1)))();
}

uint64_t sub_10006E3E8(int a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  _BOOL4 v9;

  v7 = a1 - 7;
  v9 = (int)v4 + 767694226 > 501320974 || (int)v4 + 767694226 < v5;
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((59 * (a4 & ~(((v7 ^ 0x5198) + 12182) ^ v9))) ^ v7)))(v4);
}

uint64_t sub_10006E43C()
{
  unsigned int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * (int)(v0 ^ 0xA0586813 ^ (27636 * (v0 >= ((v0 + 1604862468) ^ 0x9B140332))))))();
}

uint64_t sub_10006E47C@<X0>(int a1@<W0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((209
                                          * (a2 < (int)((10 * ((a1 + 1469928734) & 0xA8626F9E ^ 0x45D8)) ^ (v3 + 2366)))) ^ a1))
                            - 12))();
}

uint64_t sub_10006E4CC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((a1 >= v3 + (v1 ^ 0x42D0) + 1052)
                                               * (((v1 + 518348374) & 0xE11A6379) - 9058)) | v1))
                            - 12))();
}

uint64_t sub_10006E518@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((251 * (((a1 == v3 - 5) ^ (v1 - 1)) & 1)) ^ v1))
                            - ((v1 - 527706109) & 0x1F749CFC ^ 0x9874)))();
}

uint64_t sub_10006E574@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v2 + 9942570) | 0x1A414018) + a1) * (a2 < v4)) ^ v2))
                            - (v2 ^ 0x6F64u)
                            + 9068))();
}

uint64_t sub_10006E5BC@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((251 * (a2 & ~((a1 + 13606) ^ (a3 == a1 + 450436830)))) ^ a1))
                            - 12))();
}

uint64_t sub_10006E600@<X0>(int a1@<W0>, int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((251 * (a2 != ((a1 + 614356359) & 0xDB61DF9E) + 450423208)) ^ a1))
                            - 12))();
}

uint64_t sub_10006E64C@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (v2 ^ 0x1AD9D2F9 ^ (((a2 & ~v2 | (v2 ^ ~a2) & (a2 - v2)) >= 0)
                                                            * ((((a1 + v2 + 57) | 0x2300) - 9) ^ v2 ^ 0x1AD96126))))
                            - 4))();
}

uint64_t sub_10006E6B0@<X0>(unsigned int a1@<W0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((251 * (a2 != ((a1 + 13606) ^ v3))) ^ a1)) - (a1 ^ 0x2374)))();
}

uint64_t sub_10006E6EC@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W8>)
{
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((251 * (a2 & ~((((a1 + 13454) | 0x98) + 16346) ^ (a3 == v4)))) ^ a1))
                            - 12))();
}

uint64_t sub_10006E72C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  unint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;

  LODWORD(STACK[0x634]) = v6;
  LODWORD(STACK[0x918]) = v6;
  STACK[0x580] = v5;
  LODWORD(STACK[0x91C]) = v7;
  LODWORD(STACK[0x920]) = v4;
  v10 = *(_DWORD *)(STACK[0x550] + 48 * (int)v5 + 40);
  LODWORD(STACK[0x924]) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((90 * (a4 & ~(v8 ^ ((v10 & ((v8 ^ 0x6622) - 16059)) == 0)))) ^ v8))
                            - 8))();
}

uint64_t sub_10006E794@<X0>(unsigned int a1@<W6>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = LODWORD(STACK[0x42C]);
  v5 = STACK[0x550] + STACK[0x580] * v3;
  LOBYTE(STACK[0x10D5]) = (_DWORD)v4 + ((a2 + 520) | 0xB2A) - *(_DWORD *)(v5 + 16) == 2114902130;
  STACK[0x618] = STACK[0xA80];
  STACK[0x620] = *(_QWORD *)(v5 + 24);
  v6 = (v4 | ((unint64_t)(v4 < a1) << 32)) - 1259815014;
  STACK[0x590] = v6;
  LOBYTE(STACK[0x10D6]) = v6 < 0x3424EDEC;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((27820 * (((v6 == 874835436) ^ (a2 - 1)) & 1)) ^ a2))
                            - 12))();
}

uint64_t sub_10006E840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;

  STACK[0xDE8] = 0x2BFF353F4512D579;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * ((a3 - 55199458) & 0x2B4F7FFF ^ 0x2805209E ^ (63945 * (((a3 - 55199458) & 0x2B4F7FFF) == 1477183128))))
                                                                                                - 12))(a1, a2, -14590, 0xD400CAC0EF1226C8, 50378, 284960954);
}

uint64_t sub_10006E8EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v5 = *(unsigned __int8 *)(a1 + v3 - 0x2BFF353F45132CBDLL + ((v2 - 1129890099) & 0x4358DF77))
     - (*(unsigned __int8 *)(v1 + v3 - 0x2BFF353F45132CBDLL + ((v2 - 1129890099) & 0x4358DF77)) ^ 8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((425
                                          * (((2 * v5) & 0xAFFBDDD8) + ((v2 - 1708023613) ^ 0x4DCC372E ^ v5) != -671224084)) ^ v2))
                            - 4))();
}

uint64_t sub_10006E984(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, int a5, int a6)
{
  _BOOL4 v6;
  unint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  _BOOL4 v14;

  v12 = ((v9 + a6) & v10 ^ a4) + v8;
  v13 = v6 ^ (v12 < a2);
  v14 = v12 < v7;
  if (v13)
    v14 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((!v14 * a5) ^ v9)) - 12))();
}

uint64_t sub_10006E9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;

  STACK[0xDE8] = v4;
  STACK[0x5E8] = v3;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * (int)v5) - (v5 ^ 0x3EB0)))(a1, a2, a3, 1);
}

uint64_t sub_10006E9FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  STACK[0xDF0] = STACK[0x5B8];
  LODWORD(STACK[0x6A4]) = a8 + 5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((1906 * (a4 & ~((2323 * (v8 ^ 0x4BFE)) ^ LOBYTE(STACK[0x10D5]) ^ 0x4005CF76))) ^ v8))
                            - 4))();
}

uint64_t sub_10006EA54()
{
  int v0;
  uint64_t v1;
  int v2;
  _BOOL4 v3;
  int v4;

  v3 = *(_DWORD *)(STACK[0x550]
                 + (int)(LODWORD(STACK[0x8BC]) - 1881130009 + (((v0 ^ 0x6AF6) + 1975833541) & 0x8A3AFC9F)) * (uint64_t)v2
                 + 36) == LODWORD(STACK[0x8F0]);
  LODWORD(STACK[0x664]) = STACK[0x8F4];
  STACK[0xDF8] = STACK[0x608];
  STACK[0xE00] = STACK[0x5C8];
  STACK[0xE08] = STACK[0x5B8];
  LODWORD(STACK[0x668]) = 1881110396;
  v4 = STACK[0x8CC];
  LODWORD(STACK[0x66C]) = STACK[0x8CC];
  LODWORD(STACK[0x670]) = 1881110396;
  LODWORD(STACK[0x674]) = v4;
  LODWORD(STACK[0x68C]) = 1881110396;
  LODWORD(STACK[0x6A0]) = STACK[0x8A4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((173 * v3) ^ v0 ^ 0x6AF6))
                            - (((v0 ^ 0x6AF6) - 14379) | 0x890u)
                            + 19608))();
}

uint64_t sub_10006EB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  _BOOL4 v9;

  v9 = LODWORD(STACK[0x8A4]) == a7;
  LODWORD(STACK[0x6A4]) = STACK[0x8A4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((52975 * v9) ^ v7))
                            - ((((v7 + 878326419) & 0xCBA5CDDD) + 1074073913) ^ 0x40055E42)))();
}

uint64_t sub_10006EB80(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, _QWORD))(v3 + 8 * v2))((v2 + 15109) | 0x4A9u, a2, LODWORD(STACK[0x6A4]), LODWORD(STACK[0x8F0]));
}

uint64_t sub_10006EBD8(int a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((a4 == v4) * (3048 * (a1 ^ 0x8CB2) - 27319)) ^ a1))
                            - (a1 ^ 0xC19Du)
                            + 19738))();
}

uint64_t sub_10006EC20@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((*(_BYTE *)(a2 + (((3945 * (a1 ^ 0x4D23)) ^ v4) + v2) * (uint64_t)v5 + 40) & 8) == 0)
                                * (9806 * (a1 ^ 0x4D24) + 31373)) ^ a1)))();
}

uint64_t sub_10006EC74@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  _BOOL4 v9;

  v7 = *(_DWORD *)(a2 + v2 * (uint64_t)v6 + 36) + ((a1 - 1243917838) & 0x4A24EDBB) + 468383140;
  v9 = v7 < 202045916 && v7 >= v3;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v9 * ((a1 - 113) ^ v5)) ^ a1)))();
}

uint64_t sub_10006ECD8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  _BOOL4 v6;

  v6 = (STACK[0x924] & 2) == 0;
  STACK[0xDF0] = STACK[0x5B8];
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((2027 * (a4 & ~(((v4 ^ 0x1370) - 15086) ^ v6))) ^ v4 ^ 0x1370))
                            - 4))();
}

uint64_t sub_10006ED24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  int v13;
  unsigned int v14;

  v10 = STACK[0x568];
  v11 = STACK[0x568] + 0x37F67E44BC13D280;
  *(_DWORD *)(v10 + 392) = STACK[0x8FC];
  *(_DWORD *)(v10 + 396) = STACK[0x42C];
  *(_QWORD *)(v10 + 400) = STACK[0xA80];
  v12 = STACK[0x8F8];
  *(_DWORD *)(v10 + 408) = LODWORD(STACK[0x454]) + a7 - LODWORD(STACK[0x8F8]);
  *(_QWORD *)(v10 + 416) = STACK[0x5C8] + v12 + ((v8 + 1074074200) ^ 0xD3F5E52E);
  v13 = (*(uint64_t (**)(unint64_t, unint64_t))(STACK[0x550] + STACK[0x580] * v9 + 8))(STACK[0x538], v11);
  v14 = (v13 ^ 0x7F7C2E52) + ((2 * v13) & 0xFEF85CA4) - 0x400000;
  STACK[0xDF0] = STACK[0x5C8];
  LODWORD(STACK[0x6A4]) = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1906 * (v14 != ((v8 + 17730) ^ 0x7F3CBF62))) ^ v8)) - 4))();
}

uint64_t sub_10006EE20()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  STACK[0x628] = STACK[0xDF0];
  v3 = *(_DWORD *)(STACK[0x550] + STACK[0x580] * v2 + 32);
  LODWORD(STACK[0x928]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((v3 == ((v0 + 2038221676) & 0x8682EFFF ^ 0x701F3BE0))
                                               * ((v0 + 1542830958) & 0xA409FFFD ^ 0x4CFF)) ^ v0))
                            - 8))();
}

uint64_t sub_10006EE9C@<X0>(int a1@<W6>, int a2@<W7>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _BOOL4 v7;
  int v8;

  v5 = *(_DWORD *)(STACK[0x550] + STACK[0x580] * v4 + 36);
  v7 = v5 + 770455999 > 504082747 || v5 + 770455999 < SLODWORD(STACK[0x850]);
  LODWORD(STACK[0x664]) = STACK[0x8F4];
  STACK[0xDF8] = STACK[0x608];
  STACK[0xE00] = STACK[0x5C8];
  STACK[0xE08] = STACK[0x628];
  LODWORD(STACK[0x668]) = v5;
  v8 = STACK[0x8CC];
  LODWORD(STACK[0x66C]) = STACK[0x8CC];
  LODWORD(STACK[0x670]) = v5;
  LODWORD(STACK[0x674]) = v8;
  LODWORD(STACK[0x68C]) = v5;
  LODWORD(STACK[0x6A0]) = a1;
  LODWORD(STACK[0x6A4]) = a2 + 5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((12294 * v7) ^ a3))
                            - ((a3 - 1047678126) & 0x7E775E57 ^ 0x40055E42)))();
}

uint64_t sub_10006EF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;

  v10 = *(_DWORD *)STACK[0x568];
  LODWORD(STACK[0x92C]) = v10;
  v11 = v10 + (v8 ^ 0xD74EC300);
  LODWORD(STACK[0x930]) = v11;
  LODWORD(STACK[0x6A4]) = a8 + 5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((61137 * (v11 < 0x10)) ^ v8)) - 4))();
}

uint64_t sub_10006EF9C()
{
  int v0;
  uint64_t v1;
  int v2;
  _DWORD *v3;
  unint64_t v4;
  int v5;
  int v6;
  _BOOL4 v8;

  v2 = STACK[0x454];
  v3 = (_DWORD *)STACK[0x568];
  v4 = STACK[0x568] + 24 * LODWORD(STACK[0x930]);
  v5 = STACK[0x8F4];
  *(_DWORD *)(v4 + 8) = STACK[0x918];
  *(_DWORD *)(v4 + 12) = v5;
  *(_QWORD *)(v4 + 16) = STACK[0x608];
  *(_DWORD *)(v4 + 24) = v2;
  *v3 = LODWORD(STACK[0x92C]) + 1;
  v6 = LODWORD(STACK[0x928]) + 95731900;
  v8 = v6 > -170641352 && v6 < SLODWORD(STACK[0x844]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * (int)((v8 * (((v0 + 1074074026) ^ 0xBFFAF962) + (v0 ^ 0x27B4))) ^ v0))
                            - 4))();
}

uint64_t sub_10006F03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  int v9;
  unint64_t v10;

  v9 = STACK[0x42C];
  v10 = STACK[0xA80];
  LODWORD(STACK[0x454]) = 1812939928;
  LODWORD(STACK[0x664]) = v9;
  STACK[0xDF8] = v10;
  STACK[0xE00] = v10;
  STACK[0xE08] = v10;
  LODWORD(v10) = STACK[0x928];
  LODWORD(STACK[0x668]) = STACK[0x928];
  LODWORD(STACK[0x66C]) = v9;
  LODWORD(STACK[0x670]) = v10;
  LODWORD(STACK[0x674]) = v9;
  LODWORD(STACK[0x68C]) = v10;
  LODWORD(STACK[0x6A0]) = a7;
  return (*(uint64_t (**)(void))(v8 + 8 * v7))();
}

uint64_t sub_10006F08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  unint64_t v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;

  LODWORD(STACK[0x634]) = v10;
  LODWORD(STACK[0x918]) = v10;
  STACK[0x580] = v9;
  LODWORD(STACK[0x91C]) = v11;
  LODWORD(STACK[0x6A4]) = a8 + 5;
  LODWORD(STACK[0x920]) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * (int)v12) - (v12 ^ 0x4C98)))();
}

uint64_t sub_10006F0D4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  unint64_t v14;
  int v15;
  uint64_t v16;

  LODWORD(STACK[0x660]) = v15;
  LODWORD(STACK[0x934]) = v15;
  LODWORD(STACK[0x664]) = v9;
  STACK[0xDF8] = v10;
  STACK[0xE00] = v11;
  STACK[0xE08] = v12;
  LODWORD(STACK[0x66C]) = v8;
  LODWORD(STACK[0x674]) = v8;
  LODWORD(STACK[0x6A0]) = a7;
  STACK[0x5F0] = v14;
  LODWORD(STACK[0x6A4]) = a8 + 5;
  LODWORD(STACK[0x96C]) = v13;
  return ((uint64_t (*)(void))(1074093646 - ((a2 + 1330614827) & 0xF0B57F7E) + *(_QWORD *)(v16 + 8 * a2) - 12))();
}

uint64_t sub_10006F13C()
{
  LODWORD(STACK[0x9A4]) = STACK[0x6A4];
  STACK[0xA40] = STACK[0x10C0];
  return ((uint64_t (*)(void))STACK[0x560])();
}

uint64_t sub_10006F160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (((2 * (LODWORD(STACK[0x9A4]) == a7)) | (4 * (LODWORD(STACK[0x9A4]) == a7))) ^ (v7 + v8 - 788)))
                            - (v8 ^ 0x40055B58u)
                            + 1306))();
}

uint64_t sub_10006F1A0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0xBE0];
  STACK[0xCE8] = *(_QWORD *)(v1 + 8 * a1);
  STACK[0xCF0] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 - 1608394352 + a1 + 1608398979 + 187)) - 4))();
}

uint64_t sub_10006F1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;

  STACK[0xDE8] = v8;
  STACK[0x5E8] = v8;
  LODWORD(STACK[0x6A4]) = a8 + 5;
  return (*(uint64_t (**)(void))(v10 + 8 * (int)(v9 ^ 0x9A31F441 ^ (29712 * (v9 < v9 + 1051210309)))))();
}

uint64_t sub_10006F230()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(STACK[0x260] - 0x3C3B3BEE39C42169) = *(_QWORD *)STACK[0xB98];
  *(_DWORD *)(STACK[0x260] - 0x3C3B3BEE39C42171) = *(_DWORD *)STACK[0xB48];
  v2 = (_QWORD *)STACK[0xBA8];
  *(_QWORD *)(*(_QWORD *)STACK[0xBA8] - 0x3C3B3BEE39C42599) = *(_QWORD *)STACK[0x2D8];
  *(_DWORD *)(*v2 - 0x3C3B3BEE39C425A1) = *(_DWORD *)STACK[0x278];
  STACK[0xCF8] = 104;
  STACK[0xD00] = STACK[0xFC0];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (v0 - 1074056017))
                                                            - (v0 - 1074056017)
                                                            + 37617))(144, 72, 12413);
}

uint64_t sub_10006F364@<X0>(char a1@<W0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, int a6@<W8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;

  STACK[0xB28] = v6 - 1 + a4;
  v13 = (((v8 ^ v11) + a5 - (v10 & (2 * (v8 ^ v11)))) ^ a5) * v9;
  *(_BYTE *)(v7 + v6) = (v13 - (a1 & (2 * v13)) + 72) ^ a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (((v6 - 1 + a4 == 0) * a3) ^ a6)) - 4))();
}

uint64_t sub_10006F3C0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int a65;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;

  STACK[0xD00] = v65 - v66;
  STACK[0xCF8] = a3 + v66;
  v68 = STACK[0xA40];
  STACK[0xD08] = STACK[0xA58];
  STACK[0xD10] = v68;
  LODWORD(STACK[0x510]) = STACK[0x9A4];
  return ((uint64_t (*)(unint64_t *, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v67
                                                                                           + 8
                                                                                           * (int)((a4 - 301873483) ^ 0xEE024EAF ^ (9083 * (a4 - 301873483 != ((a4 + 2039827466) & 0xC66F7F46) + 147341248))))
                                                                               - 8))(&STACK[0x1890], a1, a2, a65);
}

#error "10006F534: call analysis failed (funcsize=45)"

uint64_t sub_10006F538(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62,int a63)
{
  int a65;
  int a68;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t);

  v70 = LODWORD(STACK[0x7F8]);
  v71 = *(_QWORD *)(v68 + 8 * a62) - 12;
  LODWORD(STACK[0x10F0]) = a63;
  LODWORD(STACK[0x10F4]) = 0;
  STACK[0x10D8] = v71;
  STACK[0x10E0] = 2134650450;
  STACK[0x10E8] = v70;
  LODWORD(STACK[0x10F8]) = a65;
  LODWORD(STACK[0x10FC]) = a68;
  *(_QWORD *)(v69 - 160) = &STACK[0x10D8];
  *(_DWORD *)(v69 - 152) = -1293010945
                         - 967721411 * (((v69 - 168) & 0xD75FF552 | ~((v69 - 168) | 0xD75FF552)) ^ 0x8E9D9B82)
                         + a4;
  v72 = a2(v69 - 168);
  v73 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v68 + 8 * *(int *)(v69 - 168)) - 4);
  LODWORD(STACK[0x4EC]) = STACK[0x7F8];
  return v73(v72);
}

uint64_t sub_10006F5F4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,unsigned int a60)
{
  int v60;
  uint64_t v61;

  STACK[0xA60] = 0;
  LODWORD(STACK[0x428]) = 2134650450;
  STACK[0xB50] = 0;
  LODWORD(STACK[0x450]) = 2134650450;
  STACK[0xB80] = 0x3C3B3BEE39C42781;
  STACK[0xC60] = (unint64_t)*(&off_10112C750 + (a4 ^ 0x40055688)) - 1592443106;
  STACK[0xC68] = STACK[0xFD0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * (v60 + a4 + 2077)) - (a4 ^ a60 ^ 0x3797)))();
}

uint64_t sub_10006F694@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((*(_BYTE *)(v1 - 0x67B7A9860F131A7BLL) - *a1 - 89) != ((119 * ((v2 + 68) & 0x7F ^ 0xD4)) ^ 0x5B))
                                          * v4) ^ v2))
                            - 12))();
}

uint64_t sub_10006F704()
{
  int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((63 * (v0 != (((v1 + 98) & 0x5F) - 4))) ^ v1))
                            - ((v1 - 2954) | v2)
                            + 14223))();
}

uint64_t sub_10006F758@<X0>(unint64_t a1@<X8>)
{
  unint64_t v1;
  char v2;
  char v3;
  int v4;
  uint64_t v5;

  STACK[0xC68] = v1;
  STACK[0x1008] = v1 - 1;
  STACK[0xC60] = a1;
  STACK[0x1010] = a1 - 1;
  LOBYTE(STACK[0x101E]) = v3;
  LOBYTE(STACK[0x101F]) = v2;
  LODWORD(STACK[0x488]) = 709651046;
  return (*(uint64_t (**)(void))(v5 + 8 * v4))();
}

uint64_t sub_10006F79C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  _BOOL4 v6;

  v6 = LODWORD(STACK[0x7F8]) == ((a4 - 1074088518) | 0x4B30) + 2134626082;
  LODWORD(STACK[0x4AC]) = STACK[0x7F8];
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((27584 * v6) ^ (v4 + a4 + 2291))) - 8))();
}

uint64_t sub_10006F804()
{
  int v0;
  uint64_t v1;

  STACK[0x1080] = STACK[0xB80] - 0x3C3B3BEE39C42195;
  STACK[0x1088] = STACK[0xBC8];
  STACK[0xCA8] = 0x2CB65625A3C97C37;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - ((v0 + 1462525639) & 0xA8D3C6A8) + 33948))();
}

uint64_t sub_10006F8A0@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((27
                                * ((*(unsigned __int8 *)(v5 + a3) ^ 8 ^ a1)
                                 + (*(unsigned __int8 *)(v4 + a3) ^ 0xA8D33988)
                                 + (((((v3 + a2) & v6) - 20658) ^ 0xF80) & (2 * (*(unsigned __int8 *)(v5 + a3) ^ 8)))
                                 - 2 * ((*(_BYTE *)(v4 + a3) ^ 8) & 0x7F) == -1731512471)) ^ v3)))();
}

uint64_t sub_10006F90C@<X0>(unint64_t a1@<X2>, uint64_t a2@<X8>)
{
  unsigned int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((a2 + 1 != (((v2 ^ 0xDBA4) - 31069) ^ a1)) * v4) ^ v2)) - 4))();
}

uint64_t sub_10006F940@<X0>(int a1@<W7>, unint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;

  STACK[0xCA8] = a2;
  STACK[0x1090] = a2 - 1;
  LODWORD(STACK[0x4AC]) = a1 + 2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 + 281015775) | 0x6061A48) - 382054132) ^ v2)))();
}

uint64_t sub_10006F9A4@<X0>(unint64_t a1@<X8>)
{
  unint64_t v1;
  char v2;
  char v3;
  unsigned int v4;
  uint64_t v5;
  int v6;

  STACK[0xC68] = v1;
  STACK[0x1008] = v1;
  STACK[0xC60] = a1;
  STACK[0x1010] = a1;
  LOBYTE(STACK[0x101E]) = v3;
  LOBYTE(STACK[0x101F]) = v2;
  v6 = (char)(v3 - 91) - (char)(v2 - 60);
  LODWORD(STACK[0x488]) = (v6 ^ 0x6ADF7E66) - 1083380736 + ((((v4 - 15127) | 4) ^ 0xD5BED080) & (2 * v6));
  return (*(uint64_t (**)(void))(v5 + 8 * v4))();
}

uint64_t sub_10006FA18()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x38C]) = STACK[0x488];
  STACK[0xC70] = (unint64_t)*(&off_10112C750 + v0 - 9762) - 6154942;
  STACK[0xC78] = STACK[0xFD0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - ((v0 - 986871125) & 0x3AD26DFD ^ 0x24FDLL)))();
}

uint64_t sub_10006FA7C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 + 26) ^ ((*(_BYTE *)(v1 - 0x67B7A9860F131A7BLL)
                                                                                  - *a1) == 31)) & 1)
                                * ((v2 ^ 0x8B9) - 10833)) ^ v2)))();
}

uint64_t sub_10006FAD0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v0 == ((v1 - 87) ^ 0xAE)) * ((v1 + 195) ^ 0x2D25)) ^ v1))
                            - 8))();
}

uint64_t sub_10006FB0C@<X0>(unint64_t a1@<X8>)
{
  unint64_t v1;
  char v2;
  char v3;
  int v4;
  uint64_t v5;

  STACK[0xC78] = v1;
  STACK[0x1020] = v1 - 1;
  STACK[0xC70] = a1;
  STACK[0x1028] = a1 - 1;
  LOBYTE(STACK[0x1036]) = v3;
  LOBYTE(STACK[0x1037]) = v2;
  LODWORD(STACK[0x494]) = 709651046;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * v4) - ((v4 + 10133) ^ 0x54A8)))();
}

uint64_t sub_10006FB5C@<X0>(unint64_t a1@<X8>)
{
  unint64_t v1;
  char v2;
  char v3;
  int v4;
  uint64_t v5;
  int v6;

  STACK[0xC78] = v1;
  STACK[0x1020] = v1;
  STACK[0xC70] = a1;
  STACK[0x1028] = a1;
  LOBYTE(STACK[0x1036]) = v3;
  LOBYTE(STACK[0x1037]) = v2;
  v6 = (char)(v3 - 91) - (char)(v2 - 60);
  LODWORD(STACK[0x494]) = (v6 ^ 0x6ADF7E66) - 1083380736 + ((v6 << ((v4 - 107) ^ 0xA5)) & 0xD5BEFCCC);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * v4) - 12))();
}

uint64_t sub_10006FBD8()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x480]) = STACK[0x494];
  STACK[0xC80] = (unint64_t)*(&off_10112C750 + v0 - 20466) - 1982916678;
  STACK[0xC88] = STACK[0xFD0];
  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_10006FC24@<X0>(_BYTE *a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((117
                                * ((*(_BYTE *)(v2 - 0x67B7A9860F131A7BLL) + ((v1 + 105) ^ 3) - *a1) == 198)) ^ v1)))();
}

uint64_t sub_10006FC6C()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((13114 * (v0 == (((v1 - 37) & 0xBB) + ((v1 - 78) | 8) - 62))) ^ v1)))();
}

uint64_t sub_10006FCC4@<X0>(unint64_t a1@<X8>)
{
  unint64_t v1;
  char v2;
  char v3;
  int v4;
  uint64_t v5;

  STACK[0xC88] = v1;
  STACK[0x1038] = v1 - 1;
  STACK[0xC80] = a1;
  STACK[0x1040] = a1 - 1;
  LOBYTE(STACK[0x104E]) = v3;
  LOBYTE(STACK[0x104F]) = v2;
  LODWORD(STACK[0x49C]) = 709651046;
  return ((uint64_t (*)(void))(1074093646 - ((v4 + 2001567633) & 0xC8B77E56) + *(_QWORD *)(v5 + 8 * v4) - 16))();
}

uint64_t sub_10006FD2C@<X0>(unint64_t a1@<X8>)
{
  unint64_t v1;
  char v2;
  char v3;
  int v4;
  uint64_t v5;
  int v6;

  STACK[0xC88] = v1;
  STACK[0x1038] = v1;
  STACK[0xC80] = a1;
  STACK[0x1040] = a1;
  LOBYTE(STACK[0x104E]) = v3;
  LOBYTE(STACK[0x104F]) = v2;
  v6 = (char)((v4 ^ 0xFA) - 24 + v3 + 95) - (char)(v2 - 60);
  LODWORD(STACK[0x49C]) = (v6 ^ 0x6ADF7E66) - 1083380736 + ((2 * v6) & 0xD5BEFCCC);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v4 ^ 0x34FA)) - 8))();
}

uint64_t sub_10006FDB0()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x440]) = STACK[0x49C];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 1074084987)) - 4))();
}

uint64_t sub_10006FDF4()
{
  int v0;
  int v1;
  uint64_t v2;

  STACK[0xB70] = ((v0 - 1074074774) ^ 0xFFFFFFFFFFFFB648) + *(_QWORD *)(v2 + 8 * v1);
  STACK[0xB40] = 0;
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 - 1074074723)))();
}

uint64_t sub_10006FE34@<X0>(int a1@<W8>)
{
  char v1;
  int v2;
  uint64_t v3;

  __clrex();
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 + 1) & 1) * v2) ^ a1)))();
}

uint64_t sub_10006FE58@<X0>(int a1@<W8>)
{
  unsigned int *v1;
  int v2;
  unsigned int v3;
  unsigned int v4;

  while (1)
  {
    v4 = __ldaxr(v1);
    if (v4 != v2)
      break;
    if (!__stlxr(v3, v1))
      JUMPOUT(0x10006FE3CLL);
  }
  return sub_10006FE34(a1);
}

uint64_t sub_10006FE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned __int8 *a67;
  int v67;
  char v68;
  uint64_t v69;
  _BOOL4 v70;

  v70 = *a67 == (v67 ^ 0xF2 ^ (v67 - v68 - 23) ^ 0x29);
  STACK[0xE20] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v69 + 8 * ((30193 * v70) ^ v67)) - 8))();
}

uint64_t sub_10006FEC8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t (*v15)(void);

  STACK[0x5F8] = 0xA24DF610C76520ALL;
  STACK[0x600] = 5000;
  v2 = STACK[0xB90];
  v3 = STACK[0xA28];
  v4 = STACK[0xA68];
  v5 = STACK[0xA70];
  v6 = STACK[0xBD8];
  v7 = STACK[0xB38];
  v8 = STACK[0xBD0];
  v9 = STACK[0xA50];
  v10 = STACK[0xA48];
  v11 = STACK[0xA88];
  v12 = STACK[0xB88];
  v13 = STACK[0xB40];
  v14 = STACK[0xB58];
  STACK[0xE28] = STACK[0xAA8];
  STACK[0xE30] = v14;
  STACK[0xE38] = v13;
  STACK[0xE40] = v12;
  STACK[0xE48] = v11;
  STACK[0xE50] = v10;
  STACK[0xE58] = v9;
  STACK[0xE60] = v8;
  STACK[0xE68] = v7;
  STACK[0xE70] = v6;
  STACK[0xE78] = v5;
  STACK[0xE80] = v4;
  STACK[0xE88] = v3;
  v15 = (uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 ^ 0x3891)) - (a1 + 28778) + 29396);
  STACK[0xE90] = v2;
  return v15();
}

uint64_t sub_10006FF80@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;
  uint64_t v3;
  unsigned int v4;

  STACK[0x690] = STACK[0xE90];
  STACK[0x698] = STACK[0xE88];
  STACK[0x6A8] = STACK[0xE80];
  STACK[0x6C8] = STACK[0xE78];
  STACK[0x6F0] = STACK[0xE70];
  STACK[0x708] = STACK[0xE68];
  STACK[0x710] = STACK[0xE60];
  STACK[0x718] = STACK[0xE58];
  STACK[0x720] = STACK[0xE50];
  STACK[0x728] = STACK[0xE48];
  STACK[0x658] = STACK[0xE40];
  STACK[0x730] = STACK[0xE38];
  STACK[0x740] = STACK[0xE30];
  STACK[0x758] = STACK[0xE28];
  STACK[0x760] = (v1 ^ v4) - 29355 + *(_QWORD *)(v3 + 8 * a1);
  STACK[0x6B8] = 0x595B8404C56B56C5;
  STACK[0xE98] = v2;
  STACK[0xEA0] = STACK[0xFD8];
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * v1))(665865272, 665835929);
}

uint64_t sub_10007006C@<X0>(char a1@<W0>, char a2@<W1>, char a3@<W8>)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  int v14;
  char v15;

  v15 = ((((a3 + v3) ^ v11) - (v8 & (2 * ((a3 + v3) ^ v11))) + a1) ^ (v4 + a2)) * (v5 + v3);
  *(_BYTE *)(v6 + v9) = (v15 - (v10 & (2 * v15)) - 109) ^ v13;
  return (*(uint64_t (**)(void))(v12 + 8 * (((v7 != v3) * v14) ^ v4)))();
}

uint64_t sub_1000700C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  unint64_t v12;
  int v13;
  unint64_t v14;

  v10 = v6 - 342;
  v11 = (v6 - 89) ^ 0xF8;
  STACK[0xEA0] = v7 + v5;
  v12 = v8 - v5;
  STACK[0xBA0] = v12;
  v13 = *((unsigned __int8 *)&STACK[0xB34] + (*(_BYTE *)STACK[0xFE0] & 3));
  STACK[0xE98] = v12;
  LODWORD(v12) = v13 - 108 - (((v13 - 108) / 0x41u) | (((v13 - 108) / 0x41u) << 6));
  LODWORD(v12) = (v12 ^ 0xFFFFFFDD) + (((_DWORD)v12 << (v11 ^ 0xBF)) & 0xFFFFFFBA) + 64;
  v14 = STACK[0x6B8]
      + v12
      + ((unint64_t)(v12 < 0x1Du) << 8)
      - 0x595B8404C56B503FLL;
  STACK[0x6D8] = (v14 & 0xFFFFFFFFFFFFFFFCLL ^ 0x5BFBFFCF9FDBFA7DLL) + ((2 * v14) & 0xB7F7FF9F3FB7F4F8);
  LOBYTE(v14) = (*((_BYTE *)&STACK[0xB34] + (*(_BYTE *)STACK[0xFE8] & 3)) - 108) % 0xDu;
  LOBYTE(v14) = 30 - (((v14 ^ 0xE) + ((2 * v14) & 0x1C) + 25) & 0x1C);
  LOBYTE(STACK[0x10D7]) = v14;
  STACK[0xED0] = STACK[0x720];
  STACK[0xED8] = STACK[0x718];
  STACK[0xEE0] = STACK[0x710];
  STACK[0xEE8] = STACK[0x708];
  STACK[0xEF0] = STACK[0x6F0];
  STACK[0xEF8] = STACK[0x6C8];
  STACK[0xF00] = STACK[0x6A8];
  STACK[0xF08] = STACK[0x698];
  STACK[0xF10] = STACK[0x690];
  STACK[0xF18] = (unint64_t)&STACK[0xB34];
  STACK[0xF20] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * ((35 * ((v14 & 0xFE) == 30)) ^ v10))
                                                                                       - 8))(a1, a2, a3, a4, a5, 1074093637);
}

uint64_t sub_10007027C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t a65;
  uint64_t v65;
  unint64_t v66;

  STACK[0x700] = (LOBYTE(STACK[0x10D7]) ^ 0x7F6DFFFFCFDBEEE0)
               + STACK[0x6B8]
               + ((2 * (LOBYTE(STACK[0x10D7]) ^ 0x1Eu)) & 0x1FCLL)
               + (((a1 - 17278) | 0x40050C06u) ^ 0xDBB37E99BDB84246);
  v66 = *(_QWORD *)(a63 + 72);
  STACK[0x768] = v66;
  STACK[0xED0] = STACK[0x720];
  STACK[0xED8] = STACK[0x718];
  STACK[0xEE0] = STACK[0x710];
  STACK[0xEE8] = STACK[0x708];
  STACK[0xEF0] = STACK[0x6F0];
  STACK[0xEF8] = STACK[0x6C8];
  STACK[0xF00] = STACK[0x6A8];
  STACK[0xF08] = STACK[0x698];
  STACK[0xF10] = a65;
  STACK[0xF20] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v65 + 8 * (((v66 != a65) * (((a1 - 1335499395) & 0x4F99CFFF) - 19151)) ^ a1))
                            - 12))();
}

uint64_t sub_100070374()
{
  unsigned int v0;
  uint64_t v1;
  int64_t v2;

  v2 = STACK[0x6D8] - 0x5BFBFFCF2BD1191ELL;
  STACK[0x770] = v2;
  LOBYTE(STACK[0x4CF]) = v2 < (uint64_t)((v0 + 20852) ^ 0x80000000740A7DF0);
  STACK[0xEA8] = STACK[0x768];
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(v1 + 8 * v0) - 8))(STACK[0x6A8]);
}

uint64_t sub_1000703E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v5;
  int v6;
  _BOOL4 v7;
  uint64_t v8;
  int64_t v9;
  int v10;
  _BOOL4 v11;

  v9 = *(_QWORD *)(a5 + 8) + ((v6 - 20852) ^ 0xB58C01A62C3A796ELL);
  v10 = v7 ^ (v9 < (uint64_t)0x80000000740AE15FLL);
  v11 = v9 < v5;
  if (v10)
    v11 = v7;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((v11 * ((v6 - 1916) ^ 0x952B)) ^ v6)) - 4))(a1, a5 + 0x4419796044B4DC3ALL);
}

uint64_t sub_100070470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a72;
  uint64_t v72;
  uint64_t v73;

  return ((uint64_t (*)(void))(*(_QWORD *)(v73
                                        + 8
                                        * (int)(((((a6 + 1008642099) & 0xC3E17DFB) - 28942)
                                               * (*(_QWORD *)(v72 + 24) == a72)) ^ a6))
                            - 8))();
}

uint64_t sub_1000704BC@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, int a6@<W6>, unint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t a65;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(void);

  STACK[0xEA8] = a5;
  STACK[0x798] = v65;
  STACK[0x7A0] = a2;
  STACK[0x7A8] = a4;
  STACK[0x778] = a3;
  STACK[0xED0] = a7;
  STACK[0xED8] = v66;
  STACK[0xEE0] = v67;
  STACK[0xEE8] = v68;
  STACK[0xEF0] = v69;
  STACK[0xEF8] = v70;
  STACK[0xF00] = a1;
  STACK[0xF08] = a2;
  STACK[0xF10] = a65;
  STACK[0xF18] = (unint64_t)&STACK[0xB34];
  v72 = (uint64_t (*)(void))(*(_QWORD *)(v71 + 8 * a6) - ((a6 + 1512402541) & 0xE5DF7E6E ^ 0x40055E4ELL));
  STACK[0xF20] = 0;
  return v72();
}

uint64_t sub_100070550(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, int a5)
{
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  STACK[0xEA8] = v5;
  STACK[0x798] = v5;
  STACK[0x7A0] = a2;
  STACK[0x7A8] = a4;
  STACK[0x778] = a3;
  v7 = a3 - STACK[0x6D8];
  STACK[0x780] = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((94
                                          * (((2
                                             * ((_DWORD)v7
                                              + ((((a5 - 498310088) & 0x1DB377FE) + 1477114931) ^ a5 ^ 0xB3DD))) & 0xDD7EEFBE)
                                           + ((v7
                                             + ((((a5 - 498310088) & 0x1DB377FE) + 1477114931) ^ a5 ^ 0xB3DD)) ^ 0x59E72FFF6EBF77DFuLL)
                                           - 0x59E72FFF6EBF7808 < 0xFFFFFFFFFFFFFFD7)) ^ a5))
                            - 8))();
}

uint64_t sub_100070610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a69;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  unint64_t v74;
  int v75;

  STACK[0x7C0] = v69 + STACK[0x780] + (((v70 + 402660626) | 0x24100A52u) ^ 0x11880175641B0521);
  v74 = STACK[0x6D8] - 0x5BFBFFCF9FDBFA7DLL;
  v73 = STACK[0x6D8] == 0x5BFBFFCF9FDBFA7DLL;
  STACK[0x788] = v74;
  STACK[0xBC0] = v74;
  v75 = v73;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 + 8 * ((395 * v75) ^ v70))
                                                                                                - 4))(a1, a2, a3, v72, a5, 1074093637, a69);
}

uint64_t sub_1000706AC()
{
  unsigned int v0;
  uint64_t v1;

  STACK[0xEB0] = STACK[0x788];
  STACK[0xEB8] = STACK[0x1000];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1
                                                                        + 8
                                                                        * (int)(v0 ^ 0x3C107A41 ^ (23637
                                                                                                 * (v0 > 0xDBEA000D))))
                                                            - 8))(154699500, 3925901604, 65);
}

uint64_t sub_100070734(char a1, char a2, char a3)
{
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  char v13;

  v12 = v6 - 1;
  STACK[0xBC0] = v12;
  v13 = ((((v3 + v9) ^ v10) + v8 - (a1 & (2 * ((v3 + v9) ^ v10)))) ^ v8) * (v3 + ((v4 - v7 + 117) ^ a2));
  *(_BYTE *)(v5 + v12) = (v13 - ((2 * v13) & 0x83) + 65) ^ a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((STACK[0xBC0] != 0) | (2 * (STACK[0xBC0] != 0))) ^ v4)) - 8))();
}

uint64_t sub_1000707A4@<X0>(int a1@<W8>)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  STACK[0xEB8] = v1;
  STACK[0xEB0] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (a1 - 1074083553)) - 4))();
}

uint64_t sub_1000707C8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  int v12;

  v2 = *(_QWORD *)STACK[0x7A8];
  v3 = STACK[0x798];
  v4 = STACK[0x798];
  v5 = (_QWORD *)(STACK[0x798] - 0x4A73FE5A47D0AF0ALL + v2);
  v6 = *v5 == v2;
  v7 = v2 - STACK[0x700];
  v8 = a1 ^ 0x4005077Au;
  v9 = a1 - 1074070794;
  STACK[0x948] = v7;
  v10 = v8 + v3 + 0x6A0904444B3352FDLL + v7;
  STACK[0x7C8] = v10;
  STACK[0x7D0] = (unint64_t)v5;
  v11 = (unint64_t)v5 + 0x4419796044B4DC3ALL;
  STACK[0x808] = v11;
  STACK[0xED0] = STACK[0x720];
  v12 = v6;
  STACK[0xED8] = v11;
  STACK[0xEE0] = v10;
  STACK[0xEE8] = STACK[0x7C0];
  STACK[0xEF0] = STACK[0x6F0];
  STACK[0xEF8] = STACK[0x6C8];
  STACK[0xF00] = STACK[0x6A8];
  STACK[0xF08] = STACK[0x7A0];
  STACK[0xF10] = v4;
  STACK[0xF18] = (unint64_t)&STACK[0xB34];
  STACK[0xF20] = 0;
  return (*(uint64_t (**)(void))(v1 + 8 * ((94 * v12) ^ v9)))();
}

uint64_t sub_1000708BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a70;
  int v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;

  v72 = STACK[0x948] - 0x4B82FD616CFBA4BDLL;
  *(_QWORD *)STACK[0x7A8] = v72;
  v73 = (unint64_t *)STACK[0x7C8];
  v74 = STACK[0x7C8] + 0x4419796044B4DC3ALL;
  v75 = STACK[0x700];
  v76 = ((v70 + 1074070794) ^ 0xFEF100F89AD0540BLL) - STACK[0x700];
  *v73 = v72;
  v73[1] = v76;
  v73[2] = (*(unsigned __int8 *)STACK[0xFF0] | ((unint64_t)(*(unsigned __int8 *)STACK[0xFF0] < 0x6CuLL) << 8))
         + 0x20E908419709C0EELL;
  *(_QWORD *)STACK[0x7D0] = 0x4A73FE5A47D0AF0ALL;
  *(_QWORD *)(a70 + 40) += v75 + 0x4B82FD616CFBA4BDLL;
  STACK[0xED0] = v74;
  STACK[0xED8] = STACK[0x808];
  STACK[0xEE0] = (unint64_t)v73;
  STACK[0xEE8] = STACK[0x7C0];
  STACK[0xEF0] = STACK[0x6F0];
  STACK[0xEF8] = STACK[0x6C8];
  STACK[0xF00] = STACK[0x6A8];
  STACK[0xF08] = STACK[0x7A0];
  STACK[0xF10] = STACK[0x798];
  STACK[0xF20] = (unint64_t)(v73 + 3);
  return (*(uint64_t (**)(void))(v71 + 8 * v70))();
}

uint64_t sub_1000709DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  unint64_t v70;

  v68 = STACK[0x778];
  v69 = (_QWORD *)(v65 - 0x4A73FE5A47D0AF0ALL + STACK[0x778]);
  STACK[0x810] = (unint64_t)v69;
  v70 = (unint64_t)v69 + 0x4419796044B4DC3ALL;
  STACK[0x820] = (unint64_t)v69 + 0x4419796044B4DC3ALL;
  LODWORD(v69) = *v69 == v68;
  STACK[0xED0] = STACK[0x720];
  STACK[0xED8] = STACK[0x718];
  STACK[0xEE0] = STACK[0x710];
  STACK[0xEE8] = STACK[0x708];
  STACK[0xEF0] = STACK[0x6F0];
  STACK[0xEF8] = STACK[0x6C8];
  STACK[0xF00] = v70;
  STACK[0xF08] = STACK[0x7A0];
  STACK[0xF10] = STACK[0x798];
  STACK[0xF20] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 + 8 * (((int)v69 * (a5 - 27334)) ^ a5))
                                                                                                - 8))(a1, a2, a3, v67, a4, 1074093637, a65);
}

uint64_t sub_100070A94@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = STACK[0x798];
  v3 = STACK[0x798];
  v4 = *(_QWORD *)(STACK[0x798] + 32);
  STACK[0x830] = STACK[0x798] + 32;
  v5 = *(_QWORD *)(v4 + 24);
  STACK[0x848] = v4 + 24;
  STACK[0xED0] = STACK[0x720];
  STACK[0xED8] = STACK[0x718];
  STACK[0xEE0] = STACK[0x710];
  STACK[0xEE8] = STACK[0x708];
  STACK[0xEF0] = STACK[0x6F0];
  STACK[0xEF8] = STACK[0x6C8];
  STACK[0xF00] = STACK[0x820];
  STACK[0xF08] = STACK[0x7A0];
  STACK[0xF10] = v3;
  STACK[0xF20] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1620 * (v5 == v2)) ^ a1)) - ((a1 + 1074064604) ^ 0x40055E4ELL)))();
}

uint64_t sub_100070B30@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;

  v51 = STACK[0x798];
  v52 = STACK[0x798];
  v53 = *(_QWORD *)(STACK[0x798] + 24);
  STACK[0x860] = STACK[0x798] + 24;
  STACK[0x870] = v53;
  LODWORD(v51) = *(_QWORD *)(v53 + 32) == v51;
  STACK[0xED0] = STACK[0x720];
  STACK[0xED8] = STACK[0x718];
  STACK[0xEE0] = STACK[0x710];
  STACK[0xEE8] = STACK[0x708];
  STACK[0xEF0] = STACK[0x6F0];
  STACK[0xEF8] = STACK[0x6C8];
  STACK[0xF00] = STACK[0x820];
  STACK[0xF08] = STACK[0x7A0];
  STACK[0xF10] = v52;
  STACK[0xF20] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v50 + 8 * (int)((v51 * (((a1 ^ a50) - 1074070794) ^ 0x5A09)) ^ a1)) - 8))();
}

uint64_t sub_100070BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a70;
  int v70;
  uint64_t v71;
  unint64_t v72;
  _QWORD *v73;
  unint64_t v74;
  BOOL v75;
  unint64_t v76;
  int v77;

  *(_QWORD *)STACK[0x848] = STACK[0x870];
  v72 = STACK[0x860];
  *(_QWORD *)(*(_QWORD *)STACK[0x860] + 32) = *(_QWORD *)STACK[0x830];
  v73 = (_QWORD *)STACK[0x7A8];
  *(_QWORD *)(a70 + 40) = ((v70 - 206625134) & 0x4C55DE77)
                        + *(_QWORD *)STACK[0x7A8]
                        + *(_QWORD *)(a70 + 40)
                        - 0x4A73FE5A87D60D50;
  *v73 = 0x94E7FCB48FA15E14 - *v73;
  v74 = STACK[0x798];
  *(_QWORD *)(STACK[0x798] + 16) = (*(unsigned __int8 *)STACK[0xFF0] | ((unint64_t)(*(unsigned __int8 *)STACK[0xFF0] < 0x6CuLL) << 8))
                                 + 0x20E9084196FBBDD3;
  *(_QWORD *)STACK[0x810] = 0x4A73FE5A47D0AF0ALL;
  v76 = STACK[0x6D8] - 0x5BFBFFCF9FDBFA95;
  v75 = STACK[0x6D8] == 0x5BFBFFCF9FDBFA95;
  STACK[0x960] = v76;
  STACK[0xA38] = v76;
  v77 = !v75;
  STACK[0xED0] = STACK[0x720];
  STACK[0xED8] = STACK[0x718];
  STACK[0xEE0] = STACK[0x710];
  STACK[0xEE8] = STACK[0x708];
  STACK[0xEF0] = v72;
  STACK[0xEF8] = v72;
  STACK[0xF00] = STACK[0x820];
  STACK[0xF08] = STACK[0x7A0];
  STACK[0xF10] = v74;
  STACK[0xF20] = STACK[0x860];
  return (*(uint64_t (**)(void))(v71 + 8 * ((14481 * v77) ^ v70)))();
}

uint64_t sub_100070D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(_QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v41 = STACK[0x960];
  STACK[0xEC0] = STACK[0x960];
  STACK[0xEC8] = STACK[0xFF8];
  v42 = (v39 - 7241) ^ 0x3CF7;
  v43 = (uint64_t (*)(_QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * (v39 - 7241)) - v42);
  return v43(v43, v41, v42, a4, 52, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_100070DC0@<X0>(uint64_t a1@<X1>, char a2@<W4>, uint64_t a3@<X8>)
{
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  char v16;

  v15 = a1 - 1;
  STACK[0xA38] = v15;
  v16 = ((((v10 + v7) ^ v12) + v3 - (v8 & (2 * ((v10 + v7) ^ v12)))) ^ v3) * (v10 + v9 + ((v11 + v5) & v6));
  *(_BYTE *)(a3 + v15) = (v16 - (a2 & (2 * v16)) + 26) ^ v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * (int)(v11 ^ 0x3CF3 ^ (((((STACK[0xA38] - v11) | (v11 - STACK[0xA38])) & 0x8000000000000000) == 0)
                                                              * v14)))
                            - 4))();
}

uint64_t sub_100070E40@<X0>(unsigned int a1@<W0>, unint64_t a2@<X1>, unint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unint64_t a36,unint64_t a37,unint64_t a38,unint64_t a39,unint64_t a40,unint64_t a41,unint64_t a42)
{
  unint64_t v42;
  uint64_t v43;

  STACK[0xEC8] = v42;
  STACK[0xEC0] = a2;
  STACK[0xED0] = a38;
  STACK[0xED8] = a37;
  STACK[0xEE0] = a39;
  STACK[0xEE8] = a36;
  STACK[0xEF0] = a3;
  STACK[0xEF8] = a3;
  STACK[0xF00] = a42;
  STACK[0xF08] = a41;
  STACK[0xF10] = a40;
  STACK[0xF18] = (unint64_t)&STACK[0xB34];
  STACK[0xF20] = a3;
  return (*(uint64_t (**)(void))(v43 + 8 * a1))();
}

uint64_t sub_100070EA0()
{
  STACK[0x888] = STACK[0xF20];
  STACK[0x898] = STACK[0xF18];
  STACK[0x8A8] = STACK[0xF10];
  STACK[0x8B0] = STACK[0xF08];
  STACK[0x8C0] = STACK[0xF00];
  STACK[0x8D0] = STACK[0xEF8];
  STACK[0x8D8] = STACK[0xEF0];
  STACK[0x8E0] = STACK[0xEE8];
  STACK[0x8E8] = STACK[0xEE0];
  STACK[0x908] = STACK[0xED8];
  STACK[0x910] = STACK[0xED0];
  return ((uint64_t (*)(void))STACK[0x760])();
}

uint64_t sub_100070F00(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;
  BOOL v8;

  v8 = STACK[0x888] == 0;
  STACK[0xE10] = STACK[0x730];
  STACK[0xE18] = STACK[0x658];
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((19 * ((v8 ^ (-51 * (a4 ^ (a6 + 5)) + 1)) & 1)) ^ (a4 - 1074073311)))
                            - a7
                            + 20336))();
}

uint64_t sub_100070F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t (*a55)(unint64_t),uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a69;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v70 = 5554 * (a7 ^ 0x4F77u);
  v71 = a55(STACK[0x600]);
  STACK[0x648] = v71;
  STACK[0xE10] = 0;
  STACK[0xE18] = STACK[0x5F8];
  return ((uint64_t (*)(void))(*(_QWORD *)(v69 + 8 * ((12538 * (v71 != 0)) ^ a69)) - (v70 ^ 0x4112)))();
}

uint64_t sub_100070FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a70;
  uint64_t a72;
  int v72;
  uint64_t v73;
  int64_t v74;
  _QWORD *v75;

  v74 = ((STACK[0x5F8] - 0xA24DF610C763E82) & 0xFFFFFFFFFFFFFFFCLL ^ 0xF0B7F7F7FF9FFDEDLL)
      + ((2 * (STACK[0x5F8] - 0xA24DF610C763E82)) & 0xE16FEFEFFF3FFBD8);
  STACK[0x638] = v74;
  STACK[0x640] = (v72 - 341846016) + v74 + 0x59BC06615C9097EFLL;
  v74 += 0xF480808006001FBLL;
  STACK[0x650] = v74;
  LOBYTE(STACK[0x36B]) = v74 >= 0;
  v75 = (_QWORD *)STACK[0x648];
  STACK[0x678] = STACK[0x648] + 0x4419796044B4DC3ALL;
  *v75 = 0x4A73FE5A47D0AF0ALL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v73
                                        + 8 * ((53793 * (*(_QWORD *)(*(_QWORD *)(a70 + 80) + 24) == a72)) ^ v72))
                            - 4))();
}

uint64_t sub_1000710DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a72;
  uint64_t v72;
  int v73;
  uint64_t v74;

  return ((uint64_t (*)(void))(*(_QWORD *)(v74
                                        + 8
                                        * (((*(_QWORD *)(*(_QWORD *)(v72 + 72) + 32) == a72)
                                          * (((v73 - 1021323526) | 0x28800106) + 341829408)) ^ v73))
                            - 4))();
}

uint64_t sub_100071128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a72;
  uint64_t v72;
  int v73;
  uint64_t v74;
  _QWORD *v75;

  v75 = (_QWORD *)STACK[0x648];
  v75[3] = a72;
  v75[4] = *(_QWORD *)(v72 + 80);
  *(_QWORD *)(v72 + 80) = v75;
  *(_QWORD *)(v75[4] + 24) = v75;
  v75[1] = STACK[0x640];
  return ((uint64_t (*)(void))(*(_QWORD *)(v74
                                        + 8
                                        * ((55951
                                          * (((2 * (STACK[0x638] + 6291963)) & 0x7BDDABB0)
                                           + ((STACK[0x638] + 6291963) & 0xFFFFFFFC ^ 0x79DFFDFF3DEED5DBuLL)
                                           - 0x79DFFDFF3DEED604 < (unint64_t)((v73 + 184539118) | 0xE0A00012)
                                                                  - 3953137983u)) ^ v73))
                            - 4))();
}

uint64_t sub_1000711E4()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(STACK[0x648] + STACK[0x650]);
  *v2 = STACK[0x640];
  v2[1] = 0xCA73FE5A47D0AF0ALL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((LOBYTE(STACK[0x36B]) * (((v0 + 564117488) | 0xCA001810) + 341884746)) ^ v0))
                            - 4))();
}

uint64_t sub_100071244()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t (*v3)(void);

  STACK[0xE28] = STACK[0x678];
  v2 = STACK[0x648];
  STACK[0xE30] = STACK[0x648];
  STACK[0xE38] = v2;
  STACK[0xE40] = STACK[0x5F8];
  STACK[0xE50] = STACK[0x910];
  STACK[0xE58] = STACK[0x908];
  STACK[0xE60] = STACK[0x8E8];
  STACK[0xE68] = STACK[0x8E0];
  STACK[0xE70] = STACK[0x8D8];
  STACK[0xE78] = STACK[0x8D0];
  STACK[0xE80] = STACK[0x8C0];
  STACK[0xE88] = STACK[0x8B0];
  STACK[0xE90] = STACK[0x8A8];
  v3 = (uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v0 - 16045) ^ 0x4A4E ^ (25 * ((v0 - 16045) ^ 0x6F1)))) - 4);
  STACK[0xE48] = 0;
  return v3();
}

uint64_t sub_1000712E0()
{
  uint64_t v0;
  int v1;
  unint64_t v2;
  uint64_t v3;

  STACK[0xA90] = STACK[0x898];
  STACK[0xB90] = STACK[0x8A8];
  STACK[0xA28] = STACK[0x8B0];
  STACK[0xA68] = STACK[0x8C0];
  STACK[0xA70] = STACK[0x8D0];
  STACK[0xBD8] = STACK[0x8D8];
  STACK[0xB38] = STACK[0x8E0];
  STACK[0xBD0] = STACK[0x8E8];
  STACK[0xA50] = STACK[0x908];
  STACK[0xA48] = STACK[0x910];
  STACK[0xA88] = 0;
  STACK[0xB88] = STACK[0x5F8];
  v2 = STACK[0x648];
  STACK[0xB40] = STACK[0x648];
  STACK[0xB58] = v2;
  STACK[0xAA8] = STACK[0x678];
  v3 = sub_100DD0758();
  STACK[0xE20] = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v0
                                                      + 8
                                                      * (((v1 != 419525993) * ((v1 + 1415922992) ^ 0x40056460)) ^ (v1 + 341830308)))
                                          - 8))(v3);
}

uint64_t sub_1000713E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = STACK[0xE18];
  v8 = STACK[0xE10];
  STACK[0xA90] = STACK[0x898];
  STACK[0xB90] = STACK[0x8A8];
  STACK[0xA28] = STACK[0x8B0];
  STACK[0xA68] = STACK[0x8C0];
  STACK[0xA70] = STACK[0x8D0];
  STACK[0xBD8] = STACK[0x8D8];
  STACK[0xB38] = STACK[0x8E0];
  STACK[0xBD0] = STACK[0x8E8];
  STACK[0xA50] = STACK[0x908];
  STACK[0xA48] = STACK[0x910];
  v9 = STACK[0x888];
  STACK[0xA88] = STACK[0x888];
  STACK[0xB88] = v7;
  STACK[0xB40] = v8;
  STACK[0xB58] = STACK[0x740];
  STACK[0xAA8] = STACK[0x758];
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(1074093646
                                                                                     - (v6 ^ 0x400567DAu)
                                                                                     + *(_QWORD *)(v5 + 8 * v6)
                                                                                     - 16);
  STACK[0xE20] = v9;
  return v10(a1, a2, a3, a4, a5, 1074093637);
}

uint64_t sub_1000714B8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t (*v5)(void);

  STACK[0xA90] = STACK[0x898];
  STACK[0xB90] = STACK[0x8A8];
  STACK[0xA28] = STACK[0x8B0];
  STACK[0xA68] = STACK[0x8C0];
  STACK[0xA70] = STACK[0x8D0];
  STACK[0xBD8] = STACK[0x8D8];
  STACK[0xB38] = STACK[0x8E0];
  STACK[0xBD0] = STACK[0x8E8];
  STACK[0xA50] = STACK[0x908];
  STACK[0xA48] = STACK[0x910];
  STACK[0xA88] = STACK[0x728];
  STACK[0xB88] = STACK[0x658];
  STACK[0xB40] = STACK[0x730];
  STACK[0xB58] = STACK[0x740];
  STACK[0xAA8] = STACK[0x758];
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a4 - 1074078890)) - 8);
  STACK[0xE20] = STACK[0x888];
  return v5();
}

uint64_t sub_100071570()
{
  _DWORD *v0;
  int v1;

  STACK[0x680] = STACK[0xE20];
  *v0 = v1;
  return ((uint64_t (*)(void))STACK[0xB70])();
}

uint64_t sub_100071584(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v10 = STACK[0x680];
  STACK[0xB80] = STACK[0x680] + v8;
  LODWORD(STACK[0x4B0]) = a8 - 5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((36979 * (v10 != 0)) ^ (a4 - 1074092650))) - 4))();
}

uint64_t sub_1000715CC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v0 + 1629) ^ 0x2A77)) - 4))();
}

uint64_t sub_1000715F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v6 = STACK[0x680];
  STACK[0xA78] = STACK[0x680] + v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((449 * (v6 != 0)) ^ (a4 - 1074057598)))
                            - ((76 * (((a4 - 1074093470) | 0x5004) ^ 0x50A1u)) ^ 0x3D8)))();
}

uint64_t sub_10007165C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                                 + 8
                                                                                 * ((75
                                                                                   * (((LODWORD(STACK[0x38C]) == 709651046) ^ (-41 * (a4 ^ 0xB5))) & 1)) ^ a4))
                                                                     - ((33 * (a4 ^ 0x519Bu)) ^ 0x281BLL)))(a1, a2, a3, v5 - 168);
}

uint64_t sub_1000716F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * (int)((((((v5 + 1552813288) & 0xA371DFFF) + 35567) ^ 0x9FC6) * (LODWORD(STACK[0x480]) == v6)) | v5))
                                                                                                - 4))(a1, a2, a3, a4, a5, 0x13EE293CE1F130D4, 1171563682);
}

uint64_t sub_100071754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int v59;

  v55 = *(_QWORD *)(v51 + 8 * v52) - 12;
  v56 = STACK[0xF98];
  v57 = STACK[0xFA0];
  *(_DWORD *)(v53 - 124) = (v52 - 2027708813) ^ a51;
  *(_DWORD *)(v53 - 152) = a51 + a7 - 2;
  *(_QWORD *)(v53 - 144) = v57;
  *(_QWORD *)(v53 - 136) = a6;
  *(_QWORD *)(v53 - 168) = v55 ^ a51;
  *(_QWORD *)(v53 - 160) = v56;
  v58 = v54(v53 - 168);
  v59 = *(_DWORD *)(v53 - 128);
  LODWORD(STACK[0x4A0]) = v59;
  STACK[0xC98] = (unint64_t)*(&off_10112C750 + (int)v52 - 1604) - 819116847;
  return (*(uint64_t (**)(uint64_t))(v51
                                            + 8
                                            * (int)(v52 ^ 0x2F9A ^ (19804 * (v59 == (((_DWORD)v52 - 1709) ^ 0x7F3C2000))))))(v58);
}

uint64_t sub_100071828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46)
{
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v60;

  v54 = *(_QWORD *)(v51 + 8 * v52) - 12;
  v55 = STACK[0xFA8];
  v60 = v46;
  v56 = STACK[0xFB0];
  v57 = ((~(v53 - 168) & 0x712969950297DE42 | (v53 - 168) & 0x8ED6966AFD6821BDLL) ^ 0x213CB9046E9FFFD2) * v47;
  *(_DWORD *)(v53 - 124) = a46 ^ v57;
  *(_QWORD *)(v53 - 144) = v56;
  *(_QWORD *)(v53 - 136) = v48;
  *(_QWORD *)(v53 - 168) = v54 ^ v57;
  *(_QWORD *)(v53 - 160) = v55;
  *(_DWORD *)(v53 - 152) = v49 + v57 + 1;
  v58 = v50(v53 - 168);
  LODWORD(STACK[0x4A4]) = *(_DWORD *)(v53 - 128);
  STACK[0xCA0] = v60;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v51 + 8 * (v52 + 22307)) - 1833 * (v52 ^ 0x14FDu) + 3662))(v58);
}

uint64_t sub_1000718E0()
{
  unint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v12;

  v5 = *(_QWORD *)(v1 + 8 * v2);
  v6 = STACK[0xF98];
  v7 = STACK[0xFA0];
  v12 = v0;
  v8 = 1891100677 * ((~(v3 - 168) & 0xEDCEB0577D8FA8B7 | (v3 - 168) & 0x12314FA882705748) ^ 0xBDDB60C611878927);
  *(_DWORD *)(v3 - 124) = (v2 - 2027708813) ^ v8;
  *(_DWORD *)(v3 - 152) = v8 + 1171563682;
  *(_QWORD *)(v3 - 144) = v7;
  *(_QWORD *)(v3 - 136) = 0x13EE293CE1F130D4;
  *(_QWORD *)(v3 - 168) = (v5 - 12) ^ v8;
  *(_QWORD *)(v3 - 160) = v6;
  v9 = v4(v3 - 168);
  v10 = *(_DWORD *)(v3 - 128);
  LODWORD(STACK[0x4A0]) = v10;
  STACK[0xC98] = v12;
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (int)((31987 * (v10 == 2134650450)) ^ (((v2 + 1812437624) & 0x93F85EDA ^ 0x2834)
                                                                                   + v2))))(v9);
}

uint64_t sub_100071A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t (*v55)(uint64_t);
  unint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v60 = *(_QWORD *)(v57 + 8 * v58) - 12;
  v61 = STACK[0xFA8];
  v62 = STACK[0xFB0];
  v63 = a52 * v52;
  *(_DWORD *)(v59 - 152) = v54 + v63 + 3;
  *(_DWORD *)(v59 - 124) = a45 ^ v63;
  *(_QWORD *)(v59 - 168) = v60 ^ v63;
  *(_QWORD *)(v59 - 160) = v61;
  *(_QWORD *)(v59 - 144) = v62;
  *(_QWORD *)(v59 - 136) = v53;
  v64 = v55(v59 - 168);
  LODWORD(STACK[0x4A4]) = *(_DWORD *)(v59 - 128);
  STACK[0xCA0] = v56;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v57 + 8 * ((v58 + 25566) ^ v58)) - 4))(v64);
}

uint64_t sub_100071A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int a71;
  int v71;
  uint64_t v72;
  int v73;

  v73 = STACK[0x4A4];
  STACK[0xBC8] = STACK[0xCA0];
  LODWORD(STACK[0x4AC]) = v73;
  return ((uint64_t (*)(unint64_t *, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v72
                                                                                           + 8
                                                                                           * ((14275
                                                                                             * (v73 == 2134650450)) ^ v71))
                                                                               - ((v71 + 1495756804) & 0xE6DDDFEF ^ 0x40055E4ELL)))(&STACK[0x1890], a2, a3, a71);
}

uint64_t sub_100071B0C()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((13730 * ((v0 + 1508216548 + v0 + 382078232) < 0xF3FD89AA)) ^ (v0 + 17477))))();
}

uint64_t sub_100071B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t *v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  LODWORD(STACK[0x4A8]) = v4;
  v10 = *v7;
  v11 = *(_QWORD *)(v9 + 8 * v4) - 4;
  STACK[0xA58] = v11;
  STACK[0xCC0] = v11;
  STACK[0xCC8] = v6;
  STACK[0xCD0] = v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9
                                                                                          + 8
                                                                                          * (int)((58286
                                                                                                 * (v5 < 0x880675E7)) ^ (v8 + v5 + 1183)))
                                                                              - 12))(a1, 0x3C3B3BEE39C42781, a3, a4, 450445913);
}

uint64_t sub_100071C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                          + 8
                                                                                          * ((30
                                                                                            * (LODWORD(STACK[0x440]) == ((((v4 - 32682) | 0x9AA) + 709645483) ^ (v4 - 35567)))) ^ v4))
                                                                              - 12))(a1, a2, a3, a4, 1891100677);
}

uint64_t sub_100071C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  int v58;

  v54 = *(_QWORD *)(v50 + 8 * v51);
  v55 = STACK[0xF98];
  v56 = STACK[0xFA0];
  *(_DWORD *)(v52 - 152) = a50 * a5 + a7;
  *(_DWORD *)(v52 - 124) = (v51 - 2027708813) ^ (a50 * a5);
  *(_QWORD *)(v52 - 144) = v56;
  *(_QWORD *)(v52 - 136) = a6;
  *(_QWORD *)(v52 - 168) = (v54 - 12) ^ (a50 * a5);
  *(_QWORD *)(v52 - 160) = v55;
  v57 = v53(v52 - 168);
  v58 = *(_DWORD *)(v52 - 128);
  LODWORD(STACK[0x4A0]) = v58;
  STACK[0xC98] = a46;
  return (*(uint64_t (**)(uint64_t))(v50 + 8 * (((v58 == 2134650450) * (v51 + 20425)) ^ (v51 + 9830))))(v57);
}

uint64_t sub_100071D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,uint64_t a45,unint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t (*v52)(uint64_t);
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v56 = *(_QWORD *)(v53 + 8 * v54) - 12;
  v57 = STACK[0xFA8];
  v58 = a49 * v49;
  *(_QWORD *)(v55 - 144) = STACK[0xFB0];
  *(_QWORD *)(v55 - 136) = v50;
  *(_QWORD *)(v55 - 168) = v56 ^ v58;
  *(_QWORD *)(v55 - 160) = v57;
  *(_DWORD *)(v55 - 152) = v51 + v58 + 4;
  *(_DWORD *)(v55 - 124) = a44 ^ v58;
  v59 = v52(v55 - 168);
  LODWORD(STACK[0x4A4]) = *(_DWORD *)(v55 - 128);
  STACK[0xCA0] = a46;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v53 + 8 * (((282 * (v54 ^ 0x14F2)) ^ 0x5971) + v54)) - 4))(v59);
}

uint64_t sub_100071DA0@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, int a5@<W8>)
{
  uint64_t v5;

  STACK[0x1050] = *(_QWORD *)((char *)*(&off_10112C750 + (a5 ^ 0x28C3)) - 1482437471);
  STACK[0xF60] = 1724325661;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, const mach_header_64 *))(*(_QWORD *)(v5 + 8 * a5) - 4))(2570641636, 4294960594, 23321, a1, a2, a3, a4, &_mh_execute_header);
}

uint64_t sub_100071E0C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v9 + (v4 >> 32)) = *(_BYTE *)(v5 + (v4 >> 32));
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((v6 + a1 >= ((a4 + v7) | v8) + a2) * a3) ^ a4)) - 4))();
}

uint64_t sub_100071E4C()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  STACK[0xF60] = v1;
  v3 = (*(unsigned int *)STACK[0xFC8] | ((unint64_t)(*(unsigned int *)STACK[0xFC8] < 0x68EC9F33uLL) << 32))
     - 757304575;
  STACK[0x1058] = v3;
  LOBYTE(STACK[0x1067]) = v3 < (unint64_t)(v0 + 1074086838) - 71060498;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 != 1003033140) * (v0 - 6753)) | v0)))();
}

uint64_t sub_100071ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;

  STACK[0x1068] = STACK[0xFD0] - 0x67B7A9860F131A7BLL;
  STACK[0xC90] = 0x62CEDBD4AFA12ECELL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(v8 + 8 * (v7 + 621)))(a1, 1074093637, v9, a4, a5, a6, a7, &STACK[0x11B2]);
}

uint64_t sub_100071F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * (((*(unsigned __int8 *)(v8 + v10 - 0x62CEDBD4AFA12ECELL) == *(unsigned __int8 *)(a8 + v10 - 0x62CEDBD4AFA12ECELL))
                                          * ((v9 + v12) ^ 0x9013)) ^ v9))
                            - ((v9 + 1985452132) & 0x89A7DFFD)
                            + 6796))();
}

uint64_t sub_100071FC0(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((((v3 == 91) ^ (-75 * (v2 ^ 0x21))) & 1)
                                          * (v2 ^ 0x4005CE4E ^ (a2 + 13))) ^ v2))
                            - 12))();
}

uint64_t sub_100072010@<X0>(uint64_t a1@<X8>)
{
  _BOOL4 v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  _BOOL4 v6;

  v6 = a1 - 0x62CEDBD473D81C99 < v2;
  if (v1 != a1 - 0x62CEDBD473D81C99 < v4)
    v6 = v1;
  return (*(uint64_t (**)(void))(v5 + 8 * (v3 ^ (13523 * !v6))))();
}

uint64_t sub_100072078@<X0>(unint64_t a1@<X8>)
{
  char v1;
  int v2;
  unint64_t v3;
  uint64_t v4;

  STACK[0xC90] = v3;
  STACK[0x1070] = a1;
  LOBYTE(STACK[0x107F]) = v1;
  return (*(uint64_t (**)(void))(v4 + 8 * (v2 - 1074086838)))();
}

uint64_t sub_1000720A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unint64_t a47,uint64_t a48,int a49,int a50)
{
  char v50;
  int v51;
  char v52;
  uint64_t v53;
  int v54;

  STACK[0xC90] = a9;
  STACK[0x1070] = a9;
  LOBYTE(STACK[0x107F]) = v50;
  v54 = (char)(v52 - 91) - (char)(v50 - 91);
  LODWORD(STACK[0x4A0]) = 2134608429;
  STACK[0xC98] = a47;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * (int)(((((2 * v54) & 0xEF371F22) + (v54 ^ (v51 - 140806911)) != -140800111) * ((v51 + 1698653254) & 0xDAC5DF6F ^ a50)) ^ v51)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_100072148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unint64_t a46)
{
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  int v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  int v56;
  int v58;

  v50 = v46 ^ 0x40055014;
  v58 = v46 - 1074088263;
  v51 = *(_QWORD *)(v47 + 8 * (v46 - 1074088263));
  v52 = STACK[0xF98];
  v53 = (a4 ^ 0x5015D0916C082190) * a5;
  *(_DWORD *)(v48 - 152) = v53 + a7;
  v54 = STACK[0xFA0];
  *(_DWORD *)(v48 - 124) = (v46 + 1193170220) ^ v53;
  *(_QWORD *)(v48 - 144) = v54;
  *(_QWORD *)(v48 - 136) = a6;
  *(_QWORD *)(v48 - 168) = (v51 + ((v46 + 1717524921) & 0x599B5CFF) - 5387) ^ v53;
  *(_QWORD *)(v48 - 160) = v52;
  v55 = v49(v48 - 168);
  v56 = *(_DWORD *)(v48 - 128);
  LODWORD(STACK[0x4A0]) = v56;
  STACK[0xC98] = a46;
  return (*(uint64_t (**)(uint64_t))(v47
                                            + 8
                                            * (v58 ^ 0x2F9A ^ ((v56 == v50 + 2134646784) | (16
                                                                                          * (v56 == v50 + 2134646784))))))(v55);
}

uint64_t sub_100072250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unint64_t a46)
{
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v52 = *(_QWORD *)(v49 + 8 * a44) - 12;
  v53 = STACK[0xFA8];
  v54 = STACK[0xFB0];
  v55 = ((((v51 - 168) | 0x74FCFD38A8A649A9) - ((v51 - 168) & 0x74FCFD38A8A649A9)) ^ 0x24E92DA9C4AE6839) * v46;
  *(_DWORD *)(v51 - 152) = v48 + v55 + 27;
  *(_QWORD *)(v51 - 144) = v54;
  *(_QWORD *)(v51 - 136) = v47;
  *(_DWORD *)(v51 - 124) = (a44 - 2027708813) ^ v55;
  *(_QWORD *)(v51 - 168) = v52 ^ v55;
  *(_QWORD *)(v51 - 160) = v53;
  v56 = v50(v51 - 168);
  LODWORD(STACK[0x4A4]) = *(_DWORD *)(v51 - 128);
  STACK[0xCA0] = a46;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v49 + 8 * (a44 ^ 0x78DD))
                                          - (a44 - 1709)
                                          + 3662))(v56);
}

uint64_t sub_100072304@<X0>(int a1@<W7>, unint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;

  STACK[0xCA8] = a2;
  STACK[0x1090] = a2;
  LODWORD(STACK[0x4AC]) = a1 + 2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * v2) - ((v2 + 1509937165) & 0xE6057FE6 ^ 0x40055E4ELL)))();
}

uint64_t sub_100072344()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  LODWORD(STACK[0x424]) = STACK[0x4AC];
  v2 = STACK[0xB50];
  STACK[0x10A0] = STACK[0xB50];
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((47516 * (v2 != 0)) ^ (v1 - 1074081888))) - 12))();
}

uint64_t sub_100072384()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_100DD0758();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * v0) - 12))(v2);
}

uint64_t sub_1000723A4()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  v2 = STACK[0xA60];
  STACK[0x10A8] = STACK[0xA60];
  return (*(uint64_t (**)(void))(v0 + 8 * ((112 * (v2 == 0)) ^ (v1 - 1074076581))))();
}

uint64_t sub_1000723E0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v2 = a1 - 3086;
  v3 = sub_100DD0758();
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * v2))(v3);
}

uint64_t sub_100072400()
{
  int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;

  v3 = STACK[0xB80];
  STACK[0x10B0] = STACK[0xB80];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((25704 * (v3 != 0x3C3B3BEE39C42781)) ^ (v0 + v2 - 398)))
                            - ((v0 + v2 - 735) | 0x151u)
                            + 965))();
}

uint64_t sub_100072464@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x10B0] - 0x3C3B3BEE39C42781;
  STACK[0xA98] = ((a1 + 1074092661) ^ 0xFFFFFFFFBFFAA1B2) + *(_QWORD *)(v1 + 8 * a1);
  STACK[0xD18] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (int)(a1 ^ 0x36CB)))();
}

uint64_t sub_1000724C0()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  int v3;

  v2 = *(_QWORD *)STACK[0x730];
  v3 = STACK[0x350];
  STACK[0x288] = *(_QWORD *)(v1 + 8 * v0);
  LODWORD(STACK[0x424]) = 1625975249;
  LODWORD(STACK[0x428]) = 1920261333;
  LODWORD(STACK[0x42C]) = v3;
  STACK[0x430] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v0 + 19540) ^ 0xC2B4) + v0)))();
}

uint64_t sub_100072514()
{
  int v0;
  uint64_t v1;
  int v2;

  v2 = STACK[0x428];
  LODWORD(STACK[0x4C8]) = STACK[0x424];
  LOBYTE(STACK[0x4CF]) = 0;
  LODWORD(STACK[0x4D0]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - (v0 + 4251) + 23956))();
}

#error "100072720: call analysis failed (funcsize=97)"

uint64_t sub_100072724()
{
  LODWORD(STACK[0x85C]) = STACK[0x4EC];
  return ((uint64_t (*)(void))STACK[0x288])();
}

uint64_t sub_100072734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  int v18;
  int v19;

  v19 = STACK[0x85C];
  LODWORD(STACK[0x268]) = STACK[0x85C];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * (((v19 == v18 - 692642877) * (((v18 - 1074093592) | 0x90) ^ 0x370C)) ^ (v18 - 1074071493))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_1000727A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t))
{
  uint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  int v32;

  v30 = *(_QWORD *)STACK[0x730];
  STACK[0x3D8] = *(_QWORD *)(v27 + 8 * v28);
  STACK[0x3E8] = a20;
  LODWORD(STACK[0x400]) = STACK[0x750];
  LODWORD(STACK[0x404]) = -1722771866;
  LODWORD(STACK[0x408]) = STACK[0x754];
  LOWORD(STACK[0x40C]) = 17293;
  LODWORD(STACK[0x410]) = 1887349809;
  STACK[0x3F0] = v30;
  STACK[0x3F8] = 0;
  STACK[0x418] = STACK[0x708];
  *(_QWORD *)(v29 - 160) = &STACK[0x3D8];
  *(_DWORD *)(v29 - 152) = -1745993905
                         - 1891100677
                         * ((270933848
                           - ((v29 - 168) ^ 0xEE623B01 | 0x10261F58)
                           + ((v29 - 168) ^ 0xEE623B01 | 0xEFD9E0A7)) ^ 0x6DB3FA36)
                         + v28;
  v31 = a27(v29 - 168);
  v32 = *(_DWORD *)(v29 - 168);
  LODWORD(STACK[0x440]) = v32;
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * (int)(((v32 == v28 + 2134644622)
                                                   * (((v28 + 1152378907) & 0xFB555F66) - 1074047465)) ^ (v28 + 2661))))(v31);
}

uint64_t sub_1000728D8()
{
  int v0;
  uint64_t v1;

  LOBYTE(STACK[0x2E8]) = -42;
  *(_BYTE *)STACK[0x758] = -91;
  *(_BYTE *)STACK[0x760] = -74;
  *(_BYTE *)STACK[0x768] = -25;
  STACK[0x448] = *(_QWORD *)(v1 + 8 * v0) - 12;
  LODWORD(STACK[0x450]) = -1043466681;
  LODWORD(STACK[0x454]) = 859052510;
  STACK[0x458] = 0;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v0 + 37663) ^ 0xD8D4) + v0)))();
}

uint64_t sub_100072954()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((*(_QWORD *)STACK[0x830] == 0x6CA6F0EE111A2BB6)
                                               * (((v0 + 2078647128) & 0x841A5FFE) - 20979)) ^ v0))
                            - 12))();
}

uint64_t sub_1000729A8()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((v0 - 116) ^ (*(_QWORD *)(STACK[0x830] + 8) == 0x7C0ADF1C3D95FE54)) & 1)
                                          * (((v0 - 1277) | 0x854) + 7964)) ^ (v0 - 10386)))
                            - 12))();
}

uint64_t sub_100072A14()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;

  v4 = STACK[0x848];
  v5 = 1130658149 * ((((v3 - 168) | 0x743B6616) - ((v3 - 168) & 0x743B6616)) ^ 0xB907DFDB);
  v6 = LODWORD(STACK[0x838]) - v5;
  *(_DWORD *)(v3 - 164) = v5 + v2 + 590;
  *(_DWORD *)(v3 - 160) = v6;
  *(_QWORD *)(v3 - 152) = v4;
  v7 = v0(v3 - 168);
  v8 = *(_DWORD *)(v3 - 168);
  LODWORD(STACK[0x850]) = v8;
  LODWORD(STACK[0x37C]) = v8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * ((49982
                                                        * (v8 != (((v2 + 246734) | 0x40014002) ^ 0x56B92A9F ^ (v2 - 493452188) & 0x1D692FF5))) ^ v2))
                                          - 12))(v7);
}

uint64_t sub_100072AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  uint64_t v17;
  uint64_t v18;

  STACK[0x360] = *(_QWORD *)(v17 + 8 * v18);
  STACK[0x4F0] = STACK[0x848];
  LODWORD(STACK[0x4FC]) = STACK[0x850];
  return (*(uint64_t (**)(void))(v17 + 8 * (int)(v18 ^ 0x4005498F ^ ((v18 + 80180) | a17))))();
}

uint64_t sub_100072B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  uint64_t v14;
  int v15;
  int v16;

  v16 = STACK[0x85C];
  LODWORD(STACK[0x350]) = STACK[0x85C];
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * (((v16 == ((v15 - 1074088834) | 0x400) + 381444933) * ((v15 - 1074088834) ^ 0x2B47)) ^ a14)))();
}

uint64_t sub_100072BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t))
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  int v33;

  v30 = *(_QWORD *)STACK[0x730];
  v31 = ((v27 + 1073823616) ^ 0xB2B923E7) + 43222221 * LODWORD(STACK[0x268]);
  STACK[0x3D8] = *(_QWORD *)(v28 + 8 * v27);
  STACK[0x3E8] = a20;
  LODWORD(STACK[0x400]) = v31;
  LODWORD(STACK[0x404]) = -1722772901;
  LODWORD(STACK[0x408]) = STACK[0x74C];
  LOWORD(STACK[0x40C]) = 17293;
  LODWORD(STACK[0x410]) = 1887349809;
  STACK[0x3F0] = v30;
  STACK[0x3F8] = 0;
  STACK[0x418] = STACK[0x710];
  *(_QWORD *)(v29 - 160) = &STACK[0x3D8];
  *(_DWORD *)(v29 - 152) = -1745993905
                         - 1891100677 * ((((v29 - 168) | 0xC9CE3CC) - ((v29 - 168) & 0xC9CE3CC)) ^ 0x6094C25C)
                         + v27;
  v32 = a27(v29 - 168);
  v33 = *(_DWORD *)(v29 - 168);
  LODWORD(STACK[0x440]) = v33;
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * (int)(v27 ^ 0x37ED ^ ((v33 == 2134650450)
                                                                  * (((v27 + 1073823616) | 0x40802) - 1074045683)))))(v32);
}

uint64_t sub_100072CDC()
{
  uint64_t v0;
  int v1;
  int v2;
  unint64_t v3;

  v2 = STACK[0x85C];
  LODWORD(STACK[0x32C]) = STACK[0x85C];
  v3 = *(_QWORD *)STACK[0x730];
  STACK[0x798] = v3;
  STACK[0x438] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((251 * (((v2 == 381450761) ^ ((v1 ^ 0xAC) - 1)) & 1)) ^ (v1 - 1074059470)))
                            - 12))();
}

uint64_t sub_100072D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t (*v11)(uint64_t);
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v15 = STACK[0x85C];
  v16 = *(_QWORD *)(v13 + 8 * v12) - 4;
  v17 = STACK[0x798];
  *(_DWORD *)(v14 - 144) = (v12 - 153633425) ^ a11;
  *(_DWORD *)(v14 - 160) = (v15 + 250532126 - ((((v12 - 806) | 0x400) + 2 * v15 + 1384576298) & 0x4B56964E)) ^ a11;
  *(_QWORD *)(v14 - 152) = v16 ^ a11;
  *(_QWORD *)(v14 - 168) = v17;
  v18 = v11(v14 - 168);
  STACK[0x438] = *(_QWORD *)STACK[0x730];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13
                                                      + 8
                                                      * ((102007 * ((v12 ^ 0x697D066u) > 0x1977986D)) ^ (v12 + 28558)))
                                          - 12))(v18);
}

uint64_t sub_100072E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t))
{
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  int v33;

  v30 = STACK[0x438];
  v31 = 43222221 * LODWORD(STACK[0x350]) - 222792285;
  STACK[0x3D8] = *(_QWORD *)(v28 + 8 * v27);
  STACK[0x3E8] = a20;
  LODWORD(STACK[0x400]) = v31;
  LODWORD(STACK[0x404]) = -1707172503;
  LODWORD(STACK[0x408]) = 32585238;
  LOWORD(STACK[0x40C]) = 17293;
  LODWORD(STACK[0x410]) = STACK[0x748];
  STACK[0x3F0] = v30;
  STACK[0x3F8] = a24;
  STACK[0x418] = STACK[0x718];
  *(_DWORD *)(v29 - 152) = -1745993905
                         - 1891100677
                         * ((723528719 - ((v29 - 168) | 0x2B202C0F) + ((v29 - 168) | 0xD4DFD3F0)) ^ 0xB8D7F260)
                         + v27;
  *(_QWORD *)(v29 - 160) = &STACK[0x3D8];
  v32 = a27(v29 - 168);
  v33 = *(_DWORD *)(v29 - 168);
  LODWORD(STACK[0x440]) = v33;
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * (((v33 == 2134650450) * (((v27 - 734050285) & 0x6BC5FF6E) - 1074046298)) ^ (v27 + 2661))))(v32);
}

uint64_t sub_100072F38()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)STACK[0x730];
  STACK[0x288] = *(_QWORD *)(v1 + 8 * (v0 - 5640));
  LODWORD(STACK[0x424]) = 1625975249;
  LODWORD(STACK[0x428]) = 1953816542;
  LODWORD(STACK[0x42C]) = STACK[0x73C];
  STACK[0x430] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v0 - 5640) ^ 0x8E8A) + v0 - 5640)))();
}

uint64_t sub_100072F94()
{
  uint64_t v0;
  int v1;
  int v2;

  v2 = STACK[0x85C];
  LODWORD(STACK[0x384]) = STACK[0x85C];
  return (*(uint64_t (**)(void))(v0 + 8 * (((v2 == 381450761) * ((v1 ^ 0x40057F6F) - 8434)) ^ (v1 - 1074079594))))();
}

uint64_t sub_100072FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  unint64_t v19;

  v19 = *(_QWORD *)STACK[0x730];
  STACK[0x7A0] = v19;
  STACK[0x7A8] = v19 + 0x177ECD13451C78A8;
  STACK[0x260] = v19 + 0x177ECD13451C78A8;
  LODWORD(STACK[0x440]) = 2134608427;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * (((v19 != 0) * (((a9 + 338201) | 0x40001404) - 1074088554)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_100073068()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(_QWORD *)STACK[0x7A0] == 0x6CA6F0EE111A2BB6)
                                          * (v0 ^ (v0 + 1769) ^ 0xEE9 ^ 0xC9D7)) ^ (v0 + 1769)))
                            - 12))();
}

uint64_t sub_1000730B8()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * ((3817 * (*(_QWORD *)(STACK[0x7A0] + 8) != 0x7C0ADF1C3D95FE54)) ^ v0))
                            - ((v0 + 1074068020) ^ 0x40055E4ALL)))();
}

uint64_t sub_100073110@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(STACK[0x7A0] + 40);
  LODWORD(STACK[0x7B4]) = v2;
  LODWORD(STACK[0x440]) = 2134608236;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((50510 * ((v2 & 1) == 0)) ^ a1))
                            - ((a1 + 1229921228) & 0xF6B5DE67 ^ 0x40055E4ALL)))();
}

uint64_t sub_100073174@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _BOOL4 v2;

  v2 = (STACK[0x7B4] & 2) != ((a1 + 1074068020) ^ 0x56B9244F ^ (a1 + 381425143));
  LODWORD(STACK[0x440]) = 2134608235;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((6733 * v2) | a1)) - 12))();
}

uint64_t sub_1000731D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(uint64_t))
{
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;

  v26 = STACK[0x85C];
  v27 = 1130658149 * ((v25 - 168) ^ 0xCD3CB9CD);
  *(_QWORD *)(v25 - 152) = STACK[0x7A8];
  *(_DWORD *)(v25 - 164) = v27 - 381427013 + v23;
  *(_DWORD *)(v25 - 160) = v26 - v27;
  v28 = a23(v25 - 168);
  v29 = *(_DWORD *)(v25 - 168);
  LODWORD(STACK[0x7B8]) = v29;
  LODWORD(STACK[0x354]) = v29;
  LODWORD(STACK[0x440]) = 2134608240;
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((7302
                                              * (((v23 - 12) ^ ((((v23 + 55) | a14) + 1) ^ (((v29 - v23) | (v23 - v29)) < 0))) & 1)) | v23 ^ 0x16BC5B20)))(v28);
}

uint64_t sub_1000732B4()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v0 + 8 * (v1 & 0x5AA9BFEF));
  LODWORD(STACK[0x58C]) = STACK[0x7B8];
  STACK[0x590] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v1 & 0x5AA9BFEF ^ 0x40056985 ^ ((v1 & 0x5AA9BFEF) + 1074089561)))
                            - 8))();
}

uint64_t sub_100073304()
{
  uint64_t v0;
  int v1;
  _BOOL4 v2;

  v2 = LODWORD(STACK[0x82C]) == (v1 ^ 0x3F397014);
  LODWORD(STACK[0x440]) = STACK[0x82C];
  return (*(uint64_t (**)(void))(v0 + 8 * ((30632 * v2) ^ (v1 - 1074085149))))();
}

uint64_t sub_100073358@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26)
{
  uint64_t v26;
  unint64_t v27;
  int v28;

  v27 = *(_QWORD *)STACK[0x730];
  v28 = STACK[0x268];
  STACK[0x288] = *(_QWORD *)(v26 + 8 * (int)a1) + (a1 ^ 0xFFFFFFFFFFFFFF42);
  LODWORD(STACK[0x424]) = a26;
  LODWORD(STACK[0x428]) = a16;
  LODWORD(STACK[0x42C]) = v28;
  STACK[0x430] = v27;
  return (*(uint64_t (**)(void))(v26 + 8 * (int)(a1 + 36404)))();
}

uint64_t sub_1000733A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27)
{
  uint64_t v27;
  int v28;

  return (*(uint64_t (**)(void))(v27
                              + 8 * (((LOWORD(STACK[0x896]) == 18756) * ((a27 - 957) ^ 0x933)) ^ (v28 - 1074054697))))();
}

uint64_t sub_1000733F0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  int v3;

  v2 = STACK[0x260];
  v3 = STACK[0x354];
  STACK[0x360] = *(_QWORD *)(v1 + 8 * a1) - 12;
  STACK[0x4F0] = v2;
  LODWORD(STACK[0x4FC]) = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * (a1 ^ 0x40054982 ^ (a1 + 1074089833))))();
}

uint64_t sub_100073438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36,int a37,int a38,__int16 a39,int a40,int a41,__int16 a42,__int16 a43,__int16 a44,__int16 a45,__int16 a46,int a47,int a48,int a49,int a50,int a51,uint64_t a52,int a53,int a54,__int16 a55,int a56,__int16 a57,int a58,__int16 a59,int a60,int a61,__int16 a62,int a63)
{
  int a65;
  __int16 a67;
  int a69;
  __int16 a72;
  __int16 a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int v82;
  int v83;
  int v84;
  uint64_t v85;
  int v86;
  unsigned int v87;

  LODWORD(STACK[0x57C]) = a48;
  LODWORD(STACK[0x86C]) = a47;
  LODWORD(STACK[0x87C]) = a76;
  LODWORD(STACK[0x884]) = a77;
  LODWORD(STACK[0x514]) = a79;
  LODWORD(STACK[0x510]) = a78;
  LODWORD(STACK[0x340]) = a80;
  LODWORD(STACK[0x880]) = a80;
  LODWORD(STACK[0x2B0]) = a75;
  LODWORD(STACK[0x890]) = a75;
  LODWORD(STACK[0x52C]) = a81;
  LODWORD(STACK[0x254]) = a82;
  LODWORD(STACK[0x6EC]) = a82;
  LODWORD(STACK[0x6FC]) = v84;
  LODWORD(STACK[0xA10]) = a82;
  LODWORD(STACK[0xA14]) = v83;
  LODWORD(STACK[0xA24]) = v82;
  LODWORD(STACK[0x23C]) = a74;
  LOWORD(STACK[0x31A]) = a59;
  LOWORD(STACK[0x490]) = a46;
  LOWORD(STACK[0x280]) = a62;
  LOWORD(STACK[0x486]) = a55;
  LODWORD(STACK[0x488]) = a65;
  LOWORD(STACK[0x48E]) = a67;
  LOWORD(STACK[0x47E]) = a57;
  LODWORD(STACK[0x480]) = a63;
  LOWORD(STACK[0x484]) = a72;
  LODWORD(STACK[0x7E4]) = a69;
  LODWORD(STACK[0x55C]) = a49;
  LOWORD(STACK[0x476]) = a44;
  LOWORD(STACK[0x492]) = a73;
  LODWORD(STACK[0x494]) = a53;
  LODWORD(STACK[0x7E8]) = a51;
  LODWORD(STACK[0x244]) = a41;
  LODWORD(STACK[0x4EC]) = a35;
  LODWORD(STACK[0x4E0]) = a37;
  LOWORD(STACK[0x346]) = a42;
  LODWORD(STACK[0x4E4]) = a38;
  v87 = LODWORD(STACK[0xA24]) - 2134650471;
  LODWORD(STACK[0x4E8]) = a36;
  LOWORD(STACK[0x856]) = a39;
  LODWORD(STACK[0x858]) = a40;
  LODWORD(STACK[0x440]) = 2134608238;
  return (*(uint64_t (**)(void))(v85
                              + 8
                              * ((47412 * ((((v86 - 1074093028) ^ (v87 < 0xFFFFFFEB)) & 1) == 0)) ^ (v86 - 1074085149))))();
}

uint64_t sub_1000735F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;

  v6 = STACK[0x260];
  v7 = STACK[0x354];
  STACK[0x2D8] = *(_QWORD *)(v5 + 8 * v4) - 8;
  LODWORD(STACK[0x5A4]) = -412593438;
  LODWORD(STACK[0x5A8]) = v7 + 20;
  LODWORD(STACK[0x5AC]) = v7;
  STACK[0x5B0] = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8 * (v4 + (v4 ^ 0x2DC7) - 2151)))(a1, a2, 105, a4, 4294967217);
}

uint64_t sub_100073654()
{
  uint64_t v0;
  int v1;
  int v2;

  v2 = STACK[0x9A4];
  LODWORD(STACK[0x31C]) = STACK[0x9A4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8 * ((24162 * (v2 == ((v1 - 1074092263) ^ 0x7F3C2B0D))) ^ (v1 - 1074092263)))
                            - 12))();
}

uint64_t sub_100073698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  char v26;
  uint64_t v27;
  uint64_t v28;
  int v29;

  v28 = *(_QWORD *)(v27 + 8 * a4);
  v29 = STACK[0x354];
  STACK[0x538] = STACK[0x260];
  LODWORD(STACK[0x540]) = v29;
  LOBYTE(STACK[0x546]) = v26;
  LOBYTE(STACK[0x547]) = -52;
  STACK[0x548] = (a4 + 1074092263) - 1074093650 + v28;
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 + 8 * (a4 ^ 0x3FEE)) - 12))(a1, 0x93590F11EEE5D44ALL, a2, 4286735353, a3, a26, a25);
}

uint64_t sub_100073714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27)
{
  uint64_t v27;
  int v28;
  _BOOL4 v29;

  v29 = LODWORD(STACK[0x31C]) == 2134650450;
  LODWORD(STACK[0x440]) = STACK[0x31C];
  return (*(uint64_t (**)(void))(v27 + 8 * ((v29 * (a27 + 39116)) ^ (v28 - 1074085149))))();
}

uint64_t sub_100073758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(uint64_t),int a26,int a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;

  v29 = *(_QWORD *)STACK[0x730];
  v30 = *(_QWORD *)(v27 + 8 * (a27 + 848)) - 4;
  *(_DWORD *)(v28 - 160) = (LODWORD(STACK[0x384]) + 250532126 - ((2 * LODWORD(STACK[0x384]) + 1384582126) & 0x4B56964E)) ^ a19;
  *(_QWORD *)(v28 - 168) = v29;
  *(_QWORD *)(v28 - 152) = v30 ^ a19;
  *(_DWORD *)(v28 - 144) = (a27 - 153632577) ^ a19;
  v31 = a25(v28 - 168);
  v32 = *(_DWORD *)(v28 - 140);
  LODWORD(STACK[0x440]) = v32;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27
                                                      + 8
                                                      * ((a27 + 848) ^ 0x71F8 ^ (3301
                                                                               * (v32 == (((a27 - 664) | 0x568) ^ (((a27 + 848) ^ 0x40054BAC) + 1060560114))))))
                                          - 12))(v31);
}

uint64_t sub_100073834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int v28;

  v24 = *(_QWORD *)STACK[0x730];
  v25 = *(_QWORD *)(v21 + 8 * v22);
  v26 = STACK[0x728];
  *(_DWORD *)(v23 - 116) = LODWORD(STACK[0x794]) - a17;
  *(_QWORD *)(v23 - 160) = v26;
  *(_QWORD *)(v23 - 152) = v24;
  *(_QWORD *)(v23 - 144) = 0x4ED7EAA72CB46DBFLL;
  *(_DWORD *)(v23 - 136) = a17 + v22 + 1741049975;
  *(_QWORD *)(v23 - 128) = v25 ^ a17;
  *(_QWORD *)(v23 - 168) = a18;
  v27 = a21(v23 - 168);
  v28 = *(_DWORD *)(v23 - 120);
  LODWORD(STACK[0x440]) = v28;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21
                                                      + 8
                                                      * ((60458
                                                        * (v28 == (((_DWORD)v22 - 349312659) & 0x54D75F6E) + 1060556812)) ^ ((int)v22 + 20136)))
                                          - 12))(v27);
}

uint64_t sub_100073904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15)
{
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  int v21;

  v18 = *(_QWORD *)STACK[0x730];
  v19 = LODWORD(STACK[0x294]) - 891109304;
  STACK[0x390] = ((v15 + 1073753901) | 0x51846u) - 1074093650 + *(_QWORD *)(v16 + 8 * v15) + 8;
  STACK[0x3A0] = a15;
  STACK[0x3B0] = v18;
  LODWORD(STACK[0x398]) = v19;
  STACK[0x3B8] = STACK[0x740];
  *(_DWORD *)(v17 - 156) = v15
                         - 1891100677
                         * ((((v17 - 168) | 0x331A8F06) - (v17 - 168) + ((v17 - 168) & 0xCCE570F8)) ^ 0x5F12AE96)
                         - 1475918041;
  *(_QWORD *)(v17 - 168) = &STACK[0x390];
  v20 = ((uint64_t (*)(uint64_t))((char *)*(&off_10112C750 + v15 - 1990) - 719275327))(v17 - 168);
  v21 = *(_DWORD *)(v17 - 160);
  LODWORD(STACK[0x440]) = v21;
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((27709 * (v21 == 2134650450)) ^ (v15 + 2646))))(v20);
}

uint64_t sub_100073A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t))
{
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  int v32;

  v30 = *(_QWORD *)STACK[0x730];
  STACK[0x3D8] = *(_QWORD *)(v28 + 8 * (v27 - 15));
  STACK[0x3E8] = a20;
  LODWORD(STACK[0x400]) = STACK[0x750];
  LODWORD(STACK[0x404]) = -1740727712;
  LODWORD(STACK[0x408]) = 32585238;
  LOWORD(STACK[0x40C]) = 17293;
  LODWORD(STACK[0x410]) = 1887349809;
  STACK[0x3F0] = v30;
  STACK[0x3F8] = 0;
  STACK[0x418] = STACK[0x720];
  *(_DWORD *)(v29 - 152) = -1745993905
                         - 1891100677
                         * ((1286134573 - ((v29 - 168) | 0x4CA8DB2D) + ((v29 - 168) | 0xB35724D2)) ^ 0xDF5F0542)
                         + v27
                         - 15;
  *(_QWORD *)(v29 - 160) = &STACK[0x3D8];
  v31 = a27(v29 - 168);
  v32 = *(_DWORD *)(v29 - 168);
  LODWORD(STACK[0x440]) = v32;
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * (((v32 == 2134650450) * ((v27 + 1074087795) ^ 0x40050442)) | (v27 - 15) ^ 0x37ED)))(v31);
}

uint64_t sub_100073B34()
{
  int v0;
  uint64_t v1;

  STACK[0x448] = *(_QWORD *)(v1 + 8 * v0) + (v0 ^ 0xADC5u) - 41111;
  LODWORD(STACK[0x450]) = -1260590266;
  LODWORD(STACK[0x454]) = 859052526;
  STACK[0x458] = (unint64_t)&STACK[0x370];
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0x88ED)))();
}

uint64_t sub_100073B8C@<X0>(int a1@<W8>)
{
  unint64_t v1;
  _DWORD *v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;

  STACK[0x460] = v1;
  STACK[0x468] = (unint64_t)v2;
  v4 = STACK[0x458];
  v5 = STACK[0x454];
  v6 = STACK[0x450];
  v7 = STACK[0x448];
  LODWORD(STACK[0x7BC]) = *v2;
  v8 = *(_QWORD *)STACK[0x730];
  STACK[0x7C0] = v8;
  STACK[0x228] = v7;
  LODWORD(STACK[0x2B8]) = v6;
  LODWORD(STACK[0x2A8]) = v5;
  STACK[0x300] = v4;
  STACK[0x338] = v1;
  STACK[0x7C8] = v8 + 0x177ECD13451C78A8;
  STACK[0x200] = v8 + 0x177ECD13451C78A8;
  LODWORD(STACK[0x4C4]) = 2134608427;
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((v8 == 0) * ((a1 - 27248) ^ 0x40056862 ^ (a1 - 40550989) & 0x426F7FFF)) ^ a1)))();
}

uint64_t sub_100073C40()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)STACK[0x7C0];
  STACK[0x7D0] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((25925 * (v2 == 0x6CA6F0EE111A2BB6)) ^ v0))
                            - (((v0 ^ 0x24Eu) - 6747) ^ 0x1A1ELL)))();
}

uint64_t sub_100073C94()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(_QWORD *)(STACK[0x7C0] + 8) != 0x7C0ADF1C3D95FE54)
                                          * ((v0 ^ 0x40056A2B) - 1074093048)) ^ v0))
                            - (v0 ^ 0x2E7Fu)
                            + 6662))();
}

uint64_t sub_100073CF4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(STACK[0x7C0] + 40);
  LODWORD(STACK[0x7D8]) = v2;
  LODWORD(STACK[0x4C4]) = 2134608236;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((36713 * (((((a1 + 2651) | 0x1000) - 13420) & v2) == 0)) ^ a1))
                            - 8))();
}

uint64_t sub_100073D40()
{
  int v0;
  uint64_t v1;
  _BOOL4 v2;

  v2 = (STACK[0x7D8] & 2) != ((v0 - 129521784) & 0x7B83DDE ^ 0x19D4);
  LODWORD(STACK[0x4C4]) = 2134608235;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((24314 * v2) ^ v0)) - 12))();
}

uint64_t sub_100073D98@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _BOOL4 v2;

  STACK[0x2E0] = STACK[0x7C8];
  v2 = STACK[0x7C0] == 0;
  LODWORD(STACK[0x4C4]) = 2134608427;
  return ((uint64_t (*)(void))(1074093646
                            - (a1 + 1074087026)
                            + *(_QWORD *)(v1 + 8 * ((v2 * (a1 - 5646)) ^ a1))
                            - 16))();
}

uint64_t sub_100073DF4@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * (((STACK[0x7D0] != 0x6CA6F0EE111A2BB6) * (a1 - 6569)) ^ (a1 + 16109)))
                            - 4))();
}

uint64_t sub_100073E3C()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((((v0 - 18111) | 0x810) ^ 0x1A16) & STACK[0x7D8]) == 0) * (v0 ^ 0x72A8)) ^ v0))
                            - 4))();
}

uint64_t sub_100073E84@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * ((15222 * (*(_QWORD *)(STACK[0x7C0] + 8) != 0x7C0ADF1C3D95FE54)) ^ a1))
                            - 8))();
}

uint64_t sub_100073EBC@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((18114 * ((LOBYTE(STACK[0x7D8]) >> 2) & 1)) ^ a1))
                            - ((a1 + 1074086964) ^ 0x40055E4ELL)))();
}

uint64_t sub_100073F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(uint64_t))
{
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;

  v25 = STACK[0x7BC];
  v26 = 1130658149 * ((v24 + 2017835713 - 2 * ((v24 - 168) & 0x7845BB69)) ^ 0xB57902A4);
  *(_QWORD *)(v24 - 152) = STACK[0x7C8];
  *(_DWORD *)(v24 - 164) = v26 + v22 - 10583;
  *(_DWORD *)(v24 - 160) = v25 - v26;
  v27 = a22(v24 - 168);
  v28 = *(_DWORD *)(v24 - 168);
  LODWORD(STACK[0x7DC]) = v28;
  LODWORD(STACK[0x2AC]) = v28;
  LODWORD(STACK[0x4C4]) = 2134608240;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23
                                                      + 8
                                                      * (((v28 == 381450761)
                                                        * ((((v22 - 31635) | 0x472) + 1074089854) ^ (v22 + 1074059307))) ^ v22))
                                          - 4))(v27);
}

uint64_t sub_100073FEC()
{
  uint64_t v0;
  uint64_t v1;

  STACK[0x360] = (v1 ^ 0x400550BC) - 1074093650 + *(_QWORD *)(v0 + 8 * v1) + 4;
  STACK[0x4F0] = STACK[0x7C8];
  LODWORD(STACK[0x4FC]) = STACK[0x7DC];
  return (*(uint64_t (**)(void))(v0 + 8 * (int)(v1 ^ 0x17E3 ^ (11083 * ((_DWORD)v1 == -1181551717)))))();
}

uint64_t sub_10007405C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36,int a37,int a38,__int16 a39,int a40,int a41,__int16 a42,__int16 a43,__int16 a44,__int16 a45,__int16 a46,int a47,int a48,int a49,int a50,int a51,uint64_t a52,int a53,int a54,__int16 a55,int a56,__int16 a57,int a58,__int16 a59,int a60,int a61,__int16 a62,int a63)
{
  int a65;
  __int16 a67;
  int a69;
  __int16 a72;
  __int16 a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int v82;
  int v83;
  int v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t (*v88)(void);

  LODWORD(STACK[0x57C]) = a48;
  LODWORD(STACK[0x86C]) = a47;
  LODWORD(STACK[0x87C]) = a76;
  LODWORD(STACK[0x884]) = a77;
  LODWORD(STACK[0x514]) = a79;
  LODWORD(STACK[0x510]) = a78;
  LODWORD(STACK[0x340]) = a80;
  LODWORD(STACK[0x880]) = a80;
  LODWORD(STACK[0x2B0]) = a75;
  LODWORD(STACK[0x890]) = a75;
  LODWORD(STACK[0x254]) = a82;
  LODWORD(STACK[0x52C]) = a81;
  LODWORD(STACK[0x6EC]) = a82;
  LODWORD(STACK[0x6FC]) = v84;
  LODWORD(STACK[0xA10]) = a82;
  LODWORD(STACK[0xA14]) = v83;
  LODWORD(STACK[0xA24]) = v82;
  LODWORD(STACK[0x23C]) = a74;
  LOWORD(STACK[0x31A]) = a59;
  LOWORD(STACK[0x490]) = a46;
  LOWORD(STACK[0x280]) = a62;
  LOWORD(STACK[0x486]) = a55;
  LODWORD(STACK[0x488]) = a65;
  LOWORD(STACK[0x48E]) = a67;
  LOWORD(STACK[0x47E]) = a57;
  LODWORD(STACK[0x480]) = a63;
  LOWORD(STACK[0x484]) = a72;
  LODWORD(STACK[0x7E4]) = a69;
  LODWORD(STACK[0x55C]) = a49;
  LOWORD(STACK[0x476]) = a44;
  LOWORD(STACK[0x492]) = a73;
  LODWORD(STACK[0x494]) = a53;
  LODWORD(STACK[0x7E8]) = a51;
  LODWORD(STACK[0x244]) = a41;
  LODWORD(STACK[0x4EC]) = a35;
  LODWORD(STACK[0x4E0]) = a37;
  LOWORD(STACK[0x346]) = a42;
  LODWORD(STACK[0x4E4]) = a38;
  LODWORD(STACK[0x4E8]) = a36;
  LOWORD(STACK[0x856]) = a39;
  LODWORD(STACK[0x858]) = a40;
  LODWORD(STACK[0x2C8]) = STACK[0xA24];
  v87 = *(_QWORD *)(v85 + 8 * (v86 - 1074089568)) - 8;
  LODWORD(STACK[0x58C]) = STACK[0x2AC];
  v88 = (uint64_t (*)(void))(*(_QWORD *)(v85 + 8 * ((v86 - 1074089568) ^ 0x37C8)) - 8);
  STACK[0x590] = v87;
  return v88();
}

uint64_t sub_1000741EC@<X0>(unint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  _QWORD *v23;
  _DWORD *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  int v30;
  unint64_t v31;
  __int16 v32;
  uint64_t (*v33)(void);
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;

  v27 = *(_QWORD *)(a1 + v26);
  v28 = ((2 * (LODWORD(STACK[0x58C]) - 381450747)) & 0xFBDFDF7A)
      + ((LODWORD(STACK[0x58C]) - 381450747) ^ 0xFDEFEFBD)
      + 34607171;
  v29 = *(unsigned __int8 *)(v27 + v28 - 0x6CA6F0EE111A2BB6);
  v30 = *(_DWORD *)(*v23 + (*v24 & v25));
  v31 = -8231943
      * ((-8231943 * ((((_DWORD)v27 + (_DWORD)v28) ^ v30) & 0x7FFFFFFF)) ^ ((-8231943
                                                                           * ((((_DWORD)v27 + (_DWORD)v28) ^ v30) & 0x7FFFFFFFu)) >> 16));
  v32 = *(unsigned __int8 *)(a21 + (v31 >> 24));
  STACK[0x598] = a1;
  v33 = (uint64_t (*)(void))STACK[0x590];
  v34 = -79
      * ((-8231943
        * ((-8231943 * ((((_DWORD)v27 + (_DWORD)v28) ^ v30) & 0x7FFFFFFF)) ^ ((-8231943
                                                                             * ((((_DWORD)v27 + (_DWORD)v28) ^ v30) & 0x7FFFFFFFu)) >> 16))) >> 24);
  v35 = v27 + (v28 + 1);
  LOBYTE(v27) = *(_BYTE *)(v35 - 0x6CA6F0EE111A2BB6);
  v36 = -8231943
      * ((-8231943 * ((v35 ^ v30) & 0x7FFFFFFF)) ^ ((-8231943 * ((v35 ^ v30) & 0x7FFFFFFF)) >> 16));
  LOWORD(v36) = (*(_BYTE *)(a21 + (v36 >> 24)) ^ v27 ^ *(_BYTE *)(a22 + (v36 >> 24) + 2) ^ *(_BYTE *)(a23 + (v36 >> 24) + 2) ^ v36 ^ (-79 * BYTE3(v36))) | (unsigned __int16)(((unsigned __int16)(v32 ^ v29 ^ *(unsigned __int8 *)(a22 + (v31 >> 24) + 2) ^ *(unsigned __int8 *)(a23 + (v31 >> 24) + 2) ^ (unsigned __int16)v31) ^ (unsigned __int16)v34) << 8);
  LOWORD(STACK[0x896]) = (v36 ^ 0xEB47) + 24061 + ((2 * v36) & 0xD68E);
  return v33();
}

uint64_t sub_100074324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  int v13;
  unsigned int v14;

  v14 = LOWORD(STACK[0x896]);
  LOWORD(STACK[0x368]) = v14;
  LODWORD(STACK[0x7E0]) = (v14 | ((v14 < 0x4944) << 16)) + 1976362425;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12
                                                                        + 8
                                                                        * ((44506
                                                                          * (v14 == (unsigned __int16)(v13 - 5378))) ^ (v13 - 1074080258)))
                                                            - (a12 ^ 0x3448)))(a1, a2, 105);
}

uint64_t sub_1000743AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12)
{
  uint64_t v12;
  _BOOL4 v13;

  v13 = LODWORD(STACK[0x2C8]) - 2134650471 < ((a12 + 1074080258) ^ 0xBFFAA1AD);
  LODWORD(STACK[0x4C4]) = 2134608239;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((41 * v13) ^ a12)) - (a12 ^ 0xA775) + 37669))();
}

uint64_t sub_100074424@<X0>(int a1@<W8>)
{
  uint64_t v1;

  LODWORD(STACK[0x378]) = LODWORD(STACK[0x7E0]) - 1968001687;
  LODWORD(STACK[0x4C4]) = 2134608427;
  LOWORD(STACK[0x492]) = STACK[0x896];
  LODWORD(STACK[0x494]) = 384143400;
  return ((uint64_t (*)(void))(3429567108 - (a1 - 865437861) + *(_QWORD *)(v1 + 8 * a1)))();
}

uint64_t sub_10007447C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,int a30,int a31,__int16 a32,int a33,int a34,__int16 a35,__int16 a36,__int16 a37,__int16 a38,__int16 a39,int a40,int a41,int a42,int a43,int a44,uint64_t a45,int a46,int a47,__int16 a48,int a49,__int16 a50,int a51,__int16 a52,int a53,int a54,__int16 a55,int a56,int a57,int a58,int a59,__int16 a60,int a61,int a62,int a63)
{
  __int16 a65;
  __int16 a66;
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t (*v79)(void);

  LODWORD(STACK[0x57C]) = a41;
  LODWORD(STACK[0x86C]) = a40;
  LODWORD(STACK[0x87C]) = a69;
  LODWORD(STACK[0x884]) = a70;
  LODWORD(STACK[0x23C]) = a67;
  LOWORD(STACK[0x31A]) = a52;
  LOWORD(STACK[0x490]) = a39;
  LODWORD(STACK[0x340]) = a73;
  LODWORD(STACK[0x880]) = a73;
  LODWORD(STACK[0x2B0]) = a68;
  LODWORD(STACK[0x890]) = a68;
  LOWORD(STACK[0x280]) = a55;
  LOWORD(STACK[0x486]) = a48;
  LODWORD(STACK[0x488]) = a58;
  LOWORD(STACK[0x48E]) = a60;
  LOWORD(STACK[0x47E]) = a50;
  LODWORD(STACK[0x480]) = a56;
  LOWORD(STACK[0x484]) = a65;
  LODWORD(STACK[0x7E4]) = a62;
  LODWORD(STACK[0x55C]) = a42;
  LOWORD(STACK[0x476]) = a37;
  LOWORD(STACK[0x492]) = a66;
  LODWORD(STACK[0x494]) = a46;
  LODWORD(STACK[0x7E8]) = a44;
  LODWORD(STACK[0x244]) = a34;
  LODWORD(STACK[0x4EC]) = a28;
  LODWORD(STACK[0x4E0]) = a30;
  LOWORD(STACK[0x346]) = a35;
  LODWORD(STACK[0x4E4]) = a31;
  LODWORD(STACK[0x4E8]) = a29;
  LOWORD(STACK[0x856]) = a32;
  LODWORD(STACK[0x858]) = a33;
  LODWORD(STACK[0x6EC]) = a75;
  LODWORD(STACK[0x6FC]) = v77;
  LODWORD(STACK[0xA10]) = a75;
  LODWORD(STACK[0xA14]) = v76;
  LODWORD(STACK[0xA24]) = v75;
  LODWORD(STACK[0x514]) = a72;
  LODWORD(STACK[0x510]) = a71;
  LODWORD(STACK[0x52C]) = a74;
  v79 = (uint64_t (*)(void))(*(_QWORD *)(v78 + 8 * a1) - (a1 - 7365) + 3731);
  LODWORD(STACK[0x254]) = v75;
  return v79();
}

uint64_t sub_1000745C8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  int v3;

  v2 = STACK[0x218];
  v3 = STACK[0x2B0];
  STACK[0x360] = *(_QWORD *)(v1 + 8 * a1) - 8;
  STACK[0x4F0] = v2;
  LODWORD(STACK[0x4FC]) = v3;
  return ((uint64_t (*)(void))(1074093646 - (a1 + 1074089895) + *(_QWORD *)(v1 + 8 * (a1 ^ 0x37AB)) - 20))();
}

uint64_t sub_100074620()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 1074075549)) - 12))();
}

uint64_t sub_10007463C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v4 + 8 * ((v5 + v3 - 1117) ^ 0x7565))
                                                                                            - ((v3 - 513269385) & 0xDE92FB56)
                                                                                            + 31500))(a1, a2, a3, LOWORD(STACK[0x492]), LOWORD(STACK[0x484]), *(_QWORD *)(v4 + 8 * (v5 + v3 - 1117)), LODWORD(STACK[0x7E4]));
}

uint64_t sub_100074778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v8 = STACK[0x2E0];
  v9 = *(_QWORD *)(v7 + 8 * a7);
  STACK[0x278] = v9;
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                + 8
                                                                                                * (a7 ^ 0x2C3D ^ (a7 - 1493449334) & 0x590435FF));
  STACK[0x550] = v9;
  STACK[0x560] = v8;
  return v10(a1, a2, a3, a4, a5, a6, a6);
}

uint64_t sub_1000747CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * ((40122 * ((v5 + 568315634) < 0x7AD4B07)) ^ (v5 + 29570)))
                                                                                       - 8))(a1, a2, a3, a4, a5, *(_QWORD *)(v6 + 8 * v5) - 12);
}

uint64_t sub_100074864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58)
{
  int v58;
  unint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v66;

  LODWORD(a51) = v61;
  LODWORD(a52) = a7;
  HIDWORD(a53) = a5;
  LODWORD(a43) = -a58;
  STACK[0x568] = v63;
  STACK[0x570] = v59;
  STACK[0x580] = a6;
  STACK[0x860] = v63;
  LODWORD(v66) = STACK[0x2B8];
  HIDWORD(v66) = v60;
  STACK[0x870] = STACK[0x2E0];
  v64 = STACK[0x218];
  STACK[0x888] = STACK[0x218];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 + 8 * v58) - 8))(a1, a2, a3, a4, a5, a6, a7, v64, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           v66,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_1000748F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  int v8;
  uint64_t v9;

  STACK[0x518] = a8;
  return (*(uint64_t (**)(void))(v9 + 8 * ((v8 + 2049) ^ 0x3613)))();
}

uint64_t sub_100074914@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t (*v59)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  STACK[0x2F0] = *(_QWORD *)(v58 + 8 * v55) - 4;
  v59 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * (v57 + a7 + 5795)) - ((a7 - 1175315143) & 0x608FF94) + 31496);
  return v59(((v56 - 381450753) ^ 0x9F6FFDBB) + 2143074048, a1, a2, a3, a4, v59, a5, a6, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_1000749A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  unint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;

  v63 = *(_QWORD *)(v62 + 8 * a8) + v61;
  STACK[0x520] = v59;
  STACK[0x530] = v63;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 + 8 * v60) - (((v60 - 23762) | 0x40054004u) ^ 0x40055E4ELL)))(a1, a2, a3, a4, a5, v63, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_1000749EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  unint64_t v6;
  unint64_t *v7;

  STACK[0x6F0] = v6;
  STACK[0x700] = (unint64_t)a6;
  STACK[0xA18] = *v7;
  return a6();
}

uint64_t sub_100074BCC()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_100074BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  int v63;
  uint64_t v64;

  return (*(uint64_t (**)(void))(v64
                              + 8
                              * ((v62 + a62 == (((v63 ^ 0x40055E45) + 11105) ^ 0xD8D11FC3 ^ (11133 * (v63 ^ 0x40055E45)))) ^ (v63 - 1074063294))))();
}

uint64_t sub_100074C40()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v1 - 33214) * v0) ^ v1)) - ((v1 - 32231) ^ 0x49CLL)))();
}

uint64_t sub_100074C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  int v8;
  uint64_t v9;

  STACK[0x500] = *(_QWORD *)(v9 + 8 * v8);
  STACK[0x508] = a8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (v8 ^ 0x1DE3 ^ (v8 - 906))) - 4))();
}

uint64_t sub_100074CB8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v1 - 1074093586) * (v2 + v0 != 869509758)) ^ (v1 - 1074065538)))
                            - 12))();
}

uint64_t sub_100074D18()
{
  int v0;
  unint64_t v1;
  uint64_t v2;

  STACK[0x518] = v1;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v0 - 1074090191) ^ 0x3604)))();
}

uint64_t sub_100074D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,uint64_t a57)
{
  int v57;
  int v58;
  int v59;
  uint64_t v60;

  return ((uint64_t (*)(void))(*(_QWORD *)(v60 + 8 * ((86 * (v59 + v57 + 1413004366 == a56)) ^ (v58 - 1074068770)))
                            - a57
                            + 1216))();
}

uint64_t sub_100074DAC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  STACK[0x500] = *(_QWORD *)(v2 + 8 * v0) + (v0 ^ 0x5CE) - 266;
  STACK[0x508] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ 0x1CBD)) - 4))();
}

uint64_t sub_100074DE8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  STACK[0x358] = v56;
  v58 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 + 8 * (a7 + 6908)) - 12);
  return v58(((15754 * (a7 ^ 0x104) + v55 - 381482261) ^ 0xFFACBCBF) + 528480252, a1, a2, a3, a4, v58, a5, a6, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_100074E54()
{
  return ((uint64_t (*)(void))STACK[0x360])();
}

uint64_t sub_100074E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,unsigned int a38,unsigned int a39)
{
  uint64_t v39;
  int v40;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v39 + 8 * (v40 - 1074078203)))(a39, a38, LODWORD(STACK[0x37C]));
}

uint64_t sub_100074EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t (*a62)(void))
{
  return a62();
}

uint64_t sub_100074EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,unsigned int a52,int a53,int a54,unsigned int a55)
{
  int v55;
  uint64_t v56;
  int v57;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v56 + 8 * ((v57 - 1074084467) ^ ((8 * (a43 + v55 == 1750507051)) | (32 * (a43 + v55 == 1750507051)))))
                                                                                              - ((v57 - 1074068214) ^ 0x1C19u)
                                                                                              + 32573))(a1, a2, a3, a4, a55, a6, a52);
}

uint64_t sub_100074F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t (*a63)(void))
{
  return a63();
}

uint64_t sub_100074F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,unsigned int a52,int a53,int a54,unsigned int a55)
{
  int v55;
  uint64_t v56;
  int v57;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v56 + 8 * ((((325 * (((v57 - 1074084854) | 0x4100) ^ 0x6366)) ^ 0xAA58) * (a43 + v55 != 1750507051)) ^ (v57 - 1074064457)))
                                                                                              - 8))(a1, a2, a3, a4, a55, a6, a52);
}

uint64_t sub_100074FF4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, unsigned int a17)
{
  unint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  __int16 v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int v26;
  BOOL v27;
  int v28;
  int v29;
  int v30;
  int v31;

  v20 = *(_DWORD *)(a1 + 4 * ((a17 % (v17 >> 2)) & 0x3FFFFFFC));
  v21 = ~*(_WORD *)(a1 + 4 * (((v17 >> 2) - 1) & (unsigned __int16)v20));
  v22 = ~v20;
  v23 = (uint64_t)*(&off_10112C750 + v19 - 1074090877);
  v24 = *(unsigned int *)(v23 - 634675579);
  v25 = (char *)*(&off_10112C750 + v19 - 1074091137) + 4 * v24;
  v26 = *(_DWORD *)(v25 - 1841666295);
  v28 = *(_DWORD *)&v21 & HIWORD(v22);
  v27 = v28 == 0;
  v29 = v28 + v28 * v26;
  if (v27)
    v30 = *(_DWORD *)(v25 - 1841666295);
  else
    v30 = 0;
  *(_DWORD *)(v25 - 1841666295) = (v29 + v30) * v26;
  *(_DWORD *)(v23 - 634675579) = ((int)v24 + 1) % 6u;
  v31 = !v27;
  return (*(uint64_t (**)(void))(v18 + 8 * ((8 * v31) | (16 * v31) | (v19 - 1074067584))))();
}

uint64_t sub_1000750DC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v2 - 1074078203)))(3573, v0);
}

uint64_t sub_100075118(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  _BOOL4 v7;

  v6 = a3 + a2 + 377123512;
  v7 = v3 - 1783193334 < v6;
  if (v3 - 1783193334 < (((v5 - 1074092613) | 0x1AE) ^ 0xAC731EBC) != v6 < (v5 ^ 0xEC764555))
    v7 = v6 < (v5 ^ 0xEC764555);
  return (*(uint64_t (**)(void))(v4 + 8 * ((2 * !v7) | (4 * !v7) | (v5 - 1074072445))))();
}

uint64_t sub_1000751D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v58;

  HIDWORD(a35) = v51;
  LODWORD(v58) = a2;
  HIDWORD(v58) = a1 + 1;
  v54 = STACK[0x218];
  v55 = (v52 - 1226) + *(_QWORD *)(v53 + 8 * v52) - 237;
  STACK[0x278] = v55;
  v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * (int)(v52 ^ 0x2C2C));
  STACK[0x550] = v55;
  STACK[0x560] = v54;
  return v56(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           __PAIR64__(a2, a3),
           __PAIR64__(v51, a1),
           v58,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_100075220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,unsigned int a45,uint64_t a46,uint64_t a47,int a48,int a49,uint64_t a50,unsigned int a51,uint64_t a52,uint64_t a53,uint64_t a54,unsigned int a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a67;
  int v67;
  uint64_t v68;
  int v69;

  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, _QWORD))(v68
                                                                                             + 8 * (v69 - 1074081226)))(a51, a45, a3, a55, (a49 + 1), a6, (a67 - 2134650450 + v67));
}

uint64_t sub_100075284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,unsigned int a52,int a53,int a54,unsigned int a55,unsigned int a56)
{
  int v56;
  uint64_t v57;
  int v58;

  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD))(v57 + 8 * (v58 - 1074081247)))((v56 - 2134650450 + LODWORD(STACK[0x388])), LOWORD(STACK[0x368]), a3, a56, a55, a52);
}

uint64_t sub_100075310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7 + 8 * v6)
                                                                                               - ((v6 - 1075985272) & 0xFDFEF74B ^ 0xBDDCE544)))(a1, a2, a3, a4, a5, a6, (LODWORD(STACK[0x2AC]) + 20));
}

uint64_t sub_100075358@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((50
                                               * (((v1 ^ ~a1 ^ (v1 + 1109631703)) & (a1 - v1) | a1 & ~v1) >> 31)) ^ (v1 + 1109590451 + v1 + 1109609255)))
                            - 12))();
}

uint64_t sub_1000753B4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X6>, int a4@<W8>)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                + 8
                                                                                * ((27
                                                                                  * (a4 == ((((v4 - 4030) | 0x5154)
                                                                                           + 1074064457) ^ 0xF3D4E940))) ^ v4)))(a3, a2, a1, a2, 13528);
}

uint64_t sub_100075414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  __int16 v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  _BOOL4 v48;
  uint64_t v49;
  _BOOL4 v50;

  v44 = (v42 - 1074068214);
  v45 = v42 - 1074084427;
  v46 = (unsigned __int16)(((v42 + 1290) ^ 0x6699) + a5 - 5618);
  v47 = (unsigned __int16)(v41 - 9366);
  v48 = v46 < 0x24AE;
  v49 = v48 ^ (v47 < 0x24AE);
  v50 = v46 > v47;
  if ((_DWORD)v49)
    v50 = v48;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * ((26032 * !v50) ^ v45)) - 12))(a1, a2, a3, a4, a5, v49, a7, v44, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1000754BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v42 = STACK[0x2E0];
  v43 = *(_QWORD *)(v41 + 8 * a9) - 12;
  STACK[0x278] = v43;
  v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8 * (int)((((a9 - 1381) | 0x81) + 11109) ^ a9));
  STACK[0x550] = v43;
  STACK[0x560] = v42;
  HIDWORD(a40) = a5;
  return v44(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_100075508@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (35 * (a1 >= -1059329722))))
                            - ((v1 + 75361360) & 0xFB81BBFF ^ 0x3063)))();
}

uint64_t sub_100075550@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X6>, int a4@<W8>)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                + 8
                                                                                * ((27
                                                                                  * (a4 == ((v4 + 1708256744) & 0x9A2DFBFD)
                                                                                         - 1059358903)) ^ (v4 - 22448))))(a3, a2, a1, a2, 13528);
}

uint64_t sub_1000755C4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X6>, int a4@<W8>)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                + 8
                                                                                * ((27
                                                                                  * (a4 == (((v4 + 337311) | 0x40000840) ^ 0xFDD9CAFB ^ ((v4 + 4477) | 0x3019)))) ^ v4)))(a3, a2, a1, a2, 13528);
}

uint64_t sub_10007563C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v41;
  __int16 v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  _BOOL4 v47;
  BOOL v48;
  uint64_t v49;

  v44 = (v41 - 1662783149) & 0x631BFFFF;
  v45 = (unsigned __int16)(v42 + ((v41 - 3757) ^ 0x7A9F));
  v46 = (unsigned __int16)(a2 + 1378);
  v47 = v45 < 0x4EA6;
  v48 = v45 > v46;
  if (v47 != v46 < 0x4EA6)
    v48 = v47;
  v49 = *(_QWORD *)(v43 + 8 * ((1001 * (((v41 + 94) ^ v48) & 1)) ^ v41));
  LODWORD(STACK[0x388]) = a1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 - 8))(a1, a2, a3, a4, a5, a6, a6, v44, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1000756DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58)
{
  __int16 v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  _BOOL4 v62;
  _BOOL4 v63;

  v60 = LOWORD(STACK[0x368]);
  v61 = (unsigned __int16)(482 * (a8 ^ 0x6346) + v58 - 15728);
  v62 = v61 < ((unsigned __int16)(769 * (a8 ^ 0x6361)) ^ 0xB3E2u);
  v63 = v61 > (unsigned __int16)(v60 - 10353);
  if (v62 != (v60 - 10353) < 0x20D3)
    v63 = v62;
  LODWORD(STACK[0x478]) = a58;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * (int)((13 * v63) | a8)) - 12))(a1, a2, a3, v60, a5, a7, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_100075770@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,int a30,int a31,__int16 a32,int a33,int a34,__int16 a35,__int16 a36,__int16 a37,__int16 a38,__int16 a39,int a40,int a41,int a42,int a43,int a44,uint64_t a45,int a46,int a47,__int16 a48,int a49,__int16 a50,int a51,__int16 a52,int a53,int a54,__int16 a55,int a56,int a57,int a58,int a59,__int16 a60,int a61,int a62,int a63)
{
  __int16 a65;
  __int16 a66;
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int v75;
  int v76;
  int v77;
  uint64_t v78;

  LODWORD(STACK[0x57C]) = a41;
  LODWORD(STACK[0x86C]) = a40;
  LODWORD(STACK[0x87C]) = a69;
  LODWORD(STACK[0x884]) = a70;
  LODWORD(STACK[0x23C]) = a67;
  LOWORD(STACK[0x31A]) = a52;
  LOWORD(STACK[0x490]) = a39;
  LODWORD(STACK[0x340]) = a73;
  LODWORD(STACK[0x880]) = a73;
  LODWORD(STACK[0x2B0]) = a68;
  LODWORD(STACK[0x890]) = a68;
  LOWORD(STACK[0x280]) = a55;
  LOWORD(STACK[0x486]) = a48;
  LODWORD(STACK[0x488]) = a58;
  LOWORD(STACK[0x48E]) = a60;
  LOWORD(STACK[0x47E]) = a50;
  LODWORD(STACK[0x480]) = a56;
  LOWORD(STACK[0x484]) = a65;
  LODWORD(STACK[0x7E4]) = a62;
  LODWORD(STACK[0x55C]) = a42;
  LOWORD(STACK[0x476]) = a37;
  LOWORD(STACK[0x492]) = a66;
  LODWORD(STACK[0x494]) = a46;
  LODWORD(STACK[0x7E8]) = a44;
  LODWORD(STACK[0x244]) = a34;
  LODWORD(STACK[0x4EC]) = a28;
  LODWORD(STACK[0x4E0]) = a30;
  LOWORD(STACK[0x346]) = a35;
  LODWORD(STACK[0x4E4]) = a31;
  LODWORD(STACK[0x4E8]) = a29;
  LOWORD(STACK[0x856]) = a32;
  LODWORD(STACK[0x858]) = a33;
  LODWORD(STACK[0x6EC]) = a75;
  LODWORD(STACK[0x6FC]) = v77;
  LODWORD(STACK[0xA10]) = a75;
  LODWORD(STACK[0xA14]) = v76;
  LODWORD(STACK[0xA24]) = v75;
  LODWORD(STACK[0x514]) = a72;
  LODWORD(STACK[0x510]) = a71;
  LODWORD(STACK[0x52C]) = a74;
  LODWORD(STACK[0x254]) = v75;
  return (*(uint64_t (**)(void))(v78 + 8 * (a1 - 693)))();
}

uint64_t sub_1000758C4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  int v3;

  v2 = STACK[0x2E0];
  v3 = STACK[0x340];
  STACK[0x360] = ((a1 - 404795420) & 0x5825FF7E) - 1074093650 + *(_QWORD *)(v1 + 8 * a1);
  STACK[0x4F0] = v2;
  LODWORD(STACK[0x4FC]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 ^ 0x37D7)) - 12))();
}

uint64_t sub_100075918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned int a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36,int a37,int a38,__int16 a39,int a40,int a41,__int16 a42,__int16 a43,__int16 a44,__int16 a45,__int16 a46,int a47,int a48,int a49,int a50,int a51,uint64_t a52,int a53,int a54,__int16 a55,int a56,__int16 a57,int a58,__int16 a59,int a60,int a61,__int16 a62,int a63)
{
  int a65;
  __int16 a67;
  int a69;
  __int16 a72;
  __int16 a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int v82;
  int v83;
  int v84;
  uint64_t v85;
  uint64_t (*v86)(void);

  LODWORD(STACK[0x57C]) = a48;
  LODWORD(STACK[0x86C]) = a47;
  LODWORD(STACK[0x87C]) = a76;
  LODWORD(STACK[0x884]) = a77;
  LODWORD(STACK[0x23C]) = a74;
  LOWORD(STACK[0x31A]) = a59;
  LODWORD(STACK[0x340]) = a80;
  LODWORD(STACK[0x880]) = a80;
  LODWORD(STACK[0x2B0]) = a75;
  LODWORD(STACK[0x890]) = a75;
  LOWORD(STACK[0x490]) = a46;
  LOWORD(STACK[0x280]) = a62;
  LOWORD(STACK[0x486]) = a55;
  LODWORD(STACK[0x488]) = a65;
  LOWORD(STACK[0x48E]) = a67;
  LOWORD(STACK[0x47E]) = a57;
  LODWORD(STACK[0x480]) = a63;
  LOWORD(STACK[0x484]) = a72;
  LODWORD(STACK[0x7E4]) = a69;
  LODWORD(STACK[0x55C]) = a49;
  LOWORD(STACK[0x476]) = a44;
  LOWORD(STACK[0x492]) = a73;
  LODWORD(STACK[0x494]) = a53;
  LODWORD(STACK[0x7E8]) = a51;
  LODWORD(STACK[0x244]) = a41;
  LODWORD(STACK[0x4EC]) = a35;
  LODWORD(STACK[0x4E0]) = a37;
  LOWORD(STACK[0x346]) = a42;
  LODWORD(STACK[0x4E4]) = a38;
  LODWORD(STACK[0x4E8]) = a36;
  LOWORD(STACK[0x856]) = a39;
  LODWORD(STACK[0x858]) = a40;
  LODWORD(STACK[0x6EC]) = a82;
  LODWORD(STACK[0x6FC]) = v84;
  LODWORD(STACK[0xA10]) = a82;
  LODWORD(STACK[0xA14]) = v83;
  LODWORD(STACK[0xA24]) = v82;
  LODWORD(STACK[0x514]) = a79;
  LODWORD(STACK[0x510]) = a78;
  LODWORD(STACK[0x52C]) = a81;
  v86 = (uint64_t (*)(void))(*(_QWORD *)(v85 + 8 * a26) - (a26 ^ 0x4A31) + 3763);
  LODWORD(STACK[0x254]) = v82;
  return v86();
}

uint64_t sub_100075A6C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  int v3;

  v2 = STACK[0x2E0];
  v3 = STACK[0x388];
  STACK[0x360] = *(_QWORD *)(v1 + 8 * a1) - 4;
  STACK[0x4F0] = v2;
  LODWORD(STACK[0x4FC]) = v3;
  return ((uint64_t (*)(void))(1074093646 - (a1 ^ 0x400550F9u) + *(_QWORD *)(v1 + 8 * (a1 + 10869)) - 20))();
}

uint64_t sub_100075ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36,int a37,int a38,__int16 a39,int a40,int a41,__int16 a42,__int16 a43,__int16 a44,__int16 a45,__int16 a46,int a47,int a48,int a49,int a50,int a51,uint64_t a52,int a53,int a54,__int16 a55,int a56,__int16 a57,int a58,__int16 a59,int a60,int a61,__int16 a62,int a63)
{
  int a65;
  __int16 a67;
  int a69;
  __int16 a72;
  __int16 a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int v82;
  int v83;
  int v84;
  uint64_t v85;
  int v86;
  BOOL v87;
  int v88;
  uint64_t (*v89)(void);

  LODWORD(STACK[0x57C]) = a48;
  LODWORD(STACK[0x86C]) = a47;
  LODWORD(STACK[0x87C]) = a76;
  LODWORD(STACK[0x884]) = a77;
  LODWORD(STACK[0x514]) = a79;
  LODWORD(STACK[0x510]) = a78;
  LODWORD(STACK[0x340]) = a80;
  LODWORD(STACK[0x880]) = a80;
  LODWORD(STACK[0x2B0]) = a75;
  LODWORD(STACK[0x890]) = a75;
  LODWORD(STACK[0x52C]) = a81;
  LODWORD(STACK[0x254]) = a82;
  LODWORD(STACK[0x6EC]) = a82;
  LODWORD(STACK[0x6FC]) = v84;
  LODWORD(STACK[0xA10]) = a82;
  LODWORD(STACK[0xA14]) = v83;
  LODWORD(STACK[0xA24]) = v82;
  LODWORD(STACK[0x23C]) = a74;
  LOWORD(STACK[0x31A]) = a59;
  LOWORD(STACK[0x490]) = a46;
  LOWORD(STACK[0x280]) = a62;
  LOWORD(STACK[0x486]) = a55;
  LODWORD(STACK[0x488]) = a65;
  LOWORD(STACK[0x48E]) = a67;
  LOWORD(STACK[0x47E]) = a57;
  LODWORD(STACK[0x480]) = a63;
  LOWORD(STACK[0x484]) = a72;
  LODWORD(STACK[0x7E4]) = a69;
  LODWORD(STACK[0x55C]) = a49;
  LOWORD(STACK[0x476]) = a44;
  LOWORD(STACK[0x492]) = a73;
  LODWORD(STACK[0x494]) = a53;
  LODWORD(STACK[0x7E8]) = a51;
  LODWORD(STACK[0x244]) = a41;
  LODWORD(STACK[0x4EC]) = a35;
  LODWORD(STACK[0x4E0]) = a37;
  LOWORD(STACK[0x346]) = a42;
  LODWORD(STACK[0x4E4]) = a38;
  v87 = LODWORD(STACK[0xA24]) - 2134650450 == (LODWORD(STACK[0x844]) ^ 0x60EA69D0);
  LODWORD(STACK[0x4E8]) = a36;
  v88 = v87;
  LOWORD(STACK[0x856]) = a39;
  v89 = (uint64_t (*)(void))(*(_QWORD *)(v85 + 8 * ((15 * v88) ^ (v86 - 1074082530)))
                          - ((v86 - 1074089895) ^ 0xE93));
  LODWORD(STACK[0x858]) = a40;
  return v89();
}

uint64_t sub_100075C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36,int a37,int a38,__int16 a39,int a40,int a41,__int16 a42,__int16 a43,__int16 a44,__int16 a45,__int16 a46,int a47,int a48,int a49,int a50,int a51,uint64_t a52,int a53,int a54,__int16 a55,int a56,__int16 a57,int a58,__int16 a59,int a60,int a61,__int16 a62,int a63)
{
  int a65;
  __int16 a67;
  int a69;
  __int16 a72;
  __int16 a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int v82;
  int v83;
  int v84;
  uint64_t v85;
  int v86;
  int v87;
  int v88;
  uint64_t (*v89)(void);

  LODWORD(STACK[0x57C]) = a48;
  LODWORD(STACK[0x86C]) = a47;
  LODWORD(STACK[0x87C]) = a76;
  LODWORD(STACK[0x884]) = a77;
  LODWORD(STACK[0x514]) = a79;
  LODWORD(STACK[0x510]) = a78;
  LODWORD(STACK[0x340]) = a80;
  LODWORD(STACK[0x880]) = a80;
  LODWORD(STACK[0x2B0]) = a75;
  LODWORD(STACK[0x890]) = a75;
  LODWORD(STACK[0x254]) = a82;
  LODWORD(STACK[0x52C]) = a81;
  LODWORD(STACK[0x6EC]) = a82;
  LODWORD(STACK[0x6FC]) = v84;
  LODWORD(STACK[0xA10]) = a82;
  LODWORD(STACK[0xA14]) = v83;
  LODWORD(STACK[0xA24]) = v82;
  LODWORD(STACK[0x23C]) = a74;
  LOWORD(STACK[0x31A]) = a59;
  LOWORD(STACK[0x490]) = a46;
  LOWORD(STACK[0x280]) = a62;
  LOWORD(STACK[0x486]) = a55;
  LODWORD(STACK[0x488]) = a65;
  LOWORD(STACK[0x48E]) = a67;
  LOWORD(STACK[0x47E]) = a57;
  LODWORD(STACK[0x480]) = a63;
  LOWORD(STACK[0x484]) = a72;
  LODWORD(STACK[0x7E4]) = a69;
  LODWORD(STACK[0x55C]) = a49;
  LOWORD(STACK[0x476]) = a44;
  LOWORD(STACK[0x492]) = a73;
  LODWORD(STACK[0x494]) = a53;
  LODWORD(STACK[0x7E8]) = a51;
  LODWORD(STACK[0x244]) = a41;
  LODWORD(STACK[0x4EC]) = a35;
  LODWORD(STACK[0x4E0]) = a37;
  LOWORD(STACK[0x346]) = a42;
  LODWORD(STACK[0x4E4]) = a38;
  v87 = LODWORD(STACK[0xA24]) - 2134650450;
  v88 = LODWORD(STACK[0x844]) ^ 0x60EA69D0;
  LODWORD(STACK[0x4E8]) = a36;
  LOWORD(STACK[0x856]) = a39;
  v89 = (uint64_t (*)(void))(*(_QWORD *)(v85
                                      + 8
                                      * (((v87 == v88) * (((v86 - 1074090563) | 0x29C) + 42286)) ^ (v86 - 1074082530)))
                          - 12);
  LODWORD(STACK[0x858]) = a40;
  return v89();
}

uint64_t sub_100075E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36,int a37,int a38,__int16 a39,int a40,int a41,__int16 a42,__int16 a43,__int16 a44,__int16 a45,__int16 a46,int a47,int a48,int a49,int a50,int a51,uint64_t a52,int a53,int a54,__int16 a55,int a56,__int16 a57,int a58,__int16 a59,int a60,int a61,__int16 a62,int a63)
{
  int a65;
  int a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int v79;
  __int16 v80;
  int v81;
  int v82;
  int v83;
  __int16 v84;
  uint64_t v85;

  LODWORD(STACK[0x57C]) = a48;
  LODWORD(STACK[0x86C]) = a47;
  LODWORD(STACK[0x87C]) = a73;
  LODWORD(STACK[0x884]) = a74;
  LODWORD(STACK[0x514]) = a76;
  LODWORD(STACK[0x510]) = a75;
  LODWORD(STACK[0x52C]) = a78;
  LODWORD(STACK[0x340]) = a77;
  LODWORD(STACK[0x880]) = a77;
  LODWORD(STACK[0x2B0]) = a72;
  LODWORD(STACK[0x890]) = a72;
  LODWORD(STACK[0x254]) = a79;
  LODWORD(STACK[0x6EC]) = a79;
  LODWORD(STACK[0x6FC]) = v82;
  LODWORD(STACK[0xA10]) = a79;
  LODWORD(STACK[0xA14]) = v81;
  LODWORD(STACK[0xA24]) = v79;
  LODWORD(STACK[0x23C]) = a71;
  LOWORD(STACK[0x31A]) = a59;
  LOWORD(STACK[0x490]) = a46;
  LOWORD(STACK[0x280]) = a62;
  LOWORD(STACK[0x486]) = a55;
  LODWORD(STACK[0x488]) = a65;
  LOWORD(STACK[0x48E]) = v84;
  LOWORD(STACK[0x47E]) = a57;
  LODWORD(STACK[0x480]) = a63;
  LOWORD(STACK[0x484]) = a5;
  LODWORD(STACK[0x7E4]) = a7;
  LODWORD(STACK[0x55C]) = a49;
  LOWORD(STACK[0x476]) = a44;
  LOWORD(STACK[0x492]) = v80;
  LODWORD(STACK[0x494]) = a53;
  LODWORD(STACK[0x7E8]) = a51;
  LODWORD(STACK[0x244]) = a41;
  LODWORD(STACK[0x4EC]) = a35;
  LODWORD(STACK[0x4E0]) = a37;
  LOWORD(STACK[0x346]) = a42;
  LODWORD(STACK[0x4E4]) = a38;
  LODWORD(STACK[0x4E8]) = a36;
  LOWORD(STACK[0x856]) = a39;
  LODWORD(STACK[0x858]) = a40;
  return (*(uint64_t (**)(void))(v85 + 8 * v83))();
}

uint64_t sub_100075F54@<X0>(__int16 a1@<W4>, int a2@<W6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31,int a32,int a33,__int16 a34,int a35,int a36,__int16 a37,__int16 a38,__int16 a39,__int16 a40,__int16 a41,int a42,int a43,int a44,int a45,int a46,uint64_t a47,int a48,int a49,__int16 a50,int a51,__int16 a52,int a53,__int16 a54,int a55,int a56,__int16 a57,int a58,int a59,int a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int a66;
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int v73;
  int v74;
  int v75;
  __int16 v76;
  __int16 v77;
  uint64_t v78;
  uint64_t (*v79)(void);

  LODWORD(STACK[0x57C]) = a43;
  LODWORD(STACK[0x86C]) = a42;
  LODWORD(STACK[0x87C]) = a67;
  LODWORD(STACK[0x884]) = a68;
  LODWORD(STACK[0x514]) = a70;
  LODWORD(STACK[0x510]) = a69;
  LODWORD(STACK[0x52C]) = a72;
  LODWORD(STACK[0x340]) = a71;
  LODWORD(STACK[0x880]) = a71;
  LODWORD(STACK[0x2B0]) = a66;
  LODWORD(STACK[0x890]) = a66;
  LODWORD(STACK[0x254]) = a73;
  LODWORD(STACK[0x6EC]) = a73;
  LODWORD(STACK[0x6FC]) = v75;
  LODWORD(STACK[0xA10]) = a73;
  LODWORD(STACK[0xA14]) = v74;
  LODWORD(STACK[0xA24]) = v73;
  LODWORD(STACK[0x23C]) = a65;
  LOWORD(STACK[0x31A]) = a54;
  LOWORD(STACK[0x490]) = a41;
  LOWORD(STACK[0x280]) = a57;
  LOWORD(STACK[0x486]) = a50;
  LODWORD(STACK[0x488]) = a60;
  LOWORD(STACK[0x48E]) = v77;
  LOWORD(STACK[0x47E]) = a52;
  LODWORD(STACK[0x480]) = a58;
  LOWORD(STACK[0x484]) = a1;
  LODWORD(STACK[0x7E4]) = a2;
  LODWORD(STACK[0x55C]) = a44;
  LOWORD(STACK[0x476]) = a39;
  LOWORD(STACK[0x492]) = v76;
  LODWORD(STACK[0x494]) = a48;
  LODWORD(STACK[0x7E8]) = a46;
  LODWORD(STACK[0x244]) = a36;
  LODWORD(STACK[0x4EC]) = a30;
  LODWORD(STACK[0x4E0]) = a32;
  LOWORD(STACK[0x346]) = a37;
  LODWORD(STACK[0x4E4]) = a33;
  LODWORD(STACK[0x4E8]) = a31;
  LOWORD(STACK[0x856]) = a34;
  v79 = (uint64_t (*)(void))(*(_QWORD *)(v78 + 8 * a3) - ((755 * (a3 ^ 0x448Bu)) ^ 0xEB3));
  LODWORD(STACK[0x858]) = a35;
  return v79();
}

uint64_t sub_1000760A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36,int a37,int a38,__int16 a39,int a40,int a41,__int16 a42,__int16 a43,__int16 a44,__int16 a45,__int16 a46,int a47,int a48,int a49,int a50,int a51,uint64_t a52,int a53,int a54,__int16 a55,int a56,__int16 a57,int a58,__int16 a59,int a60,int a61,__int16 a62,int a63)
{
  int a65;
  __int16 a67;
  int a69;
  __int16 a70;
  __int16 a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int v80;
  int v81;
  int v82;
  uint64_t v83;
  int v84;
  int v85;
  unint64_t v86;
  int v87;
  int v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t (*v91)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  LODWORD(STACK[0x57C]) = a48;
  LODWORD(STACK[0x86C]) = a47;
  LODWORD(STACK[0x87C]) = a74;
  LODWORD(STACK[0x884]) = a75;
  LODWORD(STACK[0x514]) = a77;
  LODWORD(STACK[0x510]) = a76;
  LODWORD(STACK[0x340]) = a78;
  LODWORD(STACK[0x880]) = a78;
  LODWORD(STACK[0x2B0]) = a73;
  LODWORD(STACK[0x890]) = a73;
  LODWORD(STACK[0x254]) = a80;
  LODWORD(STACK[0x52C]) = a79;
  LODWORD(STACK[0x6EC]) = a80;
  LODWORD(STACK[0x6FC]) = v82;
  LODWORD(STACK[0xA10]) = a80;
  LODWORD(STACK[0xA14]) = v81;
  LODWORD(STACK[0xA24]) = v80;
  LODWORD(STACK[0x23C]) = a72;
  LOWORD(STACK[0x31A]) = a59;
  LOWORD(STACK[0x490]) = a46;
  LOWORD(STACK[0x280]) = a62;
  LOWORD(STACK[0x486]) = a55;
  LODWORD(STACK[0x488]) = a65;
  LOWORD(STACK[0x48E]) = a67;
  LOWORD(STACK[0x47E]) = a57;
  LODWORD(STACK[0x480]) = a63;
  LOWORD(STACK[0x484]) = a70;
  LODWORD(STACK[0x7E4]) = a69;
  LODWORD(STACK[0x55C]) = a49;
  LOWORD(STACK[0x476]) = a44;
  LOWORD(STACK[0x492]) = a71;
  LODWORD(STACK[0x494]) = a53;
  LODWORD(STACK[0x7E8]) = a51;
  LODWORD(STACK[0x244]) = a41;
  LODWORD(STACK[0x4EC]) = a35;
  LODWORD(STACK[0x4E0]) = a37;
  LOWORD(STACK[0x346]) = a42;
  LODWORD(STACK[0x4E4]) = a38;
  LODWORD(STACK[0x4E8]) = a36;
  LOWORD(STACK[0x856]) = a39;
  LODWORD(STACK[0x858]) = a40;
  v85 = STACK[0xA24];
  LODWORD(STACK[0x34C]) = STACK[0xA24];
  v86 = STACK[0x258];
  STACK[0x8A8] = STACK[0x258];
  STACK[0x8B0] = v86 - 0x177ECD13451C7894;
  v87 = *(_DWORD *)(v86 - 0x177ECD13451C7894);
  LODWORD(STACK[0x8BC]) = v87;
  LODWORD(STACK[0x250]) = v87;
  STACK[0x8C0] = v86 - 0x177ECD13451C7898;
  v88 = *(_DWORD *)(v86 - 0x177ECD13451C7898);
  LODWORD(STACK[0x8CC]) = v88;
  LODWORD(STACK[0x29C]) = v88;
  STACK[0x8D0] = v86 - 0x177ECD13451C78A8;
  v89 = *(_QWORD *)(v86 - 0x177ECD13451C78A8);
  STACK[0x8D8] = v89;
  STACK[0x330] = v89;
  STACK[0x8E0] = v86 - 0x177ECD13451C78A0;
  v90 = *(_QWORD *)(v86 - 0x177ECD13451C78A0);
  STACK[0x8E8] = v90;
  LODWORD(v89) = STACK[0x270];
  STACK[0x308] = v90;
  LODWORD(v90) = v89 + v87 - v85 - 1747723388;
  LODWORD(STACK[0x8F0]) = v89;
  LODWORD(STACK[0x8F4]) = v90;
  LODWORD(STACK[0x224]) = v90;
  v91 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83
                                                                                        + 8
                                                                                        * ((19843
                                                                                          * (v85 - (_DWORD)v89 != -1747723388)) ^ (v84 - 1074082435)))
                                                                            - ((v84 - 1074068918) ^ 0x609CLL));
  LODWORD(STACK[0x664]) = 2134650450;
  return v91(a1, a2, a3, a4, 4294967217);
}

uint64_t sub_10007630C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  BOOL v5;

  v2 = STACK[0x2BC];
  LODWORD(STACK[0x8F8]) = STACK[0x2BC];
  v3 = STACK[0x298];
  LODWORD(STACK[0x8FC]) = STACK[0x298];
  v2 += 1130626083;
  v3 += 1130626083;
  v4 = v2 < 0x5A20762C;
  v5 = v2 > v3;
  if (v4 != v3 < 0x5A20762C)
    v5 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((a1 ^ 0xD6) + 1) ^ v5) & 1 ^ a1)) - 8))();
}

uint64_t sub_100076380@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  _BOOL4 v6;

  v3 = LODWORD(STACK[0xA24]) + LODWORD(STACK[0x8F8]);
  LODWORD(STACK[0x900]) = v3;
  v3 += 1494859906;
  v4 = LODWORD(STACK[0x8FC]) - 665456940;
  v5 = (v3 < 0xEF1268DD) ^ (v4 < 0xEF1268DD);
  v6 = v3 < v4;
  if (v5)
    v6 = v4 < 0xEF1268DD;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((!v6 * (v1 - 1074092334)) ^ a1)) - 8))();
}

uint64_t sub_100076404()
{
  int v0;
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;

  v2 = (((v0 + 1771) | 0x5603) ^ 0x7E85E939) + LODWORD(STACK[0x8F4]);
  v3 = ((v0 - 829563595) & 0x71775FE7 ^ 0xBDC49BC6) + LODWORD(STACK[0x8FC]);
  v4 = (v2 < 0x147E3F89) ^ (v3 < 0x147E3F89);
  v5 = v2 < v3;
  if (v4)
    v5 = v3 < 0x147E3F89;
  LODWORD(STACK[0x664]) = 2134608427;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((106 * v5) ^ (v0 + 2688))) - 12))();
}

uint64_t sub_1000764A4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v2 = LODWORD(STACK[0xA24]) + 58146268;
  v3 = LODWORD(STACK[0x8F0]) - 1689577120;
  v4 = v2 < 0x82B36C2E;
  v5 = v2 > v3;
  if (v4 != v3 < 0x82B36C2E)
    v5 = v4;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v5 * ((a1 - 828) ^ 0xA5DC)) ^ a1)))();
}

uint64_t sub_10007650C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v2 = LODWORD(STACK[0xA24]) - LODWORD(STACK[0x8F0]) + LODWORD(STACK[0x8FC]) - 100635785;
  v3 = ((a1 + 1074061359) ^ 0x4005249D) + LODWORD(STACK[0x900]) + 311926222;
  v4 = v2 < 0xA890C104;
  v5 = v2 > v3;
  if (v4 != v3 < 0xA890C104)
    v5 = v4;
  return (*(uint64_t (**)(void))(v1 + 8 * ((44 * v5) ^ a1)))();
}

uint64_t sub_10007659C()
{
  int v0;
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v2 = LODWORD(STACK[0x8F4]) + 2064137747;
  v3 = LODWORD(STACK[0x8CC]) + 2064137747;
  v4 = v2 < 0x1100E66E;
  v5 = v2 > v3;
  if (v4 != v3 < 0x1100E66E)
    v6 = v4;
  else
    v6 = v5;
  LOBYTE(STACK[0x907]) = v6;
  LOBYTE(STACK[0x36B]) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((51 * v6) ^ v0)) - 12))();
}

uint64_t sub_10007662C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t (*a48)(_QWORD))
{
  int v48;
  uint64_t v49;
  _BOOL4 v50;
  uint64_t v51;

  v50 = a1 != 0;
  v51 = a48((LODWORD(STACK[0x8F4]) + 1778866085));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v49
                                                      + 8
                                                      * (((((v48 + 1073774927) | 0x45A04) - 1074093629) * v50) ^ v48))
                                          - ((v48 + 1747246324) & 0xD7DFFE5E ^ 0x40055E4ALL)))(v51);
}

uint64_t sub_1000766B0(uint64_t a1)
{
  uint64_t v1;
  int v2;

  STACK[0x248] = a1 + 0x7C0ADF1C3D95FE54;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v2 - 1074060360)) - 8))();
}

uint64_t sub_100076714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36,int a37,int a38,__int16 a39,int a40,int a41,__int16 a42,__int16 a43,__int16 a44,__int16 a45,__int16 a46,int a47,int a48,int a49,int a50,int a51,uint64_t a52,int a53,int a54,__int16 a55,int a56,__int16 a57,int a58,__int16 a59,int a60,int a61,__int16 a62,int a63)
{
  int a65;
  __int16 a67;
  int a69;
  __int16 a72;
  __int16 a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int v82;
  int v83;
  int v84;
  uint64_t v85;
  int v86;
  int v87;
  int v88;
  unsigned int v89;
  _BOOL4 v90;
  _BOOL4 v91;

  LODWORD(STACK[0x57C]) = a48;
  LODWORD(STACK[0x86C]) = a47;
  LODWORD(STACK[0x87C]) = a76;
  LODWORD(STACK[0x884]) = a77;
  LODWORD(STACK[0x514]) = a79;
  LODWORD(STACK[0x510]) = a78;
  LODWORD(STACK[0x340]) = a80;
  LODWORD(STACK[0x880]) = a80;
  LODWORD(STACK[0x2B0]) = a75;
  LODWORD(STACK[0x890]) = a75;
  LODWORD(STACK[0x254]) = a82;
  LODWORD(STACK[0x52C]) = a81;
  LODWORD(STACK[0x6EC]) = a82;
  LODWORD(STACK[0x6FC]) = v84;
  LODWORD(STACK[0xA10]) = a82;
  LODWORD(STACK[0xA14]) = v83;
  LODWORD(STACK[0xA24]) = v82;
  LODWORD(STACK[0x23C]) = a74;
  LOWORD(STACK[0x31A]) = a59;
  LOWORD(STACK[0x490]) = a46;
  LOWORD(STACK[0x280]) = a62;
  LOWORD(STACK[0x486]) = a55;
  LODWORD(STACK[0x488]) = a65;
  LOWORD(STACK[0x48E]) = a67;
  LOWORD(STACK[0x47E]) = a57;
  LODWORD(STACK[0x480]) = a63;
  LOWORD(STACK[0x484]) = a72;
  LODWORD(STACK[0x7E4]) = a69;
  LODWORD(STACK[0x55C]) = a49;
  LOWORD(STACK[0x476]) = a44;
  LOWORD(STACK[0x492]) = a73;
  LODWORD(STACK[0x494]) = a53;
  LODWORD(STACK[0x7E8]) = a51;
  LODWORD(STACK[0x244]) = a41;
  LODWORD(STACK[0x4EC]) = a35;
  LODWORD(STACK[0x4E0]) = a37;
  v87 = STACK[0x240];
  v88 = LODWORD(STACK[0xA24]) + LODWORD(STACK[0x240]);
  LOWORD(STACK[0x346]) = a42;
  v89 = v88 + ((v86 - 1074076489) ^ 0x926A7F4E);
  LODWORD(STACK[0x4E4]) = a38;
  LODWORD(STACK[0x4E8]) = a36;
  v90 = v89 < 0x2862E60E;
  LOWORD(STACK[0x856]) = a39;
  LODWORD(STACK[0x858]) = a40;
  v91 = v89 < v87 + 296119301;
  if (v90 != (v87 + 296119301) < 0x2862E60E)
    v91 = (v87 + 296119301) < 0x2862E60E;
  LODWORD(STACK[0x928]) = v87;
  LODWORD(STACK[0x92C]) = v88;
  LODWORD(STACK[0x930]) = v88 - 2134650450;
  return (*(uint64_t (**)(void))(v85 + 8 * (((2 * v91) | (8 * v91)) ^ (v86 - 1074066420))))();
}

uint64_t sub_1000768D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  _BOOL4 v7;
  _BOOL4 v8;

  v4 = LODWORD(STACK[0x92C]) - 247602882;
  v5 = LODWORD(STACK[0x2BC]) + 1887047568;
  v6 = (v5 < 0x87368999) ^ (v4 < ((a3 - 16284) | 0x3410u) - 2026483160);
  v7 = v4 > v5;
  if (v6)
    v8 = v4 < ((a3 - 16284) | 0x3410u) - 2026483160;
  else
    v8 = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3
                                                              + 8
                                                              * ((!v8 * (((a3 + 1073810247) | 0x41002) - 1074093148)) ^ a3)))(a1, a2, 105);
}

uint64_t sub_100076994()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x38C]) = STACK[0x928];
  LODWORD(STACK[0x234]) = v1;
  LODWORD(STACK[0x5E4]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (248 * (v1 == 2134650450))))
                            - (((v0 + 5978) + 1074073471) ^ v0 ^ 0x40056937u)))();
}

uint64_t sub_100076A18()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 1074076272)) - 4))();
}

uint64_t sub_100076A48@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 + 6821) ^ (62 * (a1 == 0))))
                            - (((v1 + 250701) | 0x40010806) ^ ((v1 + 1073730321) | 0x50842u) ^ 0xCLL)))();
}

uint64_t sub_100076AB4()
{
  int v0;
  uint64_t v1;

  STACK[0x2F8] = STACK[0x8D8];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * (v0 - 1074079169)) - 8))(3266281078);
}

uint64_t sub_100076AE8(uint64_t a1)
{
  int v1;
  uint64_t v2;

  STACK[0x2F8] = a1 + 0x6CA6F0EE111A2BB6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 - 1074060360)) - 8))();
}

uint64_t sub_100076B3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  int v7;

  STACK[0x5B8] = a5;
  STACK[0x908] = a5;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                          + 8
                                                                                          * ((v7 - 1074059858) ^ (2 * (a5 != v5))))
                                                                              - ((v7 + 235309488) & 0xB1F49BFF)
                                                                              + 33774))(a1, a2, a3, a4, 4294967217);
}

uint64_t sub_100076BB0()
{
  int v0;
  uint64_t v1;
  _BOOL4 v2;

  v2 = STACK[0x248] == 0x7C0ADF1C3D95FE54;
  STACK[0x608] = STACK[0x908];
  LODWORD(STACK[0x610]) = STACK[0x8CC];
  LODWORD(STACK[0x614]) = STACK[0x8BC];
  STACK[0x618] = STACK[0x8E8];
  STACK[0x620] = STACK[0x8A8];
  STACK[0x628] = STACK[0x8D8];
  LODWORD(STACK[0x634]) = 2134608422;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v2 * (689 * (v0 ^ 0x83E3) - 13444)) | v0))
                            - ((1249 * (v0 ^ 0x83EDu)) ^ 0x83B3)))();
}

uint64_t sub_100076C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;

  STACK[0x910] = STACK[0x2F8];
  v8 = LODWORD(STACK[0x8FC]) - ((v6 + 1074079169 + 2 * LODWORD(STACK[0x8FC]) + 310488488) & 0x7A9EF342) + 647167896;
  v9 = (v8 ^ 0x5F911A6F) - 34086918 + ((v8 << (v6 + 124)) & 0xC5BCC79C ^ 0x409CC300);
  LODWORD(STACK[0x918]) = v9;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **))(*(_QWORD *)(v7 + 8 * ((43177 * (v9 != 1624654792)) ^ v6)) - 8))(3266281078, a2, a3, a4, a5, a6, &off_10112C750);
}

uint64_t sub_100076D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  LODWORD(STACK[0x5C0]) = STACK[0x918];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v8 + 8 * (v7 + 9348)) - (((v7 + 6011) | 0xD01u) ^ 0x5D05)))(a1, a2, a3, a4, a5, a6, a7, 0x93590F11EEE5D44ALL);
}

uint64_t sub_100076D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  _DWORD *v13;
  int v14;
  int v15;
  uint64_t v16;
  char v17;
  int v18;
  _QWORD *v19;
  int v20;
  unint64_t v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;

  v21 = ((v9 - 1) | ((unint64_t)(v9 - 1 < (v8 ^ (v12 - 233) ^ 0x20D31D8Eu)) << 32)) - 1624654792;
  v22 = *(_DWORD *)(*v19 + (*v13 & v20));
  v23 = ((((((_DWORD)v10 + (_DWORD)v21) ^ v22) & 0x7FFFFFFF) * v14) ^ ((((((_DWORD)v10 + (_DWORD)v21) ^ v22) & 0x7FFFFFFFu)
                                                                      * v14) >> 16))
      * v14;
  v24 = *(_QWORD *)(a7 + 8 * (v8 - 22686)) - 1581517783;
  v25 = *(_QWORD *)(a7 + 8 * (v8 ^ 0x4FA1)) - 312288370;
  v26 = *(_QWORD *)(a7 + 8 * (v8 ^ v15)) - 1635633991;
  v27 = *(_BYTE *)(v24 + (v23 >> 24)) ^ *(_BYTE *)(v10 + v21 + a8);
  v28 = v11 + v21;
  v29 = ((((v28 ^ v22) & 0x7FFFFFFF) * v14) ^ ((((v28 ^ v22) & 0x7FFFFFFF) * v14) >> 16))
      * v14;
  *(_BYTE *)(v28 + a8) = v27 ^ *(_BYTE *)((v23 >> 24) + v25 + 5) ^ *(_BYTE *)(v26 + (v23 >> 24)) ^ *(_BYTE *)(v24 + (v29 >> 24)) ^ *(_BYTE *)((v29 >> 24) + v25 + 5) ^ *(_BYTE *)(v26 + (v29 >> 24)) ^ v23 ^ v29 ^ (BYTE3(v23) * v17) ^ (BYTE3(v29) * v17);
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * (v8 ^ (8 * (v18 + 1 != v9)))) - 4))();
}

uint64_t sub_100076EB8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x5C0]) = v1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (a1 - 1074079169)) - 8))(3266281078);
}

uint64_t sub_100076EE4@<X0>(int a1@<W8>)
{
  uint64_t v1;

  STACK[0x248] = STACK[0x8E8];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * (a1 - 1074079169)) - 8))(3266281078);
}

uint64_t sub_100076F14@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  _BOOL4 v8;

  v2 = (a1 ^ 0x40055E45) + 3041;
  v3 = 1021 * (a1 ^ 0x40055E45);
  v4 = a1 - 1074055767;
  v5 = LODWORD(STACK[0xA24]) + 1353260855;
  v6 = (v2 ^ 0xE87CF15F) + LODWORD(STACK[0x8F0]);
  v7 = (v5 < (v3 ^ 0xCFE5467E)) ^ (v6 < 0xCFE54D89);
  v8 = v5 < v6;
  if (v7)
    v8 = v6 < 0xCFE54D89;
  return (*(uint64_t (**)(void))(v1 + 8 * (v4 ^ (16 * !v8))))();
}

uint64_t sub_100076FA4()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0x30D2)))();
}

uint64_t sub_100077034()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * (v0 + 12097)))();
}

uint64_t sub_1000770C4@<X0>(int a1@<W8>)
{
  unint64_t v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;

  v7 = v5 - (((unint64_t)v5 << (((a1 + 34) | 0xD0u) + 49)) & 0x87A0445A) - 0xE453971BC2FDDD3;
  LODWORD(STACK[0x6C4]) = v2;
  STACK[0x6C8] = v1;
  LODWORD(STACK[0x6D0]) = v3;
  LODWORD(STACK[0x6D4]) = v4;
  STACK[0x6D8] = v7;
  STACK[0x9D0] = v7;
  LODWORD(STACK[0x9D8]) = v4;
  LODWORD(STACK[0x9DC]) = v3;
  STACK[0x9E0] = v1;
  STACK[0x9E8] = *(_QWORD *)(v6 + 8 * v2);
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((62
                                * (STACK[0x8D8] - 0x6CA6F0EE111A2BB6 + (v4 - 56252996) > v1 - 0x6CA6F0EE111A2BB6 + (v3 - 1540527731))) ^ a1)))();
}

uint64_t sub_100077190()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;

  v3 = (((v0 - 23096) | 0x4240) + 1137693525) ^ v1;
  LODWORD(STACK[0x9F4]) = v3 + 1871017398;
  LOBYTE(STACK[0x9FB]) = v3 > ((v0 + 241522) | 0x40014804u) + 1349856259;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((61052 * (v3 != 0)) ^ v0)) - 8))();
}

uint64_t sub_100077218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v59;
  uint64_t v60;

  LODWORD(STACK[0x9FC]) = LODWORD(STACK[0x9D8]) - 1462963911;
  LODWORD(STACK[0xA00]) = LODWORD(STACK[0x9DC]) + 1347728650;
  LODWORD(STACK[0x6E4]) = 1406710915;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 + 8 * v59) - ((2 * v59) ^ 0x9DB4)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_1000772A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  _BOOL4 v73;
  unsigned int v74;
  int v75;
  _DWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  char v82;
  _QWORD *v83;
  int v84;
  int v85;
  uint64_t v86;
  char v87;
  int v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  _BOOL4 v92;

  v85 = v75;
  v86 = v71 + (a68 + v75);
  v87 = *(_BYTE *)(v86 + v77);
  v88 = *(_DWORD *)(*v83 + (*v76 & v84));
  v89 = ((((v86 ^ v88) & 0x7FFFFFFF) * ((v68 ^ 0x400510E0) - 1082325581)) ^ ((((v86 ^ v88) & 0x7FFFFFFF)
                                                                                          * ((v68 ^ 0x400510E0)
                                                                                           - 1082325581)) >> 16))
      * v80;
  v90 = v72 + (v70 + v85);
  v91 = ((((v90 ^ v88) & 0x7FFFFFFF) * v80) ^ ((((v90 ^ v88) & 0x7FFFFFFF) * v80) >> 16))
      * v80;
  *(_BYTE *)(v90 + v77) = *(_BYTE *)(v69 + (v89 >> 24)) ^ v87 ^ *(_BYTE *)(v81 + (v89 >> 24) + 2) ^ *(_BYTE *)(v78 + (v89 >> 24) + 2) ^ *(_BYTE *)(v69 + (v91 >> 24)) ^ *(_BYTE *)(v81 + (v91 >> 24) + 2) ^ *(_BYTE *)(v78 + (v91 >> 24) + 2) ^ v89 ^ v91 ^ (BYTE3(v89) * v82) ^ (BYTE3(v91) * v82);
  v92 = v85 + 464306484 < v74;
  if (v73 != (v85 + 464306484) < 0x6F8575B6)
    v92 = v73;
  return ((uint64_t (*)(void))(*(_QWORD *)(v79 + 8 * ((126 * v92) ^ v68)) - 4))();
}

uint64_t sub_1000773C0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x6E4]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 - 1074067318)) - 8))();
}

uint64_t sub_1000773E8()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;

  v3 = (v1 ^ 0xB62F7D4E) + 1069475326 + ((2 * v1) & 0xEBFEBEC6 ^ 0x83A00442);
  LODWORD(STACK[0xA04]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((v0 - 325229944) & 0x53675E6F ^ 0x40055E6E) * (v3 != 901662049)) ^ v0))
                            - 4))();
}

uint64_t sub_10007746C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;

  LODWORD(STACK[0xA08]) = LODWORD(STACK[0x9D8]) - 957915046;
  LODWORD(STACK[0xA0C]) = LODWORD(STACK[0x9DC]) + 1852777515;
  LODWORD(STACK[0x6E8]) = STACK[0xA04];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * (v6 - 17849)) - 8))(a1, a2, a3, a4, a5, a6, 0x93590F11EEE5D44ALL, 4286735353);
}

uint64_t sub_1000774EC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _DWORD *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  _QWORD *v21;
  int v22;
  uint64_t v23;
  char v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v23 = v11 + (v9 + v13);
  v24 = *(_BYTE *)(v23 + a7);
  v25 = *(_DWORD *)(*v21 + (*v14 & v22));
  v26 = ((((v23 ^ v25) & 0x7FFFFFFF) * ((v8 + 2102757434) & a1 ^ 0xBF873DBF)) ^ ((((v23 ^ v25) & 0x7FFFFFFF)
                                                                                              * ((v8 + 2102757434) & a1 ^ 0xBF873DBF)) >> 16))
      * a8;
  v27 = v12 + (v10 + v13);
  v28 = ((((v27 ^ v25) & 0x7FFFFFFF) * a8) ^ ((((v27 ^ v25) & 0x7FFFFFFF) * a8) >> 16)) * a8;
  *(_BYTE *)(v27 + a7) = *(_BYTE *)(v19 + (v26 >> 24)) ^ v24 ^ *(_BYTE *)(v18 + (v26 >> 24) + 2) ^ *(_BYTE *)(v15 + (v26 >> 24) + 2) ^ *(_BYTE *)(v19 + (v28 >> 24)) ^ *(_BYTE *)(v18 + (v28 >> 24) + 2) ^ *(_BYTE *)(v15 + (v28 >> 24) + 2) ^ v26 ^ v28 ^ (BYTE3(v26) * v16) ^ (BYTE3(v28) * v16);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17 + 8 * ((2970 * (v20 + 1 == v13)) ^ v8)) - 8))(3266281078);
}

uint64_t sub_1000775E0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x6E8]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 - 1074067318)) - 8))();
}

uint64_t sub_100077608()
{
  return ((uint64_t (*)(void))STACK[0x9E8])();
}

uint64_t sub_100077610@<X0>(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)STACK[0x8B0] = STACK[0x8F4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((((STACK[0x907] & 1) == 0) * ((2 * (a1 ^ 0x40057FAD)) ^ 0x43A6)) ^ (a1 - 1074084245)))
                            - 4))();
}

uint64_t sub_100077668@<X0>(int a1@<W8>)
{
  uint64_t v1;

  *(_QWORD *)STACK[0x8D0] = STACK[0x9E0];
  *(_QWORD *)STACK[0x8E0] = STACK[0x248];
  *(_DWORD *)STACK[0x8C0] = STACK[0x8F4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((a1 - 105) | 0x401))
                            - (((((a1 - 105) | 0x401) + 7557) | 0x190u) ^ 0x43D2)))();
}

uint64_t sub_1000776BC()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x38C]) = *(_DWORD *)(STACK[0x8A8] - 0x177ECD13451C7890);
  LODWORD(STACK[0x234]) = 2134650450;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - ((v0 - 324027623) & 0x53555F56 ^ 0x40055E42)))();
}

uint64_t sub_100077718@<X0>(unint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;

  LODWORD(STACK[0x5C4]) = v2;
  STACK[0x5C8] = a1;
  v5 = v4 + v1 + 2419;
  STACK[0x360] = *(_QWORD *)(v3 + 8 * v5) - 8;
  STACK[0x4F0] = a1;
  LODWORD(STACK[0x4FC]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v5 ^ 0x37E6)) - 12))();
}

uint64_t sub_100077750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W3>, __int16 a4@<W4>, int a5@<W5>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,int a35,int a36,__int16 a37,int a38,int a39,__int16 a40,uint64_t a41,int a42,int a43,int a44,int a45,int a46,uint64_t a47,int a48,int a49,__int16 a50,int a51,__int16 a52,int a53,__int16 a54,int a55,int a56,__int16 a57,int a58,int a59,int a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int a66;
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int v72;
  int v73;
  __int16 v74;
  int v75;
  int v76;
  __int16 v77;
  uint64_t v78;
  uint64_t (*v79)(uint64_t, uint64_t, uint64_t);

  LODWORD(STACK[0x57C]) = a43;
  LODWORD(STACK[0x86C]) = a42;
  LODWORD(STACK[0x87C]) = a66;
  LODWORD(STACK[0x340]) = v76;
  LODWORD(STACK[0x880]) = a70;
  LODWORD(STACK[0x884]) = a67;
  LODWORD(STACK[0x2B0]) = a65;
  LODWORD(STACK[0x890]) = a65;
  LODWORD(STACK[0x254]) = a72;
  LODWORD(STACK[0x514]) = a69;
  LODWORD(STACK[0x510]) = a68;
  LODWORD(STACK[0x52C]) = a71;
  LODWORD(STACK[0x6EC]) = a72;
  LODWORD(STACK[0x6FC]) = v75;
  LODWORD(STACK[0xA10]) = a72;
  LODWORD(STACK[0xA14]) = v73;
  LODWORD(STACK[0xA24]) = v72;
  LODWORD(STACK[0x23C]) = a48;
  LOWORD(STACK[0x31A]) = a54;
  LOWORD(STACK[0x490]) = v74;
  LOWORD(STACK[0x280]) = a57;
  LOWORD(STACK[0x486]) = a50;
  LODWORD(STACK[0x488]) = a60;
  LOWORD(STACK[0x48E]) = v77;
  LOWORD(STACK[0x47E]) = a52;
  LODWORD(STACK[0x480]) = a58;
  LOWORD(STACK[0x484]) = a4;
  LODWORD(STACK[0x7E4]) = a5;
  LODWORD(STACK[0x55C]) = a44;
  LOWORD(STACK[0x476]) = a3;
  LOWORD(STACK[0x492]) = a3;
  LODWORD(STACK[0x494]) = a48;
  LODWORD(STACK[0x7E8]) = a46;
  LODWORD(STACK[0x244]) = a39;
  LODWORD(STACK[0x4EC]) = a33;
  LODWORD(STACK[0x4E0]) = a35;
  LOWORD(STACK[0x346]) = a40;
  LODWORD(STACK[0x4E4]) = a36;
  LODWORD(STACK[0x4E8]) = a34;
  LOWORD(STACK[0x856]) = a37;
  v79 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 + 8 * a6)
                                                          - ((a6 - 17118260) & 0xCD6FAB8E ^ 0xCC6B0A84));
  LODWORD(STACK[0x858]) = a38;
  return v79(a1, a2, 105);
}

uint64_t sub_1000778A4()
{
  unsigned int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  v2 = STACK[0x494];
  LOWORD(STACK[0x7EE]) = STACK[0x492];
  LODWORD(STACK[0x348]) = v2;
  v3 = ((v0 - 948292878) & 0x6C1AF7DF) + LODWORD(STACK[0x2A8]) + 888657240;
  LODWORD(STACK[0x7F0]) = v3;
  LODWORD(STACK[0x36C]) = v3;
  v4 = STACK[0x2AC];
  LODWORD(STACK[0x7F4]) = STACK[0x2AC];
  v4 += 20;
  LODWORD(STACK[0x7F8]) = v4;
  LODWORD(STACK[0x284]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((12171 * (v0 > 0x7D46C9FF)) ^ (v0 + 865417372))) - 4))();
}

uint64_t sub_100077934@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v1 < (int)(((a1 ^ 0x355C) + 6364) ^ 0xB2DEFD9E))
                                          * ((3183 * (a1 ^ 0x355C)) ^ 0x18F3)) ^ a1))
                            - 8))();
}

uint64_t sub_10007797C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                          + 8
                                                                                          * (int)(((((v5 - 5629) ^ 0xFFFF9CDC)
                                                                                                  + v5
                                                                                                  + 18705)
                                                                                                 * (v4 != -1344346816)) ^ v5))
                                                                              - 4))(a1, a2, a3, a4, 4294967217);
}

uint64_t sub_1000779C8()
{
  int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;

  v2 = LODWORD(STACK[0x7F0]) + LODWORD(STACK[0x2C8]);
  v3 = STACK[0x2E0];
  STACK[0x2D8] = *(_QWORD *)(v1 + 8 * v0);
  LODWORD(STACK[0x5A4]) = v2;
  LODWORD(STACK[0x5A8]) = STACK[0x7F8];
  LODWORD(STACK[0x5AC]) = STACK[0x7F4];
  STACK[0x5B0] = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 + v0 + 11476 - 2262)))();
}

uint64_t sub_100077A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                          + 8
                                                                                          * (int)(((((v4 == -1294015168) ^ (v5 + 17)) & 1)
                                                                                                 * ((v5 + 1651726855) & 0x9D8C8FFB ^ 0x2CD)) ^ v5))
                                                                              - 4))(a1, a2, a3, a4, 4294967217);
}

uint64_t sub_100077A70@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _BOOL4 v2;

  v2 = LOWORD(STACK[0x7EE]) != ((((a1 - 1896784376) & 0x710E58FF) + 12365) & 0x1FFFF);
  LODWORD(STACK[0x4A0]) = STACK[0x7F4];
  LODWORD(STACK[0x4A4]) = STACK[0x7F0];
  LODWORD(STACK[0x4A8]) = STACK[0x7F8];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((974 * v2) ^ a1)) - 12))();
}

uint64_t sub_100077AD8()
{
  unsigned int v0;
  uint64_t v1;
  __int16 v2;

  v2 = ((LOWORD(STACK[0x378]) + 9115) ^ 0x4DFA) + (((LOWORD(STACK[0x378]) + 9115) << ((v0 - 104) ^ 0x8E)) & 0x9BF4) - 88;
  LOWORD(STACK[0x282]) = v2;
  LOWORD(STACK[0x49A]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - 12))();
}

uint64_t sub_100077B2C@<X0>(__int16 a1@<W0>, int a2@<W1>, int a3@<W2>, __int16 a4@<W3>, __int16 a5@<W4>, int a6@<W6>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,__int16 a38,__int16 a39,__int16 a40,__int16 a41,__int16 a42,int a43,int a44,int a45,int a46,int a47,uint64_t a48,int a49,int a50,__int16 a51,int a52,__int16 a53,int a54,__int16 a55,int a56,int a57,__int16 a58,int a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int a66;
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int v73;
  int v74;
  int v75;
  int v76;
  __int16 v77;
  int v78;
  uint64_t v79;
  uint64_t (*v80)(void);

  LODWORD(STACK[0x57C]) = a44;
  LODWORD(STACK[0x86C]) = a43;
  LODWORD(STACK[0x87C]) = a67;
  LODWORD(STACK[0x884]) = a68;
  LODWORD(STACK[0x340]) = a71;
  LODWORD(STACK[0x880]) = a71;
  LODWORD(STACK[0x2B0]) = v74;
  LODWORD(STACK[0x890]) = a66;
  LODWORD(STACK[0x254]) = a73;
  LODWORD(STACK[0x514]) = a70;
  LODWORD(STACK[0x510]) = a69;
  LODWORD(STACK[0x52C]) = a72;
  LODWORD(STACK[0x6EC]) = a73;
  LODWORD(STACK[0x6FC]) = v76;
  LODWORD(STACK[0xA10]) = a73;
  LODWORD(STACK[0xA14]) = v75;
  LODWORD(STACK[0xA24]) = v73;
  LODWORD(STACK[0x23C]) = a65;
  LOWORD(STACK[0x31A]) = a55;
  LOWORD(STACK[0x490]) = a42;
  LOWORD(STACK[0x280]) = a58;
  LOWORD(STACK[0x486]) = a51;
  LODWORD(STACK[0x488]) = v78;
  LOWORD(STACK[0x48E]) = v77;
  LOWORD(STACK[0x47E]) = a53;
  LODWORD(STACK[0x480]) = a59;
  LOWORD(STACK[0x484]) = a5;
  LODWORD(STACK[0x7E4]) = a6;
  LODWORD(STACK[0x55C]) = a45;
  LOWORD(STACK[0x476]) = a40;
  LOWORD(STACK[0x492]) = a4;
  LODWORD(STACK[0x494]) = a49;
  LODWORD(STACK[0x7E8]) = a47;
  LODWORD(STACK[0x244]) = a2;
  LODWORD(STACK[0x4E0]) = a3;
  LOWORD(STACK[0x346]) = a38;
  LODWORD(STACK[0x4E4]) = a2;
  LODWORD(STACK[0x4E8]) = v74;
  LOWORD(STACK[0x856]) = a1;
  v80 = (uint64_t (*)(void))(1074093646 - (a7 ^ 0x40050430u) + *(_QWORD *)(v79 + 8 * a7) - 20);
  LODWORD(STACK[0x858]) = v74;
  return v80();
}

uint64_t sub_100077C54()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x4EC]) = 381450761;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 1074069630)) - 8))();
}

uint64_t sub_100077C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36,int a37,int a38,__int16 a39,int a40,int a41,__int16 a42,__int16 a43,__int16 a44,__int16 a45,__int16 a46,int a47,int a48,int a49,int a50,int a51,uint64_t a52,int a53,int a54,__int16 a55,int a56,__int16 a57,int a58,__int16 a59,int a60,int a61,__int16 a62,int a63)
{
  int a65;
  __int16 a67;
  int a69;
  __int16 a70;
  __int16 a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int v80;
  int v81;
  int v82;
  uint64_t v83;
  int v84;
  uint64_t (*v85)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  LODWORD(STACK[0x57C]) = a48;
  LODWORD(STACK[0x86C]) = a47;
  LODWORD(STACK[0x87C]) = a74;
  LODWORD(STACK[0x884]) = a75;
  LODWORD(STACK[0x514]) = a77;
  LODWORD(STACK[0x510]) = a76;
  LODWORD(STACK[0x340]) = a78;
  LODWORD(STACK[0x880]) = a78;
  LODWORD(STACK[0x2B0]) = a73;
  LODWORD(STACK[0x890]) = a73;
  LODWORD(STACK[0x254]) = a80;
  LODWORD(STACK[0x52C]) = a79;
  LODWORD(STACK[0x6EC]) = a80;
  LODWORD(STACK[0x6FC]) = v82;
  LODWORD(STACK[0xA10]) = a80;
  LODWORD(STACK[0xA14]) = v81;
  LODWORD(STACK[0xA24]) = v80;
  LODWORD(STACK[0x23C]) = a72;
  LOWORD(STACK[0x31A]) = a59;
  LOWORD(STACK[0x490]) = a46;
  LOWORD(STACK[0x280]) = a62;
  LOWORD(STACK[0x486]) = a55;
  LODWORD(STACK[0x488]) = a65;
  LOWORD(STACK[0x48E]) = a67;
  LOWORD(STACK[0x47E]) = a57;
  LODWORD(STACK[0x480]) = a63;
  LOWORD(STACK[0x484]) = a70;
  LODWORD(STACK[0x7E4]) = a69;
  LODWORD(STACK[0x55C]) = a49;
  LOWORD(STACK[0x476]) = a44;
  LOWORD(STACK[0x492]) = a71;
  LODWORD(STACK[0x494]) = a53;
  LODWORD(STACK[0x7E8]) = a51;
  LODWORD(STACK[0x244]) = a41;
  LODWORD(STACK[0x4EC]) = a35;
  LODWORD(STACK[0x4E0]) = a37;
  LOWORD(STACK[0x346]) = a42;
  LODWORD(STACK[0x4E4]) = a38;
  LODWORD(STACK[0x4E8]) = a36;
  LOWORD(STACK[0x856]) = a39;
  LODWORD(STACK[0x858]) = a40;
  v85 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 + 8 * (v84 - 1074087247))
                                                                            - (v84 - 1074069943)
                                                                            + 23683);
  LOWORD(STACK[0x49A]) = STACK[0x282];
  return v85(a1, a2, a3, a4, 4294967217);
}

uint64_t sub_100077E3C@<X0>(int a1@<W8>)
{
  int v1;
  __int16 v2;
  uint64_t v3;
  __int16 v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  _BOOL4 v8;

  LODWORD(STACK[0x49C]) = v1;
  LODWORD(STACK[0x7FC]) = v1;
  v4 = STACK[0x49A];
  LOWORD(STACK[0x376]) = v2;
  LODWORD(STACK[0x2EC]) = v1;
  v5 = (unsigned __int16)(v2 + 12270);
  v6 = (unsigned __int16)(v4 + 13805);
  v7 = (v5 < 0x838F) ^ (v6 < 0x838F);
  v8 = v5 < v6;
  if (v7)
    v8 = v6 < 0x838F;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((!v8 * ((((a1 - 1881469600) & 0x7024F7FF) - 21244) ^ (a1 - 19879))) ^ a1))
                            - 4))();
}

uint64_t sub_100077ED4(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  uint64_t v3;
  int v4;

  v4 = STACK[0x36C];
  LODWORD(STACK[0x4A0]) = STACK[0x2AC];
  LODWORD(STACK[0x4A4]) = v4;
  LODWORD(STACK[0x4A8]) = STACK[0x7FC];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * v2)
                                                            - ((2 * (v2 ^ 0x608F)) ^ 0x2CCLL)))(a1, a2, 105);
}

uint64_t sub_100077F18()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;

  v2 = STACK[0x4A8];
  v3 = STACK[0x4A4];
  v4 = STACK[0x4A0];
  LODWORD(STACK[0x2CC]) = STACK[0x4A8];
  v5 = LODWORD(STACK[0x2C8]) + v3;
  v6 = STACK[0x2E0];
  STACK[0x2D8] = *(_QWORD *)(v1 + 8 * v0) - 4;
  LODWORD(STACK[0x5A4]) = v5;
  LODWORD(STACK[0x5A8]) = v2;
  LODWORD(STACK[0x5AC]) = v4;
  STACK[0x5B0] = v6;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v0 - 922669825) & 0x36FEFFF5 ^ 0x8B5) + v0)))();
}

uint64_t sub_100077F7C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  int v3;
  int v4;
  int v5;

  v2 = STACK[0x5B0];
  STACK[0x898] = STACK[0x5B0];
  v3 = STACK[0x5AC];
  LODWORD(STACK[0x8A4]) = STACK[0x5AC];
  v4 = STACK[0x5A8];
  v5 = STACK[0x5A4];
  STACK[0x258] = v2;
  LODWORD(STACK[0x2BC]) = v3;
  LODWORD(STACK[0x270]) = v5;
  LODWORD(STACK[0x298]) = v4;
  STACK[0x2F8] = 0x6CA6F0EE111A2BB6;
  STACK[0x248] = 0x7C0ADF1C3D95FE54;
  LODWORD(STACK[0x664]) = 2134608427;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((24690 * ((((a1 - 465588279) ^ (v2 == 0x177ECD13451C78A8)) & 1) == 0)) ^ a1))
                            - ((a1 + 1074081425) ^ 0x40055E4ELL)))();
}

uint64_t sub_100078040()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(_QWORD *)(STACK[0x898] + v2) == 0x6CA6F0EE111A2BB6)
                                          * (4475 * (v0 & 0x1BC07DDF ^ 0x5D5B) - 22175)) ^ v0 & 0x1BC07DDF))
                            - (((v0 & 0x1BC07DDFu) + 56) ^ 0x5D9ALL)))();
}

uint64_t sub_1000780A4()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((55255 * ((*(_BYTE *)(STACK[0x898] - 0x177ECD13451C7880) & 4) == 0)) ^ v0))
                            - ((11 * (v0 ^ 0x5CCB)) ^ 0xEF3)))();
}

uint64_t sub_1000780FC()
{
  int v0;
  uint64_t v1;
  _BOOL4 v2;

  v2 = *(_QWORD *)(STACK[0x898] - 0x177ECD13451C78A0) == 0x7C0ADF1C3D95FE54;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((8 * v2) | (16 * v2)) ^ v0))
                            - ((v0 - 576755593) & 0xAA6FFFFD ^ ((v0 - 820) | 0x34C) ^ 0x880FE8AFLL)))();
}

uint64_t sub_100078178()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((56638
                                          * (((((v0 + 469072000) & 0xE40A3EFF ^ 0x77F04ED7)
                                             + ((v0 + 134664217) | 0x80089844)) & *(_DWORD *)(STACK[0x898]
                                                                                            - 0x177ECD13451C7880)) != 0)) ^ v0))
                            - 12))();
}

uint64_t sub_1000781F0@<X0>(int a1@<W8>)
{
  uint64_t v1;

  STACK[0x360] = ((a1 + 1074089799) ^ 0xFFFFFFFFBFFAA1BALL) + *(_QWORD *)(v1 + 8 * a1);
  STACK[0x4F0] = STACK[0x898];
  LODWORD(STACK[0x4FC]) = STACK[0x8A4];
  return (*(uint64_t (**)(void))(v1 + 8 * (a1 ^ 0x17E6)))();
}

uint64_t sub_10007823C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(v0 ^ 0x880F9069 ^ (28867 * (v0 == 682657813)))) - 8))();
}

uint64_t sub_100078270()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x2E0];
  STACK[0x360] = (v0 ^ 0x400550AEu) - 1074093650 + *(_QWORD *)(v1 + 8 * v0) + 8;
  STACK[0x4F0] = v2;
  LODWORD(STACK[0x4FC]) = STACK[0x7FC];
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0x17F1)))();
}

uint64_t sub_1000782C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36,int a37,int a38,__int16 a39,int a40,int a41,__int16 a42,__int16 a43,__int16 a44,__int16 a45,__int16 a46,int a47,int a48,int a49,int a50,int a51,uint64_t a52,int a53,int a54,__int16 a55,int a56,__int16 a57,int a58,__int16 a59,int a60,int a61,__int16 a62,int a63)
{
  int a65;
  __int16 a67;
  int a69;
  __int16 a72;
  __int16 a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int v82;
  int v83;
  int v84;
  uint64_t v85;
  int v86;

  LODWORD(STACK[0x57C]) = a48;
  LODWORD(STACK[0x86C]) = a47;
  LODWORD(STACK[0x87C]) = a76;
  LODWORD(STACK[0x884]) = a77;
  LODWORD(STACK[0x514]) = a79;
  LODWORD(STACK[0x510]) = a78;
  LODWORD(STACK[0x340]) = a80;
  LODWORD(STACK[0x880]) = a80;
  LODWORD(STACK[0x2B0]) = a75;
  LODWORD(STACK[0x890]) = a75;
  LODWORD(STACK[0x254]) = a82;
  LODWORD(STACK[0x52C]) = a81;
  LODWORD(STACK[0x6EC]) = a82;
  LODWORD(STACK[0x6FC]) = v84;
  LODWORD(STACK[0xA10]) = a82;
  LODWORD(STACK[0xA14]) = v83;
  LODWORD(STACK[0xA24]) = v82;
  LODWORD(STACK[0x23C]) = a74;
  LOWORD(STACK[0x31A]) = a59;
  LOWORD(STACK[0x490]) = a46;
  LOWORD(STACK[0x280]) = a62;
  LOWORD(STACK[0x486]) = a55;
  LODWORD(STACK[0x488]) = a65;
  LOWORD(STACK[0x48E]) = a67;
  LOWORD(STACK[0x47E]) = a57;
  LODWORD(STACK[0x480]) = a63;
  LOWORD(STACK[0x484]) = a72;
  LODWORD(STACK[0x7E4]) = a69;
  LODWORD(STACK[0x55C]) = a49;
  LOWORD(STACK[0x476]) = a44;
  LOWORD(STACK[0x492]) = a73;
  LODWORD(STACK[0x494]) = a53;
  LODWORD(STACK[0x7E8]) = a51;
  LODWORD(STACK[0x244]) = a41;
  LODWORD(STACK[0x4EC]) = a35;
  LODWORD(STACK[0x4E0]) = a37;
  LOWORD(STACK[0x346]) = a42;
  LODWORD(STACK[0x4E4]) = a38;
  LODWORD(STACK[0x4E8]) = a36;
  LOWORD(STACK[0x856]) = a39;
  LODWORD(STACK[0x858]) = a40;
  return ((uint64_t (*)(void))(*(_QWORD *)(v85 + 8 * ((v86 - 1074092166) ^ 0x3BF5)) - 8))();
}

uint64_t sub_100078468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,int a37,int a38,int a39,__int16 a40,int a41,int a42,__int16 a43,__int16 a44,__int16 a45,__int16 a46,__int16 a47,int a48,int a49,int a50,int a51,int a52,uint64_t a53,int a54,int a55,__int16 a56,int a57,__int16 a58,int a59,__int16 a60,int a61,int a62,__int16 a63)
{
  int a64;
  int a66;
  __int16 a68;
  int a70;
  __int16 a73;
  __int16 a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int a83;
  int v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t (*v87)(void);

  LODWORD(STACK[0x57C]) = a49;
  LODWORD(STACK[0x86C]) = a48;
  LODWORD(STACK[0x87C]) = a77;
  LODWORD(STACK[0x884]) = a78;
  LODWORD(STACK[0x340]) = a81;
  LODWORD(STACK[0x880]) = a81;
  LODWORD(STACK[0x2B0]) = a76;
  LODWORD(STACK[0x890]) = a76;
  LODWORD(STACK[0x254]) = a83;
  LODWORD(STACK[0x514]) = a80;
  LODWORD(STACK[0x510]) = a79;
  LODWORD(STACK[0x52C]) = a82;
  LODWORD(STACK[0x6EC]) = a83;
  LODWORD(STACK[0x6FC]) = v85;
  LODWORD(STACK[0xA10]) = a83;
  LODWORD(STACK[0xA14]) = v84;
  LODWORD(STACK[0xA24]) = v83;
  LODWORD(STACK[0x23C]) = a75;
  LOWORD(STACK[0x31A]) = a60;
  LOWORD(STACK[0x490]) = a47;
  LOWORD(STACK[0x280]) = a63;
  LOWORD(STACK[0x486]) = a56;
  LODWORD(STACK[0x488]) = a66;
  LOWORD(STACK[0x48E]) = a68;
  LOWORD(STACK[0x47E]) = a58;
  LODWORD(STACK[0x480]) = a64;
  LOWORD(STACK[0x484]) = a73;
  LODWORD(STACK[0x7E4]) = a70;
  LODWORD(STACK[0x55C]) = a50;
  LOWORD(STACK[0x476]) = a45;
  LOWORD(STACK[0x492]) = a74;
  LODWORD(STACK[0x494]) = a54;
  LODWORD(STACK[0x7E8]) = a52;
  LODWORD(STACK[0x244]) = v83;
  LODWORD(STACK[0x4EC]) = 381450761;
  LODWORD(STACK[0x4E0]) = a38;
  LOWORD(STACK[0x346]) = a43;
  LODWORD(STACK[0x4E4]) = a39;
  LODWORD(STACK[0x4E8]) = a37;
  LOWORD(STACK[0x856]) = a40;
  v87 = (uint64_t (*)(void))(1074093646
                          - ((a11 - 78373714) | 0x40A00u)
                          + *(_QWORD *)(v86 + 8 * ((29620 * (a11 == -1490733790)) ^ (a11 - 1152190731)))
                          - 20);
  LODWORD(STACK[0x858]) = a41;
  return v87();
}

uint64_t sub_100078608()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x4EC]) = STACK[0x2B0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 3428)) - 12))();
}

uint64_t sub_100078630()
{
  uint64_t v0;
  int v1;

  LODWORD(STACK[0x4EC]) = STACK[0x2B0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v1 - 1074069630)) - 8))();
}

uint64_t sub_100078664(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (v2 - 1074081425)) - 8))(a1, a2, 105);
}

uint64_t sub_100078690(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x664]) = 2134608427;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (v2 - 1074081425)) - 8))(a1, a2, 105);
}

uint64_t sub_1000786C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;

  LODWORD(STACK[0x26C]) = 2134608240;
  LODWORD(STACK[0x5DC]) = STACK[0x928];
  LODWORD(STACK[0x5E0]) = 2134608240;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (a3 ^ 0x2224))
                                                            - (((a3 ^ 0x2224) + 4502331) | 0x48022842u)
                                                            + 1212628050))(a1, a2, 105);
}

uint64_t sub_100078750()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x5D4]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 - 1074087038)) - 4))();
}

uint64_t sub_100078798()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(v0 + 8 * (v1 - 1074077020)))();
}

uint64_t sub_1000787B4()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(v0 + 8 * (v1 - 1074077020)))();
}

uint64_t sub_1000787D0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;

  LODWORD(STACK[0x4AC]) = a1;
  LODWORD(STACK[0x800]) = a1;
  LODWORD(STACK[0x2B4]) = a1;
  v3 = STACK[0x9A4];
  LODWORD(STACK[0x238]) = STACK[0x9A4];
  LODWORD(STACK[0x4C4]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((20834 * (v3 == 2134650450)) ^ (v2 - 1074086964))) - 8))();
}

uint64_t sub_10007881C()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v1 - 1074077713)) - 8))();
}

uint64_t sub_100078850@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;

  LODWORD(STACK[0x668]) = v3;
  LODWORD(STACK[0x66C]) = a1;
  LODWORD(STACK[0x670]) = v4;
  LODWORD(STACK[0x674]) = v1;
  STACK[0x678] = v2;
  STACK[0x310] = *(_QWORD *)(v6 + 8 * a1) - 8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6 + 8 * (v5 + v7 + 32914)) - 4))(469834334);
}

uint64_t sub_1000788EC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  STACK[0x4B8] = *(_QWORD *)(v2 + 8 * v1) - 8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * ((12530 * (v1 + 1810085779 != v1 - 504688880)) ^ (v1 + 6319)))
                                          - 4))(v0);
}

uint64_t sub_100078950(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (a3 - 1074085181)))();
}

uint64_t sub_100078974(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, int a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a69;
  uint64_t a70;
  uint64_t a71;
  int v71;
  uint64_t v72;
  _QWORD *v73;
  _DWORD *v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;

  STACK[0x6A8] = a5;
  STACK[0x6B8] = (unint64_t)a2;
  v77 = *(_QWORD *)(a5 + v76);
  v78 = (a4 - 555142818);
  v79 = -8231943 * ((*(_DWORD *)(*v73 + (*v74 & v75)) ^ (v77 + v78)) & 0x7FFFFFFF);
  v80 = -8231943 * (v79 ^ HIWORD(v79));
  *(_BYTE *)(v77 + v78 - 0x6CA6F0EE111A2BB6) = *(_BYTE *)(v72 + (v80 >> 24)) ^ HIBYTE(v71) ^ *(_BYTE *)(a70 + (v80 >> 24)) ^ *(_BYTE *)((v80 >> 24) + a71 + 4) ^ v80 ^ (105 * BYTE3(v80)) ^ 0xE;
  v81 = v77 + (v78 + 1);
  LODWORD(v80) = -8231943 * ((*(_DWORD *)(*v73 + (*v74 & v75)) ^ v81) & 0x7FFFFFFF);
  v82 = -8231943 * (v80 ^ WORD1(v80));
  *(_BYTE *)(v81 - 0x6CA6F0EE111A2BB6) = *(_BYTE *)(a69 + (v82 >> 24)) ^ BYTE2(v71) ^ *(_BYTE *)(a70 + (v82 >> 24)) ^ *(_BYTE *)((v82 >> 24) + a71 + 4) ^ v82 ^ (105 * BYTE3(v82));
  v83 = v77 + (v78 + 2);
  LODWORD(v82) = -8231943 * ((*(_DWORD *)(*v73 + (*v74 & v75)) ^ v83) & 0x7FFFFFFF);
  v84 = -8231943 * (v82 ^ WORD1(v82));
  *(_BYTE *)(v83 - 0x6CA6F0EE111A2BB6) = *(_BYTE *)(a69 + (v84 >> 24)) ^ BYTE1(v71) ^ *(_BYTE *)(a70 + (v84 >> 24)) ^ *(_BYTE *)((v84 >> 24) + a71 + 4) ^ v84 ^ (105 * BYTE3(v84)) ^ 0x8D;
  v85 = v77 + (v78 + 3);
  LODWORD(v78) = -8231943 * ((*(_DWORD *)(*v73 + (*v74 & v75)) ^ v85) & 0x7FFFFFFF);
  v86 = -8231943 * (v78 ^ WORD1(v78));
  *(_BYTE *)(v85 - 0x6CA6F0EE111A2BB6) = v71 ^ *(_BYTE *)(a69 + (v86 >> 24)) ^ *(_BYTE *)(a70 + (v86 >> 24)) ^ *(_BYTE *)((v86 >> 24) + a71 + 4) ^ v86 ^ (105 * BYTE3(v86)) ^ 0x2F;
  return a2();
}

uint64_t sub_100078B60()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  STACK[0x4B8] = *(_QWORD *)(v1 + 8 * (v2 - 1074093457)) - 12;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * (v2 - 1074083126)) - 4))(v0);
}

uint64_t sub_100078B9C()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(v0 + 8 * (v1 - 1074056691)))();
}

uint64_t sub_100078BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35)
{
  int v35;
  int v36;
  uint64_t v37;

  return ((uint64_t (*)(void))(*(_QWORD *)(v37 + 8 * (((2 * (v35 >= a35)) | (4 * (v35 >= a35))) ^ (v36 + 2078))) - 8))();
}

uint64_t sub_100078BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  int v32;
  uint64_t v33;

  return ((uint64_t (*)(void))(*(_QWORD *)(v33
                                        + 8 * (((((a32 - 39093) | 0x2D22) ^ 0x2D6F) * (v32 >= -1059329722)) ^ a32))
                            - 8))();
}

uint64_t sub_100078C1C(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((2 * ((a2 - 1703842767) & 0x658DFBFB ^ 0x178) + 101) * (v3 == a3)) ^ (a2 - 27539))))();
}

uint64_t sub_100078C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32)
{
  int v32;
  uint64_t v33;

  return (*(uint64_t (**)(void))(v33
                              + 8
                              * (int)(((v32 == ((a32 - 1522898101) & 0x5AC567D7 ^ 0xB3D1B790))
                                     * (((a32 - 1522898101) ^ 0xA53A998D) - 56)) ^ a32)))();
}

uint64_t sub_100078CB4(int a1)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((v1 == 25 * (a1 ^ 0x2D75) - 1109597014) * ((a1 + 750057036) & 0xD34ADD73 ^ 0x1C8)) ^ a1)))();
}

uint64_t sub_100078D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int a68;
  int v68;
  uint64_t v69;

  STACK[0x4B8] = *(_QWORD *)(v69 + 8 * v68) - 12;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v69 + 8 * ((v68 + 10480) ^ v68)) - 4))(a68);
}

uint64_t sub_100078D4C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int v37;
  _DWORD *v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  unsigned int v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;

  v41 = STACK[0x2E0];
  v42 = *(_QWORD *)(STACK[0x2E0] + v40);
  v43 = STACK[0x2B4];
  v44 = ((2 * (v43 - 381450749)) & 0xF99E3EDA) + ((v43 - 381450749) ^ 0x7CCF1F6D) - 2093948781;
  v45 = -8231943 * (((v42 + v44) ^ *(_DWORD *)(*v36 + (*v38 & v39))) & 0x7FFFFFFF);
  v46 = -8231943 * (v45 ^ HIWORD(v45));
  *(_BYTE *)(v42 + v44 - 0x6CA6F0EE111A2BB6) = *(_BYTE *)(a29 + (v46 >> 24) + 2) ^ *(_BYTE *)(a28 + (v46 >> 24)) ^ *(_BYTE *)(a30 + (v46 >> 24) + 2) ^ v46 ^ (-79 * BYTE3(v46));
  v47 = v42 + (v44 + 1);
  LODWORD(v44) = -8231943 * ((*(_DWORD *)(*v36 + (*v38 & v39)) ^ v47) & 0x7FFFFFFF);
  v48 = -8231943 * (v44 ^ WORD1(v44));
  *(_BYTE *)(v47 - 0x6CA6F0EE111A2BB6) = *(_BYTE *)(v33 + (v48 >> 24)) ^ *(_BYTE *)(v32 + (v48 >> 24)) ^ *(_BYTE *)((v48 >> 24) + v35 + 4) ^ v48 ^ (105 * BYTE3(v48));
  LODWORD(STACK[0x6B4]) = v30;
  LODWORD(STACK[0x4B0]) = a1;
  LODWORD(STACK[0x4B4]) = v31;
  STACK[0x538] = v41;
  LODWORD(STACK[0x540]) = v43;
  STACK[0x548] = *(_QWORD *)(v34 + 8 * (v37 - 1074092246));
  LOBYTE(STACK[0x546]) = -67;
  LOBYTE(STACK[0x547]) = -52;
  return ((uint64_t (*)(void))(*(_QWORD *)(v34 + 8 * (v37 - 1074078613)) - 12))();
}

uint64_t sub_100078EC0(int a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  __int16 v5;
  int v6;
  unint64_t v7;

  LODWORD(STACK[0x6B4]) = v1;
  LODWORD(STACK[0x4B0]) = a1;
  LODWORD(STACK[0x4B4]) = v2;
  v5 = LOWORD(STACK[0x378]) - ((2 * LOWORD(STACK[0x378]) + 18230) & 0x997A) - 4008;
  v6 = STACK[0x2AC];
  v7 = *(_QWORD *)(v3 + 8 * (v4 - 1074092286));
  STACK[0x538] = STACK[0x2E0];
  LODWORD(STACK[0x540]) = v6;
  LOWORD(STACK[0x546]) = v5;
  STACK[0x548] = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((4705 * (v4 != -1125476119)) ^ (v4 - 1074083190))) - 12))();
}

uint64_t sub_100078F80(uint64_t a1, uint64_t a2, char a3, int a4, char a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _DWORD *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  unint64_t v23;

  v17 = *(_QWORD *)(STACK[0x538] + v16);
  v18 = ((2 * (v7 + LODWORD(STACK[0x540]) + 10)) & 0xF7DF3E3E)
      + ((v7 + LODWORD(STACK[0x540]) + 10) ^ 0xFBEF9F1F)
      + 68182241;
  v19 = (((v17 + v18) ^ *(_DWORD *)(*v13 + (*v14 & v15))) & 0x7FFFFFFF) * a4;
  v20 = (v19 ^ HIWORD(v19)) * a4;
  *(_BYTE *)(v17 + v18 + a2) = LOBYTE(STACK[0x547]) ^ *(_BYTE *)(v8 + (v20 >> 24)) ^ *(_BYTE *)(a7 + (v20 >> 24) + 2) ^ *(_BYTE *)(a6 + (v20 >> 24) + 2) ^ v20 ^ (BYTE3(v20) * a5) ^ 0xCC;
  v21 = (uint64_t (*)(void))STACK[0x548];
  v22 = v17 + (v18 + 1);
  LODWORD(v18) = ((*(_DWORD *)(*v13 + (*v14 & v15)) ^ v22) & 0x7FFFFFFF) * a4;
  v23 = (v18 ^ WORD1(v18)) * a4;
  *(_BYTE *)(v22 + a2) = LOBYTE(STACK[0x546]) ^ *(_BYTE *)(v10 + (v23 >> 24)) ^ *(_BYTE *)(v11 + (v23 >> 24)) ^ *(_BYTE *)((v23 >> 24) + v12 + 4) ^ v23 ^ (BYTE3(v23) * a3) ^ v9;
  return v21();
}

uint64_t sub_100079088()
{
  uint64_t v0;
  unsigned int v1;
  _BOOL4 v2;

  LODWORD(STACK[0x804]) = STACK[0x2B4];
  v2 = LODWORD(STACK[0x238]) == 2134650450;
  LODWORD(STACK[0x4C4]) = STACK[0x238];
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (int)((20670 * v2) ^ (v1 - 1074086964))) - (v1 ^ 0x40055E4ELL)))();
}

uint64_t sub_1000790E0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  STACK[0x808] = *(_QWORD *)(STACK[0x200] + v2);
  STACK[0x810] = STACK[0x338];
  v3 = STACK[0x2A8];
  LODWORD(STACK[0x818]) = STACK[0x2A8];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v3 != 859052506) * (v0 + 16504)) ^ v0))
                            - ((v0 + 1559648821) & 0xA309D63F)
                            + 22063))();
}

uint64_t sub_100079160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;

  LODWORD(STACK[0x81C]) = LODWORD(STACK[0x804]) - 1240503248;
  LODWORD(STACK[0x4C0]) = STACK[0x818];
  return (*(uint64_t (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v3 + 8 * a3))(a1, a2, &off_10112C750, 4294967253, -1389204830, 0x93590F11EEE5D44ALL, 4286735353, 2362357859);
}

uint64_t sub_1000791E0@<X0>(uint64_t a1@<X2>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, int a5@<W6>, unsigned int a6@<W7>, int a7@<W8>)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  _DWORD *v18;
  int v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  unint64_t v23;

  v21 = v9 + (v7 + v10);
  v22 = ((v21 ^ *(_DWORD *)(*v17 + (*v18 & v19))) & 0x7FFFFFFF) * a5;
  v23 = (v22 ^ HIWORD(v22)) * a5;
  *(_BYTE *)(v21 + a4) = *(_BYTE *)(v8 + v10 + ((a7 + 1074071567) ^ a6)) ^ *(_BYTE *)(*(_QWORD *)(a1 + 8 * (a7 + v11))
                                                                                    + (v23 >> 24)
                                                                                    + v12) ^ *(_BYTE *)(*(_QWORD *)(a1 + 8 * (a7 + v13)) + (v23 >> 24) + v15) ^ *(_BYTE *)(*(_QWORD *)(a1 + 8 * (a7 + v16)) + (v23 >> 24) + a3) ^ v23 ^ (BYTE3(v23) * a2) ^ 8;
  return (*(uint64_t (**)(void))(v14 + 8 * (((v10 == 859052507) * v20) ^ a7)))();
}

uint64_t sub_1000792A4()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x4C0]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 - 1074083972)) - 8))();
}

uint64_t sub_1000792C4()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x300];
  STACK[0x820] = STACK[0x300];
  LODWORD(STACK[0x4C4]) = 2134650450;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((22905 * (v2 != 0)) ^ (v0 - 1074086964)))
                            - (v0 ^ 0x40056A2Bu)
                            + 13413))();
}

uint64_t sub_100079318@<X0>(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)STACK[0x820] = STACK[0x804];
  return ((uint64_t (*)(void))(1074093646 - ((a1 + 1216170466) & 0xF787DFF6) + *(_QWORD *)(v1 + 8 * a1) - 20))();
}

uint64_t sub_100079358()
{
  LODWORD(STACK[0x82C]) = STACK[0x4C4];
  return ((uint64_t (*)(void))STACK[0x228])();
}

uint64_t sub_100079368()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v0 + 8 * ((v1 - 1074093350) ^ 0x84D1)) - 4))(469834334);
}

uint64_t sub_100079400@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, unint64_t a4@<X4>, unint64_t a5@<X8>)
{
  unint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  char v15;
  int v16;
  int v17;

  STACK[0x680] = a5;
  LODWORD(STACK[0x68C]) = v7;
  STACK[0x690] = v5;
  STACK[0x698] = a4;
  LODWORD(STACK[0x6A0]) = a3;
  LODWORD(STACK[0x6A4]) = v8;
  STACK[0x9A8] = v5;
  STACK[0x9B0] = a5;
  v12 = *(_QWORD *)(v11 + 8 * v6) - 12;
  v13 = STACK[0x2B8];
  LODWORD(STACK[0x9B8]) = STACK[0x2B8];
  v14 = v7 + v9;
  v15 = a2 ^ v10;
  v16 = STACK[0x348];
  v17 = (v14 + 4) << v15;
  LODWORD(STACK[0x9BC]) = ((v14 + 4) ^ 0x7F9FCFFE) - 1586037084 + (v17 & 0xFF3F9FFC);
  LODWORD(STACK[0x9C0]) = v16 - ((2 * v16 + 305455026) & a1) - 149226232;
  LODWORD(STACK[0x9C4]) = ((v14 + 4) ^ 0x63DEFFA6) - 1120416004 + (v17 & 0xC7BDFF4C);
  LODWORD(STACK[0x9C8]) = (v14 ^ 0xE716CEFE) + 973078436 + ((2 * v14) & 0xCE2D9DFC);
  LODWORD(STACK[0x9CC]) = v13 - ((2 * v13 + 154073176) & a1) - 1030223525;
  return (*(uint64_t (**)(_QWORD, uint64_t))(v11 + 8 * a2))(LODWORD(STACK[0x4B0]), v12);
}

uint64_t sub_100079524(int a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;

  LODWORD(STACK[0x6B4]) = v1;
  LODWORD(STACK[0x4B0]) = a1;
  LODWORD(STACK[0x4B4]) = v2;
  v5 = STACK[0x2BC];
  v6 = STACK[0x38C];
  LODWORD(STACK[0x91C]) = STACK[0x38C];
  LOBYTE(v5) = v6 == v5;
  v7 = STACK[0x234];
  LODWORD(STACK[0x920]) = STACK[0x234];
  LODWORD(STACK[0x5E4]) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((37920 * ((v4 ^ 0x8D ^ v5) & 1)) ^ (v4 - 1074079445)))
                            - ((v4 - 1074093446) | 0x1908u)
                            + 6588))();
}

uint64_t sub_1000795C0()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x5D4]) = STACK[0x920];
  return ((uint64_t (*)(void))(1074093646 - (v0 + 1074087038) + *(_QWORD *)(v1 + 8 * v0) - 12))();
}

uint64_t sub_1000795FC()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  LODWORD(STACK[0x5D8]) = v1;
  LODWORD(STACK[0x924]) = v1;
  v3 = STACK[0x5D4];
  LODWORD(STACK[0x240]) = v1;
  LODWORD(STACK[0x26C]) = v3;
  LODWORD(STACK[0x5DC]) = v1;
  LODWORD(STACK[0x5E0]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((5981 * (v3 == 2134650450)) ^ (v0 - 1074068845)))
                            - ((((v0 - 1074092516) | 0xA9Cu) + 1212624216) ^ 0x48473C52)))();
}

uint64_t sub_100079684@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x258];
  STACK[0x360] = ((a1 + 1074089800) ^ 0xFFFFFFFFBFFAA1BELL) + *(_QWORD *)(v1 + 8 * a1);
  STACK[0x4F0] = v2;
  LODWORD(STACK[0x4FC]) = STACK[0x924];
  return (*(uint64_t (**)(void))(v1 + 8 * (int)(a1 ^ 0x17E7)))();
}

uint64_t sub_1000796D8()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 1074075549)) - 12))();
}

uint64_t sub_1000796F4()
{
  int v0;
  uint64_t v1;
  int v2;

  v2 = STACK[0x5E0];
  LODWORD(STACK[0x38C]) = STACK[0x5DC];
  LODWORD(STACK[0x234]) = v2;
  LODWORD(STACK[0x5E4]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((22920 * (v0 == -171308868)) ^ (v0 - 1212613861))) - 12))();
}

uint64_t sub_10007974C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  uint64_t v5;
  int v6;
  unsigned __int8 v7;

  v6 = STACK[0x5E4];
  LODWORD(STACK[0x934]) = STACK[0x5E4];
  v7 = STACK[0x36B];
  LODWORD(STACK[0x660]) = v6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                          + 8
                                                                                          * (((((a5 - 64) ^ v7) & 1)
                                                                                            * (a5 - 20151)) ^ a5))
                                                                              - 12))(a1, a2, a3, a4, 4294967217);
}

uint64_t sub_1000797A0()
{
  int v0;
  uint64_t v1;
  _BOOL4 v2;

  v2 = LODWORD(STACK[0x934]) == 2134650450;
  STACK[0x938] = STACK[0x330];
  return (*(uint64_t (**)(void))(v1 + 8 * ((((((v0 - 38281) ^ v2) & 1) == 0) * (v0 - 38260)) ^ v0)))();
}

uint64_t sub_1000797E8()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  int v5;

  v2 = STACK[0x258];
  v3 = STACK[0x308];
  v4 = STACK[0x250];
  v5 = STACK[0x29C];
  STACK[0x608] = STACK[0x2F8];
  LODWORD(STACK[0x610]) = v5;
  LODWORD(STACK[0x614]) = v4;
  STACK[0x618] = v3;
  STACK[0x620] = v2;
  STACK[0x628] = STACK[0x938];
  LODWORD(STACK[0x634]) = STACK[0x934];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 3476)) - ((v0 - 3476) ^ 0x44Cu) + 33715))();
}

uint64_t sub_100079844@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  int v7;
  unint64_t v8;

  LODWORD(STACK[0x96C]) = STACK[0x634];
  v3 = STACK[0x628];
  v4 = STACK[0x620];
  v5 = STACK[0x618];
  v6 = STACK[0x614];
  v7 = STACK[0x610];
  v8 = STACK[0x608];
  STACK[0x970] = STACK[0x608];
  *(_QWORD *)(v4 + v2) = v3;
  *(_QWORD *)(v4 - 0x177ECD13451C78A0) = v5;
  *(_DWORD *)(v4 - 0x177ECD13451C7894) = v6;
  *(_DWORD *)(v4 - 0x177ECD13451C7898) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((v8 != 0x6CA6F0EE111A2BB6) * ((a1 ^ 0xBFFA3008) + a1 + 1074059915)) ^ a1))
                            - 4))();
}

uint64_t sub_100079900()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  char v7;

  v3 = (v0 - 32528524) & 0x41F55F7F;
  v4 = STACK[0x970];
  STACK[0x978] = STACK[0x970] + v2;
  v6 = LODWORD(STACK[0x224]) + (v3 ^ 0x2A0209E3u);
  v5 = LODWORD(STACK[0x224]) + (v3 ^ 0x2A0209E3) == 0;
  STACK[0x980] = v6;
  STACK[0x2C0] = v6;
  v7 = v5;
  STACK[0x648] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * ((9152 * (((v0 + 1) ^ v7) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_10007996C()
{
  int v0;
  uint64_t v1;

  STACK[0x638] = STACK[0x980];
  STACK[0x640] = STACK[0x770];
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0x20DA)))(232, 23);
}

uint64_t sub_1000799A8@<X0>(char a1@<W0>, int a2@<W1>, char a3@<W8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  unint64_t v9;

  v9 = v5 - 1;
  STACK[0x2C0] = v9;
  *(_BYTE *)(v4 + v9) = (((v3 + v6) | v7) ^ (a3 - 29) ^ a1) * (a3 - 12);
  return (*(uint64_t (**)(void))(v8 + 8 * (((STACK[0x2C0] == 0) * a2) | v3)))();
}

uint64_t sub_1000799F0@<X0>(unint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  int v3;
  uint64_t v4;

  STACK[0x640] = a1;
  STACK[0x638] = v2;
  STACK[0x648] = STACK[0x2F8];
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * v1) - ((v3 + v1 + 708) ^ 0x40055E4ELL)))();
}

uint64_t sub_100079A20()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_100DD0758();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * (v0 - 1074059915)) - 4))(v2);
}

uint64_t sub_100079A6C()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x248];
  STACK[0x988] = STACK[0x248];
  LODWORD(STACK[0x660]) = STACK[0x96C];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((8570 * (v2 != 0x7C0ADF1C3D95FE54)) ^ (v0 - 1074073447)))
                            - ((v0 - 1074086658) ^ 0x1B48)))();
}

uint64_t sub_100079AD8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  BOOL v2;
  unint64_t v3;
  int v4;

  STACK[0x990] = STACK[0x988] - 0x7C0ADF1C3D95FE54;
  v3 = (LODWORD(STACK[0x224]) + 1778866085);
  v2 = LODWORD(STACK[0x224]) == -1778866085;
  STACK[0x998] = v3;
  STACK[0x320] = v3;
  v4 = !v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((47920 * v4) ^ a1)) - (a1 + 3560) + 10528))();
}

uint64_t sub_100079B3C()
{
  int v0;
  uint64_t v1;

  STACK[0x650] = STACK[0x998];
  STACK[0x658] = STACK[0x778];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 8 * v0))(4084166646, 181, 46673);
}

uint64_t sub_100079B7C@<X0>(char a1@<W0>, char a2@<W1>, int a3@<W2>, char a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  int v8;
  char v9;
  uint64_t v10;
  unint64_t v11;

  v11 = v6 - 1;
  STACK[0x320] = v11;
  *(_BYTE *)(v5 + v11) = (a4 + ((v4 + v9) & a1 ^ a2)) * ((a4 + 66) ^ v7);
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((((((STACK[0x320] - v4) | (v4 - STACK[0x320])) & 0x8000000000000000) == 0) * a3) ^ ((int)v4 + v8))))();
}

uint64_t sub_100079BD4@<X0>(unint64_t a1@<X8>)
{
  unsigned int v1;
  unint64_t v2;
  uint64_t v3;

  STACK[0x658] = a1;
  STACK[0x650] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((11733 * (v1 > 0x92569BC3)) ^ (v1 - 1668239010))) - 12))();
}

uint64_t sub_100079C28()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  v2 = sub_100DD0758();
  LODWORD(STACK[0x660]) = STACK[0x96C];
  return ((uint64_t (*)(uint64_t))(1074093646
                                          - (v1 + 1074073447)
                                          + *(_QWORD *)(v0 + 8 * v1)
                                          - 20))(v2);
}

uint64_t sub_100079C8C@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((3146
                                          * (((STACK[0x938] == 0x6CA6F0EE111A2BB6) ^ ((((a1 | 0x88) + 124) | 0x40) + 1)) & 1)) ^ (a1 | 0x8588)))
                            - 12))();
}

uint64_t sub_100079CEC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  BOOL v5;
  unint64_t v6;
  int v7;

  v3 = a1 - 16498;
  v4 = (v3 - 974308794) & 0x7A17DEE7;
  STACK[0x940] = STACK[0x938] + v2;
  v6 = LODWORD(STACK[0x250]) + (v4 ^ 0x2A0209E3u);
  v5 = LODWORD(STACK[0x250]) + (v4 ^ 0x2A0209E3) == 0;
  STACK[0x948] = v6;
  STACK[0x2A0] = v6;
  v7 = !v5;
  return (*(uint64_t (**)(void))(v1 + 8 * (int)((v7 * (((v3 + 1947728875) | 0x822402C4) ^ 0xF63C67D5)) ^ v3)))();
}

uint64_t sub_100079D6C()
{
  unsigned int v0;
  uint64_t v1;

  STACK[0x5E8] = STACK[0x948];
  STACK[0x5F0] = STACK[0x780];
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v1
                                                               + 8
                                                               * (int)((108023 * (v0 <= (v0 ^ 0xF63CDFF6) - 1365292101)) ^ (v0 + 163862750)))
                                                   - 12))(186, 148);
}

uint64_t sub_100079DE4@<X0>(char a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v7 = v5 - 1;
  STACK[0x2A0] = v7;
  *(_BYTE *)(v4 + v7) = ((v3 - 91) ^ a1) * (v3 - 74);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((STACK[0x2A0] != 0) * a2) ^ a3)) - 12))();
}

uint64_t sub_100079E34()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;

  STACK[0x5F0] = v0;
  STACK[0x5E8] = v1;
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 - 1074075950)))();
}

uint64_t sub_100079E54()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_100DD0758();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * (v0 - 1074059452)) - 12))(v2);
}

uint64_t sub_100079EA4()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x308];
  STACK[0x950] = STACK[0x308];
  LODWORD(STACK[0x660]) = 2134650450;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v0 - 1074055598) | (4 * (v2 != 0x7C0ADF1C3D95FE54))))
                            - ((v0 - 1074067438) ^ 0x6650)))();
}

uint64_t sub_100079F08@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;

  STACK[0x958] = STACK[0x950] - 0x7C0ADF1C3D95FE54;
  v2 = (LODWORD(STACK[0x250]) + 1778866085);
  STACK[0x960] = v2;
  STACK[0x2D0] = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((_DWORD)v2 != a1 - 26200) * ((a1 + 1411217439) & 0xEBE77FCE ^ 0x40059BAB)) ^ a1)))();
}

uint64_t sub_100079F80@<X0>(int a1@<W8>)
{
  uint64_t v1;

  STACK[0x5F8] = STACK[0x960];
  STACK[0x600] = STACK[0x788];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * (a1 - 8657)) - 8))(1971674822);
}

uint64_t sub_100079FC4@<X0>(int a1@<W0>, char a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  int v7;
  uint64_t v8;
  unint64_t v9;

  v9 = v4 - 1;
  STACK[0x2D0] = v9;
  *(_BYTE *)(v3 + v9) = ((a2 - 93) ^ v6) * (a2 - 76);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((STACK[0x2D0] == 0) * ((v2 + v7) & a1 ^ (v5 - 66))) ^ v2)) - 8))();
}

uint64_t sub_10007A014@<X0>(unint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  uint64_t v3;

  STACK[0x600] = a1;
  STACK[0x5F8] = v1;
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 - 1074067438)))();
}

uint64_t sub_10007A034()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_100DD0758();
  LODWORD(STACK[0x660]) = 2134650450;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * (v0 - 1074073447)) - 12))(v2);
}

uint64_t sub_10007A08C()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x664]) = STACK[0x660];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 1074081425)) - 8))();
}

uint64_t sub_10007A0B4()
{
  LODWORD(STACK[0x9A4]) = STACK[0x664];
  return ((uint64_t (*)(void))STACK[0x2D8])();
}

uint64_t sub_10007A0C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  _BOOL4 v6;

  v6 = LODWORD(STACK[0x7F8]) == a4 + 1060556812;
  LODWORD(STACK[0x4AC]) = STACK[0x7F8];
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((40490 * v6) ^ (v4 + a4 + 2291))) - 8))();
}

uint64_t sub_10007A118(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;

  v4 = STACK[0xB80];
  STACK[0x1098] = STACK[0xA78];
  STACK[0xF28] = *(_QWORD *)(v3 + 8 * v2) + (((v2 + 138) | 0x10A1u) ^ 0xFFFFFFFFFFFFE005);
  STACK[0xF30] = v4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8 * (v2 ^ 0x4F27)))(a1, a2, 0x62CEDBD4AFA12ECELL);
}

uint64_t sub_10007A214@<X0>(int a1@<W7>, unint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  _BOOL4 v8;

  STACK[0x938] = a2;
  v6 = STACK[0xF30];
  STACK[0x940] = STACK[0xF30];
  STACK[0x950] = STACK[0xF28];
  LODWORD(STACK[0x7BC]) = a1;
  v8 = v6 != v3 && a2 != v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((v8 * v4) ^ v2)) - 4))();
}

uint64_t sub_10007A24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  uint64_t v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((18361 * (*(_DWORD *)(STACK[0x940] + v8) != a7)) ^ v7))
                            - ((v7 + v9) & v10)
                            + 25888))();
}

uint64_t sub_10007A284@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  uint64_t v62;
  int v63;
  uint64_t v64;
  int v65;

  v65 = *(_DWORD *)(STACK[0x938] + v62);
  LODWORD(STACK[0x9B8]) = v65;
  return (*(uint64_t (**)(void))(v64 + 8 * ((30 * (v65 == v63 + ((a1 + 1074067746) ^ a62) + 3388)) ^ a1)))();
}

uint64_t sub_10007A2CC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  uint64_t v4;

  STACK[0x958] = STACK[0x940] - 0x3C3B3BEE39C42695;
  STACK[0x970] = STACK[0x938] - 0x3C3B3BEE39C42761;
  STACK[0xF38] = a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * v3) - 1001 * (v3 ^ 0x1B9Cu) + 13001))();
}

uint64_t sub_10007A344@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((*(unsigned __int8 *)(a1
                                                           + ((v2 + 238849320) & 0xF1C36DF3 ^ 0x9D31242B505EFCC3)
                                                           + v3) == *(unsigned __int8 *)(v1
                                                                                       + ((v2 + 238849320) & 0xF1C36DF3 ^ 0x9D31242B505EFCC3)
                                                                                       + v3))
                                     * (((v2 + v5) & 0xA0699FF5) - 7021)) ^ v2)))();
}

uint64_t sub_10007A3B4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((24851 * (v0 != 91)) ^ v1)) - 12))();
}

uint64_t sub_10007A3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((a3 + 199 == v3) ^ (v4 + 65)) & 1 | v4)) - 12))();
}

uint64_t sub_10007A424()
{
  unint64_t v0;
  char v1;
  char v2;
  unsigned int v3;
  unint64_t v4;
  uint64_t v5;

  STACK[0xF38] = v4;
  STACK[0x980] = v0;
  LOBYTE(STACK[0x546]) = v1;
  LOBYTE(STACK[0x547]) = v2;
  LODWORD(STACK[0x6B4]) = -409760367;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (int)v3) - (v3 ^ 0x2DF5)))();
}

uint64_t sub_10007A45C()
{
  unint64_t v0;
  char v1;
  char v2;
  int v3;
  uint64_t v4;
  int v5;

  STACK[0xF38] = v0;
  STACK[0x980] = v0;
  LOBYTE(STACK[0x546]) = v1;
  LOBYTE(STACK[0x547]) = v2;
  v5 = (char)(v1 - 91) - (char)(v2 - 91);
  LODWORD(STACK[0x6B4]) = (v5 ^ 0xF79B8F91) - 268960279 + ((2 * v5) & 0xEF371F22) + 23;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * v3) - (((v3 - 10478) | 0x3048u) ^ 0x354FLL)))();
}

uint64_t sub_10007A4D0@<X0>(int a1@<W8>)
{
  uint64_t v1;

  LODWORD(STACK[0x9BC]) = STACK[0x6B4];
  STACK[0x978] = STACK[0x940] - 0x3C3B3BEE39C42319;
  STACK[0x988] = STACK[0x938] - 0x3C3B3BEE39C42305;
  STACK[0xF40] = 0xEBC377DD48F9A86;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * a1) - ((a1 + 930920624) & 0xDACBDFE6) + 306761178))();
}

uint64_t sub_10007A584()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;

  v11 = (v0 + v10);
  v12 = (*(unsigned __int8 *)(v2 + v11 + v1) ^ v9)
      + (*(unsigned __int8 *)(v3 + v11 + v1) ^ 0xFB6FCF37)
      + ((1949 * (v0 ^ 0x1248CDE5) + v6) & (2 * (*(unsigned __int8 *)(v3 + v11 + v1) ^ 8)))
      - ((2 * *(unsigned __int8 *)(v2 + v11 + v1)) & 0xFFCF)
      + v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (v0 ^ (v5 + 11) ^ ((((v12 - v0) | (v0 - v12)) >= 0) * v8))) - 8))();
}

uint64_t sub_10007A614()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((29 * (v0 + 1 == (v1 ^ v2 ^ ((v1 - 4163) | 0x45u) ^ 0xEBC377DC6C77235))) ^ v1))
                            - 8))();
}

uint64_t sub_10007A664@<X0>(int a1@<W7>, int a2@<W8>)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  STACK[0xF40] = v2;
  STACK[0x998] = v3;
  LODWORD(STACK[0x9C0]) = v4;
  LODWORD(STACK[0x9C4]) = ((v4 - 306761186) | (LODWORD(STACK[0x9BC]) + 409760367))
                        + 1395678381
                        - ((2 * ((v4 - 306761186) | (LODWORD(STACK[0x9BC]) + 409760367))) & 0xA660B95A);
  v6 = STACK[0x938];
  STACK[0x990] = STACK[0x938] - 0x3C3B3BEE39C422F1;
  LODWORD(STACK[0x9C8]) = *(_DWORD *)(v6 - 0x3C3B3BEE39C421EDLL);
  STACK[0x9A8] = v6 - 0x3C3B3BEE39C421E9;
  STACK[0x9B0] = (unint64_t)&STACK[0x1890] + STACK[0x2A0];
  STACK[0xA40] = STACK[0x10C8] + (((a2 + 24243) | 0x201u) ^ 0x8691);
  v7 = STACK[0x940];
  STACK[0x9E0] = STACK[0x940] + 0x25B01C8FA5476536;
  STACK[0x9E8] = v7 + 0x25B01C8FA5476646;
  LODWORD(STACK[0x7B8]) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * a2) - 4))();
}

uint64_t sub_10007A780()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((v1 < 660481380) ^ v0) & 1 | ((((v1 < 660481380) ^ v0) & 1) << 6)) ^ v0))
                            - ((v0 - 971429378) & 0x39E67BD7)
                            + 11219))();
}

uint64_t sub_10007A7F4@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((27492 * (v1 == ((a1 + 1851421730) & 0x91A57FFF ^ 0x275E3A9D))) ^ a1))
                            - 12))();
}

uint64_t sub_10007A838()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((27492 * (v1 == (((v0 ^ 0xADD6) + 831894562) & 0xCE6A3FFF) + 660473191)) ^ v0 ^ 0xADD6))
                            - 12))();
}

uint64_t sub_10007A884@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((48481 * (((a1 + 34) ^ (STACK[0x940] == v1)) & 1)) ^ a1))
                            - 12))();
}

uint64_t sub_10007A8B4@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((32738
                                          * (*(_DWORD *)(STACK[0x940] - 0x3C3B3BEE39C425A5) == ((a1 - 281643994) & 0x10C97FFB)
                                                                                               + 1286206523)) ^ a1))
                            - 12))();
}

uint64_t sub_10007A91C()
{
  unsigned int v0;
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(STACK[0x940] - 0x3C3B3BEE39C4256DLL);
  LODWORD(STACK[0x9CC]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((24420
                                               * ((((v2 - 440910328) ^ (((v0 - 2147475462) ^ 0xFFFFCBD1)
                                                                      + v0
                                                                      - 2147472424))
                                                 + (unint64_t)v0) >> 32)) ^ (v0 - 2147472424)))
                            - 12))();
}

uint64_t sub_10007A990@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;

  v3 = ((a1 ^ 0x46D9) - 19733) ^ (4 * LODWORD(STACK[0x9CC])
                                - ((8 * LODWORD(STACK[0x9CC]) + 767684680) & 0x52F98240)
                                + 1079884103) ^ 0xA97CDEDA;
  LODWORD(STACK[0x9D8]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((48022 * (v3 == LODWORD(STACK[0x9B8]) + v2)) ^ a1)) - 12))();
}

uint64_t sub_10007AA0C()
{
  unsigned int v0;
  uint64_t v1;

  STACK[0xF48] = 0;
  LOBYTE(STACK[0xF57]) = 0;
  LODWORD(STACK[0x6C4]) = 1065990108;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)v0) - (v0 ^ 0x6D02)))();
}

uint64_t sub_10007AA40()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((488 * (v0 < ((v1 - 1853528835) & 0x6E7A6FAF ^ 0x275E4ACD))) ^ v1))
                            - ((v1 - 11091) ^ 0x6FA1)))();
}

uint64_t sub_10007AA94@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 ^ (58717 * (v1 == 660481376))))
                            + 2134650446
                            - (a1 + 2134621865)))();
}

uint64_t sub_10007AAD8@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;

  STACK[0xF48] = (unint64_t)*(&off_10112C750 + (a1 ^ 0x6DC8)) - 845534739;
  LOBYTE(STACK[0xF57]) = 1;
  LODWORD(STACK[0x6C4]) = 1065990126;
  return ((uint64_t (*)(void))(2134650446 - ((a1 - 12824758) & 0x7FFF6F5E) + *(_QWORD *)(v1 + 8 * a1)))();
}

uint64_t sub_10007AB48()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((58839 * (v1 == (v0 ^ 0x7F3C41FB) - 1474169070)) ^ v0)) - 4))();
}

uint64_t sub_10007AB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,unint64_t a58)
{
  int v58;
  uint64_t v59;

  STACK[0xF48] = a58;
  LOBYTE(STACK[0xF57]) = 1;
  LODWORD(STACK[0x6C4]) = 1065990123;
  return ((uint64_t (*)(void))(*(_QWORD *)(v59 + 8 * v58) - ((v58 - 8614103) & 0x7FBF2F7F ^ 0x7F3C2E56)))();
}

uint64_t sub_10007ABD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,void (*a60)(uint64_t),uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a68;
  int v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  int v72;
  unint64_t v73;
  int v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  int v78;
  int v79;
  unsigned int v80;
  int v82;

  v71 = (2 * (v68 ^ a68)) ^ 0xB5;
  LODWORD(STACK[0x9DC]) = STACK[0x6C4];
  LOBYTE(STACK[0x843]) = STACK[0xF57];
  STACK[0xA18] = STACK[0xF48];
  v72 = STACK[0x9B8];
  v73 = STACK[0xF68];
  v74 = v68;
  v82 = v68;
  v75 = STACK[0x9B0];
  v76 = STACK[0x9E0];
  v77 = STACK[0x9E8];
  v78 = 967721411 * ((v70 - 168) ^ 0xA63D912F);
  *(_QWORD *)(v70 - 160) = STACK[0x990];
  *(_QWORD *)(v70 - 152) = v75;
  *(_DWORD *)(v70 - 116) = v78 + v72 - 1273789977;
  *(_DWORD *)(v70 - 168) = v78 + v74 - 2134614077;
  *(_QWORD *)(v70 - 136) = v77;
  *(_QWORD *)(v70 - 128) = 0;
  *(_QWORD *)(v70 - 144) = v76;
  *(_QWORD *)(v70 - 112) = v73;
  *(_QWORD *)(v70 - 104) = 0;
  a60(v70 - 168);
  v79 = *(_DWORD *)(v70 - 120);
  v80 = ((v79 - v82) | (v82 - v79)) >> (v71 + 38);
  LODWORD(STACK[0x7B8]) = v79;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v69
                                                      + 8
                                                      * (v82 ^ 0x7F3C0585 ^ ((16 * ((v80 & 1) == 0)) & 0xDF | (32 * ((v80 & 1) == 0)))))
                                          - 12))(1395678381);
}

uint64_t sub_10007AD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  uint64_t v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;

  v66 = *(unsigned __int8 *)(STACK[0x9B0] + 1) ^ 9 | *(unsigned __int8 *)STACK[0x9B0] ^ 8;
  v67 = (v66 - ((v66 << ((a65 ^ 0x20) - 107)) & 0x5C) - 82) ^ 0xAE;
  v68 = v67 - ((2 * v67) & 0x118) - 2036528500;
  LODWORD(STACK[0x9F4]) = v68;
  v69 = ((LODWORD(STACK[0x9DC])
        + LODWORD(STACK[0x9C8])
        - ((2 * (LODWORD(STACK[0x9DC]) + LODWORD(STACK[0x9C8])) + 305153448) & 0x118818FE)
        + 568078163) ^ 0x773BF380)
      + LODWORD(STACK[0x9D8]);
  v70 = (v69 ^ 0x7BFAF6FF) + ((2 * v69) & 0xF7F5EDFE);
  LODWORD(STACK[0x9FC]) = v70 - 1944326848;
  LOBYTE(STACK[0x907]) = v70 - 1944326848 < 0x816E43F;
  LODWORD(STACK[0x6E4]) = 715991297;
  LODWORD(STACK[0x6E8]) = v68;
  return ((uint64_t (*)(void))(*(_QWORD *)(v65 + 8 * (a65 ^ (2 * (v70 - 2080044802 > 0xFFFFFFFC)))) - 4))();
}

uint64_t sub_10007AE74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  int v5;
  uint64_t v6;

  LODWORD(STACK[0x6D0]) = STACK[0x9F4];
  LODWORD(STACK[0x6D4]) = a5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8 * v5))(a1, a2, a3, a4, 221910296, 3714693953);
}

uint64_t sub_10007AEBC@<X0>(int a1@<W5>, int a2@<W8>)
{
  int v2;
  _BOOL4 v3;
  unsigned int v4;
  uint64_t v5;
  _BOOL4 v6;

  v6 = a2 + a1 < v4;
  if (v3 != (a2 + a1) < 0x816E43F)
    v6 = v3;
  return (*(uint64_t (**)(void))(v5 + 8 * (((4 * !v6) | (16 * !v6)) ^ v2)))();
}

uint64_t sub_10007AF40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;

  LODWORD(STACK[0x6D4]) = a5;
  LODWORD(STACK[0x6D0]) = v6;
  LODWORD(STACK[0x6E4]) = a5;
  LODWORD(STACK[0x6E8]) = v6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * (v5 + 6370))
                                                                                       - (v5 - 13117)
                                                                                       + 16683))(a1, a2, a3, a4, 4028461553, 2376475518);
}

uint64_t sub_10007AF9C()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  int v5;

  v2 = STACK[0x6E8];
  v3 = STACK[0x6E4];
  LODWORD(STACK[0xA00]) = STACK[0x6E4];
  v4 = (((-57 * (v0 ^ 0x21)) ^ 0xEA ^ *(_BYTE *)(STACK[0x9B0] + (v3 - 715991295)))
      - ((2 * ((1735 * (v0 ^ 0x4121)) ^ 0xEA ^ *(unsigned __int8 *)(STACK[0x9B0] + (v3 - 715991295)))) & 0x26)
      - 552988397) ^ 0xDF0A1113 | v2 ^ 0x869D0A8C;
  v5 = v4 - ((v4 << (((v0 + 52) & 0xDC) - 63)) & 0x5222CA32) - 1458477799;
  LODWORD(STACK[0xA04]) = v5;
  LODWORD(STACK[0xA08]) = ++v3;
  LODWORD(STACK[0x6EC]) = v5;
  LODWORD(STACK[0x6FC]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ (16 * ((STACK[0x843] & 1) == 0)))) - 12))();
}

uint64_t sub_10007B078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;

  v6 = ((v4 + 361594878) & 0x6A727FD9 ^ 0xC076393B) + LODWORD(STACK[0x9DC]);
  if (v6 >= 0x30F8A833)
    v6 = 821602355;
  STACK[0x9D0] = v6 + 1468804595;
  STACK[0xF58] = 1468804594;
  LODWORD(STACK[0x73C]) = STACK[0xA08];
  LODWORD(STACK[0x748]) = STACK[0xA04];
  LODWORD(STACK[0x74C]) = STACK[0xA00];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * v4)
                                                                                       - 12))(a1, a2, a3, a4, 3578976001, 2836489497);
}

uint64_t sub_10007B130@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v1 != v2) * v4) ^ a1)) - 12))();
}

uint64_t sub_10007B1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  unint64_t v7;
  uint64_t v8;

  LODWORD(STACK[0x74C]) = v6 - 1;
  LODWORD(STACK[0x748]) = v4;
  LODWORD(STACK[0x73C]) = v6;
  STACK[0xF58] = v7;
  LODWORD(STACK[0x6EC]) = v4;
  LODWORD(STACK[0x6FC]) = v6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * v5)
                                                                                       - ((v5 - 1203454537) & 0x47BB5FEB ^ 0x5EEELL)))(a1, a2, a3, a4, 4028461553, 2376475518);
}

uint64_t sub_10007B230()
{
  int v0;
  uint64_t v1;
  int v2;
  unsigned int v3;

  LODWORD(STACK[0xA0C]) = STACK[0x6FC];
  v2 = STACK[0x6EC];
  LODWORD(STACK[0xA10]) = STACK[0x6EC];
  v3 = LODWORD(STACK[0x9C8]) - 100995044;
  LODWORD(STACK[0xA14]) = v3;
  LOBYTE(STACK[0x9FB]) = v3 < 0x2159156C;
  LODWORD(STACK[0x7B4]) = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v3 == (((v0 ^ 0x155A) - 8161) ^ 0x21593EBB)) ^ v0)))();
}

uint64_t sub_10007B29C@<X0>(int a1@<W8>)
{
  uint64_t v1;

  LODWORD(STACK[0x750]) = STACK[0xA10];
  LODWORD(STACK[0x754]) = 1649185895;
  LODWORD(STACK[0x794]) = STACK[0xA0C];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * a1) - 8))();
}

uint64_t sub_10007B2E0@<X0>(int a1@<W8>)
{
  _BOOL4 v1;
  unsigned int v2;
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = v3 - 1089699578 < v2;
  if (v1 != (v3 - 1089699578) < 0x2159156C)
    v5 = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((9327 * !v5) ^ a1)) - 8))();
}

uint64_t sub_10007B3A4()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  LODWORD(STACK[0x794]) = v1;
  LODWORD(STACK[0x754]) = v3;
  LODWORD(STACK[0x750]) = v0;
  LODWORD(STACK[0x7B4]) = v0;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * v2))(1395678381);
}

uint64_t sub_10007B3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;

  v10 = v8 ^ 0x342E ^ (((SLODWORD(STACK[0x7B4]) >> 4) ^ 0xFA911651)
                     + 1435029348
                     - ((2 * ((SLODWORD(STACK[0x7B4]) >> 4) ^ 0xFA911651)) & 0xAB11A13A)
                     + 313) ^ 0x5588CF64 | LODWORD(STACK[0x7B4]) ^ 0xA9116519;
  v11 = ((((int)(v10 - ((2 * v10) & 0x8C782A3E) + 1178342687) >> 2) ^ 0x118F0547) + 1257998986) ^ 0x4AFB8A8A | (v10 - ((2 * v10) & 0x8C782A3E) + 1178342687) ^ 0x463C151F;
  v12 = (1062117065 - (v11 | ((1 - v11) >> 1) | 0xFFFFFFFE)) ^ 0x3E6F8EE3;
  if (((2 * v12) & 0x420002) - v12 != -14618664)
    a7 = a8 + 2;
  LODWORD(STACK[0x7B8]) = a7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * v8) - 12))();
}

uint64_t sub_10007B4F4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  signed int v12;
  unsigned int v13;
  unsigned int v14;

  v11 = STACK[0x7B8];
  STACK[0xA40] = STACK[0x2A0];
  v12 = (LODWORD(STACK[0x9C4]) ^ a1 | (v11 + v10))
      + a5
      - ((2 * (LODWORD(STACK[0x9C4]) ^ a1 | (v11 + v10))) & 0xE03AE3E2);
  v13 = (((v9 - 893927467) & 0x754D7E77 ^ (v12 >> 4) ^ 0xBF048959)
       + 921040358
       - ((2 * ((v9 - 893927467) & 0x754D7E77 ^ (v12 >> 4) ^ 0xBF048959)) & 0x6DCBEBCC)) ^ 0x36E5F5E6 | v12 ^ a5;
  v14 = ((((int)(v13 + 1835077386 - ((2 * v13) & 0xDAC21E14)) >> 2) ^ 0x1B5843C2)
       + a6
       - 2
       * ((((int)(v13 + 1835077386 - ((2 * v13) & 0xDAC21E14)) >> 2) ^ 0x1B5843C2) & 0xDA6237F ^ ((int)(v13 + 1835077386 - ((2 * v13) & 0xDAC21E14)) >> 2) & 1)) ^ a6 | (v13 + 1835077386 - ((2 * v13) & 0xDAC21E14)) ^ 0x6D610F0A;
  if (((v14 | ((1 - v14) >> 1)) & 1) != 0)
    a7 = a8 + 2;
  LODWORD(STACK[0x7BC]) = a7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * v9) - 4))();
}

uint64_t sub_10007B600()
{
  int v0;

  v0 = STACK[0x7BC];
  LODWORD(STACK[0xA24]) = STACK[0x7BC];
  LODWORD(STACK[0x4AC]) = v0;
  return ((uint64_t (*)(void))STACK[0x950])();
}

uint64_t sub_10007B618(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  _BOOL4 v9;

  v9 = LODWORD(STACK[0xA24]) == a7;
  LODWORD(STACK[0x4AC]) = STACK[0xA24];
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((v9 * (v8 + 19341)) ^ (a4 - 1074089972))) - 8))();
}

uint64_t sub_10007B658()
{
  uint64_t v0;
  uint64_t v1;

  STACK[0xF28] = ((v1 + 4519) ^ 0xFFFFFFFFFFFFE001) + *(_QWORD *)(v0 + 8 * v1);
  STACK[0xF30] = STACK[0x1098];
  return (*(uint64_t (**)(void))(v0 + 8 * (v1 + 13207)))();
}

uint64_t sub_10007B68C()
{
  uint64_t v0;
  int v1;

  LODWORD(STACK[0x440]) = STACK[0x82C];
  return (*(uint64_t (**)(void))(v0 + 8 * (v1 - 1074085149)))();
}

uint64_t sub_10007B6AC()
{
  uint64_t v0;
  int v1;

  LODWORD(STACK[0x444]) = STACK[0x440];
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v1 - 1074085578)) - 12))();
}

uint64_t sub_10007B6D0()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((v1 - 376287194) ^ 0x2997A816 ^ (21705 * (v1 != 170221461))))
                            - 12))();
}

uint64_t sub_10007B714()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0xB80] - 0x3C3B3BEE39C42781;
  STACK[0xA98] = (((v0 + 1074010152) | 0x14242u) ^ 0xFFFFFFFFBFFAA1BALL) + *(_QWORD *)(v1 + 8 * v0);
  STACK[0xD18] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 + 12606)))();
}

uint64_t sub_10007B77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int a67;
  uint64_t v67;
  int v68;

  v68 = STACK[0x4A0];
  STACK[0xBC8] = STACK[0xC98];
  LODWORD(STACK[0x4AC]) = v68;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(1074093646 - ((a47 - 2128) | 0x40055844u) + *(_QWORD *)(v67 + 8 * a47) - 16))(a1, a2, a3, a67, a5, a6, a7, 2134608427);
}

uint64_t sub_10007B7CC@<X0>(int a1@<W8>)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v4 = a1 - 2879;
  v5 = (a1 + 15127) | 0x40050206;
  v6 = *(_QWORD *)STACK[0x730];
  v7 = LODWORD(STACK[0x350]) + 250532126 - ((2 * LODWORD(STACK[0x350]) + 1384582126) & 0x4B56964E);
  v8 = *(_QWORD *)(v2 + 8 * v4) - 4;
  v9 = 210615973
     * ((2 * ((v3 - 168) & 0x5E4559C71C0B3E58) - (v3 - 168) - 0x5E4559C71C0B3E5BLL) ^ 0xEE7943D64A1B08BALL);
  *(_DWORD *)(v3 - 144) = (v4 - 153633425) ^ v9;
  *(_QWORD *)(v3 - 168) = v6;
  *(_DWORD *)(v3 - 160) = v7 ^ v9;
  *(_QWORD *)(v3 - 152) = v8 ^ v9;
  v10 = v1(v3 - 168);
  LODWORD(STACK[0x440]) = 2134608442;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 - 1074092263 + v5 + 1504)))(v10);
}

uint64_t sub_10007B8D4()
{
  int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;

  v3 = STACK[0xA78];
  STACK[0x200] = STACK[0xA78];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((50 * (v3 == 0x3C3B3BEE39C42781)) ^ (v2 - 1074058737)))
                            - ((v0 + v2 - 370) ^ 0x3E9)))();
}

uint64_t sub_10007B92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;
  unint64_t v8;

  v8 = STACK[0x200] - 0x3C3B3BEE39C42781;
  STACK[0xA98] = *(_QWORD *)(v7 + 8 * v5);
  STACK[0xD18] = v8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8
                                                                                         * (v6
                                                                                          + v5
                                                                                          + ((v5 + 82969) | 0x40041640)
                                                                                          - 1880)))(a1, a2, a3, a4, a5, 1074093637);
}

uint64_t sub_10007B988@<X0>(int a1@<W8>)
{
  uint64_t v1;

  STACK[0x308] = STACK[0xD18];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 - 1074084378)) - 8))();
}

uint64_t sub_10007B9F0()
{
  int v0;
  uint64_t v1;

  __clrex();
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - 8))();
}

uint64_t sub_10007BAA8@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v4 = STACK[0x308];
  v5 = STACK[0x308] - 24;
  STACK[0x310] = v5;
  STACK[0xAA0] = v5;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v4 == 0) ^ a1) & 1) * (v2 + ((v1 + 1167403343) & 0xFA6FDEE6) - 1254)) ^ v1)))();
}

uint64_t sub_10007BAF8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;

  v3 = a1 | 0xAECE8F4A;
  v4 = (unint64_t *)(STACK[0x308] - 16);
  v5 = *v4;
  v6 = STACK[0x308] + 0x4419796044B4DC22;
  STACK[0x330] = v6;
  STACK[0xB20] = v6;
  STACK[0x2C0] = v5;
  STACK[0x338] = (unint64_t)v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((((v3 | (v3 << 32)) & ((v5 + 0x358C01A5B82F50F6) ^ (v3 | (v3 << 32))) | ((v3 | (v3 << 32)) - (v5 + 0x358C01A5B82F50F6)) & ~((v5 + 0x358C01A5B82F50F6) ^ (v3 | (v3 << 32)))) >> 63)
                                               * ((v3 ^ (v1 - 1376)) - 1074065341)) ^ v3 & 0x2694))
                            - 12))();
}

uint64_t sub_10007BCA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  STACK[0xD28] = v5;
  STACK[0xD20] = v4;
  STACK[0xB68] = v4;
  v9 = *(_QWORD *)STACK[0x338];
  STACK[0x2D0] = v9;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                 + 8
                                                                                 * (int)((13656
                                                                                        * ((((v9
                                                                                            - (v3 | ((unint64_t)(v3 + 44257128) << 32))) | ((v3 | ((unint64_t)(v3 + 44257128) << 32)) - v9)) >> ((v3 + 100) & 0xEF ^ (v6 + 43))) & 1)) ^ (((23 * (v3 ^ 0x47D0AA73)) ^ 0xB82FF12E) + v3)))
                                                                     - 8))(a1, a2, a3, v8);
}

uint64_t sub_10007BE68()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = (v0 - 33914);
  v3 = ((2 * (_QWORD)&STACK[0xB10]) & 0xF61BBFE77BDEF1A0)
     + ((unint64_t)&STACK[0xB10] ^ 0xFB0DDFF3BDEF78D7)
     + (v2 ^ 0x77FAFEFFEABDBFAELL);
  STACK[0xD30] = 1;
  STACK[0xD38] = v3;
  return (*(uint64_t (**)(uint64_t, _QWORD, unint64_t))(v1 + 8 * v0))(4043, v2 ^ 0x847A, 2 * v3 + 0x19EE4218AEA58EF6);
}

uint64_t sub_10007BF24@<X0>(int a1@<W0>, int a2@<W1>, char a3@<W2>, char a4@<W5>, char a5@<W8>)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;

  v14 = v9 - 1;
  STACK[0xB10] = v14;
  *(_BYTE *)(v6 + v14) = ((((v5 ^ (a4 + 1) ^ (v12 - 82) ^ v7) + a5 - (a3 & v8)) ^ a5) * (v7 + 17)
                        - (v10 & (2 * (((v5 ^ (a4 + 1) ^ (v12 - 82) ^ v7) + a5 - (a3 & v8)) ^ a5) * (v7 + 17)))
                        - 82) ^ v11;
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * (a2 ^ (((((STACK[0xB10] - v5) | (v5 - STACK[0xB10])) & 0x8000000000000000) == 0) * a1))))();
}

uint64_t sub_10007BFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  STACK[0xD38] = v3;
  STACK[0xD30] = v5;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * (v4 - 1074075803)) - 8))(a1, a2, a3, v7);
}

uint64_t sub_10007C178@<X0>(char a1@<W1>, char a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, unint64_t a6@<X8>)
{
  uint64_t v6;
  int v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _BOOL4 v17;

  v15 = a3 + a4 + 11;
  STACK[0xB60] = v15;
  v16 = ((((v10 + v8 - 17) ^ a1) + v9 - (a2 & (2 * ((v10 + v8 - 17) ^ a1)))) ^ v9) * (v10 + v8);
  *(_BYTE *)(v11 + v15) = (v16 - ((2 * v16) & 0xF8) - 4) ^ 0xFC;
  v17 = STACK[0xB60] + v6 > v13;
  if (v12 != STACK[0xB60] > a6)
    v17 = STACK[0xB60] > a6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((!v17 * a5) ^ v7)) - 12))();
}

uint64_t sub_10007C798@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v4 = STACK[0xD68];
  STACK[0x508] = STACK[0xD68];
  STACK[0x518] = STACK[0xD60];
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((34697 * (*(_QWORD *)(v4 + 8) + 0x358C01A5B82F50F6 >= 0)) ^ a1))
                            - ((v1 - 1828) ^ (unint64_t)(v2 - 4))))();
}

uint64_t sub_10007C7F8@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)STACK[0x508] = *(_QWORD *)(STACK[0x518] - 0x4419796044B4DC32);
  v5 = *(_QWORD *)(STACK[0xB20] - 0x4419796044B4DC32);
  v6 = v5 + (((a1 + 1073732018) | 0x55E00u) ^ 0xB58C01A5F82A0EB0);
  v4 = *((unsigned __int8 *)&STACK[0x2E8] + (STACK[0x2E8] & 3 ^ 2));
  LODWORD(v6) = ((v4 ^ 0x6FFEEE29) + 2 * (v4 ^ 0xD6u) - 1878978303)
              % ((102 * (a1 ^ v1) + (v6 / 4) - ((2 * (v6 / 4)) & 0x3FF46E5A) - 1611013859) ^ 0x9FFA372D);
  LODWORD(v6) = (((unsigned __int16)v6 ^ 0xE8) + ((2 * (_WORD)v6) & 0x1D2) + 322) & 0x1FC;
  LODWORD(STACK[0x804]) = v6;
  LODWORD(v6) = ((v5 - 1204858634) ^ 0x7E7FF96) + ((2 * (v5 - 1204858634)) & 0xFCFFF2C) - v6 - 36052457;
  LODWORD(STACK[0x818]) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((27766 * ((v6 + v2) < 0x7FFFFFFF)) ^ a1)) - 12))();
}

uint64_t sub_10007CB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  _DWORD *v8;
  uint64_t (*v9)(void);

  *v8 = 23958;
  v9 = (uint64_t (*)(void))STACK[0xA98];
  LODWORD(STACK[0x4B0]) = a8 - 5;
  return v9();
}

uint64_t sub_10007D304()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  LODWORD(STACK[0x7E8]) = v0;
  v3 = LODWORD(STACK[0x7E4]) + 16;
  STACK[0xCB8] = 2079516225;
  LODWORD(STACK[0x4E0]) = v0;
  LODWORD(STACK[0x4E4]) = v3;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v2 + 8 * v1))(((v1 - 20990) | 0xBC4u) ^ 0xFFFFFFFF840D0261, 264, 58454);
}

uint64_t sub_10007D370(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * a3) ^ v3)))();
}

uint64_t sub_10007D3C4@<X0>(int a1@<W5>, int a2@<W6>, int a3@<W8>)
{
  int v3;
  uint64_t v4;

  LODWORD(STACK[0x7F0]) = v3;
  if (v3 != ((a3 + 1074086504) ^ 0x903DAB18))
    a1 = a2 + 2;
  LODWORD(STACK[0x4E8]) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * a3) - 4))();
}

void sub_10007D48C(uint64_t a1)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v2 = (*(_QWORD *)(a1 + 8) ^ 0xFFFBD9F8EDFFFEBFLL)
     + 0x42607F3F4053FLL
     + ((2 * *(_QWORD *)(a1 + 8)) & 0xFFF7B3F1DBFFFD7ELL);
  v3 = (*(_QWORD *)(a1 + 16) ^ 0x25FFBDEAB776FFA7)
     - 0x25FFBDE9D582FBA9
     + ((2 * *(_QWORD *)(a1 + 16)) & 0x4BFF7BD56EEDFF4ELL);
  v4 = v2 < 0xE1F403FE;
  v5 = v2 > v3;
  if (v4 != v3 < 0xE1F403FE)
    v5 = v4;
  v1 = *(_DWORD *)a1 ^ (842727511 * (((a1 | 0x7BB921D6) - (a1 & 0x7BB921D6)) ^ 0x4CBB468B));
  __asm { BR              X14 }
}

uint64_t sub_10007D698(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((44
                                          * ((a1 & 0xEEF76DFC ^ 0x2A206DF4)
                                           + (v2 ^ 0xEA6F8005)
                                           + (((v1 - 33291) | 0x5038) ^ 0x5FEF539C ^ (83 * (v1 ^ 0x8B79))) != 1466639920)) ^ (v1 + 5503)))
                            - 12))();
}

uint64_t sub_10007D724(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((13911
                                          * (((a5 - 2) ^ (a1
                                                                         + v5
                                                                         + (((a5 - 20531) | 0x8206) ^ 0x884C34Cu) < 8)) & 1)) ^ a5))
                            - 12))();
}

uint64_t sub_10007D784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((219
                                          * (a8 + 142887153 >= ((((a5 + 1942894292) & 0x8C31FAFE) - 21309) ^ 0xFFFFC8E1))) ^ (a5 + 16125)))
                            - 4))();
}

uint64_t sub_10007D7E4(int a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v17;
  unint64_t v18;
  int v20;

  v12 = (a5 + a1 + v9 + 16);
  v13 = v8 - (v12 + v10);
  v14 = 2 - (v12 + v10);
  v15 = ((14 * (a4 ^ 0x3EF0)) ^ 0x8A41) & v12;
  v17 = (unint64_t)(v5 - v10) >= 0x10 && (unint64_t)(v13 + v15) >= 0x10 && v14 + (v15 | v6) >= 0x10;
  v18 = v14 + (v15 | v7);
  v20 = !v17 || v18 < 0x10;
  return (*(uint64_t (**)(void))(v11 + 8 * ((v20 | (8 * v20)) ^ a4)))();
}

uint64_t sub_10007D860@<X0>(int a1@<W6>, unsigned int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((98 * (a2 < (((a1 ^ 0xDAF9) + 14729) | 0xEu) - 35390)) ^ a1 ^ 0xDAF9))
                            - (((a1 ^ 0xDAF9) + 1762561604) & 0x96F167FC ^ 0x46F4)))();
}

uint64_t sub_10007D8C0(__n128 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  __n128 v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;

  v8.n128_u64[0] = (a4 + 54 + (a7 ^ 0x2F)) & 0xF;
  v8.n128_u64[1] = (a4 + 12) & 0xF;
  v9.n128_u64[0] = (a4 + 11) & 0xF;
  v9.n128_u64[1] = (a4 + 10) & 0xF;
  v10.n128_u64[0] = (a4 + 9) & 0xF;
  v10.n128_u64[1] = (a4 + 8) & 0xF;
  v11.n128_u64[0] = 0x6B6B6B6B6B6B6B6BLL;
  v11.n128_u64[1] = 0x6B6B6B6B6B6B6B6BLL;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v7 + 8 * a7) - 12))(a1, v8, v9, v10, (__n128)xmmword_100DF7480, v11);
}

uint64_t sub_10007D9C0(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  int v19;
  int v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v26;
  int8x16_t v28;
  int8x16_t v29;

  v26 = v18 & 0xF;
  v28.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v28.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v22, a5).u64[0];
  v29 = vrev64q_s8(vmulq_s8(v28, a6));
  *(int8x16_t *)(v17 + v18) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v16 + v26 - 15), *(int8x16_t *)(a14 + v18)), veorq_s8(*(int8x16_t *)(v14 + v26 + 2 - 15), *(int8x16_t *)(v15 + v26 + 2 - 15))), vextq_s8(v29, v29, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(v21 + 8 * (((v19 != 0) * v20) ^ a10)) - 12))();
}

uint64_t sub_10007DA40@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((a2 - 2058135145) & 0x7AACEEFD) + 2350) * (a3 != a1)) ^ a2))
                            - (((a2 + 9284) | 0x1051u) ^ 0x50DDLL)))();
}

uint64_t sub_10007DA90@<X0>(int a1@<W7>, int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2222 * ((((9 * (a1 ^ 0x5F8B)) ^ 0x8A46) & a2) == 0)) ^ a1)) - 12))();
}

uint64_t sub_10007DAD0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, int a5@<W8>, __n128 a6@<Q1>)
{
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  a6.n128_u16[0] = 27499;
  a6.n128_u8[2] = 107;
  a6.n128_u8[3] = 107;
  a6.n128_u8[4] = 107;
  a6.n128_u8[5] = 107;
  a6.n128_u8[6] = 107;
  a6.n128_u8[7] = 107;
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, __int128, __n128))(v11 + 8 * (v9 - 2212)))((v8 + a2 + a1 - a4), (v8 + a2 + a1 - a4 - 14093), v6 - 7, 0, (v8 + a2 + a1 + v7 - a4), a3 - (a5 & 0xFFFFFFF8), v10 - 7, xmmword_100DF7490, a6);
}

uint64_t sub_10007DB30(char a1, char a2, uint64_t a3, int a4, int a5, int8x16_t a6, int8x8_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  int8x16x4_t v49;

  v47 = (a5 + a4);
  v49.val[0].i64[0] = ((_BYTE)a5 + (_BYTE)a4) & 0xF;
  v49.val[0].i64[1] = (a1 + (_BYTE)a4 + 14) & 0xF;
  v49.val[1].i64[0] = (a1 + (_BYTE)a4 + 13) & 0xF;
  v49.val[1].i64[1] = (a1 + (_BYTE)a4 + 12) & 0xF;
  v49.val[2].i64[0] = (a2 + (_BYTE)a4 + v43) & 0xF;
  v49.val[2].i64[1] = (a1 + (_BYTE)a4 + 10) & 0xF;
  v49.val[3].i64[0] = (a1 + (_BYTE)a4 + 9) & 0xF;
  v49.val[3].i64[1] = (a1 + (_BYTE)a4 + 8) & 0xF;
  *(int8x8_t *)(a9 + v47) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v42 + (v47 & 0xF) - 7), *(int8x8_t *)(a3 + v47)), veor_s8(*(int8x8_t *)(v40 + (v47 & 0xF) + 2 - 7), *(int8x8_t *)(v41 + (v47 & 0xF) + 2 - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v49, a6), a7)));
  return (*(uint64_t (**)(void))(a40 + 8 * (((v44 != a4) * v46) ^ v45)))();
}

uint64_t sub_10007DC04@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 11466) | 0x8000) - 9955) * (a1 == v1)) ^ v2)))();
}

uint64_t sub_10007DC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * (a7 - 21455)) - 8))(4294941482, 107, 10815);
}

uint64_t sub_10007DC68(int a1, char a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;

  v17 = a6 + a1;
  v18 = (a6 + v12);
  *(_BYTE *)(v15 + v18) = *(_BYTE *)(v10 + (v18 & 0xF)) ^ *(_BYTE *)(v7 + v18) ^ *(_BYTE *)(v8 + (v18 & 0xF) + 2) ^ *(_BYTE *)(v9 + (v18 & 0xF) + 2) ^ ((v18 & 0xF) * a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * ((((a7 ^ v13) + v17 != v11) * a3) ^ v14)) - 8))();
}

uint64_t sub_10007DCC8(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v1 ^ 0x6168FF8E) + (v2 ^ 0x64E6D9C2) + (a1 & 0xF3E5DE72 ^ v1 ^ 0x3220C63C) != -614767367) | (v1 - 28174)))
                            - 8))();
}

uint64_t sub_10007DD44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = v5 < v4;
  *(_BYTE *)(v8 + (v6 - 1745499347)) = *(_BYTE *)(v3 + ((v6 - 1745499347) & 0xFLL)) ^ *(_BYTE *)(v0 + (v6 - 1745499347)) ^ *(_BYTE *)(v1 + ((v6 - 1745499347) & 0xFLL) + 2) ^ *(_BYTE *)(v2 + ((v6 - 1745499347) & 0xFLL) + 2) ^ (107 * ((v6 + 45) & 0xF));
  if (v10 == v6 + 1934700583 < v4)
    v10 = v6 + 1934700583 < v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (v10 | v7)) - (v7 ^ 0x7895u) + 25805))();
}

uint64_t sub_10007DDD8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int8x16_t a41)
{
  uint64_t v41;
  int8x16_t v42;
  int8x16_t v43;
  int8x16_t v44;
  int8x16_t v45;
  int8x16_t v46;
  int8x16_t v47;
  int8x16_t v48;

  v42.i64[0] = 0x4040404040404040;
  v42.i64[1] = 0x4040404040404040;
  v43 = vrev64q_s8(vaddq_s8(*(int8x16_t *)*(_QWORD *)(a16 + 24), v42));
  v44 = vextq_s8(v43, v43, 8uLL);
  v45.i64[0] = 0xD0D0D0D0D0D0D0D0;
  v45.i64[1] = 0xD0D0D0D0D0D0D0D0;
  v46 = vandq_s8(vaddq_s8(v44, v44), v45);
  v45.i64[0] = 0x6868686868686868;
  v45.i64[1] = 0x6868686868686868;
  v47 = veorq_s8(v44, v45);
  v45.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v45.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v48 = vrev64q_s8(veorq_s8(vaddq_s8(vaddq_s8(v47, v45), v46), (int8x16_t)xmmword_100DF75B0));
  a41 = vextq_s8(v48, v48, 8uLL);
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v41
                                                                       + 8
                                                                       * (a4 ^ (64849 * (&a9 != (uint64_t *)-256))))
                                                           - 4))(a1, a2, (a4 - 3083));
}

uint64_t sub_10007DE54(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((((2 * ((a4 - 20609) | 0x2302)) ^ 0x6E84) * (v4 != v5)) | (a4 - 20609) | 0x2302))
                            - 4))();
}

uint64_t sub_10007DEA8()
{
  int v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 240) = *v1;
  *(_BYTE *)(v3 - 239) = v1[1];
  *(_BYTE *)(v3 - 238) = v1[2];
  *(_BYTE *)(v3 - 237) = v1[3];
  *(_BYTE *)(v3 - 236) = v1[4];
  *(_BYTE *)(v3 - 235) = v1[5];
  *(_BYTE *)(v3 - 234) = v1[6];
  *(_BYTE *)(v3 - 233) = v1[7];
  *(_BYTE *)(v3 - 232) = v1[8];
  *(_BYTE *)(v3 - 231) = v1[9];
  *(_BYTE *)(v3 - 230) = v1[10];
  *(_BYTE *)(v3 - 229) = v1[11];
  *(_BYTE *)(v3 - 228) = v1[12];
  *(_BYTE *)(v3 - 227) = v1[13];
  *(_BYTE *)(v3 - 226) = v1[14];
  *(_BYTE *)(v3 - 225) = v1[15];
  v4 = *((_QWORD *)v1 + 1);
  *(_QWORD *)(v3 - 256) = *(_QWORD *)v1;
  *(_QWORD *)(v3 - 248) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ 0x59D2))
                            - (((v0 ^ 0x59D2) + 910917481) & 0xC9B4ED9F)
                            + 42115))();
}

uint64_t sub_10007DF7C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (41 * (v1 == 0)))) - ((5 * (v0 ^ 0xB545u)) ^ 0x58C2)))();
}

uint64_t sub_10007DFB4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  _BOOL4 v23;

  v18 = a15 - (((v16 ^ 0x27672D4A) + 2 * a15) & 0x3FCEC79E) + 1402663133;
  v19 = (a4 + 2129627355) & (2 * v18);
  v18 ^= 0xA0909517;
  v20 = (v19 ^ 0x3ECEC590) + v18;
  v21 = v15 ^ 0xC052;
  v23 = (((_BYTE)v18 + ((v21 - 45) | 0x17) + 73) & 0xF) == 2
                                                                          * (((_BYTE)v18
                                                                            + ((v21 - 45) | 0x17)
                                                                            + 73) & 0xA ^ v18 & 2)
     && v20 != 1064826584;
  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * ((7745 * v23) ^ v21)) - 4))();
}

uint64_t sub_10007E080(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                       + 8
                                                                       * (v3 ^ (106 * (v2 == 0x3E569EC206664DDBLL))))
                                                           - ((v3 - 2120004844) & 0x7E5C7DFE)
                                                           + 11726))(a1, a2, (v3 - 3061));
}

uint64_t sub_10007E0D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  uint64_t v15;
  int v16;

  v16 = a15 - ((a9 + 79235734 + ((a3 - 1664) | 0x400)) & 0x4D82D1C) + 908043164;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15
                                        + 8
                                        * ((55328
                                          * (((2 * v16) & 0x647BD7DC ^ 0x458051C) + (v16 ^ 0x3051FD60) + 1876598016 != 572033262)) ^ a3))
                            - 4))();
}

uint64_t sub_10007E198(int a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (v2 ^ (16
                                               * ((((v2 + 13316) ^ ((a2 + a1 + 1304564754) < 8)) & 1) == 0))))
                            - ((v2 + 535635091) & 0xE012BDFE ^ 0x38D8)))();
}

uint64_t sub_10007E24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((471 * (a8 + ((a6 + 27024) ^ 0x4DC2B66Du) < 0xFFFFFFF0)) ^ a6))
                            - ((a6 - 5994974) & 0x5BCB4F)
                            + 35398))();
}

uint64_t sub_10007E2A4(int a1, int a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v20;
  int v22;
  int v24;

  v9 = (a2 + a1 + a3);
  v10 = v9 + v7 + 1;
  v11 = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3) & 0xF;
  v12 = v4 + v11 - v9;
  v13 = v11 + v4 + 1;
  v14 = v11 - v9 + 42 * (((a4 - 32676) | 0x30) ^ 0x21B3u) + v6 - 35404;
  v15 = v11 + v6 + 3;
  v16 = v11 + v5;
  v17 = v16 - v9 + 6;
  v18 = v16 + 7;
  v20 = v13 > v7 && v12 < v10;
  v22 = v15 > v7 && v14 < v10 || v20;
  if (v18 <= v7 || v17 >= v10)
    v24 = v22;
  else
    v24 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v24 ^ 1 | (2 * (v24 ^ 1))) ^ a4)) - 12))();
}

uint64_t sub_10007E34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                          + 8
                                                                                          * (v4 ^ (409 * (v5 > 0xF))))
                                                                              - ((5563
                                                                                * ((v4 + 1581206149) & 0xFFE6D7A3 ^ 0x5E264524)) ^ 0x6CAFLL)))(a1, a2, a3, a4, 1579566371);
}

uint64_t sub_10007E3B0(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, unsigned int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;

  v40.n128_u64[0] = ((_BYTE)v39 - 1) & 0xF;
  v40.n128_u64[1] = (v39 + 14) & 0xF;
  v41.n128_u64[0] = ((_BYTE)v39 + 13) & 0xF;
  v41.n128_u64[1] = ((_BYTE)v39 + 12) & 0xF;
  v42.n128_u64[0] = (((115 * (a9 ^ a6)) ^ 0xFD) + (_BYTE)v39) & 0xF;
  v42.n128_u64[1] = ((_BYTE)v39 + 10) & 0xF;
  v43.n128_u64[0] = 0xCFCFCFCFCFCFCFCFLL;
  v43.n128_u64[1] = 0xCFCFCFCFCFCFCFCFLL;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(a39
                                                                                             + 8
                                                                                             * (int)((51005 * (a9 > 0xF1E6F71D)) ^ (a9 - 1579549243)))
                                                                                 - 8))(a1, v40, v41, v42, (__n128)xmmword_100DF7480, v43);
}

uint64_t sub_10007E4F0(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, unsigned int a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v24;
  int8x16_t v26;
  int8x16_t v27;

  v24 = a14 & 0xF;
  v26.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v26.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v20, a5).u64[0];
  v27 = vrev64q_s8(vmulq_s8(v26, a6));
  *(int8x16_t *)(a12 + a14) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v14 + v24 - 15), *(int8x16_t *)(a12 + a14)), veorq_s8(*(int8x16_t *)(v24 + v16 - 13), *(int8x16_t *)(v24 + v15 - 9))), vextq_s8(v27, v27, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * (((v17 == 0) * v18) ^ a11)) - 8))();
}

uint64_t sub_10007E56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  int v37;
  int v38;
  uint64_t v39;

  return ((uint64_t (*)(void))(*(_QWORD *)(v39 + 8 * ((((v38 - 13762) ^ 0x2288) * (a37 == v37)) ^ v38))
                            - (v38 + 12692)
                            + 35402))();
}

uint64_t sub_10007E5B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  char v10;
  uint64_t v11;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v11
                                                                                         + 8
                                                                                         * ((7155
                                                                                           * ((v10 & 8) == (((a8 + 23824) | 0xA46) ^ 0x8A4E))) ^ a8))
                                                                             - 8))(a1, a2, a3, a4, (v9 - v8));
}

uint64_t sub_10007E5FC(int a1, int a2, int a3, double a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42)
{
  int v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;

  a5.n128_u16[0] = -12337;
  a5.n128_u8[2] = -49;
  a5.n128_u8[3] = -49;
  a5.n128_u8[4] = -49;
  a5.n128_u8[5] = -49;
  a5.n128_u8[6] = -49;
  a5.n128_u8[7] = -49;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, __n128, __n128, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v47 + 8 * a42) - 4))((v44 + a2 + a1 + 10), (v44 + a2 + a1 + 11), (a2 + a1 + a3), (-8 - v42), v43 - (v45 & 0xFFFFFFF8), a8, a9, v46 - 7, (__n128)xmmword_100DF7490, a5, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           (a42 - 13212));
}

uint64_t sub_10007E66C(char a1, int a2, int a3, int a4, int8x16_t a5, int8x8_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42)
{
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  int v46;
  char v47;
  char v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  int8x16x4_t v54;

  v52 = (a3 + a4 + 8);
  v54.val[0].i64[0] = v52 & v51;
  v54.val[0].i64[1] = (v45 + (_BYTE)a4 + 8) & 0xF;
  v54.val[1].i64[0] = (v50 + (_BYTE)a4 + 8) & 0xF;
  v54.val[1].i64[1] = (v49 + (_BYTE)a4 + 8) & 0xF;
  v54.val[2].i64[0] = (v48 + (_BYTE)a4 + 8) & 0xF;
  v54.val[2].i64[1] = (v47 + (_BYTE)a4 + 8) & 0xF;
  v54.val[3].i64[0] = (a2 + a4 + 8) & 0xFLL;
  v54.val[3].i64[1] = (a1 + (_BYTE)a4 + 8) & 0xF;
  *(int8x8_t *)(a10 + v52) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v42 + (v52 & v51) - 7), *(int8x8_t *)(a10 + v52)), veor_s8(*(int8x8_t *)((v52 & v51) + v44 - 5), *(int8x8_t *)((v52 & v51) + v43 - 1))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v54, a5), a6)));
  return ((uint64_t (*)(void))(*(_QWORD *)(a40 + 8 * ((30 * (v46 == a4)) ^ a42)) - 4))();
}

uint64_t sub_10007E760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36,int a37,int a38,int a39)
{
  uint64_t v39;

  return ((uint64_t (*)(void))(*(_QWORD *)(v39 + 8 * (a35 ^ (27087 * (a39 == a37))))
                            - (((a35 + 20731) | 0x48u) ^ 0x8A46)))();
}

uint64_t sub_10007E7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v7 + 8 * (a7 - 17017)) - 12))(49685);
}

uint64_t sub_10007E7CC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = (a5 + v10);
  *(_BYTE *)(v12 + v14) ^= *(_BYTE *)(v6 + (v14 & 0xF)) ^ *(_BYTE *)((v14 & 0xF) + v8 + 2) ^ *(_BYTE *)((v14 & 0xF) + v7 + 6) ^ ((v14 & 0xF) * v11);
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * (((a5 - 1 == v5) * a1) ^ v9)) - 12))();
}

void sub_10007E824()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1978249862)
    v1 = 2134650450;
  else
    v1 = 2134608426;
  *(_DWORD *)(v2 + 32) = v1;
}

void sub_100085800(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1
     - 210615973
     * (((a1 ^ 0x6423C656 | 0xA7BC3BC3)
       - (a1 ^ 0x6423C656)
       + ((a1 ^ 0x6423C656) & 0x5843C43C)) ^ 0x6A70348A);
  __asm { BR              X8 }
}

uint64_t sub_1000858FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned __int8 a15, unsigned __int8 a16, unsigned __int8 a17, unsigned __int8 a18, unsigned __int8 a19, unsigned __int8 a20,unsigned __int8 a21,unsigned __int8 a22,unsigned __int8 a23,unsigned __int8 a24,unsigned __int8 a25,unsigned __int8 a26,unsigned __int8 a27,unsigned __int8 a28,unsigned __int8 a29,unsigned __int8 a30)
{
  uint64_t v30;
  int v31;
  _BYTE *v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  unsigned int v37;
  int v38;
  uint64_t v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  unsigned int v50;
  int v51;
  unint64_t v52;
  char v53;
  unsigned int v54;
  int v55;
  uint64_t v56;
  int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  uint64_t v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  int v161;
  unsigned int v162;
  uint64_t v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  int v172;
  unsigned int v173;
  int v174;
  int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  __int16 v180;
  int v181;
  int v182;
  unsigned int v183;
  int v184;
  int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  int v196;
  int v197;
  unsigned int v198;
  unsigned int v199;
  int v200;
  int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  int v220;
  unsigned int v221;
  int v222;
  unsigned int v223;
  unsigned int v224;
  int v225;
  unsigned int v226;
  int v227;
  int v228;
  int v229;
  unsigned int v230;
  int v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  int v235;
  int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  int v243;
  int v244;
  int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  int v256;
  unsigned int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  unint64_t v275;
  int v276;
  unsigned int v277;
  int v278;
  int v279;
  unsigned int v280;
  int v281;
  unsigned int v282;
  int v283;
  int v284;
  unsigned int v285;
  int v286;
  int v287;
  int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  int v292;
  unsigned int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  int v297;
  unsigned int v298;
  unsigned int v299;
  int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  int v309;
  unsigned int v310;
  int v311;
  int v312;
  unsigned int v313;
  int v314;
  int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  int v324;
  int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  int v329;
  unint64_t v330;
  int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  int v335;
  unsigned int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  int v342;
  int v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  int v348;
  unsigned int v349;
  int v350;
  unsigned int v351;
  int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  __int16 v356;
  __int16 v357;
  __int16 v358;
  unsigned int v359;
  BOOL v360;
  unsigned int v361;
  unsigned int v362;
  int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  unsigned int v368;
  int v369;
  int v370;
  unsigned int v371;
  int v372;
  int v373;
  int v374;
  int v375;
  int v376;
  int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  int v381;
  unsigned int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  unsigned int v387;
  int v388;
  int v389;
  unsigned int v390;
  int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  unint64_t v398;
  int v399;
  unsigned int v400;
  unsigned int v401;
  int v402;
  int v403;
  unsigned int v404;
  unsigned int v405;
  int v406;
  int v407;
  int v408;
  int v409;
  unsigned int v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  int v417;
  __int16 v418;
  int v419;
  int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  __int16 v424;
  __int16 v425;
  int v426;
  int v427;
  int v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  int v433;
  unsigned int v434;
  unsigned int v435;
  unsigned int v436;
  int v437;
  int v438;
  int v439;
  unsigned int v440;
  unsigned int v441;
  char *v442;
  char *v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  int v447;
  unsigned int v448;
  unsigned int v449;
  char *v450;
  char *v451;
  int v452;
  int v453;
  int v454;
  int v455;
  unsigned int v456;
  unsigned int v457;
  int v458;
  int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  int v465;
  unsigned int v466;
  unsigned int v467;
  int v468;
  int v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  int v473;
  unsigned int v474;
  unsigned int v475;
  unint64_t v476;
  unsigned int v477;
  int v478;
  int v479;
  int v480;
  unsigned int v481;
  unsigned int v482;
  char *v483;
  char *v484;
  char *v485;
  unsigned int v486;
  unsigned int v487;
  int v488;
  int v489;
  int v490;
  unsigned int v491;
  char *v492;
  unsigned int v493;
  unsigned int v494;
  unsigned int v495;
  unsigned int v496;
  unsigned int v497;
  int v498;
  int v499;
  unsigned int v500;
  unsigned int v501;
  unsigned int v502;
  unsigned int v503;
  unsigned int v504;
  unsigned int v505;
  int v506;
  int v507;
  unsigned int v508;
  unsigned int v509;
  unsigned int v510;
  unsigned int v511;
  int v512;
  int v513;
  unsigned int v514;
  unsigned int v515;
  unsigned int v516;
  unsigned int v517;
  unsigned int v518;
  unsigned int v519;
  unsigned int v520;
  unsigned int v521;
  unsigned int v522;
  unsigned int v523;
  unsigned int v524;
  int v525;
  int v526;
  unsigned int v527;
  int v528;
  unsigned int v529;
  unsigned int v530;
  unsigned int v531;
  unsigned int v532;
  unsigned int v533;
  int v534;
  int v535;
  unsigned int v536;
  unsigned int v537;
  unsigned int v538;
  unsigned int v539;
  unsigned int v540;
  unsigned int v541;
  unsigned int v542;
  unsigned int v543;
  unsigned int v544;
  unsigned int v545;
  int v546;
  unsigned int v547;
  unsigned int v548;
  unsigned int v549;
  unsigned int v550;
  int v551;
  unsigned int v552;
  unsigned int v553;
  unsigned int v554;
  unsigned int v555;
  unsigned int v556;
  unsigned int v557;
  int v558;
  unsigned int v559;
  unsigned int v560;
  int v561;
  unsigned int v562;
  int v563;
  int v564;
  unsigned int v565;
  int v566;
  int v567;
  int v568;
  int v569;
  int v570;
  unsigned int v571;
  unsigned int v572;
  unsigned int v573;
  unsigned int v574;
  int v575;
  int v576;
  unsigned int v577;
  unsigned int v578;
  int v579;
  unsigned int v580;
  unsigned int v581;
  unsigned int v582;
  __int16 v583;
  unsigned int v584;
  int v585;
  unsigned int v586;
  int v587;
  unsigned int v588;
  int v589;
  int v590;
  unsigned int v591;
  unsigned int v592;
  unsigned int v593;
  int v594;
  int v595;
  int v596;
  int v597;
  unsigned int v598;
  unsigned int v599;
  int v600;
  unsigned int v601;
  unsigned int v602;
  unsigned int v603;
  unsigned int v604;
  unsigned int v605;
  int v606;
  unsigned int v607;
  int v608;
  unsigned int v609;
  unsigned int v610;
  unsigned int v611;
  unsigned int v612;
  unsigned int v613;
  unsigned int v614;
  unsigned int v615;
  unsigned int v616;
  unsigned int v617;
  int v618;
  unsigned int v619;
  unsigned int v620;
  unsigned int v621;
  int v622;
  unsigned int v623;
  int v624;
  unsigned int v625;
  unsigned int v626;
  unint64_t v627;
  unsigned int v628;
  int v629;
  int v630;
  unsigned int v631;
  unsigned int v632;
  unsigned int v633;
  unsigned int v634;
  unsigned int v635;
  __int16 v636;
  unsigned int v637;
  unsigned int v638;
  unsigned int v639;
  int v640;
  unsigned int v641;
  unsigned int v642;
  unsigned int v643;
  unsigned int v644;
  int v645;
  unsigned int v646;
  unsigned int v647;
  unsigned int v648;
  int v649;
  int v650;
  unsigned int v651;
  unsigned int v652;
  int v653;
  int v654;
  unsigned int v655;
  unsigned int v656;
  unsigned int v657;
  unsigned int v658;
  unsigned int v659;
  int v660;
  int v661;
  int v662;
  unsigned int v663;
  int v664;
  int v665;
  unsigned int v666;
  unsigned int v667;
  unsigned int v668;
  int v669;
  int v670;
  int v671;
  unint64_t v672;
  int v673;
  unsigned int v674;
  unsigned int v675;
  int v676;
  unsigned int v677;
  unsigned int v678;
  unsigned int v679;
  unsigned int v680;
  unsigned int v681;
  int v682;
  int v683;
  unsigned int v684;
  unsigned int v685;
  unsigned int v686;
  unsigned int v687;
  unsigned int v688;
  unsigned int v689;
  int v690;
  unsigned int v691;
  unsigned int v692;
  unsigned int v693;
  unsigned int v694;
  int v695;
  unsigned int v696;
  unsigned int v697;
  unsigned int v698;
  unsigned int v699;
  unsigned int v700;
  unsigned int v701;
  __int16 v702;
  unsigned int v703;
  unsigned int v704;
  unsigned int v705;
  unsigned int v706;
  unsigned int v707;
  unsigned int v708;
  int v709;
  unsigned int v710;
  unsigned int v711;
  int v712;
  unsigned int v713;
  unsigned int v714;
  unsigned int v715;
  unsigned int v716;
  unsigned int v717;
  unsigned int v718;
  unsigned int v719;
  unsigned int v720;
  unsigned int v721;
  unsigned int v722;
  unsigned int v723;
  unsigned int v724;
  unsigned int v725;
  int v726;
  int v727;
  unsigned int v728;
  unsigned int v729;
  char *v730;
  unsigned int v731;
  char *v732;
  unsigned int v733;
  unsigned int v734;
  unsigned int v735;
  unsigned int v736;
  unsigned int v737;
  unsigned int v738;
  unsigned int v739;
  unsigned int v740;
  unsigned int v741;
  int v742;
  int v743;
  unsigned int v744;
  unsigned int v745;
  unsigned int v746;
  int v747;
  unsigned int v748;
  int v749;
  unsigned int v750;
  unsigned int v751;
  unsigned int v752;
  unsigned int v753;
  unsigned int v754;
  unsigned int v755;
  unsigned int v756;
  unsigned int v757;
  int v758;
  unsigned int v759;
  unsigned int v760;
  unsigned int v761;
  unsigned int v762;
  unsigned int v763;
  unsigned int v764;
  char *v765;
  unsigned int v766;
  unsigned int v767;
  unsigned int v768;
  unsigned int v769;
  int v770;
  unsigned int v771;
  unsigned int v772;
  int v773;
  int v774;
  int v775;
  int v776;
  unsigned int v777;
  unsigned int v778;
  int v779;
  unsigned int v780;
  unsigned int v781;
  unsigned int v782;
  unsigned int v783;
  unsigned int v784;
  unsigned int v785;
  int v786;
  unsigned int v787;
  unsigned int v788;
  unsigned int v789;
  int v790;
  int v791;
  unsigned int v792;
  unsigned int v793;
  unsigned int v794;
  unsigned int v795;
  int v796;
  unsigned int v797;
  unsigned int v798;
  unsigned int v799;
  int v800;
  unsigned int v801;
  int v802;
  unsigned int v803;
  int v804;
  unsigned int v805;
  unsigned int v806;
  unsigned int v807;
  unsigned int v808;
  int v809;
  unsigned int v810;
  unsigned int v811;
  unsigned int v812;
  unsigned int v813;
  unsigned int v814;
  unsigned int v815;
  unsigned int v816;
  int v817;
  uint64_t v818;
  char *v819;
  unsigned int v820;
  int v821;
  int v822;
  char *v823;
  char *v824;
  int v825;
  char *v826;
  unsigned int v827;
  int v828;
  int v829;
  unsigned int v830;
  int v831;
  unsigned int v832;
  unsigned int v833;
  unsigned int v834;
  unsigned int v835;
  int v836;
  int v837;
  int v838;
  unsigned int v839;
  int v840;
  int v841;
  int v842;
  int v843;
  int v844;
  unsigned int v845;
  int v846;
  unsigned int v847;
  int v848;
  int v849;
  int v850;
  unsigned int v851;
  unsigned int v852;
  unsigned int v853;
  int v854;
  unsigned int v855;
  unsigned int v856;
  char *v857;
  int v858;
  int v859;
  int v860;
  char *v861;
  unsigned int v862;
  char *v863;
  unsigned int v864;
  uint64_t v865;
  char *v866;
  unsigned int v868;
  int v869;
  int v870;
  int v871;
  uint64_t v872;
  int v874;
  _BYTE *v875;

  v35 = v31 - 567115804;
  v872 = v30;
  v36 = *(_QWORD *)(v33 + 8 * (v31 - 567115688)) - 411109074;
  v37 = *(unsigned __int8 *)(v36 + (a20 ^ 0xCFLL));
  v38 = v31;
  v39 = *(_QWORD *)(v33 + 8 * (v31 - 567115754)) - 700979922;
  v40 = *(unsigned __int8 *)(v39 + (a25 ^ 0x99));
  v41 = v37 ^ (v37 >> 6) ^ (v37 >> 3) ^ 0x97;
  v42 = (((v41 - ((2 * v41) & 0x52)) << 16) + 2686976) ^ 0x290000;
  v43 = v42 - ((2 * v42) & 0xF3500000);
  v44 = (~v40 >> 7) & 1 | (2 * ~v40);
  v875 = v32;
  v45 = v44 - ((2 * v44) & 0x5A) + 45;
  v46 = *(unsigned __int8 *)(v36 + (a28 ^ 0x95));
  v47 = v33;
  v48 = *(_QWORD *)(v33 + 8 * (v35 + 3715)) - 1816770819;
  v49 = *(unsigned __int8 *)(v48 + (a26 ^ 0xF3));
  v50 = ((v46 >> 3) | 0x40) ^ v46 ^ 0x6F ^ (((v46 ^ 0x6F) >> 6) | 0x3C);
  v51 = (((v50 - ((2 * v50) & 0xA2)) << 16) + 1448148992) ^ 0x56510000;
  HIDWORD(v52) = v49 ^ 0x46;
  LODWORD(v52) = v49 << 24;
  v53 = (v52 >> 31) - ((2 * (v52 >> 31)) & 0xDA);
  v54 = *(unsigned __int8 *)(v36 + (a24 ^ 0xADLL));
  v55 = v54 ^ (v54 >> 6) ^ (v54 >> 3);
  v870 = v35;
  v56 = *(_QWORD *)(v47 + 8 * v35) - 1180880094;
  v57 = *(unsigned __int8 *)(v56 + (a19 ^ 0xBFLL)) ^ 0x65;
  v58 = (((v57 - ((2 * v57) & 0x3C)) << 24) + 503316480) ^ 0x1E000000;
  v59 = ~*(unsigned __int8 *)(v39 + (a21 ^ 0x8DLL));
  v60 = (v58 - ((2 * v58) & 0x6E000000) + 925085287) ^ 0x3723AE67 | (v43 - 106411301) ^ 0xF9A84ADB;
  v61 = ((v59 >> 7) & 1 | (2 * v59)) - 16 * (v59 >> 2) - 8;
  v62 = v61 ^ (((4 * v61) ^ 0xFFFFFFE0) - ((2 * ((4 * v61) ^ 0xFFFFFFE0)) & 0x48) - 92) ^ (((2 * v61) ^ 0xFFFFFFF0)
                                                                                         - 2
                                                                                         * (((2 * v61) ^ 0xFFFFFFF0) & 0x5E ^ (2 * v61) & 2)
                                                                                         - 35) ^ 0x6D;
  v63 = (((v62 - ((2 * v62) & 0x50)) << 8) + 1580804096) ^ 0x5E392800;
  v64 = (v63 - ((2 * v63) & 0x73AD9E00) - 103362736) ^ 0xF9D6CF50 | (v60 - ((2 * v60) & 0xEA1F9B06) - 183513725) ^ 0xF50FCD83;
  LODWORD(v36) = *(unsigned __int8 *)(v36 + (a16 ^ 0x96));
  v65 = ((2 * a22) & 0x1B2) + (a22 ^ 0xFADBD7D9);
  v66 = (a22 ^ 0xF0828493) - ((2 * (a22 ^ 0x13)) & 0xEEEEEEEE) + v65 + 1;
  v67 = v65 + 86255655 + ((v66 - ((2 * v66 + 692275004) & 0x97CE5296) + 1619578089) ^ 0xB418D6B5);
  LODWORD(v36) = v36 ^ 0x44 ^ (v36 >> 3) ^ (((v36 ^ 0x44) >> 6) | 0x24) ^ 0xFA;
  LODWORD(v36) = ((((_DWORD)v36 + (~(2 * (_DWORD)v36) | 0xFF55)) << 16) - 464125952) ^ 0xE4550000;
  v68 = *(unsigned __int8 *)(v48 + ((v67 + 1399891275 - ((2 * v67) & 0xA6E14AD0) + 29) ^ 0x5370A54B));
  HIDWORD(v52) = v68 ^ 0x46;
  LODWORD(v52) = v68 << 24;
  v69 = (v64 - ((2 * v64) & 0xD62E4010) - 350806008) ^ 0xEB172008 | ((((v52 >> 31)
                                                                                      - ((2 * (v52 >> 31)) & 0xEE)
                                                                                      - 9) ^ 0xF7)
                                                                   - ((2
                                                                     * (((v52 >> 31) - ((2 * (v52 >> 31)) & 0xEE) - 9) ^ 0xF7)) & 0xF0)
                                                                   + 893034872) ^ 0x353AA178;
  v70 = ((2 * v69) & 0x87FEFFFC) + (v69 ^ 0xC3FF7FFE);
  v71 = *(unsigned __int8 *)(v56 + (a15 ^ 0x3DLL)) ^ 0xD6;
  v72 = (((v71 - ((2 * v71) & 0xE4)) << 24) + 1912602624) ^ 0x72000000;
  LODWORD(v36) = (v36 - ((2 * v36) & 0x2A0000) + 940926480) ^ 0x38156610 | (v72 - ((2 * v72) & 0x7A000000) - 1114298725) ^ 0xBD95269B;
  v73 = *(unsigned __int8 *)(v48 + (a18 ^ 0x39));
  LODWORD(v48) = *(unsigned __int8 *)(v48 + (a30 ^ 0xDALL));
  HIDWORD(v52) = v73 ^ 0x46;
  LODWORD(v52) = v73 << 24;
  v74 = v52 >> 31;
  v75 = v36 - ((2 * v36) & 0x233B48AE);
  HIDWORD(v52) = v48 ^ 0x46;
  LODWORD(v52) = (_DWORD)v48 << 24;
  LODWORD(v36) = (v52 >> 31) - ((2 * (v52 >> 31)) & 0xFFFFFFF4) - 6;
  v76 = ((~(2 * (v36 ^ 0xFA)) | 0xFFFFFF3B) + (v36 ^ 0xFA) - 185167517) ^ 0xF4F69162 | (v51 - ((2 * v51) & 0x57B00000) - 338134352) ^ 0xEBD87AB0;
  v77 = *(unsigned __int8 *)(v56 + (a23 ^ 0x81));
  LODWORD(v48) = (v75 + 295543895) ^ 0x119DA457 | (((v74 - ((2 * v74) & 0x44) + 34) ^ 0x22)
                                                 - ((2 * (v74 - ((2 * v74) & 0x44) + 34)) & 0x92)
                                                 + 1782701641) ^ 0x6A41DE49;
  LODWORD(v56) = *(unsigned __int8 *)(v56 + (a27 ^ 0x6FLL)) ^ 0xB4;
  LODWORD(v56) = ((((_DWORD)v56 - ((2 * (_DWORD)v56) & 0xFFFFFFE3)) << 24) - 251658240) ^ 0xF1000000;
  v78 = ~*(unsigned __int8 *)(v39 + (a29 ^ 0x7FLL));
  v79 = ((v78 >> 7) & 1 | (2 * v78)) - 16 * (v78 >> 2) + 120;
  LOBYTE(v79) = v79 ^ (((4 * v79) ^ 0xE0) - ((2 * ((4 * v79) ^ 0xE0)) & 0x9F) - 52) ^ (((2 * v79) ^ 0xF0)
                                                                                     - 2
                                                                                     * (((2 * v79) ^ 0xF0) & 0x1C ^ (2 * v79) & 8)
                                                                                     + 21) ^ 0xDD;
  v80 = (((v79 - 2 * (v79 & 0x1F)) << 8) - 1992941824) ^ 0x89361F00;
  LODWORD(v56) = (v80 - ((2 * v80) & 0x4DE07A00) + 1727020487) ^ 0x66F03DC7 | (v56
                                                                             - ((2 * v56) & 0x70000000)
                                                                             - 1191761545) ^ 0xB8F72977;
  v81 = (v56 - ((2 * v56) & 0x87B36690) - 1009142968) ^ 0xC3D9B348 | (v76 - ((2 * v76) & 0x3774F27A) - 608536259) ^ 0xDBBA793D;
  v82 = v81 - ((2 * v81) & 0xA31DF23C) - 779159266;
  LODWORD(v39) = ~*(unsigned __int8 *)(v39 + (a17 ^ 0x4CLL));
  LODWORD(v39) = ((v39 >> 7) & 1 | (2 * v39)) - ((4 * v39) & 0x2C) + 22;
  LODWORD(v39) = v39 ^ (((4 * v39) ^ 0x58) - ((8 * v39) & 0x48) + 36) ^ 0xF4 ^ (((2 * v39) ^ 0x2C)
                                                                              - ((2 * ((2 * v39) ^ 0x2C)) & 0x1C)
                                                                              + 15);
  LODWORD(v39) = (((v39 - ((2 * (_DWORD)v39) & 0x196)) << 8) - 1641362688) ^ 0x9E2ACB00;
  LODWORD(v48) = (v39 - ((2 * v39) & 0x73860000) + 2042822895) ^ 0x79C300EF | (v48 - ((2 * v48) & 0x9DB6013E) - 824508257) ^ 0xCEDB009F;
  v83 = v48 - ((2 * v48) & 0xCC32426E) - 434560713;
  LODWORD(v48) = 2 * v70 - ((4 * v70 - 268304376) & 0x8B5BEEC0) + 1034876772;
  LODWORD(v48) = (v48 & 0x9AE60596 ^ 0x86B22525) + v70 + ((2 * v48) & 0x31C00B24 ^ 0xFEBFF5FF);
  v84 = v48 - ((2 * v48 + 112903506) & 0x6FE221EC) + 994997151;
  v85 = *(_QWORD *)(v47 + 8 * (v38 ^ 0x21CD90E1)) - 177387259;
  LODWORD(v56) = (HIBYTE(v83) ^ 0x8E) - 2111878028;
  LODWORD(v48) = *(_DWORD *)(v85 + 4 * (HIBYTE(v83) ^ 0x8A)) + (v56 ^ 0x82C883C) + 1;
  LODWORD(v48) = v48
               - ((2 * v56) & 0x4268B86)
               - 2 * ((v48 - ((2 * v56) & 0x4268B86) + 588758138) & 0x3ACAF9C7 ^ v48 & 1)
               - 1646086592;
  LOBYTE(v56) = v45 ^ (((4 * v45) ^ 0xB4) - ((2 * ((4 * v45) ^ 0xB4)) & 0x70) + 57) ^ (((2 * v45) ^ 0x5A)
                                                                                     - 2
                                                                                     * (((2 * v45) ^ 0x5A) & 0x6E ^ (2 * v45) & 4)
                                                                                     + 107);
  v874 = v38;
  v86 = *(_QWORD *)(v47 + 8 * (v38 ^ (v34 + 1791))) - 1490568763;
  v87 = (BYTE2(v82) ^ 0x77FCF37F) + ((v82 >> 15) & 0x4E);
  v88 = ((BYTE2(v82) ^ 0xF6) + (HIWORD(v82) & 0x4A ^ 0x1FD03D08) - ((BYTE2(v82) ^ 0xF6) & 0x4A)) ^ 0x1F5B3EC8;
  v89 = *(_QWORD *)(v47 + 8 * (v35 + 2578)) - 660842674;
  v90 = *(_QWORD *)(v47 + 8 * (v38 ^ (v34 + 3949))) - 2101814811;
  LODWORD(v56) = *(_DWORD *)(v86 + 4 * (v56 ^ 0x33u));
  LODWORD(v47) = HIBYTE(v84) & 0x4E;
  v91 = ((v47 ^ 0x4A) + (HIBYTE(v84) & 6 ^ 0xD8CB2124) - ((v47 ^ 0x4A) & 6)) ^ 0xD0DB033E;
  v92 = *(_DWORD *)(v90
                  + 4
                  * ((((2 * (v84 ^ 0x48)) | 0x5D829FCC) - (v84 ^ 0x48) + 1363062810) ^ 0xAEC14F8F));
  v93 = v92 ^ *(_DWORD *)(v89 + 4 * ((v88 - ((2 * v88) & 0x1060D16) - 1146939765) ^ 0xBB281572)) ^ (v92 >> 3) ^ (v92 >> 6) ^ (v56 - 2 * ((v56 + 479719296) & 0x119C6A9B ^ v56 & 2) - 1372300775) ^ v48 ^ (v87 - ((2 * v87 + 2087312072) & 0x4042396C) - 1482421734);
  LODWORD(v48) = ((v84 >> 23) & 0x1C ^ 0x87F68F6E)
               + (v47 ^ 0xB404A808)
               + (((HIBYTE(v84) ^ 0xBC0498F9) + 1) ^ 0xDF7B5D3D)
               + ((2 * ((HIBYTE(v84) ^ 0xBC0498F9) + 1)) & 0x3800327A);
  LODWORD(v56) = ((v91 | 0xE9B332A0) - (v91 | 0x164CCD5F) + 374132063) ^ 0x45C1394F ^ (v48
                                                                                     - ((2 * v48 + 1359586824) & 0x48C4537E)
                                                                                     - 857277245);
  LODWORD(v48) = (HIBYTE(v84) ^ 0xB7) - 2111878028;
  v94 = v48 ^ 0x21115205;
  v95 = (2 * v48) & 0x41C1BF4;
  LODWORD(v48) = ((v83 >> 15) & 0xBE ^ 0x34) + (BYTE2(v83) ^ 0x34BFA445);
  v96 = (((2 * (BYTE2(v83) ^ 0x74)) & 0x192) - (BYTE2(v83) ^ 0x74) - 154268106) ^ 0xB2CC8E70;
  LODWORD(v56) = *(_DWORD *)(v85 + 4 * v56) + v94 - v95 + 1;
  v97 = v56 - ((2 * v56 - 1805261470) & 0xCB2975D8) + 801615261;
  LODWORD(v56) = *(_DWORD *)(v86 + 4 * (BYTE1(v82) ^ 0x53u));
  v98 = *(_DWORD *)(v90 + 4 * ((v53 + 109) ^ 0x2Au));
  v99 = (v98 ^ (v98 >> 3) ^ 0x67F050A1) >> (BYTE2(v82) & 3);
  v100 = ((v99 - ((2 * v99) & 0x9EC466E6) + 1331835763) ^ 0x4F623373) >> (BYTE2(v82) & 3 ^ 3);
  v101 = ((v84 >> 15) & 0x1AE ^ 0x1A2) + (BYTE2(v84) ^ 0xFFFBCC26);
  v102 = *(_DWORD *)(v89 + 4 * ((((2 * v96) & 0x100BA) - v96 + 2002724770) ^ 0x335DA75F)) ^ v98 ^ (v56 - 2 * ((v56 + 479719296) & 0x51CF94CF ^ v56 & 5) - 295205814) ^ (v48 - 848059031 + ((2 * ((v48 + 44) & 0x13E ^ (v48 | 0xFFFFFFFD))) ^ 0x802C005)) ^ (v100 - ((2 * v100) & 0x190ED856) - 1937282005) ^ 0x421B9284 ^ v97;
  v103 = v101 + 590898997 + ((2 * v101 + 10088) & 0x2700 ^ 0xB7FF7FFF);
  LODWORD(v56) = (v77 ^ 0x74840461) - ((2 * (v77 ^ 0x60)) & 0x1F0) + *(_DWORD *)(v85 + 4 * (v77 ^ 0x62)) + 1;
  LODWORD(v77) = *(_DWORD *)(v86 + 4 * (BYTE1(v83) ^ 0x45u));
  v104 = ((2 * (v55 ^ 0xFFFFFFFB)) & 0x19E) + (v55 ^ 0x577FFC24);
  LODWORD(v47) = HIBYTE(v82);
  v105 = (HIBYTE(v82) ^ 0xC1) - 2111878028;
  v106 = v105 ^ 0x84464109;
  v107 = (2 * v105) & 0x43219EC;
  v108 = *(_DWORD *)(v90 + 4 * ((v52 >> 31) - ((2 * (v52 >> 31)) & 0xF4) - 6));
  v109 = v108 ^ *(_DWORD *)(v89
                          + 4
                          * (((BYTE2(v84) ^ 0x210006D4 | 0x29F3BD41) - (BYTE2(v84) ^ 0x210006D4 | 0xD60C42BE) - 703839554) ^ 0x8F3BBB1)) ^ (v108 >> 3) ^ (v108 >> 6) ^ (v56 - ((2 * v56 - 381556618) & 0xBFF03AB0) - 728165997) ^ (v77 - 2 * ((v77 + 479719296) & 0x6673C7B6 ^ v77 & 2) - 2096384204) ^ v103;
  v110 = *(_DWORD *)(v85 + 4 * (v47 ^ 0xC5)) + v106 - v107 + 1;
  v111 = *(_DWORD *)(v86
                   + 4
                   * (((BYTE1(v84) ^ 0x94) + ((v84 >> 8) & 0x8D ^ 0xD83EDA09) - ((BYTE1(v84) ^ 0x94) & 0x8D)) ^ 0xD83EDA93));
  LODWORD(v36) = *(_DWORD *)(v90 + 4 * (v83 ^ 0xF9u));
  v112 = *(_DWORD *)(v89 + 4 * (v55 ^ 0x3Eu)) ^ (v104
                                                 + 411075422
                                                 + ((2 * ((v104 + 956) & 0x1FA3 ^ (v104 | 0xFFFFFFFD))) ^ 0xE0010005)) ^ v36 ^ (v36 >> 3) ^ (v36 >> 6) ^ (v110 - ((2 * v110 - 839121062) & 0xF88A714E) - 482132908) ^ (v111 - 2 * ((v111 + 479719296) & 0x5748887F ^ v111 & 0x1F) - 203393056);
  LODWORD(v77) = ((v112 >> 15) & 0x1AE ^ 0x12C) + (BYTE2(v112) ^ 0x3F1DF369);
  v113 = *(_DWORD *)(v85 + 4 * (HIBYTE(v93) ^ 0xCC))
       + (((HIBYTE(v93) ^ 0xC8) - 2111878028) ^ 0x86140C92)
       - ((2 * ((HIBYTE(v93) ^ 0xC8) - 2111878028)) & 0x1682DA)
       + 1;
  LODWORD(v36) = v113 - ((2 * v113 - 899649464) & 0x995DA1EC) + 836700442;
  v114 = v77 - 874234428 + ((2 * v77 + 6504) & 0x221E ^ 0xD7DF7FFF);
  v115 = *(_DWORD *)(v90 + 4 * (v102 ^ 0xB2u));
  LODWORD(v77) = (v115 ^ 0x32F46861) + 1481679346;
  v116 = ((2 * v115) ^ 0x65E8D0C2) - 2 * (((2 * v115) ^ 0x65E8D0C2) & 0x13FCB136 ^ (2 * v115) & 0x20) - 1812156138;
  v117 = v116 & 0xB0A143E4 ^ 0x90A03101;
  LODWORD(v47) = (2 * v116) & 0x614287C0 ^ 0xDEBFFDFF;
  v118 = *(_DWORD *)(v86 + 4 * (BYTE1(v109) ^ 0xCFu));
  LODWORD(v77) = (v77 ^ 0xFBEFCFDD) + ((2 * v77) & 0xF7DF9FBA) + v117 + v47 + 1;
  LODWORD(v47) = v77 - ((2 * v77 + 136314940) & 0x67F52826) - 1207266255;
  v119 = ((v93 >> 15) & 0xFE ^ 0x3E) + (BYTE2(v93) ^ 0xFD66EDE0);
  v120 = *(_DWORD *)(v85 + 4 * (HIBYTE(v102) ^ 0xF1))
       + (((HIBYTE(v102) ^ 0xF5) - 2111878028) ^ 0x29000004)
       - ((2 * ((HIBYTE(v102) ^ 0xF5) - 2111878028)) & 0x43E9BF6)
       + 1;
  v121 = (v118 - ((2 * v118 + 959438592) & 0x3DDA3386) + 998574403) ^ *(_DWORD *)(v89
                                                                                + 4
                                                                                * (((BYTE2(v112) ^ 0x40A8827F)
                                                                                  + (HIWORD(v112) & 0xC8 ^ 0xA3135880)
                                                                                  - ((BYTE2(v112) ^ 0x40A8827F) & 0xA800C8)) ^ 0xE313DADC)) ^ v47 ^ (v47 >> 3) ^ (v47 >> 6) ^ v36 ^ v114;
  v122 = (v109 ^ 0xDF) + (v109 & 0x21 ^ 0x3B6F6820) - ((v109 ^ 0xDF) & 0x21);
  v123 = *(_DWORD *)(v86 + 4 * (((BYTE1(v112) ^ 0x4B) - ((2 * (BYTE1(v112) ^ 0x4B)) & 0x1D2) + 745) ^ 0x2C5u));
  v124 = v123 - ((2 * v123 + 959438592) & 0x3FABF53E) - 1133647329;
  v125 = ((v102 >> 15) & 0x15A ^ 0x14A) + (BYTE2(v102) ^ 0x17FFEF1A);
  v126 = *(_DWORD *)(v90
                   + 4
                   * (((v122 & 0x23050EE8 ^ 0x4008648) + (v122 ^ 0x3B7708A1) - ((v122 ^ 0x3B7708A1) & 0x6EE8)) ^ 0x271D8E5Eu));
  v127 = v126 ^ *(_DWORD *)(v89
                          + 4
                          * (((HIWORD(v93) & 2)
                            + (BYTE2(v93) ^ 0x149E50D2)
                            - ((BYTE2(v93) ^ 0x149E50D2) & 0x925002)
                            - 1442739456) ^ 0xBE0D8B9A)) ^ (v126 >> 3) ^ (v126 >> 6) ^ v124 ^ (v119
                                                                                             - 1647554735
                                                                                             + ((2 * v119 + 9752) & 0x3888 ^ 0xB7FD7FFF)) ^ (v120 - ((2 * v120 - 2071426716) & 0xDA2F5532) + 794554187);
  v128 = *(_DWORD *)(v85 + 4 * (HIBYTE(v109) ^ 0x36))
       + (((HIBYTE(v109) ^ 0x32) - 2111878028) ^ 0x8022200C)
       - ((2 * ((HIBYTE(v109) ^ 0x32) - 2111878028)) & 0x43A9BE6)
       + 1;
  v129 = v128 - ((2 * v128 - 700167852) & 0xC1FBBC24) + 1277166268;
  LODWORD(v77) = HIBYTE(v112);
  v130 = (HIBYTE(v112) ^ 0xF2) - 2111878028;
  v131 = v130 ^ 0x20C20C30;
  LODWORD(v47) = (2 * v130) & 0x43A839E;
  v132 = *(_DWORD *)(v86 + 4 * (BYTE1(v93) ^ 0x8Fu));
  v133 = v132 - 2 * ((v132 + 479719296) & 0x4FABBCFE ^ v132 & 0xC) + 1816374386;
  v134 = ((v109 >> 15) & 0x16E ^ 0x124) + (BYTE2(v109) ^ 0x3DD7EB2D);
  v135 = ((HIWORD(v109) & 0xCC ^ 0x5801F105) + (HIWORD(v109) & 0x33) - 1) ^ 0xE009F99E;
  v136 = *(_DWORD *)(v90 + 4 * (v112 ^ 0x7Au));
  v137 = v136 ^ *(_DWORD *)(v89 + 4 * (BYTE2(v102) ^ 0x62u)) ^ (v136 >> 3) ^ (v136 >> 6) ^ v133 ^ v129 ^ (v125 + 292157744 + ((2 * v125 + 444) & 0x10A2 ^ 0x9B9FFFFF));
  LODWORD(v48) = *(_DWORD *)(v85 + 4 * (v77 ^ 0xF6)) + v131 - v47 + 1;
  v138 = *(_DWORD *)(v86
                   + 4
                   * (((BYTE1(v102) ^ 0x1644196B)
                     + ((v102 >> 8) & 0x9B ^ 0xA801C690)
                     - ((BYTE1(v102) ^ 0x1644196B) & 0x1404189B)) ^ 0xAA41C770));
  v139 = *(_DWORD *)(v90 + 4 * (v93 ^ 0x33u));
  v140 = v139 ^ *(_DWORD *)(v89 + 4 * (((v135 | 0xF2F502BC) - (v135 | 0xD0AFD43) + 218824003) ^ 0x4AFD0A69)) ^ (v139 >> 3) ^ (v139 >> 6) ^ (v134 + 1373827454 + ((2 * v134 + 27048) & 0x7952 ^ 0xDFFE7FFF)) ^ (v48 - ((2 * v48 + 84177164) & 0x760B7A0) + 1311937622) ^ (v138 - 2 * ((v138 + 479719296) & 0x2F34DFAD ^ v138 & 0xC) - 875770079);
  v141 = *(_DWORD *)(v85 + 4 * (HIBYTE(v127) ^ 0xED))
       + (((HIBYTE(v127) ^ 0xE9) - 2111878028) ^ 0xB0494014)
       - ((2 * ((HIBYTE(v127) ^ 0xE9) - 2111878028)) & 0x42C1BD6)
       + 1;
  v142 = ((v137 ^ 0x21) - ((2 * (v137 ^ 0x21)) & 0x19A) - 2076188211) ^ 0xB41BA1EF;
  v143 = (((((v140 >> 8) & 0x40) + (BYTE1(v140) ^ 0x7F)) | 0x95BD2000) - ((BYTE1(v140) ^ 0x7F) & 0x40)) ^ 0x96FAA941;
  v144 = *(_DWORD *)(v86 + 4 * ((((2 * v143) & 0x8752DE) - v143 - 2027137392) ^ 0x846BDF0F));
  v145 = *(_DWORD *)(v90 + 4 * (((v142 | 0xA60B9FBF) - (v142 | 0x59F46040) + 1509187648) ^ 0x962FDFBB));
  v146 = v145 ^ *(_DWORD *)(v89
                          + 4
                          * ((((2 * (BYTE2(v121) ^ 0x32550EA)) & 0x20000AA) - (BYTE2(v121) ^ 0x32550EA) - 1296605526) ^ 0xB1920EAF)) ^ (v145 >> 3) ^ (v145 >> 6) ^ (v144 - 2 * ((v144 + 479719296) & 0x50138DBE ^ v144 & 0x10) + 1823178030) ^ (((v121 >> 15) & 0xEE ^ 0x64) + (BYTE2(v121) ^ 0xFA9BF74D) + 658730589 + ((2 * ((((v121 >> 15) & 0xEE ^ 0x64) + (BYTE2(v121) ^ 0xFA9BF74D) + 276) & 0x549 ^ (BYTE2(v121) ^ 0xFA9BF74D | 0x7FFFFFFE))) ^ 0x44430003)) ^ (v141 - ((2 * v141 + 1979058500) & 0x6F7BF3C4) + 1924726404);
  v147 = ((2 * BYTE2(v140)) ^ 0xE6) + (BYTE2(v140) ^ 0x3FFF7F8C);
  v148 = ((2 * (BYTE2(v140) ^ 0x26)) | 0xF890818A) - (BYTE2(v140) ^ 0x26) + 62373691;
  LOWORD(v77) = (BYTE1(v137) ^ 0x26) - ((2 * (BYTE1(v137) ^ 0x26)) & 0xFFE3) - 8207;
  v149 = *(_DWORD *)(v85 + 4 * (HIBYTE(v121) ^ 0xBC))
       + (((HIBYTE(v121) ^ 0xB8) - 2111878028) ^ 0x9C142282)
       - ((2 * ((HIBYTE(v121) ^ 0xB8) - 2111878028)) & 0x4169AFA)
       + 1328554549;
  LODWORD(v48) = *(_DWORD *)(v89
                           + 4
                           * (((v148 & 0x96DB1308 ^ 0x2531208) + (v148 ^ 0xD48849C5) - ((v148 ^ 0xD48849C5) & 0x96DB1308)) ^ 0xBE1B1A88)) ^ (v147 - ((2 * v147 + 1818542360) & 0x646226FE) - 261131253) ^ 0xD008ECE;
  v150 = (v48 + v149) ^ 0x7FCBF5EF;
  v151 = (2 * (v48 + v149)) & 0xFF97EBDE;
  v152 = (v48 & v149) + 577923696 - ((2 * (v48 & v149)) & 0x44F554B4);
  LODWORD(v48) = *(_DWORD *)(v86 + 4 * (((v77 & 0x54A8 ^ 0xD0E10009) + (v77 & 0x2B57) - 1) ^ 0xD0E15F57));
  v153 = v151 + v150 + ((2 * v152 + 1081300) ^ 0xC13670A5) + ((2 * (2 * v152 + 1081300)) & 0xF479B7DC ^ 0x7F975EB7);
  v154 = *(_DWORD *)(v90 + 4 * (v127 ^ 0xABu));
  v155 = v154 ^ (v154 >> 6) ^ (v154 >> 3) ^ (v48 - ((2 * v48 + 959438592) & 0x4417EDD2) - 1096554903) ^ (v153 - ((2 * v153 - 186528766) & 0xA11CA720) - 889243247);
  v156 = *(_DWORD *)(v85 + 4 * (HIBYTE(v137) ^ 0x4A))
       + (((HIBYTE(v137) ^ 0x4E) - 2111878028) ^ 0xC0282400)
       - ((2 * ((HIBYTE(v137) ^ 0x4E) - 2111878028)) & 0x42E93FE)
       + 1;
  v157 = ((v127 >> 15) & 0x1E ^ 0x16) + (BYTE2(v127) ^ 0x7CFB7FF4);
  LODWORD(v48) = ((BYTE2(v127) ^ 0xA6) - ((2 * (BYTE2(v127) ^ 0xA6)) & 0x4E) - 1636311257) ^ 0x3E57C923;
  v158 = v157 - 929337791 + ((2 * ((v157 + 24956) & 0x10CC5 ^ (HIWORD(v127) | 0x7FFFFFFE))) ^ 0x8C400003);
  v159 = *(_DWORD *)(v86 + 4 * (BYTE1(v121) ^ 0x61u));
  v160 = ((v137 >> 15) & 0x64 ^ 0x44) + (BYTE2(v137) ^ 0xDFFEFFD1);
  LODWORD(v77) = ((HIWORD(v137) & 0x5C ^ 0x523D790D) + (HIWORD(v137) & 0xA3) - 1) ^ 0x50256DFD;
  LODWORD(v77) = *(_DWORD *)(v89 + 4 * ((((2 * (_DWORD)v77) & 0x100194) - (_DWORD)v77 + 1395957557) ^ 0x512C8BF2u));
  v161 = *(_DWORD *)(v85 + 4 * (HIBYTE(v140) ^ 0xCC))
       + (((HIBYTE(v140) ^ 0xC8) - 2111878028) ^ 0x10010805)
       - ((2 * ((HIBYTE(v140) ^ 0xC8) - 2111878028)) & 0x43C8BF4)
       + 1;
  v162 = (BYTE1(v127) ^ 0xA3 | 0xF6C17036) - (BYTE1(v127) ^ 0xA3 | 0x93E8FC9) + 155094985;
  LODWORD(v77) = ((v77 & 0xFDE6551A ^ 0xA5820400 | 0x140E1B06) - (v77 & 0xFDE6551A ^ 0xA5820400 | 0xEBF1E4F9) - 336468743) ^ (((v160 + 372433241) & 0x7420411A) + 788975461 + ((2 * ((((v160 + 372433241) & 0xA) + 2147483636) ^ (v160 + 372433241) & 0x410A)) ^ 0x48000017)) ^ 0x2BAEC572 | ((v77 & 0x219AAE5 ^ 0xB619A815 | 0x7AE9AE37) - (v77 & 0x219AAE5 ^ 0xB619A815 | 0x851651C8) - 2062134840) ^ 0xCEE98E83;
  v163 = v90;
  v164 = *(_DWORD *)(v90 + 4 * (v140 ^ 0x61u));
  v165 = v164 ^ (v164 >> 6) ^ (v164 >> 3) ^ *(_DWORD *)(v89
                                                      + 4
                                                      * ((((2 * (_DWORD)v48) & 0x4040C436) - (_DWORD)v48 + 30416356) ^ 0xA1F00B68)) ^ (v156 - ((2 * v156 + 104350060) & 0x40B9376) - 1390286223) ^ v158 ^ (v159 - ((2 * v159 + 959438592) & 0x616E7FD6) - 850448533);
  LODWORD(v48) = *(_DWORD *)(v86
                           + 4
                           * (((v162 & 0x944130F7 ^ 0x80041) + (v162 ^ 0xF6F379B6) - ((v162 ^ 0xF6F379B6) & 0x3010F7)) ^ 0x944B397C));
  v166 = *(_DWORD *)(v90 + 4 * (v121 ^ 0xEu));
  v167 = v166 ^ (v166 >> 6) ^ (v166 >> 3) ^ (v48 - ((2 * v48 + 422567680) & 0x1AA0F07E) + 703096767) ^ (((v160 + 36888921) & 0x211A0E5) - ((2 * (v160 + 36888921)) & 0x101CA) - 121598721) ^ (v161 - ((2 * v161 - 1232701086) & 0xF4421216) + 1432634812) ^ (v77 - ((2 * v77) & 0x54C81324) + 711199122);
  v169 = ((v167 >> 15) & 0xFE ^ 0x16) + (BYTE2(v167) ^ 0xFEFF5F74);
  LODWORD(v36) = (HIWORD(v167) & 0xD5 ^ 0x14)
               + (HIWORD(v167) & 0x54 ^ 0xB90F2060)
               - ((HIWORD(v167) & 0xD5 ^ 0x14) & 0x7C);
  v170 = ((v36 & 0xF38 ^ 0x4010319) + (v36 & 0x30C5) - 1) ^ 0x3E1072D4 ^ (((v169 + 16818305) | 0xD5)
                                                                        + 974213434
                                                                        + ((2
                                                                          * (((v169 + 16818305) & 0x3A11512A | 0x10) ^ ((v169 + 16818305) | 0xFFFFFFFD))) ^ 0x12F)
                                                                        + 116);
  LODWORD(v36) = *(_DWORD *)(v85 + 4 * (HIBYTE(v155) ^ 0x32))
               + (((HIBYTE(v155) ^ 0x36) - 2111878028) ^ 0x88409C00)
               - ((2 * ((HIBYTE(v155) ^ 0x36) - 2111878028)) & 0xFFFF87FF)
               + 1;
  v171 = v36 - ((2 * v36 + 1174884716) & 0x67A3B390) + 383091326;
  v172 = v169 - 677968027 + ((2 * v169 + 66072) & 0x10CB0 ^ 0x3FBFFFFF);
  LODWORD(v77) = ((v165 >> 7) & 2) + (BYTE1(v165) ^ 0xFFFFFFBB) - 76695553;
  LODWORD(v77) = *(_DWORD *)(v86
                           + 4
                           * (((((v77 & 0xFB4D124A) + (v77 ^ 0xFB4D335E)) | 0x904000)
                             - ((v77 ^ 0xFB4D335E) & 0x924A)) ^ 0xFBFD5685));
  v174 = v77 - 2 * ((v77 + 479719296) & 0x611D654F ^ v77 & 3) - 38447924;
  if (-(v146 & 0x4000000) == -67108864)
    v175 = 4;
  else
    v175 = -4;
  v173 = ((v146 ^ 0x27) + (v146 & 0xD7 ^ 0x4D0) - ((v146 ^ 0x27) & 0xD7)) ^ 0x44F;
  v176 = *(_DWORD *)(v90 + 4 * v173) ^ *(_DWORD *)(v89 + 4 * v170) ^ (*(_DWORD *)(v90 + 4 * v173) >> 3) ^ (*(_DWORD *)(v90 + 4 * v173) >> 6) ^ v174 ^ v172 ^ v171;
  v177 = ((v155 >> 15) & 0x1FC ^ 0x1A0) + (BYTE2(v155) ^ 0x7FEDDA2E);
  v178 = v177 - 1535655482 + ((2 * v177 + 2842) & 0x7870 ^ 0xB39CFFFF);
  v179 = ((v165 ^ 0xF) - ((2 * (v165 ^ 0xF)) & 0x128) - 1704735852) ^ 0xCA63C3BC;
  v180 = (BYTE1(v167) ^ 0xC8) - ((2 * (BYTE1(v167) ^ 0xC8)) & 0x1B0) + 14552;
  v168 = ((2 * HIBYTE(v146)) ^ 0x16C) + (HIBYTE(v146) ^ 0xFBFFFB49);
  v181 = *(_DWORD *)(v85 + 4 * (v168 + 67109889 + v175))
       + v168
       + ((2 * v168 + 205431018) ^ 0x1A1040C9)
       - ((2 * (2 * v168 + 205431018)) & 0x4BDF7E6C)
       - 1830287423;
  v182 = *(_DWORD *)(v86 + 4 * (((v180 & 0x656 ^ 0x499DE041) + (v180 & 0x9A9) - 1) ^ 0x499DE8D5u));
  v183 = v182 - ((2 * v182 + 959438592) & 0x87BFFBFE) + 1618472319;
  v184 = ((2 * HIBYTE(v165)) ^ 0x1D4) - ((2 * ((2 * HIBYTE(v165)) ^ 0x1D4)) & 0xFC) + 383;
  v185 = ((v146 >> 15) & 0x176 ^ 0x126) + (BYTE2(v146) ^ 0x7CFF4B28);
  v186 = (HIBYTE(v165) ^ 0x821F4C9E) + (v184 & 0xE8 ^ 0x29C77ED2) + ((2 * v184) & 0x150 ^ 0x50) - 700939962;
  v187 = (BYTE2(v146) ^ 0xA4) - ((2 * (BYTE2(v146) ^ 0xA4)) & 0x108) + 165628804;
  v188 = *(_DWORD *)(v90 + 4 * ((((2 * v179) & 0x80001DD2) - v179 + 491282710) ^ 0x4D4869DA));
  v189 = v188 ^ *(_DWORD *)(v89
                          + 4
                          * ((((2 * (BYTE2(v155) ^ 0xDA)) | 0xDBE094A0) - (BYTE2(v155) ^ 0xDA) + 303019440) ^ 0xEDF04A8F)) ^ (v188 >> 3) ^ (v188 >> 6) ^ v183 ^ (v181 - ((2 * v181 + 148281668) & 0x18F82576) - 790143139) ^ v178;
  v190 = (BYTE1(v155) ^ 0x76 | 0xD485B75A) - (BYTE1(v155) ^ 0x76 | 0x2B7A48A5) + 729434277;
  v191 = *(_DWORD *)(v85 + 4 * (HIBYTE(v165) ^ 0xEE)) + (v186 ^ 0xC0850201) - ((2 * v186) & 0x434BBFC) + 1;
  v192 = *(_DWORD *)(v86
                   + 4
                   * (((v190 & 0xC0801220 ^ 0x83420200) + (v190 ^ 0x5C85F57A) - ((v190 ^ 0x5C85F57A) & 0x80000220)) ^ 0x4BC2503A));
  v193 = ((v167 ^ 0x51) - ((2 * (v167 ^ 0x51)) & 0xA8) + 1555191124) ^ 0xCCDA0D55;
  v194 = *(_DWORD *)(v90 + 4 * (((v193 | 0xD7F9DCC4) - (v193 | 0x2806233B) + 671490875) ^ 0x47918453));
  v195 = v194 ^ *(_DWORD *)(v89
                          + 4
                          * (((v187 & 0x88F0219 ^ 0x50200019) + (v187 ^ 0x99FAB86) - ((v187 ^ 0x99FAB86) & 0x6219)) ^ 0x58EF82F9u)) ^ (v194 >> 3) ^ (v194 >> 6) ^ (v185 - ((2 * v185 - 228251232) & 0xA84222EC) + 1432069702) ^ (v191 - ((2 * v191 + 1434355050) & 0x90D343FE) + 1932059828) ^ (v192 - ((2 * v192 + 959438592) & 0x73A548CC) - 697658394);
  v196 = (v165 >> 15) & 0x15E;
  v197 = BYTE2(v165);
  v198 = (v196 ^ 0x46) + (v197 ^ 0xB53FECDC);
  v199 = v198 - ((2 * v198 - 2115770440) & 0x8003A22A) + 20956401;
  v200 = (((2 * (v197 ^ 0x4D673307)) | 0x15AE3E76) - (v197 ^ 0x4D673307) - 181870395) ^ 0x14B03CCF;
  v201 = *(_DWORD *)(v89 + 4 * ((v200 - ((2 * v200) & 0x8ED03720) + 1198013328) ^ 0x14682BC5));
  v202 = v201 ^ 0xB73D9DB1;
  v203 = (v201 ^ 0xB73D9DB1) + (v201 ^ v199 ^ 0x88FB35B) + 1;
  v204 = *(_DWORD *)(v85 + 4 * (HIBYTE(v167) ^ 0xC2))
       + (((HIBYTE(v167) ^ 0xC6) - 2111878028) ^ 0xA2084189)
       - ((2 * ((HIBYTE(v167) ^ 0xC6) - 2111878028)) & 0x2E18EC)
       + 1;
  v205 = (v199 ^ (((6216 - 2 * v198) & 0x1C06 ^ 0xFC7FFFFF) - v198 + 887020072) ^ 0x29048FF5 ^ (v203
                                                                                              - 1667657500
                                                                                              + (~(2 * v203) | 0xC6CCDE39)))
       + v202;
  v206 = *(_DWORD *)(v86
                   + 4
                   * (((BYTE1(v146) ^ 0x80301DBD)
                     + ((v146 >> 8) & 0x6E ^ 0x2F836042)
                     - ((BYTE1(v146) ^ 0x80301DBD) & 0x30006E)) ^ 0xAF837D07));
  v207 = *(_DWORD *)(v90 + 4 * (v155 ^ 0x75u));
  v208 = v207 ^ (v207 >> 6) ^ (v207 >> 3) ^ (v206 - 2 * ((v206 + 479719296) & 0x6E787E1E ^ v206 & 8) - 1961857642) ^ (v204 - ((2 * v204 + 309855834) & 0x6B0708A0) - 21002371) ^ (v205 - ((2 * v205) & 0x1F4CDC5E) + 262565423);
  v209 = (~(v195 >> 15) & 0x166) + (BYTE2(v195) ^ 0xFF8F3304);
  v210 = (((2 * (BYTE2(v195) ^ 0x84)) & 0x1A8) - (BYTE2(v195) ^ 0x84) + 1829465131) ^ 0x2143A028;
  v211 = *(_DWORD *)(v85 + 4 * (HIBYTE(v208) ^ 0xDF))
       + (((HIBYTE(v208) ^ 0xDB) - 2111878028) ^ 0x84181881)
       - ((2 * ((HIBYTE(v208) ^ 0xDB) - 2111878028)) & 0x40E8AFC)
       + 1;
  v212 = v209 - 1413333945 + ((2 * v209 + 6576) & 0x1EDC ^ 0x97DCFFFF);
  v213 = (BYTE1(v189) ^ 0x7B | 0xF54956D5) - (BYTE1(v189) ^ 0x7B | 0xAB6A92A) + 179743018;
  v214 = *(_DWORD *)(v86 + 4 * (((v213 & 0x84004404 ^ 0x2964001) + (v213 & 0x714913FB) - 1) ^ 0xF7DF163B));
  v215 = *(_DWORD *)(v90 + 4 * (v176 ^ 0xBEu));
  v216 = v215 ^ *(_DWORD *)(v89 + 4 * ((v210 - ((2 * v210) & 0x80818EF2) + 1928591225) ^ 0x3EBB3B9C)) ^ (v215 >> 3) ^ (v215 >> 6) ^ (v214 - 2 * ((v214 + 479719296) & 0x46E44AFF ^ v214 & 0x14) + 1669085803) ^ v212 ^ (v211 - ((2 * v211 - 833070998) & 0xB6C5CC5E) + 1116672612);
  v217 = ((v216 >> 7) & 0x1F3F3F6 ^ 0xF3F3C6) + ((v216 >> 8) ^ 0xAC84021C);
  v218 = (((2 * (v217 + 5)) & 0x1A8)
        + ((((v216 >> 7) & 0xF6 ^ 0xC6) + (BYTE1(v216) ^ 0x1C) + 5) ^ 0x6F8FEFD4)
        - 1871704020)
       % 0x6A;
  v219 = ((2 * (BYTE2(v189) ^ 0x89A1E0D9)) & 0x40C124) - (BYTE2(v189) ^ 0x89A1E0D9) + 736071533;
  v220 = *(_DWORD *)(v85 + 4 * (HIBYTE(v195) ^ 0xBF))
       + (((HIBYTE(v195) ^ 0xBB) - 2111878028) ^ 0x21180CFA)
       - ((2 * ((HIBYTE(v195) ^ 0xBB) - 2111878028)) & 0x40E820A)
       + 1;
  v221 = ((v176 >> 8) & 0x88 ^ 0xA82C6181) + ((v176 >> 8) & 0x77) - 1;
  v222 = *(_DWORD *)(v86
                   + 4
                   * (((v221 & 0x280C4124) + (v221 ^ 0xA96C7BAC) - ((v221 ^ 0xA96C7BAC) & 0x1400A24) + 1082262528) ^ 0x688E55D0));
  v223 = *(_DWORD *)(v90 + 4 * (v208 ^ 0xA8u));
  v224 = v223 ^ *(_DWORD *)(v89 + 4 * (v219 ^ 0xA27E6F18)) ^ (v223 >> 3) ^ (v223 >> 6) ^ (v220
                                                                                          - ((2 * v220 - 1806143624) & 0x9EB5C0D0)
                                                                                          + 428283940) ^ (v222 - 2 * ((v222 + 479719296) & 0x1269F95F ^ v222 & 0x10) - 1358829361) ^ ((v219 ^ 0xA27E6FCD) - ((2 * (v219 ^ 0xA27E6FCD) + 207864086) & 0xD45A60E) + 2094314386);
  v225 = ((v224 >> 15) & 0x1F8CE ^ 0x8888) + (HIWORD(v224) ^ 0x7ADFB82B);
  if (((2 * (_BYTE)v218) & 0xF4) + (v218 ^ 0xE7DFE9FA) == -404755974)
    v217 = v217 + (v218 ^ 0xA4860B2C) - ((2 * (_BYTE)v218) & 0xA6) + 212;
  v868 = v217;
  v226 = (((2 * (v225 + 153)) & 0x1DE) + ((v225 - 103) ^ 0xFFDFBDEF) + 2114065) % 0x8D;
  v227 = (HIBYTE(v176) ^ 0xA2) - 2111878028;
  v228 = v227 ^ 0xA0408C1;
  v229 = (2 * v227) & 0x368A7C;
  v230 = ((v208 >> 15) & 0x17E ^ 0x6C) + (BYTE2(v208) ^ 0xA7F94689);
  v231 = (HIWORD(v208) & 0x3C ^ 0x4C4FCB31) + (HIWORD(v208) & 0xC3) - 1;
  v232 = ((v231 & 0x101D6 ^ 0x10002040) + (v231 ^ 0x8AC953B6) - ((v231 ^ 0x8AC953B6) & 0xC20608D6)) ^ 0x1481B1B3;
  v233 = v230 + 1958572450 + ((2 * v230 + 13208) & 0x2FAA ^ 0xB3FE7FFF);
  v234 = (((2 * v189) ^ 0x26F21F1A) - ((2 * ((2 * v189) ^ 0x26F21F1A)) & 0x12C) + 150) & 0x1AE;
  v235 = *(_DWORD *)(v85 + 4 * (HIBYTE(v176) ^ 0xA6)) + v228 - v229 + 1;
  v236 = *(_DWORD *)(v86 + 4 * ((((v195 >> 8) & 0x40 ^ 0x840) - ((v195 >> 8) & 0x40) + (BYTE1(v195) ^ 0x29)) ^ 0x81E));
  v237 = *(_DWORD *)(v163
                   + 4
                   * ((v189 ^ 0x3FFBF550)
                    + ((2 * v189) & 0x1BA ^ 0x11A)
                    + (v234 ^ 0x80618087)
                    + ((2 * v234) ^ 0xFFFFFEF3)
                    + 1067617018));
  v238 = (v237 & 0x3057D3A0 ^ 0x105691A0 | 0x8DAAC8B2) - (v237 & 0x3057D3A0 ^ 0x105691A0 | 0x7255374D) + 1918187341;
  v239 = (((v237 >> 3) & 0x1057D3A0 ^ 0xD8E804B9) - 1) ^ 0x58B01DD8;
  v240 = ((v238 & 0xF93DC420 ^ 0x48054429 | v238 & 0x6C23B92) - 1) ^ 0xF5FDDCBA | (((v237 >> 3) & 0xC080418 ^ 0x344E4418)
                                                                                 + ((v237 >> 3) & 0xFA82C58 ^ 0x9102A66)
                                                                                 - (((v237 >> 3) & 0xFA82C58 ^ 0x9102A66) & 0xC18063A)) ^ 0x3546C95C ^ (((2 * (v237 & 0xCFA82C58 ^ 0x49A82848)) & 0x83504020) - (v237 & 0xCFA82C58 ^ 0x49A82848) + 235376462) & 0xFFF8EDF8;
  v241 = v237 ^ *(_DWORD *)(v89 + 4 * v232) ^ (v236 - 2 * ((v236 + 479719296) & 0x4DA5547F ^ v236 & 2) - 365083651) ^ (((v240 - ((2 * v240) & 0x6E919570) - 1219966280) ^ (((2 * v239) | 0xE41BEC56) - v239 - 1913517611)) >> 3) ^ v233 ^ (v235 - ((2 * v235 + 41973738) & 0x23A26F7A) - 216960078);
  v242 = ((v176 >> 15) & 0x3A ^ 0x18) + (BYTE2(v176) ^ 0xE3BBAE11);
  v243 = ((HIWORD(v176) & 0x97 ^ 0x66F5276E) - (HIWORD(v176) & 0x68)) ^ 0x6FB966A;
  v244 = *(_DWORD *)(v85 + 4 * (HIBYTE(v189) ^ 0x17))
       + (((HIBYTE(v189) ^ 0x13) - 2111878028) ^ 0x11C48128)
       - ((2 * ((HIBYTE(v189) ^ 0x13) - 2111878028)) & 0x43699AE)
       + 1;
  v245 = *(_DWORD *)(v86
                   + 4
                   * (((BYTE1(v208) ^ 0x349055) - ((2 * (BYTE1(v208) ^ 0x349055)) & 0x210096) - 1957568181) ^ 0x8B6571BD));
  v246 = *(_DWORD *)(v163
                   + 4
                   * (((v195 ^ 0x43 | 0x5AC0DDFA)
                     - (v195 ^ 0x43 | 0xA53F2205)
                     - 1522589179) ^ 0x5AC0DDB2));
  v247 = v246 ^ *(_DWORD *)(v89 + 4 * ((((2 * v243) | 0x7418FD4E) - v243 - 973897383) ^ 0x5A02CF7Au)) ^ (v246 >> 3) ^ (v246 >> 6) ^ (v245 - 2 * ((v245 + 479719296) & 0x696EE35F ^ v245 & 1) + 101110494) ^ (v244 - ((2 * v244 + 855607068) & 0x6963A962) - 1909352385) ^ (v242 + 970237820 + ((2 * v242 + 220) & 0x21A ^ 0xB3DF3FFF));
  v248 = ((v241 >> 23) & 0x1AE ^ 0x12C) + (HIBYTE(v241) ^ 0xED7FC541);
  v249 = ((BYTE2(v216) ^ 0x67 | 0x73DF043C) - (BYTE2(v216) ^ 0x67 | 0x8C20FBC3) - 1943995453) ^ 0x337C8830;
  v250 = *(_DWORD *)(v86 + 4 * (BYTE1(v224) ^ 0xF8u));
  v251 = ((v247 ^ 0x49) - ((2 * (v247 ^ 0x49)) & 0x19A) - 1256827443) ^ 0x9FD619CD;
  v252 = *(_DWORD *)(v85
                   + 4
                   * ((v248 + 41) & 0x20 ^ 0x4D5FDCB2 ^ (((v248 + 41) & 0xDF)
                                                       + 1298128050
                                                       - ((2 * (v248 + 41)) & 0x12C)
                                                       + 4)))
       - v248;
  v253 = *(_DWORD *)(v163 + 4 * (((v251 | 0x586D617E) - (v251 | 0xA7929E81) - 1483563391) ^ 0x72AD2DB1));
  v254 = v253 ^ *(_DWORD *)(v89 + 4 * ((((2 * v249) & 0x22825F58) - v249 + 1857998931) ^ 0x2E1D5C16)) ^ (v253 >> 3) ^ (v253 >> 6) ^ (v250 - 2 * ((v250 + 479719296) & 0x450602F1 ^ v250 & 0x10) + 1637741153) ^ (((((2 * v249) & 0x22825F58) - v249 + 1857998931) ^ 0x2E1D5CC3) - ((2 * ((((2 * v249) & 0x22825F58) - v249 + 1857998931) ^ 0x2E1D5CC3) - 329006826) & 0xD2176C38) - 549611865) ^ (v252 - ((2 * v252 - 1387693004) & 0xD41FDF5A) - 1061900857);
  v255 = *(_DWORD *)(v85 + 4 * (HIBYTE(v247) ^ 0xE7))
       + (((HIBYTE(v247) ^ 0xE3) - 2111878028) ^ 0x9C204012)
       - ((2 * ((HIBYTE(v247) ^ 0xE3) - 2111878028)) & 0x43E1BDA)
       + 1;
  v256 = v255 - ((2 * v255 + 508037448) & 0x24667118) + 1633107248;
  v257 = ((v241 >> 15) & 0x1F4 ^ 0x1B0) + (BYTE2(v241) ^ 0xFFBFFF23);
  v258 = v257 - 1349185328 + ((2 * v257 + 14926114) & 0x246607C ^ 0x9FFFFFFF);
  v259 = *(_DWORD *)(v86
                   + 4 * (((v868 + 5) - 500282789 - ((2 * (v868 + 5)) & 0x182) + 102) ^ 0xE22E4A5B));
  v260 = ((v259 - 2014011368) ^ 0x94A34F68) - ((2 * ((v259 - 2014011368) ^ 0x94A34F68)) & 0x9AC275EC);
  v261 = 2 * v259 - ((4 * v259 + 533889120) & 0x225CD03C) + 1092069454;
  v262 = (v260 + 1298217718) ^ 0x4D613AF6;
  v263 = (v261 & 0x29469ED0 ^ 0x5C5DD52F) + v262 + ((2 * v261) & 0x52853820 ^ 0x42041020) - 2103172415;
  v264 = v263 - 2 * (v263 & 0x1E34CFCE ^ v262 & 4) - 1640706102;
  v265 = (((2 * (v224 ^ 0x5C)) | 0xBBFDD9E4) - (v224 ^ 0x5C) - 1576987890) ^ 0x1DDAECFA;
  v266 = (((2 * v265) & 0x3F87A5EC) - v265 - 532927223) ^ 0xA0182D9F;
  v267 = ((v247 >> 15) & 0xF8 ^ 0xB8) + (BYTE2(v247) ^ 0xFEDDDBA1);
  v268 = v267 - ((2 * v267 + 782764574) & 0x20036E68) + 283360323;
  v269 = *(_DWORD *)(v85 + 4 * (HIBYTE(v224) ^ 0x40))
       + (((HIBYTE(v224) ^ 0x44) - 2111878028) ^ 0x88001982)
       - ((2 * ((HIBYTE(v224) ^ 0x44) - 2111878028)) & 0x43E88FA)
       + 1;
  v270 = v269 - ((2 * v269 - 964143512) & 0xDFC7ABE2) - 752352987;
  v271 = (((v241 << 17) ^ 0x9FB40000) - ((2 * ((v241 << 17) ^ 0x9FB40000)) & 0x28940000) + 340459116) & 0xFE000000 ^ 0xF4000000;
  v272 = ((2 * v271) & 0xCFFFFFFF) - v271 + 417301376;
  v273 = *(_DWORD *)(v163 + 4 * v266) ^ *(_DWORD *)(v89
                                                    + 4
                                                    * (((BYTE2(v241) ^ 0x61)
                                                      + (HIWORD(v241) & 0x30 ^ 0x7E81F10)
                                                      - ((BYTE2(v241) ^ 0x61) & 0x30)) ^ 0x7E81F5D)) ^ (*(_DWORD *)(v163 + 4 * v266) >> 3) ^ (*(_DWORD *)(v163 + 4 * v266) >> 6) ^ v258 ^ v256 ^ v264;
  v274 = ((v272 | (v241 >> 15)) & 0xFE000001 ^ 0xF8000000)
       - 2 * (((v272 | (v241 >> 15)) & 0xFE000001 ^ 0xF8000000) & 0x28000001 ^ (v241 >> 15) & 1)
       + 672280952;
  HIDWORD(v275) = v274 ^ 0x1960998;
  LODWORD(v275) = v274 ^ 0xB6000000;
  v276 = *(_DWORD *)(v86
                   + 4
                   * (((v275 >> 25) - ((2 * (v275 >> 25)) & 0x3764064A) - 1682832603) ^ 0x59AE73F0));
  v277 = *(_DWORD *)(v163
                   + 4
                   * ((((2 * (v216 ^ 0x240A6A8)) | 0x52023A18)
                     - (v216 ^ 0x240A6A8)
                     + 1459544820) ^ 0xAB41BBBA));
  HIDWORD(v275) = v277 ^ 0x6AA4C993;
  LODWORD(v275) = v277;
  v278 = v275 >> 31;
  v279 = v276 - 2 * ((v276 + 479719296) & 0x71770466 ^ v276 & 4) - 1911622686;
  HIDWORD(v275) = ~v278;
  LODWORD(v275) = (v278 - ((2 * v278) & 0x35940628) + 449446676) ^ (v277 >> 2) ^ 0x66994304;
  LOBYTE(v253) = (v225 + 1) & 3;
  v280 = (((v275 >> 1) - ((2 * (v275 >> 1)) & 0xDB943A7C) - 305521346) ^ 0x5EB72404) >> v253;
  v281 = (v226 ^ 0x66020109) - ((2 * (_WORD)v226) & 0x1EC) - 1995406797;
  v282 = ((v280 - ((2 * v280) & 0xA47964DA) + 1379709549) ^ 0x523CB26D) >> (v253 ^ 3);
  v283 = v282 - ((2 * v282) & 0x61450400) - 1331527168;
  if (((2 * v226) & 0x126) + (v226 ^ 0xFFFFBF93) != -16493)
    v281 = -283999428;
  v284 = v225 - 576612259 + v281;
  v285 = v277 ^ *(_DWORD *)(v89 + 4 * (BYTE2(v247) ^ 8u)) ^ v268 ^ v270 ^ v283 ^ v279;
  v286 = (2 * v284) & 0x136;
  v287 = (2 * v284) & 0x36;
  v284 = v284;
  v288 = *(_DWORD *)(v89 + 4 * ((v284 - v287 - 1455211749) ^ 0xA9433BCE));
  v289 = (v288 & 0x8000 | v286)
       + (v284 ^ 0xFB2F6E9B)
       + 73634321
       - ((2 * ((v288 & 0x8000 | v286) + (v284 ^ 0xFB2F6E9B) + 73634321) + 758955966) & 0x2861FC0E)
       + 181362150;
  v290 = *(_DWORD *)(v85 + 4 * (HIBYTE(v216) ^ 0x79))
       + (((HIBYTE(v216) ^ 0x7D) - 2111878028) ^ 0x81C11804)
       - ((2 * ((HIBYTE(v216) ^ 0x7D) - 2111878028)) & 0x43C8BF6)
       + 1;
  v291 = ((v288 & 0xFFFF7FFF ^ 0x60F40955 | 0x336AD435) - (v288 & 0xFFFF7FFF ^ 0x60F40955 | 0xCC952BCA) - 862639158) ^ 0xA4EAC031;
  v292 = *(_DWORD *)(v86 + 4 * (BYTE1(v247) ^ 0xF1u));
  v293 = *(_DWORD *)(v163 + 4 * (v241 ^ 0xDAu));
  v294 = v293 ^ (v293 >> 6) ^ (v293 >> 3) ^ (v292 - 2 * ((v292 + 479719296) & 0x7E2E898E ^ v292 & 8) + 449214726) ^ (v290 - ((2 * v290 - 754558620) & 0x8C05641E) + 797302465) ^ v289 ^ (v291 - ((2 * v291) & 0x64822472) - 1304358343);
  v295 = ((v294 >> 15) & 0x1FC ^ 0x10C) + (BYTE2(v294) ^ 0x2BDAEE79);
  v296 = *(_DWORD *)(v85 + 4 * (HIBYTE(v254) ^ 0x6B))
       + (((HIBYTE(v254) ^ 0x6F) - 2111878028) ^ 0x82C08262)
       - ((2 * ((HIBYTE(v254) ^ 0x6F) - 2111878028)) & 0x3E9B3A)
       + 1;
  v297 = v296 - ((2 * v296 + 285705384) & 0x1C5B7132) - 156140819;
  v298 = ((HIWORD(v294) & 0x60 ^ 0x9B4A5741) - (HIWORD(v294) | 0xFFFFFF60) - 2) ^ 0x994F5548;
  v299 = ((v298 | 0xBE32191D) - (v298 | 0x41CDE6E2) + 1104013026) ^ 0xBC371BD8;
  v300 = *(_DWORD *)(v86 + 4 * (BYTE1(v285) ^ 0xF8u));
  v301 = ((v254 >> 15) & 0x1EE ^ 0xEA) + (BYTE2(v254) ^ 0x9F5A4F82);
  v302 = *(_DWORD *)(v163 + 4 * (((v273 & 0x64 ^ 0x925) + (v273 & 0x9B) - 1) ^ 0x959));
  v303 = v302 ^ *(_DWORD *)(v89 + 4 * v299) ^ (v302 >> 3) ^ (v302 >> 6) ^ (v300
                                                                           - 2
                                                                           * ((v300 + 479719296) & 0x41A90EDF ^ v300 & 0x19)
                                                                           - 566165946) ^ v297 ^ (v295
                                                                                                - ((2 * v295 + 346940186) & 0x6C00E1D6)
                                                                                                + 14639736);
  v304 = *(_DWORD *)(v85 + 4 * (HIBYTE(v273) ^ 0x3B))
       + (((HIBYTE(v273) ^ 0x3F) - 2111878028) ^ 0xD3902405)
       - ((2 * ((HIBYTE(v273) ^ 0x3F) - 2111878028)) & 0x1E93F4)
       + 1;
  v305 = v304 - ((2 * v304 + 795361634) & 0x50ECCFD4) - 1070954341;
  v306 = *(_DWORD *)(v163
                   + 4
                   * (((v285 ^ 0x91) + 967145492 - ((2 * (v285 ^ 0x91)) & 0x120) + 124) ^ 0x39A57814u));
  v307 = (v306 ^ 0x6AA4C993)
       + (((v306 ^ 0x980FAF5E ^ (v306 >> 3)) + 1) ^ 0x63E585FF)
       + ((2 * ((v306 ^ 0x980FAF5E ^ (v306 >> 3)) + 1)) & 0xC7CB0BFE)
       - 1675986431;
  v308 = ((v306 >> 3) ^ (((v306 >> 3) ^ 0xF2AB66CD) - ((2 * ((v306 >> 3) ^ 0xF2AB66CD) + 2) & 0x4AFD1824) + 629050387) ^ 0x1173F632 ^ (v307 - ((2 * v307) & 0x72B3C624) + 962192146))
       + (v306 ^ 0x6AA4C993);
  v309 = *(_DWORD *)(v86 + 4 * (BYTE1(v294) ^ 0xB1u));
  v310 = (v308 ^ 0x77FFDEC7) - 2013259390 + ((2 * v308) & 0xEFFFBD8E) + 1975;
  v311 = ((v273 >> 15) & 0x1C6 ^ 6) + (BYTE2(v273) ^ 0x6CEDB5F4);
  v312 = (((2 * (BYTE2(v273) ^ 0x90)) | 0x25781E2E) - (BYTE2(v273) ^ 0x90) - 314314519) ^ 0x739E0A97;
  v313 = v306 ^ *(_DWORD *)(v89
                          + 4
                          * ((((2 * (BYTE2(v254) ^ 0xB0)) | 0x801BBB34) - (BYTE2(v254) ^ 0xB0) - 1074650522) ^ 0x400DDD8A)) ^ (v309 - 2 * ((v309 + 479719296) & 0x34C925BE ^ v309 & 2) - 782166724) ^ v305 ^ (v301 + 163949865 + ((2 * v301 + 8488) & 0x3928 ^ 0x9BBFFFFF)) ^ ((v310 >> 3) - ((v310 >> 2) & 0x16EDB654) + 1266080554);
  v314 = *(_DWORD *)(v85 + 4 * (HIBYTE(v285) ^ 0xC2))
       + (((HIBYTE(v285) ^ 0xC6) - 2111878028) ^ 0x4690102)
       - ((2 * ((HIBYTE(v285) ^ 0xC6) - 2111878028)) & 0x42C99FA)
       + 1;
  v315 = *(_DWORD *)(v86 + 4 * (((BYTE1(v254) ^ 0x80) - ((2 * (BYTE1(v254) ^ 0x80)) & 0x12A) + 2453) ^ 0x92Au));
  v316 = *(_DWORD *)(v163
                   + 4
                   * ((((2 * (v294 ^ 0x4E)) | 0x7D22336) - (v294 ^ 0x4E) + 1813442149) & 0x1FFFFFFF ^ 0x13E91145u));
  v317 = (v316 ^ (v316 >> 3) ^ 0x67F050A1) >> (HIBYTE(v155) & 3 ^ 2);
  v318 = ((v317 - ((2 * v317) & 0xF28C03FE) + 2034631167) ^ 0x794601FF) >> (HIBYTE(v155) & 3 ^ 1);
  v319 = *(_DWORD *)(v89 + 4 * ((v312 - ((2 * v312) & 0xDF6DA338) + 1874252188) ^ 0xE94D44E)) ^ v316 ^ (v315 - 2 * ((v315 + 9957248) & 0x17C08EC ^ v315 & 4) - 1642858392) ^ (v318 - ((2 * v318) & 0xEA6CBEAA) - 180986027) ^ (v311 - 1838312675 + ((2 * v311 + 21840) & 0x50E8 ^ 0xFFBD7FFF)) ^ (v314 - ((2 * v314 + 230066024) & 0x2CAB7B96) - 47120001) ^ 0x9A3A416;
  v320 = ((v285 >> 15) & 0x1DE ^ 0x18E) + (BYTE2(v285) ^ 0x3EBDF638);
  v321 = (((2 * (BYTE1(v273) ^ 0x65)) | 0xABDD0D8C) - (BYTE1(v273) ^ 0x65) - 1441695430) ^ 0x55FA1E6E;
  v294 >>= 24;
  v322 = ((2 * ((v294 ^ 0xD8) - 2111878028)) & 0x169BFA) + (((v294 ^ 0xD8) - 2111878028) ^ 0xEDEBDFFD);
  v323 = ((HIWORD(v285) & 0x35 ^ 0x20004625) + (HIWORD(v285) & 0xCA ^ 0x21198B) - 1) ^ 0x80257F60;
  v324 = *(_DWORD *)(v85 + 4 * (v294 ^ 0xDC))
       + v322
       + ((2 * v322 + 606617606) ^ 0x290A0009)
       - ((2 * (2 * v322 + 606617606)) & 0x2DEBFFEC)
       + 2071968728;
  v325 = *(_DWORD *)(v86 + 4 * ((v321 - ((2 * v321) & 0x2778EC02) - 1816365567) ^ 0x93A8EE72));
  v326 = *(_DWORD *)(v163
                   + 4
                   * (((v254 ^ 0xF9)
                     + (v254 & 0x16 ^ 0xBBDDD406)
                     - ((v254 ^ 0xF9) & 0x16)) ^ 0xBBDDD48A));
  v327 = ((v326 << 16) ^ 0xC9930000) - ((2 * ((v326 << 16) ^ 0xC9930000)) & 0xE2000000) + 1895867101;
  v328 = ((v327 & 0xFFF80000 ^ 0xC9780000)
        + (v327 & 0xE7D80000 ^ 0x26847992)
        - ((v327 & 0xFFF80000 ^ 0xC9780000) & 0xE7D80000)) ^ 0xCFBC599A;
  v329 = (v328 - ((2 * v328) & 0x11900010) - 2000053672) ^ 0x18D1BA50 | HIWORD(v326) ^ 0x6AA4;
  HIDWORD(v330) = v326 ^ 0x993;
  LODWORD(v330) = v326 ^ 0x6AA4C000;
  v331 = (v329 - ((2 * v329) & 0x8DA06AE6) - 959433357) ^ ((v330 >> 13) - ((2 * (v330 >> 13)) & 0x9246A5EA) - 920431883);
  HIDWORD(v330) = v331 ^ 0x494D7;
  LODWORD(v330) = v331 ^ 0x93780000;
  v332 = v326 ^ *(_DWORD *)(v89 + 4 * ((v323 - ((2 * v323) & 0x40085E3E) - 370790625) ^ 0x49E20FD2)) ^ (v320 + 187448793 + ((2 * ((v320 + 2460) & 0x143E ^ (v320 | 0xFFFFFFFD))) ^ 0xA4608005)) ^ (v325 - 2 * ((v325 + 77066112) & 0x627C5FD ^ v325 & 0x18) - 1564494491) ^ (((v330 >> 19) - ((2 * (v330 >> 19)) & 0x44C0DA30) + 576744728) >> 3) ^ (v324 - ((2 * v324 + 832393650) & 0x698EBF12) - 1919547294);
  v333 = ((v313 >> 15) & 0x197B6 ^ 0x10310) + (HIWORD(v313) ^ 0xE7BB7A57);
  v334 = (((2 * (v333 + 37)) & 0xF6)
        + ((((v313 >> 15) & 0xB6 ^ 0x10) + (BYTE2(v313) ^ 0x57) + 37) ^ 0xFEDD7D7B)
        + 19038853)
       % 0xF5;
  v335 = (((2 * HIBYTE(v319)) ^ 0x1C4) - 2 * (((2 * HIBYTE(v319)) ^ 0x1C4) & 0x5E ^ (2 * HIBYTE(v319)) & 8) + 215) & 0xE8;
  v336 = (HIBYTE(v319) ^ 0x821F4C96) + (v335 ^ 0x6FDE6D2E) + ((2 * v335) ^ 0x180) - 1876848110;
  v337 = v336 ^ 0xA6500294;
  v338 = (2 * v336) & 0x1EBAD6;
  v339 = (((2 * (BYTE1(v303) ^ 0xC3)) & 0xFFFFFFCF) - (BYTE1(v303) ^ 0xC3) - 986914792) ^ 0x21AE3B42;
  v340 = ((2 * v334) & 0x1FC)
       + (v334 ^ 0xEFBFFAFE)
       + ((2 * (v333 + (v334 ^ 0xFFFFFF17) - ((2 * v334) & 0xD0) + 14)) & 0x1DC)
       + ((v333 + (v334 ^ 0x17) - ((2 * v334) & 0xD0) + 14) ^ 0x77B55EEE);
  v341 = v340 - ((2 * v340 + 823479336) & 0xFE892634) - 1748027090;
  v342 = *(_DWORD *)(v85 + 4 * (HIBYTE(v319) ^ 0xE6)) + v337 - v338 + 1;
  v343 = *(_DWORD *)(v86 + 4 * ((((2 * v339) | 0x36218C06) - v339 - 454084099) ^ 0xFF921D0E));
  v344 = *(_DWORD *)(v163
                   + 4
                   * ((((((v332 & 0x24 ^ 0x50AC8621) - 1) & 0x50248024 | v332 & 0xDB) ^ 0x3BFDE7E4) - 0x800000) ^ 0x6B5967A1));
  v345 = v344 ^ (v344 >> 6) ^ (v344 >> 3) ^ (v343 - 2 * ((v343 + 211283840) & 0x9665DDC ^ v343 & 0x18) - 1510060732) ^ (v342 - ((2 * v342 - 1981250492) & 0xF0952608) + 1027527974) ^ *(_DWORD *)(v89 + 4 * (v341 ^ 0xFF4493CF)) ^ ((v341 ^ 0xFF44931A) - ((2 * (v341 ^ 0xFF44931A) + 744734998) & 0x2065E710) + 107271187);
  v346 = ((v345 >> 23) & 0xFA ^ 0x98) + (HIBYTE(v345) ^ 0x7FFBEE33);
  v347 = (v346 - 2147217021) % 0x96u;
  v348 = ((v303 >> 15) & 0x17A ^ 0x20) + (BYTE2(v303) ^ 0x77FDC7EF);
  v349 = (((2 * (BYTE2(v303) ^ 0x39)) | 0xFE93B6B6) - (BYTE2(v303) ^ 0x39) - 2135546715) ^ 0x7CEF9512;
  v350 = *(_DWORD *)(v85 + 4 * (HIBYTE(v313) ^ 0xB5))
       + (((HIBYTE(v313) ^ 0xB1) - 2111878028) ^ 0x624D8080)
       - ((2 * ((HIBYTE(v313) ^ 0xB1) - 2111878028)) & 0x249AFE)
       + 1;
  v351 = ((2 * (BYTE1(v332) ^ 0x3B)) | 0xE0630ED8) - (BYTE1(v332) ^ 0x3B) + 265189524;
  v352 = *(_DWORD *)(v86 + 4 * (((v351 & 0xF00007B2 ^ 0x44440B3) + (v351 & 0x31884D) - 1) ^ 0xF475C710));
  v353 = *(_DWORD *)(v163 + 4 * (v319 ^ 0x83u));
  v354 = v353 ^ *(_DWORD *)(v89 + 4 * ((((2 * v349) | 0xCBFB9716) - v349 - 1711131531) ^ 0x665B857C)) ^ (v353 >> 3) ^ (v353 >> 6) ^ (v350 - ((2 * v350 + 300779628) & 0xFC3D9CC2) + 118854295) ^ (v352 - ((2 * v352 + 959438592) & 0x3E304B78) - 1146088132) ^ (v348 + 1863040127 + ((2 * v348 + 12700) & 0x4760 ^ 0x1FDCFFFF));
  v355 = ((v354 >> 15) & 0x1FCB6 ^ 0x8096) + (HIWORD(v354) ^ 0xBFBABF90);
  v356 = v346 - 1036;
  v357 = v346 + (v347 ^ 0x862) - ((2 * v347) & 0x13A) - 3182;
  if (((2 * (_WORD)v347) & 0x1DC) + (v347 ^ 0xCF6F7BEE) == -814777362)
    v358 = v357;
  else
    v358 = v356;
  v359 = (((2 * (v355 + 165)) & 0x12E) + ((v355 - 91) ^ 0x9F96B297) + 1617513833) % 0x67;
  v360 = ((2 * v359) & 0xFC) + (v359 ^ 0x7FE7EFFE) == 2145906686;
  v361 = (v875 ^ 0x8BE3214F) & 0x44AB0CA8 ^ 0x231E8AD5 ^ (((v875 ^ 0x8BE3214F) & 0x44ABF357)
                                                                      - ((v875 ^ 0x8BE3214F) & 0xAA312)
                                                                      + ((v874 + 22096626) ^ (v875 ^ 0x8BE3214F) & 0xAA312));
  v362 = -1802333311 * v361 - ((690300674 * v361) & 0x3C61564A) + 506506021;
  v363 = ((2 * (BYTE1(v362) ^ 0x7D)) & 0x196) - (BYTE1(v362) ^ 0x7D) - 1910045900;
  v364 = *((unsigned __int8 *)*(&off_10112C750 + (v874 ^ 0x21CD8CA8))
         + (((v363 & 0x8005B9BB ^ 0x13992) + (v363 ^ 0xF3FC802D) - ((v363 ^ 0xF3FC802D) & 0x3C89B9BB)) ^ 0xC1563AC7)
         - 1644016082);
  v365 = ((~(2 * v364 + 40) | 0xA9) + v364) ^ 0x98;
  v366 = (((v365 - ((2 * v365) & 0x2A)) << 8) + 1597445376) ^ 0x5F371500;
  v367 = *((unsigned __int8 *)*(&off_10112C750 + v870 + 1248)
         + ((((2 * (v362 ^ 0xC3)) | 0x1C464764) - (v362 ^ 0xC3u) - 237183922) ^ 0xE232358)
         - 970782142) ^ ((v362 ^ 0x58) + (~(2 * (v362 ^ 0x58) + 74) | 0x5D) - 9) ^ 0x26;
  v368 = (v367 - ((2 * v367) & 0x55555555) - 328605270) ^ 0xEC69E1AA | (v366 - ((2 * v366) & 0x13C68800) - 907852606) ^ 0xC9E344C2;
  v369 = *((unsigned __int8 *)*(&off_10112C750 + v870 + 1906) + (HIBYTE(v362) ^ 7) - 1269545490) ^ 0x35;
  v370 = (((v369 - ((2 * v369) & 0xAC)) << 24) + 1442840576) ^ 0x56000000;
  v371 = (v368 - ((2 * v368) & 0x374C09AE) - 609876777) ^ 0xDBA604D7 | (v370 - ((2 * v370) & 0xA4000000) + 1388427053) ^ 0x52C1B72D;
  v372 = *((unsigned __int8 *)*(&off_10112C750 + (v874 ^ 0x21CD9266))
         + ((((2 * (BYTE2(v362) ^ 0x880A3030)) & 0x1014010A) - (BYTE2(v362) ^ 0x880A3030) - 678072198) ^ 0x5F9F4082)
         - 1932364514);
  v373 = (HIWORD(v362) ^ 0x1EB3) + (HIWORD(v362) ^ 0x1E36);
  v374 = (((2 * v373) & 0xF6) + (v373 ^ 0xFB) - ((2 * (((2 * v373) & 0xF6) + (v373 ^ 0xFB)) + 10) & 0x1A) + 18) ^ v372;
  v375 = ((2 * v374) ^ 2) - 2 * (((2 * v374) ^ 2) & 0x3E ^ (2 * v374) & 4);
  v376 = (((v374 ^ 1) + 124) ^ 0x2F)
       + ((2 * ((v374 ^ 1) + 124)) & 0x5E)
       + ((v375 + 59) & 0xF8 ^ 0xBD)
       + ((2 * (v375 + 59)) & 0xF0 ^ 0x8F)
       + 77;
  v377 = (((v376 - ((2 * v376) & 0xEA)) << 16) + 1718943744) ^ 0x66750000;
  v378 = (v377 - ((2 * v377) & 0x55060000) - 1434229263) ^ 0xAA8365F1 | (v371 - ((2 * v371) & 0x138374E4) + 163691122) ^ 0x9C1BA72;
  v869 = v378 - ((2 * v378) & 0x5A749DBE) + 758795999;
  v379 = (BYTE2(v332) ^ 0xFB5D5FFD) + ((v332 >> 15) & 0x1EA);
  v380 = *(_DWORD *)(v85 + 4 * (HIBYTE(v303) ^ 0x8E))
       + (((HIBYTE(v303) ^ 0x8A) - 2111878028) ^ 0x82005924)
       - ((2 * ((HIBYTE(v303) ^ 0x8A) - 2111878028)) & 0x3E09B6)
       + 1;
  v381 = *(_DWORD *)(v86 + 4 * (BYTE1(v319) ^ 0xD4u));
  v382 = *(_DWORD *)(v163
                   + 4
                   * (((v313 ^ 0x55E310CA)
                     + (v313 & 0x6F ^ 0x8086425)
                     - ((v313 ^ 0x55E310CA) & 0x50C2006F)) ^ 0xD297449));
  v383 = v382 ^ *(_DWORD *)(v89
                          + 4
                          * (((BYTE2(v332) ^ 0xBA) - ((2 * (BYTE2(v332) ^ 0xBA)) & 0x28) - 146672364) ^ 0xF741F573)) ^ (v382 >> 3) ^ (v382 >> 6);
  v384 = (v381 - 2 * ((v381 + 479719296) & 0x34F2A43F ^ v381 & 0x16) + 1368036265) ^ (v380
                                                                                    - ((2 * v380 + 310892324) & 0x35BD27C4)
                                                                                    - 2078113932) ^ (v379 + 1700248695 + ((2 * v379 + 65836) & 0x677C0 ^ 0x3BFFFFFF));
  v385 = BYTE2(v319);
  v386 = ((v319 >> 15) & 0x17E ^ 0x132) + (BYTE2(v319) ^ 0x37FEAF66);
  v387 = ((v385 ^ 0xF4 | 0x4ADB52D5) - (v385 ^ 0xF4 | 0xB524AD2A) - 1255887574) ^ 0x528B52F0;
  v388 = *(_DWORD *)(v85 + 4 * (HIBYTE(v332) ^ 0xC5))
       + (((HIBYTE(v332) ^ 0xC1) - 2111878028) ^ 0x15481021)
       - ((2 * ((HIBYTE(v332) ^ 0xC1) - 2111878028)) & 0x42E9BBC)
       + 1;
  v389 = *(_DWORD *)(v86 + 4 * ((((v313 >> 8) & 0x30 ^ 0x411) + ((v313 >> 8) & 0xCF) - 1) ^ 0x415));
  v390 = ((v303 ^ 0x49) + (v303 & 0x63 ^ 0xDB477222) - ((v303 ^ 0x49) & 0x63)) ^ 0xDB475E69;
  v391 = *(_DWORD *)(v89 + 4 * ((((2 * v387) | 0xA1705E6E) - v387 - 1354247991) ^ 0x48E82FEA));
  v392 = *(_DWORD *)(v163 + 4 * ((v390 - ((2 * v390) & 0x503A) + 88848413) ^ 0x54B9434));
  v393 = v392 ^ 0xA2D42F69;
  v394 = v392 ^ 0xA2D42F69 ^ (v392 >> 3);
  v395 = v393 ^ v391 ^ (v386 - ((2 * v386 + 2087084440) & 0xA840EE1A) + 328968153) ^ (v388
                                                                                    - ((2 * v388 - 1409783510) & 0xDEF9AC6C)
                                                                                    + 1165560523) ^ (v389 - 2 * ((v389 + 479719296) & 0x12F18F56 ^ v389 & 0x10) - 1349943610);
  v396 = ((v394 << 24) ^ 0xC8000000) - ((v394 << 25) & 0xA000000) - 2053562172;
  v397 = ((v396 & 0x88000000) - (v396 & 0x70000000) + 1929018835) ^ 0xF2FA7DD3 | (v394 >> 8) ^ 0xC5247F;
  HIDWORD(v398) = v395 ^ 4;
  LODWORD(v398) = v395 ^ 0x46438480;
  v399 = ((v398 >> 5) - ((2 * (v398 >> 5)) & 0xD268006A) + 1765015605) ^ (v397 - ((2 * v397) & 0xD0071002) - 385644543);
  HIDWORD(v398) = v399 ^ 0x378834;
  LODWORD(v398) = v399 ^ 0x80000000;
  v400 = v383 ^ v384;
  v401 = (v398 >> 27) - ((2 * (v398 >> 27)) & 0x3A1781E) - 2117026801;
  v402 = ((v401 >> 15) & 0x176 ^ 0x120) + (BYTE2(v401) ^ 0x17EF9E6B);
  v403 = ((2 * (BYTE2(v401) ^ 0x5E)) & 0x19A) - (BYTE2(v401) ^ 0x5E) - 89828558;
  v404 = *(_DWORD *)(v85 + 4 * (HIBYTE(v400) ^ 0xA7))
       + (((HIBYTE(v400) ^ 0xA3) - 2111878028) ^ 0x80180028)
       - ((2 * ((HIBYTE(v400) ^ 0xA3) - 2111878028)) & 0x40E9BAE)
       + 1;
  v405 = (v404 - ((2 * v404 + 1448642844) & 0x44C2B30C) - 1920098796) ^ (v402
                                                                       - ((2 * v402 - 1132166240) & 0xE842F070)
                                                                       - 601114104) ^ *(_DWORD *)(v89
                                                                                                + 4
                                                                                                * (((v403 & 0x40044CA7 ^ 0x1100C83)
                                                                                                  + (v403 ^ 0x588FD334)
                                                                                                  - ((v403 ^ 0x588FD334) & 0xA2000CA7)) ^ 0x413ECCFA));
  v406 = *(_DWORD *)(v86 + 4 * (BYTE1(v345) ^ 0xD8u));
  HIDWORD(v398) = v406 + 1568640;
  LODWORD(v398) = v406 + 479719296;
  v407 = (v398 >> 23) - ((2 * (v398 >> 23)) & 0x974B26A6) + 1269142355;
  HIDWORD(v398) = v405 ^ 0x35BC0F;
  LODWORD(v398) = v405 ^ 0xE8800000;
  v408 = ((v398 >> 23) - ((2 * (v398 >> 23)) & 0xE92BC892) - 191503287) ^ v407;
  HIDWORD(v398) = v408 ^ 0x132;
  LODWORD(v398) = v408 ^ 0xA9B84600;
  v409 = ((v400 >> 15) & 0x1FC ^ 0x158) + (BYTE2(v400) ^ 0x3F5DD652);
  v410 = *(_DWORD *)(v163
                   + 4
                   * ((((2 * (v354 ^ 0xA3)) & 0x1E8) - (v354 ^ 0xA3) + 20235) ^ 0x4F2Bu));
  v411 = v410 ^ (v410 >> 6) ^ (v410 >> 3) ^ ((v398 >> 9) - ((2 * (v398 >> 9)) & 0x4260F428) - 1590658540);
  v412 = ((HIWORD(v400) & 0xC0 ^ 0x6D6BFAC0) - (HIWORD(v400) & 0xC0) + (BYTE2(v400) ^ 0x25)) ^ 0xE16B6240;
  v413 = *(_DWORD *)(v85 + 4 * (HIBYTE(v354) ^ 0x45))
       + (((HIBYTE(v354) ^ 0x41) - 2111878028) ^ 0x8000A060)
       - ((2 * ((HIBYTE(v354) ^ 0x41) - 2111878028)) & 0xFFFFFF3F)
       + 1;
  v414 = (((2 * (BYTE1(v401) ^ 0x4E)) | 0x49A1898) - (BYTE1(v401) ^ 0x4E) + 2108879796) ^ 0xA2795D3C;
  v415 = (v345 & 8) + (v345 ^ 0xFFFFFFAF) + (v345 | 0x7E6A0FF7) + 1;
  v416 = ((v415 & 0xC44271CF ^ 0x80007006) + (v415 ^ 0x5CDE8FF9) - ((v415 ^ 0x5CDE8FF9) & 0xC44271CF)) ^ 0xE6F6F16A;
  v417 = *(_DWORD *)(v86 + 4 * ((((2 * v414) | 0xF16E730A) - v414 - 2025273733) ^ 0x5883689D));
  v418 = v355 + (v359 ^ 0x6345) - ((2 * v359) & 0x74) + 22139;
  LOWORD(v359) = v358 + 143;
  v419 = (v358 - 113);
  LOWORD(v359) = 2 * v359;
  v420 = v419 - (v359 & 0x1BE) + 2130943199;
  v421 = ((v419 - (v359 & 0xF0) - 118600072) ^ 0x711B183)
       - ((2 * ((v419 - (v359 & 0xF0) - 118600072) ^ 0x711B183) + 10) & 0x987D933A)
       + 1279183266;
  v422 = *(_DWORD *)(v163 + 4 * v416) ^ *(_DWORD *)(v89
                                                    + 4
                                                    * ((((2 * v412) | 0xD3BF8586) - v412 + 371211581) ^ 0x65DF5A1F)) ^ (*(_DWORD *)(v163 + 4 * v416) >> 3) ^ (*(_DWORD *)(v163 + 4 * v416) >> 6) ^ (v417 - 2 * ((v417 + 479719296) & 0x76F4C13F ^ v417 & 4) - 1819496261) ^ (v413 - ((2 * v413 + 109529260) & 0x593F5FA) + 1846386515) ^ (v409 + 135615173 - ((2 * v409 + 1839731482) & 0xA0029FE2) + 1721);
  v423 = v420 ^ v421 ^ ((v420 ^ 0x80FC6320) - ((2 * (v420 ^ 0x80FC6320) + 2) & 0x6EBC6C88) + 928921157) ^ 0x4636306;
  v424 = v355 - 17984;
  if (v360)
    v424 = v418;
  v425 = v424 + 229;
  v426 = v425;
  v427 = v425 ^ 0x79F5EBF6;
  v425 *= 2;
  v428 = v427 + (v425 & 0x1EC);
  v429 = (v426 - (v425 & 0x90) + 544278600) ^ 0x2071089D;
  v430 = ((v401 & 0xEE ^ 0x4C | 0xDF3D5D52) - (v401 & 0xEE ^ 0x4C | 0x20C2A2AD) + 549626541) ^ 0x51BDFD40;
  v431 = *(_DWORD *)(v85 + 4 * (v423 + 4))
       + (((v420 ^ 0x7F039CDF) - 2111878028) ^ 0x801CF6)
       - ((2 * ((v420 ^ 0x7F039CDF) - 2111878028)) & 0xFEFFC612);
  v432 = (BYTE1(v400) ^ 0xFFFFFF6F) + 1065722467 + ((2 * BYTE1(v400)) | 0x80F4BB3C);
  v433 = *(_DWORD *)(v86
                   + 4
                   * (((v432 & 0x7046D6 ^ 0x3C852242) + (v432 ^ 0xC0725D9C) - ((v432 ^ 0xC0725D9C) & 0x806D6)) ^ 0x3CF566EA));
  v434 = ((v401 & 0x11 ^ 0xB138DBEF) + 1801175188 + ((2 * (v401 & 0x11)) ^ 0xBDCE7EF9)) ^ 0x4FAA2005 ^ (v430 - ((2 * v430) & 0x369337FC) + 457808895);
  v435 = ((2 * ((HIBYTE(v401) ^ 0x81) - 2111878028)) & 0x43E1BBE) + (((HIBYTE(v401) ^ 0x81) - 2111878028) ^ 0xCBDF9FDF);
  v436 = *(_DWORD *)(v163 + 4 * v434) ^ *(_DWORD *)(v89 + 4 * v429) ^ (*(_DWORD *)(v163 + 4 * v434) >> 3) ^ (*(_DWORD *)(v163 + 4 * v434) >> 6) ^ (v433 - 2 * ((v433 + 479719296) & 0x47F6DB27 ^ v433 & 6) - 460404063) ^ (v428 - 1538019313 + ((2 * v428 + 26922) & 0x76F2 ^ 0xBFDCFFFF)) ^ (v431 + 1 - 2 * ((v431 + 717498305) & 0x2C74DC0F ^ (v431 + 1) & 0xD) + 389612482);
  v437 = *(_DWORD *)(v86
                   + 4
                   * ((((2 * (BYTE1(v354) ^ 0x831D42)) & 0x24C) - (BYTE1(v354) ^ 0x831D42) - 627852071) ^ 0xDA10A19C));
  v438 = *(_DWORD *)(v85 + 4 * (HIBYTE(v401) ^ 0x85))
       + v435
       + ((2 * v435 + 1749073986) ^ 0x49603903)
       - ((2 * (2 * v435 + 1749073986)) & 0x6D3F8DF8)
       + 2147415870;
  v439 = (((2 * (v400 ^ 0xE0)) | 0x3A249112) - (v400 ^ 0xE0) - 487737481) ^ 0x1C264828;
  v440 = *(_DWORD *)(v163 + 4 * (((v439 | 0xBFB35C49) - (v439 | 0x404CA3B6) + 1078764470) ^ 0xBE875CAB));
  v441 = v440 ^ *(_DWORD *)(v89
                          + 4
                          * ((((2 * (BYTE2(v345) ^ 0x205060A0)) & 0x2001DC) - (BYTE2(v345) ^ 0x205060A0) + 686710801) ^ 0x8BE008Cu)) ^ (v440 >> 3) ^ (v440 >> 6) ^ (v437 - ((2 * v437 + 959438592) & 0x88C4E0BE) + 1627021279) ^ (((v345 >> 15) & 0x160 ^ 0x140) + (BYTE2(v345) ^ 0xFFFDDF58) + 2048617660 + ((2 * (((v345 >> 15) & 0x160 ^ 0x140) + (BYTE2(v345) ^ 0xFFFDDF58)) + 438) & 0x6D7C0 ^ 0xFBBFFFFF)) ^ (v438 - ((2 * v438 - 1408571090) & 0xB72B551C) - 1315234011);
  v442 = (char *)*(&off_10112C750 + (v874 ^ 0x21CD8A7D)) - 777197575;
  v443 = (char *)*(&off_10112C750 + (v874 ^ 0x21CD8E52)) - 1030486414;
  v444 = (((HIBYTE(v411) ^ 0x51) + 1327464014) ^ 0x9DFA44EE)
       + ((2 * ((HIBYTE(v411) ^ 0x51) + 1327464014)) & 0x1A3489DC)
       + *(_DWORD *)&v442[4 * (HIBYTE(v411) ^ 0x23)];
  v445 = v444 - ((2 * v444 - 310480968) & 0xD0DA7D02) + 1596749405;
  v446 = (v422 ^ 0x55 | 0x7805F445) - (v422 ^ 0x55 | 0x87FA0BBA) - 2013656134;
  v447 = (v446 & 0x80420BC ^ 0x48020AD) + (v446 & 0x7001D743);
  v448 = ((BYTE1(v436) ^ 0xCB) + ((v436 >> 8) & 0xF7 ^ 0x82D88B34) - ((BYTE1(v436) ^ 0xCB) & 0xFFFFFFF7)) ^ 0xC3F029F7;
  v449 = (((2 * v448) & 0x4152C4) - v448 - 753056099) ^ 0x9235E46E;
  v450 = (char *)*(&off_10112C750 + (v874 ^ 0x21CD8ACF)) - 544487771;
  v451 = (char *)*(&off_10112C750 + (v874 ^ 0x21CD9167)) - 1588126659;
  v452 = (HIBYTE(v422) ^ 0x6F) + 1327464014;
  v453 = v452 ^ 0x1F1E73F9;
  v454 = (2 * v452) & 0x1E3CE7F2;
  v455 = (((2 * (BYTE2(v411) ^ 0x6E)) & 0xA2) - (BYTE2(v411) ^ 0x6E) + 975818414) ^ 0x36C90E3C;
  v456 = (((v441 >> 8) & 0xB8) + (BYTE1(v441) ^ 0xFFFFFFB9) + (BYTE1(v441) | 0xFC2B5B47) + 1) ^ 0x665B4BE7;
  v457 = (((2 * v456) | 0x77F8D63C) - v456 + 1141085410) ^ 0x218C7B97;
  v458 = v453 + v454 + *(_DWORD *)&v442[4 * (HIBYTE(v422) ^ 0x1D)];
  v459 = v458 - ((2 * v458 + 1798705570) & 0x690B0C6A) + 706776838;
  v460 = ((2 * (v436 ^ 0x9C72A365)) | 0xFBEAC1BE) - (v436 ^ 0x9C72A365) - 2113233119;
  v461 = ((v436 ^ 0x2A | 0x48D4D488) - (v436 ^ 0x2A | 0xB72B2B77) - 1221907593) ^ 0x48D4D465;
  v462 = ((HIWORD(v422) & 0xA4 ^ 0x65419885) - (HIWORD(v422) | 0xFFFFFFA4) - 2) ^ 0x4141B9A4;
  v463 = (((HIBYTE(v436) ^ 0x41) + 1327464014) ^ 0xBFDE7FBB)
       + ((2 * ((HIBYTE(v436) ^ 0x41) + 1327464014)) & 0x1E3CFF76)
       + *(_DWORD *)&v442[4 * (HIBYTE(v436) ^ 0x33)];
  v464 = ((v441 ^ 0x72) + (v441 & 0x7C ^ 0x4C96F90C) - ((v441 ^ 0x72) & 0x7C)) ^ 0x9DD99BC7;
  v465 = BYTE2(v436);
  v466 = (v465 ^ 0x8419A8B3) - ((2 * (v465 ^ 0x8419A8B3)) & 0x51EA) + 285632757;
  v467 = *(_DWORD *)&v450[4 * (BYTE1(v411) ^ 5)] ^ *(_DWORD *)&v451[4
                                                                  * (((v441 ^ 0x1B8105)
                                                                    - ((2 * (v441 ^ 0x1B8105)) & 0x3701F4)
                                                                    - 1512312070) ^ 0xA5C073EE)] ^ ((v462 | 0xE8822D15)
                                                                                                  - (v462 | 0x177DD2EA)
                                                                                                  + 394121962) ^ (v464 - ((2 * v464) & 0x8A8F02) - 1932146815) ^ *(_DWORD *)&v443[4 * ((((2 * (BYTE2(v422) ^ 0xAA)) & 0x152) - (BYTE2(v422) ^ 0xAA) + 2390) ^ 0x972)];
  v468 = *(_DWORD *)&v443[4
                        * ((((2 * (BYTE2(v441) ^ 0x22908A94)) & 0x5000136) - (BYTE2(v441) ^ 0x22908A94) - 310530460) ^ 0xCFED2471)];
  v469 = *(_DWORD *)&v443[4
                        * ((543814923 - (BYTE2(v411) ^ 0x3B) + ((2 * (BYTE2(v411) ^ 0x3B)) & 0x104) + 114) ^ 0x2069F50B)];
  LODWORD(v443) = *(_DWORD *)&v443[4
                                 * ((((2 * (v465 ^ 0x629040AE)) | 0xA21EBF0A) - (v465 ^ 0x629040AE) - 1359961989) ^ 0x339F1FB9)];
  v470 = v467 ^ (v463 - ((2 * v463 - 1447691746) & 0x9DDA1F1C) - 1547170659);
  LODWORD(v442) = (((HIBYTE(v441) ^ 0xE) + 1327464014) ^ 0x99EB6FFB)
                + ((2 * ((HIBYTE(v441) ^ 0xE) + 1327464014)) & 0x1216DFF6)
                + *(_DWORD *)&v442[4 * (HIBYTE(v441) ^ 0x7C)];
  v471 = ((BYTE1(v422) ^ 0x57D92384 | 0x1CA2253B) - (BYTE1(v422) ^ 0x57D92384 | 0xE35DDAC4) - 480388412) ^ 0xDF58C6D5;
  v472 = ((v411 & 0xC1) + (v411 & 0x3E ^ 0xF313A21) - 1) ^ 0x9ED50A03;
  v473 = *(_DWORD *)&v451[4
                        * (((v411 ^ 0xD2 | 0xDA4AFC87)
                          - (v411 ^ 0xD2 | 0x25B50378)
                          + 632619896) ^ 0xDA4AFCE5)];
  v871 = v869 ^ 0x1CE3271F;
  v474 = v869 ^ 0x1CE3271F ^ v468 ^ *(_DWORD *)&v451[4 * ((v447 - 1) ^ 0x7C85D42D)] ^ (v447 - 1) ^ ((BYTE2(v441) ^ 0x34101695)
                                                                                                  + (HIWORD(v441) & 0xEE ^ 0x8B85096A)
                                                                                                  - ((BYTE2(v441) ^ 0x34101695) & 0x1016EE)) ^ v445 ^ 0x7029D441 ^ *(_DWORD *)&v450[4 * v449];
  v475 = v469 ^ *(_DWORD *)&v450[4 * v457] ^ v459 ^ v460 ^ *(_DWORD *)&v451[4 * v461] ^ (((2 * v455) & 0x1880853E)
                                                                                       - v455
                                                                                       + 296454496) ^ 0xFC8ADB27 ^ v470;
  LODWORD(v451) = v474 ^ v475;
  HIDWORD(v476) = v474 ^ v475 ^ 0x8F;
  LODWORD(v476) = v474 ^ v475 ^ 0xC5A55E00;
  v477 = v869 ^ v473 ^ ((_DWORD)v442 - ((2 * (_DWORD)v442 - 174319202) & 0xA937D642) + 1332344816) ^ (v472 - ((2 * v472) & 0x21480306) + 1420199299) ^ *(_DWORD *)&v450[4 * ((((2 * v471) | 0x217CD30) - v471 - 17557144) ^ 0x95282645)] ^ ((v466 ^ 0x3F5FCDB5 | v443 ^ 0x829F05D6) - ((2 * (v466 ^ 0x3F5FCDB5 | v443 ^ 0x829F05D6)) & 0xA334A0F4) + 1369067642) ^ (((v466 ^ 0x3F5FCDB5) & (v443 ^ 0x821F05D6)) - ((2 * ((v466 ^ 0x3F5FCDB5) & (v443 ^ 0x821F05D6))) & 0x79A52700) + 1020433280) ^ 0x3F2C7C75;
  v478 = (v476 >> 9) - ((2 * (v476 >> 9)) & 0x94FAD682) + 1249733441;
  v479 = v470 ^ v869 ^ 0x1CE3271F;
  HIDWORD(v476) = v479 ^ 0xFFFFFFE3;
  LODWORD(v476) = v479 ^ 0xE6683000;
  v480 = v478 ^ ((v476 >> 9) + 987491649 + (~(2 * (v476 >> 9)) | 0x8A48257F));
  HIDWORD(v476) = v480 ^ 0x91EC1;
  LODWORD(v476) = v480 ^ 0x8000000;
  v481 = v477 ^ v475;
  v482 = ((v476 >> 23) - ((2 * (v476 >> 23)) & 0x6C8AFD02) + 910524033) ^ v477;
  v483 = (char *)*(&off_10112C750 + (v874 ^ 0x21CD8639)) - 692597827;
  v484 = (char *)*(&off_10112C750 + (v874 ^ 0x21CD8A2D)) - 1974534583;
  v485 = (char *)*(&off_10112C750 + (v874 ^ 0x21CD8FA0)) - 123020250;
  v486 = (v451 ^ 0x52578995) >> 24;
  v487 = v486 ^ 0x6D;
  v488 = (v486 ^ 0xF0) + 652284300 + ((2 * (v486 ^ 0xF0) + 988) & 0x73A ^ 0x6FBDBFFF);
  v489 = (((2 * (v474 ^ 0xF6)) & 0xD4) - (v474 ^ 0xF6) + 2147149973) & 0x64000FFF;
  v490 = (((2 * (v474 ^ 0x1975223C)) | 0x13EC43A8) - (v474 ^ 0x1975223C) - 167125460) ^ 0x14C21217;
  v491 = ((v490 | 0x2E46B8DC) - (v490 | 0xD1B94723) - 776386781) ^ 0x2A07A9B4;
  v492 = (char *)*(&off_10112C750 + (v874 ^ 0x21CD8C3F)) - 753063307;
  v493 = (v489 ^ 0x640008D1)
       + (((v489 ^ 0xE89AA825) + 1) ^ 0xFD65E6CF)
       + ((2 * ((v489 ^ 0xE89AA825) + 1)) & 0xD8014D9E)
       + 43653425;
  v494 = *(_DWORD *)&v485[4 * (BYTE1(v482) ^ 0xF4)];
  v495 = ((2 * ((v494 >> 3) & 0x1A323DBE ^ 0x120010BC)) | 0x8165DB02)
       - ((v494 >> 3) & 0x1A323DBE ^ 0x120010BC)
       + 1062015615;
  v496 = *(_DWORD *)&v484[4 * v487] ^ *(_DWORD *)&v483[4 * (BYTE2(v481) ^ 0x85)] ^ *(_DWORD *)&v492[4 * v491] ^ v494 ^ v488 ^ (v493 - ((2 * v493) & 0xB10EC50E) - 662216057) ^ ((v495 & 0x36D101DE ^ 0x3441005F) + (v495 & 0xC82EFE20 ^ 0xC822CE01) - 2);
  v497 = (((2 * HIBYTE(v481)) ^ 0x72) + (~(2 * ((2 * HIBYTE(v481)) ^ 0x72)) | 0xFFFFFF8F) + 57) & 0x1DC;
  v498 = (HIBYTE(v481) ^ 0x5A2DA9D7) + (v497 ^ 0x6F7DFDE5) + ((2 * v497) ^ 0x30) - 1870527997;
  v499 = v498 - ((2 * v498) & 0x10023008) + 684939268;
  v500 = (BYTE1(v474) ^ 0x1A) + ((v474 >> 8) & 0x28 ^ 0xF0B04120) - ((BYTE1(v474) ^ 0x1A) & 0x28);
  v501 = (((v451 ^ 0x52578995) & 0x43 ^ 0xD7150240) + ((v451 ^ 0x52578995) & 0xBC ^ 0xA9) - 1) ^ 0xD2452353;
  v502 = (v451 ^ 0xA7 | 0x2AA90C6F) - (v451 ^ 0xA7 | 0xD556F390) - 715721840;
  v503 = *(_DWORD *)&v485[4 * (((v500 & 0x7BAE ^ 0x24010109) - (v500 & 0x451) - 1051851696) ^ 0xE54F449B)];
  v504 = (((v501 | 0xB56311B0) - (v501 | 0x4A9CEE4F) + 1251798607) ^ 0xB0333012)
       + (((((v501 | 0xB56311B0) - (v501 | 0x4A9CEE4F) + 1251798607) ^ 0x3CA990E6) + 1) ^ 0xF7EAAD3B)
       + ((2 * ((((v501 | 0xB56311B0) - (v501 | 0x4A9CEE4F) + 1251798607) ^ 0x3CA990E6) + 1)) & 0xEFD55A76)
       + 135615173;
  v505 = *(_DWORD *)&v483[4 * (((HIWORD(v482) & 0xD5 ^ 0xCCC4C97A) - (HIWORD(v482) & 0x2A)) ^ 0xCCC4C93B)] ^ *(_DWORD *)&v484[4 * (HIBYTE(v481) ^ 0xA4)] ^ v503 ^ *(_DWORD *)&v492[4 * (((v502 & 0x82909B2 ^ 0x441CA190) + (v502 ^ 0x29E14E62) - ((v502 ^ 0x29E14E62) & 0x10801B2)) ^ 0x4E75EBB1)] ^ (((v503 >> 3) & 0x1A323DBE ^ 0x12531390) - ((2 * ((v503 >> 3) & 0x1A323DBE ^ 0x12531390)) & 0x3484274C) + 1531073510) ^ v499 ^ (v504 - ((2 * v504) & 0xBA651066) + 1563592755);
  v506 = *(_DWORD *)&v483[4
                        * (((BYTE2(v474) ^ 0xE810003E) - ((2 * (BYTE2(v474) ^ 0xE810003E)) & 0x502000DC) - 1435331218) ^ 0x426295B8)];
  v507 = ((2 * (BYTE1(v451) ^ 0x61)) & 0xBC) - (BYTE1(v451) ^ 0x61) + 1506905761;
  v508 = v506 ^ ((v506 ^ 0x74008BEE) - ((2 * (v506 ^ 0x74008BEE) + 882924244) & 0x3D5FC98A) + 2030047791) ^ ((v506 ^ 0xAE50A687) - ((2 * (v506 ^ 0xAE50A687) + 2) & 0xA43C07CE) - 769784856) ^ 0x1D1EBE5A;
  v509 = *(_DWORD *)&v484[4 * (HIBYTE(v482) ^ 0x6E)] ^ ((HIBYTE(v482) ^ 0xF3)
                                                      - 1039334732
                                                      + ((2 * (HIBYTE(v482) ^ 0xF3) + 476) & 0x18A ^ 0x7BE5EFFF)) ^ (v508 - ((2 * v508 - 1264559406) & 0xBB0638BC) - 1210889785) ^ 0x35B4BBA8;
  v510 = *(_DWORD *)&v485[4
                        * (((v507 & 0x9008292 ^ 0x24203212) + (v507 ^ 0xDBC08881) - ((v507 ^ 0xDBC08881) & 0x82000692)) ^ 0x2D31B07C)];
  v511 = v509 + (v510 ^ 0x60458E6B);
  v512 = (v509 & (v510 ^ 0x60458E6B)) - ((2 * (v509 & (v510 ^ 0x60458E6B))) & 0x2354BE98);
  v513 = ((2 * (v481 ^ 0xC1)) & 0xD4) - (v481 ^ 0xC1) + 4501;
  v514 = (((2 * (v481 ^ 0x16)) | 0xABBE078) - (v481 ^ 0x16) + 1789005764) & 0x1FFFFFFF ^ 0x155DF040;
  v515 = (v511 ^ 0xD5FE53DD)
       + ((2 * v511) & 0xABFCA7BA)
       + ((2 * v512 - 1554727272) ^ 0x4374AAD9)
       + ((2 * (2 * v512 - 1554727272)) & 0x3FBFD77C ^ 0xF956AACF);
  v516 = ((BYTE1(v481) ^ 0xD5) - ((2 * (BYTE1(v481) ^ 0xD5)) & 0x120) - 660584560) ^ 0xC1F64781;
  v517 = (v516 - ((2 * v516) & 0x1000413E) + 243835039) ^ 0x17DEA086;
  v518 = (v513 ^ 0x111B)
       + (((v513 ^ 0x8C9AB1EF) + 1) ^ 0xE73F3EBE)
       + ((2 * ((v513 ^ 0x8C9AB1EF) + 1)) & 0x8347D7C)
       + 415285570;
  v519 = (((2 * ((v510 >> 3) & 0x1A323DBE ^ 0xA0453BA7)) & 0x70EC3E00)
        - ((v510 >> 3) & 0x1A323DBE ^ 0xA0453BA7)
        + 58827007) ^ *(_DWORD *)&v492[4 * v514] ^ (v518 - ((2 * v518) & 0xA8289318) - 736867956) ^ (v515 + 1 - 2 * ((v515 + 1239521251) & 0x7F8DC17D ^ (v515 + 1) & 1) - 915449506);
  LOWORD(v518) = (BYTE2(v451) ^ 0xEF9D) - ((2 * (BYTE2(v451) ^ 0xEF9D)) & 0x80) + 64;
  v520 = *(_DWORD *)&v485[4 * v517];
  v482 = v482;
  v521 = ((2 * (v482 ^ 0xB8)) | 0xC6F2487C) - (v482 ^ 0xB8) - 1668883518;
  v522 = (v521 ^ 0x637924D8)
       + (((v521 ^ 0xEFE3842C) + 1) ^ 0x67D5FDFF)
       + ((2 * ((v521 ^ 0xEFE3842C) + 1)) & 0xCFABFBFE)
       - 1742077439;
  LODWORD(v451) = *(_DWORD *)&v484[4 * (HIBYTE(v474) ^ 0x98)] ^ *(_DWORD *)&v483[4
                                                                               * (((v518 & 0x6C9 ^ 0xC8D18249)
                                                                                 + (v518 & 0x3936 ^ 0x2002923)
                                                                                 - 1) ^ 0xCAD184B2)] ^ v520 ^ *(_DWORD *)&v492[4 * (v482 ^ 0x7B)] ^ ((HIBYTE(v474) ^ 5) + 1710022625 + ((2 * (HIBYTE(v474) ^ 5) + 988) & 0x3E4 ^ 0xEBA5BFFF)) ^ (((v520 >> 3) & 0x121219A8 ^ 0xC4D35009 | (v520 >> 3) & 0x8202416) - 1) ^ (v522 - ((2 * v522) & 0x4B30294A) - 1516759899);
  v523 = v496 ^ ((v496 ^ 0xD1850F01) - ((2 * (v496 ^ 0xD1850F01) + 2) & 0x98AB446A) + 1280680502) ^ ((v496 ^ 0x26C09A7A) - 2 * (((v496 ^ 0x26C09A7A) + 122000764) & 0xDA31211 ^ v496 & 1) + 82356108) ^ 0x6F8C40DB;
  v524 = v523 - ((2 * v523 + 780872438) & 0x38DE7ECE) + 330618082;
  v525 = 2 * (v519 >> 8);
  v526 = v525 & 0x164 ^ 0x105;
  v527 = (-(BYTE2(v505) ^ 0x60) - 1782222593) ^ 0xCDEF45FF;
  v528 = (v525 ^ 0xA4611C) - ((2 * (v525 ^ 0xA4611C)) & 0x114) + 650;
  v529 = (BYTE1(v519) ^ 0xEF3FDF3C) + v526 + (v528 & 0x10A) - ((2 * v528) & 0x200) + 281026760;
  v530 = ((v451 ^ 0x81)
        + (v451 & 0xAE ^ 0xE15E752E)
        - ((v451 ^ 0x81) & 0xAE)) ^ 0xF353F7D4;
  v531 = *(_DWORD *)&v485[4 * v529];
  LODWORD(v443) = ((v531 >> 3) & 0x81029B8 ^ 0x28DC4979 | (v531 >> 3) & 0x12221406) - 1;
  v532 = (((v530 | 0xFF225D50) - (v530 | 0xDDA2AF) + 14525103) ^ 0xED2FDF54)
       + (((((v530 | 0xFF225D50) - (v530 | 0xDDA2AF) + 14525103) ^ 0x61B57FA0) + 1) ^ 0xEFFDFFF8)
       + ((2 * ((((v530 | 0xFF225D50) - (v530 | 0xDDA2AF) + 14525103) ^ 0x61B57FA0) + 1)) & 0xDFFBFFF0)
       + 268566536;
  v533 = *(_DWORD *)&v484[4 * (HIBYTE(v524) ^ 0x81)] ^ *(_DWORD *)&v483[4
                                                                      * (((v527 | 0xA8C60413)
                                                                        - (v527 | 0x5739FBEC)
                                                                        + 1463417836) ^ 0xF0EC3123)] ^ v531 ^ ((HIBYTE(v524) ^ 0x1C) - 2044342410 + ((2 * (HIBYTE(v524) ^ 0x1C) + 988) & 0x30E ^ 0xEBAFBFFF)) ^ ((v443 & 0x183609F2 ^ 0x11030000) + (v443 ^ 0x483C3FF6) - ((v443 ^ 0x483C3FF6) & 0x787249B2));
  v534 = (v532 - ((2 * v532) & 0x2ECB55A) - 2122949971) ^ *(_DWORD *)&v492[4
                                                                         * ((((2 * (v451 ^ 0xDC)) | 0xE44BD40E)
                                                                           - (v451 ^ 0xDC)
                                                                           + 232396281) ^ 0xF225EA01)];
  v535 = (v533 ^ v534 ^ 0x5879792F) + 1;
  v534 ^= 0xF9BBA8EE;
  v536 = v534 + (v535 ^ 0x7B5FB5DF) + ((2 * v535) & 0xF6BF6BBE) - 2069870047;
  v537 = (v533 ^ ((v533 ^ 0xA1C2D1C1) - ((2 * (v533 ^ 0xA1C2D1C1) + 2) & 0x1052D6F0) - 2010551431) ^ 0xA39C7ECD ^ (v536 - ((2 * v536) & 0xEB107716) + 1971862411))
       + v534;
  v538 = v537 - ((2 * v537) & 0x80A6944C) + 1079200294;
  v539 = ((v524 & 0x1C ^ 0xBADF841C) - (v524 & 0x1C) + (v524 ^ 0x83)) ^ 0xB99C093C;
  v540 = *(_DWORD *)&v485[4 * (BYTE1(v451) ^ 0x5A)];
  v541 = ((v540 >> 3) & 0x1A323DBE ^ 0x12223536 | 0xDA26FBB6)
       - ((v540 >> 3) & 0x1A323DBE ^ 0x12223536 | 0x25D90449)
       + 634979401;
  v542 = ((((2 * v539) | 0x88B3E846) - v539 - 1146745891) ^ 0xCB80D913)
       + ((((2 * v539) | 0x88B3E846) - v539 - 1146745891) ^ 0x471A79E7);
  v543 = *(_DWORD *)&v483[4 * (((HIWORD(v519) & 0x54 ^ 0x52316245) + (HIWORD(v519) & 0xAB) - 1) ^ 0x523162B7)] ^ *(_DWORD *)&v484[4 * (HIBYTE(v505) ^ 0x3F)] ^ v540 ^ ((v541 & 0xD4796D84 ^ 0x4110001) + (v541 ^ 0xF06AFFFC) - ((v541 ^ 0xF06AFFFC) & 0xD4796D85)) ^ ((HIBYTE(v505) ^ 0xA2) + 257891162 + ((2 * (HIBYTE(v505) ^ 0xA2) + 988) & 0x2D6 ^ 0xDFBDBFFF)) ^ *(_DWORD *)&v492[4 * (((v524 ^ 0xA2AC0267 | 0x89CB0832) - (v524 ^ 0xA2AC0267 | 0x7634F7CD) + 1983182797) ^ 0x2B670A17)] ^ (((2 * v542) & 0xE76CFFDE) + (v542 ^ 0x73B67FEF) - ((2 * (((2 * v542) & 0xE76CFFDE) + (v542 ^ 0x73B67FEF)) + 1245220) & 0x1C1218) + 207063326);
  v544 = (((2 * (BYTE1(v524) ^ 0x4B)) & 0x1E8) - (BYTE1(v524) ^ 0x4B) - 1443678965) ^ 0xA1F81D1B;
  v545 = (((2 * v544) & 0x10061710) - v544 - 251878281) ^ 0xF8F78C96;
  v546 = *(_DWORD *)&v484[4 * (HIBYTE(v519) ^ 0xCF)] ^ *(_DWORD *)&v483[4 * (BYTE2(v451) ^ 0x25)];
  v547 = *(_DWORD *)&v485[4 * v545];
  v548 = v451 >> 24;
  v549 = ((v451 >> 24) ^ 0xA3)
       - 1554193
       + ((2 * ((v451 >> 24) ^ 0xA3) + 988) & 0x600 ^ 0xFFAEEFFF);
  LODWORD(v451) = (v505 & 0x6F ^ 0x5C2EF947) + (v505 & 0x90 ^ 0x11) - 1;
  LODWORD(v451) = (v451 ^ 0x5C2EF9BF)
                + (((v451 ^ 0xD0B4594B) + 1) ^ 0x24EFC3D7)
                + ((2 * ((v451 ^ 0xD0B4594B) + 1)) & 0x49DF87AE)
                - 619693015;
  v550 = v546 ^ *(_DWORD *)&v492[4 * (((v505 & 0xF4 ^ 0x91318AA5) - (v505 & 0xB) + 1678266634) ^ 0xF539DB62)] ^ v547 ^ ((_DWORD)v451 - ((2 * (_DWORD)v451) & 0x1FAC6D0E) + 265696903) ^ ((HIBYTE(v519) ^ 0x52) - 1406173439 + ((2 * (HIBYTE(v519) ^ 0x52) + 988) & 0x224 ^ 0x5BFCFFFF)) ^ (((v547 >> 3) & 0x1A323DBE ^ 0xAE03AC8) - ((2 * ((v547 >> 3) & 0x1A323DBE ^ 0xAE03AC8)) & 0x34000584) + 973357763);
  v551 = (((2 * (v519 ^ 0x28)) & 0x130) - (v519 ^ 0x28) + 82536807) ^ 0x5E3E947;
  v552 = *(_DWORD *)&v485[4
                        * ((((2 * (BYTE1(v505) ^ 0x4ABC3603)) & 0x95482CD6) - (BYTE1(v505) ^ 0x4ABC3603) - 2124897900) ^ 0xCBE49797)];
  v553 = (((2 * (v519 ^ 0x56)) | 0x29A24F8E) - (v519 ^ 0x56) + 1798232121) ^ 0x9CF036C6;
  v554 = (((v551 | 0x2FB2AFB6) - (v551 | 0xD04D5049) - 800239543) ^ 0x2EBA2FB6)
       + (((((v551 | 0x2FB2AFB6) - (v551 | 0xD04D5049) - 800239543) ^ 0xA2208F42) + 1) ^ 0xFF3EEFCE)
       + ((2 * ((((v551 | 0x2FB2AFB6) - (v551 | 0xD04D5049) - 800239543) ^ 0xA2208F42) + 1)) & 0xFE7DDF9C)
       + 12652594;
  v555 = *(_DWORD *)&v483[4
                        * ((((2 * (BYTE2(v524) ^ 0x4204219A)) | 0x27AE2154) - (BYTE2(v524) ^ 0x4204219A) - 332861610) ^ 0x51D3319C)] ^ *(_DWORD *)&v484[4 * (v548 ^ 0x3E)] ^ v552 ^ *(_DWORD *)&v492[4 * ((v553 - ((2 * v553) & 0x777DA5C0) - 1145122080) ^ 0xB39FC39A)] ^ (((v552 >> 3) & 0x1A323DBE ^ 0x696535AD) - ((2 * ((v552 >> 3) & 0x1A323DBE ^ 0x696535AD)) & 0xF2860A3A) + 2034992477) ^ v549 ^ (v554 - ((2 * v554) & 0x1809018C) + 201621702);
  v556 = ((BYTE2(v543) ^ 0xC6) - ((2 * (BYTE2(v543) ^ 0xC6)) & 0x1A2) - 1766270767) ^ 0x96E7FCE5;
  v557 = (v556 - ((2 * v556) & 0x18191E) + 1093426319) ^ 0x41737813;
  v558 = ((2 * (v555 ^ 0x1E285B)) & 0x34010A) - (v555 ^ 0x1E285B) + 973433722;
  v560 = ((HIBYTE(v538) ^ 0x61) + 120195399 + ((2 * (HIBYTE(v538) ^ 0x61) + 988) & 0x6B0 ^ 0xEFA7EFFF)) ^ *(_DWORD *)&v484[4 * (HIBYTE(v538) ^ 0xFC)];
  v561 = *(_DWORD *)&v483[4 * v557];
  v563 = (v561 ^ 0x57142B85 ^ v560) + 1;
  v564 = v563 ^ 0x77B2FDF3;
  v565 = (2 * v563) & 0xEF65FBE6;
  v566 = v561 ^ 0x1AA2D0A4;
  v567 = v566 + v564 + v565 - 2008219123 - ((2 * (v566 + v564 + v565 - 2008219123)) & 0x2A69D790) + 355789768;
  v569 = *(_DWORD *)&v485[4
                        * (((BYTE1(v550) ^ 0x21A602F9)
                          + ((v550 >> 8) & 0x3D ^ 0x5601B404)
                          - ((BYTE1(v550) ^ 0x21A602F9) & 0x21A4023D)) ^ 0x5603B472)];
  v570 = v569 ^ 0x4E2B9C62;
  if (v550 == -917621979)
    v570 = -778965520;
  v571 = v558 ^ 0x3A1B43DF;
  v559 = (v558 ^ 0xC5E4BC05) - ((2 * (v558 ^ 0xC5E4BC05) + 2) & 0x226A2B32) - 1858792038;
  v562 = (v558 ^ 0xB681E30E) - ((2 * (v558 ^ 0xB681E30E) + 1724562968) & 0x685F3066) + 664074047;
  v572 = (v558 ^ 0x3A1B43FA)
       + (((v558 ^ v562 ^ v559 ^ 0x1F01CE50) + 1936023307) ^ 0x900D400A)
       - ((2 * ((v558 ^ v562 ^ v559 ^ 0x1F01CE50) + 1936023307)) & 0xDFE57FEA)
       + 1878179830;
  v568 = (v560 ^ 0x4DB6FB21) - ((2 * (v560 ^ 0x4DB6FB21) + 2) & 0x254966AC) - 1834699945;
  v573 = *(_DWORD *)&v492[4 * v571] ^ v569 ^ (((v570 & (v569 ^ 0x60458E6B))
                                             - ((2 * (v570 & (v569 ^ 0x60458E6B))) & 0x740F95B2u)
                                             - 1173894439) >> 3) ^ (v572 - ((2 * v572) & 0xBD42F9A8) + 1587641556) ^ ((v560 ^ v568 ^ 0x35D95C40 ^ v567) + v566 - ((2 * ((v560 ^ v568 ^ 0x35D95C40 ^ v567) + v566)) & 0x82371CDC) + 1092324974);
  v574 = *(_DWORD *)&v485[4 * (((BYTE1(v555) ^ 0x24) - ((v555 >> 7) & 0x26) - 1609589997) ^ 0xA00F9BB3)];
  v575 = (((v574 >> 3) & 0x1A323DBE ^ 0x1A0030B6)
        - ((2 * ((v574 >> 3) & 0x1A323DBE ^ 0x1A0030B6)) & 0x14206164)
        - 1898859853) ^ 0x1F9132DB;
  v576 = ((2 * (v538 ^ 0xE7)) & 0x14C) - (v538 ^ 0xE7) + 33113;
  v577 = (v576 ^ 0x8191)
       + (((v576 ^ 0x8C9A2165) + 1) ^ 0x7F6FF3EB)
       + ((2 * ((v576 ^ 0x8C9A2165) + 1)) & 0x1817E7D6)
       - 2138043371;
  v578 = *(_DWORD *)&v483[4
                        * (((BYTE2(v550) ^ 0x81242085 | 0x11A2F02) - (BYTE2(v550) ^ 0x81242085 | 0xFEE5D0FD) - 18493187) ^ 0x803E0F0A)] ^ *(_DWORD *)&v484[4 * (HIBYTE(v543) ^ 0x7D)] ^ v574 ^ (v575 - ((2 * v575) & 0x4CE12EA4) - 1502046382) ^ ((HIBYTE(v543) ^ 0xE0) + 526524918 + ((2 * HIBYTE(v543) + 12) & 0xE ^ 0x7FB7AFFF)) ^ *(_DWORD *)&v492[4 * ((((2 * (v538 ^ 0xF4)) | 0x17B44208) - (v538 ^ 0xF4) + 1948638972) ^ 0x8BDA21FA)] ^ (v577 - ((2 * v577) & 0xC6D0928E) + 1667778887);
  v579 = ((v543 ^ 0xC6) - ((2 * v543) & 0x10) + 292992776) ^ 0x326B78E;
  v580 = ((v579 - ((2 * v579) & 0x20202874) + 1427797050) ^ 0x474A7442)
       + ((((v579 - ((2 * v579) & 0x20202874) + 1427797050) ^ 0xCBD0D4B6) + 1) ^ 0x7AFF7E76)
       + ((2 * (((v579 - ((2 * v579) & 0x20202874) + 1427797050) ^ 0xCBD0D4B6) + 1)) & 0xF5FEFCEC)
       - 2063564406;
  v581 = *(_DWORD *)&v485[4 * (BYTE1(v538) ^ 0x4E)];
  v582 = *(_DWORD *)&v483[4 * (BYTE2(v555) ^ 0xB2)] ^ *(_DWORD *)&v484[4 * (HIBYTE(v550) ^ 0x54)] ^ *(_DWORD *)&v492[4 * ((((2 * (v543 ^ 0x7208CC)) & 0x4400D6) - (v543 ^ 0x7208CC) + 1448463508) ^ 0x5627C445)] ^ v581 ^ ((HIBYTE(v550) ^ 0xC9) - ((2 * (HIBYTE(v550) ^ 0xC9) + 341529564) & 0x1012556E) - 495377243) ^ (v580 - ((2 * v580) & 0x1EE028A4) + 259003474) ^ (((2 * ((v581 >> 3) & 0x1A323DBE ^ 0x191829F6)) | 0x22726A70) - ((v581 >> 3) & 0x1A323DBE ^ 0x191829F6) + 1858521800);
  v583 = (BYTE1(v543) ^ 0x7E) - ((2 * (BYTE1(v543) ^ 0x7E)) & 0x122) + 31889;
  v584 = *(_DWORD *)&v485[4 * (((v583 & 0x643) + 536872959 + (v583 & 0x1BC ^ 0x87986129)) ^ 0xA7986D69)];
  v585 = (v550 & 0x50) + 990230784 + (v550 ^ 0xD6) - ((v550 ^ 0xD6) & 0x50);
  v586 = (v585 ^ 0x3B05B9A3)
       + (((v585 ^ 0xB79F1957) + 1) ^ 0xFF6DEF5F)
       + ((2 * ((v585 ^ 0xB79F1957) + 1)) & 0xFEDBDEBE)
       + 9572513;
  v587 = ((2 * (v550 ^ 0xC6)) & 0x164) - (v550 ^ 0xC6) + 86041677;
  v588 = *(_DWORD *)&v483[4 * (((HIWORD(v538) & 0x44 ^ 0xD05) + (HIWORD(v538) & 0xBB) - 1) ^ 0xDAC)] ^ *(_DWORD *)&v484[4 * (HIBYTE(v555) ^ 0x29)] ^ v584 ^ (((v584 >> 3) & 0x1A323DBE ^ 0x327343D) - 1) & 0x1A373DBE ^ ((HIBYTE(v555) ^ 0xB4) - 1982950017 + ((2 * (HIBYTE(v555) ^ 0xB4) + 988) & 0x720 ^ 0xEBBEAFFF));
  v589 = (v586 - ((2 * v586) & 0x14E1D650) + 175172392) ^ *(_DWORD *)&v492[4
                                                                         * (((v587 & 0x1202591 ^ 0xCD0190)
                                                                           + (v587 ^ 0x1320644F)
                                                                           - ((v587 ^ 0x1320644F) & 0x14008591)) ^ 0x3ED2555)];
  v590 = (v589 ^ 0x452ADF4 ^ v588) + 1;
  v589 ^= 0x72BD196Bu;
  v591 = v589 + (v590 ^ 0x91BFB9BA) + ((2 * v590) & 0x237F7374) + 1849706054;
  v592 = (v588 ^ ((v588 ^ 0x76EFB49F) - ((2 * (v588 ^ 0x76EFB49F) + 2) & 0x2B19741E) + 361544208) ^ 0x6D128D4B ^ (v591 - ((2 * v591) & 0xE31CF848) - 242320348))
       + v589;
  v593 = v592 - ((2 * v592) & 0xB28670B8) + 1497577564;
  v594 = ((2 * HIBYTE(v573)) ^ 0x42) - ((2 * ((2 * HIBYTE(v573)) ^ 0x42)) & 0xF0) + 888;
  v595 = HIBYTE(v573) ^ 0x5A2DA9CF;
  v596 = v595 + (v594 & 0x1DC ^ 0x709FB627) + ((2 * v594) & 0x2B8 ^ 0x2B0) - 1889515391;
  v597 = v596 - 2 * (v596 & 0xA0CBCAB ^ v595 & 1) + 780975274;
  v598 = ((BYTE1(v582) ^ 0xE47B1EED | 0x93782AE5) - (BYTE1(v582) ^ 0xE47B1EED | 0x6C87D51A) + 1820841242) ^ 0x9EE4F47F;
  v599 = *(_DWORD *)&v485[4 * ((v598 - ((2 * v598) & 0xD3EEDA14) + 1777822986) ^ 0x8010AD79)];
  v600 = (v592 - ((2 * v592) & 0xB8) + 92);
  v601 = (v600 ^ 0x81886C5E) + (v593 & 0xED ^ 0x283192A1) - ((v600 ^ 0x81886C5E) & 0x8044ED);
  v602 = (v601 ^ 0xA939BAEF)
       + (((v601 ^ 0x25A31A1B) + 1) ^ 0xF3BFE9B8)
       + ((2 * ((v601 ^ 0x25A31A1B) + 1)) & 0xE77FD370)
       + 205526600;
  v604 = (((2 * (BYTE1(v593) ^ 0xE2)) | 0xAFE55386) - (BYTE1(v593) ^ 0xE2) - 1475520963) ^ 0x4F4AA959;
  v605 = *(_DWORD *)&v483[4
                        * (((BYTE2(v578) ^ 0xC401A9E4 | 0x5957194D)
                          - (BYTE2(v578) ^ 0xC401A9E4 | 0xA6A8E6B2)
                          - 1498880334) ^ 0x9D56B0AB)] ^ v599 ^ *(_DWORD *)&v484[4 * (HIBYTE(v573) ^ 0xBC)] ^ (((v599 >> 3) & 0x1A323DBE ^ 0x102F1DC | 0x221AC1BF) - ((v599 >> 3) & 0x1A323DBE ^ 0x102F1DC | 0xDDE53E40) - 572178880) ^ *(_DWORD *)&v492[4 * (((v600 ^ 0x3B) - 1094664688 - ((2 * (v600 ^ 0x3B)) & 0xA4) + 66) ^ 0xBEC0BE10)] ^ (v602 - ((2 * v602) & 0x220B3F9A) - 1861902387) ^ v597;
  v606 = *(_DWORD *)&v485[4 * (((v604 | 0x5DCADFF0) - (v604 | 0xA235200F) - 1573576689) ^ 0x4572DF35)];
  v607 = v606 ^ 0xE7FDDB2A;
  if ((v606 & 0x40) != 0)
    v608 = -64;
  else
    v608 = 64;
  v609 = v608 + v607 - 2 * ((v608 + v607) & 0x3DE4F70F ^ v607 & 6) + 1038415625;
  v610 = (v573 & 0xCC ^ 0x90E8084D) - (v573 & 0x33) + 1677754930;
  v611 = (v610 ^ 0xF4E88ACC)
       + (((v610 ^ 0x78722A38) + 1) ^ 0x6F6F9BD3)
       + ((2 * ((v610 ^ 0x78722A38) + 1)) & 0xDEDF37A6)
       - 1869585363;
  v612 = (((v609 >> 3) & 0x1A323DBE ^ 0xA103CB2 | 0xC311F24C)
        - ((v609 >> 3) & 0x1A323DBE ^ 0xA103CB2 | 0x3CEE0DB3)
        + 1022234035) ^ 0xAB5F9ADF;
  v603 = HIBYTE(v578);
  v613 = *(_DWORD *)&v483[4 * (BYTE2(v582) ^ 0xEB)] ^ *(_DWORD *)&v484[4 * (v603 ^ 0xB)] ^ *(_DWORD *)&v492[4 * ((((2 * (v573 ^ 0x309060E8)) & 0x61008082) - (v573 ^ 0x309060E8) + 238926526) ^ 0x3EADDAC0)] ^ v609 ^ ((v603 ^ 0x96) + 702200390 + ((2 * (v603 ^ 0x96) + 220) & 0xAE ^ 0x6BA5FFFF)) ^ (v611 - ((2 * v611) & 0xA55A019E) - 760414001) ^ ((v612 | 0x43A46D3) - (v612 | 0xFBC5B92C) - 70928084);
  v614 = ((BYTE1(v573) ^ 0x3F | 0xF3169A6B) - (BYTE1(v573) ^ 0x3F | 0xCE96594) + 216622484) ^ 0xB17A222F;
  v615 = (v578 ^ 0x3050F2D8 | 0x606FB710)
       - (v578 ^ 0x3050F2D8 | 0x9F9048EF)
       - 1617934097;
  v616 = *(_DWORD *)&v485[4 * ((((2 * v614) & 0x45722B46) - v614 - 582555044) ^ 0x9F2A5241)];
  v617 = *(_DWORD *)&v484[4 * (HIBYTE(v582) ^ 0xEB)] ^ *(_DWORD *)&v483[4 * (BYTE2(v593) ^ 0x80)] ^ *(_DWORD *)&v492[4 * ((((2 * (v578 ^ 0x53)) & 0x14) - (v578 ^ 0x53) + 5109) ^ 0x1319)] ^ v616 ^ ((HIBYTE(v582) ^ 0x76) - 1863796759 + ((2 * (HIBYTE(v582) ^ 0x76) + 988) & 0x3F4 ^ 0xDBADEFFF)) ^ ((v615 ^ 0x503F4552) + (((v615 ^ 0xDCA5E5A6) + 1) ^ 0x7FDFFFF3) + ((2 * ((v615 ^ 0xDCA5E5A6) + 1)) & 0xFFBFFFE6) - 2145386483 - ((2 * ((v615 ^ 0x503F4552) + (((v615 ^ 0xDCA5E5A6) + 1) ^ 0x7FDFFFF3) + ((2 * ((v615 ^ 0xDCA5E5A6) + 1)) & 0xFFBFFFE6) - 2145386483)) & 0x780AF0C0) - 1140492192) ^ (((2 * ((v616 >> 3) & 0x1A323DBE ^ 0x68840188)) & 0x11042878) - ((v616 >> 3) & 0x1A323DBE ^ 0x68840188) - 210375741);
  v618 = ((~(4 * v582) | 7) + 2 * v582 + 14) & 0x16;
  v619 = *(_DWORD *)&v485[4 * (BYTE1(v578) ^ 0x4B)];
  v620 = (((v619 >> 3) & 0x1A323DBE ^ 0x1A303130)
        - ((2 * ((v619 >> 3) & 0x1A323DBE ^ 0x1A303130)) & 0x30402840)
        + 434181665) ^ 0xA9611421;
  v621 = *(_DWORD *)&v483[4
                        * (((BYTE2(v573) ^ 0xA05278A0 | 0xE08EF985) - (BYTE2(v573) ^ 0xA05278A0 | 0x1F71067A) + 527500922) ^ 0x40DC81CE)] ^ *(_DWORD *)&v484[4 * (HIBYTE(v593) ^ 0xC4)] ^ v619 ^ *(_DWORD *)&v492[4 * (((v582 ^ 0x17F46555) + (v582 & 0x6A ^ 0xA809082A) - ((v582 ^ 0x17F46555) & 0x1034216A)) ^ 0xAFC94C6A)] ^ ((v620 & 0x188359BA) - (v620 | 0x188F59BB)) ^ (((2 * v618) ^ 8) + (v618 ^ 0xDEFFEEFA) - ((2 * (((2 * v618) ^ 8) + (v618 ^ 0xDEFFEEFA)) + 20276206) & 0x12517FA) - 783385100) ^ ((HIBYTE(v593) ^ 0x59) + 1950454466 + ((2 * (HIBYTE(v593) ^ 0x59) + 476) & 0x1A6 ^ 0xCBFCAFFF));
  v622 = (((v617 >> 8) & 0xAE ^ 0x1C8B8E03) + ((v617 >> 8) & 0x51) - 1) ^ 0x1D23CFDF;
  v623 = *(_DWORD *)&v485[4 * ((((2 * v622) | 0x25FD6D78) - v622 - 318682812) ^ 0x1356F7A6)];
  v624 = v623 ^ *(_DWORD *)&v484[4 * (HIBYTE(v605) ^ 0x48)] ^ ((HIBYTE(v605) ^ 0xD5)
                                                             + 1241270369
                                                             + ((2 * (HIBYTE(v605) ^ 0xD5) + 988) & 0x3F8 ^ 0x6BE6AFFF)
                                                             + 3978) ^ *(_DWORD *)&v483[4
                                                                                      * (((BYTE2(v613) ^ 0x88)
                                                                                        - ((2 * (BYTE2(v613) ^ 0x88)) & 0xF8)
                                                                                        + 1404) ^ 0x55D)];
  v625 = ((v623 >> 1) & 0x68C8F6F8 ^ 0xF0D9B00B | 0x10D4B7AB)
       - ((v623 >> 1) & 0x68C8F6F8 ^ 0xF0D9B00B | 0xEF2B4854)
       - 282376108;
  v626 = (v621 ^ 0x39BB3FC8)
       + (v621 & 0x92 ^ 0xC6400012)
       - ((v621 ^ 0x39BB3FC8) & 0x10010C92);
  HIDWORD(v627) = v624 ^ 0xB9CA8B5;
  LODWORD(v627) = v624 ^ 0x80000000;
  v628 = (v626 ^ 0xEFFA334F)
       + (((v626 ^ 0x636093BB) + 1) ^ 0x7BE6BEDB)
       + ((2 * ((v626 ^ 0x636093BB) + 1)) & 0xF7CD7DB6)
       - 2078719707;
  HIDWORD(v627) = ((v627 >> 30) + 70031866 - ((2 * (v627 >> 30)) & 0x8593550) + 174) ^ ((v625 & 0x79D30730 ^ 0x39D20207)
                                                                                      + (v625 & 0x862CF8C8 ^ 0x8008A041)
                                                                                      - 2);
  LODWORD(v627) = HIDWORD(v627) ^ 0x514FB9AC;
  v629 = (v627 >> 2) - ((2 * (v627 >> 2)) & 0x63BEE352);
  v630 = (v628 - ((2 * v628) & 0x6A38905C) - 1256437714) ^ *(_DWORD *)&v492[4 * (v621 ^ 0x30)];
  v631 = ((1310756438 - v629) & 0x20000 ^ 0xF3F7E5D9) + 2 * ((1310756438 - v629) & 0x20000);
  v360 = ((v631 + 201857575) & (v630 ^ 0xCDD00000)) == ((2 * ((v631 + 201857575) & (v630 ^ 0xCDD00000))) & 0xF2C00000);
  v632 = v631 + 1048338304;
  v633 = 644623154 - v631;
  if (v360)
    v634 = v632;
  else
    v634 = v633;
  v635 = (-(~v605 & 0x20000) - 764712308) ^ 0xD0693246;
  v360 = ((2 * v635) | 0x54EA5946) - v635 == 1391108364;
  v636 = ((2 * (BYTE2(v617) ^ 0x55)) & 0xA8) - (BYTE2(v617) ^ 0x55) + 26027;
  v637 = (((2 * ((v629 - 1310756439) & 0xFFFDFFFF ^ 0x91DDBBD)) | 0x91D13A66)
        - ((v629 - 1310756439) & 0xFFFDFFFF ^ 0x91DDBBD)
        - 1223204147) ^ 0x68A81533;
  v638 = ((v630 ^ 0xCDD1BA6D)
        - 846480729
        + v634
        - ((2 * ((v630 ^ 0xCDD1BA6D) - 846480729 + v634)) & 0xB8CDA9C8)
        + 1550243044) ^ (((2 * v637) | 0x38C0E0C2) - v637 + 1671401375);
  v639 = (((2 * (BYTE1(v621) ^ 7)) & 0xF8) - (BYTE1(v621) ^ 7) + 944740995) ^ 0xBA0F8F75;
  v640 = (v605 ^ 0x4A) - 2005727727 - ((2 * v605) & 0x100) + 111;
  v641 = (v640 ^ 0x88730611)
       + (((v640 ^ 0x4E9A6E5) + 1) ^ 0x1EFEBD3F)
       + ((2 * ((v640 ^ 0x4E9A6E5) + 1)) & 0x3DFD7A7E)
       - 520011071;
  v642 = ((2 * ((2 * v605) ^ 0xAA487BB6)) & 0x54) - ((2 * v605) ^ 0xAA487BB6) + 21;
  v643 = (((v640 ^ 0x88730611) + 37) ^ 0x7F9BF375)
       - ((2 * v642) & 0x84)
       + (v642 & 0x4A ^ 0x30D01189)
       + ((2 * ((v640 ^ 0x88730611) + 37)) & 0x7F37E6EA)
       + 1335098114;
  v644 = *(_DWORD *)&v485[4 * ((((2 * v639) & 0x800D4C) - v639 - 704013991) ^ 0x54498C77)];
  v645 = (((v644 >> 3) & 0x2101090 ^ 0x24405041) + ((v644 >> 3) & 0x18222D2E ^ 0x8220405) - 2) ^ 0x676034D8;
  v646 = *(_DWORD *)&v483[4 * (((v636 & 0x476 ^ 0x81862055) + (v636 & 0x389) - 1) ^ 0x81862595)] ^ v644 ^ *(_DWORD *)&v492[4 * v643] ^ (v645 - ((2 * v645) & 0xA6404DA8) + 1940432596) ^ *(_DWORD *)&v484[4 * (HIBYTE(v613) ^ 0x73)] ^ ((HIBYTE(v613) ^ 0xEE) + 917852137 + ((2 * (HIBYTE(v613) ^ 0xEE) + 988) & 0x3F4 ^ 0x4FF4BFFF)) ^ (v641 + 219206756 + (~(2 * v641) | 0xE5DE5739));
  v647 = ((BYTE1(v605) ^ 0xC) + ((v605 >> 8) & 0x46 ^ 0xE9EDBE42) - ((BYTE1(v605) ^ 0xC) & 0x46)) ^ 0xC98DFF56;
  v648 = *(_DWORD *)&v485[4 * (((v647 | 0x95CEC3F8) - (v647 | 0x6A313C07) + 1781611527) ^ 0xB5AE825C)];
  v649 = ((v648 >> 3) & 0x1A323DBE ^ 0x60CECE53) + ((v648 >> 2) & 0x10047B3C ^ 0x10006318) - 1758396383;
  v650 = 2 * ((v649 & (v648 ^ 0x60458E6A)) - ((2 * (v649 & (v648 ^ 0x60458E6A))) & 0x2049DBC0)) + 541711298;
  v651 = ((v649 + (v648 ^ 0x60458E6B)) ^ 0x352F75BE)
       + ((2 * (v649 + (v648 ^ 0x60458E6B))) & 0x6A5EEB7C)
       + (v650 ^ 0xA20C9FCB)
       + 1217087034
       + ((2 * v650) & 0xFB7577EC ^ 0xBFEEC87B);
  v652 = *(_DWORD *)&v484[4 * (HIBYTE(v617) ^ 0xFD)] ^ *(_DWORD *)&v483[4 * (BYTE2(v621) ^ 0xCA)] ^ ((HIBYTE(v617) ^ 0x60) - 264260595 + ((2 * (((HIBYTE(v617) ^ 0x60) + 494) & 0xFFFFFE1F ^ (HIBYTE(v617) | 0x7FFFFFFE))) ^ 0x24001003)) ^ 0x9205813C;
  v653 = (v652 & v651) - ((2 * (v652 & v651)) & 0x280E161E);
  v654 = *(_DWORD *)&v492[4 * (v613 ^ 0x2E)];
  v655 = ((v654 & 0x8800A923 ^ 0x65022D49) + (v654 & 0x2701004 ^ 0x2101001) - 1) ^ 0xCD42A95B;
  v656 = v652 + v651;
  v657 = (v613 ^ 0xB)
       + (((v613 ^ 0x8C9AA0FF) + 1) ^ 0xBFFFBADD)
       + ((2 * ((v613 ^ 0x8C9AA0FF) + 1)) & 0x193541BA)
       + 1073759523;
  v658 = ((2 * v657) & 0xE7BF737A) + (v657 ^ 0xF3DFB9BD);
  v659 = (v656 ^ 0x7F7FFF7F)
       + ((2 * v656) & 0xFEFFFEFF)
       + ((2 * v653 + 672011806) ^ 0x8E1D067B)
       + ((2 * (2 * v653 + 672011806)) & 0xB3D9DF34 ^ 0xEFE7F3CB)
       + 1;
  v660 = v654 & 0x758F46D8;
  v661 = BYTE2(v605) ^ 0x4F39869B;
  v662 = (v605 >> 15) & 0x17E;
  v663 = HIBYTE(v621);
  v664 = (((2 * v663) ^ 0x1A) - ((2 * ((2 * v663) ^ 0x1A)) & 0xAC) + 343) & 0x1DC;
  v665 = (HIBYTE(v621) ^ 0x5A2DA9E3) + (v664 ^ 0x3FFBFCAB) + ((2 * v664) ^ 0x2A8) - 1073479167;
  v666 = v665 - ((2 * v665) & 0x90412A44) + 1826805026;
  v667 = v660 ^ 0x37535274 ^ (((v658 + 69224003) & 0x48A02D8) - ((2 * (v658 + 69224003)) & 0x9140020) + 1205735476) | ((v655 | 0xC48A0941) - (v655 | 0x3B75F6BE) + 997586622) ^ (((v658 + 203441731) & 0x8810A127) - ((2 * (v658 + 203441731)) & 0x10000046) + 753424563) ^ 0x4A7275E3;
  v668 = (v667 - ((2 * v667) & 0x1CF970E6) - 1904428941) ^ (v659 - ((2 * v659 + 886693944) & 0x45B11680) + 2101705564);
  if (v360)
    v669 = 2;
  else
    v669 = -2;
  v670 = *(_DWORD *)&v483[4
                        * ((v661
                          + (v662 ^ 0x48)
                          - 1329170111
                          + v669
                          + 1603744601
                          - ((2 * (v661 + (v662 ^ 0x48) - 1329170111 + v669)) & 0xBF2E6730)
                          + 63) ^ 0x5F973359)] ^ *(_DWORD *)&v484[4 * (v663 ^ 0x90)] ^ v666;
  v671 = *(_DWORD *)&v485[4 * (((BYTE1(v613) ^ 0xFFFFFFE5) + 91804931 + ((2 * BYTE1(v613)) | 0xF50E55FC)) ^ 0xFA872AE9)];
  HIDWORD(v672) = v671 ^ 0x2A;
  LODWORD(v672) = v671 ^ 0xE7FDDB00;
  v673 = (v672 >> 8) - ((2 * (v672 >> 8)) & 0x18119E32) - 1945579751;
  HIDWORD(v672) = v673 ^ 0xE15591;
  LODWORD(v672) = v673 ^ 0x1D000000;
  v674 = (v672 >> 24) - ((2 * (v672 >> 24)) & 0xA64D1A4) + 87189714;
  v675 = (((2 * ((v674 >> 3) & 0x1A323DBE ^ 0x8323806)) & 0x24247A4C)
        - ((v674 >> 3) & 0x1A323DBE ^ 0x8323806)
        - 1931411303) ^ 0xA8E16839;
  v676 = (v617 & 0xCF ^ 0x1E77FC01) + (v617 & 0x30 ^ 0x800121);
  v677 = (v617 & 0x1F ^ 0x90C0C704) + (v617 & 0xE0 ^ 0xC1) - 1;
  v678 = ((v676 - 1) ^ 0x1EF7FDC3)
       + ((((v676 - 1) ^ 0x926D5D37) + 1) ^ 0xE3F76AFD)
       + ((2 * (((v676 - 1) ^ 0x926D5D37) + 1)) & 0xC7EED5FA)
       + 470324483;
  v679 = v674 ^ *(_DWORD *)&v492[4
                               * (((v677 & 0x4AAC ^ 0x80112A0) + (v677 ^ 0xF37CED4E) - ((v677 ^ 0xF37CED4E) & 0x43182AAC)) ^ 0x28A550E1)] ^ (v678 - ((2 * v678) & 0x51E781DE) - 1460420369) ^ ((v670 & 0x4B0D89DC ^ 0x838802D9) + (v670 & 0x90080CC ^ 0x3C009406) - ((v670 & 0x4B0D89DC ^ 0x838802D9) & 0x898082CD)) ^ ((v670 & 0xB4F27623 ^ 0x6BFDDFDC) + 1417139141 + ((2 * (v670 & 0xB4F27623 ^ 0x6BFDDFDC)) & 0x28E4A400 ^ 0x7FF4FC77)) ^ ((v675 | 0x992682AE) - (v675 | 0x66D97D51) + 1725529425);
  v680 = (v679 ^ 0xA3133FA8)
       - 326871386 * (((3527141115u * (unint64_t)(v679 ^ 0xA3133FA8)) >> 32) >> 28);
  v681 = (v679 ^ 0xA3133FA8) + (v680 ^ 0x90520A40) - ((2 * v680) & 0x1F5BEB7E) + 1873671616;
  v682 = v680 ^ 0x79EDD776;
  v683 = (2 * v680) & 0x33DBAEEC;
  v684 = ((v679 >> 23) & 0x4E ^ 0x46) + (HIBYTE(v679) ^ 0xF6FE7F84);
  v685 = (((v668 >> 8) & 0x99) + ((v668 >> 8) & 0x66 ^ 0xE4089F63) - 1) ^ 0x9719D356;
  v686 = *(_DWORD *)&v485[4 * (((v685 | 0x36C16F88) - (v685 | 0xC93E9077) - 918646665) ^ 0x45D023C9)];
  v687 = v682 + v683 + (v681 ^ 0x77C7D1EB) + ((2 * v681) & 0xEF8FA3D6) + 159;
  v688 = ((v687 - ((2 * v687) & 0x11C) - 352801650) ^ 0xEAF8AC8E)
       + ((((v687 - ((2 * v687) & 0x11C) - 352801650) ^ 0x66620C7A) + 1) ^ 0x6DFBEBFB)
       + ((2 * (((v687 - ((2 * v687) & 0x11C) - 352801650) ^ 0x66620C7A) + 1)) & 0xDBF7D7F6)
       - 1845226491;
  v689 = *(_DWORD *)&v483[4
                        * ((((2 * (BYTE2(v646) ^ 0xB1)) | 0xB1797326) - (BYTE2(v646) ^ 0xB1) - 1488763283) ^ 0x58BCB9C4)] ^ v686 ^ *(_DWORD *)&v484[4 * (HIBYTE(v638) ^ 0xCA)] ^ (((v686 >> 3) & 0x1A323DBE ^ 0x82034BA) - ((2 * ((v686 >> 3) & 0x1A323DBE ^ 0x82034BA)) & 0x24003304) + 331651970) ^ *(_DWORD *)&v492[4 * ((v687 - ((2 * v687) & 0x11E) + 1725400207) ^ 0x66D784AA)] ^ ((HIBYTE(v638) ^ 0x57) - ((2 * (HIBYTE(v638) ^ 0x57) + 878400476) & 0x200853DE) - 1908267043) ^ (v688 - ((2 * v688) & 0xB9E4520E) - 588109561);
  v690 = *(_DWORD *)&v485[4 * ((((2 * (BYTE1(v679) ^ 0xDC)) & 0x152) - (BYTE1(v679) ^ 0xDC) + 4950) ^ 0x1330)];
  v691 = (v690 & 0x2E6E1209 ^ 0x16681100)
       + ((2 * v690) & 0x4C582412 ^ 0xC32BDDFE)
       + (((v690 ^ 0x4E2B9C62) + 1) ^ 0xFFE778AE)
       + ((2 * ((v690 ^ 0x4E2B9C62) + 1)) & 0xFFCEF15C)
       + 408586323;
  v692 = ((v638 & 0x69 ^ 0x49FC4861) + (v638 & 0x96 ^ 0x95) - 1) ^ 0xE9AE5E79;
  v693 = ((v638 ^ 0xA6 | 0x7C7EC7A9) - (v638 ^ 0xA6 | 0x83813856) - 2088683434) ^ 0x783FD7AE;
  v694 = ((((2 * v692) | 0x9A442820) - v692 + 853404656) ^ 0x6D700274)
       + ((((((2 * v692) | 0x9A442820) - v692 + 853404656) ^ 0xE1EAA280) + 1) ^ 0x3DDFCFBC)
       + ((2 * (((((2 * v692) | 0x9A442820) - v692 + 853404656) ^ 0xE1EAA280) + 1)) & 0x7BBF9F78)
       - 1038077884;
  v695 = ((2 * (BYTE2(v679) ^ 0xDA)) | 0x4FA7F7E4) - (BYTE2(v679) ^ 0xDA) - 668204018;
  v696 = *(_DWORD *)&v483[4 * (((BYTE2(v668) ^ 5) - ((v668 >> 15) & 0x144) + 10146) ^ 0x27DB)] ^ *(_DWORD *)&v484[4 * (HIBYTE(v646) ^ 0xCF)] ^ v690 ^ ((v691 >> 3) - ((v691 >> 2) & 0x2AE32456) - 177106389) ^ ((HIBYTE(v646) ^ 0x52) - 796132205 + ((2 * (HIBYTE(v646) ^ 0x52) + 988) & 0x548 ^ 0x5BE7FFFF)) ^ *(_DWORD *)&v492[4 * ((((2 * v693) | 0xD154F97A) - v693 + 391480131) ^ 0xECEB6CD1)] ^ (v694 - ((2 * v694) & 0x9A6EC3EA) - 852008459);
  v697 = *(_DWORD *)&v485[4
                        * (((BYTE1(v638) ^ 0xDC) + ((v638 >> 8) & 0x86 ^ 0x502) - ((BYTE1(v638) ^ 0xDC) & 0x86)) ^ 0x52F)];
  v698 = ((v646 ^ 0x4C) + (v646 & 0xE4 ^ 0x77F9D2A0) - ((v646 ^ 0x4C) & 0xE4)) ^ 0xCFB1D265;
  v699 = ((((v684 + 151093465) ^ 0xFFFFFF62) - ((2 * ((v684 + 151093465) ^ 0xFFFFFF62)) & 0x9B634DDA) - 843995411) ^ 0xCDB1A6ED)
       + 1;
  v700 = (v646 & 0xD) + (v646 ^ 0xFFFFFF8F) + (v646 | 0x80D65BF2) + 1;
  v701 = (v700 ^ 0x80D65BFD)
       + (((v700 ^ 0xC4CFB09) + 1) ^ 0xFCCE7BF7)
       + ((2 * ((v700 ^ 0xC4CFB09) + 1)) & 0xF99CF7EE)
       + 53576713;
  v702 = ((2 * (BYTE1(v646) ^ 0xDC)) & 0x172) - (BYTE1(v646) ^ 0xDC) - 32442;
  v703 = *(_DWORD *)&v483[4 * (((v695 & 0x26933669 ^ 0x88010008) + (v695 & 0x140C996 ^ 0x140C113) - 1) ^ 0xAE923AE2)] ^ *(_DWORD *)&v484[4 * (HIBYTE(v668) ^ 0x14)] ^ *(_DWORD *)&v492[4 * ((v698 - ((2 * v698) & 0x508004D2) - 1419766167) ^ 0x132816FE)] ^ v697 ^ ((HIBYTE(v668) ^ 0x89) + 94854349 + ((2 * (((HIBYTE(v668) ^ 0x89) + 494) & 0x2DF ^ (HIBYTE(v668) ^ 0x89 | 0x7FFFFFFE))) ^ 0x14534003)) ^ (v701 - ((2 * v701) & 0xB6D7FF0) + 95862776) ^ (((v697 >> 3) & 0x1A323DBE ^ 0x79498FB) - 1) & 0x1A363DBE;
  v704 = *(_DWORD *)&v485[4 * (((v702 & 0x8EA9 ^ 0x600200A9) + (v702 & 0x7156 ^ 0x8040143) - 1) ^ 0x6806804D)];
  v705 = (((2 * ((v704 >> 3) & 0x1A323DBE ^ 0x101035A6)) | 0xDE8B11DC)
        - ((v704 >> 3) & 0x1A323DBE ^ 0x101035A6)
        - 1866828014) ^ 0xB38488E4;
  v706 = v705 - ((2 * v705) & 0x98229B64) - 871281229;
  LOWORD(v682) = ((2 * (v668 ^ 0x80)) & 0x1E8) - (v668 ^ 0x80) + 31499;
  v707 = (((v682 & 0xA5E ^ 0x283D8057) + (v682 & 0x5A1) - 1) ^ 0xA4A72B19) + 1;
  v708 = (((v668 ^ 0x66) + (v668 & 0x2E ^ 0x1008) - ((v668 ^ 0x66) & 0x2E)) ^ 0x1078)
       + (v707 ^ 0x553FFD77)
       + ((2 * v707) & 0xAA7FFAEE)
       - 1430257015;
  v709 = ((v668 & 0x43 ^ 0x6E3E4301) + (v668 & 0xBC ^ 0xB5) - 1) ^ 0x6EB25503;
  v710 = v704 ^ *(_DWORD *)&v483[4
                               * (((BYTE2(v638) ^ 0x8A) + (HIWORD(v638) & 0x69 ^ 0x2061) - ((BYTE2(v638) ^ 0x8A) & 0x69)) ^ 0x2029)] ^ *(_DWORD *)&v492[4 * ((((2 * v709) & 0x1102FEA) - v709 - 483997686) ^ 0xE3AADEA9)] ^ v706 ^ (v684 - 584355866 + ((2 * v684 + 21902) & 0x8A3C ^ 0x4FA7FFFF)) ^ (v708 - ((2 * v708) & 0x2A3E4B14) - 1793120886) ^ *(_DWORD *)&v484[4 * (((v699 ^ 0x6ABDFFFF) + v684 + ((2 * v699) & 0xD57BFFFE) - 2 * (((v699 ^ 0x6ABDFFFF) + v684 + ((2 * v699) & 0xD57BFFFE) + 105087194) & 0x76F6077 ^ ((v699 ^ 0x6ABDFFFF) + v684) & 1) - 1515003568) ^ 0xF8909F88) + 604373860 + 4 * v684];
  v711 = *(_DWORD *)&v485[4
                        * (((BYTE1(v703) ^ 0xF2) + ((v703 >> 8) & 0x8D ^ 0x90D) - ((BYTE1(v703) ^ 0xF2) & 0x8D)) ^ 0x9C3)];
  v712 = ((v711 >> 3) & 0x1A323DBE ^ 0xA223922)
       - ((2 * ((v711 >> 3) & 0x1A323DBE ^ 0xA223922)) & 0x10043228)
       - 1929225963;
  v713 = v712 & 0xDA2F8CBA ^ 0x500D0C03 | v712 & 0x21D07344;
  v714 = ((2 * (BYTE1(v689) ^ 0x18)) | 0x99F6CC9A) - (BYTE1(v689) ^ 0x18) + 855939507;
  v715 = *(_DWORD *)&v485[4 * (((v714 & 0xC0316511 ^ 0xE1102510) + (v714 & 0xCCA0AEE ^ 0xC8A08C1) - 1) ^ 0x21614BCF)];
  v716 = (((2 * (v696 ^ 0xCB)) & 0x120) - (v696 ^ 0xCB) - 38818961) ^ 0xB0EEA1F3;
  v717 = ((v716 - ((2 * v716) & 0x80002EC) - 1769541258) ^ 0xDBC7FB57)
       + ((((v716 - ((2 * v716) & 0x80002EC) - 1769541258) ^ 0x575D5BA3) + 1) ^ 0x3EE7639D)
       + ((2 * (((v716 - ((2 * v716) & 0x80002EC) - 1769541258) ^ 0x575D5BA3) + 1)) & 0x7DCEC73A)
       - 1055351709;
  v718 = *(_DWORD *)&v484[4 * (HIBYTE(v703) ^ 0x35)] ^ *(_DWORD *)&v483[4 * (BYTE2(v710) ^ 0x2B)] ^ *(_DWORD *)&v492[4 * ((((2 * (v696 ^ 0x4E6A2FB7)) | 0x5C93D1D6) - (v696 ^ 0x4E6A2FB7) - 776595691) ^ 0x6023C70F)] ^ v715 ^ ((HIBYTE(v703) ^ 0xA8) + 312495997 + ((2 * (((HIBYTE(v703) ^ 0xA8) + 494) & 0x18F ^ (HIBYTE(v703) | 0x7FFFFFFE))) ^ 0x30414003)) ^ (v717 - ((2 * v717) & 0x4711846) - 2110223325) ^ (((2 * ((v715 >> 3) & 0x1A323DBE ^ 0x2022C06)) & 0x14604354) - ((v715 >> 3) & 0x1A323DBE ^ 0x2022C06) - 1316021227) & 0xFFF3FFFE;
  v719 = (((v484[4 * (HIBYTE(v703) ^ 0x35)] ^ v483[4 * (BYTE2(v710) ^ 0x2B)] ^ v492[4 * ((((2 * (v696 ^ 0x4E6A2FB7)) | 0x5C93D1D6) - (v696 ^ 0x4E6A2FB7) - 776595691) ^ 0x6023C70F)] ^ v715 ^ ((HIBYTE(v703) ^ 0xA8) + 125 + ((2 * (((HIBYTE(v703) ^ 0xA8) - 18) & 0x8F ^ (HIBYTE(v703) | 0xFE))) ^ 3)) ^ (v717 - ((2 * v717) & 0x46) + 35) ^ (((2 * ((v715 >> 3) & 0xBE ^ 6)) & 0x54) - ((v715 >> 3) & 0xBE ^ 6) + 21) & 0xFE) ^ 0xF7FFF75F)
        + 134218476
        + ((2 * v718) & 0x1DE ^ 0x140)
        + 1317)
       % 0xC1;
  v720 = (((v710 & 0xC1) + (v710 ^ 0xC1)) | 0xC05A9C00) - ((v710 ^ 0xC1) & 0xFFFFFFC1);
  v721 = ((2 * (v710 ^ 0xCD)) | 0xEB5A0F76) - (v710 ^ 0xCD) - 1974273979;
  v722 = (v720 ^ 0xC05A9CC9)
       + (((v720 ^ 0x4CC03C3D) + 1) ^ 0x7DFF9DD7)
       + ((2 * ((v720 ^ 0x4CC03C3D) + 1)) & 0x7B7F1BAE)
       - 2113904087;
  v723 = (v722 - 997518142 - ((2 * v722) & 0x89162986) + 1) ^ 0xC48B14C2;
  v724 = *(_DWORD *)&v483[4
                        * ((((2 * (BYTE2(v696) ^ 0x14840408)) & 0x290800C4) - (BYTE2(v696) ^ 0x14840408) + 154854813) ^ 0x1DBEE1CF)] ^ *(_DWORD *)&v484[4 * (HIBYTE(v689) ^ 0xC9)] ^ v711 ^ *(_DWORD *)&v492[4 * (((v721 & 0x50200CBE ^ 0xA40BC09) + (v721 & 0x258D0341) - 1) ^ 0x7FEDBB92)] ^ ((HIBYTE(v689) ^ 0x54) + 1323784157 + ((2 * (HIBYTE(v689) ^ 0x54) + 988) & 0x3DC ^ 0x5FACAFFF)) ^ (v713 - 1) ^ (v723 - ((2 * v723 + 2) & 0x6058850) - 2096970711);
  v725 = ((v696 >> 12) & 0xBD000 ^ 0x3D000) + ((HIBYTE(v696) << 11) ^ 0xE7F415FE);
  v726 = *(_DWORD *)&v484[4 * (HIBYTE(v696) ^ 0xA2)];
  HIDWORD(v672) = v726 ^ 0x155B86;
  LODWORD(v672) = v726 ^ 0x1EA00000;
  v727 = (v725 - ((2 * v725 + 179505574) & 0x1847F5A2) + 293437386) ^ ((v672 >> 21)
                                                                     - ((2 * (v672 >> 21)) & 0xEA8472B0)
                                                                     - 180209320);
  v728 = (v689 & 0x87 ^ 0xD5960387) - (v689 & 0x87) + (v689 ^ 0x10);
  HIDWORD(v672) = v727 ^ 0x1A;
  LODWORD(v672) = v727 ^ 0xE8F1A800;
  v729 = (v728 ^ 0xD596039C)
       + (((v728 ^ 0x590CA368) + 1) ^ 0x7F3FBFF7)
       + ((2 * ((v728 ^ 0x590CA368) + 1)) & 0xFE7F7FEE)
       - 2134884343;
  v730 = (char *)*(&off_10112C750 + (v874 ^ 0x21CD8639)) - 692597827;
  v731 = *(_DWORD *)&v485[4 * ((((v710 >> 8) & 0xB3 ^ 0x3031) + ((v710 >> 8) & 0x4C ^ 0x49) - 1) ^ 0x3052)];
  v732 = (char *)*(&off_10112C750 + (v874 ^ 0x21CD8C3F)) - 753063307;
  v733 = v731 ^ *(_DWORD *)&v483[4 * (((BYTE2(v703) & 0xA6 ^ 0x305) - (HIWORD(v703) | 0x7A6) + 2046) & 0x7FF ^ 0x30D)] ^ (v731 >> 3) & 0x1A323DBE ^ *(_DWORD *)&v492[4 * ((((2 * (v689 ^ 0xFD1836B6)) | 0x92FAF2A8) - (v689 ^ 0xFD1836B6) - 1232959828) ^ 0xB4654FCC)] ^ (v729 - ((2 * v729) & 0x429F702A) - 1588611051) ^ ((v672 >> 11) - ((2 * (v672 >> 11)) & 0xD99CF872) - 322012103);
  v734 = ((v703 ^ 0xC0) - ((2 * (v703 ^ 0xC0)) & 0x1E4) + 1880240882) ^ 0xC9CA616E;
  v735 = (((2 * v703) & 0x4A) + (v703 ^ 0xFFFFFFB5) + 1601754587) ^ 0x7D3499D6;
  v736 = *(_DWORD *)&v485[4 * (BYTE1(v696) ^ 0xC)];
  v737 = ((((2 * v734) | 0x4246A2E8) - v734 + 1591520908) ^ 0x18FB02E9)
       + ((((((2 * v734) | 0x4246A2E8) - v734 + 1591520908) ^ 0x9461A21D) + 1) ^ 0xEC6CE979)
       + ((2 * (((((2 * v734) | 0x4246A2E8) - v734 + 1591520908) ^ 0x9461A21D) + 1)) & 0xD8D9D2F2)
       + 328406663;
  v738 = *(_DWORD *)&v730[4 * (((HIWORD(v689) & 0xD0 ^ 0xB6CE4E41) + (HIWORD(v689) & 0x2F) - 1) ^ 0xB6CE4EE2)] ^ *(_DWORD *)&v484[4 * (HIBYTE(v710) ^ 0xA0)] ^ v736 ^ *(_DWORD *)&v732[4 * ((v735 - ((2 * v735) & 0x4410955E) + 730462895) ^ 0x9C5B60D)] ^ (((v736 >> 3) & 0x18003588 ^ 0x89899181 | (v736 >> 3) & 0x2320836) - 1) ^ ((HIBYTE(v710) ^ 0x3D) - 1447015242 + ((2 * (HIBYTE(v710) ^ 0x3D) + 988) & 0x58E ^ 0x6BFEBFFF)) ^ (v737 - ((2 * v737) & 0x84755732) - 1036342375);
  v739 = ((((v738 ^ 0xD39E190A) >> (v718 & 0x18 ^ 0x10))
         - ((2 * ((v738 ^ 0xD39E190A) >> (v718 & 0x18 ^ 0x10))) & 0x424331C)
         - 2112743026) ^ 0x8212198E) >> (v718 & 0x18 ^ 8);
  LOBYTE(v735) = v739 + 94;
  v740 = (BYTE2(v724) ^ 0xE6) + (HIWORD(v724) & 0xD1 ^ 0xCF548B11) - ((BYTE2(v724) ^ 0xE6) & 0xD1);
  v741 = (v740 & 0xD7 ^ 0x88081056) + (v740 & 0xF28 ^ 0x71046B01);
  v742 = v739 + 425550686 - ((2 * v739) & 0x32BAC684) - 28;
  v743 = ((2 * v742) & 0x1F4 ^ 0x84) + (v742 ^ 0x6BA4F6B8);
  LOWORD(v742) = (v735 & 3) + (v742 & 0xFC ^ 0x121);
  v744 = (v741 - 1) ^ 0xF90C7038;
  v745 = (((2 * (BYTE1(v733) ^ 0xE3)) | 0xAC1BA668) - (BYTE1(v733) ^ 0xE3) - 1443746612) ^ 0xDE19DA36;
  v746 = (v718 ^ 0x83884DB0) + (v719 ^ 0x78805C04) - ((2 * v719) & 0x1F6) - 2021678084;
  v747 = *(_DWORD *)&v485[4 * (((v745 | 0xB15288A5) - (v745 | 0x4EAD775A) + 1319991130) ^ 0x3946818F)];
  v748 = (v747 & 0x2E6E1209 ^ 0x966B5283)
       + ((2 * v747) & 0x4C5C2010 ^ 0xC3295AF8)
       + (((v747 ^ 0x4E2B9C62) + 1) ^ 0xFE8E33BF)
       + ((2 * ((v747 ^ 0x4E2B9C62) + 1)) & 0xFD1C677E)
       - 1716318523;
  v749 = (v719 ^ 0x27FF3FFF)
       + 2 * v719
       + ((2 * ((v746 ^ 0x7B) + ((2 * v746) & 0xF6) + 133)) & 0x112)
       + (((v746 ^ 0x7B) + ((2 * v746) & 0xF6) - 123) ^ 0x7EECF789);
  v750 = v749 - ((2 * v749 - 1306029840) & 0xE5B1F4E6) - 873676053;
  v751 = v750 ^ 0x72D8FA56;
  v752 = (v750 ^ 0x72D8FA73)
       + (((v750 ^ 0xFE425A87) + 1) ^ 0x7BDD76ED)
       + ((2 * ((v750 ^ 0xFE425A87) + 1)) & 0xF7BAEDDA)
       - 2078111469;
  v753 = *(_DWORD *)&v730[4 * v744] ^ v747 ^ *(_DWORD *)&v484[4 * (((_WORD)v742 - 1) & 0x3FF ^ 0x1FF)] ^ ((v748 >> 3) - ((v748 >> 2) & 0xE9BB730) + 659413912) ^ (v743 - ((2 * v743 + 487679464) & 0x30026E76) + 109701679) ^ *(_DWORD *)&v732[4 * v751] ^ (v752 - ((2 * v752) & 0x244CF70C) - 1842971770);
  v754 = (2 * ((((v753 >> 15) & 0xF8 ^ 0x70) + (BYTE2(v753) ^ 0x45) + 4) & 0x7F)
        + 1344375425
        + ((((v753 >> 15) & 0xF8 ^ 0x70) + (BYTE2(v753) ^ 0x45) + 4) ^ 0xAFDE757F))
       % 0x9E;
  LOWORD(v751) = v724 ^ 0x5141;
  v724 >>= 24;
  LOWORD(v747) = (v738 ^ 0x30) + (v738 & 0x7A ^ 0xD04A) - ((v738 ^ 0x30) & 0x7A);
  v755 = v747 & 0x1FC3 ^ 0xB1232783 | v747 & 0x3C | 0x2048000;
  v756 = (((v718 >> 8) & 0x6B ^ 0xA0CC9943) + ((v718 >> 8) & 0x94 ^ 5) - 1) ^ 0xA0E4996B;
  v757 = *(_DWORD *)&v485[4 * ((((2 * v756) & 0x40044C) - v756 - 816293415) ^ 0xCF70593D)];
  v758 = ((v738 ^ 0x67) - ((2 * v738) & 0x10) + 1008834056) ^ 0x3C453F64;
  v759 = (v755 ^ 0xB327B7C3)
       + (((v755 ^ 0x3FBD1737) + 1) ^ 0xAEFEDF0C)
       + ((2 * ((v755 ^ 0x3FBD1737) + 1)) & 0x59FDBE18)
       + 1359028468;
  v760 = *(_DWORD *)&v730[4
                        * (((((HIWORD(v733) & 0x84) + (BYTE2(v733) ^ 0xA6800CF6)) | 0x4157D000)
                          - ((BYTE2(v733) ^ 0xA6800CF6) & 0xA6000884)) ^ 0x41D7D419)] ^ *(_DWORD *)&v484[4 * (v724 ^ 0x89)] ^ *(_DWORD *)&v732[4 * ((v758 - ((2 * v758) & 0x4841E4) + 2000433394) ^ 0x775899D6)] ^ v757 ^ ((v724 ^ 0x14) - 2004689619 + ((2 * (((v724 ^ 0x14) + 494) & 0xFFFFFF3F ^ (v724 | 0x7FFFFFFE))) ^ 0x140A4003)) ^ (v759 - ((2 * v759) & 0x22234E16) + 286369547);
  v761 = *(_DWORD *)&v485[4
                        * (((BYTE1(v738) ^ 0xE82403D) - ((2 * (BYTE1(v738) ^ 0xE82403D)) & 0x1048068) + 31147828) ^ 0xF590795)];
  v762 = v760 ^ (((v757 >> 3) & 0x1A323DBE ^ 0xA01378D)
               - ((2 * ((v757 >> 3) & 0x1A323DBE ^ 0xA01378D)) & 0x34661356)
               - 1094743573);
  v763 = ((2 * (v751 ^ 0x20BBD5E3)) | 0xE1DCCEE2) - (v751 ^ 0x20BBD5E3) + 252811407;
  v764 = (v763 ^ 0xD055B233)
       + (((v763 ^ 0x5CCF12C7) + 1) ^ 0xFFF6ED55)
       + ((2 * ((v763 ^ 0x5CCF12C7) + 1)) & 0xFFEDDAAA)
       + 594603;
  v765 = v730;
  v766 = *(_DWORD *)&v484[4 * (HIBYTE(v733) ^ 0xB5)] ^ v761 ^ *(_DWORD *)&v732[4 * (v751 ^ 0x84)] ^ (((v761 >> 3) & 0x1A323DBE ^ 0x8C0431D4) - ((2 * ((v761 >> 3) & 0x1A323DBE ^ 0x8C0431D4)) & 0x20044214) - 1848909557) ^ (v764 - ((2 * v764) & 0x71ADC522) - 1193876847) ^ *(_DWORD *)&v730[4 * (((BYTE2(v718) ^ 0x5288A0D9) - ((2 * (BYTE2(v718) ^ 0x5288A0D9)) & 0xA4104090) + 1915434056) ^ 0x20A394DA)] ^ ((HIBYTE(v733) ^ 0x28) - 184603512 + ((2 * (HIBYTE(v733) ^ 0x28) + 988) & 0x532 ^ 0xCBFCFFFF));
  v767 = (((2 * (BYTE2(v738) ^ 0xD6)) & 0xD2) - (BYTE2(v738) ^ 0xD6) + 1977441430) ^ 0xF5DD32D6;
  v768 = *(_DWORD *)&v485[4 * (BYTE1(v751) ^ 0xC9)];
  v769 = (((v768 >> 3) & 0x1A003482 ^ 0xF7482441) + ((v768 >> 3) & 0x32093C ^ 0x2011D) - 2) ^ 0x5B8936D2;
  v770 = ((2 * (v733 ^ 0x97)) & 0x4E) - (v733 ^ 0x97) + 482233048;
  v771 = (((v770 ^ 0x1CBE4A0B) + (v770 ^ 0x6FDB1500)) ^ 0xBFFDBCF3)
       + ((2 * v770) ^ 0x57776EC1)
       + ((4 * v770) & 0x67C ^ 0x33EA8BFF)
       + ((2 * ((v770 ^ 0x1CBE4A0B) + (v770 ^ 0x6FDB1500))) & 0x66CA79E6)
       + 1;
  v772 = *(_DWORD *)&v730[4 * ((((2 * v767) & 0x91E) - v767 + 1991146352) ^ 0xF6AE15BB)] ^ *(_DWORD *)&v484[4 * (HIBYTE(v718) ^ 0x1E)] ^ v768 ^ *(_DWORD *)&v732[4 * ((((2 * (v733 ^ 0x29)) | 0xD50996B0) - (v733 ^ 0x29) + 360395944) ^ 0xEA84CB10)] ^ ((HIBYTE(v718) ^ 0x83) + 2123914084 + ((2 * (HIBYTE(v718) ^ 0x83) + 988) & 0x2EA ^ 0xFFAEBFFF)) ^ ((v769 | 0xB737214C) - (v769 | 0x48C8DEB3) + 1221123763) ^ (v771 - ((2 * v771 + 1854012568) & 0x654D2F3E) - 370698773);
  v773 = (HIBYTE(v762) ^ 0x7F) + 1447244821 + ((2 * (HIBYTE(v762) ^ 0x7F) + 988) & 0x44C ^ 0x4FF4EFFF);
  v774 = *(_DWORD *)&v484[4 * (HIBYTE(v762) ^ 0xE2)];
  v775 = v774 ^ 0x1EB55B86;
  v776 = (v774 ^ 0x1EB55B86) + (v774 ^ v773 ^ 0x1D5F2E5F) + 1;
  v777 = (((HIBYTE(v762) ^ 0xFFFFFF80) - ((2 * (HIBYTE(v762) ^ 0xFFFFFF80) + 61123622) & 0x3A4222E) + 1873143594) ^ v773 ^ 0xBFA1A365 ^ (v776 - ((2 * v776) & 0x14CF70A8) - 1972914092))
       + v775;
  v778 = *(_DWORD *)&v485[4 * (BYTE1(v772) ^ 0xA6)];
  v779 = (v753 & 0xD7 ^ 0x59AFFC42) + (v753 & 0x28 ^ 9) - 1;
  v780 = ((2 * ((v779 ^ 0xD5355C22) + (v779 ^ 0x59AFFCD6))) & 0xFF7F9B7C)
       + (((v779 ^ 0xD5355C22) + (v779 ^ 0x59AFFCD6)) ^ 0xFFBFCDBE);
  v781 = v778 ^ *(_DWORD *)&v730[4 * (BYTE2(v766) ^ 0x80)] ^ (((2 * ((v778 >> 3) & 0x1A323DBE ^ 0x12023536)) & 0x1040495C)
                                                            - ((v778 >> 3) & 0x1A323DBE ^ 0x12023536)
                                                            - 1823237808) & 0xFBF2FFFE ^ (v777
                                                                                        - ((2 * v777) & 0x1BCE70B4)
                                                                                        - 1914226598) ^ *(_DWORD *)&v732[4 * (v753 ^ 0xB9)] ^ (v780 - ((2 * v780 + 8414342) & 0x6F9764A2) + 940303508);
  LOWORD(v778) = 2 * ((BYTE2(v772) ^ 0xBA) & 3) - (BYTE2(v772) ^ 0xBA) + 9980;
  v782 = ((2 * (v762 ^ 0x88521089)) & 0x10A4206C) - (v762 ^ 0x88521089) - 695646775;
  v783 = *(_DWORD *)&v485[4 * (BYTE1(v753) ^ 0x78)];
  v784 = (v782 ^ 0x5EDB5551)
       + (((v782 ^ 0xD241F5A5) + 1) ^ 0x73DDF7FE)
       + ((2 * ((v782 ^ 0xD241F5A5) + 1)) & 0xE7B9CFFC)
       - 1943926782;
  v785 = *(_DWORD *)&v730[4 * (((v778 & 0x329 ^ 0x22521009) + (v778 & 0xD6 ^ 0x4092017) - 1) ^ 0x265B32F6)] ^ *(_DWORD *)&v484[4 * (HIBYTE(v766) ^ 0x99)] ^ v783 ^ ((HIBYTE(v766) ^ 4) + 778503136 + ((2 * (HIBYTE(v766) ^ 4) + 988) & 0xE3E3E3E3 ^ 0x5FADEFFF)) ^ (((v783 >> 3) & 0x1A323DBE ^ 0x36F9E233) - 1);
  v786 = (((2 * (v762 ^ 0x29)) & 0xA2) - (v762 ^ 0x29) + 647667630) ^ 0x6E0A5B8E;
  v787 = ((v753 >> 15) & 0x1DFF8 ^ 0x19970) + (HIWORD(v753) ^ 0x7FFF2345) + (v754 ^ 0xFFFFFF46);
  v788 = ((2 * v754) & 0x1BE)
       + (v754 ^ 0xFFD6E6DF)
       + ((2 * (v787 - ((2 * v754) & 0x72) + 190)) & 0x176)
       + ((v787 - ((2 * v754) & 0x72) - 66) ^ 0x7BF8DCBB);
  v789 = (v784 - ((2 * v784) & 0xDC634726) - 298736749) ^ *(_DWORD *)&v732[4
                                                                         * ((((2 * v786) & 0x81218C9E)
                                                                           - v786
                                                                           - 1962264144) ^ 0xC39AFD8D)];
  HIDWORD(v672) = v785 ^ 0xE928F06;
  LODWORD(v672) = v785 ^ 0x80000000;
  v790 = (v672 >> 30) - ((2 * (v672 >> 30)) & 0xC6B8A348) - 480489052;
  HIDWORD(v672) = v789 ^ 0x16FC51D0;
  LODWORD(v672) = v789 ^ 0x80000000;
  v791 = (v672 >> 30) - ((2 * (v672 >> 30)) & 0xC559AA18) + 1655493900;
  HIDWORD(v672) = v790 ^ ~v791;
  LODWORD(v672) = v790 ^ v791 ^ 0xBA0DD014;
  v792 = (v672 >> 2) - ((2 * (v672 >> 2)) & 0x4287E2D8) + 558100844;
  LOWORD(v790) = ((2 * (BYTE1(v762) ^ 0x18)) & 0xA6) - (BYTE1(v762) ^ 0x18) + 8620;
  v793 = (v766 ^ 0x3C | 0xC3BB806E) - (v766 ^ 0x3C | 0x3C447F91) + 1011122065;
  v794 = ((2 * (v766 ^ 0xF0)) | 0x816D1216) - (v766 ^ 0xF0) + 1061779189;
  v795 = *(_DWORD *)&v485[4 * (((v790 & 0x426 ^ 0x22440423) + (v790 & 0x3BD9 ^ 0x800021D0) - 1) ^ 0xA2440436)];
  v796 = (((v795 >> 3) & 0xA202C0A ^ 0x64482449 | (v795 >> 3) & 0x101211B4) - 1) ^ 0x5C082486;
  v797 = (v793 & 0xBA8CBA ^ 0x1CA00493) + (v793 & 0xC3017345) - 1;
  v798 = (v797 ^ 0xDF1B84EB)
       + (((v797 ^ 0x5381241F) + 1) ^ 0x7F7EF3DF)
       + ((2 * ((v797 ^ 0x5381241F) + 1)) & 0xFEFDE7BE)
       - 2139026399;
  LODWORD(v730) = (((v762 << 12) ^ 0xFF511000) - ((2 * ((v762 << 12) ^ 0xFF511000)) & 0x22EDE000) - 1854474107) & 0xF0000000 ^ 0x50000000;
  v799 = (((2 * (~(v762 >> 20) & 0xF)) | 0x1868E5C8)
        - (~(v762 >> 20) & 0xF)
        - 204763876
        + (((_DWORD)v730 - ((2 * (_DWORD)v730) & 0x60000000) + 989081461) & 0xF0000000)) ^ 0xFC3472EF;
  v800 = v799 - ((2 * v799) & 0x31F09E4) + 26182898;
  v801 = *(_DWORD *)&v765[4 * ((v788 - ((2 * v788 + 140540108) & 0x86055E3A) + 1194519427) ^ 0xC302AFDE)] ^ *(_DWORD *)&v484[4 * (HIBYTE(v772) ^ 0x5E)] ^ v795 ^ *(_DWORD *)&v732[4 * (((v794 & 0x403002F3 ^ 0x242822B1) + (v794 & 0x80868D0C ^ 0x89839905) - 1) ^ 0x6D1D3240)] ^ (((2 * v796) | 0x145EAF16) - v796 + 1976608885) ^ ((HIBYTE(v772) ^ 0xC3) + 1619616662 + ((2 * (HIBYTE(v772) ^ 0xC3) + 988) & 0x34E ^ 0xFBECAFFF)) ^ (v798 - ((2 * v798) & 0x719CDA4C) + 953052454);
  HIDWORD(v672) = v800 ^ 0x274D271;
  LODWORD(v672) = v800 ^ 0xC0000000;
  v802 = *(_DWORD *)&v484[4 * (HIBYTE(v753) ^ 0x51)];
  v803 = (((v766 << 18) ^ 0x90AC0000) - ((2 * ((v766 << 18) ^ 0x90AC0000)) & 0x2B380000) - 1784876049) & 0xFC000000 ^ 0x94889042;
  v804 = (HIBYTE(v753) ^ 0xCC) - ((2 * (HIBYTE(v753) ^ 0xCC) + 341529564) & 0x144051BA) + 143512267;
  LOBYTE(v753) = 3 - (v766 >> 14);
  v805 = ((((2 * v803) & 0x68102000) - v803 + 1252303959) ^ 0x4A2C3415) & 0xFFFFFFFC | v753 & 3;
  v806 = v805 - 2 * (v805 & 0x6812E002 ^ v753 & 2);
  v807 = (((v806 << 6) - 1531083008) ^ 0x24AD0540)
       - ((2 * (((v806 << 6) - 1531083008) ^ 0x24AD0540)) & 0x8087CD00)
       - 1069291872;
  v808 = (((359467491 - v806) >> 25) & 0x6A ^ 0xFFFEFAFF) + ((359467491 - v806) >> 26) - 1556910730;
  v809 = (((v808 & 0x10008C ^ 0x1B2425DF) - 1) ^ 0x967A51A)
       - ((2 * (((v808 & 0x10008C ^ 0x1B2425DF) - 1) ^ 0x967A51A)) & 0x40198)
       + 1628330957;
  v810 = ((v808 & 0x273 ^ 0x213) + (v808 & 0x243 ^ 0xD3CAD840) - ((v808 & 0x273 ^ 0x213) & 0xFFFFFFCF)) ^ 0x726BFAE1;
  v811 = *(_DWORD *)((char *)*(&off_10112C750 + (v874 ^ 0x21CD8FA0))
                   + 4
                   * (((((v807 & 0x200 | ~v807 & 0x240) - (~v807 & 0x200) + 1228684313) ^ 0x70B0F16C) - 1) ^ 0xC1EF40BF ^ ((v810 | 0x59C2AF0B) - (v810 | 0xA63D50F4) - 1505931020) | v809 ^ (((((2 * (v807 & 0x80108080 ^ 0x100080)) & 0x100) - (v807 & 0x80108080 ^ 0x100080) - 1361265108) ^ 0x792745F3) + 169992111) ^ 0x91400003)
                   - 123020250);
  v812 = (v772 ^ 0x4405CF2 | 0xBE23E264)
       - (v772 ^ 0x4405CF2 | 0x41DC1D9B)
       + 1104944539;
  v813 = ((v811 >> 3) & 0x12303802 ^ 0x2081201) + ((v811 >> 3) & 0x80205BC ^ 0x8001009D) - 1;
  v814 = ((2 * v772) & 8) + (v772 ^ 0xFFFFFF4F) + 1954508284;
  v815 = (v812 ^ 0xBA63BE64)
       + (((v812 ^ 0x36F91E90) + 1) ^ 0x2DCABFFF)
       + ((2 * ((v812 ^ 0x36F91E90) + 1)) & 0x5B957FFE)
       - 768262143;
  v816 = *(_DWORD *)&v765[4
                        * (((v672 >> 28) - ((2 * (v672 >> 28)) & 0x35DC3076) - 1695672261) ^ 0xA55B70C4)] ^ v802 ^ v811 ^ *(_DWORD *)&v732[4 * (((v814 & 0x301E2174 ^ 0x80008004) + (v814 ^ 0x7C7E6DFB) - ((v814 ^ 0x7C7E6DFB) & 0x174)) ^ 0xB81FA113)] ^ (v815 - ((2 * v815) & 0xB9ED023C) + 1559658782) ^ v804 ^ ((v813 & 0x10220334 ^ 0xB02D8171) + (v813 & 0xA103C8A ^ 0x5805803) - 2);
  v817 = v816 - ((2 * v816) & 0x72) - 2086367943;
  v818 = ((v817 & 0x80000741 ^ 0xC0A0200) + (v817 ^ 0xF0F13DCB) - ((v817 ^ 0xF0F13DCB) & 0x22043741)) ^ 0xDD5B876FLL;
  v819 = (char *)*(&off_10112C750 + (int)(v874 & 0x82106334)) - 2045665778;
  v820 = ((v781 ^ 0xBC) + (v781 & 0xA5 ^ 0x23C1BF01) - ((v781 ^ 0xBC) & 0xA5)) ^ 0xC399BDA3;
  v821 = -45 * v819[v818] + 86;
  LODWORD(v730) = -45 * v819[((v820 | 0xA32A24BC) - (v820 | 0x5CD5DB43) + 1557519171) ^ 0x437226C7]
                + 86;
  v822 = -45
       * v819[(((2 * (v792 ^ 0xF5)) & 0xC8) - (v792 ^ 0xF5u) + 667) ^ 0x281]
       + 86;
  LODWORD(v818) = -45
                * v819[(((2 * (v801 ^ 0x19)) & 0x13A)
                                       - (v801 ^ 0x19u)
                                       + 1122) ^ 0x471]
                + 86;
  v823 = (char *)*(&off_10112C750 + (v874 ^ 0x21CD8B83)) - 724863391;
  v824 = (char *)*(&off_10112C750 + v874 - 567111409) - 1303082667;
  v825 = ((HIWORD(v792) & 0x6A ^ 0x49C41) - 1) & 0x4046A | HIWORD(v792) & 0x95;
  v826 = (char *)*(&off_10112C750 + v874 - 567111578) - 906510626;
  v827 = bswap32(*(unsigned __int16 *)&v824[2
                                          * ((((2 * (BYTE1(v801) ^ 0x26088FA)) | 0x451EE5DE)
                                            - (BYTE1(v801) ^ 0x26088FA)
                                            + 1567657233) ^ 0xA0EFFAAC)] ^ 0x4DCC);
  v828 = HIWORD(v827) - ((v827 >> 15) & 0xBC1A) - 1912054259;
  v829 = v821 - ((2 * v821) & 0x96) + 975969355;
  v830 = HIBYTE(v801) ^ 0xCE;
  v831 = (((2 * (BYTE1(v816) ^ 0xB3)) | 0x6D57027A) - (BYTE1(v816) ^ 0xB3) - 917209405) ^ 0x463A8925;
  v832 = bswap32(*(unsigned __int16 *)&v824[2 * ((v831 - ((2 * v831) & 0x2EFF6FE) - 2122843265) ^ 0xF1E6F354)] ^ 0xA312);
  v833 = *(_DWORD *)&v826[4 * (((BYTE2(v801) ^ 0xB0) - ((2 * (BYTE2(v801) ^ 0xB0)) & 0x11A) + 1150647181) ^ 0x44957BCA)] ^ *(_DWORD *)&v823[4 * (HIBYTE(v792) ^ 0xFC)] ^ (HIWORD(v832) - ((v832 >> 15) & 0x274A) + 1829245861) ^ (v730 - ((2 * (_DWORD)v730) & 0x112) - 1321180535) ^ (((2 * (BYTE2(v801) ^ 0x14104218)) | 0x277DEA3A) - (BYTE2(v801) ^ 0x14104218) - 331281693) ^ 0xBCADC899;
  LODWORD(v730) = ((BYTE2(v816) ^ 0x7F) - ((2 * (BYTE2(v816) ^ 0x7F)) & 0x140) - 976179552) ^ 0xCED57EA0;
  v834 = ((BYTE2(v816) ^ 1) - ((v816 >> 15) & 0x68) - 418550732) ^ 0xAB014C28;
  v835 = *(unsigned __int16 *)&v824[2
                                  * (((BYTE1(v781) ^ 0x70) - 173268191 - ((2 * (BYTE1(v781) ^ 0x70)) & 0xFFFFFFC7) + 194) ^ 0xF5AC2321)];
  v836 = ((v835 >> 7) & 0x1EE ^ 0x146) + ((v835 >> 8) ^ 0x7C54);
  v837 = ((v836 + 9) & 0xEE) - ((2 * (v836 + 9)) & 0xCC) + 22903;
  v838 = ((2 * v837) ^ 0xF11) + v836;
  v839 = ((8 * v837) & 0xFFFFEDE8 ^ 0x3657) + ((4 * v837) ^ 0x6CD5) + ((4 * v837) & 0x3BF8 ^ 0x21D8) + v838;
  v840 = (((v835 << 8) ^ 0x1200) - ((2 * ((v835 << 8) ^ 0x1200)) & 0x7000) + 14375) ^ 0x678B ^ (v839
                                                                                              - 2
                                                                                              * ((v839 + 6896) & 0x5FAF ^ v838 & 3)
                                                                                              - 1380);
  v841 = *(_DWORD *)&v823[4 * v830] ^ *(_DWORD *)&v826[4 * ((((2 * v834) | 0x4F27270) - v834 - 41498936) ^ 0x4E7519B5)] ^ (v822 - ((2 * v822) & 0x142) - 1689933407) ^ ((_DWORD)v730 - ((2 * (_DWORD)v730) & 0x140987EA) - 98636811) ^ 0x7B957A31 ^ ((unsigned __int16)v840 - ((2 * v840) & 0xC0CC) + 1281056870);
  v842 = *(_DWORD *)&v823[4 * (HIBYTE(v781) ^ 0x89)];
  v843 = *(_DWORD *)&v823[4 * (HIBYTE(v816) ^ 0x8D)];
  v844 = BYTE2(v781);
  LODWORD(v823) = ((v844 ^ 0xBB | 0x4EB19FDA) - (v844 ^ 0xBB | 0xB14E6025) - 1320263643) ^ 0xCEB9C66A;
  v845 = (((2 * (v844 ^ 0x7F)) | 0xC5E57870) - (v844 ^ 0x7F) - 1660075064) ^ 0x23F0B118;
  v846 = *(_DWORD *)&v826[4 * (BYTE2(v792) ^ 0x83)];
  v847 = bswap32(*(unsigned __int16 *)&v824[2 * (BYTE1(v792) ^ 0xA1)] ^ 0xA312);
  v848 = v843 ^ *(_DWORD *)&v826[4 * ((((2 * v845) & 0x9852ACD4) - v845 + 869706133) ^ 0x72D4A42C)] ^ (HIWORD(v847) - ((v847 >> 15) & 0x15340) + 2143725984) ^ ((_DWORD)v823 - ((2 * (_DWORD)v823) & 0xFC7BA4B4) + 2117980762) ^ 0xA24D04F3 ^ (v818 - ((2 * v818) & 0x30) - 972332776);
  v849 = v846 ^ v842 ^ v829 ^ v825 ^ v833 ^ v871 ^ v828;
  v850 = v841 ^ v833;
  LODWORD(v818) = v849 ^ v841 ^ 0xE98956E4;
  v851 = v849 ^ 0x57B3D0BB ^ v848;
  v852 = v848 ^ v871 ^ v841 ^ v833;
  v853 = ((v852 >> 7) & 0xFC ^ 0x54) + (BYTE1(v852) ^ 0xBBFCFC55);
  v854 = ((((2 * (BYTE1(v852) ^ 0xBD)) | 0x2A344966) - (BYTE1(v852) ^ 0xBD) + 1793448781) ^ 0x6AE5DBB3) + 1;
  v855 = (v854 ^ 0xDBF77FF7) + v853 + ((2 * v854) & 0xB7EEFFEE);
  v856 = v853 + 1141048194 + ((v855 - ((2 * v855 - 803797226) & 0xDBBA4812) + 1441310612) ^ 0x1222DBF7);
  v857 = (char *)*(&off_10112C750 + v874 - 567111084) - 1404957006;
  v858 = v856 + 840988447 - ((2 * v856) & 0x6440EF1E) + 112;
  v859 = v858 ^ v857[v858 ^ 0x3220771F];
  HIDWORD(v672) = v859 ^ 3;
  LODWORD(v672) = (v859 ^ 0xAAAAAAAA) << 24;
  v860 = (v672 >> 28) - ((2 * (v672 >> 28)) & 0xFFFFFFE7) + 115;
  HIDWORD(v672) = v860 ^ 1;
  LODWORD(v672) = (v860 ^ 0xFFFFFF9F) << 24;
  v875[2] = ((v672 >> 28) - ((2 * (v672 >> 28)) & 0x1A) - 115) ^ 0x3D;
  v861 = (char *)*(&off_10112C750 + (v874 ^ 0x21CD8022)) - 83384606;
  v875[6] = v861[HIBYTE(v851) ^ 0x8FLL] ^ HIBYTE(v851) ^ 0x48;
  v862 = v818 ^ v850;
  LODWORD(v819) = ((v818 ^ v850) >> 16) ^ 0xF1;
  v863 = (char *)*(&off_10112C750 + (v874 ^ 0x21CD921D)) - 1098572775;
  LODWORD(v819) = v863[((v819 | 0x868ED816)
                                       - (v819 | 0x797127E9)
                                       + 2037458921) ^ 0x868ED878];
  HIDWORD(v672) = ~(_DWORD)v819;
  LODWORD(v672) = (v819 ^ 0xAAAAAAAA) << 24;
  LODWORD(v824) = (((2 * HIBYTE(v862)) ^ 0x78) - 2 * (((2 * HIBYTE(v862)) ^ 0x78) & 0x76 ^ (2 * HIBYTE(v862)) & 4) + 370) & 0x166;
  LODWORD(v819) = (v672 >> 26) - ((2 * (v672 >> 26)) & 0x5A) - 83;
  LOBYTE(v842) = (((v819 >> 3) & 4 | ~(v819 >> 3) & 0xC)
                - (~(v819 >> 3) & 4)
                + 113) ^ 0xD5;
  v864 = (((HIBYTE(v862) ^ 0x3C) + 541974707) ^ 0x7DBFBCFE)
       + ((2 * ((HIBYTE(v862) ^ 0x3C) + 541974707)) & 0x401B41FC)
       + (v824 ^ 0x400005E3)
       + ((2 * (_DWORD)v824) ^ 0xFFFFFD3B)
       + 1;
  v865 = v864 - ((2 * v864 - 2071954174) & 0x809D1708) + 42912261;
  v875[11] = v819 ^ 0x2F ^ (v842 - ((2 * v842) & 0xB0) + 89);
  v875[12] = v861[v865 ^ 0xE0036B9DLL] ^ v865 ^ 0x5A;
  v866 = (char *)*(&off_10112C750 + (v874 ^ 0x21CD8A26)) - 470813346;
  LOBYTE(v865) = v866[((v852 ^ 0x31D281B6)
                     - ((2 * (v852 ^ 0x31D281B6)) & 0x4321001Eu)
                     + 631088143) ^ 0x144F25C8];
  LOBYTE(v824) = ((4 * v865) ^ 0x7F) + ((8 * v865) & 0xEF);
  v875[9] = v865 ^ 0x4D ^ ((_BYTE)v824 - ((2 * (_BYTE)v824 - 102) & 0x90) + 21);
  LODWORD(v865) = (BYTE1(v818) ^ 0x8F) + ((v818 >> 8) & 0xC8 ^ 0x86D7C540) - ((BYTE1(v818) ^ 0x8F) & 0xC8);
  v875[4] = v857[((v865 & 0x4FB ^ 0xB882C073) + (v865 & 0x304 ^ 0x2101) - 1) ^ 0xB882E4A6] ^ BYTE1(v818) ^ 0xB0;
  v875[13] = v857[(((v862 >> 8) & 0x1E ^ 0x35FD411B) + ((v862 >> 8) & 0xE1) - 1) ^ 0x35FD4192] ^ BYTE1(v862) ^ 0xAA;
  v875[10] = v861[BYTE3(v818) ^ 0x55] ^ BYTE3(v818) ^ 0x92;
  LODWORD(v865) = v866[((v818 ^ 0xCA | 0x3BDBDF9D)
                                       - (v818 ^ 0xCA | 0xC4242062)
                                       - 1004265374) ^ 0x3BDBDF56];
  LODWORD(v824) = (((4 * v865) ^ 0x4C) - (((4 * (_DWORD)v865) ^ 0x4Cu) >> 5 << 6) + 98) ^ 0xFFFFFFA6;
  v875[3] = v865 ^ 0x47 ^ ((_BYTE)v824 - ((2 * (_BYTE)v824 - 120) & 0x84) + 6);
  LODWORD(v865) = v863[(((2 * (BYTE2(v852) ^ 0x807000F9)) & 0x600086)
                                       - (BYTE2(v852) ^ 0x807000F9)
                                       + 121686716) ^ 0x8730CA4FLL];
  HIDWORD(v672) = ~(_DWORD)v865;
  LODWORD(v672) = (v865 ^ 0xAAAAAAAA) << 24;
  LODWORD(v865) = (v672 >> 26) - ((v672 >> 26) >> 5 << 6) - 32;
  v875[7] = v865 ^ (v865 >> 3) & 0xC ^ 0x9F;
  *v875 = v857[(((2 * (BYTE1(v851) ^ 0xA3350AE1)) | 0xF5D48184) - (BYTE1(v851) ^ 0xA3350AE1) + 85311294) ^ 0x59DF4AAFLL] ^ BYTE1(v851) ^ 0xAE;
  LODWORD(v857) = v863[(((2 * (BYTE2(v818) ^ 0x7B)) & 0xA6) - (BYTE2(v818) ^ 0x7Bu) + 684) ^ 0x250];
  HIDWORD(v672) = ~(_DWORD)v857;
  LODWORD(v672) = (v857 ^ 0xAAAAAAAA) << 24;
  LODWORD(v857) = (v672 >> 26) - ((2 * (v672 >> 26)) & 0x64) - 78;
  v875[5] = v857 ^ 0xD9 ^ (((2 * ((v857 >> 3) & 0xC ^ 0x99)) | 0xA)
                                          - ((v857 >> 3) & 0xC ^ 0x99)
                                          + 123);
  LOBYTE(v857) = v866[((v851 | 0xCDF3CFD0)
                     - (v851 | 0x592C900)
                     + (v851 & 0x2F | 0x5028900)) ^ 0xCD638FA6];
  LOBYTE(v865) = ((((4 * (_BYTE)v857) ^ 0x4C) + (~(2 * ((4 * (_BYTE)v857) ^ 0x4C)) | 0x17) + 118) ^ 0xB1) + 68;
  LOBYTE(v865) = (v857 & 0x80 ^ 0xD7) + 2 * v865 + (v865 ^ 0x7F);
  LOBYTE(v857) = ((v857 & 0x50)
                + (v857 & 0x7F ^ 0x7D)
                - ((v857 & 0x7F ^ 0x7D) & 0x50)
                + 0x80) ^ 0x9C;
  v875[14] = (((2 * (_BYTE)v857) & 0xDA) - (_BYTE)v857 - 110) ^ 0x84 ^ (v865 - ((2 * v865 + 84) & 0x44) + 76);
  LOBYTE(v866) = v866[v862 ^ 0x74];
  LOBYTE(v862) = (((((2 * (_BYTE)v866) ^ 0x26) & 2 ^ 0x12)
                 - (((2 * (_BYTE)v866) ^ 0x26) & 2)
                 + ((((2 * (_BYTE)v866) ^ 0x26) - ((2 * ((2 * (_BYTE)v866) ^ 0x26)) & 8) + 36) & 0x22 ^ 0x20)) ^ 0x30)
               + (v866 ^ 0xB3);
  v875[15] = v866 ^ 0x4D ^ (((4 * v862) ^ 0x7C)
                                           + 8 * v862
                                           - ((2 * (((4 * v862) ^ 0x7C) + 8 * v862) + 8) & 0x90)
                                           + 76);
  LODWORD(v866) = v863[((HIWORD(v851) & 0xCD ^ 0x87B57F3E) - (HIWORD(v851) & 0x32)) ^ 0x87B57FAE];
  HIDWORD(v672) = ~(_DWORD)v866;
  LODWORD(v672) = (v866 ^ 0xAAAAAAAA) << 24;
  LODWORD(v866) = (v672 >> 26) - ((2 * (v672 >> 26)) & 0x5C);
  LODWORD(v863) = (((((_DWORD)v866 - 82) >> 2) & 0x18 ^ 0x29) - 1) ^ 0x32;
  HIDWORD(v672) = ((_DWORD)v866 - 82) ^ 0x2E;
  LODWORD(v672) = (81 - (_DWORD)v866) << 24;
  LODWORD(v866) = v672 >> 31;
  HIDWORD(v672) = (_DWORD)v866;
  LODWORD(v672) = (((_DWORD)v866 + (~(2 * (_DWORD)v866) | 0x21) - 16) ^ 0x6E ^ (((2 * (_DWORD)v863) | 0x26)
                                                                              - (_DWORD)v863
                                                                              + 109)) << 24;
  v875[8] = ((((v672 >> 25) - ((2 * (v672 >> 25)) & 0xAC) + 90) ^ 3) - 4) ^ 0x26;
  v875[1] = v861[HIBYTE(v852) ^ 0xA8] ^ HIBYTE(v852) ^ 0x6F;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v872
                                                      + 8 * ((31514 * (v874 != -691612894)) ^ (v874 - 567100335)))
                                          - 4))(a1);
}

uint64_t sub_1000926DC(uint64_t result)
{
  int v1;
  int v2;

  if ((v1 ^ 0x7BA4ABD9) + ((2 * v1) & 0xF7481090) == 2074389465)
    v2 = 2134650450;
  else
    v2 = 2134608426;
  *(_DWORD *)(result + 16) = v2;
  return result;
}

void sub_100092750(uint64_t a1)
{
  __asm { BR              X16 }
}

uint64_t sub_100092AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v9;

  if (v6 == 15 && v5 == 31)
    v9 = 2134650450;
  else
    v9 = 2134608363;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * v4) - 4))(a1, a2, a3, a4, v9);
}

uint64_t sub_100092B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  *(_BYTE *)(a36 - 0x17A7E185F73CB638) = 52;
  STACK[0x850] = *(_QWORD *)(v43 + 8 * (v41 - 808437987))
               - 1130658149
               * ((((v42 - 176) | 0xC79634E12288039ELL) - ((v42 - 176) | 0x3869CB1EDD77FC61) + 0x3869CB1EDD77FC61) ^ 0x20B4E7FEFB4BA53)
               + (v41 - a8)
               - 8751;
  *(_DWORD *)(v42 - 168) = v41
                         - 1130658149
                         * ((((v42 - 176) | 0x2288039E) - ((v42 - 176) | 0xDD77FC61) - 579339167) ^ 0xEFB4BA53)
                         + 142878637;
  v44 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v40 + 8 * (v41 - 808442434)) - 1244139603))(v42 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40
                                                      + 8
                                                      * ((18512 * (*(_DWORD *)(v42 - 164) == 2134650450)) ^ (v41 - 808435394)))
                                          - 4))(v44);
}

uint64_t sub_100092C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,_BYTE *a44)
{
  int v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;

  if (*(_DWORD *)(*(_QWORD *)(v45 + 8 * (v44 - 7657)) - 652711350) == ((v44 - 1308631856) & 0x7E2FDFE7) + 278004897)
    v48 = v46 + 1;
  else
    v48 = v46;
  *a44 = v48;
  return ((uint64_t (*)(void))(*(_QWORD *)(v47 + 8 * v44) - 12))();
}

uint64_t sub_100092C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8 * ((28716 * (a36 != 0)) ^ (v37 - 808428954))) - 8))(a36, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_100092CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;

  v42 = 2 * (v41 ^ 0x302FD27E);
  ((void (*)(void))(*(_QWORD *)(v40 + 8 * (v42 ^ 0x1AE3)) - 1016256651))();
  v43 = sub_100DD0758();
  return (*(uint64_t (**)(uint64_t))(a40 + 8 * v42))(v43);
}

uint64_t sub_100092D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * (((v9 ^ (a8 - 1554) ^ 0x6850) * *(unsigned __int8 *)(v8 + 24)) ^ (v9 - 808412351)))
                            - (v9 ^ 0x302FA4C7u)
                            + 31256))();
}

uint64_t sub_100092DC4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = ((uint64_t (*)(_QWORD, unint64_t))(*(_QWORD *)(v0 + 8 * (v1 ^ 0x774E)) - 574720510))(*(_QWORD *)(v3 - 0x2A6886EF4EAA6D78), *(_QWORD *)(v3 - 0x2A6886EF4EAA6D70) ^ 0xEFFAA4C80FF11A2ALL);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * v1) - ((v1 - 4575) ^ 0x6849)))(v4);
}

uint64_t sub_100092E38()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;

  v4 = v3(((v0 + 808416926) ^ 0xB4FFA434) + *(_DWORD *)(v2 - 0x2A6886EF4EAA6D80));
  *(_DWORD *)(v2 - 0x2A6886EF4EAA6D80) = 2066711848;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * v0) - 8))(v4);
}

uint64_t sub_100092E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BOOL4 v40;

  v40 = a29 - 0x7A3DF5055826BBD5 < (unint64_t)(v38 - 0x3CBDC4DD045DD3F5);
  if ((unint64_t)(a29 - 0x7A3DF5055826BBD5) < 0x5F51AE9C != (unint64_t)(v38 - 0x3CBDC4DD045DD3F5) < 0x5F51AE9C)
    v40 = (unint64_t)(v38 - 0x3CBDC4DD045DD3F5) < 0x5F51AE9C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * ((v37 - 808428954) ^ (24808 * v40))) - (v37 - a8) + 8739))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_100092F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  *(_QWORD *)(v38 + 640 * v39 + 0x46D1325FD7A0A224) = 0x54D5F1A67B66DF73;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(808443631 - (a9 + 808434872) + *(_QWORD *)(v40 + 8 * a9) - 24))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100092F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,unint64_t a33,uint64_t a34,uint64_t a35,unint64_t a36,unint64_t a37)
{
  int v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;

  v43 = 668045089 * ((-1481623681 - ((v41 - 176) | 0xA7B0377F) + ((v41 - 176) | 0x584FC880)) ^ 0x1586B88B);
  STACK[0x850] = a36;
  STACK[0x878] = a33;
  STACK[0x868] = a37;
  *(_DWORD *)(v41 - 128) = ((a32 ^ 0xE3BD7C2D) - 8507657 + ((2 * a32) & 0xFF7BFEB6 ^ 0x380106A4)) ^ v43;
  *(_DWORD *)(v41 - 144) = v43
                         + ((1179394345 * v40 + 569428836) ^ 0x7FFC3E5B)
                         + ((2 * (1179394345 * v40 + 569428836)) & 0xFFF87CB6)
                         - 12587017;
  *(_DWORD *)(v41 - 160) = -808435715 - v43 + v39 - 2350;
  *(_DWORD *)(v41 - 168) = v43 + v37 + 1091783860;
  v44 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v38 + 8 * (v39 - 808440789)) - 1991047970))(v41 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v42 + 8 * (v39 - 808416926)) - 8))(v44);
}

uint64_t sub_1000930DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8 * (v37 - 808426734)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_100093110()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 - 808403417) | (v0 < 63))) - 8))();
}

uint64_t sub_100093144()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 - 808411037) ^ (23 * (v0 > 61)))) - 8))();
}

uint64_t sub_100093174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  int v38;
  uint64_t v39;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * (v38 + v37)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_10009319C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unint64_t a30,uint64_t a31,int a32,unint64_t a33,uint64_t a34,uint64_t a35,unint64_t a36,unint64_t a37)
{
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v42 = 263575687
      * ((2 * ((v40 - 176) & 0x3B81AC925E2C1A48) - (v40 - 176) - 0x3B81AC925E2C1A4ALL) ^ 0xC8EB2EA739F325F0);
  STACK[0x868] = a30;
  STACK[0x858] = a1;
  STACK[0x870] = a37;
  *(_DWORD *)(v40 - 120) = (((802188633 * v37 - 221405586) ^ 0xD6BC7E99)
                          + 1073740656
                          + ((2 * (802188633 * v37 - 221405586)) & 0xAD78FD32)) ^ v42;
  STACK[0x890] = a33;
  STACK[0x850] = a36;
  STACK[0x880] = v42 + a29 - ((2 * a29 + 0xE46A8F38FDE3E5ALL) & 0x1B8F102770E059A6) - 0x1B1523727FA0B400;
  *(_DWORD *)(v40 - 160) = a32 - v42 + (~(2 * a32 - 230956972) | 0x369C3323) + 1573901977;
  *(_DWORD *)(v40 - 136) = (v39 - 808434959) ^ v42;
  v43 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v38 + 8 * (v39 ^ 0x302FD023)) - 1415371922))(v40 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v41 + 8 * (v39 - 808416926)) - 8))(v43);
}

uint64_t sub_10009333C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8 * (((4 * (a36 != 0)) | (8 * (a36 != 0))) ^ (v37 - 808403502))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_10009339C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t (*v41)(uint64_t);
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;

  v43 = (v40 + v42 + 1448) | 0x2003;
  v52 = v41(200);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a40 + 8 * (int)(((((v43 + 897571384) & 0xFAAFDEFF ^ 0xCE40B5FD) + ((v43 + 1138297393) & 0xBDB7DFFF)) * (v52 != 0)) ^ v43)))(v52, v44, v45, v46, v47, v48, v49, v50, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_100093418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;

  v46 = ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v45 + 8 * (int)(v44 ^ 0x1910AF4)) - 163157498))(a44, 0);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40
                                                      + 8
                                                      * (int)(v44 ^ 0x1914B7E ^ (52730
                                                                               * (v44 > ((v44 - 26242561) ^ 0x66B55E0D)))))
                                          - 4))(v46);
}

uint64_t sub_1000934AC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((((v2 ^ 0xCFD0808A) + (v2 ^ 0x302F7F38)) * (v0 < v1)) ^ v2))
                            - 12))();
}

uint64_t sub_1000934FC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((11635 * (v1 == ((v2 + 2274191) | 0x300CCCE2) + 533142554)) ^ v2))
                            + 808443631
                            - (v2 - v0 - 150)
                            - 24))();
}

uint64_t sub_100093554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  _QWORD *v46;
  uint64_t v47;

  *v46 = a45;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * (a9 + v45 - 1711)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100093574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v32;
  int v33;
  uint64_t v34;
  _BOOL4 v35;

  v35 = v32 == (v33 + 87 + ((v33 + 32) | 0x28) - 11);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v34 + 8 * ((v35 | (8 * v35)) ^ (v33 - 808427470))) - 12))(a32);
}

uint64_t sub_1000935E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v42 = ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * (v41 ^ 0x2A49)) - 309745142))(a1, 64);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a40 + 8 * ((3630 * ((((_DWORD)v42 << ((v41 ^ 0xA) + (v41 ^ 0xC8) - 3)) & 0xFFFFFCBE) + (v42 ^ 0x7FFFFE5F) == 2147483231)) ^ v41)) - 12))(v42, v43, v44, v45, v46, v47, v48, v49, 4, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_10009367C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * (((((v39 == 0x2C86DCAB8BD0EBF6) ^ (v38 + v37 + 10)) & 1) * (((v37 - 1296048170) & 0x7D6FDEEB) - 808411002)) ^ v37)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1000936F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;
  uint64_t v39;

  *(_BYTE *)(v38 - 0x2C86DCAB8BD0EBEELL) = 100;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * (v37 - 808437161)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_100093728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  uint64_t v39;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * (v38 - 808432029)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1000937E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  int v32;
  uint64_t v33;

  return ((uint64_t (*)(void))(*(_QWORD *)(v33
                                        + 8
                                        * ((4
                                          * ((((a32 - 775923006) < 0xA) ^ (v32 - 52)) & 1)) & 0xEF | (16 * ((((a32 - 775923006) < 0xA) ^ (v32 - 560390964)) & 1)) | (v32 - 808431491)))
                            - 4))();
}

uint64_t sub_100093850()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((122
                                     * ((v0 & 0xF137777D ^ 0x5106)
                                      + v1
                                      + (((v0 & 0xF137777D) - 1133548354) & 0x73BFFEF7 ^ 0xE1EFF23C) > 9)) ^ v0 & 0xF137777D)))();
}

uint64_t sub_1000938AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  int v39;
  uint64_t v40;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * ((26052 * ((v39 - 1584369645 + v38 + a9) < 0xA)) ^ v38)) - (((v38 + 270786614) | 0x200BDC82u) ^ 0x302FDEEFLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100093910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * ((int)a1 + v37 - 847)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_100093934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  __int16 v39;
  int v40;
  uint64_t v41;
  __int16 v42;

  v42 = (((2 * v39) & 0x2C) + (v39 & 0x1F ^ 0xDFDF ^ v40 ^ 0xFEC2) + 3082) ^ 0x4C95;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 + 8 * ((v40 - 808428954) ^ (16 * ((unsigned __int16)(((2 * v42) & 0x8520) - v42 - 29329) != 52717)))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_1000939C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8 * a9) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100093A2C()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v1 + 8 * (v0 - 808415109)))(0x1F67BFF2ALL, 0xD1D052324CE3D123, 2928413253, 5489);
}

uint64_t sub_100093B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v9 + 8 * (((v5 > v7) * v8) ^ v4)))(a1, a2, a3, a4, (v4 + v6));
}

uint64_t sub_100093B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  _QWORD *v39;
  unsigned int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  unint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v47 = (v38 + v42) & v43;
  v48 = (v47 ^ v44) + v41;
  v49 = (v47 ^ v44) + a4;
  v50 = (*(_DWORD *)(*v39 + 4 * ((v40 ^ v45) + (a1 & (2 * v40))) + a2) == (_DWORD)a3) * v49;
  v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8 * (int)(v50 ^ v47));
  return v51(a1, a2, a3, a4, v48, v51, v50, v49, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100093BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (int)((10291 * (a5 >= (a5 ^ 0x7A30DAB0) + 1670541658)) ^ (a5 - 1243540546)))
                            - 8))();
}

uint64_t sub_100093BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  uint64_t v47;
  signed int v48;

  v48 = *(_DWORD *)(a36 - 0x61EB587DDF0B8AA3) + ((v46 - 808413843) ^ 0xE5B84A59);
  if (v48 < 0)
    v48 = -v48;
  HIDWORD(a46) = (v48 ^ 0xFB7C6FEF) + ((2 * v48) & 0xF6F8DFDE) + 902813371;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 + 8 * (v46 - 808432705)) - 4))(83448281, 4211537876, 268742175, 539690530, 0x37F5BD8FA7D6231CLL, 0x12FF3FBFELL, 0xDDF9436BD9F3D77BLL, 2928442901, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a36 - 0x61EB587DDF0B8A9FLL,
           a45,
           a46);
}

uint64_t sub_100093D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unint64_t v44;
  uint64_t v45;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 + 8 * (((v39 > v42) * v43) ^ v38)) - ((v38 + v40) & v41 ^ v44)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100093D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * (((*(_DWORD *)(*v39 + 4 * ((a6 & (2 * v40)) + (v40 ^ ((v38 + v41 + (_DWORD)a3) | a4) ^ a5)) + a7) != ((v38 + v41 + (_DWORD)a1) & a2 ^ a8)) * v42) ^ (v38 + v41))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100093DAC()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * (v0 - 808409232)))();
}

uint64_t sub_100093DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;

  *(_DWORD *)(a37 - 0x23DA6DB8F14CF5FFLL) = 0;
  *(_DWORD *)(a37 - 0x23DA6DB8F14CF60BLL) = 2134650451;
  return ((uint64_t (*)(void))(*(_QWORD *)(v38
                                        + 8
                                        * ((43165 * (*(_DWORD *)(a36 - 0x7ED4C73C7AB40199) == 2134650452)) ^ (v37 - 808428935)))
                            - (((v37 - 808418978) | 0x804u) ^ 0x6849)))();
}

uint64_t sub_100093E68()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 - 0x23DA6DB8F14CF607) = ((2 * (*(_DWORD *)(v2 - 0x23DA6DB8F14CF607) + 12833198)) & 0xFF785CB4)
                                         + (((v0 + 268461595) | 0x202F1083) ^ 0xCF50211B)
                                         + ((*(_DWORD *)(v2 - 0x23DA6DB8F14CF607) + 12833198) & 0x7FFFFFFF ^ 0xFFBC2E5A);
  *(_DWORD *)(v2 - 0x23DA6DB8F14CF5EFLL) = *(_DWORD *)(v1 - 0x7ED4C73C7AB40195) - 2134650450;
  *(_DWORD *)(v2 - 0x23DA6DB8F14CF5EBLL) = *(_DWORD *)(v1 - 0x7ED4C73C7AB40191) - 2134650450;
  *(_DWORD *)(v2 - 0x23DA6DB8F14CF5E7) = *(_DWORD *)(v1 - 0x7ED4C73C7AB4018DLL) - 2134650450;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * v0) - 8))();
}

uint64_t sub_100093F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;
  _BOOL4 v41;

  v41 = a36 == 0x6F7634AB0303F6BELL || a37 == 0x76BC951E2A9A2963 || a29 == 0x4E4560996A3C4DB2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8 * ((v37 - 808402923) | (2 * v41))) - (v37 - 808430136) + 13479))(a1, a2, a3, a4, a29, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_100094004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;

  *(_DWORD *)(v43 - 0x76BC951E2A9A2963) = 473000100;
  v46 = 210615973
      * ((((v45 - 176) | 0xE3416E74FAD07761) - (v45 - 176) + ((v45 - 176) & 0x1CBE918B052F8898)) ^ 0xAC828B9A533FBE7ELL);
  STACK[0x860] = v44;
  STACK[0x868] = v46 + a5 - ((2 * a5 + 0x63753ECD2B87649CLL) & 0xD62EE769895E791ELL) + 0x1CD2131B5A72EEDDLL;
  *(_DWORD *)(v45 - 176) = v46 + v41 + 1350;
  *(_DWORD *)(v45 - 140) = v46
                         + (v40 ^ 0x87C626A2)
                         - 132546
                         + ((((v41 - 1318073780) & 0x7EBFDFEB) - 45277005) & (2 * v40) ^ 0x2070B292);
  STACK[0x858] = (unint64_t)&STACK[0x638EEE97B69ED7A5];
  v47 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v42 + 8 * (v41 - 13017)) - 1831502182))(v45 - 176);
  return (*(uint64_t (**)(uint64_t))(a40 + 8 * ((41507 * (*(_DWORD *)(v45 - 144) == 2134650450)) ^ v41)))(v47);
}

uint64_t sub_1000941A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  int v47;
  int v48;
  uint64_t v49;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * ((47261 * (a47 != v48)) ^ v47)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1000941E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,_DWORD *a44,int a45,int a46)
{
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;

  v51 = *(_QWORD *)(v48 - 0x6F7634AB0303F6BELL);
  v52 = (v50 - 176) | 0x64AD3B57;
  v53 = 1130658149 * ((v52 - ((v50 - 176) & 0x64AD3B57)) ^ 0xA991829A);
  *(_DWORD *)(v50 - 152) = -1130658149 * ((v52 - ((v50 - 176) & 0x64AD3B57)) ^ 0xA991829A)
                         + a46 * ((v47 + 808430136) ^ 0x7D1F83A6)
                         + 1299614110;
  *(_DWORD *)(v50 - 176) = (v47 + 22844) ^ v53;
  *(_DWORD *)(v50 - 168) = v53 - 1562059364;
  *(_QWORD *)(v46 + 1712) = v51;
  v54 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v49 + 8 * (v47 ^ 0x337A)) - 198217091))(v50 - 176);
  *a44 = *(_DWORD *)(v50 - 172);
  return (*(uint64_t (**)(uint64_t))(a40 + 8 * v47))(v54);
}

uint64_t sub_1000942CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;
  BOOL v39;
  int v40;

  if (a36)
    v39 = a37 == 0;
  else
    v39 = 1;
  v40 = v39;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8 * (((v37 - 808427269) * v40) ^ (v37 - 808435428))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_10009432C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(uint64_t), uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unint64_t a41)
{
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t);
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  int *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;

  v49 = a1 - 928;
  v66 = bswap32(*(unsigned __int16 *)(v42 + 26)) >> 16;
  v67 = v42 + v66 + 28;
  v65 = bswap32(*(_DWORD *)(v42 + 4));
  v50 = v48 - 176;
  v51 = 19382863 * ((((v48 - 176) | 0xFA33C0BE) - ((v48 - 176) | 0x5CC3F41) + 97271617) ^ 0xF2F64C60);
  *(_QWORD *)(v41 + 1696) = *(_QWORD *)(v44 + 8 * (v49 ^ 0x78F)) - 1345763143;
  *(_DWORD *)(v48 - 168) = v49 - v51 - 3770;
  *(_QWORD *)(v41 + 1712) = &STACK[0x9ED338CF0B26DF6];
  *(_DWORD *)(v48 - 148) = v51 + 749884277;
  *(_WORD *)(v48 - 152) = v51 + 6773;
  v43(v48 - 176);
  v52 = *(_QWORD *)(a33 + 8 * (v49 ^ 0x3FALL)) + (((v49 + 806334790) | 0x201803u) ^ 0xFFFFFFFFCFD0211FLL);
  STACK[0x858] = *(_QWORD *)(v44 + 8 * (v49 - 1400)) - 251061686;
  STACK[0x868] = v52 ^ (1167911989
                      * ((((2 * (v48 - 176)) | 0x68041A1AB6DEE1BELL) - (v48 - 176) + 0x4BFDF2F2A4908F21) ^ 0xE980049275C5AF4CLL));
  STACK[0x850] = (unint64_t)&STACK[0x9ED338CF0B26DF6];
  *(_DWORD *)(v48 - 144) = v49
                         + 1897072881
                         - 1167911989 * ((((2 * (v48 - 176)) | 0xB6DEE1BE) - (v48 - 176) - 1534030047) ^ 0x75C5AF4C);
  *(_DWORD *)(v48 - 160) = (1167911989 * ((((2 * (v48 - 176)) | 0xB6DEE1BE) - (v48 - 176) - 1534030047) ^ 0x75C5AF4C)) ^ 0x7E831C2E;
  v45(v48 - 176);
  v53 = *v47;
  v54 = 8 * (v49 ^ 0x3ACLL);
  v55 = *(_QWORD *)(a33 + v54) - 4;
  STACK[0x858] = (unint64_t)(v47 + 1);
  v56 = 1167911989 * (((v50 | 0x324E8CF7A64F34ALL) - v50 + (v50 & 0xFCDB1730859B0CB0)) ^ 0x5EA6E15054CE2CD9);
  STACK[0x868] = v55 ^ v56;
  STACK[0x850] = (unint64_t)&STACK[0x9ED338CF0B26DF6];
  *(_DWORD *)(v48 - 144) = v49 + 1897072881 - v56;
  *(_DWORD *)(v48 - 160) = (v53 - 1693823455) ^ v56;
  v45(v48 - 176);
  STACK[0x5E8] = *(_QWORD *)(a33 + 8 * (v49 + 317)) - 8;
  STACK[0x5F0] = v46 ^ 0xDD5AB24CB2205C24;
  *(_DWORD *)(v48 - 176) = (v49 - 205649813) ^ (210615973
                                              * (((((v48 - 176) | 0x8945AFAA) ^ 0xFFFFFFFE) - (~(v48 - 176) | 0x76BA5055)) ^ 0xDF55994A));
  STACK[0x858] = (unint64_t)&STACK[0x5E8];
  ((void (*)(uint64_t))((char *)*(&off_10112C750 + (v49 ^ 0x13BE)) - 1008635766))(v48 - 176);
  a41 = STACK[0x860] ^ 0x3D41E53967680057;
  v57 = *(_QWORD *)(a33 + v54) - 4;
  v58 = 1167911989 * ((2 * (v50 & 0x1D03676973ED9038) - v50 - 0x1D03676973ED9040) ^ 0xBF7E9109A2B8B053);
  STACK[0x858] = (unint64_t)&a41;
  STACK[0x850] = (unint64_t)&STACK[0x9ED338CF0B26DF6];
  STACK[0x868] = v57 ^ v58;
  *(_DWORD *)(v48 - 160) = v58 ^ 0x1A467C7B;
  *(_DWORD *)(v48 - 144) = v49 + 1897072881 - v58;
  v45(v48 - 176);
  v59 = *(_QWORD *)(a33 + 8 * (v49 + 198)) - 4;
  v60 = 1167911989 * (((v50 | 0xDD243F77FB2A7604) - v50 + (v50 & 0x22DBC08804D589F8)) ^ 0x80A636E8D580A997);
  STACK[0x850] = (unint64_t)&STACK[0x9ED338CF0B26DF6];
  STACK[0x868] = v59 ^ v60;
  STACK[0x858] = (unint64_t)*(&off_10112C750 + v49 - 3281) - 996188027;
  *(_DWORD *)(v48 - 144) = v49 + 1897072881 - v60;
  *(_DWORD *)(v48 - 160) = v60 ^ 0x7E831C2E;
  v45(v48 - 176);
  v61 = 19382863 * ((2 * (v50 & 0x2D990B6FD67E7D48) - v50 + 0x5266F490298182B5) ^ 0x27B23A321440E6BLL);
  STACK[0x850] = (*(_QWORD *)(a33 + 8 * v49) - 4) ^ v61;
  STACK[0x860] = (unint64_t)&STACK[0x69C];
  STACK[0x858] = (unint64_t)&STACK[0x9ED338CF0B26DF6];
  *(_DWORD *)(v48 - 152) = v61 + v49 - 1253357823;
  a13(v48 - 176);
  v62 = 210615973 * (((v50 | 0x504E0C9B) - (v50 & 0x504E0C9B)) ^ 0xF9A1C584);
  STACK[0x870] = v67;
  STACK[0x858] = (unint64_t)*(&off_10112C750 + (v49 ^ 0x18CA)) - 1339664674;
  STACK[0x878] = (unint64_t)&STACK[0x69C];
  STACK[0x850] = v67;
  *(_DWORD *)(v48 - 160) = ((v65 - v66 - 20) ^ 0x6F47FDFF) - v62 + ((2 * (v65 - v66 - 20)) & 0xDE8FFBFE) - 50400534;
  *(_DWORD *)(v48 - 152) = v62 + v49 + 1318;
  v63 = ((uint64_t (*)(uint64_t))((char *)*(&off_10112C750 + v49 - 1245) - 1555099887))(v48 - 176);
  return (*(uint64_t (**)(uint64_t))(a33 + 8 * (v49 ^ 0xCA0)))(v63);
}

uint64_t sub_1000948F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8 * (((((v40 - 808439966) | 0x1098) ^ 0x553A) * ((a29 & 0x800000) == 0)) ^ (v40 - 808433320))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_100094960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * (int)((((_DWORD)a39 == 968594285) * ((a39 - 808435718) ^ 0x669D)) ^ (a39 - 808433320))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000949D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t v37;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37
                                                                                + 8
                                                                                * (((v36 ^ 0x302FCED8)
                                                                                  * (a36 != 0xAED17A9F3C53CFFLL)) ^ (v36 - 808409232))))(a1, a2, a3, a4, a29);
}

uint64_t sub_100094A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  uint64_t v46;
  uint64_t v47;
  _BOOL4 v48;

  v48 = *(_QWORD *)(*(_QWORD *)(v46 - 0xAED17A9F3C53CF7) - 0x50116134DEDAF9CELL) == 0x50116134DEDAF9CELL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * (((8 * ((((v45 ^ a9) - 16) ^ v48) & 1)) & 0xDF | (32 * ((((v45 ^ a9) - 808422672) ^ v48) & 1))) ^ v45)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_100094AB0@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * a1) - 8))(8729, 544, 0xAFEE9ECB2125063ALL, 4294952466, 4294958002, 47, 8890);
}

uint64_t sub_100094B94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 + 8 * (int)(((*(_QWORD *)(v40 + v38) + a8 != v43) * (v39 + ((v41 + v44) & v42) + 2844)) ^ v41)) - 8))(a1, a2, a3, a4, a5, a6, a7, (v41 + v44) & v42, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100094BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  uint64_t v43;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * (int)(((((v42 + v41 + 121) ^ ((*(_QWORD *)(v39 + a3) ^ v38) > v40)) & 1) * (((v41 + a1) | a2) + a4)) ^ v41)) - 8))(a1, a2, a3, a4, a5, a6, a7, (v42 + v41 - 135), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100094C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, unint64_t a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (v8 ^ ((v9 == v7) | (16 * (v9 == v7))))) - ((v8 + a5) ^ a6 ^ a7)))();
}

uint64_t sub_100094C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  int v41;
  uint64_t v42;
  unsigned int v43;
  int v44;
  _BOOL4 v45;

  v43 = *(_DWORD *)(v37 - 0x50116134DEDAF9BELL) + 1142965064;
  v44 = v43 < (((v41 - 8754) | 0x4680) ^ 0xC35C3771);
  v45 = v43 > v38;
  if (v39 != v44)
    v45 = v44;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(808443631 - (v41 ^ v40) + *(_QWORD *)(v42 + 8 * (int)((v45 * a6) ^ v41)) - 20))(a1, a2, a3, a4, a5, a6, a7, v41 ^ v40, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_100094CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (v9 ^ (11272 * (v8 - v7 == 929298949))))
                            - ((v9 - 204297964) & 0xC2D32B2 ^ a7)))();
}

uint64_t sub_100094D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * (int)((((((v37 + 843036688) & 0xFDEFDFE7) - 74) ^ ((v37 + 805797269) | 0x281A63)) * (a37 != 0x365A7CC8838A454FLL)) ^ (v37 - 7884))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_100094D88@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;
  uint64_t v38;

  *(_DWORD *)(v37 - 0x365A7CC8838A454FLL) = *(_DWORD *)(a37 - 0x50116134DEDAF9BALL);
  return (*(uint64_t (**)(void))(v38 + 8 * (a1 - 808433348)))();
}

uint64_t sub_100094DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  uint64_t v34;

  return ((uint64_t (*)(void))(*(_QWORD *)(v34 + 8 * ((v33 - 808436557) ^ (62 * (a33 == 0x49D101BBD68D20CDLL)))) - 12))();
}

uint64_t sub_100094E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  uint64_t v45;
  uint64_t v46;

  *(_QWORD *)(v45 - 0x49D101BBD68D20CDLL) = a44 - 0x50116134DEDAF9B2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v46 + 8 * (v44 - 824)) - 12))();
}

uint64_t sub_100094E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * ((32618 * (((v40 == 0x46155D6EBDEB71FELL) ^ (v41 - v39 - 41)) & 1)) ^ (v38 - 1743))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100094EAC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;

  *(_DWORD *)(a23 - 0x46155D6EBDEB71FELL) = *(_DWORD *)(a37 - 0x50116134DEDAF9B6);
  return ((uint64_t (*)(void))(808443631 - (a1 + 808437458) + *(_QWORD *)(v37 + 8 * a1) - 20))();
}

uint64_t sub_100094F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  char v46;
  int v47;
  uint64_t v48;
  _BOOL4 v50;

  HIDWORD(a45) = 2134608427;
  v50 = v46 != 114 && a37 != 0x51161784FFA7AB29;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * ((v47 - 808434872) ^ ((2 * v50) | (16 * v50)))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_100094F9C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 808428581)) - 12))();
}

uint64_t sub_100094FB8@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v2 - 808402087) ^ ((8 * (a1 < 116)) | ((a1 < 116) << 6))))
                            - (((v2 - v1 + 1743) | 0x222u) ^ 0x222FLL)))();
}

uint64_t sub_100095000@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  char v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((13571 * (a1 == (((v1 + v2) ^ (v2 - 48)) + 60))) ^ v1)))();
}

uint64_t sub_100095030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;
  BOOL v39;
  int v40;

  if (a37)
    v39 = a33 == 0;
  else
    v39 = 1;
  v40 = !v39;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8 * ((((v37 + 1879154826) & 0x5FCEB9DB ^ 0x9940) * v40) ^ (v37 - 808428954))) - 8))(a1, a2, a3, a33, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1000950BC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = v1 != 1140439741 && v2 != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((a1 - 1133525594) & 0x73BFDFF3) - 808422870) * v5) ^ a1)) - 8))();
}

uint64_t sub_100095110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,unint64_t a44)
{
  int v44;
  uint64_t v45;
  unsigned __int8 *v46;
  void (*v47)(uint64_t);
  void (*v48)(uint64_t);
  int v49;
  unint64_t v50;
  uint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;

  v52 = v44 - 2374;
  v53 = (v44 + 1249285047) & 0xB5896FFD;
  v54 = (uint64_t)&v46[56 * *v46 + 24];
  v55 = v51 - 176;
  v56 = 19382863 * ((v51 - 176) ^ 0x501DD73308C58CDELL);
  *(_DWORD *)(v51 - 168) = v44 - 2374 - v56 - 3770;
  *(_QWORD *)(v45 + 1696) = v54;
  *(_WORD *)(v51 - 152) = v56 + 6777;
  *(_QWORD *)(v45 + 1712) = a44;
  *(_DWORD *)(v51 - 148) = v56 + 749884278;
  v47(v51 - 176);
  v57 = 1167911989 * ((~v55 & 0x939078BE33E164C5 | v55 & 0x6C6F8741CC1E9B3ALL) ^ 0xCE1271211D4BBB56);
  STACK[0x868] = (*(_QWORD *)(a40 + 8 * (v52 ^ 0x3ACLL)) - 4) ^ v57;
  STACK[0x858] = v50;
  STACK[0x850] = a44;
  *(_DWORD *)(v51 - 160) = v57 ^ 0x1A467C97;
  *(_DWORD *)(v51 - 144) = v52 + 1897072881 - v57;
  v48(v51 - 176);
  v58 = *(_QWORD *)(a40 + 8 * (v52 + 156)) - 4;
  STACK[0x850] = a44;
  v59 = 1167911989
      * (((v55 | 0x637460244EF4A798) - (v55 | 0x9C8B9FDBB10B5867) - 0x637460244EF4A799) ^ 0x3EF669BB605E780BLL);
  STACK[0x858] = a33;
  *(_DWORD *)(v51 - 144) = v52 + 1897072881 - v59;
  *(_DWORD *)(v51 - 160) = (v49 - 699612746) ^ v59;
  STACK[0x868] = v58 ^ v59;
  v48(v51 - 176);
  STACK[0x850] = (*(_QWORD *)(a40 + 8 * v52) - 4) ^ v56;
  STACK[0x860] = (unint64_t)&STACK[0x6AC];
  *(_DWORD *)(v51 - 152) = v56 - 1253357823 + v52;
  STACK[0x858] = a44;
  v60 = a20(v51 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40 + 8 * (int)(v52 - 5530 + v53)) - 12))(v60);
}

uint64_t sub_100095378()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v0 == 0) * v1) ^ v2)) - 12))();
}

uint64_t sub_1000953CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;
  uint64_t v48;
  unsigned int v49;
  unsigned int v50;

  v49 = (v47 >> (a9 - 69)) ^ 0xA | v47 ^ 0xFFFFFFA5;
  v50 = (((v49 - ((2 * v49) & 0xFFFFFFCF) - 25) & 0xFC) >> 2) ^ 0x39 | (v49 - ((2 * v49) & 0xFFFFFFCF) - 25) ^ 0xFFFFFFE7;
  HIDWORD(a46) = -42084 * (v50 & 1 | (((v50 + ~(2 * v50) + 2) & 2) != 0)) + 2134650450;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * a9) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_10009545C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t (*a28)(uint64_t),uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  BOOL v48;

  v45 = 879478891
      * ((2 * ((v43 - 176) & 0xEC42DDCCD9D9C60) - (v43 - 176) + 0x713BD2233262639CLL) ^ 0xF65A7741821B5EDFLL);
  STACK[0x850] = *(_QWORD *)(v44 + 8 * (v42 - 808438048)) - v45 - 8;
  STACK[0x860] = v41;
  *(_DWORD *)(v43 - 168) = (v42 - 281261693) ^ v45;
  v46 = a28(v43 - 176);
  v48 = *(_QWORD *)(*(_QWORD *)(v40 + 8 * (v42 - 808438967)) - 1082059390) == 0x7267DA8652D2E758
     || *(_DWORD *)(*(_QWORD *)(v40 + 8 * (v42 - 808442215)) - 1160811470) == 1574325724;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40
                                                      + 8
                                                      * ((v42 - 808438048) ^ 0x29C5 ^ (29701
                                                                                     * (((v42 + 60) ^ v48) & 1))))
                                          - 12))(v46);
}

uint64_t sub_1000955B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  int v51;
  uint64_t v52;
  uint64_t v53;

  HIDWORD(a46) = a51 + 482150099;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 + 8 * (int)(v51 & 0x99C53FFF)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           v52,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_10009565C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  int v63;
  uint64_t v64;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))(*(_QWORD *)(v64 + 8 * ((v63 - 808432580) ^ (25777 * (a36 != 0x17756C093D5DB101))))
                                                                                               - ((2 * (v63 ^ 0x302FCC72)) ^ 0x1C7Eu)
                                                                                               + 14680))(a1, a2, a3, a4, a5, a6, &a63);
}

uint64_t sub_1000956F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  int v54;
  uint64_t v55;

  LODWORD(a49) = ((a29 ^ 0xD1877FD4) & (v54 - 1106016455) ^ 0xC594E31C ^ v53 ^ 0x302FFBC1)
               + 1056829293
               + ((((a29 ^ 0xD1877FD4) & (v54 - 1106016455)) << (v53 - 33)) & 0xEB767BFE);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * (v53 ^ (42023 * (a33 != 0x7888E5F418ED2B68)))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_1000957C8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 - 0x7888E5F418ED2B68) = 62;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 - 808434113)) - 12))();
}

uint64_t sub_100095800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v54;
  int v55;
  char v56;
  uint64_t v57;

  HIDWORD(a49) = v55 + 382548238;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8 * ((62716 * ((((v55 + 382548238) < 0x58B9B1D4) ^ ((v55 + 382548238) < 0x58B9B1D5) ^ (53 * (v54 ^ (v56 + 63)) + 28)) & 1)) ^ (v54 - 808417513))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_100095898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,__int16 a63)
{
  unsigned __int8 a65;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;

  LODWORD(a50) = v66 - 939735102;
  LODWORD(a41) = 808422694;
  return ((uint64_t (*)(BOOL, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 + 8 * v65) - ((v65 + 1857802761) & 0x91446FEB) + 27110))((v66 - 939735102) < 0x9E94088, v67 - 0x17756C093D5DB101, a3, a65, a46, 460022, HIDWORD(a49), v68, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a29 ^ 0xE293B3D4D1877FD4,
           a40,
           a41,
           a42,
           a43,
           v67 - 0x17756C093D5DB101,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_1000959B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unsigned int a41)
{
  int v41;
  int v42;
  uint64_t v43;

  return ((uint64_t (*)(void))(*(_QWORD *)(v43 + 8 * (v41 ^ (21 * (a5 == v42 - 2))))
                            - (v41 ^ a41)
                            - (v41 ^ 0x30CFu)
                            + 808468961))();
}

uint64_t sub_1000959F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * (v7 - 808416505)))(a1, a2, a7, a3, a4, a5, a6, v8);
}

uint64_t sub_100095A2C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, unsigned int a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  _BOOL4 v14;
  _BOOL4 v15;

  v12 = a6 + (((v11 - 808435011) | v8) ^ v9);
  v13 = v12 < 0x58B9B1D4;
  v14 = v12 > a7;
  if (a4 != v13)
    v15 = v13;
  else
    v15 = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((v15 * ((v11 - 808407836) ^ v10)) ^ (v11 - 808433390))) - 4))();
}

uint64_t sub_100095AA0(_BOOL8 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  unsigned int v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  _BOOL4 v47;

  if (a1 != v46 + v43 < ((((v38 + v40) & v41) + v44) ^ (v38 + 758649277) & v42))
    v47 = a1;
  else
    v47 = v46 + v43 < v39;
  return (*(uint64_t (**)(_BOOL8, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 8 * ((v47 * v45) ^ v38)))(a1, a2, 884551019, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100095B04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X7>, unsigned int a6@<W8>)
{
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a5 + 8 * v6) - 4))(a1, a2, a3, a4, *(unsigned int *)(a2+ 24* ((a6 | ((unint64_t)(a6 < ((v6 - 7050) | 0x2000u) + 884538704) << 32)) - 884551020)));
}

uint64_t sub_100095B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (((v9 - 12281) * (a5 >= v8)) ^ v9)) - 8))();
}

uint64_t sub_100095B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (v5 ^ (10657 * (a5 == v6))))
                            - (((v5 + 268941948) | 0x2027D0A2u) ^ 0x302FDEEFLL)))();
}

uint64_t sub_100095BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  uint64_t v41;

  return ((uint64_t (*)(void))(*(_QWORD *)(v41
                                        + 8
                                        * (int)(((*(_QWORD *)(a2 + 24 * v40 + 8) - 0x619A026A56F3BB98 == a39)
                                               * (((v39 - 6476763) ^ 0xCFB2A109)
                                                - 808413140
                                                + ((v39 - 6476763) & 0x62E31F)
                                                + 75)) ^ v39))
                            - 12))();
}

uint64_t sub_100095C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  char a65;
  unsigned int v65;
  unsigned int v66;
  uint64_t v67;

  HIDWORD(a51) = a9;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 + 8 * ((58417 * ((a65 & 1) == 0)) ^ v66)) - ((v66 + 1139371035) & 0x416BFDF ^ 0x8F09)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           __PAIR64__(v65, a5),
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_100095C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  uint64_t v54;

  *(_BYTE *)(a33 - 0x7888E5F418ED2B68) = 63;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 + 8 * (((v53 + 624419484) | 0x58209) ^ (((v53 + 624419484) | 0x58209) - 1046738896) & 0x1926BF25 ^ 0x253D7935 ^ (21141 * (((v53 + 624419484) | 0x58209u) < 0xA940082F)))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_100095D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t (*a17)(uint64_t, _QWORD), uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  *(_DWORD *)(a37 - 0x2A6886EF4EAA6D80) = 2066711848;
  v45 = a17(a36, 0);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, _QWORD), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a40 + 8 * ((97 * ((int)(((2 * v45) & 0xF75F2E72) + ((3 * (v44 ^ 0x302FCCB0)) ^ 0xFBAFA1C0 ^ v45) - 2075105081) >= 0)) ^ (v44 - 808427050))) - 8))(v45, v46, v47, v48, v49, v50, v51, v52, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_100095DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v44 = ((uint64_t (*)(void))(*(_QWORD *)(v43 + 8 * (v42 ^ 0x4E76)) - 1620132615))();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a40 + 8 * v42) - (((v42 - 643189507) | 0x401AB1Du) ^ 0xDDABAFFBLL)))(v44, v45, v46, v47, v48, v49, v50, v51, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_100095E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  HIDWORD(a43) = 25;
  v68 = ((uint64_t (*)(uint64_t, uint64_t (*)()))(*(_QWORD *)(v63 + 8 * (v65 - 808441314)) - 1661290675))(*(_QWORD *)(v63 + 8 * (v65 ^ 0x302FCF3A)) - 633153163, sub_100DCACDC);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a40 + 8 * ((19113 * ((v68 ^ ((v65 ^ 0x302F5524) + 2143003544)) - 8392866 + (((_DWORD)v68 << ((v65 + 121) ^ 0x5D)) & 0xFF785EBE) == 2134646461)) ^ (v65 - 808432580))) - 4))(v68, v69, v70, v71, v72, v73, &a63, v74, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, v66,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           v64,
           a39,
           a40,
           a41,
           v67,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_100095F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t v47;
  int v48;
  uint64_t v49;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * ((1887 * (*(_DWORD *)(*(_QWORD *)(v47 + 8 * (v48 - 35326)) - 1187739771) == ((v48 + 1976251414) & 0x8A34797E ^ 0x7F3C170E))) ^ v48)) - ((v48 - 30193) ^ 0x15DALL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_100095FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void (*a21)(uint64_t),uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v54;

  *(_DWORD *)(v42 - 0x74BB01F4BBFCBA92) = v44;
  v47 = 210615973
      * ((2 * ((v45 - 176) & 0x77D0189AB7EFADF8) - (v45 - 176) + 0x82FE76548105202) ^ 0x47EC028BE1FF9B1DLL);
  *(_QWORD *)(a7 + 1712) = (*(_QWORD *)(v46 + 8 * v41) - 4) ^ v47;
  *(_QWORD *)(a7 + 1696) = v43;
  *(_DWORD *)(v45 - 152) = (v41 - 153633405) ^ v47;
  *(_DWORD *)(v45 - 168) = v47 ^ 0x1EEE8B6C;
  v48 = v40;
  a21(v45 - 176);
  v54 = *(_DWORD *)(v45 - 148);
  v49 = *(_QWORD *)(a40 + 8 * v41) - 4;
  v50 = 210615973 * ((v45 - 176) ^ 0x4FC3E5EEA9EFC91FLL);
  STACK[0x850] = a36;
  STACK[0x860] = v49 ^ v50;
  *(_DWORD *)(v45 - 168) = v50 ^ 0x1EEE8B70;
  *(_DWORD *)(v45 - 152) = (v41 - 153633405) ^ v50;
  v51 = ((uint64_t (*)(uint64_t))a21)(v45 - 176);
  v52 = 0xFFFFFFFF00000000;
  if (v48 >= 0x696A8161)
    v52 = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40
                                                      + 8
                                                      * ((5336
                                                        * (v52
                                                         - v48
                                                         + (v54 + *(_DWORD *)(v45 - 148))
                                                         + ((v41 + 9094) ^ 0x4D99FC9D7A027784)
                                                         + ((unint64_t)((v54
                                                                                            + *(_DWORD *)(v45 - 148)) < 0xECD2C12E) << 32) == 0x4D99FC9DFD6A8E99)) ^ (v41 + 30193)))
                                          - 12))(v51);
}

uint64_t sub_1000961E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t (*a28)(uint64_t),uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  unint64_t v47;
  uint64_t v48;
  int v49;

  v44 = *(_QWORD *)(v40 + 8 * (int)(v41 ^ 0x1D17));
  v45 = *(_QWORD *)(v44 - 589961470);
  v46 = (int *)(v44 - 589962278);
  v47 = 879478891
      * ((((v42 - 176) | 0x4A926A833FED8249) - ((v42 - 176) & 0x4A926A833FED8249)) ^ 0xCDF3CFE18F94BF0ALL);
  *(_QWORD *)(a7 + 1696) = *(_QWORD *)(v43 + 8 * v41) - v47 - 8;
  *(_QWORD *)(a7 + 1712) = v45;
  *(_DWORD *)(v42 - 168) = (v41 + 527176355) ^ v47;
  v48 = a28(v42 - 176);
  v49 = *v46;
  if (*v46 == 2134650549)
    v49 = 2134650450;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40
                                                      + 8
                                                      * ((121
                                                        * (*(_QWORD *)&v46[2 * v49
                                                                         + 2
                                                                         + 2
                                                                         * (((v41 ^ 0x8EA5) - 30051) ^ 0x80C3F7AC)] != 0)) ^ ((int)v41 + 9581)))
                                          - 12))(v48);
}

uint64_t sub_10009633C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  int v53;

  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * v53) - (v53 - 379) + 9340))(HIDWORD(a46), 7576, 136, 5704, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_100096398(int a1)
{
  int v1;
  int v2;
  char v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((((v2 ^ v3) ^ (a1 == v1)) & 1) * v4) ^ v2))
                            - ((v2 - 3818) ^ v5)))();
}

uint64_t sub_1000963CC@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W5>, int a5@<W8>)
{
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;

  if (v6 == (((a4 ^ v7) * a1 + v5) ^ ((a4 - 515) | a2)))
    v11 = v8;
  else
    v11 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * (((*(_QWORD *)(v9 + 8 * (v11 + 1 + a5) + 8) == 0) * a3) ^ a4))
                            - 12))();
}

uint64_t sub_100096418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  uint64_t v54;

  LODWORD(a47) = v53;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 + 8 * (int)a5) - ((2 * a5) ^ 0x766CLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_100096450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t *a58)
{
  uint64_t (*v58)(uint64_t);
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v60 = v58(64);
  *a58 = v60;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a40 + 8 * (((v60 == 0) * (((v59 - 39394) | 0x141A) ^ (v59 - 34264))) ^ v59)))(v60, v61, v62, v63, v64, v65, v66, v67, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           v60);
}

uint64_t sub_1000964B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;

  v46 = *(_QWORD *)(v42 + 808);
  v47 = *(_QWORD *)(v40 + 8 * v43);
  v48 = 879478891
      * ((2 * ((v45 - 176) & 0x4C114F3CB2091DF8) - (v45 - 176) + 0x33EEB0C34DF6E202) ^ 0xB48F15A1FD8FDF41);
  *(_DWORD *)(v45 - 168) = (v43 + v41) ^ v48;
  STACK[0x860] = v46;
  STACK[0x850] = v47 - v48 + ((v43 + 9150) ^ 0xFFFFFFFFFFFFC6A4);
  v49 = v44(v45 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40 + 8 * (int)(v43 ^ 0x3E81)) - 4))(v49);
}

uint64_t sub_100096580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8 * (v37 - 808404788)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1000965B0()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v1 + 2024542354) & 0x57249EDF) - 15391) ^ v1 ^ 0x302F8CF8) * (v0 < 1860420032)) ^ (v1 - 808434182))))();
}

uint64_t sub_10009661C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((52
                                          * (v2 >= (((v1 - 12282) | 0xA) ^ (a1 + 501) ^ (v1 - 1829495096) & 0x6D0BAF3D))) ^ v1))
                            - 8))();
}

uint64_t sub_100096670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  unsigned int v43;

  *(_DWORD *)(v39 - 0x3F2809B2BE643872) = a9 - 1;
  *(_DWORD *)(v39 - 0x3F2809B2BE64385ALL) = v40;
  v42 = 100 * v40 - ((200 * v40 + 740075256) & 0x39F531C8) + (v38 ^ 0x302FFCC8) + 584650112;
  *(_DWORD *)(v39 - 0x3F2809B2BE643856) = v42;
  v43 = ((2 * (v42 ^ 0x1CFA98E7) * (v40 - 635176009)) & 0x7FB6F9FA)
      + (((v42 ^ 0x1CFA98E7) * (v40 - 635176009)) ^ 0xBFDB7CFD);
  *(_DWORD *)(v39 - 0x3F2809B2BE64384ELL) = v43 - 1747017682;
  *(_DWORD *)(v39 - 0x3F2809B2BE643852) = v43 - 1137018542;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 + 8 * v38) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100096788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v59;
  uint64_t v60;
  _BOOL4 v61;

  HIDWORD(a59) = *(_DWORD *)(a37 - 0x2DF17271E48F27BFLL);
  v61 = HIDWORD(a59) + 286920555 > (a32 + 1841201928);
  if ((a32 + 1841201928) < 0x7D295402 != (HIDWORD(a59) + 286920555) < 0x7D295402)
    v61 = (HIDWORD(a59) + 286920555) < 0x7D295402;
  LODWORD(STACK[0x294]) = 2134608432;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * ((52468 * !v61) ^ (v59 - 808415780))))(808443619, a2, 2134608427, a33, a1, a36, a30, a32, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a37 - 0x2DF17271E48F27BFLL,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_100096878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60)
{
  int v60;
  int v61;
  uint64_t v62;
  int v63;
  int v64;

  v63 = (v60 ^ 0x590A) - v61 - 1136;
  v64 = *(unsigned __int8 *)(a6 + (a60 - 1812939928));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 + 8 * ((21917 * (((v64 - ((v63 ^ ((_DWORD)a1 - 108)) & (2 * v64)) + 450445898) & 0x1F) != 21)) ^ v60)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_1000968E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60)
{
  int v60;
  uint64_t v61;
  _BOOL4 v62;

  v62 = a60 - 1274578403 > (a8 + 279702969);
  if (a60 - 1274578403 < (v60 ^ 0x2016D206u) != a8 + 279702969 < ((v60 + 270590411) | 0x200E9063u) - 270082096)
    v62 = a60 - 1274578403 < (v60 ^ 0x2016D206u);
  return (*(uint64_t (**)(void))(v61 + 8 * (((2 * v62) | (8 * v62)) ^ v60)))();
}

uint64_t sub_100096964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60,unsigned int a61)
{
  int v61;
  uint64_t v62;
  unsigned int v63;

  v63 = *(unsigned __int8 *)(a6 + a61);
  LODWORD(STACK[0x28C]) = (v61 ^ 0x7B5D) + 7639 + a60 - 1375950947;
  LODWORD(STACK[0x290]) = ((2 * v63) & 0x1A4)
                        + (v63 ^ 0x7F3C3ED2)
                        + (((v61 ^ 0x7B5D) - 612866537) & 0x2487EEBF ^ 0xFFFF833F);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 + 8 * (int)((33969 * (v63 >> 7)) ^ v61 ^ 0x7B5D)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_1000969F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61)
{
  int v61;
  uint64_t v62;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 + 8 * ((117 * ((((a61 + 46) << ((v61 + 60) & 0xE7 ^ (a1 - 1))) & 0xE4) + ((a61 + 46) & 0x7F ^ (v61 + 1837066035)) - 1837079795 < 4)) ^ v61)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_100096A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61)
{
  int v61;
  int v62;
  uint64_t v63;
  int v64;
  int v65;
  unsigned int v66;
  _BOOL4 v67;
  _BOOL4 v68;

  v64 = v61 + 28337;
  v65 = (v61 - 7639) ^ (v62 + 866);
  v66 = a61 + a56 - 1508568895;
  v67 = v66 < v65 + 1333007206;
  v68 = v66 > a8 + 1882792271;
  if ((a8 + 1882792271) < 0x7FA3F249 != v67)
    v68 = v67;
  return ((uint64_t (*)(void))(*(_QWORD *)(v63 + 8 * ((11 * v68) | v64)) - 12))();
}

uint64_t sub_100096B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61)
{
  int v61;
  int v62;
  uint64_t v63;
  int v64;

  v64 = *(unsigned __int8 *)(a6 + (v61 + a61 + 2));
  LODWORD(STACK[0x28C]) = a61 - 1375937187;
  LODWORD(STACK[0x290]) = (v64 ^ 0xFF7FEF5E)
                        + 2143043316
                        + (((1531 * (v62 ^ 0x17E5) + 7748) ^ (v62 + 1166300695) & 0xBA7BFEBF) & (2 * v64));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 + 8 * ((4072 * (a56 != 1837079795)) ^ v62)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_100096BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50,int a51)
{
  int v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);

  LODWORD(STACK[0x280]) = a51;
  v53 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v52 + 8 * v51) - 4);
  LODWORD(STACK[0x284]) = a50;
  LODWORD(STACK[0x288]) = a49;
  return v53(11143);
}

uint64_t sub_100096C40(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v1 == 0) * a1) ^ v2)) - 4))();
}

uint64_t sub_100096C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  int v51;
  int v52;
  uint64_t v53;

  LODWORD(STACK[0x28C]) = a51 + ((v51 + 1232726039) & 0xB6866CBF ^ 0x407D2CD5);
  LODWORD(STACK[0x290]) = v52;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 + 8 * v51) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100096CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  uint64_t v39;
  unsigned int v40;
  unsigned int v41;
  _BOOL4 v42;
  _BOOL4 v43;

  v40 = LODWORD(STACK[0x28C]) + LODWORD(STACK[0x290]) - 418307985;
  v41 = ((((v38 - 15494) | 0x586) + 1086393243) ^ (v38 + 808415780)) + a8;
  v42 = v40 < 0x805970B3;
  v43 = v40 > v41;
  if (v41 < 0x805970B3 != v42)
    v43 = v42;
  LODWORD(STACK[0x294]) = a3 + 5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * ((7367 * !v43) ^ v38)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100096D64@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, unsigned int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,_DWORD *a41,int a42,int a43,int a44,int a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60)
{
  int v60;
  uint64_t v61;

  *a41 = a43 - 758713260;
  *(_DWORD *)(a1 - 0xE6D864228970113) = a60;
  *(_DWORD *)(a4 - 0x7F3D8D28242CF52) = a46;
  *(_QWORD *)(a2 - 0xFBFDA0DCF38D28) = a3 + (v60 ^ a5) + a44 - 1245446357;
  LODWORD(STACK[0x294]) = 2134650450;
  return ((uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * v60) - 4))();
}

uint64_t sub_100096DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t v37;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * (v36 - 808434821)) - 8))(a1, a36, a3, a33);
}

uint64_t sub_100096E88@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = a1 >= (int)((((v1 - 30952) | 0x2841) - 6440) ^ 0xEF1C127A);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (((2 * v4) | (4 * v4)) ^ v1)) - 12))(v2);
}

uint64_t sub_100096EE4@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (42009 * (a1 == -283364773))))
                            - ((v1 - 244332886) & 0x3EBFDEEF ^ 0x302FDEEBLL)))();
}

uint64_t sub_100096F38(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  int v41;
  uint64_t v42;
  _BYTE *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _BYTE *v52;
  uint64_t v53;

  v48 = v40 - 9243;
  v49 = (v40 - 9243) ^ (v41 + 1572);
  LOBYTE(STACK[0x6CF]) = a1[15];
  LOBYTE(STACK[0x6CE]) = a1[14];
  LOBYTE(STACK[0x6CD]) = a1[13];
  LOBYTE(STACK[0x6CC]) = a1[12];
  LOBYTE(STACK[0x6CB]) = a1[11];
  LOBYTE(STACK[0x6CA]) = a1[10];
  LOBYTE(STACK[0x6C9]) = a1[9];
  LOBYTE(STACK[0x6C8]) = a1[8];
  LOBYTE(STACK[0x6C7]) = a1[7];
  LOBYTE(STACK[0x6C6]) = a1[6];
  LOBYTE(STACK[0x6C5]) = a1[5];
  LOBYTE(STACK[0x6C4]) = a1[4];
  LOBYTE(STACK[0x6C3]) = a1[3];
  LOBYTE(STACK[0x6C2]) = a1[2];
  LOBYTE(STACK[0x6C1]) = a1[1];
  LOBYTE(STACK[0x6C0]) = *a1;
  v50 = *(_QWORD *)(v47 + 8 * (v40 - 9243));
  v51 = 19382863
      * ((((2 * (v46 - 176)) | 0x98B74E29B3F5137ELL) - (v46 - 176) + 0x33A458EB26057641) ^ 0x9C467027D13F0561);
  *(_DWORD *)(v46 - 168) = v48 - v51 - 356493910;
  v44[215] = v50 + v51;
  v44[212] = &STACK[0x69C];
  v44[214] = &STACK[0x6C0];
  v52 = v43;
  v53 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v42 + 8 * (v48 ^ 0x1B3D)) - 971292551))(v46 - 176);
  v52[15] = STACK[0x6AB];
  v52[14] = STACK[0x6AA];
  v52[13] = STACK[0x6A9];
  v52[12] = STACK[0x6A8];
  v52[11] = STACK[0x6A7];
  v52[10] = STACK[0x6A6];
  v52[9] = STACK[0x6A5];
  v52[8] = STACK[0x6A4];
  v52[7] = STACK[0x6A3];
  v52[6] = STACK[0x6A2];
  v52[5] = STACK[0x6A1];
  v52[4] = STACK[0x6A0];
  v52[3] = STACK[0x69F];
  v52[2] = STACK[0x69E];
  v52[1] = STACK[0x69D];
  *v52 = STACK[0x69C];
  return ((uint64_t (*)(uint64_t))(v45 - v49 + *(_QWORD *)(a40 + 8 * (v48 + 2803)) - 16))(v53);
}

uint64_t sub_100097114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  int v53;
  uint64_t v54;
  char *v55;

  HIDWORD(a43) = 29;
  HIDWORD(a49) = v53 - 111250124;
  v55 = (char *)&STACK[0x298]
      + ((2 * a36) | 0x94446B2CDE9B5FDALL)
      - a36
      + ((v53 + 794534167) & 0xA074BBDF ^ 0x35DDCA6990B26BC9);
  STACK[0x2A0] = (unint64_t)v55;
  LODWORD(STACK[0x298]) = (_DWORD)v55 - 500297210;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 + 8 * (int)((v53 - 111250124) ^ 0x298E7E56 ^ (44972 * (((20 - v52) | (v52 - 20)) >> 31)))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           &STACK[0x298],
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_1000971FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  uint64_t v39;

  return ((uint64_t (*)(void))(*(_QWORD *)(v39 + 8 * (a39 - 808428898)) - 8))();
}

uint64_t sub_100097250@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  _BOOL4 v8;

  v8 = ((((v1 ^ a1) & a1) >> (__clz(v1 ^ a1 | v4) ^ 0x1F)) & 1) == 0 || *(_QWORD *)(v2 + 8) == v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((v8 * v5) ^ v3)) - 8))();
}

uint64_t sub_1000972B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  int v51;
  uint64_t v52;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * v51) - (v51 ^ 0x119Bu) + 15314))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_1000972D0()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v1 + 8 * (int)v0)
                                                                   - ((v0 - 15322) ^ 4)))(((v0 - 1990939423) & 0x76AB3F7F) - 10298, 664681883, v0, 1035);
}

uint64_t sub_100097364(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((((v5 - v4) | (v4 - v5)) >= 0) * a4) ^ a3)) - 4))();
}

uint64_t sub_100097408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  int v51;
  unsigned int *v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  int v59;
  int v60;

  v56 = (~a51 + ((a9 - 2051811422) & 0x7A4C1EFF ^ 0x1EDC) + v51 + 2 * a51) ^ a51;
  v57 = *v52;
  v58 = *(_DWORD *)(v53 + 4 * v57);
  v59 = v56 + v56 * v58;
  if (v56)
    v60 = 0;
  else
    v60 = *(_DWORD *)(v53 + 4 * v57);
  *(_DWORD *)(v53 + 4 * v57) = (v60 + v59) * v58;
  *v52 = ((int)v57 + 1) % 6u;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * ((121 * (v54 + ((a9 - 10008) | 0x6040) - 1639303322 > 0xFFFFFFEF)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1000974D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;
  int v48;
  int v49;
  uint64_t v50;

  HIDWORD(a46) = v48 - 576368840;
  LODWORD(a47) = v49 + v47 + 808418688 + 1279271591;
  STACK[0x278] = 366530674;
  LODWORD(a42) = (a39 + 1318445336) & 0x813A683F;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 + 8 * v47) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1000975BC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  _BOOL4 v47;
  int v48;

  v47 = a1 + v44 - 881357685 > v42;
  if (v43 != (a1 + v44 - 881357685) < 0x1575B75B)
    v47 = (a1 + v44 - 881357685) < 0x1575B75B;
  v48 = (v45 + a41) < 0xFFFFFFF0 || v47;
  STACK[0x278] = a41 + 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v46 + 8 * ((57615 * v48) ^ v41)) - 8))();
}

uint64_t sub_100097628@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  _QWORD *v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;

  v40 = *((unsigned __int8 *)*(&off_10112C750 + a1 - 808441403) + 16 * v36 + v33[25] - 433912300);
  v33[117] = *(_QWORD *)(v39 + 8 * ((a1 - 1344487534) ^ 0x1FFFFFFFE00C88C2)) - 12;
  v33[118] = 0;
  STACK[0x570] = (a1 - 1344491388);
  v33[119] = v40 + v34 + ((v40 < 0x72) << 8) < v34 + 114;
  LODWORD(STACK[0x578]) = a1 - 1344487534;
  LODWORD(STACK[0x57C]) = (a1 - 1344487534) ^ 1;
  *(_DWORD *)(v38 - 160) = a1 - 967721411 * ((2 * (v35 & 0x1694C750) - v35 - 378849109) ^ 0x4F56A984) - 1027360926;
  v33[213] = &STACK[0x558];
  v41 = ((uint64_t (*)(uint64_t))((char *)*(&off_10112C750 + (a1 ^ v37)) - 450234315))(v38 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a33 + 8 * *(int *)(v38 - 176)) - 12))(v41);
}

uint64_t sub_100097768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  uint64_t v39;

  return ((uint64_t (*)(void))(*(_QWORD *)(v39 + 8 * (a39 - 808439249)) - 12))();
}

uint64_t sub_1000977A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,__int128 a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;

  HIDWORD(a42) = 30;
  LODWORD(STACK[0x294]) = 2134608427;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 + 8 * ((891 * (((a36 == 0) ^ (v54 ^ (a8 - 92))) & 1)) ^ (v54 - 808429860))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, v55,
           a20,
           a21,
           a22,
           a1,
           a24,
           v53,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           *((_QWORD *)&a36 + 1),
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_100097828@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,__int16 a56,char a57,char a58)
{
  char v58;
  int v59;
  uint64_t v60;
  unsigned __int8 v61;
  char v62;

  v61 = a1 ^ v58;
  v62 = (v59 == 1824860599) & a58;
  if (a26 == 0x416F041D6521E819)
    v62 = 1;
  if (a23 == 0x5040F6A30D8B629FLL)
    v62 = 1;
  return (*(uint64_t (**)(void))(v60 + 8 * ((((v61 ^ v62) & 1) * (13 * (a1 ^ 0x6D13) + 55535)) ^ a1)))();
}

uint64_t sub_1000978AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unint64_t a25,uint64_t a26,uint64_t a27,uint64_t (*a28)(uint64_t),uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;

  v44 = *(_QWORD *)(v43 + 8 * v41);
  v45 = 879478891
      * ((((v42 - 176) | 0x894BBED05B9F36FCLL) - ((v42 - 176) & 0x894BBED05B9F36FCLL)) ^ 0xE2A1BB2EBE60BBFLL);
  STACK[0x860] = a25;
  *(_DWORD *)(v42 - 168) = (v41 + 527176362) ^ v45;
  STACK[0x850] = v44 - v45 + ((v41 + 5390) ^ 0xB61u) - 8627;
  v46 = a28(v42 - 176);
  STACK[0x2B0] = 0x13BB280902DEB78FLL;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40 + 8 * ((v41 + 20675) ^ (212 * (v40 == 1065467994)))) - 4))(v46);
}

uint64_t sub_100097994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *(_QWORD *)((char *)*(&off_10112C750 + v6 - 10480) - 1926516846);
  *(_QWORD *)(a6 + 304) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((30207 * (((v6 - 31) ^ (v8 == 0x15D89649721E2D4ALL)) & 1)) ^ v6))
                            - 8))();
}

uint64_t sub_1000979F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  int v51;
  uint64_t v52;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * ((22847 * (*(_DWORD *)((char *)*(&off_10112C750 + v51 - 9012) - 34354858) != ((v51 - 1651618571) & 0x6271A9EB) + 229710227)) ^ v51)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_100097A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(a6 + 312) = *(_QWORD *)(a6 + 304) - 0x15D89649721E2D4ALL;
  v8 = *(_QWORD *)(v7 + 8 * (v6 + 10841));
  LODWORD(STACK[0x2AC]) = 243602565;
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))(v8 - 8))(12801, 4294962151, 0xEC44D7F6FD214875, 1069166357);
}

uint64_t sub_100097B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;

  v66 = 3 * (((a36 & 0x10000000000) * (unsigned __int128)0x5555555555555556uLL) >> 64);
  v67 = ((a36 & 0x10000000000) - v66) * ((a36 & 0x10000000000) - v66);
  v68 = (char *)&STACK[0x298]
      + ((((a36 ^ 0x6A401E882CBEA001) >> 37) & 0x40 | ((v67
                                                        - 3
                                                        * (((unint64_t)v67
                                                          * (unsigned __int128)0x5555555555555556uLL) >> 64)) << 8)) ^ a36 ^ 0x6A401E882CBEA001 ^ ((v63 + 64) & (a36 >> 37) | HIDWORD(a36) & 0x100));
  STACK[0x2A0] = (unint64_t)v68;
  LODWORD(STACK[0x298]) = (_DWORD)v68 - 1685598611;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))(*(_QWORD *)(v65
                                                                                         + 8
                                                                                         * (int)((v64 + 1170497003) ^ 0x75F450C8 ^ (6599 * (((20 - v63) | (v63 - 20)) >> 31))))
                                                                             - 12))(a1, a2, a3, a4, &a63);
}

uint64_t sub_100097C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  uint64_t v53;

  return (*(uint64_t (**)(uint64_t))(v53 + 8 * (v52 - 808426850)))(a52);
}

uint64_t sub_100097CAC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  int v9;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = v6 == a1;
  v8 = (-a1 & v6) + (v6 | -a1);
  v9 = !v7;
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * (int)(((v9 & (((a2 ^ v2) & v2) >> (__clz(a2 ^ v2 | 1) ^ 0x1F))) * v4) ^ v3)))(v8);
}

uint64_t sub_100097D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  unsigned int v53;
  uint64_t v54;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 + 8 * (int)v53) - (v53 ^ 0x6C0ALL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_100097D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  uint64_t v43;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 8 * ((12426 * (((a9 - 26) ^ ((((a9 - 808443619 + (a9 ^ 0xCFD0211C) - 5) | a9) & 0x80000000) == 0)) & 1)) ^ a9 & 0x508Eu)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_100097DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  int v70;

  HIDWORD(a43) = 32;
  if (a36)
    v67 = a37 == 0x2CF7DEA60B7BFE46;
  else
    v67 = 1;
  v70 = !v67 && a33 != 0x4107E90306886D0CLL && a30 != 0x136A446F89C4741ALL;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 + 8 * ((((v64 - 808402230) ^ 0xA1BC) * v70) ^ (v64 - 808407836))) - ((v64 - 808428935) ^ 0x3950)))(a1, a2, a30, a4, a5, a6, &a63, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           v63,
           a39,
           a40,
           a41,
           v65,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_100097E7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v48;
  uint64_t v49;

  *(_QWORD *)(a7 + 360) = v48 - 0x4107E90306886D0CLL;
  *(_DWORD *)(v48 - 0x4107E90306886D0CLL) = 1230848289;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * a9))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_100097F08()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((102
                                          * (((125 * (v1 ^ 0x8B)) ^ (v0 < (char)(((v1 + 35) | 2) + 16))) & 1)) ^ v1))
                            - 8))();
}

uint64_t sub_100097F5C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((5256 * (v0 == ((((v1 - 10115) | 0x191) - 11385) & 0xFE ^ 0x8B))) ^ v1))
                            - 12))();
}

uint64_t sub_100097FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56,unsigned __int8 a57)
{
  uint64_t v57;
  unsigned int v59;

  v59 = (a57 ^ 0xF77FEE78) + 758843109 + ((2 * (a57 ^ 0xFFFFFF87)) & 0x15E);
  LOBYTE(STACK[0x325]) = v59 < 0x24BAF594;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8 * (((v59 == a9 + 616206271) * (((4 * a9) ^ 0x1AE08) - 14637)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_100098028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X6>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;

  v59 = ((2 * (BYTE2(a52) ^ 0xD7)) & 0xFFFFFFF7) + (BYTE2(a52) ^ 0x57FFCE2C);
  HIDWORD(a46) = v59 + 945952525;
  LOBYTE(STACK[0x326]) = v59 < 0x57FFCEFB;
  LOBYTE(STACK[0x327]) = v59 == 1476382459;
  *(_QWORD *)(a4 + 336) = v57;
  HIDWORD(a57) = 219943803;
  LODWORD(a38) = 219947098;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * (a5 - 10707)) - (a5 - 12980) + 13085))(a1, a2, a3 - 0x136A446F89C4741ALL, v58, a55, a3 - 0x136A447617CE2D02, 23104, 2897256458, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a3 - 0x136A446F89C4741ALL,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_10009812C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  _BOOL4 v4;
  unsigned int v5;
  char v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  BOOL v11;

  v11 = v10 + v8 < v5;
  if (v4 != (v10 + v8) < 0x24BAF594)
    v11 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * ((4 * ((v11 ^ (a3 + v6)) & 1)) & 0xEF | (16
                                                                                                  * ((v11 ^ (a3 + v6)) & 1)) | a3))
                            - (a3 + v7)
                            + v9))();
}

uint64_t sub_100098188@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unsigned __int8 v2;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((((v2 ^ (a2 - 30)) & 1) * (((a2 - 12063) | 0x3800) - 15348)) | a2)))();
}

uint64_t sub_1000981C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return (*(uint64_t (**)(void))(a4 + 8 * (v4 ^ 0x5930)))();
}

uint64_t sub_100098204@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, unsigned int a3@<W7>, int a4@<W8>)
{
  unsigned int v4;
  _BOOL4 v5;
  _DWORD *v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  _BOOL4 v13;

  v12 = (_QWORD *)(a2 + 32 * (((2 * a4) ^ a3) + v7));
  *v12 = v11;
  *v6 += 1024;
  v12[1] = v11 + 1024;
  *v6 += 1024;
  v12[2] = v11 + 2048;
  *v6 += 1024;
  v12[3] = v11 + 3072;
  if (v5 != v7 + v8 < v9)
    v13 = v5;
  else
    v13 = v7 + v8 < v4;
  *v6 += 1024;
  return (*(uint64_t (**)(void))(a1 + 8 * ((v13 * v10) ^ a4)))();
}

uint64_t sub_10009829C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  int v63;
  uint64_t v64;
  _BOOL4 v66;

  LODWORD(STACK[0x32C]) = a32;
  LODWORD(STACK[0x280]) = 2134608427;
  v66 = a36 != 0x6F7634AB0303F6BELL && a29 != 0x3C27B1C4F8AF0E11;
  return ((uint64_t (*)(char *, uint64_t, uint64_t))(*(_QWORD *)(v64 + 8 * ((v63 - 808405480) ^ (481 * v66)))
                                                           - ((v63 - 808441522) | 0x4100u)
                                                           + 18733))(&a63, a2, a24);
}

uint64_t sub_10009839C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = v1 == 381450761
    && *(_DWORD *)(v2 - 0x6F7634AB0303F6B6) - 2135043668 < ((a1 + 1592972970) & 0xA10CF56E ^ 0xFFF9EAB4);
  LODWORD(STACK[0x2AC]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((8688 * v5) ^ a1)) - 12))();
}

uint64_t sub_100098428(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  int v71;

  v67 = *(_QWORD *)(v64 - 0x6F7634AB0303F6BELL);
  v68 = *(_DWORD *)(v64 - 0x6F7634AB0303F6A6);
  v69 = *(_QWORD *)(v66 + 8 * v63);
  v70 = 210615973
      * ((((v65 - 176) | 0x454CA95254E739A8) - ((v65 - 176) & 0x454CA95254E739A8)) ^ 0xA8F4CBCFD08F0B7);
  a1[213] = a57;
  a1[217] = v69 ^ v70;
  a1[214] = v64 - 0x6F7634AB0303F6A2;
  a1[212] = v67;
  *(_DWORD *)(v65 - 124) = v68 - v70 - 763888946;
  *(_DWORD *)(v65 - 144) = v70 + 1741050007 + v63;
  a1[215] = a56;
  a3(v65 - 176);
  v71 = *(_DWORD *)(v65 - 128);
  LODWORD(STACK[0x280]) = v71;
  return ((uint64_t (*)(char *))(*(_QWORD *)(a40
                                                     + 8
                                                     * (int)(((v71 == 2134650450)
                                                            * ((v63 + 816826801) & 0xFF7FFFE7 ^ 0x302F66EE)) ^ (v63 + 9602)))
                                         - 12))(&a63);
}

uint64_t sub_100098580()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x2AC]) = STACK[0x32C];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 808422428)) - 12))();
}

uint64_t sub_1000985A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  uint64_t v54;
  uint64_t v55;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * ((50434 * (*(_QWORD *)(v54 - 0x6F7634AB0303F6BELL) != 0)) ^ (v53 - 808418542))) - (v53 ^ 0x302F931Du) + 19962))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           *(_QWORD *)(v54 - 0x6F7634AB0303F6BELL) + 0x177ECD13451C78A8,
           a52,
           a53);
}

uint64_t sub_100098638@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,_QWORD *a51)
{
  uint64_t v51;

  return ((uint64_t (*)(void))(*(_QWORD *)(v51 + 8 * (((*a51 == 0x6CA6F0EE111A2BB6) * ((a1 ^ 0xC630) - 34785)) ^ a1))
                            - 12))();
}

uint64_t sub_10009867C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;

  return ((uint64_t (*)(void))(*(_QWORD *)(v51
                                        + 8
                                        * (int)(((*(_QWORD *)(a51 + 8) == 0x7C0ADF1C3D95FE54)
                                               * ((a1 - 1258856976) & 0x4B08DFDF ^ 0x302F7934 ^ (a1 + 2075111909) & 0xB47FDEFF)) ^ a1))
                            - 12))();
}

uint64_t sub_1000986F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void (*a31)(uint64_t),uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,uint64_t a62,char a63)
{
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  int v67;

  v66 = (v64 ^ 0x87CFu) - v63 - 3073;
  v67 = 1130658149 * ((((v65 - 176) | 0xDD5152F9) - ((v65 - 176) & 0xDD5152F9)) ^ 0x106DEB34);
  *(_QWORD *)(a1 + 1712) = a51;
  *(_DWORD *)(v65 - 172) = v67 + v64 - 12042;
  *(_DWORD *)(v65 - 168) = a61 - v67;
  a31(v65 - 176);
  return ((uint64_t (*)(char *))(*(_QWORD *)(a40 + 8 * ((30 * (*(_DWORD *)(v65 - 176) == 381450761)) ^ v64))
                                         - (v66 ^ 0x302FDEEB)))(&a63);
}

uint64_t sub_1000987B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;

  LODWORD(STACK[0x288]) = v60;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 + 8 * (v60 + 22408))
                                                                                                - (v59 ^ (v58 - 8))))(300, a2, 5107, a58, 4105147332, a6, 4324);
}

uint64_t sub_1000988A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  int v37;
  uint64_t v38;
  char *v39;

  v39 = (char *)&STACK[0x298]
      + ((((2 * (a36 ^ 0x202120D74CA586B0)) & 0x65FD359EE4E067D8)
        + (a36 & 0xB2FE9ACF727033ECLL ^ 0xDFDFFF38BFDFFD5FLL)
        - ((((v37 - 808425993) | 0x200u) - 12330) ^ 0xB2FE9ACF7270255CLL | a36 ^ 0x202120D74CA586B0)) ^ 0xB2FE9ACF727033ECLL);
  STACK[0x2A0] = (unint64_t)v39;
  LODWORD(STACK[0x298]) = (_DWORD)v39 + 199417163;
  LODWORD(STACK[0x330]) = 381450761;
  LODWORD(STACK[0x2AC]) = 2000773866;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8 * ((v37 - 808431193) ^ (26733 * (v36 != 920750274)))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a7, a16, a2, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1000989BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  int v51;
  uint64_t v52;

  LODWORD(STACK[0x33C]) = a9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8 * v51))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_1000989FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  uint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  int v70;
  uint64_t v72;

  v72 = v63;
  LODWORD(a27) = v64;
  HIDWORD(a43) = 35;
  STACK[0x310] = (unint64_t)&STACK[0x1A473F8073A06BCE];
  v68 = a36 == 0x6F7634AB0303F6BELL || a37 == 0;
  LODWORD(STACK[0x344]) = 2134608427;
  v70 = !v68 && a33 != 0xA8B7CA143569EA7;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 8 * ((60378 * v70) ^ (v65 - 808411158))))(a32, a2, a3, a4, a5, a6, a7, &a63, a9, a10, a11, a12, a13, a14, a7, a16, a2, a18, v66,
           a20,
           a21,
           v72,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_100098ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = (v30 + v31 + 3170) | 0x81;
  v34 = *(_QWORD *)(v32 + 8 * v33);
  *(_QWORD *)(a8 + 360) = v29 - 0x6F7634AB0303F6BELL;
  *(_QWORD *)(a8 + 200) = v34;
  LODWORD(STACK[0x350]) = a27;
  LODWORD(STACK[0x354]) = 31727534;
  LODWORD(a20) = 808430075;
  LODWORD(a23) = v31 - 808425958;
  LODWORD(a29) = v31 + 910832889;
  LODWORD(a25) = v31 - 426992858;
  LODWORD(a24) = (v31 - 426992858) ^ 0x16BCFEBA;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 + 8 * (int)(v33 ^ 0x7890 ^ ((v33 - 1226) | 0x2102))) - 4))(a1, v34, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           808443623,
           a29,
           v34);
}

uint64_t sub_100098BCC@<X0>(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t a22)
{
  uint64_t v22;

  return ((uint64_t (*)(void))(*(_QWORD *)(v22 + 8 * (((**(_QWORD **)(a1 + 360) != 0) * ((a2 + 732) ^ 0x2BF3)) | a2))
                            - ((a2 + 808433096) ^ a22)))();
}

uint64_t sub_100098C1C()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((14 * (*v1 != 0x6CA6F0EE111A2BB6)) ^ v0))
                            - (v0 ^ 0x2EC ^ ((v0 + 9233) | 0x2710u) ^ 0x5E07)))();
}

uint64_t sub_100098C74@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  uint64_t v29;
  uint64_t v30;
  _BOOL4 v31;

  v31 = *(_QWORD *)(v29 + 8) != 0x7C0ADF1C3D95FE54;
  LODWORD(STACK[0x330]) = a29;
  return ((uint64_t (*)(void))(*(_QWORD *)(v30 + 8 * (int)((738 * v31) ^ a1))
                            - (a1
                             + 808433096
                             + (a1 ^ 0xFFFFFFFFCFD0083ALL))))();
}

uint64_t sub_100098CD8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t (*a31)(uint64_t),uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  BOOL v45;
  int v47;
  int v48;
  _BYTE v49[8];

  v48 = v40;
  v47 = (v40 - 29712) | 0x12;
  v49[0] = v40 ^ a20;
  v43 = 1130658149 * ((v42 - 1761267054 - 2 * ((v42 - 176) & 0x97053342)) ^ 0x5A398A8F);
  *(_DWORD *)(v42 - 172) = v43 + v40 - 6740;
  *(_DWORD *)(v42 - 168) = a1 - v43;
  *(_QWORD *)(a8 + 1712) = v41 + 0x177ECD13451C78A8;
  v44 = a31(v42 - 176);
  v45 = *(_DWORD *)(v42 - 176) == v47 + 381449967;
  LODWORD(STACK[0x330]) = a36;
  return (*(uint64_t (**)(uint64_t))(a40 + 8 * ((60013 * ((v49[0] ^ v45) & 1)) ^ v48)))(v44);
}

uint64_t sub_100098DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  int v39;
  uint64_t v40;

  LODWORD(STACK[0x328]) = a39;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * (v39 + 34008)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_100098E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,uint64_t a28,int a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  int v36;
  int v37;
  uint64_t v38;

  LODWORD(STACK[0x330]) = a36;
  return (*(uint64_t (**)(void))(v38 + 8 * ((23 * (v36 - a27 == (a29 & 0x9985EF37 ^ 0x45BF4C8F))) ^ (v37 - 808413140))))();
}

uint64_t sub_100098E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  int v39;
  uint64_t v40;

  LODWORD(STACK[0x328]) = a39;
  return (*(uint64_t (**)(void))(v40 + 8 * (v39 + 34014)))();
}

uint64_t sub_100098EA4()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x32C]) = v1;
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((18586 * ((v0 | 0x150FD84E) == 237 * (v0 ^ 0xDB) - 1458898914)) ^ (v0 + 14289))))();
}

uint64_t sub_100098F00()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - 8))();
}

uint64_t sub_100098F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,_QWORD *a41,uint64_t a42)
{
  uint64_t (*v42)(unint64_t, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int v43;
  _DWORD *v44;
  int v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  unint64_t v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;

  v50 = *v47;
  v51 = (v43 - 523023547);
  v52 = *(_DWORD *)(*a41 + (int)(*v44 & 0x91FF5B7C));
  v53 = -8231943
      * ((-8231943 * ((v52 ^ ((_DWORD)v50 + (_DWORD)v51)) & 0x7FFFFFFF)) ^ ((-8231943
                                                                           * ((v52 ^ ((_DWORD)v50 + (_DWORD)v51)) & 0x7FFFFFFFu)) >> 16));
  v54 = *v47 + (v43 - 523023546);
  v55 = *(_BYTE *)(v54 + v48);
  v56 = -8231943
      * ((-8231943 * ((v52 ^ v54) & 0x7FFFFFFF)) ^ ((-8231943 * ((v52 ^ v54) & 0x7FFFFFFF)) >> 16));
  LODWORD(v53) = ((*(unsigned __int8 *)(a42 + (v53 >> 24)) ^ *(unsigned __int8 *)(v50 + v51 + v48) ^ *(unsigned __int8 *)(v46 + (v53 >> 24)) ^ *(unsigned __int8 *)((v53 >> 24) + v49 + 4) ^ v53 ^ (((-8231943 * ((-8231943 * ((v52 ^ ((_DWORD)v50 + (_DWORD)v51)) & 0x7FFFFFFF)) ^ ((-8231943 * ((v52 ^ ((_DWORD)v50 + (_DWORD)v51)) & 0x7FFFFFFFu)) >> 16))) >> 24) * v45)) << 24) | ((*(_BYTE *)(a42 + (v56 >> 24)) ^ v55 ^ *(_BYTE *)(v46 + (v56 >> 24)) ^ *(_BYTE *)((v56 >> 24) + v49 + 4) ^ v56 ^ (BYTE3(v56) * v45)) << 16);
  v57 = *v47 + (v43 - 523023545);
  v58 = *(_BYTE *)(v57 + v48);
  v59 = -8231943
      * ((-8231943 * ((v52 ^ v57) & 0x7FFFFFFF)) ^ ((-8231943 * ((v52 ^ v57) & 0x7FFFFFFF)) >> 16));
  v60 = *(unsigned __int8 *)(a42 + (v59 >> 24));
  v61 = *v47 + (v43 - 523023544);
  LOBYTE(v51) = *(_BYTE *)(v61 + v48);
  v62 = -8231943
      * ((-8231943 * ((v52 ^ v61) & 0x7FFFFFFF)) ^ ((-8231943 * ((v52 ^ v61) & 0x7FFFFFFF)) >> 16));
  return v42(v53 & 0xFFFF0000 | ((v58 ^ v59 ^ (BYTE3(v59) * v45) ^ v60 ^ *(_BYTE *)(v46 + (v59 >> 24)) ^ *(_BYTE *)((v59 >> 24) + v49 + 4)) << 8) | (*(_BYTE *)(a42 + (v62 >> 24)) ^ v51 ^ *(_BYTE *)(v46 + (v62 >> 24)) ^ *(_BYTE *)((v62 >> 24) + v49 + 4) ^ v62 ^ (BYTE3(v62) * v45)), *(unsigned __int8 *)(a42 + (v62 >> 24)), *(unsigned __int8 *)(v46 + (v62 >> 24)), (v62 >> 24) * v45, v60, *(unsigned __int8 *)(v46 + (v59 >> 24)), (v59 >> 24) * v45, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000990FC()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((61667 * (v0 + v4 == ((((v2 + v1 + 18) | 0x8C) - 145423678) ^ v3 & 0x1556CF7C))) ^ (v1 - 808413140))))();
}

uint64_t sub_100099158()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (2 * v0 + 28598)) - 8))();
}

uint64_t sub_100099178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  return v38(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_10009918C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  uint64_t v23;

  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * a23) - 12))();
}

uint64_t sub_1000991B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  __int16 v34;
  uint64_t v35;
  unsigned int v36;
  BOOL v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  uint64_t v41;

  v32 = v29 >> 2;
  v33 = *(_DWORD *)(v28 + 4 * ((0x9F824282 % v32) & 0x3FFFFFFC));
  v34 = ~*(_WORD *)(v28 + 4 * ((v32 - 1) & (unsigned __int16)v33));
  LODWORD(v32) = ~v33;
  v35 = *a17;
  v36 = *(_DWORD *)(a15 + 4 * v35);
  v38 = *(_DWORD *)&v34 & WORD1(v32);
  v37 = v38 == 0;
  v39 = v38 + v38 * v36;
  v40 = v37;
  if (v37)
    v41 = v36;
  else
    v41 = 0;
  *(_DWORD *)(a15 + 4 * v35) = (v41 + v39) * v36;
  *a17 = ((int)v35 + 1) % 6u;
  LODWORD(STACK[0x330]) = v27;
  return ((uint64_t (*)(uint64_t, unsigned int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 + 8 * ((43097 * v40) ^ (v30 - 808433096))) - 4))(v41, a17, a15, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_100099274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  _BOOL4 v40;

  v40 = v36 + 1712876123 < (a36 + a32);
  if (v36 + 1712876123 < (v38 + v37 + 2094326884) != (a36 + a32) < 0x7CD4E464)
    v40 = (a36 + a32) < 0x7CD4E464;
  LODWORD(STACK[0x330]) = a36;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * ((1483 * v40) ^ (v37 - 808433096))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_100099300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  uint64_t v31;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (v30 ^ 0x48C4 ^ (v30 + 28846))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_100099354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  int v36;
  int v37;
  uint64_t v38;

  LODWORD(STACK[0x330]) = a36;
  return (*(uint64_t (**)(void))(v38
                              + 8 * ((((v37 ^ 0x302FDDF7) - 765) * (v36 - a27 == 1170165659)) ^ (v37 - 808413140))))();
}

uint64_t sub_1000993AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t (*a30)(void))
{
  return a30();
}

uint64_t sub_1000993B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26)
{
  int v26;
  int v27;
  uint64_t v28;

  return ((uint64_t (*)(void))(*(_QWORD *)(v28
                                        + 8
                                        * (a24 ^ (431
                                                * ((((v27 - 808442529) ^ (((v26 - a26) | (a26 - v26)) >> 31)) & 1) == 0))))
                            - 8))();
}

uint64_t sub_1000993FC@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = a2 | 0x888;
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(v3 + 8 * v4) - 8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (int)(v4 ^ 0x51A2))
                                          - ((v4 + 7249) ^ 0x291FLL)))(v2);
}

uint64_t sub_10009945C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v60;
  int v61;
  int v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  int v66;

  LODWORD(a27) = v61;
  HIDWORD(a43) = 36;
  HIDWORD(a50) = v62 - 188365534;
  v64 = ((a36 & 0x24A49114492A4254) + 0x52912248A2A84A4) & 0x24A49114492A4254 | (0x5A2694C728E25963
                                                                                     - (a36 & 0x49124A42945128A1)) & 0x49124A42945128A1 | (0xA4DA4D7367892F1ELL - ((((v62 + 2104494634) & 0xFEED5FFF) - 0x6DB6DB578A08B403) & a36)) & 0x924924A92284950ALL;
  v65 = ((unint64_t)&STACK[0x298] | ~v64) + v64 + 1 + (v64 | (unint64_t)&STACK[0x298]);
  STACK[0x2A0] = v65;
  LODWORD(STACK[0x298]) = v65 - 1685598611;
  v66 = ((20 - v60) | (v60 - 20)) >= 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 + 8 * (((8 * v66) | (v66 << 6)) ^ (v62 - 808435753))) - 8))(a1, a2, a3, a4, a5, a6, a7, 2894944255, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           &STACK[0x298],
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           0x1712F8A31712F8A3);
}

uint64_t sub_1000995D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  uint64_t v53;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v53 + 8 * (v52 - 808418504)) - 4))(a52);
}

uint64_t sub_100099634@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  BOOL v14;
  uint64_t v15;
  int v16;

  v12 = *(_QWORD *)(a1 + 8);
  v13 = ((2 * (v4 & 1)) | ((v4 & v3) + v8) & v3 | v4 & ((v10 ^ (a2 + 857)) + v6)) + (v4 & v7);
  v14 = ((((v13 ^ v2) & v2) >> (__clz(v13 ^ v2 | 1) ^ 0x1F)) & 1) == 0 || v12 == a1;
  v15 = v12 - a1;
  v16 = v14;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11 + 8 * ((v16 * v9) ^ v5)) - 4))(v15);
}

uint64_t sub_1000996D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * (int)a2) - (a2 ^ a8) + 2894940421))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_1000996F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61)
{
  unsigned int v61;
  uint64_t v62;
  uint64_t (*v63)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  HIDWORD(a46) = a61;
  v63 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 + 8 * (int)(v61 ^ (a8 + 3950) ^ (4986 * (v61 > 0x59982773)))) - 8);
  return v63(v63, a2, a3, a4, 808434872, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_10009977C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((28 * (v1 != 0)) ^ v0)) - 8))();
}

uint64_t sub_1000997D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52)
{
  int v52;
  unsigned int *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  int v59;
  int v60;

  v56 = ((a52 ^ v52) + 2 * (a52 & v52)) ^ a52;
  v57 = *v53;
  v58 = *(_DWORD *)(a7 + 4 * v57);
  v59 = v56 + v56 * v58;
  if (v56)
    v60 = 0;
  else
    v60 = *(_DWORD *)(a7 + 4 * v57);
  *(_DWORD *)(a7 + 4 * v57) = (v60 + v59) * v58;
  *v53 = ((int)v57 + 1) % ((((a9 + 268788534) | 0x202A1601) - 808417579) ^ 0x65BEu);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * (a9 ^ (7666 * (v54 != 0)))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_100099894()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((58107 * (*v1 == 0x6CA6F0EE111A2BB6)) ^ v0))
                            - ((v0 - 53536716) & 0x330E7BF ^ 0x65A4)))();
}

uint64_t sub_1000998EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (int)(((*(_QWORD *)(v6 + 8) != 0x7C0ADF1C3D95FE54)
                                               * ((v5 + 2130671931) ^ 0x7EFFB900 ^ (a5 - 936) ^ (v5 + 2130671931) & 0xB12FFFFB)) ^ v5))
                            - 8))();
}

uint64_t sub_10009994C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;
  uint64_t v43;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 8 * ((62426 * (((((a9 + 1899993108) & 0xBEEFDEE7) - 808443618) & *(_DWORD *)(v42 + 40)) == 0)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_1000999A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  uint64_t v47;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 + 8 * ((26836 * ((((a9 - 11233) ^ 0x3C04) & a47) != 0)) ^ (a9 - 11233))) - (((a9 + 805428475) | 0x2D9A01u) ^ 0x302FDEEFLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_100099A04@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;
  int v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;

  v41 = a1 ^ 0x5BE1;
  v42 = 1130658149 * ((((v40 - 176) | 0x2F5301C5) - ((v40 - 176) & 0x2F5301C5)) ^ 0xE26FB808);
  *(_QWORD *)(v37 + 1712) = a37;
  *(_DWORD *)(v40 - 172) = v42 + (a1 ^ 0x5BE1) - 2851;
  *(_DWORD *)(v40 - 168) = (v38 ^ 0xE38ADD39)
                         - v42
                         + 519895648
                         + (((((a1 ^ 0x5BE1) + 238458207) & 0xF1C93EBF) - 276905140) & (2 * v38) ^ 0x286A4500);
  v43 = v39(v40 - 176);
  return (*(uint64_t (**)(uint64_t))(a33 + 8 * ((21 * (*(_DWORD *)(v40 - 176) != 381450761)) ^ v41)))(v43);
}

uint64_t sub_100099AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,_QWORD *a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  _DWORD *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;

  v53 = *v50;
  v54 = v49 + a46 - 1189894372;
  v55 = v54 ^ 0xBD56EEFE;
  v56 = (2 * v54) & 0x7AADDDFC;
  v57 = a27 - ((2 * a27 + 435169368) & 0x1C011A5E) - 1694981797;
  v58 = v56 + v55 + 1118376194;
  v59 = *v50 + v58;
  v60 = -8231943 * ((v59 ^ *(_DWORD *)(*a41 + (int)(*v46 & 0x91FF5B7C))) & 0x7FFFFFFF);
  v61 = -8231943 * (v60 ^ HIWORD(v60));
  *(_BYTE *)(v59 - 0x6CA6F0EE111A2BB6) = *(_BYTE *)(a42 + (v61 >> 24)) ^ HIBYTE(v57) ^ *(_BYTE *)(v48 + (v61 >> 24)) ^ *(_BYTE *)((v61 >> 24) + v51 + 4) ^ v61 ^ (105 * BYTE3(v61)) ^ 0xE;
  v62 = v53 + (v58 + 1);
  v63 = -8231943 * ((*(_DWORD *)(*a41 + (int)(*v46 & 0x91FF5B7C)) ^ v62) & 0x7FFFFFFF);
  v64 = -8231943 * (v63 ^ HIWORD(v63));
  *(_BYTE *)(v62 - 0x6CA6F0EE111A2BB6) = *(_BYTE *)(a42 + (v64 >> 24)) ^ BYTE2(v57) ^ *(_BYTE *)(v48 + (v64 >> 24)) ^ *(_BYTE *)((v64 >> 24) + v51 + 4) ^ v64 ^ (105 * BYTE3(v64));
  v65 = v53 + (v58 + 2);
  LODWORD(v64) = -8231943 * ((*(_DWORD *)(*a41 + (int)(*v46 & 0x91FF5B7C)) ^ v65) & 0x7FFFFFFF);
  v66 = -8231943 * (v64 ^ WORD1(v64));
  v67 = *(unsigned __int8 *)((v66 >> 24) + v51 + 4);
  *(_BYTE *)(v65 - 0x6CA6F0EE111A2BB6) = *(_BYTE *)(a42 + (v66 >> 24)) ^ BYTE1(v57) ^ *(_BYTE *)(v48 + (v66 >> 24)) ^ v67 ^ v66 ^ (105 * BYTE3(v66)) ^ 0x8D;
  v68 = v53 + (v58 + 3);
  LODWORD(v58) = -8231943 * ((*(_DWORD *)(*a41 + (int)(*v46 & 0x91FF5B7C)) ^ v68) & 0x7FFFFFFF);
  v69 = -8231943 * (v58 ^ WORD1(v58));
  *(_BYTE *)(v68 - 0x6CA6F0EE111A2BB6) = (a27 - ((2 * a27 + 88) & 0x5E) + 91) ^ *(_BYTE *)(a42 + (v69 >> 24)) ^ *(_BYTE *)(v48 + (v69 >> 24)) ^ *(_BYTE *)((v69 >> 24) + v51 + 4) ^ v69 ^ (105 * BYTE3(v69)) ^ 0x2F;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *))(*(_QWORD *)(v52 + 8 * (int)v47) - 12))(v67, a42, a41, 4286735353, 2449431420, v47, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_100099D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  int v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;

  LODWORD(a41) = v66;
  LODWORD(a27) = v63;
  HIDWORD(a43) = 37;
  HIDWORD(a49) = v65 + 316487542;
  v69 = ((unint64_t)&STACK[0x298] ^ a36 ^ 0xCF55481B652EFD93)
      + 2 * ((unint64_t)&STACK[0x298] & (a36 ^ 0xCF55481B652EFD93));
  STACK[0x2A0] = v69;
  LODWORD(STACK[0x298]) = v69 + 199417163;
  LODWORD(STACK[0x28C]) = 387119267;
  v70 = *(_QWORD *)(v68 + 8 * ((v65 - 808423952) ^ (v65 + 316487542) ^ 0x430D1659));
  LODWORD(STACK[0x290]) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(v70 - 12))(a1, a2, a7, a4, a5, a6, a7, &a63, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           v64,
           a39,
           a40,
           a41,
           v67,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           &STACK[0x298]);
}

uint64_t sub_100099DF4()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  _BOOL4 v7;

  v5 = v1 + 1;
  v7 = *(_QWORD *)(v2 + 8) == v2 || v5 > 0x13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v7 * v3) ^ v0)) - 12))();
}

uint64_t sub_100099E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  LODWORD(STACK[0x290]) = v6;
  LODWORD(STACK[0x28C]) = v8;
  LODWORD(STACK[0x294]) = 5;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * (int)((200 * ((((((v7 + 2665) | 0x1182) ^ 0xFFFFE411) + v7) | v7) >> 31)) ^ (v7 + 21088)))
                                                                                                - ((v7 + 101367296) & 0xF9F576A3)
                                                                                                + 13463))(a1, a2, a3, a4, a5, a6, 808437161);
}

uint64_t sub_100099EEC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v1 + 8 * v0) - ((1779 * (v0 ^ 0x1BEEu)) ^ 0x1BC4)))(LODWORD(STACK[0x294]));
}

uint64_t sub_100099F48(int a1)
{
  int v1;
  int v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  int v6;

  v4 = a1 == 0;
  v5 = (a1 - 1);
  v6 = !v4;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * ((v6 * v2) ^ v1)) - 8))(v5);
}

uint64_t sub_100099FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  uint64_t v53;

  LODWORD(STACK[0x294]) = a1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 + 8 * v52) - (v52 - 7612) + 13463))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_100099FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  unsigned int *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  int v69;
  int v70;

  v66 = ((a50 ^ a62) + 2 * (a50 & a62)) ^ a50;
  v67 = *v63;
  v68 = *(_DWORD *)(v64 + 4 * v67);
  v69 = v66 + v66 * v68;
  if (v66)
    v70 = 0;
  else
    v70 = *(_DWORD *)(v64 + 4 * v67);
  *(_DWORD *)(v64 + 4 * v67) = (v70 + v69) * v68;
  *v63 = ((_DWORD)v67 - 808443619 + (v62 ^ 0x302FEA40u) + 1) % 6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 + 8 * (v62 ^ (31350 * ((_DWORD)a27 - a41 == -531857104)))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_10009A0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  int v41;
  uint64_t v42;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * (v40 ^ (32242 * ((v41 & 0xFF00FF) == 11075818)))) - ((v40 - 520787109) & 0x1F0A7DCF) + 7622))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_10009A124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  unsigned int v54;
  int v55;
  uint64_t v56;

  HIDWORD(a50) = v55 - 1525884069;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 + 8 * ((55 * ((v55 - 1525884069) < 0xB62FE730 == v55 - 1525884069 < ((v54 + 13534) ^ 0x6632) - 1238388062)) ^ v54)) - (((v54 + 13534) | 0x2000) ^ 0x72A4)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_10009A1B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  unsigned __int8 a65;
  uint64_t v65;

  *(_QWORD *)(a8 + 200) = ((unint64_t)&STACK[0x240] ^ 0xF53FFFF7AD7BE2FFLL)
                        + 0x6FEE10997FAD3D3FLL
                        + ((2 * (_QWORD)&STACK[0x240]) & 0xEA7FFFEF5AF7C5F0);
  LODWORD(a27) = a65;
  LODWORD(a26) = HIDWORD(a51);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t *, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, unint64_t))(v65 + 8 * a9))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           ((2 * (_QWORD)&STACK[0x248]) & 0xFBFFBEFC7BDFEFD0)
         + 0x3F7DFD9DDBBCFF00
         + ((((a9 - 883391407) & 0x34A76FDE) - 0x2002081C2106EF4) ^ (unint64_t)&STACK[0x248]),
           &STACK[0x8984546B8A58A52],
           a34,
           a35,
           &STACK[0x4C4F010ACAF7637F],
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           &STACK[0x8984546B8A58A52],
           a53,
           ((2 * (_QWORD)&STACK[0x248]) & 0xFBFFBEFC7BDFEFD0)
         + 0x3F7DFD9DDBBCFF00
         + ((((a9 - 883391407) & 0x34A76FDE) - 0x2002081C2106EF4) ^ (unint64_t)&STACK[0x248]));
}

uint64_t sub_10009A2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v47;

  v47 = (16 * v41 + 1410345184);
  LOBYTE(STACK[0x6AB]) = *(_BYTE *)(v40 + v47 + 15);
  LOBYTE(STACK[0x6AA]) = *(_BYTE *)(v40 + v47 + 14);
  LOBYTE(STACK[0x6A9]) = *(_BYTE *)(v40 + v47 + 13);
  LOBYTE(STACK[0x6A8]) = *(_BYTE *)(v40 + v47 + 12);
  LOBYTE(STACK[0x6A7]) = *(_BYTE *)(v40 + v47 + 11);
  LOBYTE(STACK[0x6A6]) = *(_BYTE *)(v40 + v47 + 10);
  LOBYTE(STACK[0x6A5]) = *(_BYTE *)(v40 + v47 + 9);
  LOBYTE(STACK[0x6A4]) = *(_BYTE *)(v40 + v47 + 8);
  LOBYTE(STACK[0x6A3]) = *(_BYTE *)(v40 + v47 + 7);
  LOBYTE(STACK[0x6A2]) = *(_BYTE *)(v40 + v47 + 6);
  LOBYTE(STACK[0x6A1]) = *(_BYTE *)(v40 + v47 + 5);
  LOBYTE(STACK[0x6A0]) = *(_BYTE *)(v40 + v47 + 4);
  LOBYTE(STACK[0x69F]) = *(_BYTE *)(v40 + v47 + 3);
  LOBYTE(STACK[0x69E]) = *(_BYTE *)(v40 + v47 + 2);
  LOBYTE(STACK[0x69D]) = *(_BYTE *)(v40 + v47 + 1);
  LOBYTE(STACK[0x69C]) = *(_BYTE *)(v40 + v47);
  *(_DWORD *)(v43 - 156) = v42
                         + 1130658149 * ((((2 * (v43 - 176)) | 0x425507A6) - (v43 - 176) - 556434387) ^ 0xEC163A1E)
                         - 26316;
  *(_QWORD *)(a8 + 1696) = a35;
  *(_QWORD *)(a8 + 1704) = a32;
  v44 = ((uint64_t (*)(uint64_t))((char *)*(&off_10112C750 + v42 - 24601) - 212697655))(v43 - 176);
  v45 = (_BYTE *)(a30 + v47);
  v45[15] = STACK[0x6CF];
  v45[14] = STACK[0x6CE];
  v45[13] = STACK[0x6CD];
  v45[12] = STACK[0x6CC];
  v45[11] = STACK[0x6CB];
  v45[10] = STACK[0x6CA];
  v45[9] = STACK[0x6C9];
  v45[8] = STACK[0x6C8];
  v45[7] = STACK[0x6C7];
  v45[6] = STACK[0x6C6];
  v45[5] = STACK[0x6C5];
  v45[4] = STACK[0x6C4];
  v45[3] = STACK[0x6C3];
  v45[2] = STACK[0x6C2];
  v45[1] = STACK[0x6C1];
  *v45 = STACK[0x6C0];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40 + 8 * v42) - 4))(v44);
}

uint64_t sub_10009A4AC@<X0>(char a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(v4 + v1) = ((a1 - 62) ^ ((v3 ^ v5) + v6)) * (a1 - 45);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v1 == 0) * v2) ^ v3)) - 4))();
}

uint64_t sub_10009A4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8;
  uint64_t v9;

  *(_QWORD *)(a8 + 144) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (int)((20901 * (v8 <= ((777 * (v8 ^ 0xB3F4F35F)) ^ 0x198EEE77))) ^ (v8 + 1275804993)))
                            - 8))();
}

uint64_t sub_10009A548()
{
  int v0;
  uint64_t v1;
  char v2;
  char v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(v6 + v1) = ((v2 + 24) ^ v3) * (v2 + 41);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v1 == 0) * (((v0 ^ v5) * v7) ^ v4)) | v0)) - 8))();
}

uint64_t sub_10009A58C@<X0>(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, int a20,int a21)
{
  int v21;
  uint64_t v22;
  unsigned int v23;
  int v24;
  _BOOL4 v25;

  *(_QWORD *)(a1 + 152) = 0;
  v23 = ((a2 - 28996) | 0x1C82) + 16 * v21 + 171962962;
  v24 = v23 < 0xB62FE730;
  v25 = v23 > a19;
  if (a21 != v24)
    v25 = v24;
  return (*(uint64_t (**)(void))(v22 + 8 * ((!v25 * ((a2 - 2996) ^ 0x66E0)) ^ a2)))();
}

uint64_t sub_10009A604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * v6)
                                                                                                - (v6 + 5840)
                                                                                                + 13462))(a1, a2, a3, a4, a5, a6, 808437161);
}

uint64_t sub_10009A654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56)
{
  int v56;
  int v57;
  uint64_t v58;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * ((61 * (((2 * (16 * a56 + 1410345184)) & 0xFEF7FF80) + (((((v56 - 13308) | 0x3401) ^ 0xCF4C1447) + v56 + 808430149) ^ (16 * a56 + 1410345184)) - v57 == -296160270)) ^ v56)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_10009A6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  int v47;
  int v48;
  uint64_t v49;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * ((27146 * (((v48 + v47 - HIDWORD(a45)) ^ 0xDEF6DBF6EF5BFFFFLL) + 0x21092409FDC28590 + (((unint64_t)(v48 + v47 - HIDWORD(a45)) << (v46 + 94)) & 0x1DEB7FFFELL) != 3978200463)) ^ v46)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a33 + (HIDWORD(a45) + 8650809),
           a45,
           a46);
}

uint64_t sub_10009A7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;

  *(_QWORD *)(a8 + 192) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * v8) - 4))(-179670883, -3978200464, 57);
}

uint64_t sub_10009A818@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,unint64_t a44)
{
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BOOL4 v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  _BOOL4 v55;

  *(_BYTE *)(v47 + v50) = *(_BYTE *)(v46 + v50) ^ *(_BYTE *)(*(_QWORD *)(v52 + 8 * v51) + v50 + a1) ^ 8;
  v54 = a4 + v50 + v48 + 9;
  v55 = v44 + v50 + 1 < a44;
  if (v49 != v54 > a2)
    v55 = v49;
  return ((uint64_t (*)(void))(*(_QWORD *)(v53 + 8 * ((!v55 * a3) ^ v45)) - 4))();
}

uint64_t sub_10009A884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  int v41;
  uint64_t v42;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * (v41 + v40 - 8)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_10009A8A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  _BOOL4 v48;

  HIDWORD(a43) = 38;
  LODWORD(STACK[0x364]) = 381450761;
  LODWORD(STACK[0x368]) = 2134650450;
  LODWORD(STACK[0x388]) = 2134608427;
  v48 = a36 != 0x6F7634AB0303F6BELL && a37 != 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 + 8 * ((61066 * v48) ^ (v44 - 808423641))) - 4))(a1, a2, a3, a4, a5, a6, a7, a24, a9, a10, a11, a12, a13, a14, a7, v45, a2, a18, a19,
           a20,
           a21,
           v43,
           a1,
           a24,
           a25,
           a26,
           a27,
           a8,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_10009A948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int *a37,uint64_t a38,int a39,uint64_t a40)
{
  int v40;
  uint64_t v41;
  _QWORD *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _BOOL4 v52;

  v46 = 10 * (a39 ^ (v40 - 545));
  v47 = *(_QWORD *)(v41 - 0x6F7634AB0303F6BELL);
  v48 = *a37;
  v49 = *(_QWORD *)(v45 + 8 * v46);
  v50 = 210615973
      * ((2 * ((v44 - 176) & 0xEFA4C652006D5D8) - (v44 - 176) - 0xEFA4C652006D5DCLL) ^ 0xBEC656747616E33BLL);
  v42[212] = v47;
  v42[215] = &STACK[0x669D1D41D800F84A];
  v42[217] = v49 ^ v50;
  v42[213] = &STACK[0x441CD476C0591F8A];
  *(_DWORD *)(v44 - 144) = v50 + 1741050007 + v46;
  *(_DWORD *)(v44 - 124) = v48 - v50 - 763888946;
  v42[214] = a37 + 1;
  v51 = a8(v44 - 176);
  v52 = *(_DWORD *)(v44 - 128) == ((((v46 + 1974463145) & 0xBA7FDEEF) + 1326205928) ^ (v46 - 1194758219) & 0x47367F99);
  LODWORD(STACK[0x388]) = v43 + 15;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40 + 8 * ((56004 * v52) ^ (v46 + 14528))) - 4))(v51);
}

uint64_t sub_10009AACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;

  v66 = STACK[0x364];
  *(_QWORD *)(v64 + 176) = *(_QWORD *)(v65 + 8 * v63) - 4;
  LODWORD(STACK[0x378]) = v66;
  LODWORD(STACK[0x37C]) = v62 ^ 0x5FA963AD;
  LODWORD(STACK[0x380]) = 671197413;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 + 8 * (v63 ^ 0x2818)) - (((_DWORD)v63 - 219155039) & 0xD106DFF) + 26674))(a1, a2, a3, a4, a5, a6, a7, v61, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

uint64_t sub_10009AB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  int v63;
  int v64;
  int v65;
  uint64_t v66;

  LODWORD(a41) = v65;
  LODWORD(a27) = v63;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 + 8 * ((v64 - 808411127) ^ (23 * (a36 != 0)))) - ((v64 - 808411702) + (unint64_t)(v64 - 808431359)) + 44173))(a1, a2, a3, a36, a5, a6, a7, &a63, a9, a10, a11, a12, a13, a14, a7, a16, a2, a18, a19,
           a20,
           a21,
           a22,
           a1,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_10009ABCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *a4;
  *(_QWORD *)(a8 + 720) = *a4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((v10 == 0x6CA6F0EE111A2BB6) * (v8 - 31915)) ^ v8)) - 12))();
}

uint64_t sub_10009AC10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((*(_QWORD *)(a4 + 8) == 0x7C0ADF1C3D95FE54)
                                          * (((v4 ^ 0x5349) + 19467) ^ 0x8E8A)) ^ v4))
                            - 12))();
}

uint64_t sub_10009AC58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v43;
  uint64_t v44;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 + 8 * ((((*(_DWORD *)(a4 + 40) >> 1) & 1) * (((v43 - a9 + 1416993814) & 0x7B5AFDB6) + 31577)) ^ v43)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_10009ACA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,char a51)
{
  unsigned int v51;
  uint64_t v52;

  return ((uint64_t (*)(void))(*(_QWORD *)(v52 + 8 * ((64210 * ((a51 & 4) == (v51 ^ 0x650) - 31680)) ^ v51)) - 4))();
}

uint64_t sub_10009ACE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((*(_QWORD *)(a8 + 720) != 0x6CA6F0EE111A2BB6) | (2
                                                                                            * (*(_QWORD *)(a8 + 720) != 0x6CA6F0EE111A2BB6)) | v8))
                            - ((v8 - 166265237) & 0x9E8FFC4 ^ 0x7BC4)))();
}

uint64_t sub_10009AD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = a8[90];
  a8[91] = v10 - 0x6CA6F0EE111A2BB6;
  v11 = (*(_DWORD *)(a4 + 20) + 1778866085);
  a8[92] = v11;
  a8[65] = v11;
  a8[70] = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8 * ((((_DWORD)v11 == 0) * ((v8 + 808411475) ^ 0x302FDD22)) ^ (v8 - 19364)))
                            - 8))();
}

uint64_t sub_10009ADB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  int v8;
  uint64_t v9;

  a8[68] = a8[92];
  a8[69] = ((unint64_t)&STACK[0x3B8] ^ 0xBECFEFFEFEFF2BEELL)
         + ((2 * (_QWORD)&STACK[0x3B8]) & 0x7D9FDFFDFDFE57D0)
         + 0x75F0F5A5B9FCDFB6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * v8) - 12))();
}

uint64_t sub_10009AE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v17 = v12 + v13 + v10;
  *(_QWORD *)(a8 + 520) = v17;
  *(_BYTE *)(v9 + v17) = (v11 ^ v14) * (v11 + 17);
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * (((*(_QWORD *)(a8 + 520) == 0) * v15) ^ v8)) - 12))();
}

uint64_t sub_10009AE80(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *(_QWORD *)(v9 + 8 * v8);
  *(_QWORD *)(a8 + 560) = *a4;
  return ((uint64_t (*)(void))(v10 - (((v8 + 268656725) | 0x202C4C61u) ^ 0x302FDEEBLL)))();
}

uint64_t sub_10009AEBC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  int v34;
  uint64_t v35;

  v34 = a1 + v33 + 1248;
  v35 = sub_100DD0758();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a33 + 8 * v34) - 4))(v35);
}

uint64_t sub_10009AEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(uint64_t),uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;

  v43 = 19382863 * ((((v42 - 176) | 0xE9F1C2CD) - ((v42 - 176) & 0xE9F1C2CD)) ^ 0xE1344E13);
  *(_WORD *)(v42 - 156) = (((32477 * v40 + 1306) ^ 0x765F)
                         - 29703
                         + (((32477 * v40 + 1306) << ((v41 ^ 0xBF) - 91)) & 0xECBE)) ^ v43;
  *(_DWORD *)(v42 - 152) = v43 - 939369750;
  *(_DWORD *)(v42 - 168) = -808423641 - v43 + v41 - 1827;
  *(_DWORD *)(v42 - 164) = v43 + 1344506351;
  STACK[0x850] = (unint64_t)&STACK[0x7D46CEFC17F01493];
  STACK[0x870] = a36;
  v44 = a25(v42 - 176);
  v45 = *(_DWORD *)(v42 - 160);
  LODWORD(STACK[0x284]) = v45;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40 + 8 * ((471 * (v45 != 381450761)) ^ (v41 - 808403940)))
                                          - 4))(v44);
}

uint64_t sub_10009B050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  uint64_t v43;
  int v44;
  uint64_t v45;

  LODWORD(STACK[0x288]) = STACK[0x380];
  LODWORD(STACK[0x350]) = 381450761;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 + 8 * (((((v43 == 0) ^ (v44 - 113)) & 1) * ((v44 - 575750501) & 0x225158FF ^ 0x7726)) ^ (v44 + 9467))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_10009B0D4()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((*v1 != 0x6CA6F0EE111A2BB6) * ((v0 ^ 0x1D8) - 20311)) ^ v0))
                            - (((v0 - 3830) | 0x166u) ^ 0x436BLL)))();
}

uint64_t sub_10009B128()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_QWORD *)(v1 + 8) == 0x7C0ADF1C3D95FE54)
                                          * (((v0 - 2135818672) & 0x7F4DF3E7) - 13295)) ^ v0))
                            - (v0 + 9404)
                            + 30175))();
}

uint64_t sub_10009B188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  int v59;

  v56 = 1130658149 * ((2 * ((v55 - 176) & 0x9FF0C28) - (v55 - 176) - 167709740) ^ 0x3B3C4A19);
  v57 = LODWORD(STACK[0x284]) - v56;
  *(_DWORD *)(v55 - 172) = v56 + v54 + 6493;
  *(_DWORD *)(v55 - 168) = v57;
  *(_QWORD *)(v52 + 1712) = a51;
  v58 = v51(v55 - 176);
  v59 = *(_DWORD *)(v55 - 176);
  LODWORD(STACK[0x28C]) = v59;
  LODWORD(STACK[0x38C]) = v53;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40
                                                      + 8
                                                      * ((10391 * (v59 != ((v54 - 1532847240) & 0x5B5D7F77) + 381426610)) ^ v54))
                                          - (v54 ^ 0x463Au)
                                          + 1369))(v58);
}

uint64_t sub_10009B254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  unsigned int v63;
  uint64_t v64;

  LODWORD(STACK[0x354]) = STACK[0x28C];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))(*(_QWORD *)(v64 + 8 * (int)(v63 + 7163)) - (v63 ^ 0x551)))(a1, a2, a3, a4, a5, 808434872, a7, &a63);
}

uint64_t sub_10009B2AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X6>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  BOOL v40;
  int v43;

  v38 = (char *)&STACK[0x298]
      + ((v35 - 808836837) ^ 0x77754A8AEC035848 ^ ((a33 & 0x888AB575EC055849 ^ 0xFF7D5AAE5BFE97CCLL ^ (v35 - 938336165) & 0x7BE68FB)
                                                                 + ((2 * a33) ^ 0x18FCFA36FB60617)
                                                                 + (a33 & 0x77754A8A13FAA7B6 ^ 0xFFBABD7FEC25FCFDLL)
                                                                 + 1));
  STACK[0x2A0] = (unint64_t)v38;
  LODWORD(STACK[0x298]) = (_DWORD)v38 + 199417163;
  STACK[0x2F0] = (unint64_t)&STACK[0x669D1D41D800F97E];
  STACK[0x2F8] = (unint64_t)&STACK[0x7D46CEFC17F01477];
  STACK[0x300] = (unint64_t)&STACK[0x441CD476C05920BE];
  LODWORD(STACK[0x498]) = a29;
  LODWORD(STACK[0x364]) = 2134650450;
  v40 = a34 == 0x6F7634AB0303F6BELL || a26 == 0xC18E0A9CFD897F59 || a1 == 0x2B6212DB23DCB495;
  LODWORD(STACK[0x380]) = 2134608427;
  v43 = v40 || a30 == 0x7EBD21DF175318FFLL || a27 == 0x7EBD21DF175318FFLL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((v35 - 808403979) | (2 * v43) | (4 * v43))))(a1, a2, a3, a30, a26, a21, a4, a22, a6, a7, a8, a9, a10, a11, a4, v36, a2, a15, a16,
           a17,
           a18,
           v34,
           a1,
           a21,
           a22,
           a23,
           a24,
           a5,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_10009B4B0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;

  return ((uint64_t (*)(void))(*(_QWORD *)(v30
                                        + 8
                                        * (int)((2956
                                               * ((((((a1 + 397364) | 0x430D) ^ 0xFFFFACC0 ^ (*(_DWORD *)(a30 - 0x6F7634AB0303F6B6)
                                                                                            - 2135043668)) & a1 | (a1 | ~(*(_DWORD *)(a30 - 0x6F7634AB0303F6B6) - 2135043668)) & (*(_DWORD *)(a30 - 0x6F7634AB0303F6B6) - 2135043668 - a1)) >> ((a1 + 76) ^ 0x55)) & 1)) ^ (a1 + 409875)))
                            - 8))();
}

uint64_t sub_10009B554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  unsigned int v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  int v50;

  v44 = *(_QWORD *)(a37 - 0x6F7634AB0303F6BELL);
  v45 = *(_DWORD *)(a37 - 0x6F7634AB0303F6A6);
  v46 = *(_QWORD *)(v43 + 8 * v40);
  v47 = v41[42];
  v48 = 210615973
      * ((((v42 - 176) | 0xF4F3042465459CF8) - ((v42 - 176) & 0xF4F3042465459CF8)) ^ 0xBB30E1CACCAA55E7);
  v41[215] = v41[40];
  v41[213] = v47;
  v41[214] = a37 - 0x6F7634AB0303F6A2;
  v41[217] = v46 ^ v48;
  v41[212] = v44;
  *(_DWORD *)(v42 - 124) = v45 - v48 - 763888946;
  *(_DWORD *)(v42 - 144) = v48 + 1741050007 + v40;
  v49 = a6(v42 - 176);
  v50 = *(_DWORD *)(v42 - 128);
  LODWORD(STACK[0x380]) = v50;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40
                                                      + 8
                                                      * ((28048 * (v50 == 2134650450)) ^ ((((v40 ^ 0x152F) + 26581) ^ 0x7F0D)
                                                                                        + v40)))
                                          - 211 * (v40 ^ 0x152F)
                                          + 21303))(v49);
}

uint64_t sub_10009B6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  *(_QWORD *)(v5 + 344) = a4 - 0x7EBD21DF175318FFLL;
  v7 = *(_DWORD *)(a4 - 0x7EBD21DF175318FFLL);
  LODWORD(STACK[0x370]) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)(((v7 == 381450761) * ((v4 + 2085513920) & 0x83B14F6B ^ 0x2E4E)) ^ v4))
                            - ((v4 + 20810) ^ 0xA48DLL)))();
}

uint64_t sub_10009B720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 + 184) = (v5 ^ 0xFFFFFFFFFFFFF29FLL) + *(_QWORD *)(v7 + 8 * v5);
  LODWORD(STACK[0x38C]) = a5 ^ 0xFD897F59;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (int)(v5 ^ 0x32FB)) - 8))();
}

uint64_t sub_10009B774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  int v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;

  HIDWORD(a43) = 42;
  v65 = (unint64_t)&STACK[0x298]
      + (a36 | 0x98581CF8D1E1A048)
      + ((2 * a36) ^ 0xCF4FC60E5C3CBF6FLL)
      + ((14 * (v63 ^ (a6 - 1095))) ^ 0x67A7E3072E1E6145 | ~a36)
      + 1;
  STACK[0x2A0] = v65;
  LODWORD(STACK[0x298]) = ((2 * v65) & 0x17C5BA96) + (v65 ^ 0xBE2DD4B);
  *(_DWORD *)(a33 - 0x669D1D41D800F4E6) = 381450761;
  LODWORD(STACK[0x360]) = HIDWORD(a29) ^ 0xA2C50BE6;
  LODWORD(v65) = (HIDWORD(a29) ^ 0xA2C50BE6) - ((2 * (HIDWORD(a29) ^ 0xA2C50BE6)) & 0xA23275EE) - 786875657;
  LOBYTE(STACK[0x394]) = BYTE3(v65) ^ 0xD1;
  LOBYTE(STACK[0x395]) = BYTE2(v65) ^ 0x19;
  LOBYTE(STACK[0x396]) = BYTE1(v65) ^ 0x3A;
  v66 = *(_QWORD *)(v64 + 8 * (v63 - 808440162));
  LOBYTE(STACK[0x397]) = v65 ^ 0xF7;
  LODWORD(STACK[0x330]) = a29;
  STACK[0x300] = a33 - 0x669D1D41D800F4E6;
  STACK[0x308] = a37 + 0x177ECD13451C78A8;
  STACK[0x310] = a37 + 8;
  HIBYTE(a54) = a37 == 0;
  LODWORD(STACK[0x334]) = a29 ^ 0x9289D9B4;
  STACK[0x270] = v66 - 12;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 + 8 * (v63 - 808409122)) - 12))(381450761, a36, a3, a4, a5, a6, a32, &a63, a9, a10, a11, a12, a13, a14, a7, a16, a2, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_10009B934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  char *v57;

  LODWORD(a41) = v55;
  LODWORD(a27) = v53;
  v57 = (char *)&STACK[0x298]
      + ((0x59CDA3D9EDB67148 - (a36 & 0xA8A49148A49228A4)) & 0xA8A49148A49228A4 | ((a36 & 0x151244A24A29450ALL)
                                                                                       + 0xA144542922A460ALL) & 0x151244A24A29450ALL | (((((v54 + 1068490506) & 0xFFEAEB1F) + 0x42492A14A179E944) & a36) + 0x451541511449292) & 0x42492A1511449251);
  STACK[0x2A0] = (unint64_t)v57;
  LODWORD(STACK[0x298]) = (_DWORD)v57 + 199417163;
  LODWORD(STACK[0x330]) = 387119267;
  STACK[0x334] = 387119267;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 + 8 * (int)((v54 + 1194577867) ^ 0x7763B1A6 ^ (35197 * (((20 - v52) | (v52 - 20)) >> 31)))) - 4))(0x59CDA3D9EDB67148, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           &STACK[0x298],
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_10009BA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  unsigned int v44;
  uint64_t v45;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v45 + 8
                                                            * (int)(v44 ^ 0x6FCABE7C ^ (14743 * (v44 < 0x60F6AD4))))
                                          - 12))(a44);
}

uint64_t sub_10009BB30(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  BOOL v13;
  uint64_t v14;
  int v15;

  v11 = *(_QWORD *)(a1 + 8);
  v12 = (*(_DWORD *)a1 - v11) ^ v7;
  v13 = (((((2 * (v6 & 1) + (v6 ^ 1)) ^ v2) & v2) >> (__clz((2 * (v6 & 1) + (v6 ^ 1)) ^ v2 | 1) ^ 0x1F)) & 1) == 0
     || v11 == a1;
  v14 = ((v11 ^ -a1) & v3)
      + 2 * (v11 & -a1 & v3)
      + ((v11 ^ -a1) & v4)
      + 2 * (v11 & -a1 & v1)
      + 2 * (v11 & -a1 & v4)
      + (((v11 & v1 | (v9 + v5 + 457) ^ v8) - (-a1 & v1)) & v1);
  LODWORD(STACK[0x330]) = v12;
  v15 = v13;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10 + 8 * (((4 * v15) | (v15 << 7)) ^ v5)) - 12))(v14);
}

uint64_t sub_10009BBE0(uint64_t a1, int a2)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a2 - 808435675)) - 4))();
}

uint64_t sub_10009BC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  int v53;
  uint64_t v54;

  LODWORD(STACK[0x33C]) = 5;
  LODWORD(STACK[0x328]) = 1;
  LODWORD(STACK[0x32C]) = 0;
  LODWORD(STACK[0x2AC]) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 + 8 * (int)((v52 + v53 - 1) ^ 0xFFFF88F2 ^ (61023 * (((v53 - 20) ^ (((v52 + v53 - 6) | (v52 + v53 - 1)) >= 0)) & 1)))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_10009BC70()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 + 8 * v0))(75);
}

uint64_t sub_10009BCAC(int a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;

  v13 = STACK[0x32C];
  v14 = STACK[0x328] & 0xFFFFFFFE;
  if ((STACK[0x328] & 1) == v2 + v11 + v9)
    v15 = 0;
  else
    v15 = v3;
  if (v5 == v2)
    v16 = 0;
  else
    v16 = STACK[0x328] & 0xFFFFFFFE;
  v17 = (((int)(LODWORD(STACK[0x328]) << 31) >> 31) & *(_DWORD *)(v10 + 4 * a2))
      + (*(_DWORD *)(v10 + 4 * a2) & 0xFFFFFFFE) * v14
      + (((int)(*(_DWORD *)(v10 + 4 * a2) << 31) >> 31) & STACK[0x328])
      - (((int)(LODWORD(STACK[0x328]) << 31) >> 31) & *(_DWORD *)(v10 + 4 * a2) & 1);
  LODWORD(STACK[0x328]) = v16 + v14 * v4 + v15;
  LODWORD(STACK[0x32C]) = (v13 | ~v17) + v17 + 1 + (v17 | v13);
  return (*(uint64_t (**)(void))(v12 + 8 * (int)(((((v7 + a2) | v6) >> 31) * a1) | v8)))();
}

uint64_t sub_10009BD44(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  LODWORD(STACK[0x2AC]) = a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v3 - 808413142)) - 8))();
}

uint64_t sub_10009BD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,_BYTE *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61)
{
  int v61;
  int v62;
  unsigned int *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  int v69;
  int v70;

  v66 = (a61 + LODWORD(STACK[0x2AC])) ^ a61;
  v67 = *v63;
  v68 = *(_DWORD *)(v64 + 4 * v67);
  v69 = v66 + v66 * v68;
  if (v66)
    v70 = 0;
  else
    v70 = *(_DWORD *)(v64 + 4 * v67);
  *(_DWORD *)(v64 + 4 * v67) = (v69 + v70) * v68;
  *v63 = ((int)v67 + 1) % 6u;
  *a33 = 94;
  a33[2] ^= 0x13u;
  a33[4] = (a33[4] & 0xCE ^ 0x39) - ((2 * (a33[4] & 0xCE ^ 0x39)) & 0x10) + 8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65
                                                                                          + 8
                                                                                          * ((v62 - 808428935) ^ (46821 * ((11 * v61 - 1625040325) < 0xFFFFFFFE))))
                                                                              - 12))(a1, a2, a3, a4, 1327915782);
}

uint64_t sub_10009BF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,__int16 a55,unsigned __int8 a56)
{
  int v56;
  int v57;
  uint64_t v58;
  unsigned int v59;

  v59 = (a56 ^ 0xEDF9B307) + v57 + 2 * ((a56 ^ 8) & 0xF);
  LODWORD(STACK[0x2BC]) = 1484088089;
  LODWORD(STACK[0x2CC]) = 337136482;
  LODWORD(STACK[0x280]) = v59 - (((v59 << (v56 + 7)) + 404977296) & 0x1B55BBAE) + 968661279;
  LODWORD(STACK[0x284]) = a6;
  LODWORD(STACK[0x288]) = 421978507;
  LODWORD(STACK[0x28C]) = 762430943;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * v56) - 4))(a1, a2, 1301);
}

uint64_t sub_10009C03C@<X0>(uint64_t a1@<X1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X4>, int a5@<W7>, __int16 a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unsigned int a33,int a34,unsigned int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45,uint64_t a46,int a47)
{
  int v47;
  uint64_t v48;
  int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  unint64_t v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  unint64_t v63;
  int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;

  HIDWORD(v58) = a5 ^ 0x3CA6;
  LODWORD(v58) = a5 ^ 0x21598000;
  v59 = *(unsigned __int8 *)(a31 + v52 % a33) ^ 8;
  v60 = (unsigned __int16)(a3 + 632) + 851955142 - ((2 * (a3 + 632)) & 0x19B8C);
  v61 = (v59 - 1258727944 - ((2 * v59) & 0x1F0)) ^ 0xB4F955F8;
  v62 = ((v58 >> 15) - ((2 * (v58 >> 15)) & 0x2C46431E) + ((a1 + 957744397) & 0x71EF9FFF ^ 0x1623B175)) ^ a45 ^ ((v61 << (v60 ^ 0xC6)) - ((2 * (v61 << (v60 ^ 0xC6))) & 0xBDDEB12E) - 554739561);
  v63 = ((v62 ^ 0xE995C5BE) * (unint64_t)v57) >> 47;
  LODWORD(v63) = ((v62 ^ 0xE995C5BE) - 65521 * v63 + 1300283790 - ((2 * ((v62 ^ 0xE995C5BE) - 65521 * v63)) & 0x1831C)) ^ 0x4D80C18E;
  LODWORD(v63) = ((((_DWORD)v63 * a2) & 0xF5BFD9AC) + (((_DWORD)v63 * v47) ^ 0xFADFECD6) + 85988138) % v55;
  v64 = v63 ^ 0x7D56AEFF;
  v65 = (2 * v63) & 0x15DFE;
  LODWORD(v63) = (unsigned __int16)(a6 - 29670) | (((unsigned __int16)(a6 - 29670) < 0x5816u) << 16);
  v66 = (v64
       + (((5 * (v49 ^ v53)) ^ 0xC0034084)
        - ((10 * (v49 ^ v53)) & 0x3EF6)
        + ((4 * v60) ^ 0x439D1C2D)
        + ((8 * v60) & 0x2FBA990 ^ 0xFDC5D7EF)
        - 3 * ((_DWORD)v63 + 1041696520))
       * v56
       + v65
       - 1610246892)
      % v55;
  v67 = (4099
       * ((((v62 ^ 0xE995C5BE) / v55) ^ 0xBDBDFFF7)
        + (((26 * (v60 ^ 0x32C7CDC6)) & 0xEE7FF3A) + ((13 * (v60 ^ 0x32C7CDC6)) ^ 0x6F73FF9D) + a47) * v56
        + ((v54 + 12) & (2 * ((v62 ^ 0xE995C5BE) / v55))))
       + 118647338)
      % v55;
  v68 = (v67 + 599983653 - ((v54 + 3176) & (2 * v67))) ^ 0x23C30625;
  v69 = ((14 * (v60 ^ 0x32C7CDC6)) & 0x7DBFEE6) + ((7 * (v60 ^ 0x32C7CDC6)) ^ 0xFBEDFF73) + 68288653;
  v70 = (4099
       * ((((v62 ^ 0xE995C5BE) % 0xF1FD) ^ 0xB9E99E47)
        + (((v69 % 0x43) ^ 0xFDE33DFD)
         + ((4 * ((_DWORD)v63 + 1041696520) + 128091016) ^ 0xEFFD5EBF)
         + ((2 * (4 * ((_DWORD)v63 + 1041696520) + 128091016)) & 0xDFFABD78)
         + ((2 * (v69 % 0x43)) & 0xFA))
        * v56
        + ((2 * ((v62 ^ 0xE995C5BE) % 0xF1FD)) & 0x13C8E))
       - 1001871666)
      % v55;
  v71 = (v70 - 1201509624 - ((2 * v70) & 0xD610)) ^ 0xB8626B08;
  v72 = ((v71 << (53 - v63)) - 677714008 - ((2 * (v71 << (53 - v63))) & 0xAF35CF50)) ^ 0xD79AE7A8 | ((v71 >> (a6 + 5)) - 515959952 - ((2 * (v71 >> (a6 + 5))) & 0x427E26E0)) ^ 0xE13F1370;
  v73 = (65521 * v68 - ((v68 * v54) & 0x11B978C0) - 1998799776) ^ v62 ^ (v72 - ((2 * v72) & 0x7D18D35C) - 1098094162) ^ (v66 - ((2 * v66) & 0x13D54) - 629367126);
  v74 = (((unsigned __int16)(a6 + 13320) % 0x13u) ^ 0x57F7)
      - 22516
      + ((2 * ((unsigned __int16)(a6 + 13320) % 0x13u)) & 0x2E);
  LOBYTE(v74) = (v74 + 60 - ((2 * v74) & 0x78)) ^ 0x3C;
  v75 = v50 % a33;
  v76 = *(unsigned __int8 *)(a31 + v75);
  *(_BYTE *)(a31 + v75) = *(_BYTE *)(v48
                                   + (v51
                                    + (((v73 ^ 0x5B98EDAu) % 0x829) ^ 0x7F595FAF)
                                    + ((2 * ((v73 ^ 0x5B98EDAu) % 0x829)) & 0x1F5E)
                                    + 1395972722)
                                   % a35) ^ v76 ^ (((v73 ^ 0x5B98EDAu) >> v74)
                                                 - ((2 * ((v73 ^ 0x5B98EDAu) >> v74)) & 0x9C)
                                                 - 50) ^ 0xC6;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a39 + 8 * ((8695 * ((_DWORD)a1 == 374155367)) ^ ((int)a1 - 1425722862))) - 8))(a33, a1, 1301, ((unsigned __int16)((((unsigned __int16)(a3 + 635) % 0x11u) ^ 0xDEFD)+ 22837+ ((2 * ((unsigned __int16)(a3 + 635) % 0x11u)) & 0x3A)) | (((unsigned __int16)((unsigned __int16)((((unsigned __int16)(a3 + 635) % 0x11u) ^ 0xDEFD) + 22837 + ((2 * ((unsigned __int16)(a3 + 635) % 0x11u)) & 0x3A)) >> 4) < 0x383u) << 16))+ 820105821, a4, v73 ^ 0xCCFCF127, v76, 3474847091, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_10009C620(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,_BOOL4 a38,uint64_t a39,uint64_t a40,unsigned int a41)
{
  unsigned int v41;
  int v42;
  _BOOL4 v43;

  if (a38 != v41 < 0xD71B7E25)
    v43 = a38;
  else
    v43 = v41 < a41;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a40 + 8 * (v42 ^ (510 * !v43))) - 4))(a1, a2, a3, (((a8 + a4 + 3) % 0x11u) ^ 0x7F8FFBDF) + 2 * ((a8 + a4 + 3) % 0x11u) - 656054471);
}

uint64_t sub_10009C778@<X0>(int a1@<W2>, int a2@<W3>, uint64_t a3@<X4>, int a4@<W5>, int a5@<W6>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,uint64_t a38,uint64_t a39,unsigned int a40)
{
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  int v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;

  v47 = v41 ^ 0x54FA6721u;
  HIDWORD(v48) = a4 ^ 0x57FFD;
  LODWORD(v48) = a4 ^ 0xC9400000;
  v49 = ((2 * (*(unsigned __int8 *)(a35 + (v40 + a5)) ^ 8)) & 0x77777777)
      + ((v47 + 1488911703) ^ (v41 - 28365) ^ *(unsigned __int8 *)(a35 + (v40 + a5)) ^ 8);
  v50 = (unsigned __int16)(a6 - 19291) + 1763194566 - ((2 * (a6 + 46245)) & 0x6D8C);
  v51 = a4 ^ a37 ^ ((v48 >> 21) - ((2 * (v48 >> 21)) & 0xFDF5CBA0) + 2130372048) ^ (((v49 + 1380322117) << (v50 ^ 0xC6))
                                                                                  - ((2
                                                                                    * ((v49 + 1380322117) << (v50 ^ 0xC6))) & 0x43736C5C)
                                                                                  + 565818926);
  v52 = (v51 ^ 0xF1034545) - ((((v51 ^ 0xF1034545) * (unint64_t)v43) >> 32) >> 15) * v46;
  v53 = (4099
       * ((v52 ^ 0x1FBF757F)
        + (((2 * v50) ^ 0x39DB9259) + ((4 * v50) & 0x17FFA8 ^ 0xDB08) + v49 + 1466400720) * a1
        + ((2 * v52) & 0xEAFE))
       - 1906265142)
      % v44;
  v54 = ((v51 ^ 0xF1034545) / v44 - 1236634152 - ((2 * ((v51 ^ 0xF1034545) / v44)) & 0xEBB0)) ^ 0xB64A75D8;
  v55 = (((39044 * v54) & 0xFEFFD5F8) + ((19522 * v54) ^ 0x7F7FEAFC) - 2139089660) % v44;
  v56 = ((unsigned __int16)(a2 - 25366) ^ 0xF9BEE62E) + (v42 & (2 * (a2 + 40170)));
  v57 = *(unsigned __int8 *)(a35 + ((-1792599363 - v40 - ((1524861884 - 2 * v40) & 0xCF6AA9BE)) ^ 0x67B554DF) + v45);
  v58 = (v57 ^ 8) + 513404480 - ((2 * v57) & 0x80);
  v59 = ((v55 ^ 0x1F6FFDEE)
       + 1301 * (-3 * v56 + ((2 * v58) ^ 0xB5125C03) + ((4 * v58) & 0x6A24BEF8 ^ 0x95DB47FF))
       + ((2 * v55) & 0x3FBDC)
       - 1193620349)
      % v44;
  v60 = 65521 * v59 - ((131042 * v59) & 0x21B3370A) - 1864787067;
  v61 = (v53 - ((2 * v53) & 0x2C4CC) + 1082352230) ^ v51 ^ v60;
  v62 = (v56 + 104929749) % 0x11 - 2 * (((v56 + 104929749) % 0x11) & 7) - 28025;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a38 + 8 * ((412 * (a40 == -1918181929)) ^ v41)) - 8))(a40, v47, 39044, ((2 * v62) & 0x2314 ^ 0x2104) + (v62 ^ 0x6F0D), a3, 2376785367, v60, v61, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_10009CB80@<X0>(uint64_t a1@<X0>, int a2@<W2>, __int16 a3@<W3>, uint64_t a4@<X4>, int a5@<W7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,unsigned int a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,uint64_t a45,int a46)
{
  int v46;
  char v47;
  int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  unint64_t v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  uint64_t v64;
  unsigned int v65;
  unsigned int v66;
  uint64_t v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;

  v56 = (unsigned __int16)(a3 + 2721);
  HIDWORD(v57) = a5 ^ (v50 + 29435) ^ 0x1592C5C;
  LODWORD(v57) = a5 ^ 0x20000000;
  v58 = *(unsigned __int8 *)(a31
                           + (((v51 / 3) ^ 0xED6FFCFE)
                            + ((v53 % a34) ^ 0x7CDF7FFB)
                            + ((2 * (v51 / 3)) & 0xDADFF9FC)
                            + ((2 * (v53 % a34)) & 0xF9BEFFF6)
                            - 1783594233)
                           % v49) ^ 8;
  v59 = (unsigned __int16)(a6 + 13316) + 1814979900 - ((2 * (a6 + 13316)) & 0xCA78);
  v60 = v59 ^ 0x6C2E653C;
  v61 = ((v58 + 1708903357 - ((2 * v58) & 0x17A)) ^ 0x65DBCBBD) << (v59 ^ 0x3C);
  v62 = ((v57 >> 25) - ((2 * (v57 >> 25)) & 0x2539AD9C) - 1835215154) ^ a44 ^ (v61
                                                                             - ((2 * v61) & 0xDDF40A60)
                                                                             + 1861879088);
  v63 = ((((v62 ^ 0xDD3F6F58) % 0xFFF1 * a2) & 0xFB97B53C)
       + (((v62 ^ 0xDD3F6F58) % 0xFFF1 * v46) ^ 0xFDCBDA9F)
       + 36971873)
      % v54;
  v64 = (v56 | ((v56 < 0x829) << 16)) + 820118116;
  v65 = ((v63 ^ 0xFAC9BDAC)
       + (((5 * (v48 ^ 0x1E99EE40)) ^ 0xB24630AF)
        - ((10 * (v48 ^ 0x1E99EE40)) & 0x1EA0)
        - 3 * (_DWORD)v64
        + ((4 * v59) ^ 0x18BB94D5)
        + ((8 * v59) & 0x1BFFB0 ^ 0xFFECD65F))
       * v55
       + ((2 * v63) & 0x37B58)
       + 2141881729)
      % v54;
  v66 = (v62 ^ 0xDD3F6F58) / v54;
  v67 = (2 * v66) & 0x1D7DA;
  v68 = (v66 ^ 0x9B6FEBED) + (((26 * v60) & 0x6D2D7A) + ((13 * v60) ^ 0xFFB696BD) + a46) * v55;
  v69 = (65521 * ((4099 * (v68 + v67) + 1202009448) % v54)
       - (((4099 * (v68 + v67) + 1202009448) % v54 * v52) & 0xAC9E561C)
       - 699454706) ^ v62 ^ (v65 - ((2 * v65) & 0x222A2) + 664080721);
  v70 = (v69 ^ 0x2CE55507) >> (v56 - 41);
  *(_BYTE *)(a31 + v49) = v47 ^ 0xFA ^ (v70 - ((2 * v70) & 0xF4) - 6);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a38 + 8 * v50) - 8))(a1, (2 * v70) & 0xF4, 1301, v64, a4, v69 ^ 0xE5A02AFA, v67, 3474847091, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_10009CF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,int a23,uint64_t a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  char v41;
  int v42;

  return ((uint64_t (*)(void))(*(_QWORD *)(a41
                                        + 8
                                        * ((242
                                          * (((v41 - 22) ^ (((v42 + a25 - a23) | (a23 - (v42 + a25))) < 0)) & 1)) ^ a21))
                            - 4))();
}

uint64_t sub_10009CFB0()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v0 + v2 + 3070) ^ 0x6877)) - 4))();
}

uint64_t sub_10009CFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  int v29;
  int v30;
  uint64_t v31;

  LODWORD(a27) = v29;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 + 8 * ((v30 - 808437698) ^ (v28 + v30 + 807) ^ 0x7B00)) - 12))(a1, a2, a3, a4, a5, a6, a7, (v30 - 808437698), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_10009D048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * (int)a8) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_10009D0A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39)
{
  int v39;
  _DWORD *v40;
  int v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, _QWORD, uint64_t, _QWORD *, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int v44;
  uint64_t v45;

  v44 = *(_DWORD *)(*a39 + (int)(*v40 & 0x91FF5B7C));
  v45 = *a3 + (v41 + a6 + 3);
  return v43(a1, *(unsigned __int8 *)(v42+ ((unint64_t)(-8231943* ((-8231943 * ((v44 ^ v45) & 0x7FFFFFFF)) ^ ((-8231943 * ((v44 ^ v45) & 0x7FFFFFFF)) >> 16))) >> 24)), a2, a3, a4, ((-8231943* ((-8231943 * ((v44 ^ v45) & 0x7FFFFFFF)) ^ ((-8231943* ((v44 ^ v45) & 0x7FFFFFFF)) >> 16))) >> 24)* v39, a5, *a39, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_10009D254(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  int v46;
  int v47;

  return ((uint64_t (*)(void))(*(_QWORD *)(a40 + 8 * (((a46 == a5) * a7) ^ v46)) - ((v47 - 808443105) | a1) + 810))();
}

uint64_t sub_10009D294(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v3 + a3)) - 4))();
}

uint64_t sub_10009D2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t (*a36)(void))
{
  return a36();
}

uint64_t sub_10009D2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  int v46;
  int v47;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a40 + 8 * (v46 + v47 + 1547)) - 8))(a1, (a39 - 2134650450 + a46));
}

uint64_t sub_10009D318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, unsigned int a15, uint64_t a16, uint64_t a17, unsigned int *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,unsigned int a48)
{
  int v48;
  int v49;
  unint64_t v50;
  unsigned int v51;
  uint64_t v52;
  int v53;
  BOOL v54;
  int v55;
  int v56;
  int v57;

  v50 = (unint64_t)a48 >> 2;
  v51 = *(_DWORD *)(a8 + 4 * ((0x9F824282 % v50) & 0x3FFFFFFC));
  v52 = *a18;
  v53 = *(_DWORD *)(a16 + 4 * v52);
  LODWORD(v50) = (*(_DWORD *)(a8 + 4 * ((v50 - 1) & (unsigned __int16)v51)) & a13 ^ 0xFFFF) & ~HIWORD(v51);
  v54 = (_DWORD)v50 == 0;
  v55 = v50 + v50 * v53;
  v56 = v54;
  if (v54)
    v57 = *(_DWORD *)(a16 + 4 * v52);
  else
    v57 = 0;
  *(_DWORD *)(a16 + 4 * v52) = (v57 + v55) * v53;
  *a18 = ((int)v52 + 1) % 6u;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a41 + 8 * ((2958 * v56) ^ (v48 + v49 - 123))) - 8))(a1, a15);
}

uint64_t sub_10009D3DC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, char a15, uint64_t a16, int a17)
{
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  _BOOL4 v21;

  v21 = (v18 + a17) < 0x992F3456;
  if (v21 == a2 - 2106410419 < ((28 * (v20 ^ 0x302FDEFF)) ^ 0x992F3746))
    LOBYTE(v21) = a2 - 2106410419 < (v18 + a17);
  return ((uint64_t (*)(void))(*(_QWORD *)(v19
                                        + 8 * ((240 * (((3 * a15) ^ v21) & 1)) ^ (v17 + v20 - 171)))
                            - 8))();
}

uint64_t sub_10009D470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  uint64_t v29;
  int v30;

  LODWORD(a26) = v28;
  LODWORD(a19) = a2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 + 8 * (v30 ^ 0x6C16)) - (v30 + 5137) + 5909))(a1, a2, a3, a4, a5, a6, a7, (v30 + 5137), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_10009D4E0@<X0>(int a1@<W4>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  unsigned int v34;
  _BOOL4 v35;
  int v36;
  int v37;
  int v38;
  _BOOL4 v39;

  v39 = a1 + v36 < v34;
  if (v35 != a1 + v36 < a2)
    v39 = v35;
  return ((uint64_t (*)(void))(*(_QWORD *)(a34 + 8 * (v38 ^ (v39 * v37))) - 8))();
}

uint64_t sub_10009D53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11
                                                                                          + 8
                                                                                          * (((*(_QWORD *)(v4 + 8 * (v10 + v6)) != v7)
                                                                                            * v8) ^ v5))
                                                                              - (v5 + 45)
                                                                              + v9))(a1, a2, a3, a4, v10);
}

uint64_t sub_10009D56C(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((*(_DWORD *)(v9 + a3) - v8 == ((v6 + v7) | a1) + a4) * a6) ^ v6))
                            - 8))();
}

uint64_t sub_10009D5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  unint64_t v63;
  int v64;
  int v65;
  unint64_t v66;
  uint64_t v67;

  LODWORD(STACK[0x2AC]) = v64;
  STACK[0x2F0] = v63;
  STACK[0x2B0] = v66;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 + 8 * v65) - 51 * (v65 ^ 0x2A63u) + 8611))(a1, a2, a3, a4, a5, &a63, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_10009D5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *(_QWORD *)(a6 + 256);
  *(_QWORD *)(a6 + 328) = v9;
  LODWORD(STACK[0x290]) = 2134607897;
  return (*(uint64_t (**)(void))(v8 + 8 * ((3158 * (((v6 + 56) ^ (v9 == v7)) & 1)) ^ v6)))();
}

uint64_t sub_10009D644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  uint64_t v8;
  int *v9;
  int v10;

  v9 = (int *)(*(_QWORD *)(a6 + 328) - 0x13BB280902DEB78FLL);
  v10 = *v9;
  *(_QWORD *)(a6 + 336) = v9;
  LODWORD(STACK[0x290]) = v6 - 528;
  return (*(uint64_t (**)(void))(v8 + 8 * ((7348 * (v10 == ((v7 - 8603) | 0x6126) + 1979723968)) ^ v7)))();
}

uint64_t sub_10009D6B4@<X0>(_QWORD *a1@<X5>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;
  _BOOL4 v4;

  a1[43] = &STACK[0x6E0];
  a1[44] = &STACK[0x9ED338CF0B26EEE];
  v4 = a1[41] == 0x13BB280902DEB78FLL;
  LODWORD(STACK[0x290]) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((v4 * (v2 - 24778)) ^ v2)) - (v2 ^ 0x613ALL)))();
}

uint64_t sub_10009D730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = a6[41] - 0x13BB280902DEB74DLL;
  a6[45] = v9;
  LODWORD(v9) = *(unsigned __int16 *)v9 != 6961;
  a6[36] = 0;
  a6[37] = 0;
  LODWORD(STACK[0x284]) = v7 - 26;
  LODWORD(STACK[0x288]) = 2134650450;
  LODWORD(STACK[0x28C]) = 2066711848;
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((v9 * (v6 + 16020 + ((v6 - 24485) | 0x2240))) ^ (v6 + 290))))();
}

uint64_t sub_10009D7B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  v9 = *(unsigned __int16 *)(*(_QWORD *)(a6 + 328) - 0x13BB280902DEB73BLL);
  LOWORD(STACK[0x322]) = v9;
  *(_QWORD *)(a6 + 296) = 0;
  LODWORD(STACK[0x288]) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v9 != 18459) * ((v6 + 8901) ^ 0x13F6)) ^ v6))
                            - ((53 * (v6 ^ 0x3F26u)) ^ 0x23D9)))();
}

uint64_t sub_10009D824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int v49;
  uint64_t v50;

  HIWORD(a48) = *(_WORD *)(*(_QWORD *)(a6 + 328) - 0x13BB280902DEB729);
  *(_QWORD *)(a6 + 296) = 0;
  LODWORD(STACK[0x288]) = v49;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 8 * (a9 ^ (8 * (HIWORD(a48) == ((a9 + 715838881) & 0xEBDF ^ 0x2F3B))))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_10009D88C@<X0>(uint64_t a1@<X5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,__int16 a42,__int16 a43)
{
  int v43;
  uint64_t v44;
  int v45;
  int v46;
  _BOOL4 v47;

  v45 = a2 - 8901;
  v46 = a2 - 627073714;
  v47 = (unsigned __int16)(a43 - LOWORD(STACK[0x322])) == (unsigned __int16)((v46 ^ 0xDC4F) - 24322);
  *(_QWORD *)(a1 + 296) = 0;
  LODWORD(STACK[0x288]) = v43;
  return ((uint64_t (*)(void))(*(_QWORD *)(v44 + 8 * ((19417 * v47) ^ v45)) - (v46 & 0x25605775 ^ 0x571CLL)))();
}

uint64_t sub_10009D900@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, unint64_t *, uint64_t))(*(_QWORD *)(v1 + 8 * a1) - 4))(114, &STACK[0x6D0], 49352);
}

uint64_t sub_10009D97C@<X0>(char a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, char a4@<W3>, unsigned int a5@<W8>)
{
  uint64_t v5;
  _WORD *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  _BOOL4 v19;

  v16 = (a4 - 11) & 0xF;
  *(_BYTE *)(a2 + (a4 - 11)) = (a4 - 87) ^ *(_BYTE *)(v5 + (a4 - 11) + 68) ^ *(_BYTE *)(v5 + (a4 - 11) + 86) ^ (v16 * v13) ^ *(_BYTE *)(*(_QWORD *)(v14 + 8 * v7) + v8 + v16) ^ *(_BYTE *)(*(_QWORD *)(v14 + 8 * v9) + v10 + v16 + 6) ^ *(_BYTE *)(*(_QWORD *)(v14 + 8 * v11) + v12 + v16 + 6) ^ a1;
  v17 = (unsigned __int16)(*v6 + 22);
  v19 = v17 > 0xCFF && v17 <= ((a4 - 10) | 0xD00u);
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((v19 * a3) ^ a5)) - 4))();
}

uint64_t sub_10009DA20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  *(_DWORD *)(v66 - 160) = (v65 + 6231) ^ (879478891
                                         * (((v66 - 176) & 0x7FA0C289 | ~((v66 - 176) | 0x7FA0C289)) ^ 0x30260035));
  STACK[0x868] = (unint64_t)&STACK[0x6D0];
  STACK[0x858] = (unint64_t)&STACK[0x6D0];
  ((void (*)(uint64_t))(*(_QWORD *)(v63 + 8 * (v65 - 12069)) - 1796952994))(v66 - 176);
  STACK[0x278] = 1043848094;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 + 8 * v65) - 8))(&a63, v67, v68, v69, v70, v71, v72, v73, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_10009DAE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v12 = *(_QWORD *)(a1 + 200);
  v13 = v12 + v9;
  v14 = v2 + v12;
  *(_BYTE *)(a2 + v13) = *(_BYTE *)(v11 + v13) ^ *(_BYTE *)(v6 + v13) ^ (-31 * v13) ^ *(_BYTE *)(v7 + v13 + 6) ^ *(_BYTE *)(v8 + v13 + 6) ^ 8;
  *(_QWORD *)(a1 + 200) = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v14 == v10) * v3) ^ v5)) - 8))();
}

uint64_t sub_10009DB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(uint64_t), uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;

  v71 = a19(21);
  STACK[0x2D0] = 0;
  STACK[0x2D8] = 0;
  LODWORD(STACK[0x284]) = 2134608422;
  LODWORD(STACK[0x288]) = 2134650450;
  LODWORD(STACK[0x28C]) = 2066711848;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a40 + 8 * (int)((41 * (((v71 == 0) ^ v63) & 1)) ^ v63)) - (v63 ^ 0x3F83)))(v71, v64, v65, v66, v67, &a63, v68, v69, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_10009DBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_BYTE *a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,__int16 a63)
{
  unsigned __int8 a64;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;

  *a57 = 1;
  v67 = a6[43];
  v68 = a6[44];
  v69 = 19382863 * ((((v65 - 176) | 0xDE18830) - ((v65 - 176) | 0xF21E77CF) - 232884273) ^ 0x52404EE);
  *(_DWORD *)(v65 - 148) = v69 + 749884278;
  a6[214] = v68;
  a6[212] = v67;
  *(_WORD *)(v65 - 152) = -15793 * ((((v65 - 176) | 0x8830) - ((v65 - 176) | 0x77CF) + 30671) ^ 0x4EE) + 6773;
  *(_DWORD *)(v65 - 168) = v64 - v69 - 34475;
  v70 = a26(v65 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v66
                                                      + 8 * ((59 * (((v64 + 22) ^ a64) & 1)) ^ v64))
                                          - 8))(v70);
}

uint64_t sub_10009DCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void (*a27)(uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,unint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v46 = *(_QWORD *)(a40 + 8 * (v42 - 21599)) - 4;
  v47 = STACK[0x310];
  STACK[0x858] = a37;
  STACK[0x850] = v47;
  STACK[0x868] = v46 ^ (1167911989
                      * ((((2 * v41) | 0x1C6777242483A95ALL) - v41 + 0x71CC446DEDBE2B53) ^ 0xD3B1B20D3CEB0B3ELL));
  *(_DWORD *)(v45 - 144) = 1897072881
                         - 1167911989 * ((((2 * v41) | 0x2483A95A) - v41 - 306304173) ^ 0x3CEB0B3E)
                         + v42
                         - 21599
                         - 156;
  *(_DWORD *)(v45 - 160) = (v40 - 1384033604) ^ (1167911989 * ((((2 * v41) | 0x2483A95A) - v41 - 306304173) ^ 0x3CEB0B3E));
  a27(v45 - 176);
  STACK[0x2C0] = 0;
  LODWORD(STACK[0x2CC]) = v43;
  LODWORD(STACK[0x280]) = v44;
  return ((uint64_t (*)(void))(*(_QWORD *)(a40 + 8 * (((v42 + 808416334) ^ 0x302FFA75) + v42 - 21599)) - 12))();
}

uint64_t sub_10009DDB4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((v0 + v2 - 2010) ^ (116 * (v1 < 64)))))();
}

uint64_t sub_10009DDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  int v38;
  uint64_t v39;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * (v38 + v37)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_10009DE00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t v39;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * (a9 ^ ((((v38 == 0x2C86DCAB8BD0EBF6) ^ (a9 - 83)) & 1) << 6))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_10009DE48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  char v38;
  uint64_t v39;
  uint64_t v40;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * ((12713 * (*(unsigned __int8 *)(v39 - 0x2C86DCAB8BD0EBEELL) != (((a9 ^ 0x11) + v38) ^ 0x87))) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_10009DE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * ((int)a1 + v37 - 847)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_10009DEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  BOOL v50;

  v50 = v48 != ((v46 + 2701) ^ 0xEFFAA4C80FF15BACLL) && v47 == 0x731F7A9A1F91A397;
  STACK[0x248] = v48;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * ((487 * (((v46 + 34) ^ v50) & 1)) ^ v46)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_10009DF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,__int16 a56,char a57,char a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a67;
  int v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v70 = ((uint64_t (*)(_QWORD, char *))(*(_QWORD *)(v68 + 8 * (v67 ^ 0x4E98)) - 1458052402))((a47 + 72378567), &a67);
  STACK[0x240] = v69;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a40 + 8 * ((15 * ((a58 & 1) == 0)) ^ v67)) - 12))(v70, v71, v72, v73, v74, v75, v76, v77, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_10009E008()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 96)
                        + v1
                        - ((*(_QWORD *)(v0 + 96) << (3 * (v2 ^ 0xD5u) + 8)) & 0xDFF549901FE23454);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * v2) - 12))();
}

uint64_t sub_10009E050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  _QWORD *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v45 = v41[18];
  v41[23] = v45;
  v41[19] = v45;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 + 8 * (v42 ^ (43701 * (v43 != 0x731F7A9A1F91A397)))) - (((v42 + 2583) | 0x140Bu) ^ 0x551FLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_10009E0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  _QWORD *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;

  *(_QWORD *)(v43 - 0x731F7A9A1F91A397) = v41[12]
                                          - ((v41[12] << (v42 ^ 0xF8u)) & 0xF843D83528A2E0D8)
                                          + 0x7C21EC1A9451706CLL;
  v41[19] = v41[23];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 + 8 * v42) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_10009E11C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v41 = v38[19];
  v38[24] = v41;
  v38[20] = 0;
  v38[21] = v41;
  v38[22] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * ((85 * (v39 == ((61 * (a9 ^ 0x547D) + 1500467881) & 0xA6907D7D) + 0x741F16445B73F0D8)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_10009E190()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = (v4 - 0x741F16445B743BC2 + (v0 ^ 0x703Bu)) & ~*(_QWORD *)(*(_QWORD *)(v2 + 8 * (v0 ^ 0x5C5C)) - 252584102);
  v7 = ((2 * v6) & 0xEEEFF5A6CDFFBFBELL) + (v6 ^ 0xF777FAD366FFDFDFLL);
  v8 = v4 - v7 - 0x7CA71B70F474366ELL;
  v9 = v8 + (v1[24] ^ v3) + v3 - ((2 * (v8 + (v1[24] ^ v3))) & 0xDFF549901FE23454);
  v1[20] = v7 + 0x888052C99002021;
  v1[21] = v9;
  v1[22] = v8;
  return (*(uint64_t (**)(void))(v5 + 8 * v0))();
}

uint64_t sub_10009E25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  uint64_t v46;
  uint64_t v47;

  *(_QWORD *)(v46 + 200) = *(_QWORD *)(v46 + 176);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 + 8 * ((245 * (HIDWORD(a45) != ((v45 + 1998740039) & 0x88DDCFFF) + 2134630038)) ^ v45)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_10009E2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;

  v65 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v54
                                                                                                + 8 * (v56 ^ 0x43D4))
                                                                                    - 731723066))(0, a54 ^ v55, 1, 2, ((v56 + 41) ^ 0x4502722u) + a47, a49);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a40 + 8 * ((89 * (v65 == -1)) ^ v56)) - 4))(v65, v57, v58, v59, v60, v61, v62, v63, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_10009E35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,_DWORD *a52,uint64_t a53)
{
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;

  *a52 = a47;
  *(_QWORD *)(v55 - 0x2A6886EF4EAA6D78) = a44;
  *(_QWORD *)(v55 - 0x2A6886EF4EAA6D70) = a53;
  *(_QWORD *)(v55 - 0x2A6886EF4EAA6D68) = *(_QWORD *)(v53 + 200);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 + 8 * v54) - (v54 - 575971302) + 3719016443))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_10009E3D8@<X0>(int a1@<W8>)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((13 * (v2 >= a1 + 1)) ^ v1)) - (v1 + 1860383597) + 1860420022))();
}

uint64_t sub_10009E414()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((v0 - 1860400242) | (8
                                                                   * (((v1 & (v0 ^ v1) | (v1 - v0) & ~(v0 ^ v1)) >> ((((v0 - 87) & 0xBF) + 111) ^ 0x85)) & 1))))
                            - 4))();
}

uint64_t sub_10009E47C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  unsigned int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  unsigned int v44;

  *(_DWORD *)(v40 - 0x3F2809B2BE643872) = a9 + 1;
  *(_DWORD *)(v40 - 0x3F2809B2BE64385ALL) = v41;
  v43 = 10 * v41 - ((20 * v41 + 181381708) & 0x39F531CC) + v39 + 212421235;
  *(_DWORD *)(v40 - 0x3F2809B2BE643856) = v43;
  v44 = ((2 * (v43 ^ 0x1CFA98E7) * (v41 - 635176009)) & 0xFC1F6BD2)
      + (((v43 ^ 0x1CFA98E7) * (v41 - 635176009)) ^ 0xFE0FB5E9);
  *(_DWORD *)(v40 - 0x3F2809B2BE64384ELL) = v44 + 1504339778;
  *(_DWORD *)(v40 - 0x3F2809B2BE643852) = v44 + 2114338918;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * (int)(v39 ^ v38 ^ (19414 * (v39 < 0x55EF7758)))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_10009E5B0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((5567
                                          * (a1 == (((v1 - 8223) | 0x1938) ^ ((v1 + 2994655) | 0x30020CE3) ^ 0xDF33F581))) ^ v1))
                            - 4))();
}

uint64_t sub_10009E60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  char v38;
  uint64_t v39;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * (((((a2 == 0x5D69D7CA88F07FA8) ^ (v37 + v38)) & 1) * ((v37 ^ 0xC19) + 25786)) ^ v37)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_10009E654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v46 = *(_QWORD *)(v45 + 8 * v43);
  v42[212] = a2;
  v42[213] = v46
           - 668045089
           * ((((2 * ((v44 - 176) ^ 0xB92B5B1CDD184D45)) | 0x8855EFF01BCB18DALL)
             - ((v44 - 176) ^ 0xB92B5B1CDD184D45)
             + 0x3BD50807F21A7393) ^ 0x9C066F099D34B123);
  v42[215] = a1;
  *(_DWORD *)(v44 - 160) = (v43 - 1698814597) ^ (668045089
                                               * ((((2 * ((v44 - 176) ^ 0xDD184D45)) | 0x1BCB18DA)
                                                 - ((v44 - 176) ^ 0xDD184D45)
                                                 - 233147501) ^ 0x9D34B123));
  v42[216] = v41;
  v47 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v40 + 8 * (int)(v43 ^ 0x1893)) - 332356994))(v44 - 176);
  return ((uint64_t (*)(uint64_t))(808443631
                                          - (((_DWORD)v43 + 271059197) | 0x2007C0C3u)
                                          + *(_QWORD *)(a40 + 8 * ((int)v43 + 2814))
                                          - 16))(v47);
}

uint64_t sub_10009E74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42)
{
  uint64_t v42;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * a42))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_10009E7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,unsigned int a50)
{
  int v50;
  uint64_t v51;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v51
                                                                                         + 8
                                                                                         * (int)(((a44 == 29)
                                                                                                * (((v50 - 89136874) & 0x357FDEEF ^ 0xCFD03DD9)
                                                                                                 + (v50 ^ 0x3DE))) ^ v50))
                                                                             - 4))(a1, a2, a3, a4, a50);
}

uint64_t sub_10009E7FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * (int)((((a30 >> 24) & 1) * (a9 - 7413)) ^ a9)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_10009E840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * (a9 + 10)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_10009E894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v41;
  unint64_t v42;
  uint64_t v43;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * (int)(v41 ^ (13 * ((v42 >> 25) & 1)))) - ((v41 + 808428253) ^ 0x302FDEEFLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_10009E8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v41;
  uint64_t v42;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * v41) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_10009E934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;

  return ((uint64_t (*)(void))(808443631
                            - (((v40 ^ 0xA9A6) + 539041573) | 0x100E8662u)
                            + *(_QWORD *)(a40 + 8 * (v40 ^ 0xA9A6))
                            - 24))();
}

uint64_t sub_10009E974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;
  int v48;
  uint64_t v49;

  LODWORD(STACK[0x344]) = 2134608442;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * ((101 * (v47 == v48 - 426992858)) ^ (v48 - 808404911))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_10009E9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(uint64_t),uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56)
{
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BOOL4 v64;

  v60 = *(_QWORD *)(a8 + 352);
  v61 = **(_QWORD **)(a8 + 360);
  v62 = 210615973 * ((v58 - 176) ^ 0x4FC3E5EEA9EFC91FLL);
  *(_QWORD *)(a8 + 1720) = *(_QWORD *)(v59 + 8 * v56) - v62;
  *(_DWORD *)(v58 - 168) = v62 + a56 - 175468204;
  *(_DWORD *)(v58 - 140) = (v56 - 961777065) ^ v62;
  *(_QWORD *)(a8 + 1696) = v60;
  *(_QWORD *)(a8 + 1712) = v61;
  v63 = a22(v58 - 176);
  v64 = *(_DWORD *)(v58 - 144) == 2134650450;
  LODWORD(STACK[0x344]) = v57 - 187;
  return (*(uint64_t (**)(uint64_t))(a40
                                            + 8
                                            * ((v64 * ((78 * (v56 ^ 0x14D0)) ^ 0x8028)) ^ (v56
                                                                                         - 808416926
                                                                                         + v56
                                                                                         + 808438131
                                                                                         + 280))))(v63);
}

uint64_t sub_10009EAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(_QWORD), uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56)
{
  int v56;
  int v57;
  uint64_t v58;
  unint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v65;

  v65 = a19(((v57 + 808411171) ^ 0xB0EC0F4D) + LODWORD(STACK[0x340]));
  v59 = *(_QWORD *)STACK[0x318];
  v60 = LODWORD(STACK[0x340]) - 66360030;
  v61 = 1075146641 * ((((v58 - 176) | 0x2ACAEE6F) - (v58 - 176) + ((v58 - 176) & 0xD5351190)) ^ 0xB85C25B1);
  STACK[0x868] = v65;
  *(_BYTE *)(v58 - 172) = (-111 * ((((v58 + 80) | 0x6F) - (v58 + 80) + ((v58 + 80) & 0x90)) ^ 0xB1)) ^ 0xB;
  STACK[0x878] = 0x1A473F8073A0688ELL;
  *(_DWORD *)(v58 - 144) = (v57 - 19889) ^ v61;
  *(_DWORD *)(v58 - 160) = v60 ^ v61;
  *(_DWORD *)(v58 - 156) = a56 - v61 + 1289584915;
  STACK[0x858] = v59;
  v62 = ((uint64_t (*)(uint64_t))((char *)*(&off_10112C750 + (v57 ^ 0x7597)) - 1247444043))(v58 - 176);
  v63 = *(_DWORD *)(v58 - 176);
  LODWORD(STACK[0x344]) = v63;
  return (*(uint64_t (**)(uint64_t))(a40
                                            + 8 * ((13 * (((v57 + 69) ^ (v63 == v56)) & 1)) ^ v57)))(v62);
}

uint64_t sub_10009EC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v56;
  int v57;
  int v58;
  _QWORD *v59;
  uint64_t v60;

  *v59 = a56;
  *(_DWORD *)(v56 - 0xA8B7CA143569EA7) = STACK[0x340];
  LODWORD(STACK[0x344]) = v57;
  return (*(uint64_t (**)(void))(v60 + 8 * (v58 | 0x10C8)))();
}

uint64_t sub_10009EC44()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((v2 + v0) ^ (43009 * (v1 == 61)))))();
}

uint64_t sub_10009EC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * v37))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_10009EC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * ((int)a1 + v37 - 847)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_10009ECB0(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46)
{
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;

  v52 = 1891100677
      * ((-2 - ((~(v50 - 176) | 0x8A569FA3622D9455) + ((v50 - 176) | 0x75A9605C9DD26BAALL))) ^ 0xDA434F320E25B5C5);
  v46[212] = (*(_QWORD *)(v51 + 8 * (v49 - 808438244)) - 12) ^ v52;
  v46[216] = 0x13EE293CE1F130D4;
  v46[213] = v48;
  v46[215] = v47;
  *(_DWORD *)(v50 - 160) = v52 + a46 - ((2 * a46 + 993601628) & 0x89A94942) - 495896369;
  *(_DWORD *)(v50 - 132) = (v49 + 1458820239) ^ v52;
  v53 = a2(v50 - 176);
  return (*(uint64_t (**)(uint64_t))(a40 + 8 * (v49 - 808437161)))(v53);
}

uint64_t sub_10009EDAC@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((31253 * (a1 == (((v1 ^ 0xB1) + 73) ^ 0x97))) ^ v1))
                            - 12))();
}

uint64_t sub_10009EDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,unint64_t a52,uint64_t a53,uint64_t a54,char a55,char a56,char a57)
{
  uint64_t v57;
  unsigned __int8 *v58;
  void (*v59)(uint64_t);
  int v60;
  void (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v63 = (uint64_t)&v58[56 * *v58 + 24];
  v64 = v62 - 176;
  v65 = 19382863 * ((~(v62 - 176) & 0x1B6637AE | (v62 - 176) & 0xE499C851) ^ 0x13A3BB70);
  *(_WORD *)(v62 - 152) = -15793 * ((~(v62 - 176) & 0x37AE | (v62 - 176) & 0xC851) ^ 0xBB70) + 6777;
  *(_DWORD *)(v62 - 168) = v60 - v65 - 3770;
  *(_QWORD *)(v57 + 1696) = v63;
  *(_DWORD *)(v62 - 148) = v65 + 749884278;
  *(_QWORD *)(v57 + 1712) = a52;
  v59(v62 - 176);
  v66 = *(_QWORD *)(a40 + 8 * (v60 + 156)) + ((15905 * (v60 ^ 0x1598u)) ^ 0xFFFFFFFFFFFF83BELL);
  STACK[0x850] = a52;
  *(_DWORD *)(v62 - 144) = v60
                         + 1897072881
                         - 1167911989 * ((((2 * (v62 - 176)) | 0x109DC328) - (v62 - 176) - 139387284) ^ 0x26E43E07);
  *(_DWORD *)(v62 - 160) = (1167911989 * ((((2 * (v62 - 176)) | 0x109DC328) - (v62 - 176) - 139387284) ^ 0x26E43E07)) ^ 0x1A467C74;
  STACK[0x868] = v66 ^ (1167911989
                      * ((((2 * (v62 - 176)) | 0x10042A3A109DC328) - (v62 - 176) + 0x77FDEAE2F7B11E6CLL) ^ 0xD5801C8226E43E07));
  STACK[0x858] = (unint64_t)&a55;
  v61(v62 - 176);
  v67 = 1167911989 * ((v64 - 2 * (v64 & 0x6A757DE63DC302EDLL) + 0x6A757DE63DC302EDLL) ^ 0x37F774791369DD7ELL);
  STACK[0x868] = (*(_QWORD *)(a40 + 8 * (v60 + 156)) - 4) ^ v67;
  STACK[0x858] = (unint64_t)&a56;
  *(_DWORD *)(v62 - 144) = v60 + 1897072881 - v67;
  *(_DWORD *)(v62 - 160) = v67 ^ 0x1A467C74;
  STACK[0x850] = a52;
  v61(v62 - 176);
  v68 = *(_QWORD *)(a40 + 8 * v60) - 4;
  v69 = 19382863
      * (((v64 | 0xDE00A9E8D865AC46) - (v64 | 0x21FF5617279A53B9) + 0x21FF5617279A53B9) ^ 0x8E1D7EDBD0A02098);
  STACK[0x860] = (unint64_t)&STACK[0x6AC];
  STACK[0x858] = a52;
  *(_DWORD *)(v62 - 152) = v69 + v60 - 1253357823;
  STACK[0x850] = v68 ^ v69;
  v70 = a20(v62 - 176);
  v71 = *(_QWORD *)(a40 + 8 * (v60 + 26333));
  a57 = 12;
  return ((uint64_t (*)(uint64_t))(v71 - 4))(v70);
}

uint64_t sub_10009F0A0()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v0 != 0) * v1) ^ v2)) - 4))();
}

uint64_t sub_10009F0F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;
  uint64_t v48;
  int v49;
  int v50;

  v49 = (v47 ^ 0xC | ((v47 & 0xF0) >> 4))
      - ((2 * (v47 ^ 0xC | ((v47 & 0xF0) >> 4))) & 0x3C)
      - 98;
  v50 = ((v49 & 0xFC) >> 2) ^ 0x27 | v49 ^ (((a9 + 271458583) | 0x20018483) - 69);
  HIDWORD(a46) = -42084 * (v50 & 1 | (((1 - v50) & 2) != 0)) + 2134650450;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * a9) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_10009F174()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * (v0 ^ (31956 * ((v1 - 1860419775) < 2))))
                            + 808443631
                            - (v0 + 808435394)
                            - 16))();
}

uint64_t sub_10009F1C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  unsigned int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;

  *(_DWORD *)(v39 - 0x3F2809B2BE643872) = v40;
  *(_DWORD *)(v39 - 0x3F2809B2BE64385ALL) = 635176012;
  *(_DWORD *)(v39 - 0x3F2809B2BE643856) = 486185320;
  *(_QWORD *)(v39 - 0x3F2809B2BE643852) = 0x57BA21D87C15FB96;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 + 8 * v38) - ((v38 - 1313874230) & 0x7E7FDFF7 ^ (unint64_t)(a9 - 8))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_10009F274@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * (int)((((a1 + 540307193) & 0xDFCB3B5D ^ 0x2A31) * (v1 == 214)) ^ a1))
                            - 8))();
}

uint64_t sub_10009F2B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56,unsigned __int8 a57)
{
  uint64_t v57;

  HIDWORD(a51) = ((((a9 - 22905) ^ 0xCD0) - 14190) & (2 * (a57 ^ 0xD7))) + (a57 ^ 0xDFA2B320);
  HIDWORD(a47) = HIDWORD(a51) - 2092498144;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 + 8 * ((29267 * (HIDWORD(a51) != -542985225)) ^ (a9 - 25574))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_10009F33C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X6>, uint64_t a3@<X7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,__int16 a51,unsigned __int8 a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,__int16 a60,unsigned __int8 a61)
{
  uint64_t v61;
  unsigned int v62;
  unsigned int v63;

  v62 = ((2 * (a52 ^ 0xFFFFFFF7)) & 0xBE) + (a52 ^ 0xD8DFEB88);
  v63 = (4
       * ((((a4 - 1255389583) & 0x4AD3BC9B) + v62 + 656399368) * (HIDWORD(a46) + 542985225)
        + (~(2 * (((a4 - 1255389583) & 0x4AD3BC9B) + v62 + 656399368) * (HIDWORD(a46) + 542985225)) | 0x112ADD17))
       - 576043564) ^ 0xDDAA45D0;
  LODWORD(a43) = v62 - 1583201033;
  LODWORD(a37) = v62 == -656413857;
  HIBYTE(a50) = v62 == -656413857;
  LODWORD(a42) = (v63 - ((2 * v63) & 0x590DD7F0) + 747039738) ^ 0x2C86EBFA;
  LOBYTE(STACK[0x324]) = 106;
  LODWORD(a35) = HIDWORD(a42);
  return ((uint64_t (*)(BOOL, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 + 8 * a4) - 4))(v62 - 1583201033 < 0x7A823056, 1113347811, a1 - 0x136A446F89C47411, a42, 707695699, *(_QWORD *)(a2 + 360), a61, a3, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a1 - 0x136A446F89C4741ALL,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a1 - 0x136A446F89C47411,
           a1 - 0x136A446F89C4741ALL,
           a49,
           a50);
}

uint64_t sub_10009F4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BOOL4 a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,unsigned int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  int v46;
  uint64_t v47;
  unsigned int v48;
  int v49;
  BOOL v50;

  v48 = ((v46 + 21883) | 0xC0) + a46 + 951752446;
  v49 = a7 ^ (v48 < 0x62E9B717);
  v50 = v48 < a39;
  if (v49)
    v50 = a7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v47 + 8 * ((22612 * (((v46 + 13) ^ v50) & 1)) ^ v46)) - 4))();
}

uint64_t sub_10009F54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  int v47;
  uint64_t v48;

  HIDWORD(a45) = v47;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * (int)(((((v46 ^ 0x3ACD) + 13156) ^ (23 * (v46 ^ 0x3ACD))) * a41) ^ v46)))(a1, a2, a3, a4, a41, a6, a7, a36, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_10009F588()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * (v0 + 36962)))();
}

uint64_t sub_10009F5DC@<X0>(_BOOL8 a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, _DWORD *a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unsigned int a47)
{
  int v47;
  unsigned int v48;
  int v49;
  int v50;
  unsigned __int8 v51;
  int v52;
  int v53;
  int v54;
  unsigned __int8 v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  _QWORD *v62;
  int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  _BOOL4 v71;
  uint64_t (*v72)(_BOOL8, uint64_t, unsigned __int8 *, uint64_t, _QWORD, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v62 = (_QWORD *)(v59 + 32 * (v58 + v57));
  v63 = ((v55 | ((v55 < ((((v56 + a8) & v51) - 34) & 0xFEu)) << 8)) - 106)
      * ((*a3 | ((*a3 < 0x3Eu) << 8)) - 62);
  v64 = ((v63 ^ v52) + v47 + (v50 & (2 * v63))) % a4;
  *v62 = a7 + ((((v64 + v54 - (v53 & (2 * v64))) << 10) - 4096) ^ v49);
  *a5 += 1024;
  v65 = ((*a3 | ((*a3 < 0x3Eu) << 8)) - 62)
      * (((v55 + 1) | (((v55 + 1) < 0x6Au) << 8)) - 106);
  v66 = ((v65 ^ v52) + v47 + (v50 & (2 * v65))) % a4;
  v62[1] = a7 + ((((v66 + v54 - (v53 & (2 * v66))) << 10) - 4096) ^ v49);
  *a5 += 1024;
  v67 = ((*a3 | ((*a3 < 0x3Eu) << 8)) - 62)
      * (((v55 + 2) | (((v55 + 2) < 0x6Au) << 8)) - 106);
  v68 = ((v67 ^ v52) + v47 + (v50 & (2 * v67))) % a4;
  v62[2] = a7 + ((((v68 + v54 - (v53 & (2 * v68))) << 10) - 4096) ^ v49);
  *a5 += 1024;
  v69 = ((*a3 | ((*a3 < 0x3Eu) << 8)) - 62)
      * (((v55 + 3) | (((v55 + 3) < 0x6Au) << 8)) - 106);
  v70 = ((v69 ^ v52) + v47 + (v50 & (2 * v69))) % a4;
  v62[3] = a7 + ((((v70 + v54 - (v53 & (2 * v70))) << 10) - 4096) ^ v49);
  *a5 += 1024;
  v71 = v58 + (int)a2 < a47;
  if (a1 != v58 + (int)a2 < v48)
    v71 = a1;
  v72 = *(uint64_t (**)(_BOOL8, uint64_t, unsigned __int8 *, uint64_t, _QWORD, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * ((v71 * v60) ^ v56));
  return v72(a1, a2, a3, a4, v72, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_10009F800()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((v2 + v0) ^ (41910 * (v1 == 64)))))();
}

uint64_t sub_10009F820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * v37))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_10009F844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unsigned int a46)
{
  int v46;
  uint64_t v47;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v47 + 8 * (v46 - 808435715))
                                                                             - 4))(a1, a2, a3, a4, a46);
}

uint64_t sub_10009F860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  int v44;
  int v45;

  v43 = (v38 - 29973) | 0x2009;
  *(_DWORD *)(v40 - 0x3F2809B2BE643872) = a9;
  *(_DWORD *)(v40 - 0x3F2809B2BE64385ALL) = v41;
  v44 = ((v43 + 808428954) ^ (v39 + 9)) * v41 - ((30 * v41 + 272072562) & 0x39F531CE) - 451520352;
  *(_DWORD *)(v40 - 0x3F2809B2BE643856) = v44;
  v45 = ((2 * (v44 ^ 0x1CFA98E7) * (v41 - 635176009)) & 0x7D67D9EA)
      + (((v44 ^ 0x1CFA98E7) * (v41 - 635176009)) ^ 0x3EB3ECF5);
  *(_DWORD *)(v40 - 0x3F2809B2BE64384ELL) = v45 + 419835958;
  *(_DWORD *)(v40 - 0x3F2809B2BE643852) = v45 + 1029835098;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * v43) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_10009F988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,unsigned int a46)
{
  int v46;
  uint64_t v47;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v47 + 8 * (v46 - 808428935))
                                                                             - 12))(a1, a2, a3, a4, a46);
}

uint64_t sub_10009F9A8()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x344]) = 2134608442;
  return (*(uint64_t (**)(void))(v1 + 8 * ((33634 * ((v0 + 1697713317) < 0x872382BE)) ^ (v0 - 808411158))))();
}

uint64_t sub_10009F9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 + 8 * (v4 - 808435715))
                                                                             - 4))(a1, a2, a3, a4, LODWORD(STACK[0x344]));
}

uint64_t sub_10009FA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a8 - 808437458)) - 8))();
}

uint64_t sub_10009FA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  int v63;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))(*(_QWORD *)(a8 + 8 * v63)
                                                                                               - ((v63 - 21099) ^ 0x3950)))(a1, a2, a3, a4, a5, a6, &a63);
}

uint64_t sub_10009FA70@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,char a44)
{
  unsigned int v44;
  uint64_t v45;

  return ((uint64_t (*)(void))(*(_QWORD *)(v45
                                        + 8
                                        * ((47 * ((a44 & 4) == ((v44 - 13361) ^ 0xCFD06692) + v44 - a1 - 1201)) ^ v44))
                            - 4))();
}

uint64_t sub_10009FABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *(_QWORD *)(a4 + 8);
  *(_QWORD *)(a8 + 256) = a4 + 8;
  *(_QWORD *)(a8 + 272) = v10;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((v8 + 95) ^ 0xD ^ (v10 == 0x7C0ADF1C3D95FE54)) & 1)
                                * ((v8 - 1668851873) & 0x63787BDB ^ 0x2C5F)) ^ v8)))();
}

uint64_t sub_10009FB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = a8[34];
  a8[36] = v10 - 0x7C0ADF1C3D95FE54;
  v11 = (*(_DWORD *)(a4 + 20) + 1778866085);
  a8[18] = v11;
  a8[62] = v11;
  LODWORD(v11) = v11 == ((v8 + 11436) ^ 0xFFFFDB7B) + v8 + 18729;
  a8[73] = v10;
  return (*(uint64_t (**)(void))(v9 + 8 * (((2 * (_DWORD)v11) | (32 * (_DWORD)v11)) ^ v8)))();
}

uint64_t sub_10009FBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  int v8;
  uint64_t v9;

  a8[71] = a8[18];
  a8[72] = ((unint64_t)&STACK[0x3A0] ^ 0x7BEAFBEB3FF3F1D6)
         - 0x1128C0C30101A000
         + ((2 * (_QWORD)&STACK[0x3A0]) & 0xF7D5F7D67FE7E3A0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * v8) - 4))();
}

uint64_t sub_10009FC10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v16 = v11 - 1;
  *(_QWORD *)(a8 + 496) = v16;
  *(_BYTE *)(v12 + v16) = (v10 ^ (v9 + 42) ^ v13) * (v9 + 59);
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (((*(_QWORD *)(a8 + 496) == 0) * v14) ^ v8)) - 4))();
}

uint64_t sub_10009FC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(a8 + 576) = v8;
  *(_QWORD *)(a8 + 568) = v10;
  *(_QWORD *)(a8 + 584) = **(_QWORD **)(a8 + 256);
  return (*(uint64_t (**)(void))(v11 + 8 * v9))();
}

uint64_t sub_10009FC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  unint64_t v45;

  v44 = sub_100DD0758();
  v45 = *(_QWORD *)(v42 + 32);
  STACK[0x2D8] = v45;
  return (*(uint64_t (**)(uint64_t))(a40 + 8 * (((v45 == 0) * ((v41 - v40 + 1684) ^ (v43 - 201))) ^ v41)))(v44);
}

uint64_t sub_10009FCCC()
{
  int v0;
  uint64_t v1;

  __clrex();
  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_10009FCEC()
{
  int v0;
  uint64_t v1;
  unsigned int *v2;
  unsigned int v3;

  v2 = (unsigned int *)(*(_QWORD *)(v1 + 8 * (v0 ^ 0x4C57)) - 1679836883);
  while (1)
  {
    v3 = __ldaxr(v2);
    if (v3 != 23958)
      break;
    if (!__stlxr(0xA94EFu, v2))
      JUMPOUT(0x10009FCD4);
  }
  return sub_10009FCCC();
}

uint64_t sub_10009FD3C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * ((v1 + v3 + 1480) ^ (v0 < v2 + 4))))();
}

uint64_t sub_10009FD5C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v3 + v0) ^ (942 * (v1 != v2)))) - 12))();
}

uint64_t sub_10009FD80()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v1 == (((v0 + 271168696) | 0x20060800) ^ 0x5ECC1F21)) * (v0 ^ 0x87DF)) ^ v0))
                            - 12))();
}

uint64_t sub_10009FDC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  unsigned int v43;

  *(_DWORD *)(v39 - 0x3F2809B2BE643872) = a9 + 2;
  *(_DWORD *)(v39 - 0x3F2809B2BE64385ALL) = v40;
  v42 = 10 * v40 - ((20 * v40 + 181381708) & 0x39F531CC) - 1570607603;
  *(_DWORD *)(v39 - 0x3F2809B2BE643856) = v42;
  v43 = (((v42 ^ 0x1CFA98E7) * (v40 - 635176009)) ^ (((v38 ^ 0x20A) + 271360129) | 0x20031E41) ^ 0x4C906F9C)
      + ((2 * (v42 ^ 0x1CFA98E7) * (v40 - 635176009)) & 0xF97F62FC);
  *(_DWORD *)(v39 - 0x3F2809B2BE64384ELL) = v43 - 621122644;
  *(_DWORD *)(v39 - 0x3F2809B2BE643852) = v43 - 11123504;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 + 8 * (v38 ^ 0x20A)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_10009FEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  int v63;
  int v64;

  LODWORD(a50) = v64;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 + 8 * v63) - (v63 - 21929) + 14676))(a1, a2, a3, a4, a5, a6, &a63, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_10009FF2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  int v63;
  uint64_t v64;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))(*(_QWORD *)(v64 + 8 * v63)
                                                                                               - ((2 * v63) ^ 0x11782)))(a1, a2, a3, a4, a5, a6, &a63);
}

uint64_t sub_10009FF68()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v0 + v3 + 150) ^ (240 * (v1 == v2)))) - 12))();
}

uint64_t sub_10009FF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  int v38;
  uint64_t v39;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * (v38 + v37)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_10009FFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  int v38;
  uint64_t v39;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * (v38 + v37)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_10009FFC0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  int v34;
  uint64_t v35;

  v34 = a1 + v33 - 1711;
  v35 = sub_100DD0758();
  return (*(uint64_t (**)(uint64_t))(a33 + 8 * v34))(v35);
}

uint64_t sub_10009FFE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  unsigned int v46;
  int v47;
  uint64_t v48;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v48
                                                                                         + 8
                                                                                         * (int)((v47 - 1188399605) ^ 0xE95A4A0E ^ (8995 * ((v47 - 1188399605) < 0x60E96282))))
                                                                             - 4))(a1, a2, a3, a4, a46 ^ v46);
}

uint64_t sub_1000A002C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,uint64_t a51,uint64_t a52)
{
  uint64_t (*v52)(_QWORD);
  int v53;
  uint64_t v54;

  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))((char *)*(&off_10112C750 + ((v53 - 4997) ^ 0x87D6))
                                                          - 1781962027))(a44, 0, 64, -1);
  v54 = v52((a50 - 1986617495));
  *(_QWORD *)(*(_QWORD *)a52 + 40) = v54;
  return (*(uint64_t (**)(void))(a40
                              + 8
                              * ((((v53 - 86 + v53 - 119) ^ (v54 == 0)) & 1 | (2
                                                                                              * (((v53 - 86 + v53 - 119) ^ (v54 == 0)) & 1))) ^ (v53 - 4997))))();
}

uint64_t sub_1000A00C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50,unsigned int a51,uint64_t a52,uint64_t a53)
{
  unsigned int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;

  v56 = ((uint64_t (*)(_QWORD, uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v55
                                                                                        + 8
                                                                                        * ((v54 | 0x78C8) ^ 0x75BC))
                                                                            - 1215688886))(*(_QWORD *)(*(_QWORD *)a53 + 40), a36 + 12, (a51 | ((unint64_t)(a51 < v53) << 32)) - 1986617495, -1);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40 + 8 * ((505 * (a50 == v53)) ^ (v54 | 0x78C8)))
                                          - (((v54 | 0x78C8u) + 1579056883) ^ 0x5E1EF9C3)))(v56);
}

uint64_t sub_1000A015C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  int v53;
  int v54;
  unint64_t v55;
  uint64_t v56;

  *(_BYTE *)(*(_QWORD *)a52 + 56) = 1;
  *(_QWORD *)(a33 - 0x2D93013B27D0E4C5) = *(_QWORD *)(v56 + 8 * (v53 ^ 0x7673)) - 990599967;
  *(_DWORD *)(a30 - 0x54FE17B063FF6653) = v54 + 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v52 + 8 * v53) - (((v53 + 102618666) | 0x5800A8C9u) ^ v55)))();
}

uint64_t sub_1000A01E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,_DWORD *a51)
{
  uint64_t v51;
  _DWORD *v52;
  unsigned int v53;

  *v52 = a46;
  *a51 = a46;
  return ((uint64_t (*)(void))(*(_QWORD *)(v51
                                        + 8
                                        * (int)((6114 * (v53 < ((v53 - 932250668) & 0xD9721FFE ^ 0xAE3EE0FC))) ^ (v53 - 1579085654)))
                            - 4))();
}

uint64_t sub_1000A025C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  unsigned int v54;
  int v55;
  uint64_t v56;

  HIDWORD(a51) = a9;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 + 8 * v55) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           __PAIR64__(v54, a5),
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_1000A02A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  int v63;
  uint64_t v64;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))(*(_QWORD *)(v64 + 8 * (((((a37 == 0xFBA23D2005A2EA1) ^ (41 * (v63 ^ 2))) & 1) * (((v63 ^ 0x8F02) + 14677) ^ 0x394A)) ^ v63))
                                                                                               - 8))(a1, a2, a3, a4, a5, a6, &a63);
}

uint64_t sub_1000A0318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  int v46;
  uint64_t v47;
  uint64_t v48;

  *(_DWORD *)(v47 - 0xFBA23D2005A2EA1) = a46;
  return ((uint64_t (*)(void))(*(_QWORD *)(v48 + 8 * v46) - ((4 * v46) ^ 0xAC78)))();
}

uint64_t sub_1000A034C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,uint64_t a28,int a29,uint64_t a30,int a31,int a32,int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a64;
  uint64_t v64;
  int v65;

  LODWORD(STACK[0x290]) = a31;
  LODWORD(STACK[0x28C]) = a27;
  LODWORD(STACK[0x288]) = a33;
  LODWORD(STACK[0x284]) = a29;
  LODWORD(STACK[0x294]) = a38;
  LODWORD(STACK[0x2CC]) = a2;
  return ((uint64_t (*)(char *))(808443631
                                         - (v65 + 808418542)
                                         + *(_QWORD *)(v64 + 8 * v65)
                                         - 16))(&a64);
}

uint64_t sub_1000A03D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;
  int v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;

  v46 = *(_QWORD *)(v44 + 8 * v42);
  v47 = *(_QWORD *)(v41 + 808);
  v48 = 879478891
      * ((((v45 - 176) | 0x1CF334526C913531) - ((v45 - 176) & 0x1CF334526C913531)) ^ 0x9B929130DCE80872);
  *(_DWORD *)(v45 - 168) = (v42 + v40) ^ v48;
  STACK[0x850] = ((v42 + 9150) ^ 0xFFFFFFFFFFFFC6A4) - v48 + v46;
  STACK[0x860] = v47;
  v49 = v43(v45 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40 + 8 * (v42 ^ 0x3E81)) - 4))(v49);
}

uint64_t sub_1000A0484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,uint64_t a28,int a29,uint64_t a30,int a31,int a32,int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,uint64_t a39,int a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a64;
  int v64;
  uint64_t v65;

  LODWORD(STACK[0x290]) = a31;
  LODWORD(STACK[0x28C]) = a27;
  LODWORD(STACK[0x288]) = a33;
  LODWORD(STACK[0x284]) = a29;
  LODWORD(STACK[0x294]) = a38;
  LODWORD(STACK[0x2CC]) = a19;
  LODWORD(STACK[0x280]) = 2134650450;
  return ((uint64_t (*)(char *))(*(_QWORD *)(v65 + 8 * ((23339 * (a40 == 381450761)) ^ (v64 + 1569))) - 12))(&a64);
}

uint64_t sub_1000A0544()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x280]) = 2134608446;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 808428567)) - 12))();
}

uint64_t sub_1000A0574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44)
{
  int v44;
  uint64_t v45;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v45
                                                                                         + 8
                                                                                         * ((16755
                                                                                           * (((v44 - 64) ^ (a44 == 33)) & 1)) ^ (v44 - 808428935)))
                                                                             - 12))(a1, a2, a3, a4, LODWORD(STACK[0x280]));
}

uint64_t sub_1000A05C4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,unint64_t a57)
{
  int v57;
  uint64_t (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BOOL4 v63;
  int v66;
  unint64_t v67;

  v66 = STACK[0x2CC];
  v67 = a1[34];
  v61 = *(_QWORD *)(v60 + 8 * v57) - 4;
  a1[213] = a1[44];
  *(_DWORD *)(v59 - 152) = 19382863 * ((((2 * (v59 - 176)) | 0x90BC99F6) - (v59 - 176) + 933344005) ^ 0xC09BC025)
                         + v57
                         - 1253357823
                         - 9;
  a1[214] = a57 + 1;
  a1[212] = v61 ^ (19382863
                 * ((((2 * (v59 - 176)) | 0xE4712AAD90BC99F6) - (v59 - 176) - 0x72389556C85E4CFBLL) ^ 0x22254265C09BC025));
  v62 = v58(v59 - 176);
  v63 = *(unsigned __int16 *)STACK[0x318] == 6981;
  STACK[0x2D0] = v67;
  STACK[0x2D8] = a57;
  LODWORD(STACK[0x284]) = 2134608401;
  LODWORD(STACK[0x288]) = v66;
  LODWORD(STACK[0x28C]) = a5;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40
                                                      + 8
                                                      * (v57 ^ 0x7F36 ^ (v63 * ((v57 - 380885477) & 0x16B3F4ED ^ 0xC4DA))))
                                          - ((v57 - 1119515048) & 0x42BA7FD5 ^ 0x23DDLL)))(v62);
}

uint64_t sub_1000A0714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  unsigned int v46;
  uint64_t v47;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * v46))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1000A0744()
{
  uint64_t v0;
  uint64_t v1;
  _WORD *v2;
  char v3;
  __int16 v4;
  int v5;
  char v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  _BOOL4 v13;

  *(_BYTE *)((v6 - 40) + v0 + 1) ^= (v6 + 121) ^ *(_BYTE *)(v1
                                                                                            + (v6 - 40)
                                                                                            + 46) ^ v3;
  v11 = (unsigned __int16)(*v2 + ((v9 + 3807) ^ v4));
  v13 = v11 > v7 && v11 <= v5 + (v6 - 39);
  return (*(uint64_t (**)(void))(v10 + 8 * ((v13 * v8) ^ v9)))();
}

uint64_t sub_1000A07AC@<X0>(uint64_t a1@<X5>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56)
{
  uint64_t v56;

  *(_QWORD *)(a27 - 0x416F041D6521E819) = a52;
  *(_DWORD *)(a24 - 0x5040F6A30D8B629FLL) = (unsigned __int16)(**(_WORD **)(a1 + 360) - 6961) + 2134650451;
  *(_QWORD *)(a1 + 288) = a46;
  *(_QWORD *)(a1 + 296) = a52;
  LODWORD(STACK[0x284]) = a56;
  LODWORD(STACK[0x288]) = a45;
  LODWORD(STACK[0x28C]) = a44;
  return ((uint64_t (*)(void))(*(_QWORD *)(v56 + 8 * a2) - (a2 - 7098) + 9161))();
}

uint64_t sub_1000A083C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v43;
  uint64_t v44;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v44 + 8 * ((29631 * (((a23 == 0x5DAA56810BA17E14) ^ v43) & 1)) ^ v43)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           *(_QWORD *)(a6 + 288));
}

uint64_t sub_1000A08B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;

  *(_DWORD *)(v48 - 0x5DAA56810BA17E14) = a47;
  return ((uint64_t (*)(void))(*(_QWORD *)(v50 + 8 * (v49 + v47 - 2185)) - 12))();
}

uint64_t sub_1000A08E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47)
{
  int v47;
  uint64_t v48;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * ((41902 * (a47 - 2066711849 >= 0)) ^ (v47 - 808428274))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1000A0928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,unsigned int a46)
{
  uint64_t (*v46)(_QWORD);
  int v47;
  int v48;
  uint64_t v49;

  v49 = v46(a46);
  return (*(uint64_t (**)(uint64_t))(a40 + 8 * (v47 + v48 + 1862)))(v49);
}

uint64_t sub_1000A0948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  int v45;
  uint64_t v46;

  return ((uint64_t (*)(void))(*(_QWORD *)(v46 + 8 * ((12833 * (a44 != 0)) ^ (v44 + v45 + 3048))) - 12))();
}

uint64_t sub_1000A097C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;

  v41 = sub_100DD0758();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40 + 8 * v40) - 12))(v41);
}

uint64_t sub_1000A0998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  int v53;
  uint64_t v54;
  _BOOL4 v56;

  v56 = a46 == 2134650450 || a52 == 0;
  LODWORD(STACK[0x290]) = a46;
  return (*(uint64_t (**)(void))(v54 + 8 * ((14 * v56) ^ (v52 + v53 - 2741))))();
}

uint64_t sub_1000A09D8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  int v39;
  uint64_t v40;

  v39 = a1 - 2735;
  v40 = sub_100DD0758();
  LODWORD(STACK[0x290]) = a39;
  return (*(uint64_t (**)(uint64_t))(a33 + 8 * v39))(v40);
}

uint64_t sub_1000A09FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;

  v45 = STACK[0x290];
  v46 = v40;
  v47 = v40 - 808438070;
  v48 = *(_QWORD *)(v44 + 8 * v47);
  v49 = 879478891
      * ((((v43 - 176) | 0x144B466890411B46) - (v43 - 176) + ((v43 - 176) & 0xEBB4B9976FBEE4B8)) ^ 0x932AE30A20382605);
  *(_DWORD *)(v43 - 168) = (v46 - 281261693) ^ v49;
  *(_QWORD *)(a6 + 1696) = v48 - v49 - 8;
  *(_QWORD *)(a6 + 1712) = v42;
  v50 = v41(v43 - 176);
  LODWORD(STACK[0x294]) = v45;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40 + 8 * (v47 | 0x2012)) - 4))(v50);
}

uint64_t sub_1000A0AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 + 8 * (v4 - 808416926))
                                                                             - 8))(a1, a2, a3, a4, LODWORD(STACK[0x294]));
}

uint64_t sub_1000A0AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  STACK[0x580] = (((v47 & 0x5A19B7D7) - 1744680681) & 0x67FDB5BF ^ 0xFFFFFFFFFFFFEA66)
               + *(_QWORD *)(v46 + 8 * (v47 & 0x5A19B7D7));
  LODWORD(STACK[0x588]) = a46 - 1001780666;
  STACK[0x858] = (unint64_t)&STACK[0x580];
  *(_DWORD *)(v49 - 176) = (v47 & 0x5A19B7D7)
                         - 263575687
                         * ((((v49 - 176) | 0x3BD6A9CE) - (v49 - 176) + ((v49 - 176) & 0xC4295630)) ^ 0xA3F66988)
                         - 639493098;
  v50 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v48 + 8 * ((v47 & 0x5A19B7D7) - 2867)) - 361318118))(v49 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40 + 8 * (v47 & 0x5A19B7D7 ^ 0xB50u)) - 4))(v50);
}

uint64_t sub_1000A0BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;

  v48 = *(_QWORD *)(v41 + 8 * v45);
  v49 = ((v47 - 176) ^ 0x8761A562B0793D43) * v43;
  *(_QWORD *)(v42 + 1712) = *(_QWORD *)(v44 + 808);
  *(_QWORD *)(v42 + 1696) = v48 - v49 - 8;
  *(_DWORD *)(v47 - 168) = (v45 + v40) ^ v49;
  v50 = v46(v47 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40
                                                      + 8
                                                      * ((((2 * v45) ^ 0x1260) + 1550) ^ v45 ^ (491
                                                                                              * ((v45 ^ 0x206C4521u) < 0xAD0B8E40))))
                                          - 4))(v50);
}

uint64_t sub_1000A0C68()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 8 * (v0 ^ 0x2132)) - 1624708666) == ((v0 - 119) ^ 0xE2)
    && *(_DWORD *)(*(_QWORD *)(v1 + 8 * (v0 ^ 0x228E)) - 1652908582) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((46254 * v4) ^ v0)) - 12))();
}

uint64_t sub_1000A0CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v11 = a8[37];
  v12 = *(_QWORD *)(v11 - 16);
  v11 -= 16;
  a8[38] = v11 - 8;
  a8[39] = v11 + 0x4419796044B4DC32;
  a8[40] = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * ((47371
                                          * (v9 + (v8 ^ 0x2C1Du) - 71 + 0x358C01A587FF7213 + v12 > (uint64_t)((577 * (v8 ^ 0x2C1Du)) ^ 0xFFFFFFFFFFFF5FF8))) ^ v8))
                            - 12))();
}

uint64_t sub_1000A0D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;

  *(_QWORD *)(a8 + 592) = 4;
  *(_QWORD *)(a8 + 600) = ((unint64_t)&STACK[0x3A8] ^ 0xE5EEEFFFF7C3FDFALL)
                        + 0x1EFFBF7E4DFEEFB6
                        + ((2 * (_QWORD)&STACK[0x3A8]) & 0xCBDDDFFFEF87FBF0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * v8) - 8))();
}

uint64_t sub_1000A0DD4()
{
  char v0;
  int v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(v5 + v4) = ((v3 + v0) ^ v2) * (v3 + 97);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v4 == 0) * v6) ^ v1)) - 8))();
}

uint64_t sub_1000A0E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(a8 + 600) = v9;
  *(_QWORD *)(a8 + 592) = v10 + 1;
  *(_QWORD *)(a8 + 504) = 0;
  v13 = **(_QWORD **)(a8 + 320);
  *(_QWORD *)(a8 + 152) = v13;
  return (*(uint64_t (**)(void))(v12
                              + 8 * ((41155 * (v13 != ((v11 + v8 - 2907) ^ 0x302F568Bu) + 0x4A73FE5A47D0268ALL)) ^ v8)))();
}

uint64_t sub_1000A0E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  int v43;
  _BOOL4 v45;
  int v47;

  v41 = *(_QWORD *)(a8 + 152);
  v42 = (LOBYTE(STACK[0x397]) ^ 0x39u) % (1204858610 - (int)v41);
  v47 = ((2 * v42) & 0x1E2) + (v42 ^ (v38 - 805386359));
  if (v47 + (int)v41 - 399506921 >= ((223 * (v38 ^ 0x8803)) ^ 0x5DCEu))
    v43 = -171347685;
  else
    v43 = 228159236 - (v47 + v41);
  v45 = v41 != v39 - 25 && v43 != -171347935;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * ((31 * v45) ^ v38)) - 4))(4123619361, 4123619611, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1000A0F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  int v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  _BOOL4 v67;
  uint64_t v68;
  _BOOL4 v69;

  v64 = (HIDWORD(a46) + 1909456288) | ((unint64_t)(HIDWORD(a46) + 1909456288 < ((v63 - 23266) ^ 0x1F93u) + 1104092028) << 32);
  v65 = v64 + (a47 + 171347935) - 1104104849;
  STACK[0x3C8] = v65;
  v66 = ((v63 - 23266) ^ 0x302FF365u) + 1206655844 + v65;
  v64 += 910994614;
  STACK[0x250] = v65;
  STACK[0x258] = v64;
  v67 = v65 > 0xFFFFFFFF87E405B8;
  v68 = (v64 < 0x781BFA47) ^ v67;
  v69 = v66 > v64;
  if ((_DWORD)v68)
    v69 = v67;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a40 + 8 * ((23799 * v69) ^ (v63 - 23266))))(v66, v68, a3, a4, a5, a6, a7, &a63, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1000A1018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  int v8;
  uint64_t v9;

  a8[78] = a8[20];
  a8[79] = ((unint64_t)&STACK[0x3C8] ^ 0x5BBB717FF73B5DC2)
         - 0x1083402621011982
         + ((2 * (_QWORD)&STACK[0x3C8]) & 0xB776E2FFEE76BB80);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * v8) - 8))();
}

uint64_t sub_1000A109C(uint64_t a1, int a2, char a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _BOOL4 v18;

  v16 = a1 - 1;
  *(_QWORD *)(a8 + 536) = v16;
  *(_BYTE *)(v13 + v16) = (v14 ^ a3 ^ (v11 - 64)) * (v11 - 47);
  v17 = *(_QWORD *)(a8 + 536);
  v18 = v17 + v9 > v12;
  if (a2 != v17 > v8)
    v18 = v17 > v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((!v18 * a4) ^ v10)) - 8))();
}

uint64_t sub_1000A10FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  *(_QWORD *)(a8 + 632) = v9;
  *(_QWORD *)(a8 + 624) = a1;
  return (*(uint64_t (**)(void))(v11 + 8 * (v8 + v10 + 300)))();
}

uint64_t sub_1000A1114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;

  v41 = (v40 - 1060) | 0x406u;
  STACK[0x410] = 1;
  STACK[0x418] = ((unint64_t)&STACK[0x3B0] ^ 0x7FF7D2E5AFFA3EE9)
               - 0x4523020001C01CC9
               + ((v41 - 0x105A34A00BDF47) & (2 * (_QWORD)&STACK[0x3B0]));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40 + 8 * v40) - 8))((v41 - 1320755628) ^ 0xB1473B6ALL);
}

uint64_t sub_1000A11A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v14 = v11 - 1;
  *(_QWORD *)(a8 + 512) = v14;
  *(_BYTE *)(v10 + v14) = ((v9 - 32) ^ v12) * (v9 - 15);
  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * (((2 * (*(_QWORD *)(a8 + 512) != 0)) | (32 * (*(_QWORD *)(a8 + 512) != 0))) ^ v8))
                            - 8))();
}

uint64_t sub_1000A11EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(a8 + 616) = v9;
  *(_QWORD *)(a8 + 608) = v10;
  return (*(uint64_t (**)(void))(v11 + 8 * (int)((16090 * (v8 != 1386178814)) ^ ((v8 ^ 0xFFFFEC9A) + v8))))();
}

uint64_t sub_1000A1230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = **(_QWORD **)(a8 + 320);
  *(_QWORD *)(a8 + 176) = v13;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12
                                                                                 + 8
                                                                                 * (((*(_QWORD *)(*(_QWORD *)(a8 + 304)
                                                                                                + v9
                                                                                                - v13) == v9)
                                                                                   * ((v10 - 808436151) ^ 0x4CAC)) | (v10 + v8)))
                                                                     - 12))(a1, a2, a3, v11);
}

uint64_t sub_1000A1288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = *(_QWORD *)(v10 + 8 * (v9 - 6497));
  *(_QWORD *)(v12 - 1923722775) += *(_QWORD *)(a8 + 176) - 0x4A73FE5A47D0AF0ALL;
  v13 = **(_QWORD **)(a8 + 304);
  *(_QWORD *)(a8 + 184) = v13;
  return (*(uint64_t (**)(void))(v11 + 8 * ((120 * (((v9 - 1) ^ (v13 == v8)) & 1)) ^ v9)))();
}

uint64_t sub_1000A1300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;

  v45 = STACK[0x268];
  v46 = STACK[0x2E0] + v41 - STACK[0x268];
  STACK[0x2F8] = v46;
  v47 = *(_QWORD *)(v46 + 8);
  STACK[0x300] = v46 + 8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v40
                                                                     - (v43 + v42 - 2607)
                                                                     + *(_QWORD *)(a40
                                                                                 + 8
                                                                                 * (((v47 == v45)
                                                                                   * ((v42 + 4279) ^ 0x60D4)) ^ v42))
                                                                     - 24))(a1, a2, a3, v44);
}

uint64_t sub_1000A1368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *(_QWORD *)(a8 + 328);
  **(_QWORD **)(a8 + 336) = ((v8 - 3658) ^ 0x4A73FE5A47D081CDLL)
                          - **(_QWORD **)(a8 + 320)
                          + *(_QWORD *)(a8 + 184);
  *(_QWORD *)(a8 + 640) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * v8) - 12))();
}

uint64_t sub_1000A13C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  unint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))(*(_QWORD *)(a40 + 8 * ((59 * (*(_QWORD *)(*(_QWORD *)(v65 - 1923722735) + 24) == v65 - 1923722767)) ^ v64)) - (v64 ^ 0x302FF2B9u ^ v63)))(a1, a2, a3, v66, a5, a6, a7, &a63);
}

uint64_t sub_1000A141C()
{
  unint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((49133 * (*(_QWORD *)(*(_QWORD *)(v1 + 72) + 32) == v3)) ^ v2))
                            - ((((v2 - 1209382107) & 0xF9F5FEBC) + 2119133351) ^ v0)))();
}

uint64_t sub_1000A146C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v13 = *(_QWORD **)(a8 + 296);
  v12 = *(_QWORD *)(a8 + 304);
  *v13 = v9;
  v13[1] = *(_QWORD *)(v8 + 80);
  *(_QWORD *)(v8 + 80) = v12;
  *(_QWORD *)(v13[1] + 24) = v12;
  **(_QWORD **)(a8 + 320) = (v10 ^ 0xB1E058FB) - **(_QWORD **)(a8 + 320) - 0x6B18034B705ED0B3;
  *(_QWORD *)(a8 + 640) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (int)((18220 * (v10 < 0x3DABB488)) ^ (v10 + 1310705365))) - 12))();
}

uint64_t sub_1000A14F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  uint64_t v63;
  int v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;

  v66 = STACK[0x430];
  STACK[0x308] = STACK[0x430];
  STACK[0x310] = v65 - 0x4419796044B4DC32;
  v67 = *(_QWORD *)(v65 - 0x4419796044B4DC32);
  v68 = v66 + v67 + v63;
  STACK[0x318] = v68;
  v69 = *(_QWORD *)(v68 + 8);
  STACK[0x270] = v69;
  STACK[0x438] = v67;
  STACK[0x440] = v69;
  STACK[0x448] = v67 + v63;
  return ((uint64_t (*)(unint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a40 + 8 * ((24643 * (v69 + ((v64 - 621) ^ 0xB58C01A5B82F7CAFLL) < 0x7FFFFFFFFFFFFFFFLL)) ^ v64)) - ((v64 - 621) ^ 0x2C56)))(v69, 0x7FFFFFFFFFFFFFFFLL, &a63, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1000A1588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a40
                                                                                 + 8
                                                                                 * ((6699
                                                                                   * (*(_QWORD *)(STACK[0x318]
                                                                                                + (((v40 + 124360) | 0x302DCCC1u) ^ 0xB58C01A588008E15)
                                                                                                + STACK[0x270]) == STACK[0x270])) ^ v40))
                                                                     - 12))(a1, a2, a3, v41);
}

uint64_t sub_1000A15F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 - (v52 - v50) + *(_QWORD *)(v53 + 8 * ((27394 * (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a8 + 360) + 32) + 24) == *(_QWORD *)(a8 + 360))) ^ v52)) - 24))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_1000A1634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  int v45;
  uint64_t v46;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 + 8 * ((43722 * (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a8 + 360) + 24) + 32) == *(_QWORD *)(a8 + 360))) ^ v44)) - (((v44 + 621) + 808431656) ^ (v45 + v44 - 2607))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_1000A1684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,_QWORD *a56,_QWORD *a57,_QWORD *a58)
{
  uint64_t v58;
  int v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  *a58 = a52;
  *(_QWORD *)(*(_QWORD *)a51 + 32) = *a57;
  v62 = a8[43];
  v61 = (_QWORD *)a8[44];
  v63 = *v61 + *a56;
  v64 = v63 + v58;
  *v61 = v63 + v58;
  v63 += 0x6B18034B705EA1ECLL;
  v65 = *(_QWORD *)(v62 + v63 + 8);
  a8[81] = v64;
  a8[82] = v65;
  a8[83] = v63;
  return ((uint64_t (*)(void))(*(_QWORD *)(v60 + 8 * v59) - ((v59 - 629) | 8u) + 11342))();
}

uint64_t sub_1000A1708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  int v41;
  uint64_t v42;

  STACK[0x278] = STACK[0x448];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a40
                                                                                 + 8
                                                                                 * ((25113
                                                                                   * ((uint64_t)(STACK[0x440]
                                                                                              + 0x358C01A5B82F50F6) > (uint64_t)((v41 + v40 - 2607) ^ 0xFFFFFFFFCFD0211CLL))) ^ v40))
                                                                     - 12))(a1, a2, a3, v42);
}

uint64_t sub_1000A1778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;

  v57 = (uint64_t *)a8[44];
  *(_QWORD *)(a8[43] + a8[25]) = a53;
  v59 = *v57;
  v60 = (v59 + v54 + (v59 + v54 < 0 ? 3uLL : 0)) >> 2;
  v58 = *((unsigned __int8 *)&STACK[0x394] + (STACK[0x394] & 3 ^ 1)) ^ 0x39u;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 + 8 * ((42874 * (v59 - ((v58 % v60 + 43) & ((v53 + ((v55 + 1226020769) & 0xB6ECBFDC) + 663) ^ ((v55 + 2138215) | 0x300F1222))) - 1204858659 < 0x7FFFFFFF)) ^ v55)) - 12))(v58, v59, v58 / v60, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000A184C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46)
{
  int v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  unsigned int v50;
  _BOOL4 v51;

  v50 = (*(unsigned __int8 *)(v47 + (STACK[0x396] & 3 ^ 1)) ^ v48) % (a46 + ((v46 - 23752) ^ 0xFFFFD8F8));
  v51 = (v50 ^ 0xFB2BFFBC) + 2147465200 + ((250 * (v46 ^ 0x83F0) - 9624) & (2 * v50)) == 2066462636;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * ((2 * v51) | (32 * v51) | v46)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1000A18E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;

  STACK[0x450] = STACK[0x308] + a48 + 24;
  STACK[0x458] = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a40 + 8 * v48) - ((v48 - 11098913) & 0x5FFBF7FB) + 1599259615))();
}

uint64_t sub_1000A1934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t (*a17)(uint64_t, uint64_t), uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,unint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  unsigned int v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v64 = a17(a36, 272);
  v65 = ((2 * v64) & 0xF7FFEFF6) + (v64 ^ 0xFBFFF7FB);
  STACK[0x2D0] = 0;
  STACK[0x2D8] = a57;
  LODWORD(a41) = 2134608340;
  LODWORD(STACK[0x284]) = 2134608340;
  LODWORD(STACK[0x288]) = 2134650450;
  LODWORD(STACK[0x28C]) = v65 + 2133822766;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a40 + 8 * ((5298 * (v65 + 67110917 > (int)(((v63 + 1786317126) & 0x9586AFF5) - 9170))) ^ v63)) - 12))(v64, v66, v67, v68, v69, &a63, v70, v71, 0, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_1000A19FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(uint64_t), uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,unint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62,uint64_t a63)
{
  char a64;
  int v64;
  unsigned int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;

  v74 = a19(512);
  STACK[0x2D0] = 0;
  STACK[0x2D8] = a57;
  LODWORD(STACK[0x284]) = v66;
  LODWORD(STACK[0x288]) = v64;
  LODWORD(STACK[0x28C]) = a62;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a40 + 8 * ((50 * (((v74 == 0) ^ (v65 + 60)) & 1)) ^ v65)) - (v65 ^ 0x6A99)))(v74, v67, v68, v69, v70, &a64, v71, v72, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_1000A1A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  unsigned int v34;
  uint64_t v35;

  LODWORD(STACK[0x2BC]) = v33;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 + 8 * v34) - (v34 ^ 0x1192) + 39053))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_1000A1AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,unsigned int a42)
{
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v44 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t))((char *)*(&off_10112C750 + (v43 ^ 0x912C)) - 1651636967))(a42, v42, 512);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a40 + 8 * ((46 * ((uint64_t)(((2 * v44) & 0xFFFBEDCC775BEAEALL) + (v44 ^ 0x7FFDF6E63BADF575) - 0x7FFDF6E63BADF575) >= 0)) ^ v43)) - 8))(v44, v45, v46, v47, v48, v49, v50, v51, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000A1B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;

  return ((uint64_t (*)(void))(*(_QWORD *)(a40 + 8 * ((100 * (a48 != 0x24B0F6E63B0C9570)) ^ v48))
                            - (((v48 + 748461780) & 0xD362F73E)
                             - 1241593040)
                            + 3053379930))();
}

uint64_t sub_1000A1BF4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;

  v46 = 1167911989 * (((v44 | 0x72FFAF946CF07E16) - (v44 & 0x72FFAF946CF07E16)) ^ 0x2F7DA60B425AA185);
  STACK[0x868] = (*(_QWORD *)(a33 + 8 * v42) - 4) ^ v46;
  STACK[0x858] = v43;
  STACK[0x850] = v41;
  *(_DWORD *)(v45 - 160) = (((a1 - 1001256309) ^ 0x5ECE7FFB) - 1149764488 + ((2 * (a1 - 1001256309)) & 0xBD9CFFF6)) ^ v46;
  *(_DWORD *)(v45 - 144) = 1897072881 - v46 + v42 - 156;
  v47 = a20(v45 - 176);
  v48 = (v42 + 990675258) | ((unint64_t)((((v42 ^ 0x8EAF) - 1241626419) ^ 0x914E01D6)
                                                            + v42) << 32);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a33
                                                      + 8
                                                      * ((2344
                                                        * ((((a41 - v48) | (v48 - a41)) & 0x8000000000000000) == 0)) ^ ((int)v42 + 27117)))
                                          - 12))(v47);
}

uint64_t sub_1000A1D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,unint64_t a39,uint64_t a40,int a41)
{
  int v41;
  int v42;
  unsigned int v43;
  unint64_t v44;
  int v45;

  STACK[0x2D0] = v44;
  STACK[0x2D8] = a39;
  LODWORD(STACK[0x284]) = a41;
  LODWORD(STACK[0x288]) = v45;
  LODWORD(STACK[0x28C]) = v42;
  STACK[0x2C0] = v44;
  LODWORD(STACK[0x2CC]) = v41;
  LODWORD(STACK[0x280]) = v42;
  return ((uint64_t (*)(void))(*(_QWORD *)(a40
                                        + 8
                                        * (int)(v43 ^ 0xB5FEF6A2 ^ (11528 * (v43 > ((v43 + 2050030973) ^ 0xB90F0AFD)))))
                            - 12))();
}

uint64_t sub_1000A1D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,unsigned int a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v49;
  int v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;

  v52 = (a46 | ((unint64_t)(a46 < ((v50 + 1599249627) ^ 0x24797447u)) << 32)) - 2066462636;
  v53 = STACK[0x308] + a49 + 24;
  STACK[0x398] = v52;
  STACK[0x450] = v53;
  STACK[0x458] = v52;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a40
                                                                                 + 8
                                                                                 * ((2890
                                                                                   * (v52 == (((v50 + 808393521) | 0x9CA2u) ^ (unint64_t)(v49 - 12)))) ^ v50))
                                                                     - 12))(a1, a2, a3, v51);
}

uint64_t sub_1000A1E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v38 = (v36 - 141706780) & 0xA91FF3F8;
  a8[86] = a8[85];
  v39 = *(_QWORD *)(v37 + 8 * (v36 ^ 0x5F52B20A ^ (37422 * (v36 == 1901990522))));
  a8[87] = ((2 * (_QWORD)&STACK[0x398]) & 0xA791AFE7FFAFFD60)
         + ((v38 - 0x2C37280C00287315) ^ (unint64_t)&STACK[0x398])
         + 0x7EBFBAADF3AF3DEELL;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 - 12))(1599255050, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1000A1F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v16 = v12 - 1;
  *(_QWORD *)(a8 + 488) = v16;
  *(_BYTE *)(v10 + v16) = (v8 ^ v13) * (v8 + 17);
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (((*(_QWORD *)(a8 + 488) != v11) * v14) ^ v9)) - 12))();
}

uint64_t sub_1000A1F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * (v4 + v3)) - 12))(a1, a2, a3, v5);
}

uint64_t sub_1000A1F60@<X0>(_DWORD *a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;

  *a1 = 23958;
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 + v2 - 1659)))();
}

uint64_t sub_1000A1F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;

  v10 = (v8 - 808416368);
  *(_QWORD *)(a8 + 704) = 48;
  *(_QWORD *)(a8 + 712) = ((unint64_t)&STACK[0x3C0] ^ 0xBFEFDBFF95DF67D7)
                        + ((v10 ^ 0x7FDFB7FF2BBEA5D0) & (2 * (_QWORD)&STACK[0x3C0]))
                        + 0x6ADFBEFB7A7B9DEDLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (int)v10) - 12))();
}

uint64_t sub_1000A2014@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = v4 + v2;
  *(_BYTE *)(a1 + v8) = (v3 ^ v5) * (v3 + 17);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v8 == 0) * v6) ^ a2)) - 12))();
}

uint64_t sub_1000A2044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;

  *(_QWORD *)(a8 + 528) = 0;
  v41 = sub_100DD0758();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40 + 8 * v40) - (v40 - 20232) + 12256))(v41);
}

uint64_t sub_1000A2080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned int a49,int a50,unsigned int a51)
{
  int v51;
  uint64_t v52;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD))(v52 + 8 * v51))(4360, 38363, 2625001699, 1669965597, a51, 3339931194, 4194675915, a49);
}

uint64_t sub_1000A2100()
{
  char v0;
  int v1;
  int v2;
  int v3;
  char v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6 + 8 * (((((v1 == v2) ^ ((v3 + v0) ^ v4)) & 1) * v5) ^ v3)))();
}

uint64_t sub_1000A2128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;

  return (*(uint64_t (**)(void))(v10 + 8 * (v9 ^ v8 | (((a8 - v9) | (v9 - a8)) >= 0))))();
}

uint64_t sub_1000A21B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  int v63;
  uint64_t v64;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *))(v64 + 8 * (v63 - 808422997)))(a1, a2, a3, a4, &a63);
}

uint64_t sub_1000A21D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  int v51;
  int v52;
  int v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  int v58;
  int v59;
  int v60;

  v55 = v51 - 808432061;
  v56 = ((a47 | a51)
       - ((((5 * (v51 ^ (v53 - 1035))) ^ 0x630C) - 30252) ^ a51)
       + ((((5 * (v51 ^ (v53 - 1035))) ^ 0x630C) - 30252) ^ a51 | a47)) ^ a47;
  v57 = *a17;
  v58 = *(_DWORD *)(a15 + 4 * v57);
  v59 = v56 + v56 * v58;
  if (v56)
    v60 = 0;
  else
    v60 = *(_DWORD *)(a15 + 4 * v57);
  *(_DWORD *)(a15 + 4 * v57) = (v60 + v59) * v58;
  *a17 = ((int)v57 + 1) % 6u;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 + 8 * (v55 ^ ((32 * ((v52 - 1842072265) > 0xFFFFFFF9)) | (((v52 - 1842072265) > 0xFFFFFFF9) << 6)))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1000A22A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(uint64_t), uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,char a42,char a43,char a44)
{
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  *(_BYTE *)(v45 - 200) = *(_BYTE *)(a37 - 0x4742A6759D0469AELL)
                        - ((2 * *(_BYTE *)(a37 - 0x4742A6759D0469AELL)) & 0x10)
                        + 8;
  *(_BYTE *)(v45 - 199) = *(_BYTE *)(a37 - 0x4742A6759D0469AFLL)
                        - ((*(unsigned __int8 *)(a37 - 0x4742A6759D0469AFLL) << (2 * (v44 - 68) + 59)) & 0x10)
                        + 8;
  *(_BYTE *)(v45 - 198) = *(_BYTE *)(a37 - 0x4742A6759D0469B0)
                        - ((2 * *(_BYTE *)(a37 - 0x4742A6759D0469B0)) & 0x10)
                        + 8;
  *(_BYTE *)(v45 - 197) = *(_BYTE *)(a37 - 0x4742A6759D0469B1)
                        - ((2 * *(_BYTE *)(a37 - 0x4742A6759D0469B1)) & 0x10)
                        + 8;
  *(_BYTE *)(v45 - 196) = *(_BYTE *)(a37 - 0x4742A6759D0469B2)
                        - ((2 * *(_BYTE *)(a37 - 0x4742A6759D0469B2)) & 0x10)
                        + 8;
  *(_BYTE *)(v45 - 195) = *(_BYTE *)(a37 - 0x4742A6759D0469B3)
                        - ((2 * *(_BYTE *)(a37 - 0x4742A6759D0469B3)) & 0x10)
                        + 8;
  v47 = -281095343 * a27 - ((1585292962 * a27 + 1087131690) & 0x75207634) + 1526096687;
  *(_BYTE *)(v45 - 194) = HIBYTE(v47) ^ 0xB2;
  *(_BYTE *)(v45 - 193) = BYTE2(v47) ^ 0x98;
  *(_BYTE *)(v45 - 192) = BYTE1(v47) ^ 0x33;
  *(_BYTE *)(v45 - 191) = v47 ^ 0x12;
  *(_BYTE *)(v45 - 190) = a44 ^ 0x2C;
  *(_BYTE *)(v45 - 189) = a43 ^ 0x42;
  *(_BYTE *)(v45 - 188) = a42 ^ 0xEB;
  *(_BYTE *)(v45 - 187) = a41 ^ 0x2F;
  *(_DWORD *)(a23 - 0x3102F9756CF7A13DLL) = -2064672884;
  v48 = *(_QWORD *)(v46 + 8 * v44) - 12;
  v49 = 1891100677
      * ((((2 * (v45 - 176)) | 0x6333902A05CC3CBELL) - (v45 - 176) - 0x3199C81502E61E5FLL) ^ 0x618C18846EEE3FCFLL);
  a5[213] = a30;
  a5[216] = v45 + 0x8984546B8A582CALL;
  a5[212] = v48 ^ v49;
  *(_DWORD *)(v45 - 160) = v49 + 1894933766;
  *(_DWORD *)(v45 - 132) = (v44 - 2027708853) ^ v49;
  a5[215] = a23;
  v50 = a19(v45 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40
                                                      + 8
                                                      * (v44 ^ 0x4359 ^ (53051
                                                                       * ((*(_DWORD *)(a23 - 0x3102F9756CF7A13DLL) ^ 0x84EF9744) > 0x78))))
                                          - 4))(v50);
}

uint64_t sub_1000A257C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,_DWORD *a44)
{
  int v44;
  int v45;
  uint64_t v46;

  *a44 = v45;
  return ((uint64_t (*)(void))(*(_QWORD *)(v46 + 8 * (v44 - 808421477)) - 4))();
}

uint64_t sub_1000A25A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  uint64_t v46;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 + 8 * (int)((v45 - 1042850076) ^ 0xF2077F73 ^ (50998 * (v45 == -1487270793)))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_1000A2670@<X0>(int a1@<W8>)
{
  char v1;
  uint64_t v2;
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + v2) = ((v1 + 122) ^ v3) * (v1 - 117);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v2 == 0) * v4) ^ a1)) - 8))();
}

uint64_t sub_1000A26A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  uint64_t v39;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * v38) - ((179 * (v38 ^ 0x2DEFu)) ^ 0x7627)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1000A26D4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,unsigned int a40)
{
  uint64_t v40;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t))(v40 + 8 * a1))(921689847, 2230121163, 2147483646, 92, a40, 0xBDD039AA39DBCF77, 2119969634, 5585);
}

uint64_t sub_1000A275C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((v5 + v2) ^ v3 ^ v4) * (v0 != v1)) ^ v5)) - 12))();
}

uint64_t sub_1000A2784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  int v39;
  int v40;
  uint64_t v41;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8 * (((a5 + ((((v40 + v39) & a1) - v38) ^ a2) > a3) * (int)a4) ^ v40)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1000A27BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  int v9;
  _QWORD *v10;
  int v11;
  unsigned int v12;
  uint64_t v13;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v13
                                                                               + 8
                                                                               * (((*(_DWORD *)(*v10 + 4 * v12 + a6) == v11 + v9 + a7)
                                                                                 * ((v11 + a9) ^ a8)) ^ v11)))(a1, a2, a3, a4, (a5 - 1));
}

uint64_t sub_1000A27F8()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * (v0 - 808409232)))();
}

uint64_t sub_1000A2810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unsigned int a47)
{
  int v47;
  uint64_t v48;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v48
                                                                                         + 8
                                                                                         * ((2364
                                                                                           * ((v47 - 1678310568) > 0x9DF54F0B)) ^ (v47 - 808437511)))
                                                                             - 4))(a1, a2, a3, a4, a47);
}

uint64_t sub_1000A2854()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 808416926)) - 8))();
}

uint64_t sub_1000A286C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - (((v0 + 615932) | 0x302610A2u) ^ 0x302FDEEBLL)))();
}

uint64_t sub_1000A289C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,unint64_t a39,uint64_t a40,int a41)
{
  int v41;
  int v42;
  unint64_t v43;
  int v44;

  STACK[0x2D0] = v43;
  STACK[0x2D8] = a39;
  LODWORD(STACK[0x284]) = a41;
  LODWORD(STACK[0x288]) = v44;
  LODWORD(STACK[0x28C]) = v42;
  return ((uint64_t (*)(void))(*(_QWORD *)(a40
                                        + 8
                                        * ((9296 * (v41 != ((v41 - 1674621045) | 0x2011) + 1774365249)) ^ (v41 - 1674614874)))
                            - 8))();
}

uint64_t sub_1000A2908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v42;
  uint64_t v43;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * (int)((3617 * ((a29 >> 26) & 1)) ^ v42)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_1000A2948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v42;
  uint64_t v43;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * v42) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_1000A29B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,unsigned int a51)
{
  unsigned int v51;
  uint64_t v52;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v52
                                                                                         + 8
                                                                                         * (int)(v51 ^ 0xDDABAF18 ^ ((v51 > 0x7FE4A7C6) * (v51 + 575958536))))
                                                                             - 4))(a1, a2, a3, a4, a51);
}

uint64_t sub_1000A29F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v57;
  int v58;
  uint64_t v59;

  LODWORD(a47) = a5;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)((v57 + v58 + 170) + 8 * ((78 * (*(_QWORD *)(a57 + 8 * (a5 - 1118497833)) != 0x252B3C024216B3C4)) ^ v58)) - ((v57 + v58 + 170) ^ 0x302FDEEFLL)))(v59, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_1000A2A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  int v58;
  int v59;
  int v60;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 + 8 * ((2092 * (*(_DWORD *)(a58 - 0x252B3C024216B3B4) != 2134650450)) ^ v60)) - (((v60 ^ (v59 + 698)) - v58 - 1891) ^ 0x34AFLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1000A2AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 + 8 * a8) - ((a8 + 808430144) ^ (unint64_t)(v44 - 4))))(a1, a2, a3, a4, a5, a6, 808437161, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_1000A2B28@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v3 + 8 * (a2 - 808410353)) - 4))(v3, 1995433797, 3107971043, (v2 - 82), a1, 4182548471, -792735839, 0xC924AEEC2D320168);
}

uint64_t sub_1000A2BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  BOOL v13;
  BOOL v14;

  v11 = a5 + v8;
  v12 = (v5 < v6) ^ (v11 < v9);
  v13 = v11 < v5;
  if (v12)
    v14 = v5 < v6;
  else
    v14 = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((v14 ^ (v7 - 19)) & 1) * v10) ^ v7)) - 4))();
}

uint64_t sub_1000A2C4C(uint64_t a1, int a2, int a3, int a4)
{
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(a1 + 8 * ((((v5 + a2) & a3 ^ a4) * (v4 == 37)) ^ v5)))();
}

uint64_t sub_1000A2C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  int v46;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 + 8 * ((((*(_QWORD *)(*(_QWORD *)(v42 + 16 * ((a5 | ((unint64_t)(a5 < v41) << 32)) + a7 + ((v44 + v40 + v46) & a6)) + 8) + a8) ^ 0x2714985249CD5C9) == v43) * v45) ^ (v44 + v40))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000A2CDC@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((26883
                                          * ((((*(_DWORD *)(v36 + 4) ^ ((a2 + 17965) | 0x180) ^ 0x13106343u) + 1) >> 1)
                                           - a36 == 0xB9E945C2FCE6FE67)) ^ a2))
                            - 8))();
}

uint64_t sub_1000A2D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  uint64_t v63;

  *(_QWORD *)(a36 - 0x545E2591BDC6413ELL) = v63;
  *(_DWORD *)(a37 - 0x14CA371E71DA8311) = *(_DWORD *)(a51 + 16 * a48 - 0x5DCFF62E22B2602);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 + 8 * (a8 + 20300)) - (((a8 - 14519) | 0x1410u) ^ 0x1592)))(a1, a2, a3, a4, a5, a6, &a63, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1000A2DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t (*a28)(uint64_t),uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;

  v43 = 879478891 * ((v41 - 176) ^ 0x8761A562B0793D43);
  *(_QWORD *)(a7 + 1696) = *(_QWORD *)(v42 + 8 * v40) - v43 + ((v40 + 808438085) ^ 0xFFFFFFFFCFD0211BLL);
  *(_QWORD *)(a7 + 1712) = a38;
  *(_DWORD *)(v41 - 168) = (v40 + 527176392) ^ v43;
  v44 = a28(v41 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40 + 8 * (v40 + 20494)) - 8))(v44);
}

uint64_t sub_1000A2E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,unsigned int a50)
{
  int v50;
  uint64_t v51;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v51 + 8 * (v50 - 808405616)))(a1, a2, a3, a4, a50);
}

uint64_t sub_1000A2E90@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((76
                                * (a1 < (int)(((v1 + 1960861720) & 0x5AEFDFE4 ^ 0xFFFFFFA4)
                                            + ((v1 + 577863689) & 0xAD5EBFF3)))) ^ (v1 - 808413641))))();
}

uint64_t sub_1000A2F08@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((37644 * (a1 != 22)) ^ v1)) - 4))();
}

uint64_t sub_1000A2F50@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (a2 - 808435715)) - 4))();
}

uint64_t sub_1000A2F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  int v63;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 + 8 * (v63 - 808409434)) - 12))(a1, a2, a3, a4, a5, a6, &a63, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000A2F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,__int16 a55,char a56,BOOL a57)
{
  int v57;
  unsigned int v58;
  char v59;
  BOOL v60;

  v58 = ((v57 - 1647345989) & 0x3200B7FF ^ 0x37E87D19) + a47;
  v59 = a57 ^ (v58 < 0x7A9354AF);
  v60 = v58 < HIDWORD(a46);
  if ((v59 & 1) != 0)
    v60 = a57;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 + 8 * ((598 * v60) ^ (v57 - 808408402))) - ((v57 - 143728487) & 0xD86179DF ^ 0x3950)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1000A3058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,unsigned int a57)
{
  int v57;
  int v58;
  uint64_t v59;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v59
                                                                                         + 8
                                                                                         * ((211
                                                                                           * (((v57 - 121) ^ (a44 == ((v57 + 2100274827) & 0xB2FFFEFB ^ (v58 - 32)))) & 1)) ^ v57))
                                                                             - 12))(a1, a2, a3, a4, a57);
}

uint64_t sub_1000A30B8()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * (v0 - 808407313)))();
}

uint64_t sub_1000A30D4@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((44 * (a1 < (int)(((76 * (v1 ^ (v3 - 88))) ^ 0xFFFFFFD9) + v1 - 808435715))) ^ (v2 + v1 + 1218))))();
}

uint64_t sub_1000A312C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((a1 == 23) ^ (v1 + 1)) & 1)
                                          * (((v1 - 7640) | 0x8481) ^ 0xBBEB)) ^ v1))
                            - 4))();
}

uint64_t sub_1000A316C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((15970 * (a1 != ((v2 + 26281) ^ (v1 + 698)) - 808443594)) ^ v2))
                            - 4))();
}

uint64_t sub_1000A31AC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((a1 != ((v2 + v1 + 843) ^ (v3 - 28))) * (((v1 - 6752) | 0x2100) + 28044)) ^ v1))
                            - 4))();
}

uint64_t sub_1000A31F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,__int16 a55,char a56,unsigned __int8 a57)
{
  int v57;
  uint64_t v58;

  LODWORD(STACK[0x2AC]) = LODWORD(STACK[0x33C]) + 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * (((((v57 - 1) ^ a57) & 1) * (((v57 - 7786) | 0x490) - 1849)) ^ v57)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_1000A324C()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((101
                                          * (((*v1 == 0x6CA6F0EE111A2BB6) ^ (((v0 + 98) & 0x97) + 93)) & 1)) ^ (v0 - 620278686) & 0x24F89B97u))
                            - 8))();
}

uint64_t sub_1000A32C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,_QWORD *a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61)
{
  unsigned int v61;
  uint64_t v62;
  _BOOL4 v63;

  v63 = *a51 == 0x7C0ADF1C3D95FE54;
  LODWORD(STACK[0x2AC]) = a61;
  return ((uint64_t (*)(void))(*(_QWORD *)(v62 + 8 * ((10347 * v63) ^ v61))
                            - ((v61 + 1350285052) & 0xAF8476FE)
                            + 18132))();
}

uint64_t sub_1000A3328@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t (*a24)(uint64_t),uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54)
{
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  _BOOL4 v59;

  v57 = ((2 * ((v56 - 176) & 0xC551738) - (v56 - 176) - 206903098) ^ 0x3E96510B) * a1;
  *(_DWORD *)(v56 - 172) = v57 + v55 + 5608;
  *(_DWORD *)(v56 - 168) = 381450761 - v57;
  *(_QWORD *)(v54 + 1712) = a51;
  v58 = a24(v56 - 176);
  v59 = *(_DWORD *)(v56 - 176) != 381450761;
  LODWORD(STACK[0x2AC]) = a54;
  return (*(uint64_t (**)(uint64_t))(a33 + 8 * ((v59 * (((v55 - 18102) | 8) ^ 0xAE9)) ^ v55)))(v58);
}

uint64_t sub_1000A33D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,int a62,int a63)
{
  int v63;
  uint64_t v64;

  LODWORD(STACK[0x2BC]) = a61;
  LODWORD(STACK[0x2CC]) = v63;
  LODWORD(STACK[0x280]) = a60;
  LODWORD(STACK[0x284]) = a63;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 + 8 * (v63 + 14400 + ((v63 - 613975119) & 0x2498BD7C))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_1000A343C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44)
{
  int v44;
  uint64_t v45;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v45
                                                                                         + 8
                                                                                         * (((a44 != 40)
                                                                                           * ((v44 ^ 0x6D8C) + 10699)) ^ v44))
                                                                             - ((v44 + 1034921363) & 0xF27FFFF3 ^ 0x302FDEEFLL)))(a1, a2, a3, a4, LODWORD(STACK[0x284]));
}

uint64_t sub_1000A3494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,unsigned int a50,unsigned int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,unsigned int a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  int a65;
  unsigned int a67;
  int v67;
  uint64_t v68;
  uint64_t v70;

  LODWORD(v70) = a65;
  LODWORD(a20) = a63;
  LODWORD(a26) = a44;
  LODWORD(a25) = v67 ^ 0x54F8;
  LODWORD(a30) = 808451337;
  HIDWORD(v70) = a39 - 808407135;
  HIDWORD(a11) = a39 - 808423641;
  LODWORD(a19) = a39 - 808443603;
  LODWORD(a18) = a39 - 661897836;
  LODWORD(a16) = a39 - 808410255;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 + 8 * v67) - 12))(3870204866, 10393, LODWORD(STACK[0x2CC]), 2449431420, a5, 105, 114, 2845, a9, a10, a11, v70, __PAIR64__(a58, a67), __PAIR64__(a50, a51), a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_1000A35C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, uint64_t a17, int a18, int a19, char a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v42;

  return ((uint64_t (*)(void))(*(_QWORD *)(a42
                                        + 8
                                        * ((3695
                                          * (((((v42 - a22 - a18) | (a18 - (v42 - a22))) >> ((a20 | 2) + 13)) & 1) == 0)) ^ a16))
                            - 8))();
}

uint64_t sub_1000A3614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26,int a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,unsigned int a37)
{
  uint64_t v37;
  uint64_t v38;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v38
                                                                                         + 8
                                                                                         * (int)((v37 + 21694) ^ (57056 * (a27 == a25))))
                                                                             - (v37 ^ 0xB92)
                                                                             - (((_DWORD)v37 + 2734) | 0x1420u)
                                                                             + 10836))(a1, a2, v37, 2449431420, a37);
}

uint64_t sub_1000A3690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  int v35;
  uint64_t v36;

  LODWORD(a21) = a35;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (v35 + 14811)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1000A36F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30)
{
  int v30;
  int v31;
  uint64_t v32;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v32 + 8 * v30))(a1, a2, (v30 ^ a30) + ((v31 - 381450753) ^ 0x7F6DB6FF) + ((2 * (v31 - 381450753)) & 0xFEDB6DFE) + 1871650521);
}

uint64_t sub_1000A3754(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t (*v41)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int v42;
  _DWORD *v43;
  uint64_t v44;
  int v45;
  _DWORD *v46;
  _QWORD *v47;
  unsigned int v48;

  v48 = ((*(_DWORD *)(*v47 + (*v43 & a4)) ^ (*v46 + v42 + v40 + 3)) & 0x7FFFFFFF) * v45;
  return v41(a1, a2, a3, *(unsigned __int8 *)(v44 + ((unint64_t)((v48 ^ HIWORD(v48)) * v45) >> 24)), (((v48 ^ HIWORD(v48)) * v45) >> 24) * a6, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000A3900(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40)
{
  int v40;
  int v41;

  return ((uint64_t (*)(void))(*(_QWORD *)(a40 + 8 * (((((a39 - 808440802) | a7) ^ a8) * (v40 != a1)) ^ v41)) - 8))();
}

uint64_t sub_1000A3940(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (v2 ^ a2)))();
}

uint64_t sub_1000A3988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t (*a29)(void))
{
  return a29();
}

uint64_t sub_1000A3994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,int a37,int a38,uint64_t a39,uint64_t a40,int a41)
{
  int v41;
  uint64_t v42;

  LODWORD(STACK[0x328]) = a36;
  LODWORD(STACK[0x32C]) = a38 - 2134650450 + v41;
  return ((uint64_t (*)(void))(*(_QWORD *)(v42 + 8 * a13) - (((a41 - 808437466) | 0x542u) ^ 0x1D4FLL)))();
}

uint64_t sub_1000A3A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unsigned int v44;
  uint64_t v45;
  int v46;
  BOOL v47;
  int v48;
  int v49;
  int v50;

  v43 = v39 >> 2;
  v44 = *(_DWORD *)(v41 + 4 * ((0x9F824282 % v43) & 0x3FFFFFFC));
  LODWORD(v43) = (907 * (a39 ^ 0x302FDEF7)) ^ 0xB923 ^ *(unsigned __int16 *)(v41
                                                                           + 4 * ((v43 - 1) & (unsigned __int16)v44));
  v45 = *a17;
  v46 = *(_DWORD *)(a15 + 4 * v45);
  LODWORD(v43) = v43 & ~HIWORD(v44);
  v47 = (_DWORD)v43 == 0;
  v48 = v43 + v43 * v46;
  v49 = v47;
  if (v47)
    v50 = *(_DWORD *)(a15 + 4 * v45);
  else
    v50 = 0;
  *(_DWORD *)(a15 + 4 * v45) = (v50 + v48) * v46;
  *a17 = ((int)v45 + 1) % 6u;
  LODWORD(STACK[0x328]) = v40;
  LODWORD(STACK[0x32C]) = a13;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42
                                                                                 + 8
                                                                                 * ((37852 * v49) ^ (a39 - 808436107)))
                                                                     - 4))(a1, a2, v40, 2449431420);
}

uint64_t sub_1000A3B0C@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = v8 - 477527900 < (a1 + a8);
  if ((v8 - 477527900) < 0xFA45FAAD != (a1 + a8) < 0xFA45FAAD)
    v10 = (a1 + a8) < 0xFA45FAAD;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((19 * !v10) ^ a2)) - ((a2 ^ 0x16CAu) + 15195) + 18136))();
}

uint64_t sub_1000A3B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  unsigned int v27;
  uint64_t v28;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (v26 + 14810)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, __PAIR64__(v27, a3), a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1000A3BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(808443631
                                                                              - ((a5 + 269434723) | 0x202080A0u)
                                                                              + *(_QWORD *)(v6 + 8 * a5)
                                                                              - 16))(a1, a2, a3, a4, v5);
}

uint64_t sub_1000A3C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  int v12;
  uint64_t v13;

  LODWORD(STACK[0x2AC]) = a12;
  return (*(uint64_t (**)(void))(v13 + 8 * v12))();
}

uint64_t sub_1000A3C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,uint64_t a33)
{
  _QWORD *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;

  v38 = LODWORD(STACK[0x2AC]) - 1614709515;
  v33[99] = *(_QWORD *)(v37 + 8 * v34) - 4;
  v33[101] = (unint64_t)&STACK[0x298] ^ 0x9DF1CC66A84B0A45 ^ v34 ^ 0x302FC853u;
  v33[103] = v35;
  LODWORD(STACK[0x4D0]) = 1531277028;
  LOWORD(STACK[0x4F8]) = 30496;
  v33[104] = a33;
  LODWORD(STACK[0x4FC]) = v38;
  LODWORD(STACK[0x500]) = 1077694505 * (a32 ^ 0x31A9D9CE) + 1804487276;
  v33[107] = &STACK[0x29A104F38E230703];
  v33[212] = &STACK[0x4C8];
  *(_DWORD *)(v36 - 164) = v34
                         - 1891100677
                         * (((((v36 - 176) | 0x9108077C) ^ 0xFFFFFFFE) - (~(v36 - 176) | 0x6EF7F883)) ^ 0x2FFD913)
                         - 1475918006;
  v39 = ((uint64_t (*)(uint64_t))((char *)*(&off_10112C750 + (v34 ^ 0x19BD)) - 719275327))(v36 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v37 + 8 * (v34 + 2096)) - 4))(v39);
}

uint64_t sub_1000A3D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61)
{
  int v61;
  uint64_t v62;
  uint64_t v63;
  _BOOL4 v64;

  LODWORD(STACK[0x280]) = a24;
  LODWORD(STACK[0x2CC]) = a23;
  LODWORD(STACK[0x2BC]) = a21;
  LODWORD(STACK[0x288]) = a35;
  LODWORD(STACK[0x294]) = v61;
  LODWORD(STACK[0x28C]) = a36;
  LODWORD(STACK[0x290]) = a28;
  LODWORD(STACK[0x284]) = a22;
  v64 = a36 == ((((HIDWORD(a11) - 19978) | 0x16B0) + 6618) ^ 0x16BC4A83);
  LODWORD(STACK[0x334]) = a35;
  LODWORD(STACK[0x338]) = a36;
  LODWORD(STACK[0x33C]) = a61;
  LODWORD(STACK[0x2AC]) = a61;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 8 * (((2 * v64) | (4 * v64)) ^ (HIDWORD(a11) - 1840))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           v62,
           a45);
}

uint64_t sub_1000A3E78()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  v3 = *(_QWORD *)(v1 + 176);
  v4 = STACK[0x374];
  v5 = STACK[0x370];
  LODWORD(STACK[0x2BC]) = STACK[0x36C];
  LODWORD(STACK[0x38C]) = v5;
  LODWORD(STACK[0x390]) = v4;
  *(_QWORD *)(v1 + 184) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * v0) - (v0 - 17643) + 7222))();
}

uint64_t sub_1000A3ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  int v62;
  int v63;
  uint64_t v64;

  LODWORD(STACK[0x388]) = 2134608446;
  return ((uint64_t (*)(void))(*(_QWORD *)(v64
                                        + 8 * (((a62 != v62) * (389 * (a39 ^ (v63 - 3)) - 1130)) ^ (a39 - 808423641)))
                            - 4))();
}

uint64_t sub_1000A3F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,int a53)
{
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v55 = *(_QWORD *)(v54 + 8 * a5) - 12;
  LODWORD(STACK[0x38C]) = a46;
  LODWORD(STACK[0x390]) = a53;
  *(_QWORD *)(v53 + 184) = v55;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54
                                                                                          + 8
                                                                                          * ((41817
                                                                                            * ((a5 ^ 0x14549906u) > 0x986CA063)) ^ (a5 + 23710)))
                                                                              - (a5 + 6067)
                                                                              + 7222))(a1, a2, a3, a4, 671198448);
}

uint64_t sub_1000A3FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  char v57;
  int v58;
  int v59;
  int v60;
  uint64_t v61;
  int v62;
  int v63;
  _BOOL4 v64;
  uint64_t v66;

  LODWORD(STACK[0x340]) = v59;
  LODWORD(STACK[0x344]) = a9;
  LODWORD(STACK[0x348]) = a5;
  LODWORD(STACK[0x2CC]) = a5;
  HIBYTE(a55) = v57 & 1;
  LODWORD(STACK[0x280]) = a9;
  LODWORD(STACK[0x284]) = v59;
  v62 = STACK[0x390];
  LODWORD(STACK[0x288]) = STACK[0x390];
  v63 = STACK[0x38C];
  LODWORD(STACK[0x28C]) = STACK[0x38C];
  v66 = *a57 + 0x177ECD13451C78A8;
  v64 = *a57 != 0;
  LODWORD(STACK[0x358]) = v63;
  LODWORD(STACK[0x35C]) = v62;
  LODWORD(STACK[0x360]) = v60;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * ((26884 * v64) ^ v58)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           v66,
           a53,
           a54,
           a55);
}

uint64_t sub_1000A4034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  int v57;
  uint64_t v58;

  return (*(uint64_t (**)(void))(v58
                              + 8
                              * (((*a57 == 0x6CA6F0EE111A2BB6)
                                * (((((v57 + 539305630) | 0x100A9C03) + 1468227223) & 0x784CDEC7)
                                 + ((((v57 + 539305630) | 0x100A9C03) - 808442043) | 0x6013)
                                 - 2943)) ^ (((v57 + 539305630) | 0x100A9C03) - 808428718))))();
}

uint64_t sub_1000A40BC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  BOOL v51;

  v51 = *(_QWORD *)(a50 + 8) == 0x7C0ADF1C3D95FE54;
  LODWORD(STACK[0x358]) = STACK[0x28C];
  LODWORD(STACK[0x35C]) = STACK[0x288];
  return (*(uint64_t (**)(void))(v50
                              + 8
                              * (int)(((((a1 + 3) ^ v51) & 1)
                                     * ((a1 + 1567089273) & 0xA298677F ^ 0x404C)) ^ a1)))();
}

uint64_t sub_1000A4130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t (*a31)(uint64_t),uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  int v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  int v57;

  v54 = 1130658149 * ((895298869 - ((v53 - 176) | 0x355D2D35) + ((v53 - 176) | 0xCAA2D2CA)) ^ 0x79E6B07);
  v55 = LODWORD(STACK[0x284]) - v54;
  *(_QWORD *)(v52 + 1712) = a51;
  *(_DWORD *)(v53 - 172) = v54 + v51 - 2423;
  *(_DWORD *)(v53 - 168) = v55;
  v56 = a31(v53 - 176);
  v57 = *(_DWORD *)(v53 - 176);
  LODWORD(STACK[0x290]) = v57;
  LODWORD(STACK[0x358]) = STACK[0x28C];
  LODWORD(STACK[0x35C]) = STACK[0x288];
  LODWORD(STACK[0x360]) = 381450761;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40
                                                      + 8
                                                      * ((127
                                                        * ((v51 ^ 0xD8 ^ (v57 == v51 + 381424590)) & 1)) ^ v51))
                                          - 12))(v56);
}

uint64_t sub_1000A4234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v55 = *(_QWORD *)(v54 + 8 * v52) - 4;
  LODWORD(STACK[0x294]) = LODWORD(STACK[0x2CC]) + 550163611;
  *(_QWORD *)(v53 + 200) = v55;
  LODWORD(STACK[0x330]) = STACK[0x28C];
  LODWORD(STACK[0x334]) = STACK[0x288];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 8 * (v52 ^ 0x3D54)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_1000A42C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  int v62;
  uint64_t v63;
  uint64_t v64;

  v64 = *(_QWORD *)(v63 + 8 * ((9818 * (a62 != v62)) ^ (a39 - 808423641)));
  LODWORD(STACK[0x388]) = 2134608442;
  return ((uint64_t (*)(void))(v64 - (((a39 - 808443619) | 0x4A5u) ^ 0x4A1)))();
}

uint64_t sub_1000A4334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v65 = *(_QWORD *)(v64 + 8 * a8);
  LODWORD(STACK[0x36C]) = a62;
  LODWORD(STACK[0x370]) = a49;
  LODWORD(STACK[0x374]) = HIDWORD(a55);
  *(_QWORD *)(v63 + 176) = v65;
  LODWORD(STACK[0x378]) = a62;
  LODWORD(STACK[0x37C]) = -429021230;
  LODWORD(STACK[0x380]) = 655598050;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 + 8 * (int)(a8 - 16478 + ((a8 + 9085) | 0x4018))) - 8))(a1, a2, a3, a4, a5, a6, a7, v62, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

uint64_t sub_1000A43A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  int v62;
  int v63;
  uint64_t v64;

  LODWORD(STACK[0x388]) = 2134608442;
  return ((uint64_t (*)(void))(*(_QWORD *)(v64 + 8 * ((1009 * (a62 != v62)) ^ (a39 - 808431872)))
                            - ((374 * (a39 ^ (v63 + 9))) ^ 0x15E6)))();
}

uint64_t sub_1000A4404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t *a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  int v62;
  uint64_t (*v63)(uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;

  v67 = *a56;
  v68 = *(_QWORD *)(v66 + 8 * v62) - 4;
  v69 = 210615973 * ((v65 - 176) ^ 0x4FC3E5EEA9EFC91FLL);
  *(_DWORD *)(v65 - 152) = (v62 - 153633425) ^ v69;
  *(_DWORD *)(v65 - 168) = (a62 - ((2 * a62 + 1384582126) & 0x4B56964E) + 250532126) ^ v69;
  *(_QWORD *)(v64 + 1696) = v67;
  *(_QWORD *)(v64 + 1712) = v68 ^ v69;
  v70 = v63(v65 - 176);
  v71 = *(_DWORD *)(v65 - 148);
  LODWORD(STACK[0x384]) = v71;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40
                                                      + 8
                                                      * (v62 ^ 0x21AC ^ ((v71 == 2134650450)
                                                                       * ((v62 + 808438009) ^ 0x302F6955))))
                                          - 12))(v70);
}

uint64_t sub_1000A44F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,_QWORD *a56)
{
  uint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t (*v62)(uint64_t);
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;

  v65 = LODWORD(STACK[0x2BC]) + 250532126 - (((LODWORD(STACK[0x2BC]) << (((v57 - 8) | 1) ^ 0xE2)) + v61) & 0x4B56964E);
  v66 = *(_QWORD *)(v64 + 8 * v57) - 4;
  v67 = 210615973 * ((((2 * v59) | 0x4418D514C90EB910) - v59 - 0x220C6A8A64875C88) ^ 0x6DCF8F64CD689597);
  *(_QWORD *)(v56 + 1696) = *a56;
  *(_QWORD *)(v56 + 1712) = v66 ^ v67;
  *(_DWORD *)(v63 - 152) = v60 ^ v67;
  *(_DWORD *)(v63 - 168) = v65 ^ v67;
  v68 = v62(v63 - 176);
  v69 = *(_DWORD *)(v63 - 148);
  LODWORD(STACK[0x384]) = v69;
  LODWORD(STACK[0x388]) = 2134650450;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40 + 8
                                                            * (v57 ^ 0x3809 ^ (6565 * (v69 != (v58 ^ 0x4F13F0B1)))))
                                          - 12))(v68);
}

uint64_t sub_1000A4618()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x388]) = STACK[0x384];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 + v1 + 393)) - 12))();
}

uint64_t sub_1000A4638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 + 8 * (v4 - 808435715))
                                                                             - 4))(a1, a2, a3, a4, LODWORD(STACK[0x388]));
}

uint64_t sub_1000A4654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unsigned int a46,int a47,int a48,uint64_t a49,int a50,int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;
  unint64_t v64;
  int v65;
  uint64_t v66;
  int v67;
  BOOL v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  int v72;

  v64 = (unint64_t)a46 >> 2;
  v65 = *(_DWORD *)(a44 + 4 * ((0x9F824282 % v64) & (a39 + 265298201)));
  v66 = *a17;
  v67 = *(_DWORD *)(a15 + 4 * v66);
  v69 = (unsigned __int16)~*(_WORD *)(a44 + 4 * ((v64 - 1) & (unsigned __int16)v65)) & (~v65 >> 16);
  v68 = v69 == 0;
  v70 = v69 + v69 * v67;
  v71 = v68;
  if (v68)
    v72 = *(_DWORD *)(a15 + 4 * v66);
  else
    v72 = 0;
  *(_DWORD *)(a15 + 4 * v66) = (v72 + v70) * v67;
  *a17 = ((int)v66 + 1) % 6u;
  LODWORD(STACK[0x34C]) = a48;
  LODWORD(STACK[0x350]) = a62;
  LODWORD(STACK[0x358]) = a48;
  LODWORD(STACK[0x35C]) = a51;
  LODWORD(STACK[0x360]) = v62;
  return ((uint64_t (*)(void))(*(_QWORD *)(v63 + 8 * ((7995 * v71) ^ (a39 - 808417448))) - 12))();
}

uint64_t sub_1000A474C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61)
{
  int v61;
  uint64_t v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  _BOOL4 v67;
  _BOOL4 v68;

  v63 = STACK[0x350];
  v64 = a9 + 620014053 + LODWORD(STACK[0x350]);
  v65 = a61 + LODWORD(STACK[0x34C]);
  v66 = (v64 < ((a9 + 808436385) ^ 0xB9E9ED3u)) ^ (v65 < 0x3BB14030);
  v67 = v64 < v65;
  if (v66)
    v68 = v65 < 0x3BB14030;
  else
    v68 = v67;
  LODWORD(STACK[0x358]) = STACK[0x34C];
  LODWORD(STACK[0x35C]) = v63;
  LODWORD(STACK[0x360]) = v61;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8 * ((18417 * v68) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_1000A47E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;

  LODWORD(STACK[0x33C]) = a62;
  return ((uint64_t (*)(void))(*(_QWORD *)(v63 + 8 * (v62 + 19229)) - 8))();
}

uint64_t sub_1000A4860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  uint64_t v46;

  return (*(uint64_t (**)(void))(v46
                              + 8
                              * ((24295
                                * (a46 + LODWORD(STACK[0x294]) == ((a39 - 844132093) ^ 0xFDDF680B ^ (a39 - 844132093) & 0x220D8DD ^ 0x3E3D2D78))) ^ (a39 - 808436278))))();
}

uint64_t sub_1000A48D0@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(v1 ^ (30 * a1)))
                            - (v1 ^ 0xFFFFFFFFFFFFDF16)
                            - 83 * (v1 ^ 0x204A)))();
}

uint64_t sub_1000A4920()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((49575 * (((((v0 + 374) | 0x5000) + 647638177) ^ v0) == 901505057)) ^ (v0 | 0x4009)))
                            - 12))();
}

uint64_t sub_1000A4988()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x403D)) - ((v0 + 504263257) & 0xE1F1DF08 ^ 0x5204)))();
}

uint64_t sub_1000A49D8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  LODWORD(STACK[0x354]) = v1;
  *(_QWORD *)(v5 + 192) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * v4) - ((v4 + v3) ^ v2)))();
}

uint64_t sub_1000A49F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  uint64_t v63;

  LODWORD(STACK[0x358]) = a52;
  LODWORD(STACK[0x35C]) = a51;
  LODWORD(STACK[0x360]) = a51;
  return (*(uint64_t (**)(void))(v63
                              + 8
                              * ((239 * (((a46 - 2147319647 == a63) ^ (a39 + 26)) & 1)) ^ (a39 - 808436385))))();
}

uint64_t sub_1000A4A6C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,int a43,int a44)
{
  uint64_t v44;
  uint64_t v45;

  *(_QWORD *)(v44 + 200) = *(_QWORD *)(v45 + 8 * a1) - 12;
  LODWORD(STACK[0x330]) = a44;
  LODWORD(STACK[0x334]) = a43;
  return (*(uint64_t (**)(void))(v45 + 8 * ((((a1 - 2029) | 0xAD) + 12788) ^ a1)))();
}

uint64_t sub_1000A4AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  int v45;
  uint64_t v46;

  LODWORD(STACK[0x338]) = v44;
  LODWORD(STACK[0x33C]) = STACK[0x330];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 + 8 * (v45 ^ 0x1939 ^ (v45 + 20827))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_1000A4B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  int v46;
  int v47;
  uint64_t v48;

  LODWORD(STACK[0x328]) = v47;
  LODWORD(STACK[0x32C]) = v45;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * v46) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_1000A4BAC@<X0>(_QWORD *a1@<X5>, uint64_t a2@<X6>, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,_DWORD *a52)
{
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;

  LODWORD(STACK[0x2AC]) = v52;
  v57 = v52 + v53;
  v58 = *(_DWORD *)(*a1 + (*a30 & v56));
  v59 = *(unsigned __int8 *)(((unint64_t)(((((v58 ^ (*a52 + v57 + 1)) & 0x7FFFFFFF) * (_DWORD)a2) ^ ((((v58 ^ (*a52 + v57 + 1)) & 0x7FFFFFFF) * a2) >> 16))
                                               * a2) >> 24)
                           + a33
                           + 4);
  v60 = *(_QWORD *)a52 + (v57 + 2);
  v61 = ((((v58 ^ v60) & 0x7FFFFFFF) * (_DWORD)a2) ^ ((((v58 ^ v60) & 0x7FFFFFFF)
                                                                   * a2) >> 16))
      * a2;
  return a3(*(unsigned __int8 *)((v61 >> 24) + a33 + 4), *(unsigned __int8 *)(v60 - 0x6CA6F0EE111A2BB6), *(unsigned __int8 *)(v54 + (v61 >> 24)), *(unsigned __int8 *)(v55 + (v61 >> 24)), v59, a1, a2, a33, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1000A4D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t (*a52)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return a52(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1000A4D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,uint64_t a48,int a49,int a50,int a51)
{
  int v51;
  uint64_t v52;

  LODWORD(STACK[0x34C]) = a51;
  LODWORD(STACK[0x350]) = a50 + a47 - 2134650450;
  return ((uint64_t (*)(void))(*(_QWORD *)(v52 + 8 * (a39 - 808412643))
                            - ((3617 * (a39 ^ (v51 - 2))) ^ 0x1C4ELL)))();
}

uint64_t sub_1000A4DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  uint64_t v63;

  LODWORD(STACK[0x358]) = a52;
  LODWORD(STACK[0x35C]) = a51;
  LODWORD(STACK[0x360]) = a51;
  return (*(uint64_t (**)(void))(v63
                              + 8
                              * (((a46 - 2147319647 != a63) * (((a39 + 1639270668) & 0x6E1ADFFD) - 1790)) ^ (a39 - 808436385))))();
}

uint64_t sub_1000A4E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t (*a58)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  LODWORD(a49) = STACK[0x358];
  return a58(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_1000A4E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, int a5@<W6>, uint64_t a6@<X7>, int a7@<W8>)
{
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;

  LODWORD(STACK[0x32C]) = v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8
                                                                                         + 8
                                                                                         * (int)((((((v11 ^ v12) * v13) ^ v9 | v11) > a3)
                                                                                                * v7) ^ (v11 + 3013)))
                                                                             - 12))(a1, a2, a6, a4, (a7 + a5));
}

uint64_t sub_1000A4EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v20;
  uint64_t v21;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 + 8 * v20) - 4))(a1, (((_DWORD)a1 - 381450753) ^ 0x7F6CB4BF)- 1614807044+ ((((_DWORD)a1 - 381450753) << (((v20 + 44) & 0xE3) + 30)) & 0xFED9697E), a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20);
}

uint64_t sub_1000A4F44()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x3592)) - 12))();
}

uint64_t sub_1000A4F78@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 200) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 - 808431120)) - 4))();
}

uint64_t sub_1000A4FA4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,_QWORD *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,_QWORD *a38,uint64_t a39)
{
  int v39;
  _DWORD *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  unint64_t v47;
  unsigned int v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;

  v43 = (v39 + v41);
  v44 = *a33 + v43;
  v45 = *(unsigned __int8 *)(v44 + a4);
  v46 = *(_DWORD *)(*a38 + (int)(*v40 & 0x91FF5B7C));
  v47 = -8231943
      * ((-8231943 * ((v46 ^ v44) & 0x7FFFFFFF)) ^ ((-8231943 * ((v46 ^ v44) & 0x7FFFFFFF)) >> 16));
  v48 = (*(unsigned __int8 *)(a39 + (v47 >> 24)) ^ v45 ^ *(unsigned __int8 *)(v42 + (v47 >> 24)) ^ *(unsigned __int8 *)((v47 >> 24) + a35 + 4) ^ v47 ^ ((v47 >> 24) * (_DWORD)a3)) << 24;
  v49 = *a33 + (v43 + 1);
  v50 = *(_BYTE *)(v49 + a4);
  v51 = -8231943
      * ((-8231943 * ((v46 ^ v49) & 0x7FFFFFFF)) ^ ((-8231943 * ((v46 ^ v49) & 0x7FFFFFFF)) >> 16));
  LOBYTE(v51) = *(_BYTE *)(a39 + (v51 >> 24)) ^ v50 ^ *(_BYTE *)(v42 + (v51 >> 24)) ^ *(_BYTE *)((v51 >> 24) + a35 + 4) ^ v51 ^ (BYTE3(v51) * a3);
  v52 = *a33 + (v43 + 2);
  v53 = *(_BYTE *)(v52 + a4);
  v54 = -8231943
      * ((-8231943 * ((v46 ^ v52) & 0x7FFFFFFF)) ^ ((-8231943 * ((v46 ^ v52) & 0x7FFFFFFF)) >> 16));
  v55 = v48 & 0xFF0000FF | (v51 << 16) | ((v53 ^ v54 ^ (BYTE3(v54) * a3) ^ *(_BYTE *)(a39 + (v54 >> 24)) ^ *(_BYTE *)(v42 + (v54 >> 24)) ^ *(_BYTE *)((v54 >> 24) + a35 + 4)) << 8);
  v56 = *a33 + (v43 + 3);
  LOBYTE(v54) = *(_BYTE *)(v56 + a4);
  v57 = -8231943
      * ((-8231943 * ((v46 ^ v56) & 0x7FFFFFFF)) ^ ((-8231943 * ((v46 ^ v56) & 0x7FFFFFFF)) >> 16));
  v58 = *(unsigned __int8 *)(a39 + (v57 >> 24));
  v59 = *(unsigned __int8 *)(v42 + (v57 >> 24));
  v60 = v55 & 0xFFFFFF00 | (v58 ^ v54 ^ v59 ^ *(_BYTE *)((v57 >> 24) + a35 + 4) ^ v57 ^ (BYTE3(v57) * a3));
  return a5(4286735353, a1, a2, a3, ((2 * v60) & 0xFFFAFEBE) + (v60 ^ 0x7FFD7F5F), a4, v58, v59, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1000A5164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  int v46;

  return ((uint64_t (*)(void))(*(_QWORD *)(a40
                                        + 8
                                        * (((a46 == -408591996) * ((a39 ^ 0x302FDBBB) + 62309)) ^ (v46 + a39 - 1068)))
                            - (((a39 - 808443601) | 0x300u) ^ 0x31ALL)))();
}

uint64_t sub_1000A51D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (v7 - 808430136 + v7 - a7 - 786 - 305)) - 12))();
}

uint64_t sub_1000A5210()
{
  uint64_t (*v0)(uint64_t);

  return v0(808443619);
}

uint64_t sub_1000A521C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40)
{
  uint64_t v40;
  int v41;

  return ((uint64_t (*)(void))(*(_QWORD *)(a40
                                        + 8
                                        * ((((21 * (a39 ^ (a1 - 30))) ^ 0x3A0) * ((a5 - 2147319667) > 3)) ^ (v41 + a39 + 86)))
                            - (v40 ^ 0x71C6)))();
}

uint64_t sub_1000A5284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a40 + 8 * (a39 - 808426772)) - 4))(a1, a2, (a29 - 2134650450 + a46));
}

uint64_t sub_1000A52CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unsigned int a47)
{
  uint64_t v47;
  unint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  BOOL v52;
  int v53;
  int v54;
  int v55;

  v48 = (unint64_t)a47 >> 2;
  v49 = *(_DWORD *)(v47 + 4 * ((((a39 - 808443616) | 0x5E54) + 1073717669) & (0x9F824282 % v48)));
  v50 = *a17;
  v51 = *(_DWORD *)(a15 + 4 * v50);
  LODWORD(v48) = (unsigned __int16)~*(_WORD *)(v47 + 4 * ((v48 - 1) & (unsigned __int16)v49)) & (~v49 >> 16);
  v52 = (_DWORD)v48 == 0;
  v53 = v48 + v48 * v51;
  v54 = !v52;
  if (v52)
    v55 = *(_DWORD *)(a15 + 4 * v50);
  else
    v55 = 0;
  *(_DWORD *)(a15 + 4 * v50) = (v55 + v53) * v51;
  *a17 = ((int)v50 + 1) % 6u;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a40 + 8 * ((986 * v54) ^ (a39 - 808426772)))
                                                           - 4))(a1, a2, a11);
}

uint64_t sub_1000A53C0(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;
  _BOOL4 v14;

  v14 = a3 + 2009525508 < (a8 + a13);
  if ((a8 + a13) < 0x8E83670D != a3 + 2009525508 < (((a7 ^ (a1 - 677)) + 16522) ^ 0x8E83246A))
    v14 = (a8 + a13) < 0x8E83670D;
  LODWORD(STACK[0x340]) = a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((52 * !v14) ^ (a7 - 808436108))) - 4))();
}

uint64_t sub_1000A5450@<X0>(uint64_t a1@<X2>, int a2@<W6>, int a3@<W8>)
{
  uint64_t v3;

  LODWORD(STACK[0x32C]) = a2;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (a3 ^ 0x4C7D)) - 12))(a1);
}

uint64_t sub_1000A54CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47)
{
  int v47;

  return ((uint64_t (*)(void))(*(_QWORD *)(a41
                                        + 8 * (((a47 == a13) * ((v47 + a40 + 123) ^ 0x5E51)) ^ (v47 + a40 - 1068)))
                            - (a12 & 0xA265DD5C ^ 0x550)))();
}

uint64_t sub_1000A5520@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  uint64_t v23;

  LODWORD(STACK[0x328]) = a23;
  return (*(uint64_t (**)(void))(v23 + 8 * ((a1 - 16413 + ((2 * a1) ^ 0x6CC8)) ^ ((a1 + 17655) * (a8 == a7)))))();
}

uint64_t sub_1000A55AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  uint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  int v67;
  int v68;

  LODWORD(STACK[0x33C]) = a1;
  LODWORD(STACK[0x338]) = v67;
  LODWORD(STACK[0x334]) = v68;
  LODWORD(STACK[0x280]) = v65;
  LODWORD(STACK[0x384]) = a16;
  LODWORD(STACK[0x388]) = a8;
  LODWORD(STACK[0x290]) = a18;
  LODWORD(STACK[0x294]) = a19;
  LODWORD(STACK[0x38C]) = a20;
  LODWORD(STACK[0x390]) = a21;
  LODWORD(STACK[0x2AC]) = a1;
  LODWORD(STACK[0x2BC]) = a27;
  LODWORD(STACK[0x2CC]) = a26;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 8 * v64))(a1, a2, a3, a4, a5, 808434872, a7, &a63, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           v63,
           a45);
}

uint64_t sub_1000A565C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v45;
  int v46;
  int v47;

  LODWORD(STACK[0x33C]) = a24;
  LODWORD(STACK[0x338]) = a25;
  LODWORD(STACK[0x2AC]) = a29;
  LODWORD(STACK[0x2BC]) = a27;
  LODWORD(STACK[0x2CC]) = a26;
  LODWORD(STACK[0x384]) = a16;
  LODWORD(STACK[0x388]) = a3;
  LODWORD(STACK[0x290]) = a18;
  LODWORD(STACK[0x294]) = a19;
  LODWORD(STACK[0x38C]) = a20;
  LODWORD(STACK[0x390]) = a21;
  LODWORD(STACK[0x280]) = v46;
  LODWORD(STACK[0x334]) = v47;
  *(_QWORD *)(a37 - 0x7DDE77E606D40C37) = ((LODWORD(STACK[0x380]) - 2134650450) | ((unint64_t)(a5 - 2147319647) << 32))
                                          - 2
                                          * (((LODWORD(STACK[0x380]) - 2134650450) | ((unint64_t)(a5 - 2147319647) << 32)) & 0x2714985249CD5FDLL ^ (LODWORD(STACK[0x380]) - 2134650450) & (((_DWORD)a39 - 1526800132) & 0x2AD1797C ^ 0x3968))
                                          + 0x2714985249CD5C9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a40 + 8 * ((int)a39 - 808435494)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           v45,
           a45);
}

uint64_t sub_1000A577C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  LODWORD(STACK[0x33C]) = a24;
  LODWORD(STACK[0x338]) = a25;
  LODWORD(STACK[0x2AC]) = a29;
  LODWORD(STACK[0x2BC]) = a27;
  LODWORD(STACK[0x2CC]) = a26;
  LODWORD(STACK[0x384]) = a16;
  LODWORD(STACK[0x388]) = a3;
  LODWORD(STACK[0x290]) = a18;
  LODWORD(STACK[0x294]) = a19;
  LODWORD(STACK[0x38C]) = a20;
  LODWORD(STACK[0x390]) = a21;
  LODWORD(STACK[0x280]) = v47;
  v50 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * v46) - ((4 * v46) ^ 0x1FE74u) + 14676);
  LODWORD(STACK[0x334]) = v49;
  return v50(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           v45,
           a45);
}

uint64_t sub_1000A581C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  LODWORD(STACK[0x33C]) = a24;
  LODWORD(STACK[0x338]) = a25;
  LODWORD(STACK[0x2AC]) = a29;
  LODWORD(STACK[0x2BC]) = a27;
  LODWORD(STACK[0x2CC]) = a26;
  LODWORD(STACK[0x334]) = v49;
  LODWORD(STACK[0x280]) = v46;
  LODWORD(STACK[0x384]) = a7;
  LODWORD(STACK[0x388]) = a3;
  LODWORD(STACK[0x290]) = a3;
  LODWORD(STACK[0x294]) = a7;
  LODWORD(STACK[0x38C]) = HIDWORD(a13);
  v50 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * v47) - (v47 + 6896) + 24147);
  LODWORD(STACK[0x390]) = a7;
  return v50(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           v45,
           a45);
}

uint64_t sub_1000A58AC()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;

  v2 = STACK[0x340];
  v3 = STACK[0x390];
  LODWORD(STACK[0x344]) = STACK[0x38C];
  LODWORD(STACK[0x348]) = v3;
  LODWORD(STACK[0x34C]) = v2;
  LODWORD(STACK[0x350]) = 381450761;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - (v0 + 6036) + 30175))();
}

uint64_t sub_1000A58FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v69;

  LODWORD(STACK[0x33C]) = a24;
  LODWORD(STACK[0x338]) = a25;
  LODWORD(STACK[0x334]) = v66;
  LODWORD(STACK[0x280]) = v63;
  v69 = v62;
  LODWORD(STACK[0x384]) = a16;
  LODWORD(STACK[0x388]) = a3;
  LODWORD(STACK[0x290]) = a18;
  LODWORD(STACK[0x294]) = a19;
  LODWORD(STACK[0x38C]) = a20;
  LODWORD(STACK[0x390]) = a21;
  LODWORD(STACK[0x2AC]) = a29;
  LODWORD(STACK[0x2BC]) = a27;
  LODWORD(STACK[0x2CC]) = a26;
  LODWORD(STACK[0x344]) = a62;
  LODWORD(STACK[0x348]) = a28;
  v67 = *(_QWORD *)(v65 + 8 * v64) - (v64 ^ 0x2BBCu);
  LODWORD(STACK[0x34C]) = a29;
  LODWORD(STACK[0x350]) = a29;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 30175))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           v69,
           a45);
}

uint64_t sub_1000A59CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;

  LODWORD(STACK[0x33C]) = a25;
  LODWORD(STACK[0x338]) = a26;
  LODWORD(STACK[0x2AC]) = a30;
  LODWORD(STACK[0x2BC]) = a28;
  LODWORD(STACK[0x2CC]) = a27;
  LODWORD(STACK[0x334]) = v66;
  LODWORD(STACK[0x280]) = v64;
  LODWORD(STACK[0x384]) = a8;
  LODWORD(STACK[0x388]) = a12;
  LODWORD(STACK[0x290]) = a19;
  LODWORD(STACK[0x294]) = a20;
  LODWORD(STACK[0x38C]) = a21;
  LODWORD(STACK[0x390]) = a22;
  LODWORD(STACK[0x344]) = a63;
  LODWORD(STACK[0x348]) = HIDWORD(a46);
  v67 = *(_QWORD *)(v65 + 8 * a9) - (a9 ^ 0x2BBCu);
  LODWORD(STACK[0x34C]) = a30;
  LODWORD(STACK[0x350]) = 381450761;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 30175))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           v63,
           a46);
}

uint64_t sub_1000A5A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  uint64_t v54;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 8 * (int)(((LODWORD(STACK[0x350]) == v53) * (((a9 - 22062) ^ 0xFFFFFFE2) + a9 - 22062)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_1000A5AE8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 + 6559) ^ (v0 + 21998) ^ 0x7724) * (v1 != 0)) ^ v0)))();
}

uint64_t sub_1000A5B1C()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((930 * (*v1 == 0x6CA6F0EE111A2BB6)) ^ v0))
                            - (v0 ^ 0x461u)
                            - ((v0 - 998) ^ 0xFFFFFFFFFFFFFFFBLL)))();
}

uint64_t sub_1000A5B64@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((*(_QWORD *)(v2 + 8) != 0x7C0ADF1C3D95FE54) * a1) ^ v1)) - 8))();
}

uint64_t sub_1000A5BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t (*a31)(uint64_t),uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60)
{
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;

  v63 = 1130658149 * ((2 * ((v62 - 176) & 0x2B1B010) - (v62 - 176) - 45199383) ^ 0x3072F624);
  *(_DWORD *)(v62 - 172) = v63 + v61 - 5377;
  *(_DWORD *)(v62 - 168) = a60 - v63;
  *(_QWORD *)(v60 + 1712) = a51;
  v64 = a31(v62 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40
                                                      + 8
                                                      * (((*(_DWORD *)(v62 - 176) == ((v61 - 230946375) & 0xDC3BDDD ^ 0x16BC4355))
                                                        * (v61 ^ 0x71CA)) ^ v61))
                                          - 8))(v64);
}

uint64_t sub_1000A5C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,_QWORD *a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  uint64_t *v62;
  _DWORD *v63;
  int v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  int v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;

  v68 = *v62;
  v69 = (((a62 - 381450747) << ((((v64 ^ 0x78) + 72) | 0x62) - 102)) & ((((v64 ^ 0x6E78) + 1687740351) & 0x9B6739DF)
                                                                      - 69229150))
      + ((a62 - 381450747) ^ 0x7DEFEF7F)
      - 2112876415;
  v70 = *v62 + v69;
  v71 = *(unsigned __int8 *)(v70 - 0x6CA6F0EE111A2BB6);
  v72 = *(_DWORD *)(*a41 + (*v63 & v66));
  v73 = ((((v70 ^ v72) & 0x7FFFFFFF) * v65) ^ ((((v70 ^ v72) & 0x7FFFFFFF) * v65) >> 16))
      * v65;
  v74 = v68 + (v69 + 1);
  LOBYTE(v69) = *(_BYTE *)(v74 - 0x6CA6F0EE111A2BB6);
  v75 = ((((v74 ^ v72) & 0x7FFFFFFF) * v65) ^ ((((v74 ^ v72) & 0x7FFFFFFF) * v65) >> 16))
      * v65;
  LODWORD(v75) = (*(_BYTE *)(a30 + (v75 >> 24)) ^ v69 ^ *(_BYTE *)(a22 + (v75 >> 24) + 2) ^ *(_BYTE *)(a23 + (v75 >> 24) + 2) ^ v75 ^ (-79 * BYTE3(v75))) | ((*(unsigned __int8 *)(a30 + (v73 >> 24)) ^ v71 ^ *(unsigned __int8 *)(a22 + (v73 >> 24) + 2) ^ *(unsigned __int8 *)(a23 + (v73 >> 24) + 2) ^ v73 ^ (-79 * (v73 >> 24))) << 8);
  return (*(uint64_t (**)(void))(v67
                              + 8
                              * ((16315 * ((unsigned __int16)(((2 * v75) & 0xD68E) + (v75 ^ 0xEB47)) == 60231)) ^ v64 ^ 0x6E78)))();
}

uint64_t sub_1000A5DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,int a61)
{
  uint64_t v61;

  LODWORD(STACK[0x354]) = a60;
  LODWORD(STACK[0x358]) = a59;
  LODWORD(STACK[0x35C]) = a61;
  LODWORD(STACK[0x360]) = a58;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 + 8 * (a6 ^ 0x5C8 ^ (a6 - 1759288688) & 0x68DCB9FF))
                                                                                       - 12))(a1, a2, a3, a4, a5, 808434872);
}

uint64_t sub_1000A5E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  uint64_t v58;

  *(_QWORD *)(a8 + 192) = v53;
  LODWORD(STACK[0x330]) = v54;
  v56 = STACK[0x360];
  LODWORD(v58) = LODWORD(STACK[0x354]) + 20;
  HIDWORD(v58) = LODWORD(STACK[0x354]) - 125124942;
  LODWORD(STACK[0x338]) = STACK[0x358];
  LODWORD(STACK[0x33C]) = v56;
  LODWORD(STACK[0x328]) = v54;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * v52))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           v58,
           a50,
           a51,
           a52,
           v53);
}

uint64_t sub_1000A5EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44)
{
  int v44;
  uint64_t v45;

  return (*(uint64_t (**)(void))(v45
                              + 8
                              * ((6324 * (((a44 == 42) ^ (((v44 - 125) & 0xE7) - a6 - 120)) & 1)) ^ v44)))();
}

uint64_t sub_1000A5F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,unsigned int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int a64;
  int v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  LODWORD(v67) = a50;
  LODWORD(v68) = STACK[0x288];
  HIDWORD(v69) = a44;
  LODWORD(v69) = ((v64 + 1213040668) & 0xB7B24F30) - 726;
  HIDWORD(v68) = 1073704310;
  LODWORD(a16) = STACK[0x384];
  HIDWORD(v67) = a39 + 761940248;
  LODWORD(a18) = STACK[0x290];
  LODWORD(a19) = STACK[0x294];
  LODWORD(a20) = STACK[0x38C];
  LODWORD(a21) = STACK[0x390];
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 8 * v64))(LODWORD(STACK[0x33C]), a2, 1308196178, 105, a5, 0x93590F11EEE5D44ALL, 141572786, LODWORD(STACK[0x388]), a9, a10, v67, v68, __PAIR64__(a64, a51), v69, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_1000A6040()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 808405201)) - 8))();
}

uint64_t sub_1000A605C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((a1 < -1241046685) ^ (v1 + 0x80)) & 1)
                                          * (26 * (v1 ^ 0x302FDCB6) - 15477)) ^ (v1 - 808415008)))
                            - 4))();
}

uint64_t sub_1000A60C4@<X0>(int a1@<W8>)
{
  char v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((((((a1 - v2) | (v2 - a1)) >> ((v2 - v1 + 40) ^ 0x37)) & 1) == 0)
                                               * (v2 ^ 0xB6072114)) ^ (v2 + 1241062207)))
                            - 4))();
}

uint64_t sub_1000A6124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v50 = (((v47 + 540004019) | 0x10000243u) ^ 0xFFFFFFFFCFD0211FLL) + *(_QWORD *)(v49 + 8 * v47);
  *(_QWORD *)(a8 + 304) = v48;
  LODWORD(STACK[0x36C]) = a47;
  *(_QWORD *)(a8 + 200) = v50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v49 + 8 * (v47 ^ 0x4F5F)) - 8))();
}

uint64_t sub_1000A617C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((v1 - 11957) ^ 0x3C5) - 3505) * (a1 == -1459818717)) ^ v1))
                            - 4))();
}

uint64_t sub_1000A61B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47)
{
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v50 = *(_QWORD *)(v49 + 8 * v47) - 12;
  *(_QWORD *)(a8 + 304) = v48;
  LODWORD(STACK[0x36C]) = a47;
  *(_QWORD *)(a8 + 200) = v50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v49 + 8 * (int)(v47 - 808430136 + ((v47 + 1048564171) & 0xF1AFFEEF) - 33))
                            - 8))();
}

uint64_t sub_1000A6204()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 0x7DDE77E606D40C37) = (LODWORD(STACK[0x380]) - 2134650450)
                                         - ((3671 * (v0 ^ 0x1FB9u) + 1228501558) & (2
                                                                                    * (LODWORD(STACK[0x380]) - 2134650450)))
                                         + 0x2714985249CD5C9;
  return (*(uint64_t (**)(void))(v2 + 8 * v0))();
}

uint64_t sub_1000A626C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  **(_DWORD **)(v64 + 344) = a63;
  LODWORD(STACK[0x368]) = a56;
  LODWORD(STACK[0x36C]) = a49;
  LODWORD(STACK[0x370]) = a63;
  LODWORD(STACK[0x380]) = 2134608446;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 + 8 * ((185 * (a63 == (a39 ^ 0x2693A4EA))) ^ (a39 - 808422308))) - (a39 - 808401498) + 42117))(a1, a2, a3, a4, a5, a6, a7, v63);
}

uint64_t sub_1000A6310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;

  LODWORD(STACK[0x328]) = STACK[0x370];
  LODWORD(STACK[0x32C]) = STACK[0x36C];
  LODWORD(STACK[0x2AC]) = STACK[0x368];
  *(_QWORD *)(v31 + 352) = a30 - 0x7EBD21DF175318FFLL;
  v33 = *(_DWORD *)(a30 - 0x7EBD21DF175318FFLL);
  LODWORD(STACK[0x2BC]) = v33;
  return ((uint64_t (*)(void))(*(_QWORD *)(v32
                                        + 8 * ((26 * (v33 == ((v30 - 881204395) & 0x3485FFFF) + 381415979)) ^ v30))
                            - 8))();
}

uint64_t sub_1000A63B8@<X0>(uint64_t (*a1)(uint64_t)@<X7>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v8 = v2 - 7339;
  v9 = (v2 - 41353) | 0x5086;
  v10 = v6[41];
  v11 = ((-2 - ((~(v7 - 176) | 0xE859850B) + ((v7 - 176) | 0x17A67AF4))) ^ 0xE09C09D5) * a2;
  *(_DWORD *)(v7 - 152) = v11 - 1108054376;
  *(_WORD *)(v7 - 156) = v11 ^ 0x259;
  v6[216] = v3;
  v6[212] = v10;
  *(_DWORD *)(v7 - 168) = v8 - v11 - 16631;
  *(_DWORD *)(v7 - 164) = v11 + 731127395 * v4 + v9 + 1589573358;
  v12 = a1(v7 - 176);
  *(_DWORD *)STACK[0x310] = *(_DWORD *)(v7 - 160);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * v8) - 4))(v12);
}

uint64_t sub_1000A6490@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;

  v8 = v6[41];
  v9 = ((v7 - 176) ^ 0x8C58CDE) * a1;
  v10 = LODWORD(STACK[0x2BC]) + v9;
  v6[215] = v1;
  v6[216] = (unint64_t)&STACK[0x298] ^ 0xCCA13B938549F5E0;
  *(_DWORD *)(v7 - 172) = v10;
  *(_DWORD *)(v7 - 168) = (((v4 - 1813195855) & 0x6C12F7F6 ^ 0x5CB63FCD) + v2) ^ v9;
  *(_DWORD *)(v7 - 160) = -779406970 - v9;
  v6[218] = v3;
  v6[217] = v8;
  *(_DWORD *)(v7 - 176) = (v4 + 1491990652) ^ v9;
  v11 = ((uint64_t (*)(uint64_t))((char *)*(&off_10112C750 + (int)(v4 - 30294)) - 1281742426))(v7 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * v4) - 4))(v11);
}

uint64_t sub_1000A6578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;

  LODWORD(STACK[0x374]) = a8;
  LODWORD(STACK[0x378]) = v8;
  LODWORD(STACK[0x2CC]) = v8;
  LODWORD(STACK[0x380]) = v10 + 18;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 + 8 * ((((v11 - 1107318924) & 0x42006D3F ^ 0xADFD) * (a8 != 381450761)) ^ v11)) - 4))(a1, a2, a3, a4, a5, a6, a7, v9);
}

uint64_t sub_1000A65D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  int v54;
  uint64_t v55;
  _BOOL4 v56;

  *(_QWORD *)(a23 - 0x2B6212DB23DCB495) = ((v54 - 6369) ^ 0x1624u)
                                          + (unint64_t)(LODWORD(STACK[0x364]) + v53)
                                          - ((2 * (LODWORD(STACK[0x364]) + v53)) & 0x15F1E8174)
                                          + 0x7615D7A2AF8F1439;
  v56 = a28 != 0x4F421AC90127A1A3;
  if (LODWORD(STACK[0x2CC]) != ((v54 + 1580092464) & 0xA1D16DCF) + 2134646988)
    v56 = 0;
  LODWORD(STACK[0x37C]) = STACK[0x2CC];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * ((v54 - 6369) | (8 * v56))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_1000A66A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 184) = *(_QWORD *)(v2 + 8 * v0) - 4;
  LODWORD(STACK[0x384]) = STACK[0x32C];
  LODWORD(STACK[0x388]) = STACK[0x2AC];
  LODWORD(STACK[0x38C]) = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(v0 ^ 0x2E60 ^ (v0 + 3824))) - 8))();
}

uint64_t sub_1000A66F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  char v55;
  _DWORD *v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v64;

  *(_QWORD *)(v59 + 312) = v56;
  LODWORD(STACK[0x390]) = v57;
  LODWORD(STACK[0x284]) = v57;
  HIBYTE(a55) = v55;
  LODWORD(STACK[0x288]) = STACK[0x38C];
  v61 = STACK[0x388];
  LODWORD(STACK[0x28C]) = STACK[0x388];
  v62 = STACK[0x384];
  LODWORD(STACK[0x290]) = STACK[0x384];
  v64 = *(_QWORD *)(a38 - 0x6F7634AB0303F6BELL);
  LODWORD(STACK[0x294]) = *v56;
  LODWORD(STACK[0x34C]) = v62;
  LODWORD(STACK[0x350]) = v61;
  LODWORD(STACK[0x354]) = 381450761;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * (int)(((v64 != 0) * (((a9 + 984597365) & 0xF57FFEF7) - 808426770)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, v58, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           v64 + 0x177ECD13451C78A8,
           a53,
           a54,
           a55);
}

uint64_t sub_1000A67D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  int v57;
  uint64_t v58;

  return (*(uint64_t (**)(void))(v58 + 8 * (((*a57 == 0x6CA6F0EE111A2BB6) * ((v57 + 28417) ^ 0x895)) ^ (v57 - 663))))();
}

uint64_t sub_1000A6834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v57;
  int v58;
  uint64_t v59;
  _BOOL4 v60;

  v60 = *(_QWORD *)(a57 + 8) == 0x7C0ADF1C3D95FE54;
  LODWORD(STACK[0x34C]) = STACK[0x290];
  LODWORD(STACK[0x350]) = STACK[0x28C];
  return (*(uint64_t (**)(void))(v59 + 8 * ((v60 * (v58 ^ 0x8DDE)) ^ v57)))();
}

uint64_t sub_1000A687C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t (*a24)(uint64_t),uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  BOOL v53;

  v49 = v45 ^ (v44 - 1454);
  v50 = STACK[0x294];
  v51 = ((v48 - 176) ^ 0xCD3CB9CD) * a1;
  *(_QWORD *)(v47 + 1712) = a44;
  *(_DWORD *)(v48 - 172) = v51 + v45 - 12573;
  *(_DWORD *)(v48 - 168) = v50 - v51;
  v52 = a24(v48 - 176);
  v53 = *(_DWORD *)(v48 - 176) == v49 + v46;
  LODWORD(STACK[0x34C]) = STACK[0x290];
  LODWORD(STACK[0x350]) = STACK[0x28C];
  LODWORD(STACK[0x354]) = 381450761;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a33
                                                      + 8 * ((999 * (((v45 - 82) ^ v53) & 1)) ^ v45))
                                          - 4))(v52);
}

uint64_t sub_1000A692C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  uint64_t v53;
  uint64_t v54;

  *(_QWORD *)(v53 + 200) = *(_QWORD *)(v54 + 8 * (v52 - 35155)) + ((v52 - 35155) ^ 0xA9Bu) - 3613;
  LODWORD(STACK[0x358]) = STACK[0x290];
  LODWORD(STACK[0x35C]) = STACK[0x28C];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 + 8 * ((v52 - 35155) ^ 0x42D1 ^ (8082 * (((v52 - 35155) ^ 0x5A13BCB0u) > 0x2A51F35B)))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_1000A69B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  uint64_t v62;

  return ((uint64_t (*)(void))(*(_QWORD *)(v62
                                        + 8
                                        * ((27 * (a62 != ((a39 - 808439441) | 0x500) + 381445303)) ^ (a39 - 808436376)))
                            - ((a39 - 1591600180) & 0x2EAE3FF5)
                            + 15005))();
}

uint64_t sub_1000A6A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(uint64_t),uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t *a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  int v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v67 = *a56;
  v68 = *(_QWORD *)(v66 + 8 * v63);
  v64[212] = a28;
  *(_DWORD *)(v65 - 140) = (v63 - 961777035) ^ (210615973
                                              * ((((2 * (v65 - 176)) | 0x9376A6DE) - (v65 - 176) + 910470289) ^ 0x60549A70));
  *(_DWORD *)(v65 - 168) = ((v63 + 5935) ^ 0x5C940D28)
                         + a62
                         + 210615973 * ((((2 * (v65 - 176)) | 0x9376A6DE) - (v65 - 176) + 910470289) ^ 0x60549A70);
  v64[214] = v67;
  v64[215] = v68
           - 210615973
           * ((((2 * (v65 - 176)) | 0x8266FF8D9376A6DELL) - (v65 - 176) - 0x41337FC6C9BB536FLL) ^ 0xEF09A2860549A70);
  v69 = a22(v65 - 176);
  LODWORD(STACK[0x37C]) = v62;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40 + 8 * (int)(v63 ^ 0x2FF7)) - 4))(v69);
}

uint64_t sub_1000A6B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unsigned int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  uint64_t v61;
  int v62;
  uint64_t v63;

  *(_DWORD *)(a28 - 0x4F421AC90127A1A3) = v62;
  LODWORD(STACK[0x37C]) = v62;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 + 8 * a8) - ((a8 - 3620) ^ 0x2C85)))(a1, a2, a3, a4, a5, a6, a7, v61, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

uint64_t sub_1000A6B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,__int16 a63)
{
  unsigned __int8 a64;
  uint64_t v64;
  int v65;
  uint64_t v66;
  int v67;
  int v68;

  v67 = a64;
  v68 = STACK[0x37C];
  LODWORD(STACK[0x280]) = STACK[0x37C];
  if (v64 == 0x7D46CEFC17F01113)
    v67 = 0;
  LODWORD(STACK[0x380]) = v68;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 + 8 * ((v67 * (v65 ^ 0x2C84)) ^ v65)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1000A6BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  _BOOL4 v47;

  v43 = *(_QWORD *)(a37 - 0x6F7634AB0303F6BELL);
  v44 = *(_DWORD *)(a30 - 0x7EBD21DF175318FFLL);
  v45 = 19382863 * ((2 * ((v42 - 176) & 0x49B51838) - (v42 - 176) + 910878657) ^ 0x3E8F6B1F);
  *(_WORD *)(v42 - 156) = (-15793 * ((2 * ((v42 - 176) & 0x1838) - (v42 - 176) - 6207) ^ 0x6B1F)) ^ 0x259;
  *(_DWORD *)(v42 - 168) = v40 - v45 + 6758;
  *(_DWORD *)(v42 - 164) = v45 + 731127395 * v44 + 1589594740;
  *(_QWORD *)(v41 + 1728) = v43;
  *(_QWORD *)(v41 + 1696) = a16;
  *(_DWORD *)(v42 - 152) = v45 - 1191482646;
  v46 = a8(v42 - 176);
  v47 = *(_DWORD *)(v42 - 160) == 381450761;
  LODWORD(STACK[0x380]) = STACK[0x280];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40 + 8 * ((v47 * ((v40 + 15289) ^ 0x766D)) ^ v40)) - 8))(v46);
}

uint64_t sub_1000A6CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  uint64_t v29;

  return ((uint64_t (*)(void))(*(_QWORD *)(v29
                                        + 8
                                        * ((((v28 ^ 0x3BBC) - 21300) * (a28 == 0x4F421AC90127A1A3)) ^ v28 ^ 0xF822))
                            - (((v28 ^ 0xF822u) - 31251) ^ 0x160DLL)))();
}

uint64_t sub_1000A6D20@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  *(_DWORD *)(a9 - 0x7D46CEFC17F01113) = 2134650450;
  LODWORD(STACK[0x380]) = STACK[0x280];
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * a1) - ((a1 - 513563208) & 0x1E9C6EFB ^ 0x683ELL)))();
}

uint64_t sub_1000A6D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;

  *(_QWORD *)(v42 + 360) = v40 - 0x4F421AC90127A1A3;
  v45 = *(_DWORD *)(v40 - 0x4F421AC90127A1A3);
  v46 = (v43 - 176) | 0x3BD0558CD957B7ADLL;
  *(_QWORD *)(v42 + 1712) = 842727511
                          * ((((v43 - 176) | 0xC42FAA7326A84852) - v46 + 0x3BD0558CD957B7ADLL) ^ 0x65C2016A11AA2F0FLL)
                          + *(_QWORD *)(v44 + 8 * v41)
                          - 8;
  *(_DWORD *)(v43 - 176) = v45 - 842727511 * ((((v43 - 176) | 0x26A84852) - v46 - 648562771) ^ 0x11AA2F0F) - 716334612;
  *(_DWORD *)(v43 - 168) = 842727511 * ((((v43 - 176) | 0x26A84852) - v46 - 648562771) ^ 0x11AA2F0F) + v41 + 1684810920;
  v47 = ((uint64_t (*)(uint64_t))((char *)*(&off_10112C750 + (v41 ^ 0x756)) - 115399367))(v43 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40
                                                      + 8
                                                      * (v41 ^ 0x9C97 ^ (67
                                                                       * (((((*(_BYTE *)(v43 - 172)
                                                                                             - (v41 ^ 0x7B)) | ((v41 ^ 0x7B) - *(_BYTE *)(v43 - 172))) >> (((v41 - 85) | 0x42) ^ 0xB5)) & 1) == 0))))
                                          - 4))(v47);
}

uint64_t sub_1000A6EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  unint64_t v47;
  uint64_t v48;
  int v49;

  v46 = **(_DWORD **)(v43 + 360);
  v47 = 842727511
      * (((v42 | 0x5C7C69933177B39ALL) - (v42 | 0xA383966CCE884C65) - 0x5C7C69933177B39BLL) ^ 0xFD91C28A0675D4C7);
  *(_QWORD *)(v43 + 1712) = *(_QWORD *)(v45 + 8 * v40)
                          + v47
                          + ((((_DWORD)v40 + 67669134) | 0x1245448u) ^ 0xFFFFFFFFFAD30930);
  *(_DWORD *)(v44 - 168) = v47 + 1684810920 + v40 + 19;
  *(_DWORD *)(v44 - 176) = v46 - v47 - 459640614;
  v48 = v41(v44 - 176);
  v49 = *(unsigned __int8 *)(v44 - 172);
  LODWORD(STACK[0x380]) = STACK[0x280];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40
                                                      + 8
                                                      * (int)(v40 ^ 0x3973 ^ (27159
                                                                            * (((v40 - 120) ^ (((v49 - (v40 ^ 0xFFFFFFAE)) | ((v40 ^ 0xFFFFFFAE) - v49)) >> 7)) & 1))))
                                          - 8))(v48);
}

uint64_t sub_1000A6FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v21;

  v19 = **(_DWORD **)(v17 + 360);
  if (v19 == 2134650515 || v19 == 2134650505)
    v21 = 4;
  else
    v21 = 3;
  *(_DWORD *)(a16 - 0x7D46CEFC17F01113) = v21 + 2134650450;
  LODWORD(STACK[0x380]) = STACK[0x280];
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * (int)((30094 * (v16 > 0xE85F8040)) ^ (v16 - 86821447))) - 8))();
}

uint64_t sub_1000A7068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  uint64_t v17;
  uint64_t v18;

  *(_DWORD *)(a16 - 0x7D46CEFC17F01113) = 2134650451;
  LODWORD(STACK[0x380]) = STACK[0x280];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * ((((6 * ((v16 + 787222859) ^ 0x2EEC360F)) ^ 0x55DA) * ((v16 + 787222859) > 0x21AE2AD4)) ^ (v16 - 1188))) - 8))(a1, a2, a3, a4, a5, a6, a7, v17);
}

uint64_t sub_1000A70F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44)
{
  int v44;
  uint64_t v45;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v45
                                                                                         + 8
                                                                                         * (((a44 == 41)
                                                                                           * (v44 ^ 0x302FB6A6 ^ (v44 - 75524431) & 0x34AFDFF7)) ^ v44))
                                                                             - 8))(a1, a2, a3, a4, LODWORD(STACK[0x380]));
}

void sub_1000A7158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  *(_DWORD *)(v5 + 12) = a5;
}

uint64_t sub_1000A719C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unsigned int a46,int a47,int a48,uint64_t a49,uint64_t a50,int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61)
{
  int v61;
  uint64_t v62;
  unint64_t v63;
  unsigned int v64;
  int v65;
  uint64_t v66;
  int v67;
  BOOL v68;
  int v69;
  int v70;
  int v71;

  v63 = (unint64_t)a46 >> 2;
  v64 = *(_DWORD *)(a44 + 4 * ((0x9F824282 % v63) & 0x3FFFFFFC));
  LOWORD(v65) = ~(unsigned __int16)(v64 >> (a39 + 45)) & ~*(_WORD *)(a44 + 4 * ((v63 - 1) & (unsigned __int16)v64));
  v66 = *a17;
  v67 = *(_DWORD *)(a15 + 4 * v66);
  v65 = (unsigned __int16)v65;
  v68 = (unsigned __int16)v65 == 0;
  v69 = v65 + v65 * v67;
  v70 = v68;
  if (v68)
    v71 = *(_DWORD *)(a15 + 4 * v66);
  else
    v71 = 0;
  *(_DWORD *)(a15 + 4 * v66) = (v71 + v69) * v67;
  *a17 = ((int)v66 + 1) % 6u;
  LODWORD(STACK[0x340]) = a48;
  LODWORD(STACK[0x344]) = a61;
  LODWORD(STACK[0x34C]) = a51;
  LODWORD(STACK[0x350]) = a48;
  LODWORD(STACK[0x354]) = v61;
  return (*(uint64_t (**)(void))(v62 + 8 * ((23838 * v70) ^ (a39 - 808436333))))();
}

uint64_t sub_1000A7290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  _BOOL4 v68;

  v64 = STACK[0x340];
  v65 = ((a9 + 808436333) ^ 0x1A87C412) + LODWORD(STACK[0x344]);
  v66 = a62 + LODWORD(STACK[0x340]);
  v67 = (v65 < 0x416494FA) ^ (v66 < 0x416494FA);
  v68 = v65 < v66;
  if (v67)
    v68 = v66 < 0x416494FA;
  LODWORD(STACK[0x34C]) = STACK[0x344];
  LODWORD(STACK[0x350]) = v64;
  LODWORD(STACK[0x354]) = v62;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 8 * ((v68 * ((a9 ^ 0x122B) + 15360)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_1000A7324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61)
{
  int v61;
  uint64_t v62;

  LODWORD(STACK[0x330]) = a61;
  return ((uint64_t (*)(void))(*(_QWORD *)(v62 + 8 * (v61 ^ 0x5462)) - (v61 + 8138) + 11807))();
}

uint64_t sub_1000A73A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  uint64_t v46;

  return (*(uint64_t (**)(void))(v46
                              + 8
                              * (((a46 + LODWORD(STACK[0x284]) == -2143127178)
                                * ((a39 + 1691590556) & 0x6AFC85E7 ^ 0x74A5)) ^ (a39 - 808430683))))();
}

uint64_t sub_1000A7410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44)
{
  int v44;
  uint64_t v45;

  return ((uint64_t (*)(void))(*(_QWORD *)(v45 + 8 * (((a44 == 41) * ((v44 ^ 0x688C) - 8226)) ^ v44)) - 4))();
}

uint64_t sub_1000A7448@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((((v1 + 20440) ^ 0x7E1C) - 7273 + ((v1 + 708505223) & 0xD5C4FF77)) * a1) ^ (v1 + 20440)))
                            - 4))();
}

uint64_t sub_1000A74A0()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x68F6)) - 8))();
}

uint64_t sub_1000A74F4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x688D)) - ((v0 - 608706156) & 0xB75CF5B5) + 2467620233))();
}

uint64_t sub_1000A7548@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0x348]) = v1;
  *(_QWORD *)(v4 + 192) = a1;
  return (*(uint64_t (**)(void))(v5
                              + 8 * (int)(v3 ^ 0x9314F826 ^ ((v3 != 396527411) * ((v3 - 1659176622) ^ (v2 + 535))))))();
}

uint64_t sub_1000A7590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,int a52)
{
  char v52;
  uint64_t v53;
  BOOL v54;

  v54 = a46 - 2147319647 == LODWORD(STACK[0x288]);
  LODWORD(STACK[0x34C]) = a52;
  LODWORD(STACK[0x350]) = a51;
  LODWORD(STACK[0x354]) = a52;
  return (*(uint64_t (**)(void))(v53
                              + 8 * ((12030 * (((a39 - v52 + 103) ^ v54) & 1)) ^ (a39 - 808436333))))();
}

uint64_t sub_1000A75F8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,int a43,int a44)
{
  uint64_t v44;
  uint64_t v45;

  *(_QWORD *)(v44 + 200) = *(_QWORD *)(v45 + 8 * a1) - 12;
  LODWORD(STACK[0x358]) = a44;
  LODWORD(STACK[0x35C]) = a43;
  return ((uint64_t (*)(void))(*(_QWORD *)(v45 + 8 * (a1 ^ 0x5DAA)) - ((a1 + 2478) ^ 0xE11)))();
}

uint64_t sub_1000A7634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  int v45;
  uint64_t v46;

  LODWORD(STACK[0x360]) = v44;
  LODWORD(STACK[0x330]) = STACK[0x358];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 + 8 * (v45 ^ 0x37C8 ^ (25570 * ((v45 + 582899610) < 0xB76DB7C3)))) - (v45 + 8210) + 11807))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_1000A76BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  int v46;
  int v47;
  uint64_t v48;

  LODWORD(STACK[0x334]) = v47;
  LODWORD(STACK[0x338]) = v45;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * v46))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_1000A775C@<X0>(_QWORD *a1@<X5>, uint64_t a2@<X6>, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,_DWORD *a52)
{
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;

  LODWORD(STACK[0x33C]) = v52;
  v57 = v52 + v53;
  v58 = *(_DWORD *)(*a1 + (*a30 & v56));
  v59 = *(unsigned __int8 *)(((unint64_t)(((((v58 ^ (*a52 + v57 + 1)) & 0x7FFFFFFF) * (_DWORD)a2) ^ ((((v58 ^ (*a52 + v57 + 1)) & 0x7FFFFFFF) * a2) >> 16))
                                               * a2) >> 24)
                           + a33
                           + 4);
  v60 = *(_QWORD *)a52 + (v57 + 2);
  v61 = ((((v58 ^ v60) & 0x7FFFFFFF) * (_DWORD)a2) ^ ((((v58 ^ v60) & 0x7FFFFFFF)
                                                                   * a2) >> 16))
      * a2;
  return a3(*(unsigned __int8 *)((v61 >> 24) + a33 + 4), *(unsigned __int8 *)(v60 - 0x6CA6F0EE111A2BB6), *(unsigned __int8 *)(v54 + (v61 >> 24)), *(unsigned __int8 *)(v55 + (v61 >> 24)), v59, a1, a2, a33, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1000A7908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t (*a52)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return a52(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1000A7920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,uint64_t a48,int a49,int a50,int a51)
{
  uint64_t v51;

  LODWORD(STACK[0x340]) = a50;
  LODWORD(STACK[0x344]) = a39 - 808436333 + a51 + a47 - 2134657736;
  return (*(uint64_t (**)(void))(v51 + 8 * (a39 - 808426875)))();
}

uint64_t sub_1000A7974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,int a52)
{
  int v52;
  uint64_t v53;
  _BOOL4 v54;

  v54 = a46 - 2147319647 != LODWORD(STACK[0x288]);
  LODWORD(STACK[0x34C]) = a52;
  LODWORD(STACK[0x350]) = a51;
  LODWORD(STACK[0x354]) = a52;
  return (*(uint64_t (**)(void))(v53 + 8 * ((v54 * (a39 ^ (v52 - 1119) ^ 0x2A99)) ^ (a39 - 808436333))))();
}

uint64_t sub_1000A79D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t (*a58)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  LODWORD(a49) = STACK[0x34C];
  return a58(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_1000A79F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  int v63;
  uint64_t v64;

  LODWORD(STACK[0x4A0]) = 2134608446;
  return (*(uint64_t (**)(void))(v64 + 8 * (((a62 != a3) * (v62 + v63 + 40873)) ^ (v63 - 808437771))))();
}

uint64_t sub_1000A7A44@<X0>(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58,int a59)
{
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;

  v60 = a2 + 3482;
  v61 = (v60 + 12632);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(v59 + 8 * v60);
  LODWORD(STACK[0x4A4]) = a44;
  *(_QWORD *)(a1 + 288) = a46;
  LODWORD(STACK[0x4A8]) = a43;
  LODWORD(STACK[0x4AC]) = a51;
  LODWORD(STACK[0x4B0]) = a59;
  v62 = *(_QWORD *)(v59 + 8 * (v60 ^ 0x8B5B));
  LODWORD(STACK[0x4B4]) = a58;
  return ((uint64_t (*)(uint64_t))(v62 - v61 + 16102))(381450761);
}

uint64_t sub_1000A7ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, _QWORD *a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,__int16 a63)
{
  unsigned __int8 a65;
  int v65;
  int v66;
  uint64_t v67;
  int v68;
  int v69;
  int v70;
  uint64_t v71;
  int v72;

  LODWORD(STACK[0x33C]) = v65;
  LODWORD(STACK[0x328]) = v66;
  LODWORD(STACK[0x32C]) = STACK[0x4B4];
  v68 = STACK[0x4B0];
  LODWORD(STACK[0x2AC]) = STACK[0x4B0];
  v69 = STACK[0x4AC];
  LODWORD(STACK[0x2BC]) = STACK[0x4AC];
  v70 = STACK[0x4A8];
  LODWORD(STACK[0x2CC]) = STACK[0x4A8];
  v71 = a7[36];
  a7[45] = v71;
  v72 = STACK[0x4A4];
  LODWORD(STACK[0x280]) = STACK[0x4A4];
  LODWORD(STACK[0x380]) = v72;
  a7[40] = v71;
  LODWORD(STACK[0x384]) = v70;
  LODWORD(STACK[0x388]) = v69;
  LODWORD(STACK[0x38C]) = v68;
  LODWORD(STACK[0x390]) = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 8 * (int)((a65 * (((a8 + 1979695369) & 0xBA2FDEE7) + ((a8 + 11166) ^ 0xCFD04993))) ^ a8)))(a1, a2, 381450761, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1000A7B6C()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*v1 == 0x6CA6F0EE111A2BB6)
                                * ((((v0 - 405367931) & 0x182973FF) + 22366) ^ (v0 - 11132))) ^ v0)))();
}

uint64_t sub_1000A7BC4@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 360);
  v4 = **(_QWORD **)(a1 + 352);
  LODWORD(STACK[0x380]) = STACK[0x280];
  *(_QWORD *)(a1 + 320) = v3;
  LODWORD(STACK[0x384]) = STACK[0x2CC];
  LODWORD(STACK[0x388]) = STACK[0x2BC];
  LODWORD(STACK[0x38C]) = STACK[0x2AC];
  return (*(uint64_t (**)(void))(v2 + 8 * (((v4 != 0x7C0ADF1C3D95FE54) * (((a2 - 7952) | 0x5211) - 7313)) ^ a2)))();
}

uint64_t sub_1000A7C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t (*a31)(uint64_t),uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  int v45;

  v42 = STACK[0x33C];
  v43 = 1130658149 * ((-416379019 - ((v41 - 176) | 0xE72E8F75) + ((v41 - 176) | 0x18D1708A)) ^ 0xD5EDC947);
  *(_QWORD *)(a8 + 1712) = *(_QWORD *)(a8 + 344);
  *(_DWORD *)(v41 - 172) = v43 + v40 - 5457;
  *(_DWORD *)(v41 - 168) = v42 - v43;
  v44 = a31(v41 - 176);
  v45 = *(_DWORD *)(v41 - 176);
  LODWORD(STACK[0x284]) = v45;
  LODWORD(STACK[0x370]) = STACK[0x280];
  STACK[0x2E8] = STACK[0x318];
  LODWORD(STACK[0x374]) = 381450761;
  LODWORD(STACK[0x378]) = STACK[0x2BC];
  LODWORD(STACK[0x37C]) = STACK[0x2AC];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40
                                                      + 8
                                                      * ((8 * (v45 == ((v40 - 13057) ^ 0x16BC451D))) | (32 * (v45 == ((v40 - 13057) ^ 0x16BC451D))) | v40))
                                          - ((v40 - 1929331250) & 0x72FEDFBF ^ 0xFA7)))(v44);
}

uint64_t sub_1000A7D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;

  LODWORD(STACK[0x4B8]) = STACK[0x280];
  *(_QWORD *)(a8 + 296) = *(_QWORD *)(a8 + 360);
  LODWORD(STACK[0x4BC]) = STACK[0x284];
  LODWORD(STACK[0x4C0]) = STACK[0x2BC];
  LODWORD(STACK[0x4C4]) = v8;
  LODWORD(STACK[0x498]) = STACK[0x2AC];
  return (*(uint64_t (**)(void))(v9 + 8 * (v8 - 12889 + v8 + 19578)))();
}

uint64_t sub_1000A7D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;

  return ((uint64_t (*)(void))(*(_QWORD *)(v63 + 8
                                              * ((7 * (a62 != (v62 ^ 0x302FC827) + 381444933)) ^ (v62 - 808406368)))
                            - 12))();
}

uint64_t sub_1000A7DDC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,__int16 a48,char a49,unsigned __int8 a50)
{
  char v50;
  uint64_t v51;

  LODWORD(STACK[0x4A0]) = 2134608446;
  return (*(uint64_t (**)(void))(v51
                              + 8
                              * ((((a50 ^ (a1 ^ (v50 - 110))) & 1) * ((55 * (a1 ^ 0x161D)) ^ 0xBAB4)) ^ a1)))();
}

uint64_t sub_1000A7E30()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*v1 == 0x6CA6F0EE111A2BB6) * (((v0 - 4987) ^ 0xFFFFF6B0) + (v0 ^ 0x4E2B))) ^ v0)))();
}

uint64_t sub_1000A7E78@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((15499 * (**(_QWORD **)(a1 + 352) != 0x7C0ADF1C3D95FE54)) ^ a2)))();
}

uint64_t sub_1000A7ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t (*a31)(uint64_t),uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  int v63;
  int v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  int v69;

  v66 = v64 ^ (v62 - 541);
  v67 = 1130658149 * ((v65 - 692445521 - 2 * ((v65 - 176) & 0xD6BA1F5F)) ^ 0x1B86A692);
  *(_QWORD *)(a8 + 1712) = *(_QWORD *)(a8 + 344);
  *(_DWORD *)(v65 - 172) = v67 + v64 - 1972;
  *(_DWORD *)(v65 - 168) = a62 - v67;
  v68 = a31(v65 - 176);
  v69 = *(_DWORD *)(v65 - 176);
  LODWORD(STACK[0x338]) = v69;
  LODWORD(STACK[0x4A0]) = 2134608446;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a40
                                                      + 8
                                                      * (((v69 == (v64 ^ 0x72A0 ^ (v63 + 2464))) * (v66 ^ 0x302FDEE7)) ^ v64))
                                          - 4))(v68);
}

uint64_t sub_1000A7FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,_QWORD *a41)
{
  _DWORD *v41;
  int v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;

  v45 = ((2 * (LODWORD(STACK[0x338]) - 381450747)) & 0xFACFDFFC)
      + 43520002
      + ((LODWORD(STACK[0x338]) - 381450747) ^ (v42 - 851969469 + ((v42 + 2054154259) & 0xB5BFDFF7)));
  v46 = *v43 + v45;
  v47 = *(unsigned __int8 *)(v46 - 0x6CA6F0EE111A2BB6);
  v48 = *(_DWORD *)(*a41 + (int)(*v41 & 0x91FF5B7C));
  v49 = -8231943
      * ((-8231943 * ((v46 ^ v48) & 0x7FFFFFFF)) ^ ((-8231943 * ((v46 ^ v48) & 0x7FFFFFFF)) >> 16));
  v50 = *v43 + (v45 + 1);
  LOBYTE(v45) = *(_BYTE *)(v50 - 0x6CA6F0EE111A2BB6);
  v51 = -8231943
      * ((-8231943 * ((v50 ^ v48) & 0x7FFFFFFF)) ^ ((-8231943 * ((v50 ^ v48) & 0x7FFFFFFF)) >> 16));
  LODWORD(v51) = (*(_BYTE *)(a6 + (v51 >> 24)) ^ v45 ^ *(_BYTE *)(a4 + (v51 >> 24) + 2) ^ *(_BYTE *)(a5 + (v51 >> 24) + 2) ^ v51 ^ (-79 * BYTE3(v51))) | ((*(unsigned __int8 *)(a6 + (v49 >> 24)) ^ v47 ^ *(unsigned __int8 *)(a4 + (v49 >> 24) + 2) ^ *(unsigned __int8 *)(a5 + (v49 >> 24) + 2) ^ v49 ^ (-79 * (v49 >> 24))) << 8);
  return (*(uint64_t (**)(void))(v44
                              + 8
                              * ((16828 * ((unsigned __int16)(((2 * v51) & 0xD68E) + (v51 ^ 0xEB47)) == 60231)) ^ v42)))();
}

uint64_t sub_1000A8108@<X0>(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57)
{
  uint64_t v57;

  LODWORD(STACK[0x4B8]) = STACK[0x338];
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a1 + 344);
  LODWORD(STACK[0x4BC]) = a43;
  LODWORD(STACK[0x4C0]) = a50;
  LODWORD(STACK[0x4C4]) = a2;
  LODWORD(STACK[0x498]) = a57;
  return (*(uint64_t (**)(void))(v57 + 8 * (a2 ^ 0x6AC9 ^ (a2 + 19562))))();
}

uint64_t sub_1000A8150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;

  LODWORD(STACK[0x49C]) = v5;
  v8 = STACK[0x4C0];
  v9 = STACK[0x4BC];
  LODWORD(STACK[0x288]) = STACK[0x4BC];
  v10 = STACK[0x4B8];
  LODWORD(STACK[0x28C]) = STACK[0x4B8];
  LODWORD(STACK[0x290]) = ((v10 - 381450741) ^ 0x1F7EFDBF) - 5392965 + ((2 * (v10 - 381450741)) & 0x3EFDFB7E) + 321;
  LODWORD(STACK[0x294]) = v9 + (((v6 - 22103) | 0x838) ^ 0xDEA);
  LODWORD(STACK[0x340]) = v8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * v6))(a1, a2, a3, a4, a5, 808434872);
}

uint64_t sub_1000A8240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  unsigned int v45;
  uint64_t v46;
  int v47;

  v44 = 43222221 * LODWORD(STACK[0x32C]) - 222792285;
  v45 = v40
      + 808437791
      + (LODWORD(STACK[0x330]) ^ 0x8376EE81)
      - 1077796867
      + ((2 * LODWORD(STACK[0x330])) & 0x23FE6E6A ^ 0x21122268);
  a8[108] = *(_QWORD *)(v43 + 8 * v40);
  a8[110] = (unint64_t)&STACK[0x298] ^ 0xB89F8D249C9A326ALL;
  a8[111] = v41;
  LODWORD(STACK[0x538]) = v44;
  LODWORD(STACK[0x53C]) = -1941543898;
  LODWORD(STACK[0x540]) = v45;
  LOWORD(STACK[0x544]) = 17293;
  LODWORD(STACK[0x548]) = 1887349813;
  a8[112] = &STACK[0x394];
  a8[116] = 0x669D1D41D800F4E6;
  *(_DWORD *)(v42 - 160) = v40 - 1891100677 * ((v42 - 176) ^ 0x6C082190) - 1745993905;
  a8[213] = &STACK[0x510];
  v46 = ((uint64_t (*)(uint64_t))((char *)*(&off_10112C750 + v40 - 4618) - 2077931342))(v42 - 176);
  v47 = *(_DWORD *)(v42 - 176);
  *(_DWORD *)STACK[0x300] = STACK[0x32C];
  LODWORD(STACK[0x4A0]) = v47;
  return (*(uint64_t (**)(uint64_t))(a40 + 8 * (v40 ^ (15124 * ((v40 ^ 0x8B394AF8) < 0x6C5C323D)) ^ 0x1C)))(v46);
}

uint64_t sub_1000A83BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  uint64_t v46;

  LODWORD(STACK[0x4A0]) = 2134608446;
  return (*(uint64_t (**)(void))(v46
                              + 8
                              * ((a39 - 808440041) ^ (a39 - 808443615) ^ 0x1B26 ^ (450
                                                                                 * ((((a46 - 2147319667) ^ ~(a39 - 808443615)) & (a46 - 2147319667 - (a39 - 808443615)) | (a39 - 808443615) & ~(a46 - 2147319667)) >= 0)))))();
}

uint64_t sub_1000A8438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  int v58;
  uint64_t v59;
  uint64_t v60;

  v60 = *(_QWORD *)(v59 + 8 * v58) - 8;
  *(_QWORD *)(a8 + 304) = a58;
  LODWORD(STACK[0x36C]) = STACK[0x290];
  *(_QWORD *)(a8 + 200) = v60;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * (((v58 ^ 0x302FD319) - 808423323) ^ v58))
                                                                                       - 8))(a1, a2, a3, a4, a5, 808434872);
}

uint64_t sub_1000A84B0@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 - 808414611)) - 4))();
}

uint64_t sub_1000A84D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  uint64_t v46;
  _BOOL4 v47;

  v47 = a46 - 2147319647 == LODWORD(STACK[0x360]);
  LODWORD(STACK[0x4A0]) = 2134608446;
  return (*(uint64_t (**)(void))(v46 + 8 * ((18735 * v47) ^ (a39 - 808437771))))();
}

uint64_t sub_1000A8530@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  uint64_t v2;

  **(_DWORD **)(a1 + 336) = STACK[0x32C];
  LODWORD(STACK[0x4A0]) = 2134650450;
  return (*(uint64_t (**)(void))(v2 + 8 * a2))();
}

uint64_t sub_1000A8558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 + 8 * (v4 - 808435715))
                                                                             - 4))(a1, a2, a3, a4, LODWORD(STACK[0x4A0]));
}

uint64_t sub_1000A8574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;
  unint64_t v52;
  unsigned int v53;
  uint64_t v54;
  int v55;
  BOOL v56;
  int v57;
  int v58;
  int v59;

  v52 = (unint64_t)a46 >> ((a39 + 90) ^ 0x3F);
  v53 = *(_DWORD *)(a44 + 4 * ((0x9F824282 % v52) & 0x3FFFFFFC));
  v54 = *a17;
  v55 = *(_DWORD *)(a15 + 4 * v54);
  LODWORD(v52) = ~*(unsigned __int16 *)(a44 + 4
                                            * (((_DWORD)v52 + 0xFFFF) & (((_DWORD)a39 - 808427471) ^ 0xC0EB) & v53)) & (~v53 >> 16);
  v56 = (_DWORD)v52 == 0;
  v57 = v52 + v52 * v55;
  v58 = !v56;
  if (v56)
    v59 = *(_DWORD *)(a15 + 4 * v54);
  else
    v59 = 0;
  *(_DWORD *)(a15 + 4 * v54) = (v59 + v57) * v55;
  *a17 = ((int)v54 + 1) % 6u;
  LODWORD(STACK[0x364]) = HIDWORD(a45) - 12669197;
  LODWORD(STACK[0x368]) = STACK[0x294];
  return (*(uint64_t (**)(unsigned int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * ((35 * v58) ^ ((int)a39 - 808431300))))(a17, a15, a3, a4, a5, a6, a32, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_1000A8680@<X0>(int a1@<W2>, uint64_t a2@<X7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55)
{
  uint64_t v55;

  LODWORD(STACK[0x380]) = STACK[0x28C];
  *(_QWORD *)(a2 + 320) = a52;
  LODWORD(STACK[0x384]) = STACK[0x288];
  LODWORD(STACK[0x388]) = a55;
  LODWORD(STACK[0x38C]) = a45;
  LODWORD(STACK[0x390]) = a1;
  return (*(uint64_t (**)(void))(v55 + 8 * a3))();
}

uint64_t sub_1000A86C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60)
{
  int v60;
  uint64_t v61;
  int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  _BOOL4 v67;

  v62 = STACK[0x368];
  v63 = STACK[0x364];
  v64 = LODWORD(STACK[0x368]) + 875342321;
  v65 = a60 + LODWORD(STACK[0x364]);
  v66 = (v64 < 0x4AE923FA) ^ (v65 < 0x4AE923FA);
  v67 = v64 < v65;
  if (v66)
    v67 = v65 < 0x4AE923FA;
  LODWORD(STACK[0x370]) = STACK[0x28C];
  *(_QWORD *)(a8 + 312) = a57;
  LODWORD(STACK[0x374]) = STACK[0x288];
  LODWORD(STACK[0x378]) = v63;
  LODWORD(STACK[0x37C]) = v62;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 + 8 * ((v67 * ((((v60 - 483160646) & 0x1CCC3F1C) + 41632) ^ (v60 - 1374610046) & 0x51EE7E5A)) ^ v60)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_1000A8784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59)
{
  uint64_t v59;

  LODWORD(STACK[0x34C]) = a59;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * (a6 + 4861))
                                                                                       - 8))(a1, a2, a3, a4, a5, 808434872);
}

uint64_t sub_1000A881C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;

  v10 = STACK[0x37C];
  v11 = STACK[0x378];
  v12 = STACK[0x374];
  v13 = *(_QWORD *)(a8 + 312);
  LODWORD(STACK[0x380]) = STACK[0x370];
  *(_QWORD *)(a8 + 320) = v13;
  LODWORD(STACK[0x384]) = v12;
  LODWORD(STACK[0x388]) = v11;
  LODWORD(STACK[0x38C]) = v10;
  LODWORD(STACK[0x390]) = 381450761;
  return (*(uint64_t (**)(void))(v9 + 8 * v8))();
}

uint64_t sub_1000A8868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  uint64_t v46;

  return (*(uint64_t (**)(void))(v46 + 8 * ((16831 * (a46 - LODWORD(STACK[0x328]) != 1063895918)) ^ (a39 - 808434924))))();
}

uint64_t sub_1000A88D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  uint64_t v46;

  return (*(uint64_t (**)(void))(v46
                              + 8
                              * (((((a39 - 816844584) & 0x803FED ^ 0x80028F08) + a46 == LODWORD(STACK[0x334]))
                                * (a39 ^ 0x302FDEF3)) ^ (a39 - 808418971))))();
}

uint64_t sub_1000A894C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v56;

  LODWORD(STACK[0x380]) = STACK[0x28C];
  *(_QWORD *)(a5 + 320) = a56;
  LODWORD(STACK[0x384]) = STACK[0x288];
  LODWORD(STACK[0x388]) = a49;
  LODWORD(STACK[0x38C]) = a48;
  LODWORD(STACK[0x390]) = a48;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * a6))(a1, a2, 381450761, a3, a28, a4, a30);
}

uint64_t sub_1000A899C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t (*a56)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))
{
  uint64_t v57;

  LODWORD(v57) = STACK[0x384];
  HIDWORD(v57) = STACK[0x380];
  return a56(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           v57,
           a50,
           *(_QWORD *)(a8 + 320),
           a52,
           a53);
}

uint64_t sub_1000A89D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  uint64_t v46;

  return (*(uint64_t (**)(void))(v46
                              + 8
                              * ((a39 - 808418971) ^ (16
                                                    * (a46
                                                     + ((a39 - 367239055) & 0xE5B3FFBF)
                                                     - 2147339804
                                                     + 211 * (a39 ^ 0x302FDEF0) == LODWORD(STACK[0x334]))))))();
}

uint64_t sub_1000A8A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  int v51;
  uint64_t v52;

  LODWORD(STACK[0x340]) = a51;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8 * (v51 + 19572)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_1000A8A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  int v46;
  uint64_t v47;

  LODWORD(STACK[0x344]) = v45;
  LODWORD(STACK[0x348]) = v46;
  LODWORD(STACK[0x34C]) = STACK[0x340];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 + 8 * (a9 + 4889)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_1000A8AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v43;
  int v44;
  int v45;
  uint64_t v46;

  LODWORD(STACK[0x350]) = v43;
  LODWORD(STACK[0x354]) = v44;
  LODWORD(STACK[0x358]) = a9;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 + 8 * v45) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1000A8B74@<X0>(uint64_t a1@<X5>, uint64_t a2@<X7>, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t *v37;
  int v38;
  _DWORD *v39;
  _QWORD *v40;
  int v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;

  *(_QWORD *)(a2 + 328) = v37;
  LODWORD(STACK[0x35C]) = v38;
  v46 = *v37;
  v47 = v38 + v41;
  v48 = *(_DWORD *)(*v40 + (*v39 & v44));
  v49 = *(unsigned __int8 *)(((unint64_t)(((((v48 ^ ((_DWORD)v46 + v47 + 1)) & 0x7FFFFFFF) * v43) ^ ((((v48 ^ ((_DWORD)v46 + v47 + 1)) & 0x7FFFFFFFu) * v43) >> 16))
                                               * v43) >> 24)
                           + v45
                           + 4);
  v50 = v46 + (v47 + 2);
  v51 = ((((v48 ^ v50) & 0x7FFFFFFF) * v43) ^ ((((v48 ^ v50) & 0x7FFFFFFF) * v43) >> 16))
      * v43;
  return a3(*(unsigned __int8 *)((v51 >> 24) + v45 + 4), *(unsigned __int8 *)(v50 - 0x6CA6F0EE111A2BB6), *(unsigned __int8 *)(a37 + (v51 >> 24)), *(unsigned __int8 *)(v42 + (v51 >> 24)), v49, a1, a37, a2, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1000A8D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t (*a52)(uint64_t, uint64_t, uint64_t))
{
  return a52(a1, a2, 381450761);
}

uint64_t sub_1000A8D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52)
{
  uint64_t v52;

  LODWORD(STACK[0x364]) = a52;
  LODWORD(STACK[0x368]) = a46 + a51 + ((5849 * (a39 ^ 0x302FDEE6)) ^ 0x8002F29C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52
                                                                                                  + 8 * (a39 - 808431300)))(a1, a2, a3, a4, a5, a6, a32);
}

void sub_1000A8D8C(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1000A8EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  BOOL v43;
  unsigned int v44;
  unsigned int v45;

  v42 = *(_DWORD *)(v41 - 0x61EB587DDF0B8AA3);
  v44 = v42 - 440910327;
  v43 = v42 - 440910327 < 0;
  v45 = 440910327 - v42;
  if (!v43)
    v45 = v44;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * ((95 * ((a7 - 1975649305) < 4 * (unint64_t)v45)) ^ (v39 - 511836627))) - ((v39 + 1498962864) & 0xFDE72DF9 ^ 0x75C20411)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_1000A8F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  uint64_t v39;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * (int)((((((_DWORD)a7 - v38) | (v38 - a7)) >> 31) * ((v38 ^ 0x75C2602E) + 31953)) ^ (v38 - 1975632270))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1000A8FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  LODWORD(a48) = ((v48 - 13303) ^ 0x56819BE5) + HIDWORD(a47);
  HIBYTE(a48) = HIDWORD(a47) > 0x297E545A;
  HIDWORD(a43) = 650382190;
  LODWORD(a45) = 724264037;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * v48) - 8))(a1, 3598822309, 25658, 2928413253, a5, a6, a7, 833184, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           v51,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a7 | 0xAE8C0A4500000000,
           a45,
           a46,
           a47,
           a48,
           v50 - 0x61EB587DDF0B8A9FLL);
}

uint64_t sub_1000A90B4@<X0>(int a1@<W3>, int a2@<W6>, int a3@<W7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  unsigned int v38;
  char v39;
  uint64_t v40;
  int v41;
  int v42;
  char v43;
  int v44;
  int v45;

  *(_BYTE *)(a38 + (a2 + a4)) = (a1 ^ v38) >> (v43 + v39);
  return ((uint64_t (*)(void))(*(_QWORD *)(v40 + 8 * (((a2 + v41 + (a3 ^ (32 * v45)) == v42) * v44) ^ v45)) - 8))();
}

uint64_t sub_1000A9108()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  return (*(uint64_t (**)(void))(v4 + 8 * (((v5 == ((v0 + v1) ^ v2)) * v3) ^ v0)))();
}

uint64_t sub_1000A9128(uint64_t a1, int a2, int a3)
{
  int v3;
  _BOOL4 v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  _BOOL4 v9;

  v9 = v6 + 727074624 < v3;
  if (v4 != v6 + 727074624 < a2)
    v9 = v4;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 ^ a3) * v9) ^ v5)))();
}

uint64_t sub_1000A9174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  _QWORD *v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, _QWORD))(v6 + 8 * v3))(0xBDD039AA39DBCF77, a2, a3, *(unsigned int *)(*v4 + 4 * (int)(v5 - 724289692 + ((v3 + 1670757367) & 0x9C6A77FF)) - 0x422FC655C6243089));
}

uint64_t sub_1000A91C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  signed int v43;

  v43 = ((3407 * (v39 ^ (v42 + 2500))) ^ 0xE5B87C82) + *(_DWORD *)(v41 - 0x61EB587DDF0B8AA3);
  if (v43 < 0)
    v43 = -v43;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * ((56 * ((a7 - 176568873) >= 4 * (unint64_t)v43)) ^ (v39 - 511832030))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_1000A9250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  int v40;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * (int)((((_DWORD)a7 != a9 + 176551838) * ((a9 + 1603483876) & 0xBEEEFEFF ^ (v40 + 3790))) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_1000A9298@<X0>(int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;
  uint64_t v43;

  LODWORD(a42) = HIDWORD(a41) + 1636090501;
  HIBYTE(a42) = HIDWORD(a41) > 0x1E7B3D7A;
  HIDWORD(a37) = a1;
  LODWORD(a39) = -1366554043;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * (a2 - 1856)) - ((2 * (a2 - 1856)) ^ 0x769ALL)))(4294933097, 1198856962, 3783574149, 4284, 3857718578, 0xBDD039AA39DBCF77, 31168, 18179, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           0x1A0FA7837CEE0C2CLL,
           a39,
           a40,
           a41,
           a42,
           v43 - 0x61EB587DDF0B8A9FLL);
}

uint64_t sub_1000A9388@<X0>(unsigned int a1@<W6>, unsigned int a2@<W8>)
{
  int v2;
  int v3;
  char v4;
  int v5;
  int v6;
  uint64_t v7;
  char v8;
  int v9;
  uint64_t v10;

  *(_BYTE *)(v10 + v2 + (v5 ^ a1)) = ((v9 ^ a2) >> (v8 + v4)) - ((2 * ((v9 ^ a2) >> (v8 + v4))) & 0x10) + 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (v5 ^ ((v3 == 0) * v6))) - 12))();
}

uint64_t sub_1000A93DC(int a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v4 == v1 + 32) * (v2 + a1)) ^ v2)) - 4))();
}

uint64_t sub_1000A9404(uint64_t a1, int a2, int a3, int a4)
{
  int v4;
  _BOOL4 v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = v7 + a2 < v4;
  if (v5 != v7 + a2 < a3)
    v10 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((v8 ^ a4) * v10) ^ v6)) - 4))();
}

uint64_t sub_1000A944C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - 4))();
}

uint64_t sub_1000A947C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v17;

  v11 = v7 - a3;
  v12 = v7 - 511861074;
  v13 = *(_QWORD *)(v8 + 8 * (v7 - 511861752));
  v14 = 263575687
      * ((((v10 - 136) | 0x96E0B05B651B58DFLL) - (v10 - 136) + ((v10 - 136) & 0x691F4FA49AE4A720)) ^ 0x9A75CD91FD3B9899);
  *(_DWORD *)(v10 - 136) = 757070765 - v14;
  *(_DWORD *)(v10 - 132) = v7 - v14 + 457963464;
  *(_QWORD *)(v10 - 128) = &STACK[0x61EB587DDF0B8BF7];
  *(_QWORD *)(v10 - 120) = v13 - v14 - 4;
  v15 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v9 + 8 * (v7 ^ 0x1E826B64)) - 1407751039);
  v17 = v15(v10 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8 + 8 * ((32837 * (a7 > v11 + 131461104)) ^ (v12 + 1558)))
                                          - 8))(v17);
}

uint64_t sub_1000A95D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;
  uint64_t v48;
  int v49;

  HIDWORD(a46) = -364148727;
  LODWORD(a47) = v49;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * v47) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1000A965C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  uint64_t v41;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * (((2 * (v41 != 0x2C86DCAB8BD0EBF6)) | (4 * (v41 != 0x2C86DCAB8BD0EBF6))) ^ (v39 - 511856487))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_1000A96C4@<X0>(int a1@<W6>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  int v5;

  if (v3)
    v4 = 1;
  else
    v4 = a1 == (a2 ^ 0x2B0B) + 1833213212 + 7799 * (a2 ^ 0x2B0B);
  v5 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((46116 * v5) ^ a2)) - 4))();
}

uint64_t sub_1000A9710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v60)(_QWORD);

  v60 = (uint64_t (*)(_QWORD))(*(_QWORD *)(v56 + 8 * (v53 ^ 0x3082)) - 2021280707);
  LOWORD(STACK[0x21E]) = v60(0);
  v58 = *(_QWORD *)(v54 + 8 * v53);
  STACK[0x220] = v55 - 0x2C86DCAB8BD0EBF6;
  LODWORD(a46) = 83198229;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 - (v53 ^ 0x6465u) + 23274))(28720, 2430008782, 1864989563, 4294944828, 194, 243384051, 268452355, 62789, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           v57,
           v60,
           v55 - 0x2C86DCAB8BD0EBD5,
           a7,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           v55 - 0x2C86DCAB8BD0EBD5);
}

uint64_t sub_1000A97F4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v1 == (v0 - 121)) * (((v0 - 30185) | 0x2005) ^ 0x25AC)) ^ v0))
                            - 12))();
}

uint64_t sub_1000A9854()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((243 * (v0 == ((7762 * ((v2 + v4) & 0x9726BB5 ^ 0x2396)) ^ 0x7F3C74A4))) ^ (v1 + v2 + 2579)))
                            - 12))();
}

uint64_t sub_1000A98AC()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(v0 + 8 * v1))();
}

uint64_t sub_1000A98D8(int a1, int a2, int a3, int a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((((v6 & (v5 ^ v6) | (v6 - v5) & ~(v5 ^ v6)) & 0x80) == 0) * a5) ^ (v5 + ((v5 + a2) & a3) + ((v5 + 2330) | a1) + a4))))();
}

uint64_t sub_1000A9920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, int a8)
{
  unsigned int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((v9 == (((v8 + a6) | a7) - 64)) * a8) ^ v8))
                            - 12))();
}

uint64_t sub_1000A995C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  int v42;
  int v43;

  *v41 = 0;
  *(_DWORD *)((uint64_t (*)(void))(*(_QWORD *)(v40 + 8 * (v42 ^ 0x9245)) - 1620132615))() = 0;
  v43 = ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * (v42 - 36078)) - 1189011386))(a39, 493);
  return ((uint64_t (*)(void))(*(_QWORD *)(v39
                                        + 8
                                        * ((11
                                          * (((2 * v43) & 0x7F9D94FE)
                                           + (((v42 + 469859440) | 0x2806A29) ^ 0xA14CB010 ^ v43) == -1076966786)) ^ v42))
                            - 4))();
}

uint64_t sub_1000A9A0C()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  int v2;

  v1();
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * v2) - ((v2 + 511829657) ^ 0x1E827A6BLL)))();
}

uint64_t sub_1000A9A58()
{
  int v0;
  uint64_t v1;
  _BYTE *v2;

  *v2 = 47;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (v0 - 511836406)) - 12))(28720, 2430008782, 1864989563, 4294944828, 194, 243384051, 268452355, 62789);
}

uint64_t sub_1000A9AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  unint64_t v40;

  v40 = ((v38 ^ 0xC7A77D3467722ACFLL) & 0xB6EED6ED6B6EDB5BLL)
      + ((unint64_t)&STACK[0x230] & 0xB6EED6ED6B6EDB58)
      + ((((unint64_t)&STACK[0x230] & 0x49112912949124A0 & (v38 ^ 0xC7A77D3467722ACFLL)) << ((v36 ^ 0x5Cu) - 50)) | (unint64_t)&STACK[0x230] & 0x49112912949124A0 ^ (v38 ^ 0xC7A77D3467722ACFLL) & 0x49112912949124A4);
  STACK[0x238] = v40;
  LODWORD(STACK[0x230]) = (v40 | 0xC66D085F) + (v40 | 0x3992F7A0) - 965932960;
  LODWORD(STACK[0x24C]) = 387119267;
  STACK[0x250] = (unint64_t)&STACK[0x230];
  LODWORD(STACK[0x25C]) = 387119267;
  LODWORD(STACK[0x260]) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((v36 + 869589234) ^ 0x525725F1 ^ (37 * (((19 - (v39 + v36)) | (v39 + v36 - 19)) >= 0)))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1000A9C18()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * (v0 - 511829370)))();
}

uint64_t sub_1000A9C68()
{
  uint64_t v0;
  int v1;
  int v2;
  char v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  _BOOL4 v8;

  v6 = (v1 | 0xFFFFFFFE) - (v1 & 0xFFFFFFFE) + ((v1 << v3) | 2) + 1;
  v8 = *(_QWORD *)(v0 + 8) == v0 || v6 > 0x13;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v8 * v4) ^ v2)))();
}

uint64_t sub_1000A9CB8@<X0>(int a1@<W8>)
{
  unint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  LODWORD(STACK[0x260]) = v2;
  LODWORD(STACK[0x25C]) = a1;
  STACK[0x250] = v1;
  LODWORD(STACK[0x24C]) = a1;
  return (*(uint64_t (**)(void))(v4 + 8 * v3))();
}

uint64_t sub_1000A9CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  char *v51;

  a35 = a5;
  a36 = a4;
  a38 = v45;
  a39 = v44;
  a40 = a7;
  a41 = v43;
  a37 = v50;
  a43 = 5;
  LODWORD(STACK[0x26C]) = v46 + 262194026;
  v51 = (char *)&a9 + ((2 * v48) & 0x95A9F1E9846E8322) - v48 - 0x4AD4F8F4C2373F62;
  STACK[0x238] = (unint64_t)v51;
  LODWORD(STACK[0x230]) = (_DWORD)v51 - 500326166 + 762 * (v46 ^ (v49 + 2467));
  STACK[0x2C0] = (unint64_t)&STACK[0x230];
  STACK[0x2F0] = 387119267;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 + 8 * ((v46 + 262194026) ^ 0x2E234CC5))
                                                                                                - 4))(2703529034, 556045386, 143803714, 0x44950A5248945224, 0x11285485124A8892, 19, 43);
}

uint64_t sub_1000A9E14@<X0>(uint64_t a1@<X5>, int a2@<W6>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v8;

  v6 = (~a3 | 1) + a3 + 1 + (a3 | 1u);
  v8 = *(_QWORD *)(v4 + 8) == v4 || (-((a1 - v6) ^ (a1 - v6)) | (a1 - v6)) < 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((v8 * a2) ^ v3)) - 4))();
}

uint64_t sub_1000A9F28@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  unint64_t v3;
  uint64_t v4;

  LODWORD(STACK[0x2F4]) = a1;
  LODWORD(STACK[0x2F0]) = v2;
  STACK[0x2C0] = v3;
  LODWORD(STACK[0x270]) = v2;
  LODWORD(STACK[0x2F8]) = 5;
  LODWORD(STACK[0x2FC]) = 1;
  STACK[0x300] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)((42656
                                               * (((((v1 + 14108) ^ 0x6F06) - v1 - 22553) & v1 ^ (v1 - 5)) >> 31)) ^ (v1 + 13209)))
                            - 4))();
}

uint64_t sub_1000A9F9C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * v0) - 12))(2655277097, 2320541988, 565330, LODWORD(STACK[0x2FC]), 2183688, 1974425307, 4165487641, 2735885979);
}

uint64_t sub_1000AA034()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v1 ^ v0 ^ ((((v3 - v1) | (v1 - v3)) >= 0) * v2))) - 12))();
}

uint64_t sub_1000AA0BC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;

  LODWORD(STACK[0x300]) = v4;
  LODWORD(STACK[0x2FC]) = a4;
  LODWORD(STACK[0x2F8]) = v6;
  LODWORD(STACK[0x304]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * v5) - (v5 + 899) + 14103))();
}

uint64_t sub_1000AA0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unsigned int *a36)
{
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;

  v39 = (((STACK[0x26C] & LODWORD(STACK[0x304])) << (((v36 ^ 0x28) - 125) ^ 0xB7))
       + (LODWORD(STACK[0x26C]) ^ LODWORD(STACK[0x304]))) ^ LODWORD(STACK[0x26C]);
  v40 = *a36;
  v41 = *(_DWORD *)(a35 + 4 * v40);
  v42 = v39 + v39 * v41;
  if (v39)
    v43 = 0;
  else
    v43 = *(_DWORD *)(a35 + 4 * v40);
  *(_DWORD *)(a35 + 4 * v40) = (v43 + v42) * v41;
  *a36 = ((int)v40 + 1) % 6u;
  LODWORD(STACK[0x24C]) = 2134608427;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * (v36 ^ (39 * (v38 != 0)))) - 12))(a1, a2, 511846998);
}

uint64_t sub_1000AA1A8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((67 * (((*v2 == 0x6CA6F0EE111A2BB6) ^ a1 ^ 0xAD) & 1)) ^ a1))
                            - 4))();
}

uint64_t sub_1000AA1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (v7 ^ (((a7 != 230207725) << 10) | ((a7 != 230207725) << 14))))
                            - ((v7 + 18330) ^ (v7 - 6120) ^ 0x618ALL)))();
}

uint64_t sub_1000AA230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _BOOL4 v54;
  _BOOL4 v55;

  LODWORD(a43) = 6;
  v52 = (v50 ^ 0xE7DBF2D1FFFF3F56) + 0x18240D2E00B6A020 + ((2 * v50) & 0xCFB7E5A3FFFE7EACLL);
  v53 = (v51 ^ 0x7ADFF7EF57CEB53FLL) - 0x7ADFF7EF5718D5C9 + ((2 * v51) & 0xF5BFEFDEAF9D6A7ELL);
  v54 = v52 < 0xB5DF76;
  v55 = v52 > v53;
  if (v54 != v53 < 0xB5DF76)
    v55 = v54;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * ((v48 - 511826383) ^ (386 * v55))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1000AA3F8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  unsigned int v40;

  v40 = (v36 ^ 0x7BEB59DD) + 1837718766 + (v37 & 0xEAFDDEEA ^ 0x8294C40);
  LOBYTE(STACK[0x2EF]) = v40 < ((v35 - a8 - 2054893394) & 0x5BF8F5BE ^ 0xE3080CDD);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8 * (v35 ^ (102 * (v40 == -485995421)))) - 12))(1837718766, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1000AA494()
{
  unsigned int v0;
  uint64_t v1;

  LODWORD(STACK[0x268]) = 1693334908;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * v0) - ((v0 - 93) ^ 0x4069)))(101, 2115636968);
}

uint64_t sub_1000AA4F0(char a1, int a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  _BOOL4 v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL4 v15;

  *(_BYTE *)(v14 + (a3 + v11)) = *(_BYTE *)(v13 + (a3 + v11)) ^ *(_BYTE *)(v6 + ((a3 + v11) & 0xFLL)) ^ *(_BYTE *)(v4 + ((a3 + v11) & 0xFLL)) ^ *(_BYTE *)(v5 + ((a3 + v11) & 0xFLL)) ^ (((a3 + v11) & 0xF) * a1) ^ 8;
  if (v9 != a3 + a2 < v7)
    v15 = v9;
  else
    v15 = a3 + a2 < v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((v15 * a4) ^ v8)) - 8))();
}

uint64_t sub_1000AA564@<X0>(int a1@<W2>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x268]) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 + a2)) - 12))();
}

uint64_t sub_1000AA578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  int v37;
  int v38;
  uint64_t v39;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * ((2188 * (((v36 + 1879955266) ^ v37) - 1610645552 + ((v36 - 46744177) & v38 ^ 0x1D230D40) != 513478533)) ^ v36)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1000AA5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45)
{
  int v45;
  uint64_t v46;
  uint64_t v47;

  v47 = *(_QWORD *)(v46
                  + 8
                  * (int)((v45 - 1452029646) ^ 0xA974B0A6 ^ (109791 * ((v45 - 1452029646) < 0x299B65E2))));
  LODWORD(STACK[0x26C]) = a45;
  return ((uint64_t (*)(uint64_t, uint64_t))(v47 - ((v45 - 1213375020) & 0x4852DBFB) + 39839))(101, 15334);
}

uint64_t sub_1000AA690(char a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v12 = (v5 + v8);
  *(_BYTE *)(v11 + v12) = *(_BYTE *)(v10 + v12) ^ *(_BYTE *)(v4 + (v12 & 0xF)) ^ *(_BYTE *)(v2 + (v12 & 0xF)) ^ *(_BYTE *)(v3 + (v12 & 0xF)) ^ ((v12 & 0xF) * a1) ^ 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((v7 == v5) * a2) ^ v6)) - 12))();
}

uint64_t sub_1000AA6E4@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x26C]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 + a1)) - 12))();
}

uint64_t sub_1000AA6F8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  STACK[0x298] = 1972180577;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * (a1 + v1 + 1590)) - 12))(v1 & 0x214809BC, -2714318543, 4294967273, 7365);
}

uint64_t sub_1000AA774(unsigned int a1, uint64_t a2, char a3, int a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  char v18;

  v18 = *(_BYTE *)(*(_QWORD *)(v15 + 8 * (v17 + v5 + 3586)) + a5 + v9);
  *(_BYTE *)(v8 + a5) = *(_BYTE *)(*(_QWORD *)(v15 + 8 * (v17 + v5 + 2448)) + a5 + v12) ^ ((a5 + v6) * a3) ^ *(_BYTE *)(*(_QWORD *)(v15 + 8 * (v5 ^ (v16 + 1059))) + a5 + v13) ^ *(_BYTE *)(*(_QWORD *)(v15 + 8 * a1) + a5 + a2) ^ ((v18 ^ v11) + (v10 & (2 * v18)) - 87);
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * (((a5 + v6 == 0) * a4) ^ v7)) - 12))();
}

uint64_t sub_1000AA800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;

  STACK[0x298] = a5;
  v51 = v47 - (((v47 + 36198982) & 0xA37AAF3 ^ v47 & 1) << (((a9 - 26) | 0x15) + 108)) - 1671428808;
  LODWORD(a46) = ((2 * v51) & 0x75C966DA ^ 0x144944C0) + (v51 ^ 0x30D3199F);
  STACK[0x220] = v50 - 192;
  LODWORD(STACK[0x294]) = -42900;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * (a9 ^ (31775 * (v50 != 256)))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           v49,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1000AA8B8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  STACK[0x2E0] = v1 + 0x2770871769F685B1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((a1 + 4999) ^ (16 * (v1 != v3))))
                            - ((a1 + 4999) ^ 0x10u)
                            - (((a1 - 8214) | 0x2002u) ^ 0xFFFFFFFFFFFFEB55)))();
}

uint64_t sub_1000AA910@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,_BYTE *a47)
{
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;

  *a47 = *v49;
  *(_BYTE *)(v48 - 175) = v49[1];
  *(_BYTE *)(v48 - 174) = v49[2];
  *(_BYTE *)(v48 - 173) = v49[3];
  *(_BYTE *)(v48 - 172) = v49[4];
  *(_BYTE *)(v48 - 171) = v49[5];
  *(_BYTE *)(v48 - 170) = v49[6];
  *(_BYTE *)(v48 - 169) = v49[7];
  *(_BYTE *)(v48 - 168) = v49[8];
  *(_BYTE *)(v48 - 167) = v49[9];
  *(_BYTE *)(v48 - 166) = v49[10];
  *(_BYTE *)(v48 - 165) = v49[11];
  *(_BYTE *)(v48 - 164) = v49[12];
  *(_BYTE *)(v48 - 163) = v49[13];
  *(_BYTE *)(v48 - 162) = v49[14];
  *(_BYTE *)(v48 - 161) = v49[15];
  *(_QWORD *)STACK[0x220] = *(_QWORD *)v49;
  *(_QWORD *)(v48 - 184) = *((_QWORD *)v49 + 1);
  STACK[0x2E0] = v48 + 0x2770871769F68501;
  return ((uint64_t (*)(void))(*(_QWORD *)(v47 + 8 * a1) - (((a1 - 15665) | 0x2986u) ^ 0x2982)))();
}

uint64_t sub_1000AA9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v41;
  uint64_t v42;
  uint64_t v43;

  LODWORD(STACK[0x294]) = -42900;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * (int)((((((v41 + 5883) | 0x3814) ^ 0xFFFFE97A) + 5641 * (v41 ^ 0x2983)) * (v43 == 0)) ^ v41)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1000AAA3C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  uint64_t v38;
  _BOOL4 v40;

  v40 = ((a38 + 3) & 0xF) != (((a38 + 3) << (99 * (a1 ^ 0x33) + 103)) & 0x10) || a38 == 988066669;
  LODWORD(STACK[0x294]) = -42899;
  return ((uint64_t (*)(void))(*(_QWORD *)(v38 + 8 * ((v40 * ((a1 + 2664) ^ 0x788D)) ^ a1)) - 8))();
}

uint64_t sub_1000AAAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int v49;
  uint64_t v50;

  LODWORD(STACK[0x294]) = -42900;
  return (*(uint64_t (**)(void))(v50
                              + 8
                              * (int)((((v49 ^ 0xF ^ (a49 == 0x2770871769F685B1)) & 1)
                                     * ((v49 ^ 0xCA64DB23) + 899370931)) ^ v49)))();
}

uint64_t sub_1000AAB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  char v55;
  unsigned int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  uint64_t v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;

  v53 = *(_QWORD *)(v52 + 8 * (int)(v50 ^ 0xCA64F51D)) - 1274372342;
  v54 = *(unsigned __int8 *)(v53 + (*(unsigned __int8 *)(a49 - 0x2770871769F685AALL) ^ 0x75));
  v55 = (3 * (v54 & (v50 - 121)) - 13) & 0xD0;
  v56 = v54 ^ 0xFFFFFFE1;
  if (((((2 * v55) | 0x6A) - v55) & 0xFE) == 0xDA)
    v57 = 64;
  else
    v57 = -64;
  v58 = *(_QWORD *)(v52 + 8 * (int)(v50 + 899356280)) - 83895011;
  v59 = *(_QWORD *)(v52 + 8 * (int)(v50 + 899355896)) - 1965642083;
  v60 = *(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(a49 - 0x2770871769F685ADLL) ^ 0x5CLL)) ^ ((*(_BYTE *)(a49 - 0x2770871769F685ADLL) ^ 0xDD) + (~(2 * (*(_BYTE *)(a49 - 0x2770871769F685ADLL) ^ 0xDD) + 18) | 0xEB) - 92) ^ 0x19;
  v61 = (((v60 - ((2 * v60) & 0xB8)) << 24) + 1543503872) ^ 0x5C000000;
  v62 = (v61 - ((2 * v61) & 0xF4000000) + 2052642038) ^ 0x7A58D4F6 | ((2 * (v56 & 0x1F)
                                                                                      + ((v57 + v56) ^ 0x9F)
                                                                                      + 97)
                                                                    - ((2
                                                                      * (2 * (v56 & 0x1F) + ((v57 + v56) ^ 0x9F) + 97)) & 0x16C)
                                                                    - 14019914) ^ 0xFF2A12B6;
  v63 = *(unsigned __int8 *)(v59 + (*(unsigned __int8 *)(a49 - 0x2770871769F685A7) ^ 0xCCLL)) ^ 0x60;
  v64 = (((v63 - ((2 * v63) & 0xDDDDDDDD)) << 8) - 1291325952) ^ 0xB307EE00;
  v65 = *(_QWORD *)(v52 + 8 * (int)(v50 + 899358561)) - 1942018222;
  v66 = *(unsigned __int8 *)(v65 + (*(unsigned __int8 *)(a49 - 0x2770871769F685ACLL) ^ 0xFLL)) ^ 0x44;
  v67 = (((v66 - ((2 * v66) & 0x8A)) << 16) + 793051136) ^ 0x2F450000;
  v68 = (v67 - ((2 * v67) & 0x46100000) + 587750222) ^ 0x23085B4E | (v62 - ((2 * v62) & 0xA0D89190) - 798209848) ^ 0xD06C48C8;
  v69 = *(unsigned __int8 *)(v59 + (*(unsigned __int8 *)(a49 - 0x2770871769F685AFLL) ^ 0xF7)) ^ 0x2E;
  v70 = (((v69 - ((2 * v69) & 0x1AA)) << 8) + 594990336) ^ 0x2376D500;
  v71 = ((((*(unsigned __int8 *)(v59 + (*(unsigned __int8 *)(a49 - 0x2770871769F685ABLL) ^ 0x1BLL)) ^ 0xC0)
         - ((2 * *(unsigned __int8 *)(v59 + (*(unsigned __int8 *)(a49 - 0x2770871769F685ABLL) ^ 0x1BLL))) & 0x1A)) << 8)
       + 1054280960) ^ 0x3ED70D00;
  v72 = (v71 - ((2 * v71) & 0x36957000) - 1689601952) ^ 0x9B4AB860 | (v68 - ((2 * v68) & 0x9303AA16) + 1233245451) ^ 0x4981D50B;
  v73 = ((*(_BYTE *)(a49 - 0x2770871769F685A9) ^ 0xB2) - 103) ^ 0x3B ^ *(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(a49 - 0x2770871769F685A9) ^ 0x33));
  v74 = (((v73 - ((2 * v73) & 0xFFFFFFE3)) << 24) + 1895825408) ^ 0x71000000;
  v75 = (v74 - ((2 * v74) & 0x60000000) - 1326885996) ^ 0xB0E95394 | (v64 - ((2 * v64) & 0x2F27C00) - 2122760554) ^ 0x81793E96;
  v76 = *(unsigned __int8 *)(v65 + (*(unsigned __int8 *)(a49 - 0x2770871769F685B0) ^ 0x7ALL)) ^ 0xA9;
  v77 = (((v76 - ((2 * v76) & 0x15A)) << 16) + 1168965632) ^ 0x45AD0000;
  v78 = (v77 - ((2 * v77) & 0x42280000) - 1592514068) ^ 0xA11429EC | (v70 - ((2 * v70) & 0x2636EE00) + 320567142) ^ 0x131B7766;
  v79 = v78 - ((2 * v78) & 0x49BA461A);
  v80 = ((((*(unsigned __int8 *)(v65 + (*(unsigned __int8 *)(a49 - 0x2770871769F685A8) ^ 0x87)) ^ 0xB6)
         - ((2 * (*(unsigned __int8 *)(v65 + (*(unsigned __int8 *)(a49 - 0x2770871769F685A8) ^ 0x87)) ^ 0xB6)) & 0xFC)) << 16)
       - 394395648) ^ 0xE87E0000;
  v81 = *(unsigned __int8 *)(a49 - 0x2770871769F685AELL);
  v82 = *(unsigned __int8 *)(a49 - 0x2770871769F685A6);
  v83 = (v80 - ((2 * v80) & 0x151A0000) + 1250809291) ^ 0x4A8DD5CB | (v75 - ((2 * v75) & 0x53BAE882) + 702379073) ^ 0x29DD7441;
  v84 = *(unsigned __int8 *)(v53 + (v81 ^ 0x18)) ^ 0xE1;
  v85 = (v79 + 1692214029) ^ 0x64DD230D | (v84 - ((2 * v84) & 0xCA) + 882362725) ^ 0x3497C965;
  v86 = *(unsigned __int8 *)(v53 + (v82 ^ 0x3E)) ^ 0xE1;
  v87 = (v83 - ((2 * v83) & 0xB97D835A) + 1556005293) ^ 0x5CBEC1AD | (v86 - ((2 * v86) & 0xAE) + 1789586519) ^ 0x6AAAEC57;
  v88 = *(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(a49 - 0x2770871769F685B1) ^ 0x65)) ^ ((*(_BYTE *)(a49 - 0x2770871769F685B1) ^ 0xE4) - ((2 * (*(_BYTE *)(a49 - 0x2770871769F685B1) ^ 0xE4) + 50) & 0x8F) + 96) ^ 0x8F;
  v89 = (((v88 - ((2 * v88) & 0x78)) << 24) + 1006632960) ^ 0x3C000000;
  v90 = (v85 - ((2 * v85) & 0x7DA3454E) - 1093557593) ^ 0xBED1A2A7 | (v89 - ((2 * v89) & 0x10000000) - 2004131145) ^ 0x888B62B7;
  LODWORD(a38) = (v90 - ((2 * v90) & 0x65AF060E) - 1294499065) ^ 0xD7DAEF0D;
  LODWORD(a40) = (v72 - ((2 * v72) & 0x3672392C) + 456727702) ^ 0xEC350457;
  LODWORD(a39) = (v87 - ((2 * v87) & 0xC61E5B5C) - 485544530) ^ 0x5F3498E0;
  HIDWORD(a18) = 139282;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 + 8 * (int)(v50 ^ v49 ^ (21697 * (v50 > 0xC2374DC4)))) - 4))(v81, v82, 225, v65, v53, v58, v59, 46, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, 0x1AD1C0010AA74,
           __PAIR64__(a45 - 102669181, (a45 - 102669181) < 0x34C617F0),
           v65,
           v59,
           v58,
           v53,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000AB44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41,int a42,uint64_t a43)
{
  unsigned int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  unsigned int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  uint64_t v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  uint64_t v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  char *v89;
  int v90;
  int v91;
  int v92;
  char *v93;
  int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  char *v98;
  unsigned int v99;
  char *v100;
  unsigned int v101;
  int v102;
  int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  BOOL v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  int v165;
  int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  int v170;
  int v171;
  unsigned int v172;
  int v173;
  int v174;
  int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  int v196;
  int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  int v204;
  unsigned int v205;
  int v206;
  int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  int v220;
  int v221;
  unsigned int v222;
  unsigned int v223;
  int v224;
  int v225;
  unsigned int v226;
  int v227;
  unsigned int v228;
  int v229;
  unsigned int v230;
  int v231;
  int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  int v236;
  int v237;
  int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  int v249;
  int v250;
  int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  unint64_t v258;
  int v259;
  int v260;
  unsigned int v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  int v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  int v277;
  int v278;
  int v279;
  unsigned int v280;
  int v281;
  unsigned int v282;
  int v283;
  int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  signed int v288;
  int v289;
  int v290;
  int v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  int v295;
  unsigned int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  unsigned int v302;
  int v303;
  int v304;
  unsigned int v305;
  unsigned int v306;
  int v307;
  int v308;
  int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  int v314;
  unint64_t v315;
  unsigned int v316;
  unsigned int v317;
  int v318;
  int v319;
  int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  int v326;
  int v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  int v331;
  int v332;
  unsigned int v333;
  unsigned int v334;
  int v335;
  unsigned int v336;
  int v337;
  int v338;
  unsigned int v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  int v343;
  int v344;
  unsigned int v345;
  unsigned int v346;
  unsigned int v347;
  int v348;
  int v349;
  int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  int v355;
  unsigned int v356;
  int v357;
  unsigned int v358;
  int v359;
  unsigned int v360;
  int v361;
  int v362;
  int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  unsigned int v368;
  int v369;
  unsigned int v370;
  unsigned int v371;
  unsigned int v372;
  int v373;
  unsigned int v374;
  int v375;
  int v376;
  unsigned int v377;
  unsigned int v378;
  int v379;
  int v380;
  unsigned int v381;
  int v382;
  unsigned int v383;
  unsigned int v384;
  unsigned int v385;
  unsigned int v386;
  int v387;
  int v388;
  int v389;
  unsigned int v390;
  unsigned int v391;
  int v392;
  int v393;
  int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  int v398;
  unsigned int v399;
  unsigned int v400;
  int v401;
  unsigned int v402;
  int v403;
  int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  int v408;
  unsigned int v409;
  int v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  int v414;
  int v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  char *v421;
  int v422;
  char *v423;
  int v424;
  unint64_t v425;
  int v426;
  int v427;
  unsigned int v428;
  int v429;
  int v430;
  unsigned int v431;
  unsigned int v432;
  int v433;
  char *v434;
  int v435;
  char *v436;
  unsigned int v437;
  unsigned int v438;
  int v439;
  int v440;
  int v441;
  unsigned int v442;
  int v443;
  char v444;
  int v445;
  int v446;
  int v447;
  uint64_t v448;
  int v449;
  int v450;
  int v451;
  int v452;
  int v453;
  unsigned int v454;
  unint64_t v455;
  char *v456;
  int v457;
  unsigned int v458;
  unsigned int v459;
  char *v460;
  int v461;
  int v462;
  char *v463;
  int v464;
  uint64_t v465;
  unsigned int v466;
  uint64_t v467;
  int v468;
  unsigned int v469;
  uint64_t v470;
  int v471;
  uint64_t v472;
  uint64_t v473;
  char *v474;
  unsigned int v475;
  int v476;
  unint64_t v477;
  unsigned int v478;
  char v479;
  int v480;
  unsigned int v481;
  unsigned int v482;
  char v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  unsigned int v487;
  int v488;
  _BOOL4 v489;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  unsigned int v500;
  unsigned int v501;
  unsigned int v502;

  LODWORD(a36) = v45 + 2656;
  HIDWORD(a25) = 549 * (v45 ^ 0x6E06);
  v47 = *(unsigned __int8 *)(a22
                           + (*(unsigned __int8 *)(((v43 - 1835354930) | ((unint64_t)(v43 - 1835354930 < (HIDWORD(a25) ^ 0x67762BFu)) << 32))
                                                 + v46
                                                 - 108466144) ^ 0x16));
  v499 = ((v43 - 45958900) | ((unint64_t)(v43 - 45958900 < 0x711F1422) << 32)) + v46;
  v48 = ((((v47 ^ 0xBD) - ((2 * (v47 ^ 0xBD)) & 0x8E)) << 8) - 1346746624) ^ 0xAFBA4700;
  v49 = *(unsigned __int8 *)(a22
                           + (*(unsigned __int8 *)(((v45 + 2656 + v43 + 117458082) | ((unint64_t)(v45 + 2656 + v43 + 117458082 < 0x7ADD1855) << 32))
                                                 + v46
                                                 - 2061310037) ^ 0xECLL));
  v50 = (v49 ^ 0x27) - ((2 * (v49 ^ 0x27)) & 0x188) + 962146500;
  v494 = ((v43 - 1243269354) | ((unint64_t)(v43 - 1243269354 < 0x29C1922D) << 32)) + v46;
  v51 = *(unsigned __int8 *)(a22 + (*(unsigned __int8 *)(v499 - 1897862178) ^ 0xCDLL)) ^ 0x15;
  v52 = (((v51 - ((2 * v51) & 0x17A)) << 8) + 113949952) ^ 0x6CABD00;
  v53 = *(unsigned __int8 *)(a21 + (*(unsigned __int8 *)(v494 - 700551725) ^ 0x15)) ^ 0x20;
  v54 = (((v53 - ((2 * v53) & 0x144)) << 16) + 1419902976) ^ 0x54A20000;
  v55 = (v54 + 1755249221 - ((2 * v54) & 0x513C0000)) ^ 0x689EFA45 | (v52 - 1831844609 - ((2 * v52) & 0x25A08800)) ^ 0x92D044FF;
  v496 = ((v43 - 582178399) | ((unint64_t)(v43 - 582178399 < 0x512904BD) << 32)) + v46;
  v56 = *(unsigned __int8 *)(v496 - 1361642685);
  v57 = *(unsigned __int8 *)(a23 + (v56 ^ 0x53));
  LODWORD(v56) = ((v56 ^ 0xD2) - ((2 * (v56 ^ 0xD2) + 50) & 0x4C) + 63);
  LODWORD(v56) = ((((v57 ^ 0x3B ^ v56) - ((2 * (v57 ^ 0x3B ^ v56)) & 0x52)) << 24)
                - 1459617792) ^ 0xA9000000;
  v493 = ((v43 - 1172645715) | ((unint64_t)(v43 - 1172645715 < 0x2DF733C8) << 32)) + v46;
  v58 = *(unsigned __int8 *)(a24
                           + (*(unsigned __int8 *)(((v43 - 230851073) | ((unint64_t)(v43 - 230851073 < 0x6619D914) << 32))
                                                 + v46
                                                 - 1712970004) ^ 0x6DLL)) ^ 0xE1;
  v59 = (v55 - 134644231 - ((2 * v55) & 0x6FF2FBF2)) ^ 0xF7F97DF9 | (v58 + 1186570404 - ((2 * v58) & 0x148)) ^ 0x46B9A0A4;
  v60 = ((((*(unsigned __int8 *)(a21 + (*(unsigned __int8 *)(v493 - 771175368) ^ 0x12)) ^ 0x34)
         - ((2 * *(unsigned __int8 *)(a21 + (*(unsigned __int8 *)(v493 - 771175368) ^ 0x12))) & 0x180)) << 16)
       + 1086324736) ^ 0x40C00000;
  LODWORD(v56) = (v60 + 1758663490 - ((2 * v60) & 0xD1A60000)) ^ 0x68D31342 | (v56
                                                                             - 520911492
                                                                             - (v56 >> 29 << 30)) ^ 0xE0F3857C;
  v495 = ((v43 - 795497877) | ((unint64_t)(v43 - 795497877 < 0x44720583) << 32)) + v46;
  v498 = (v43 | ((unint64_t)(v43 < 0x73DC5B20) << 32)) + v46;
  v61 = *(unsigned __int8 *)(a23 + (*(unsigned __int8 *)(v495 - 1148323203) ^ 0x63)) ^ 0x25 ^ ((*(_BYTE *)(v495 - 1148323203) ^ 0xE2) - ((2 * (*(_BYTE *)(v495 - 1148323203) ^ 0xE2) + 50) & 0x3E) + 56);
  v62 = (((v61 + (~(2 * v61) | 0x45)) << 24) + 1577058304) ^ 0x5D000000;
  v63 = (v62 - 340682745 - ((2 * v62) & 0xD6000000)) ^ 0xEBB19807 | (v59 + 557709512 - ((2 * v59) & 0x427BF190)) ^ 0x213DF8C8;
  v64 = v63 - ((2 * v63) & 0xDBDC6F8) - 2032213124;
  v65 = *(unsigned __int8 *)(((v43 - 377291870) | ((unint64_t)(v43 - 377291870 < 0x5D5F56BC) << 32))
                           + v46
                           - 1566529212) ^ 0xE5;
  LODWORD(v65) = ((((*(unsigned __int8 *)(a22 + v65) ^ 0xFE) - ((2 * (*(unsigned __int8 *)(a22 + v65) ^ 0xFE)) & 0x52)) << 8)
                + 1768237312) ^ 0x69652900;
  LODWORD(v56) = (v65 + 239579957 - ((2 * v65) & 0x1C8F6600)) ^ 0xE47B335 | (v56 + 1003959788 - ((2 * v56) & 0x77AE6BD8)) ^ 0x3BD735EC;
  LODWORD(v65) = v56 - 936391652 - ((2 * v56) & 0x905F9838);
  v66 = *(unsigned __int8 *)(a23 + (*(unsigned __int8 *)(v498 - 1943821088) ^ 0x2ELL)) ^ 0x8D ^ ((*(_BYTE *)(v498 - 1943821088) ^ 0xAF) - ((2 * (*(_BYTE *)(v498 - 1943821088) ^ 0xAF) + 50) & 0x2A) + 46);
  v67 = (((v66 + (~(2 * v66) | 0x99999999)) << 24) + 872415232) ^ 0x33000000;
  LODWORD(v56) = v67 + 1349865990 - ((2 * v67) & 0xA0000000);
  v68 = *(unsigned __int8 *)(a24
                           + (*(unsigned __int8 *)(((v43 - 1806707177) | ((unint64_t)(v43 - 1806707177 < 0x82C3130) << 32))
                                                 + v46
                                                 - 137113904) ^ 0x61));
  v69 = v65 ^ 0xC82FCC1C | ((v68 ^ 0xE1) + 389227471 - ((2 * (v68 ^ 0xE1)) & 0xFFFFFF9F)) ^ 0x173323CF;
  v70 = *(unsigned __int8 *)(a24
                           + (*(unsigned __int8 *)(((v43 - 1291738853) | ((unint64_t)(v43 - 1291738853 < 0x26DDFC2C) << 32))
                                                 + v46
                                                 - 652082220) ^ 0xBBLL));
  v492 = ((v43 - 979792446) | ((unint64_t)(v43 - 979792446 < 0x3975E8D5) << 32)) + v46;
  v71 = v69 - ((2 * v69) & 0xF0880408) - 129760764;
  LODWORD(v65) = *(unsigned __int8 *)(a21 + (*(unsigned __int8 *)(v492 - 964028629) ^ 0xB0)) ^ 0x57;
  LODWORD(v65) = ((((_DWORD)v65 - ((2 * (_DWORD)v65) & 0x1A8)) << 16) - 1445724160) ^ 0xA9D40000;
  v72 = (v65 + 1326402414 - ((2 * v65) & 0x1E1E1E1E)) ^ 0x4F0F4B6E | (v48 - 634147828 - ((2 * v48) & 0x34675800)) ^ 0xDA33AC0C;
  v497 = ((v43 - 1390803232) | ((unint64_t)(v43 - 1390803232 < 0x20F661F4) << 32)) + v46;
  v491 = ((v43 - 1860327277) | ((unint64_t)(v43 - 1860327277 < 0x4FA03B2) << 32)) + v46;
  v73 = (v72 + 1369097467 - ((2 * v72) & 0x233589F6)) ^ 0x519AC4FB | ((v70 ^ 0xBC)
                                                                    - 1000183985
                                                                    - ((2 * (v70 ^ 0xBC)) & 0x9E)) ^ 0xC462674F;
  LODWORD(v65) = *(unsigned __int8 *)(a23 + (*(unsigned __int8 *)(v497 - 553017844) ^ 0xD4)) ^ ((*(_BYTE *)(v497 - 553017844) ^ 0x55) - ((2 * (*(_BYTE *)(v497 - 553017844) ^ 0x55) + 50) & 0xCF)) ^ 0x1A;
  LODWORD(v65) = ((((_DWORD)v65 - ((2 * (_DWORD)v65) & 0xB0)) << 24) - 671088640) ^ 0xD8000000;
  v74 = *(unsigned __int8 *)(a21 + (*(unsigned __int8 *)(v491 - 83493810) ^ 0x10));
  v75 = (v73 + 101088874 - ((2 * v73) & 0xC0CFCD4)) ^ 0x6067E6A | (v65 + 2018598964 + (~(2 * v65) | 0xFFFFFFF) + 1) ^ 0x78516034;
  v76 = v75 - ((2 * v75) & 0x5A4D2138) + 757502108;
  v77 = ((((v74 ^ 0x79) - ((2 * (v74 ^ 0x79)) & 0x134)) << 16) + 1352269824) ^ 0x509A0000;
  LODWORD(v56) = (v77 + 1344335339 - ((2 * v77) & 0x20400000)) ^ 0x5020EDEB | v56 ^ 0x50755206;
  v78 = (v56 - 1665542126 - ((2 * v56) & 0x3973B024)) ^ 0x9CB9D812 | (((v50 << 8) ^ 0x5930C400)
                                                                    + 1559805088
                                                                    - ((2 * ((v50 << 8) ^ 0x5930C400)) & 0x39F17800)) ^ 0x5CF8BCA0;
  v79 = v78 ^ 0xDA7F9297;
  v80 = (2 * v78) & 0xB4FF252E;
  v81 = *(unsigned __int8 *)(a24
                           + (*(unsigned __int8 *)(((v43 - 106168917) | ((unint64_t)(v43 - 106168917 < 0x6D8858C8) << 32))
                                                 + v46
                                                 - 1837652168) ^ 0x40)) ^ 0xE1;
  v82 = v81 - 227821422 - ((2 * v81) & 0x124);
  if ((v50 & 8) != 0)
    v83 = 629171561;
  else
    v83 = 629175657;
  v84 = (((v79 + v83 + v80) | v82 ^ 0xF26BB892)
       - 471292141
       + (~(2 * ((v79 + v83 + v80) | v82 ^ 0xF26BB892)) | 0x382EB1DB)) ^ a38;
  v85 = v64 ^ a39;
  v86 = v76 ^ a42;
  v87 = HIBYTE(v84) ^ ((HIBYTE(v84) ^ 0xFFFFFF16) - ((2 * (HIBYTE(v84) ^ 0xFFFFFF16) + 436) & 0x21CCBAA8) + 283532846) ^ ((HIBYTE(v84) ^ 0xFFFFFFCF) - ((2 * (HIBYTE(v84) ^ 0xFFFFFFCF) + 2) & 0x694CC942) + 883319970) ^ 0x244039C5;
  v88 = v87 + 682063964 - ((2 * v87 + 434) & 0x514EF010) + 133;
  v89 = (char *)*(&off_10112C750 + v45 - 28068) - 1777135171;
  v90 = *(_DWORD *)&v89[4 * (BYTE1(v85) ^ 0xBD)];
  v91 = v90 - ((2 * v90 - 1333628572) & 0xEA2E710C);
  v92 = v45;
  v93 = (char *)*(&off_10112C750 + (v45 ^ 0x6EEC)) - 484783499;
  v94 = *(_DWORD *)&v93[4 * (v86 ^ 0x73)];
  v95 = v94 - ((2 * v94 + 564376098) & 0x8BFEF3EE) - 690924792;
  v96 = ((BYTE2(v85) ^ 2) - ((v85 >> 15) & 0x8A) + 81489733) ^ 0x447673D7;
  v97 = -2128447620 - (v96 | 0x8122777C) + (v96 | 0x7EDD8883);
  LODWORD(a26) = v92;
  v98 = (char *)*(&off_10112C750 + v92 - 27270) - 1591171491;
  v99 = v71 ^ a40;
  v100 = (char *)*(&off_10112C750 + (v92 ^ 0x6C85)) - 1246933634;
  v101 = *(_DWORD *)&v100[4 * (((v71 ^ a40) >> 16) ^ 0x5D)] ^ (v91 + 1297641784) ^ *(_DWORD *)&v98[4 * (v88 ^ 0x28A7785C)] ^ ((v91 + 1297641784) >> 4) ^ ((v91 + 1297641784) >> 8) ^ v95 ^ (((8 * v95) ^ 0x2FFBCFB8) - ((2 * ((8 * v95) ^ 0x2FFBCFB8)) & 0x680CBE00) - 1274650878) ^ (((32 * v95) ^ 0xBFEF3EE0) - ((2 * ((32 * v95) ^ 0xBFEF3EE0)) & 0x5A92F0C0) + 759789690) ^ v88;
  v102 = *(_DWORD *)&v89[4 * (BYTE1(v86) ^ 0xD9)];
  v103 = *(_DWORD *)&v93[4
                       * (((v84 ^ 0xF27863A6)
                         + (v84 & 0x53 ^ 0x4828451)
                         - ((v84 ^ 0xF27863A6) & 0xF2086153)) ^ 0x4F28621)];
  v104 = v103 - ((2 * v103 + 564376098) & 0x2AD15F84) - 1506113325;
  v105 = HIBYTE(v99) ^ 0xC7;
  v106 = v102 - ((2 * v102 - 1333628572) & 0xBF400A7E) + 937508337;
  v107 = *(_DWORD *)&v98[4 * v105] ^ *(_DWORD *)&v100[4 * (v97 ^ 0x3E7094D6)] ^ v106 ^ (v106 >> 4) ^ (v106 >> 8) ^ v104 ^ (((8 * v104) ^ 0xAB457E10) - ((2 * ((8 * v104) ^ 0xAB457E10)) & 0x6C804860) + 910173238) ^ (((32 * v104) ^ 0xAD15F840) - ((2 * ((32 * v104) ^ 0xAD15F840)) & 0xB2AF8A40) - 648559319);
  v108 = ((BYTE1(v84) ^ 0x8D) - ((v84 >> 7) & 0xA0) + 1645470288) ^ 0x4330CE10;
  v109 = *(_DWORD *)&v89[4 * ((v108 - ((2 * v108) & 0x42464D60) - 348129616) ^ 0xCA1CDA5B)];
  v110 = *(_DWORD *)&v93[4
                       * ((-2142876369
                         - (v99 ^ 0x8300927 | 0x80464D2F)
                         + (v99 ^ 0x8300927 | 0x7FB9B2D0)) ^ 0x7789BBE9)];
  v111 = v110 - ((2 * v110 + 564376098) & 0x602F36C8) + 1089041525;
  v112 = v109 - ((2 * v109 + 276984164) & 0x1D73DAB0) - 419748342;
  v113 = *(_DWORD *)&v98[4 * (HIBYTE(v85) ^ 0xDD)] ^ HIBYTE(v85) ^ *(_DWORD *)&v100[4 * (BYTE2(v86) ^ 0xC8)] ^ v112 ^ (v112 >> 4) ^ (v112 >> 8) ^ v111 ^ (((32 * v111) ^ 0x2F36C80) - ((2 * ((32 * v111) ^ 0x2F36C80)) & 0xFF0C4B00) - 7985772) ^ (((8 * v111) ^ 0x80BCDB20) + 744771200 - 2 * (((8 * v111) ^ 0x80BCDB20) & 0x2C644E90 ^ (8 * v111) & 0x10));
  v114 = *(_DWORD *)&v89[4
                       * ((((((v99 >> 8) & 0x48) + (BYTE1(v99) ^ 0x49)) | 0x400) - ((BYTE1(v99) ^ 0x49) & 0x48)) ^ 0x465)];
  v115 = *(_DWORD *)&v93[4
                       * ((((2 * (v85 ^ 0x22)) & 0x6E) - (v85 ^ 0x22) + 22472) ^ 0x57EF)];
  v116 = v115 - ((2 * v115 + 564376098) & 0x6CE84F7E) - 951713584;
  v117 = HIBYTE(v86);
  v118 = v114 - ((2 * v114 - 1333628572) & 0xB24A09CE) + 828784025;
  v119 = *(_DWORD *)&v100[4
                        * ((((2 * (BYTE2(v84) ^ 0x50)) | 0x1267045E) - (BYTE2(v84) ^ 0x50) + 1993113041) ^ 0x893382E1)] ^ *(_DWORD *)&v98[4 * (HIBYTE(v86) ^ 0x72)] ^ v118 ^ (v118 >> 4) ^ (v118 >> 8);
  v120 = HIBYTE(v101);
  v121 = v119 ^ v116 ^ (((8 * v116) ^ 0xB3A13DF8) - ((2 * ((8 * v116) ^ 0xB3A13DF8)) & 0x77184740) + 999039904) ^ (((32 * v116) ^ 0xCE84F7E0) - ((2 * ((32 * v116) ^ 0xCE84F7E0)) & 0x62A2A40) - 2095770321);
  LOBYTE(v84) = ((((v107 ^ v105) & 0x34 ^ 0xEB) + 62) ^ 0xC2) & (v107 ^ v105 ^ 0xE9);
  v122 = ((BYTE1(v113) ^ 0xFFFFFF3F) + 792684575 + ((2 * BYTE1(v113)) | 0xA1812FC4)) ^ 0x52D29FD4;
  v123 = *(_DWORD *)&v89[4 * ((-278367379 - (v122 | 0xEF68736D) + (v122 | 0x10978C92)) ^ 0x9285843C)];
  LOBYTE(v122) = v84 - ((2 * v84) & 0xFC);
  v124 = v123 - ((2 * v123 - 1333628572) & 0x84B63D3A);
  v125 = (((v117 ^ 0x46 ^ v121) >> 6 << 7) | 0x22D3E03F) - (v117 ^ 0x46 ^ v121);
  v126 = *(_DWORD *)&v93[4
                       * (((v125 & 0xC0CAAC ^ 0xC42C0AA4) + (v125 ^ 0x22D1C04A) - ((v125 ^ 0x22D1C04A) & 0xAAC)) ^ 0xC4EEEA62)];
  v127 = v126 - ((2 * v126 + 564376098) & 0xB202FFEE) + 1775458568;
  v128 = *(_DWORD *)&v100[4 * (BYTE2(v107) ^ 0xC9)] ^ *(_DWORD *)&v98[4 * (HIBYTE(v101) ^ 0x25)] ^ (v124 + 446453583) ^ ((v124 + 446453583) >> 4) ^ ((v124 + 446453583) >> 8) ^ v127 ^ (((8 * v127) ^ 0xC80BFFB8) - ((2 * ((8 * v127) ^ 0xC80BFFB8)) & 0xF657C350) + 2066473388) ^ (((32 * v127) ^ 0x202FFEE0) - ((2 * ((32 * v127) ^ 0x202FFEE0)) & 0xD9C0EB00) - 320834145);
  v129 = (v101 & 0x99 ^ 0xEB0B8701) + (v101 & 0x66 ^ 0x23) - 1;
  v130 = (((2 * (BYTE1(v121) ^ 0xA3)) & 0xFFFFFF8F) - (BYTE1(v121) ^ 0xA3) - 423348424) ^ 0xE2C6352A;
  v131 = *(_DWORD *)&v89[4 * ((((2 * v130) & 0x42F0C) - v130 + 1415948409) ^ 0x5067AA64)];
  v132 = *(_DWORD *)&v93[4
                       * (((v129 & 0x20020BAA ^ 0x1024680A) + (v129 ^ 0xAA1A97B1) - ((v129 ^ 0xAA1A97B1) & 0x41110BAA)) ^ 0x30267B50)];
  v133 = v132 - ((2 * v132 + 564376098) & 0x473D172A) + 879781030;
  v134 = HIBYTE(v107);
  v135 = v131 - 2 * ((v131 + 1480669362) & 0x43DA8BF7 ^ v131 & 1) - 1675901784;
  v136 = *(_DWORD *)&v89[4 * (BYTE1(v101) ^ 0xA9)];
  v137 = *(_DWORD *)&v98[4 * (HIBYTE(v107) ^ 0xCE)] ^ *(_DWORD *)&v100[4 * (BYTE2(v113) ^ 0x6E)] ^ v133 ^ v135 ^ (v135 >> 4) ^ (v135 >> 8) ^ (((32 * v133) ^ 0x73D172A0) - ((2 * ((32 * v133) ^ 0x73D172A0)) & 0x495D6500) + 615428741) ^ (((8 * v133) ^ 0x1CF45CA8) - 2 * (((8 * v133) ^ 0x1CF45CA8) & 0x3783B6B0 ^ (8 * v133) & 0x10) - 1216104793);
  v138 = *(_DWORD *)&v93[4
                       * ((727753333
                         - ((v122 - 2) ^ 0x44310FE | 0x2B60A275)
                         + ((v122 - 2) ^ 0x44310FE | 0xD49F5D8A)) ^ 0xD0DC4DB0)];
  v139 = v138 - ((2 * v138 + 27505186) & 0x917CCF2) - 1789018230;
  v140 = ((8 * v139) ^ 0x245F33C8) - ((2 * ((8 * v139) ^ 0x245F33C8)) & 0x1C418860);
  v141 = *(_DWORD *)&v100[4 * (BYTE2(v121) ^ 0xBF)] ^ *(_DWORD *)&v98[4 * (HIBYTE(v113) ^ 0x3D)] ^ HIBYTE(v113) ^ (v136 - ((2 * v136 + 8548708) & 0x77A167E) + 1543390193) ^ ((v136 - ((2 * v136 + 8548708) & 0x77A167Eu) + 1543390193) >> 4) ^ ((v136 - ((2 * v136 + 8548708) & 0x77A167Eu) + 1543390193) >> 8) ^ v139 ^ (((32 * v139) ^ 0x917CCF20) + 1135362693 + (~(2 * ((32 * v139) ^ 0x917CCF20)) | 0x78A77AFF));
  v142 = HIBYTE(v121);
  v143 = v141 ^ (v140 - 1910455246);
  v144 = *(_DWORD *)&v89[4 * (BYTE1(v107) ^ 0x53)];
  v145 = v144 - ((2 * v144 + 276984164) & 0x1808D750);
  v146 = *(_DWORD *)&v98[4 * (v142 ^ 0xC4)] ^ *(_DWORD *)&v100[4 * (BYTE2(v101) ^ 0x49)];
  v147 = v145 - 465197990;
  v148 = ((v147 >> 3) & 0x17EA74E4 ^ 0x11800464) + ((v147 >> 4) ^ 0xE3357CC8);
  v149 = ((23461 - (_WORD)v145) & 0x200 ^ 0xFFCFEEF9) + 2 * ((23461 - (_WORD)v145) & 0x200);
  v150 = (((2 * (v147 & 0xFFFFFDF0 ^ 0xF5BF88E0)) & 0x52F88060) - (v147 & 0xFFFFFDF0 ^ 0xF5BF88E0) + 1451474883) ^ 0x6719DECB;
  v151 = ((2 * v150) | 0xECFF6B4) - v150;
  v152 = ((v148 + 336250254) & (v149 + 3150087))
       + 1667441557
       - ((2 * ((v148 + 336250254) & (v149 + 3150087))) & 0xC6C64400) == 1667441557;
  v153 = v149 + 1979708840;
  v154 = 1973408666 - v149;
  if (v152)
    v154 = v153;
  v155 = *(_DWORD *)&v93[4 * (v113 ^ 0x4C)];
  v156 = v155 - ((2 * v155 + 564376098) & 0x91B2410E) + 1504377240;
  v157 = v146 ^ v147 ^ v156 ^ (((8 * v156) ^ 0x46C90438) - ((2 * ((8 * v156) ^ 0x46C90438)) & 0xBCF82AD0) + 1585190255) ^ (((32 * v156) ^ 0x1B2410E0) - ((2 * ((32 * v156) ^ 0x1B2410E0)) & 0x68EA8340) + 880099754) ^ (((v154 + v148 - ((2 * (v154 + v148) + 1014350298) & 0x34AFBCA4) - 1198342337) ^ (v151 - 124255066)) >> 4);
  v158 = *(_DWORD *)&v89[4 * (BYTE1(v143) ^ 0x19)];
  v159 = v142 ^ 0xC84C23DF ^ v157;
  v160 = v158 - 2 * ((v158 + 138492082) & 0x8AD547D ^ v158 & 1);
  v161 = ((2 * v159) & 0x1F6 ^ 0x1E6) + (v159 ^ 0xDDD74B0C);
  v162 = (v159 ^ 0xC4) + (v159 & 0x71 ^ 0xF5C5E131) - ((v159 ^ 0xC4) & 0x71);
  v163 = (((v162 & 0x11408DF4 ^ 0x8300114) + (v162 ^ 0x75C5ACE2) - ((v162 ^ 0x75C5ACE2) & 0xDF4)) ^ 0x668F3F91) + 1;
  v164 = (v163 ^ 0x7FFFFB7F) + v161 + ((2 * v163) & 0xFFFFF6FE);
  v165 = *(_DWORD *)&v93[4 * v161
                       + 2292371476
                       + 4 * ((v164 - ((2 * v164 + 72446220) & 0x2FCD4ED2) - 1173397521) ^ 0xE8195895)];
  v166 = v165 - ((2 * v165 + 564376098) & 0x7E1DB69C) + 1340126303;
  v167 = HIBYTE(v128);
  v168 = *(_DWORD *)&v98[4 * (HIBYTE(v137) ^ 0x58)];
  v169 = *(_DWORD *)&v100[4
                        * ((((2 * (BYTE2(v137) ^ 0x5410A291)) | 0xF1C53CA8) - (BYTE2(v137) ^ 0x5410A291) + 119366060) ^ 0xACF23CE8)] ^ *(_DWORD *)&v98[4 * (HIBYTE(v128) ^ 0x5A)] ^ (v160 - 521237202) ^ v166 ^ ((v160 - 521237202) >> 4) ^ ((v160 - 521237202) >> 8) ^ (((8 * v166) ^ 0xF876DA70) - ((2 * ((8 * v166) ^ 0xF876DA70)) & 0xCC38FA10) + 1713143053) ^ (((32 * v166) ^ 0xE1DB69C0) - ((2 * ((32 * v166) ^ 0xE1DB69C0)) & 0x5B133940) - 1383490375);
  v170 = HIBYTE(v137) ^ 0x4AF64716;
  v171 = (v170 & (v168 ^ 0x42B005DE)) - ((2 * (v170 & (v168 ^ 0x42B005DE))) & 0x1008036C);
  v172 = ((v170 + (v168 ^ 0x56B0A5DE)) ^ 0xFE4BFFF7)
       + ((2 * (v170 + (v168 ^ 0x56B0A5DE))) & 0xFC97FFEE)
       + ((2 * v171 - 1710742676) ^ 0xB0787307)
       + ((2 * (2 * v171 - 1710742676)) & 0xAB1F5F28 ^ 0xDFEFB9F7)
       + 1;
  v173 = *(_DWORD *)&v89[4 * (BYTE1(v157) ^ 0x7D)];
  v174 = *(_DWORD *)&v93[4 * (v128 ^ v120 ^ 0xDD)];
  v175 = v174 - ((2 * v174 + 564376098) & 0x29400FE8) + 628220165;
  v176 = ((4 * v175) ^ 0x52801FD0) - ((2 * ((4 * v175) ^ 0x52801FD0)) & 0xF489FE48) - 96141531;
  v177 = (((2 * (v176 & 0xF7B7154 ^ 0x81A6004)) | 0x60ECDA60) - (v176 & 0xF7B7154 ^ 0x81A6004) - 813067568) ^ 0x32FC7E30;
  v178 = v175 & 0xF7B7155 ^ 0x4012C12 ^ (((2 * v177) & 0xFE1DA170) - v177 + 15806278) | ((v175 & 0x10848EAA ^ 0x1000008A)
                                                                                       - ((2
                                                                                         * (v175 & 0x10848EAA ^ 0x1000008A)) & 0x1091D14)
                                                                                       - 1345978405) ^ 0xAF45F9F1;
  v179 = ((2 * (v176 & 0x10848EA8 ^ 0x10800CA0)) & 0x20000D40) - (v176 & 0x10848EA8 ^ 0x10800CA0) - 1063347941;
  v180 = 8 * ((v178 - ((2 * v178) & 0x11F89D3C) + 150752926) ^ ((v179 & 0x872900 ^ 0x8A10017 | v179 & 0x1000D6E8) - 1));
  v181 = v173 - ((2 * v173 - 1333628572) & 0xF543F514) - 756862148;
  v182 = v175 ^ *(_DWORD *)&v100[4 * (BYTE2(v143) ^ 0xED)] ^ v181 ^ (v181 >> 4) ^ (v181 >> 8) ^ (v172
                                                                                               - ((2 * v172 - 1366859972) & 0xA240BCFA)
                                                                                               + 677645851) ^ ((v180 ^ 0x2FAA800) - 2 * ((v180 ^ 0x2FAA800) & 0x26864D18 ^ v180 & 8) - 1501147886);
  v183 = (BYTE2(v157) ^ 0x9D) + (HIWORD(v157) & 0x4D ^ 0x4E1C9F40) - ((BYTE2(v157) ^ 0x9D) & 0x4D);
  v184 = *(_DWORD *)&v89[4 * (BYTE1(v128) ^ 0xDA)];
  v185 = v184 - 2 * ((v184 + 406927538) & 0x36254535 ^ v184 & 1);
  v186 = *(_DWORD *)&v93[4 * (v134 ^ v137 ^ 0x40)];
  v187 = v186 - ((2 * v186 + 564376098) & 0xEC063724) + 114619555;
  v188 = ((((8 * v187) ^ 0xB018DC90) + 1153492620 - ((2 * ((8 * v187) ^ 0xB018DC90)) & 0x8981CD10)) ^ 0x44C0E68C) & ((((2 * v187) ^ 0xEC063724) - 749746694 - ((2 * ((2 * v187) ^ 0xEC063724)) & 0xA69F8BF4)) ^ 0xD34FC5FA);
  v189 = HIBYTE(v157);
  v190 = (HIBYTE(v157) & 0xE5 ^ 0x4AF6471E) - ((v157 >> 23) & 0x82);
  v191 = 8
       * (((10 * (v187 ^ 0x76031B92)) & 0xED64DDE)
        + ((5 * (v187 ^ 0x76031B92)) ^ 0x176B26EF)
        + (v188 ^ 0x6C03840)
        - ((2 * v188) & 0x127F8F7E));
  v192 = HIBYTE(v143);
  v193 = *(_DWORD *)&v100[4 * (v183 ^ 0x4E1C9F14)] ^ *(_DWORD *)&v98[4 * (HIBYTE(v143) ^ 0x2E)] ^ (v185 + 241597926) ^ v187 ^ ((v185 + 241597926) >> 4) ^ ((v185 + 241597926) >> 8) ^ (v191 + 8 - 2 * ((v191 + 245696136) & 0x3C3FF1B0 ^ (v191 + 8) & 0x10) + 1256519712);
  v194 = ((v189 & 0x1A ^ 0xFFFFFFE7) - 394395648 + ((2 * (v189 & 0x1A)) | 0x2F03F3BA) + 1572) ^ 0x11C30CC4;
  v195 = ((BYTE1(v137) ^ 0x4A) + ((v137 >> 8) & 0xA9 ^ 0xEED52EA1) - ((BYTE1(v137) ^ 0x4A) & 0xA9)) ^ 0xE2D76EF9;
  v196 = *(_DWORD *)&v89[4 * ((((2 * v195) & 0x80405EC) - v195 - 1145484023) ^ 0xB7BB0DB3)];
  v197 = *(_DWORD *)&v93[4 * (v143 ^ 0xC5)];
  v198 = v197 - ((2 * v197 + 564376098) & 0x2683F2DA) + 605278846;
  v199 = (v182 & 0x8000000 ^ 0xFA67B68E) + 2 * (v182 & 0x8000000);
  v200 = ((2 * (v182 & 0xF7FFFFFF ^ 0x97A0260F)) & 0xA10482E8) - (v182 & 0xF7FFFFFF ^ 0x97A0260F) - 1484931445;
  v201 = v196 - ((2 * v196 + 813855076) & 0x46960D86) + 2072788853;
  v202 = *(_DWORD *)&v100[4 * (BYTE2(v128) ^ 0x6D)] ^ *(_DWORD *)&v98[4 * (v189 ^ 0x42)] ^ v201 ^ (v201 >> 4) ^ (v201 >> 8) ^ v198 ^ (((8 * v198) ^ 0x9A0FCB68) - ((2 * ((8 * v198) ^ 0x9A0FCB68)) & 0x6455BDB0) + 841670362) ^ (((32 * v198) ^ 0x683F2DA0) - ((2 * ((32 * v198) ^ 0x683F2DA0)) & 0x7C157380) - 1106593344) ^ (v190 - 2104241615) ^ (1416027664 - (v194 | 0x5466DE10) + (v194 | 0xAB9921EF));
  v203 = ((v200 & 0xA42EE179 ^ 0x80022109) + (v200 ^ 0x7FFDD872) - ((v200 ^ 0x7FFDD872) & 0xA42EE179)) ^ (v199 - 1402361023);
  v204 = *(_DWORD *)&v89[4 * (BYTE1(v193) ^ 0x27)];
  v205 = ((BYTE2(v203) ^ 0x76) - ((2 * (BYTE2(v203) ^ 0x76)) & 0x1D8) + 796015596) ^ 0xBE583FC9;
  v206 = *(_DWORD *)&v93[4 * (v202 ^ 0x93)];
  v207 = v206 - ((2 * v206 + 564376098) & 0x61ADB182) + 1101574610;
  v208 = HIBYTE(v169);
  v209 = v204 - ((2 * v204 - 1333628572) & 0xD9E7AFC6) + 1161105557;
  v210 = *(_DWORD *)&v100[4 * ((493900356 - (v205 | 0x1D705244) + (v205 | 0xE28FADBB)) ^ 0x73A5A97A)] ^ *(_DWORD *)&v98[4 * (HIBYTE(v169) ^ 0x44)] ^ v209 ^ (v209 >> 4) ^ (v209 >> 8) ^ v207 ^ (((8 * v207) ^ 0x86B6C608) - ((2 * ((8 * v207) ^ 0x86B6C608)) & 0x208AE5B0) + 272986847) ^ (((32 * v207) ^ 0x1ADB1820) - ((2 * ((32 * v207) ^ 0x1ADB1820)) & 0x5E4DA5C0) + 791073507);
  v211 = *(_DWORD *)&v89[4 * (BYTE1(v202) ^ 0x84)];
  v212 = v211 - ((2 * v211 + 8548708) & 0xA95319A);
  v213 = (-1524921189
        - (v167 ^ 0x27 ^ v169 | 0xA51B8C9B)
        + (v167 ^ 0x27 ^ v169 | 0x5AE47364)) ^ 0x7EC03060;
  v214 = *(_DWORD *)&v93[4 * ((v213 - ((2 * v213) & 0x100E1172) + 1208420537) ^ 0x6C234B12)];
  v215 = v214 - ((2 * v214 + 564376098) & 0xA2F3105E) + 1649107264;
  v216 = HIBYTE(v203);
  v217 = *(_DWORD *)&v100[4 * (BYTE2(v193) ^ 0xCC)] ^ (v212 - 578039425) ^ *(_DWORD *)&v98[4 * (HIBYTE(v203) ^ 0xC3)] ^ ((v212 - 578039425) >> 4) ^ ((v212 - 578039425) >> 8) ^ v215 ^ (((8 * v215) ^ 0x8BCC4178) - ((2 * ((8 * v215) ^ 0x8BCC4178)) & 0xD01E0310) - 401669749) ^ (((32 * v215) ^ 0x2F3105E0) - ((2 * ((32 * v215) ^ 0x2F3105E0)) & 0xF3EAF140) - 101353310);
  v218 = *(_DWORD *)&v89[4 * (BYTE1(v169) ^ 0x26)];
  v219 = v218 - ((2 * v218 - 1333628572) & 0xEB124422) - 842376509;
  v220 = (v219 >> 4) ^ 0x7589221;
  v221 = (v220 & (v219 ^ 0x5892211)) - ((2 * (v220 & (v219 ^ 0x5892211))) & 0xBC42AAC);
  v222 = ((v220 + (v219 ^ 0x75892211)) ^ 0xEFB6DB53)
       + ((2 * (v220 + (v219 ^ 0x75892211))) & 0xDF6DB6A6)
       + ((2 * v221 + 1808018092) ^ 0xE3E50AE9)
       - 2010643351
       + ((2 * (2 * v221 + 1808018092)) & 0xEFBDBF74 ^ 0x3877EAAF);
  v223 = v219 ^ 0x857C2290 ^ ((~(v222 >> 3) | 0xFE15FEFD) + (v222 >> 4) - 252379006);
  v224 = *(_DWORD *)&v100[4
                        * ((((2 * (BYTE2(v202) ^ 0xC010343F)) & 0x802068AE) - (BYTE2(v202) ^ 0xC010343F) + 606751144) ^ 0xE43A7DA9)] ^ *(_DWORD *)&v98[4 * (HIBYTE(v193) ^ 0x8C)] ^ HIBYTE(v193) ^ 0x2A66EE4E;
  v225 = (v223 & v224) - ((2 * (v223 & v224)) & 0x3BD99A66);
  v226 = v223 + v224;
  v227 = *(_DWORD *)&v93[4 * (v203 ^ 0xE5)];
  v228 = ((2 * v226) & 0xEF76FFFE)
       + (v226 ^ 0xF7BB7FFF)
       + ((2 * v225 + 1004116582) ^ 0x3A5DCB63)
       + ((2 * (2 * v225 + 1004116582)) & 0xFCF75DF4 ^ 0x8B4CEB3B);
  v229 = v227 - ((2 * v227 + 564376098) & 0x3E76CF9E) + 806174944;
  v230 = (((32 * v229) ^ 0xE76CF9E0) - ((2 * ((32 * v229) ^ 0xE76CF9E0)) & 0x3B62600) - 2116349155) ^ v229 ^ (((8 * v229) ^ 0xF9DB3E78) - ((2 * ((8 * v229) ^ 0xF9DB3E78)) & 0x95711DF0) + 1253609210) ^ (v228 - 1343692704 + (~(2 * v228 + 226516474) | 0xADAE9D3B));
  v231 = *(_DWORD *)&v89[4
                       * (((BYTE1(v203) ^ 0x97) + ((v203 >> 8) & 0x29 ^ 0x2328) - ((BYTE1(v203) ^ 0x97) & 0x29)) ^ 0x2381)];
  v232 = *(_DWORD *)&v93[4 * (v192 ^ 0x32 ^ v193)];
  v233 = v232 - ((2 * v232 + 27505186) & 0x1ABD1244) - 1640996301;
  v202 >>= 24;
  v234 = v231 - ((2 * v231 - 1333628572) & 0xE7108AAA) + 1271496199;
  v235 = *(_DWORD *)&v100[4 * (BYTE2(v169) ^ 0x60)] ^ *(_DWORD *)&v98[4 * (v202 ^ 0x5F)] ^ v234 ^ (v234 >> 4) ^ (v234 >> 8) ^ v233 ^ (((32 * v233) ^ 0xABD12440) - ((2 * ((32 * v233) ^ 0xABD12440)) & 0xF5EAA4C0) + 2062897762) ^ (((8 * v233) ^ 0x6AF44910) + 1191871185 - 2 * (((8 * v233) ^ 0x6AF44910) & 0x470A82D8 ^ (8 * v233) & 8));
  v236 = (BYTE1(v230) ^ 0x36) + ((v230 >> 8) & 0x72 ^ 0x6525F840) - ((BYTE1(v230) ^ 0x36) & 0x72);
  v237 = *(_DWORD *)&v89[4 * (((v236 & 0xB9A ^ 0x13891399) + (v236 & 0x465 ^ 0x80400004) - 1) ^ 0x93C91B5B)];
  v238 = *(_DWORD *)&v93[4 * ((v235 ^ v202) ^ 0xD1)];
  v239 = v237 - ((2 * v237 - 1333628572) & 0xD61847EA) + 1129143463;
  v240 = *(_DWORD *)&v100[4 * (((BYTE2(v217) ^ 0x2B) - ((2 * (BYTE2(v217) ^ 0x2B)) & 0x86) + 579) ^ 0x230)] ^ HIBYTE(v210) ^ *(_DWORD *)&v98[4 * (HIBYTE(v210) ^ 0xE0)] ^ v239 ^ (v239 >> 8) ^ (v239 >> 4) ^ 0x9B4727F9;
  v241 = v238 - ((2 * v238 + 27505186) & 0x26744A8) - 1845134491;
  v242 = (((v240 & 0x28922022 ^ 0x84E2D13) + 0x3FFFFFFF) & 0x28922032 | v240 & 0x14009049) ^ 0x1C100030 | ((v240 & 0x40400204 ^ 0x74C0A069) + (v240 & 0x832D4D90 ^ 0x254401) - 2) & 0xC36D4FFC ^ 0x14078;
  v243 = (((32 * v241) ^ 0x26744A80) - ((2 * ((32 * v241) ^ 0x26744A80)) & 0x66E3C280) + 863101269) ^ v241 ^ (((8 * v241) ^ 0x99D12A0) - ((2 * ((8 * v241) ^ 0x99D12A0)) & 0x35BC6870) + 450769977) ^ (v242 - ((2 * v242) & 0x8F256BF4) + 1200797178);
  v244 = (((2 * (HIWORD(v230) & 0xF6 ^ 0xB0)) | 0xDA32B55A) - (HIWORD(v230) & 0xF6 ^ 0xB0) - 1830378157) ^ 0x4F995825;
  v245 = ((2 * (BYTE2(v230) ^ 0x2008183B)) & 0x1010F8) - (BYTE2(v230) ^ 0x2008183B) - 322752125;
  v246 = ((v245 & 0x2409 ^ 0xFE51BBF6) - ((2 * v245) & 0x812) - 339870713) ^ (((2 * v244) & 0x11794424)
                                                                            - v244
                                                                            - 146579988);
  v247 = (((v246 ^ 0xC19D53EF) - 28206090) ^ 0x765D7BED)
       + ((2 * v246) ^ 0x30A2ED3)
       + ((4 * v246) & 0xFF9EEDE4 ^ 0xF9EBB25B)
       + ((2 * ((v246 ^ 0xC19D53EF) - 28206090)) & 0xECBAF7DA)
       + 1;
  v248 = v245 ^ ((v245 ^ 0x3334D67F) - ((2 * (v245 ^ 0x3334D67F) + 2) & 0xB398002A) - 640942058) ^ 0xB5FF5644 ^ (v247 - ((2 * v247 + 316929548) & 0x41F0FFA2) - 1435862313);
  v249 = *(_DWORD *)&v89[4 * (BYTE1(v235) ^ 0xB7)];
  v250 = *(_DWORD *)&v93[4
                       * ((73579
                         - (v208 ^ v210 ^ 0xC)
                         + ((2 * (v208 ^ v210 ^ 0xC)) & 0x5E)
                         + 101) ^ 0x11F6B)];
  v251 = v250 - ((2 * v250 + 27505186) & 0x144DB036) - 1694977748;
  v252 = v249 - ((2 * v249 - 1333628572) & 0x89EEA236) - 1657239091;
  v253 = HIBYTE(v217) ^ *(_DWORD *)&v98[4 * (HIBYTE(v217) ^ 0x5F)] ^ v252 ^ *(_DWORD *)&v100[4
                                                                                           * ((v248
                                                                                             - ((2 * v248 + 2091071468) & 0x4779FB16)
                                                                                             + 571382145) ^ 0xDDED6600)] ^ (v252 >> 4) ^ (v252 >> 8) ^ v251 ^ (((8 * v251) ^ 0x5136C0D8) - ((2 * ((8 * v251) ^ 0x5136C0D8)) & 0x5BF85670) - 1375982791) ^ (((32 * v251) ^ 0x44DB0360) - ((2 * ((32 * v251) ^ 0x44DB0360)) & 0x65CEEC0) + 53376888);
  v254 = ((((v235 ^ v202) << 11) ^ 0x65BE8800) - ((2 * (((v235 ^ v202) << 11) ^ 0x65BE8800)) & 0x57B6A000) - 1411689119) & 0xF8000000 ^ 0xD8000000;
  v255 = (((2 * v254) | 0x95D237EC) - v254 + 890692618) ^ 0xF86199D4;
  v256 = (394929920 - (v255 | 0x178A2700) + (v255 | 0xE875D8FF)) ^ 0xAAFD5ADD | (((2 * ((v235 >> 21) & 7 ^ 0x981A21)) | 0xC3EE3534)
                                                                               - ((v235 >> 21) & 7 ^ 0x981A21)
                                                                               - 1643584154) ^ 0x616F00BF;
  v257 = v256 - ((2 * v256) & 0xAF079E5A) - 679227603;
  HIDWORD(v258) = v257 ^ 0x5058040;
  LODWORD(v258) = v257 ^ 0x55555555;
  v259 = *(_DWORD *)&v89[4 * (BYTE1(v210) ^ 0xF3)];
  v260 = *(_DWORD *)&v93[4 * (v217 ^ v216 ^ 0xE4)];
  v261 = v260 - ((2 * v260 + 564376098) & 0xA92CAD00) + 1701326737;
  v262 = v259 - ((2 * v259 + 813855076) & 0x6535EFC6) + 182202517;
  v263 = *(_DWORD *)&v89[4
                       * ((-539631315 - (BYTE1(v217) ^ 0x45 | 0xDFD5E12D) + (BYTE1(v217) ^ 0x45 | 0x202A1ED2)) ^ 0x202A1E69)];
  v264 = *(_DWORD *)&v100[4
                        * (((v258 >> 27) - ((2 * (v258 >> 27)) & 0xB37E6E74) + 1505703738) ^ 0x976DAF7)] ^ *(_DWORD *)&v98[4 * (HIBYTE(v230) ^ 0xAD)] ^ v262 ^ (v262 >> 4) ^ (v262 >> 8) ^ v261 ^ (((32 * v261) ^ 0x92CAD000) - ((2 * ((32 * v261) ^ 0x92CAD000)) & 0x530E49C0) - 1450760966) ^ (((8 * v261) ^ 0xA4B2B400) - 2 * (((8 * v261) ^ 0xA4B2B400) & 0x5744D038 ^ (8 * v261) & 0x10) - 683356113) ^ HIBYTE(v230);
  v265 = ((v263 - 1397111940) ^ 0xAB877536) + 1703104101 - ((2 * ((v263 - 1397111940) ^ 0xAB877536)) & 0xCB069CCA);
  v266 = 2 * v263 - ((4 * v263 + 854003184) & 0x36CB4FAC) - 1260835121;
  v267 = (v266 & 0x570EEA6C ^ 0xEF789D3E) + (v265 ^ 0x65834E65) + ((2 * v266) & 0x281854D0 ^ 0x20084480) + 1132707974;
  v268 = (v230 & 0xBE ^ 0x99) - (v230 & 0x41) - 328273600;
  v269 = *(_DWORD *)&v93[4
                       * (((v268 & 0x4006E113) + (v268 ^ 0xE806F753) - ((v268 ^ 0xE806F753) & 0x600113) + 293601280) ^ 0x558EE72F)];
  v270 = v269 - ((2 * v269 + 564376098) & 0xA36C2D8A) - 494407722;
  v271 = v264 ^ ((v264 ^ 0x51314E6D) - ((2 * (v264 ^ 0x51314E6D) + 804814726) & 0xC48C8B58) - 96303761) ^ ((v264 ^ 0xC6CD71AF) - ((2 * (v264 ^ 0xC6CD71AF) + 2) & 0xC85D7A32) - 466698982) ^ 0xBF5A76E5;
  v235 >>= 24;
  v272 = v271 - 2 * ((v271 + 402407362) & 0x4AE23AF3 ^ v271 & 1);
  v273 = v267 - ((2 * v267) & 0x2C1F57D0) + 370125800;
  v274 = HIBYTE(v243);
  v272 -= 488736076;
  v275 = *(_DWORD *)&v98[4 * (v235 ^ 0xA4)] ^ *(_DWORD *)&v100[4 * (BYTE2(v210) ^ 0x4B)] ^ v270 ^ (((8 * v270) ^ 0x8DB0B628)
                                                                                                 - ((2 * ((8 * v270) ^ 0x8DB0B628)) & 0xE75F1BB0)
                                                                                                 + 1940884958) ^ (((32 * v270) ^ 0x36C2D8A0) - ((2 * ((32 * v270) ^ 0x36C2D8A0)) & 0x4AEACA00) + 628450564) ^ v273 ^ (v273 >> 4);
  v276 = v275 ^ (v273 >> 8);
  v277 = *(_DWORD *)&v89[4 * (BYTE1(v272) ^ 0x2F)];
  v278 = *(_DWORD *)&v93[4 * (v235 ^ 0xEC ^ v276)];
  v279 = v278 - ((2 * v278 + 564376098) & 0x375436A6) - 1401162652;
  v280 = v277 - ((2 * v277 - 1333628572) & 0xE0376A68) + 1214049766;
  v281 = *(_DWORD *)&v89[4 * (BYTE1(v276) ^ 0x68)];
  v282 = *(_DWORD *)&v100[4 * (BYTE2(v253) ^ 0xAE)] ^ *(_DWORD *)&v98[4 * (HIBYTE(v243) ^ 0xC4)] ^ v280 ^ (v280 >> 4) ^ (v280 >> 8) ^ v279 ^ (((8 * v279) ^ 0xDD50DA98) - ((2 * ((8 * v279) ^ 0xDD50DA98)) & 0x82F37BF0) - 1048986116) ^ (((32 * v279) ^ 0x75436A60) - ((2 * ((32 * v279) ^ 0x75436A60)) & 0x603E3B40) - 1340138064);
  v283 = v281 - ((2 * v281 + 813855076) & 0x7A872784);
  v284 = *(_DWORD *)&v93[4
                       * ((((2 * (v243 ^ 0x30D802E2)) | 0x78DCD090)
                         - (v243 ^ 0x30D802E2)
                         - 1013868616) ^ 0xCB66A56)];
  v285 = v284 - ((2 * v284 + 564376098) & 0xB20B5F6E) + 1775732936;
  v286 = ((v243 >> 8) & 0x14 ^ 0xCC449091) - ((v243 >> 8) & 1);
  v287 = HIBYTE(v253);
  v288 = *(_DWORD *)&v98[4 * (HIBYTE(v253) ^ 0x64)] ^ (v283 + 361024628) ^ *(_DWORD *)&v100[4 * (BYTE2(v272) ^ 0x9F)] ^ ((v283 + 361024628) >> 4) ^ ((v283 + 361024628) >> 8) ^ v285 ^ (((8 * v285) ^ 0xC82D7DB8) - ((2 * ((8 * v285) ^ 0xC82D7DB8)) & 0xA52E5B00) - 761844346) ^ (((32 * v285) ^ 0x20B5F6E0) - ((2 * ((32 * v285) ^ 0x20B5F6E0)) & 0xC06A5500) - 533386610);
  v289 = 2 * HIWORD(v276);
  v290 = (BYTE2(v276) ^ 0x53FFEE44) + (v289 & 0x194 ^ 0x114);
  v291 = (v289 ^ HIDWORD(a19)) - ((2 * (v289 ^ HIDWORD(a19))) & 0x60) + 304;
  v292 = v290 + (v291 & 0xFA ^ 0x80010C15);
  v293 = HIBYTE(v272);
  v294 = *(_DWORD *)&v100[4 * v292 + 2952533564 + 4 * ((2 * v291) & 0x1B4 ^ 0xFFFFFFDF)] ^ *(_DWORD *)&v98[4 * (HIBYTE(v272) ^ 0x1E)];
  v295 = *(_DWORD *)&v89[4
                       * (v286 ^ 0xD618796B ^ ((v286 ^ 0xCC449094)
                                             + (BYTE1(v243) ^ 0xBA)
                                             - ((2 * ((v286 ^ 0xCC449094) + (BYTE1(v243) ^ 0xBA))) & 0x34B9D3FE)
                                             + 442296831))];
  v296 = v295 - 2139960890 + (~(2 * v295 + 813855076) | 0xAF9CDDD9);
  v297 = ((v253 & 0x41) + (v253 ^ 0xCD) - ((v253 ^ 0xCD) & 0x41) - 1453853952) ^ 0x615AB201;
  v298 = *(_DWORD *)&v93[4 * ((((2 * v297) | 0xF1B0BDCA) - v297 + 120037659) ^ 0x30D51FF8)];
  v299 = v298 - ((2 * v298 + 27505186) & 0x1D30F256) - 1620422084;
  v300 = (((v253 >> 8) & 0xCB ^ 0x2C3FF42) + ((v253 >> 8) & 0x34 ^ 0x25) - 1) ^ 0x6C9633F;
  v301 = *(_DWORD *)&v89[4 * ((v300 - ((2 * v300) & 0x99234) - 350959334) ^ 0xEF1E555D)];
  v302 = v294 ^ v296 ^ (v296 >> 4) ^ (v296 >> 8) ^ v299 ^ (((8 * v299) ^ 0x74C3C958)
                                                         - ((2 * ((8 * v299) ^ 0x74C3C958)) & 0xDFDCB160)
                                                         + 1877891248) ^ (((32 * v299) ^ 0xD30F2560)
                                                                        - ((2 * ((32 * v299) ^ 0xD30F2560)) & 0x461F4840)
                                                                        + 588227642);
  v303 = *(_DWORD *)&v93[4 * (v272 ^ 0xC8)];
  v304 = v303 - ((2 * v303 + 27505186) & 0x8F2BD88) + 357251029;
  v305 = v301 - ((2 * v301 + 8548708) & 0x38BCD98) - 637067394;
  v306 = *(_DWORD *)&v100[4 * (BYTE2(v243) ^ 0x9C)] ^ *(_DWORD *)&v98[4 * (HIBYTE(v275) ^ 0x82)] ^ HIBYTE(v275) ^ v305 ^ (v305 >> 4) ^ (v305 >> 8) ^ v304 ^ (((8 * v304) ^ 0x23CAF620) - ((2 * ((8 * v304) ^ 0x23CAF620)) & 0xAA7EA8B0) + 1430213722) ^ (((32 * v304) ^ 0x8F2BD880) - ((2 * ((32 * v304) ^ 0x8F2BD880)) & 0xCB27A600) - 443297013);
  v307 = *(_DWORD *)&v89[4
                       * (((BYTE1(v302) ^ a19)
                         + ((v302 >> 8) & 0x35 ^ 0xB9CA1001)
                         - ((BYTE1(v302) ^ a19) & 0x108A35)) ^ 0xB9CA3004)];
  v308 = v307 - ((2 * v307 - 1333628572) & 0xC971C062);
  v309 = *(_DWORD *)&v93[4 * (v306 ^ 0x5A)];
  v310 = v309 - ((2 * v309 + 564376098) & 0xBC13D490) + 1859896153;
  v311 = HIBYTE(v288);
  if (v288 < 0)
    v313 = 535723074;
  else
    v313 = 535723075;
  v312 = (((v311 << 25) ^ 0x6E000000) - 235740315 - (((v311 << 25) ^ 0x6E000000) >> 28 << 29)) ^ 0xF1F2E365;
  v314 = v312 + v313 - ((2 * v312) & 0x3FDCF884);
  HIDWORD(v315) = v314 ^ 0x19C8FA;
  LODWORD(v315) = v314 ^ 0xE3FFFFFF;
  v316 = HIBYTE(v282);
  v317 = *(_DWORD *)&v100[4
                        * ((((2 * (BYTE2(v288) ^ 0x901006B)) & 0x190) - (BYTE2(v288) ^ 0x901006B) + 463283255) ^ 0x129C2419)] ^ *(_DWORD *)&v98[4 * (HIBYTE(v282) ^ 0xB8)] ^ (v308 - 1124460317) ^ ((v308 - 1124460317) >> 4) ^ ((v308 - 1124460317) >> 8) ^ v310 ^ (((32 * v310) ^ 0xC13D4900) - ((2 * ((32 * v310) ^ 0xC13D4900)) & 0x32B6E540) + 425423540) ^ (((8 * v310) ^ 0xF04F5240) + 402623031 - 2 * (((8 * v310) ^ 0xF04F5240) & 0x17FF8A38 ^ (8 * v310) & 8));
  v318 = *(_DWORD *)&v89[4 * ((((2 * (BYTE1(v306) ^ 0xD3)) & 0x5C) - (BYTE1(v306) ^ 0xD3) + 2513) ^ 0x9BC)];
  v319 = *(_DWORD *)&v93[4
                       * (((v274 ^ 0x8C4404CE ^ v282)
                         - ((2 * (v274 ^ 0x8C4404CE ^ v282)) & 0x888013C)
                         - 152656994) ^ 0x7AA2A7C6)];
  v320 = v319 - ((2 * v319 + 564376098) & 0x34832AC8) + 722693749;
  v321 = ((((8 * v320) ^ 0xD20CAB20) - 158177462 - 2 * (((8 * v320) ^ 0xD20CAB20) & 0x76926758 ^ (8 * v320) & 0x10) + 1) ^ 0xF692674A) & ((((2 * v320) ^ 0x34832AC8) + 1875579126 - ((2 * ((2 * v320) ^ 0x34832AC8)) & 0xDF9621EC)) ^ 0x6FCB10F6);
  v322 = 8
       * (((10 * (v320 ^ 0x9A419564)) & 0x16BBFBDE)
        + ((5 * (v320 ^ 0x9A419564)) ^ 0xB5DFDEF)
        + (v321 ^ 0x13A8D008)
        - ((2 * v321) & 0x18AE5FEE));
  v323 = (HIWORD(v306) & 0x27 ^ 0x8AF9DD26) + (HIWORD(v306) & 0xD8 ^ 0xC1) - 1;
  v324 = v318 - ((2 * v318 - 1333628572) & 0x9ADF1D68) + 632342374;
  v325 = *(_DWORD *)&v100[4
                        * ((((2 * (BYTE2(v302) ^ 0x1A580F18)) & 0x201AEC) - (BYTE2(v302) ^ 0x1A580F18) + 392716937) & 0x1202FFF ^ 0x1202D4F)] ^ *(_DWORD *)&v98[4 * (v311 ^ 0xE3)] ^ v324 ^ (v324 >> 4) ^ (v324 >> 8) ^ v320 ^ ((v315 >> 25) - ((2 * (v315 >> 25)) & 0x8C81F104) + 1178663042) ^ (v322 + 8 - 2 * ((v322 + 13209672) & 0xD37898 ^ (v322 + 8) & 8) - 2002974511);
  v326 = *(_DWORD *)&v100[4
                        * (((v323 & 0x82A80CB3 ^ HIDWORD(a18)) + (v323 ^ 0x8AE9DCA5) - ((v323 ^ 0x8AE9DCA5) & 0x1000B3)) ^ 0x82AA2DB4)];
  v327 = HIBYTE(v302) ^ *(_DWORD *)&v98[4 * (HIBYTE(v302) ^ 0x2C)];
  v328 = (v326 ^ v327 ^ 0xD5991111) + 1;
  v327 ^= 0x1C46E2BCu;
  v329 = v327 + (v328 ^ 0x7FD2DF76) + ((2 * v328) & 0xFFA5BEEC) - 2144526198;
  v330 = (v326 ^ ((v326 ^ 0xC9DFF3AD) - ((2 * (v326 ^ 0xC9DFF3AD) + 2) & 0x7D96AAE2) + 1053513074) ^ 0xB94892A7 ^ (v329 - ((2 * v329) & 0x63479708) - 1314665596))
       + v327;
  v331 = *(_DWORD *)&v89[4 * (BYTE1(v282) ^ 0x5A)];
  v332 = *(_DWORD *)&v93[4 * (v287 ^ 0x2D ^ v288)];
  v333 = v332 - ((2 * v332 + 564376098) & 0xC35C6C6C) - 226488505;
  v334 = v331 - ((2 * v331 + 8548708) & 0x2C5965E) + 1503921121;
  v335 = *(_DWORD *)&v89[4 * (BYTE1(v288) ^ 0x57)];
  v336 = v334 ^ (v334 >> 8) ^ (v334 >> 4) ^ v333 ^ (((8 * v333) ^ 0xD71B1B0)
                                                  - ((2 * ((8 * v333) ^ 0xD71B1B0)) & 0x47F06110)
                                                  + 603467915) ^ (((32 * v333) ^ 0x35C6C6C0)
                                                                - ((2 * ((32 * v333) ^ 0x35C6C6C0)) & 0x211A0440)
                                                                - 1869807060) ^ (v330
                                                                               - 1714484376
                                                                               - ((2 * v330) & 0x339E16D0));
  v337 = *(_DWORD *)&v93[4 * (v302 ^ v293 ^ 0x47)];
  v338 = v337 - 743543927 + (~(2 * v337 + 564376098) | 0x7A46DB11);
  v339 = v335 - ((2 * v335 + 813855076) & 0x5E6BB00E) + 125243577;
  v340 = *(_DWORD *)&v98[4 * (HIBYTE(v306) ^ 0x78)] ^ *(_DWORD *)&v100[4 * (BYTE2(v282) ^ 0x5A)] ^ HIBYTE(v306) ^ v339 ^ (v339 >> 4) ^ (v339 >> 8) ^ v338 ^ (((8 * v338) ^ 0x16E493B8) - ((2 * ((8 * v338) ^ 0x16E493B8)) & 0xD38AE9C0) - 372935454) ^ (((32 * v338) ^ 0x5B924EE0) - ((2 * ((32 * v338) ^ 0x5B924EE0)) & 0xABEE4600) - 705223929);
  if ((v340 & 0x40000) != 0)
    v341 = -262144;
  else
    v341 = 0x40000;
  v342 = ((v341 + (v340 ^ 0xF1E19B77)) ^ 0x7EFDBAFD) - 2130557693 + ((2 * (v341 + (v340 ^ 0xF1E19B77))) & 0xFDFB75FA);
  v343 = HIBYTE(v342) - 1737136024 - ((v342 >> 23) & 0xD0);
  v344 = *(_DWORD *)&v89[4
                       * (((BYTE1(v336) ^ 0x682144DA) - ((2 * (BYTE1(v336) ^ 0x682144DA)) & 0x4288D0) - 1850507672) ^ 0xF9923A50)];
  v345 = v344 - ((2 * v344 - 1333628572) & 0xE0E22AFA) + 1219644975;
  v346 = (((v345 & 0x20000000 ^ 0x3128F200) & 0xBFFFFFFF | ((((v345 & 0x20000000) >> 29) & 1) << 30)) + 566411613) ^ 0x72EBB35D | (v345 >> 8) ^ (v345 >> 4) ^ 0xFF76042;
  v347 = (((2 * (v345 & 0xDFFFFFFF ^ 0xC994EBD5)) | 0xA9C7349E) - (v345 & 0xDFFFFFFF ^ 0xC994EBD5) - 1424202319) ^ 0x55075EC7;
  v348 = *(_DWORD *)&v93[4
                       * ((((2 * (v340 ^ 0x40014821)) | 0x37B69A62)
                         - (v340 ^ 0x40014821)
                         - 467356977) ^ 0x5BDA058B)];
  v349 = v348 + 962692053 - ((2 * v348 + 564376098) & 0x511F5588);
  v350 = *(_DWORD *)&v98[4 * (HIBYTE(v325) ^ 0x3A)];
  v351 = ((v350 & 0x5D81FA98 ^ 0x50015208)
        + (v350 & 0x49000808 ^ 0xA90C0941)
        - ((v350 & 0x5D81FA98 ^ 0x50015208) & 0x49000808)) ^ 0xEDEE9859;
  v352 = ((v350 & 0x803E0100 ^ 0x518D0009) + (v350 & 0x22400467) - 1) ^ HIBYTE(v325) & 0x67 ^ 0x51CB002A | (1055086944 - (v351 | 0x3EE35960) + (v351 | 0xC11CA69F)) ^ HIBYTE(v325) & 0x98 ^ 0x89FF870F;
  v353 = *(_DWORD *)&v98[4 * (HIBYTE(v317) ^ 0x43)] ^ HIBYTE(v317) ^ v349 ^ *(_DWORD *)&v100[4 * (BYTE2(v325) ^ 0x8D)] ^ (((8 * v349) ^ 0x447D5620) - ((2 * ((8 * v349) ^ 0x447D5620)) & 0x3527E670) + 445903679) ^ (((32 * v349) ^ 0x11F55880) - ((2 * ((32 * v349) ^ 0x11F55880)) & 0x555E61C0) - 1431359255) ^ (v346 - ((2 * v346) & 0xF2D3B9F6) + 2036980987) ^ (v347 - ((2 * v347) & 0x1FAF6E08) - 1881688316);
  v354 = (((v340 >> 8) & 0x9B ^ 0xD6DC7D03) + ((v340 >> 8) & 0x64 ^ 0x41) - 1) ^ 0xC70DED3A;
  v355 = *(_DWORD *)&v100[4 * (BYTE2(v336) ^ 0xD9)] ^ 0x536B8AA ^ (v352 - ((2 * v352) & 0x662D69F0) + 857126136);
  v356 = *(_DWORD *)&v89[4 * ((770571636 - (v354 | 0x2DEDFD74) + (v354 | 0xD212028B)) ^ 0xC3C392B0)] + 1480669362;
  v357 = (v355 & v356) - ((2 * (v355 & v356)) & 0x5982E74E);
  v358 = v355 + v356;
  v359 = ((v356 >> 4) - ((v356 >> 3) & 0xA9D31E) + 274000271) ^ ((v356 >> 8) - ((v356 >> 7) & 0x2C1CE2) + 269880945) ^ 0x42E7FE;
  v360 = (v358 ^ 0xFFFE4BAB)
       + ((2 * v358) & 0xFFFC9756)
       + ((2 * v357 - 645732530) ^ 0x9AA2A66F)
       - 1126075595
       + ((2 * (2 * v357 - 645732530)) & 0x79BF7DBC ^ 0xCEFAB363);
  v361 = (v360 & v359) - ((2 * (v360 & v359)) & 0x10B94AFE);
  v362 = (((v317 ^ v316) & 0xB6 ^ 0x1B116C11) + ((v317 ^ v316) & 0x49) - 1) ^ 0x2A116867;
  v363 = *(_DWORD *)&v93[4 * ((((2 * v362) & 0x2200083C) - v362 + 1860764385) ^ 0x5FE90628)];
  v364 = ((2 * (v360 + v359)) & 0x3FDBBF9A)
       + ((v360 + v359) ^ 0x9FEDDFCD)
       + ((2 * v361 - 1866904834) ^ 0x9429466F)
       + ((2 * (2 * v361 - 1866904834)) & 0xF6DFE6DC ^ 0xDFAD7B23);
  v365 = v363 - ((2 * v363 + 564376098) & 0xBC9CAC9E) + 1864380256;
  v366 = (BYTE2(v342) - ((v342 >> 15) & 0x88) + 68) ^ 0xA4090003;
  v367 = *(_DWORD *)&v89[4 * (BYTE1(v317) ^ 0x2D)];
  v368 = (((32 * v365) ^ 0xC9CAC9E0) - ((2 * ((32 * v365) ^ 0xC9CAC9E0)) & 0x4E0C4140) + 654712995) ^ v365 ^ (((8 * v365) ^ 0xF272B278) + 1737597198 + (~(2 * ((8 * v365) ^ 0xF272B278)) | 0x30DCBDEF)) ^ (v364 - ((2 * v364 - 1224464570) & 0xCFA83B1C) + 1129722161);
  v369 = *(_DWORD *)&v93[4
                       * (((v325 ^ 0xD9)
                         + (v325 & 0xF5 ^ 0x824)
                         - ((v325 ^ 0xD9) & 0xF5)) ^ 0x8EE)];
  v370 = v369 - ((2 * v369 + 564376098) & 0xF8B87DBC) + 221124591;
  v371 = v367 - ((2 * v367 - 1333628572) & 0xE80C02BC) + 1279736336;
  v372 = *(_DWORD *)&v100[4 * ((((2 * v366) | 0xC7C49142) - v366 + 471709535) ^ 0x47EB4881)] ^ *(_DWORD *)&v98[4 * (HIBYTE(v336) ^ 0x6B)] ^ HIBYTE(v336) ^ v371 ^ (v371 >> 4) ^ (v371 >> 8) ^ v370 ^ (((8 * v370) ^ 0xE2E1F6F0) + 1421602201 + (~(2 * ((8 * v370) ^ 0xE2E1F6F0)) | 0x568824CF)) ^ (((32 * v370) ^ 0x8B87DBC0) - ((2 * ((32 * v370) ^ 0x8B87DBC0)) & 0xC457D400) - 500438522);
  v373 = *(_DWORD *)&v89[4 * (BYTE1(v325) ^ 4)];
  v374 = ((v336 ^ 0xD1) - ((2 * (v336 ^ 0xD1)) & 0xE6) - 1165803917) ^ 0xB383FE61;
  v375 = *(_DWORD *)&v93[4 * ((((2 * v374) & 0x20085EC) - v374 - 866676471) ^ 0xC5575148)];
  v376 = v375 - ((2 * v375 + 564376098) & 0x3A2EAECC) - 1377226633;
  v377 = v373 - ((2 * v373 - 1333628572) & 0x8A6BFD8A) + 494352247;
  v378 = *(_DWORD *)&v98[4 * (v343 ^ 0x9875689F)] ^ *(_DWORD *)&v100[4 * (BYTE2(v317) ^ 0x11)] ^ v377 ^ (v377 >> 4) ^ (v377 >> 8) ^ v376 ^ (((8 * v376) ^ 0xE8BABB30) - ((2 * ((8 * v376) ^ 0xE8BABB30)) & 0xEC0F5190) - 167270195) ^ (((32 * v376) ^ 0xA2EAECC0) - ((2 * ((32 * v376) ^ 0xA2EAECC0)) & 0x9B636C0) - 2066015374) ^ v343;
  v379 = ((v372 >> 15) & 0xFC5E ^ 0xE44A) + (HIWORD(v372) ^ 0x71858D8A);
  v380 = *(_DWORD *)&v89[4 * (BYTE1(v372) ^ 0x2D)];
  v381 = (((2 * (v379 + 209)) & 0x1EE)
        + ((((v372 >> 15) & 0x5E ^ 0x4A) + (BYTE2(v372) ^ 0x8A) - 47) ^ 0x6EFDEFF7u)
        - 1862135799)
       % 0xE1;
  v382 = *(_DWORD *)&v93[4 * (v378 ^ 0x41)];
  v383 = v382 - ((2 * v382 + 564376098) & 0x994241D4) + 1567816187;
  v384 = ((32 * v383) ^ 0x94241D40) - ((2 * ((32 * v383) ^ 0x94241D40)) & 0xE3BC59C0);
  v152 = ((2 * v381) & 0xE8) + (v381 ^ 0x7FDF7A74) == 2145352308;
  v385 = HIBYTE(v353);
  v386 = v380 - ((2 * v380 + 813855076) & 0x26559DAA) - 345241721;
  v387 = *(_DWORD *)&v100[4 * (BYTE2(v368) ^ 1)] ^ *(_DWORD *)&v98[4 * (HIBYTE(v353) ^ 0x37)] ^ v386 ^ (v386 >> 4) ^ (v386 >> 8);
  v388 = v383 ^ (((8 * v383) ^ 0x65090750) - ((2 * ((8 * v383) ^ 0x65090750)) & 0x3C47F30) + 31604632);
  v389 = (v381 ^ 0xC90009) - ((2 * v381) & 0x1EC) + 147;
  v390 = v384 - 237097734;
  if (!v152)
    v389 = 156;
  v391 = v387 ^ v388 ^ v390;
  v392 = *(_DWORD *)&v89[4 * (BYTE1(v378) ^ 0xF7)];
  v393 = (v379 + v389 + 53) + 578705337 - ((2 * (v379 + v389 + 53)) & 0x188);
  v394 = *(_DWORD *)&v93[4 * (v353 ^ 0x1B)];
  v395 = v394 - ((2 * v394 + 564376098) & 0xBB58C9EE) - 293716472;
  v396 = HIBYTE(v368);
  v397 = v392 - ((2 * v392 + 276984164) & 0x1444C536) - 496788659;
  v398 = *(_DWORD *)&v98[4 * (HIBYTE(v368) ^ 0xDD)] ^ v397 ^ *(_DWORD *)&v100[4 * ((v393 + 11) ^ 0x227E57B9)] ^ (v397 >> 4) ^ (v397 >> 8);
  v399 = v395 ^ (((8 * v395) ^ 0xED6327B8) - ((2 * ((8 * v395) ^ 0xED6327B8)) & 0xB33D09B0) - 643922728) ^ (((32 * v395) ^ 0xB58C9EE0) - ((2 * ((32 * v395) ^ 0xB58C9EE0)) & 0x2F1F9C80) + 395300438);
  v400 = (1905050377 - (BYTE1(v353) ^ 0x81 | 0x718CC309) + (BYTE1(v353) ^ 0x81 | 0x8E733CF6)) ^ 0xBE761006;
  v401 = *(_DWORD *)&v89[4 * ((((2 * v400) & 0xFA5D934) - v400 - 1205005467) ^ 0x88283F8D)];
  v402 = v398 ^ v399;
  v403 = *(_DWORD *)&v93[4 * (v368 ^ 0xBC)];
  v404 = v403 - ((2 * v403 + 564376098) & 0x2E6BE328) - 1475884379;
  v405 = HIBYTE(v372);
  v406 = v401 - ((2 * v401 - 1333628572) & 0xE2FF5FFE) + 1237379249;
  v407 = *(_DWORD *)&v100[4 * (BYTE2(v378) ^ 0xAC)] ^ *(_DWORD *)&v98[4 * (HIBYTE(v372) ^ 0xA7)] ^ v406 ^ (v406 >> 4) ^ (v406 >> 8) ^ v404 ^ (((32 * v404) ^ 0xE6BE3280) - ((2 * ((32 * v404) ^ 0xE6BE3280)) & 0xA99AE2C0) - 724733578) ^ (((8 * v404) ^ 0xB9AF8CA0) - 2 * (((8 * v404) ^ 0xB9AF8CA0) & 0x1C497498 ^ (8 * v404) & 0x10) - 1672907640);
  v408 = *(_DWORD *)&v100[4 * (BYTE2(v353) ^ 0x85)] ^ HIBYTE(v378) ^ *(_DWORD *)&v98[4 * (HIBYTE(v378) ^ 0x66)];
  v409 = (v408 ^ 0xE8100BAA) - 1032395506;
  v410 = *(_DWORD *)&v89[4 * (BYTE1(v368) ^ 0x7A)];
  v411 = v410 - ((2 * v410 - 1333628572) & 0xF11E6706) - 791647179;
  v412 = ((2 * v408) ^ 0xD0201754) + 1501645852 - 2 * (((2 * v408) ^ 0xD0201754) & 0x59814C1E ^ (2 * v408) & 2);
  v413 = (v409 ^ 0x31EDFDCF)
       + ((2 * v409) & 0x63DBFB9E)
       + (v412 & 0x84EDCA1C ^ 0x89214009)
       + ((2 * v412) & 0x89B8410 ^ 0xFFFD7FEF)
       + 1;
  v414 = (((2 * (v372 ^ 0xE5)) | 0x2A8DEEEC) - (v372 ^ 0xE5) - 356972406) ^ 0x51D73426;
  v415 = *(_DWORD *)&v93[4 * ((-1626264572 - (v414 | 0x9F112C04) + (v414 | 0x60EED3FB)) ^ 0x247F101B)];
  v416 = v415 - ((2 * v415 + 564376098) & 0xD9CBACD6) + 2109190012;
  v417 = v411 ^ (v411 >> 8) ^ (v411 >> 4) ^ v416 ^ (((8 * v416) ^ 0x672EB358)
                                                  - ((2 * ((8 * v416) ^ 0x672EB358)) & 0x79FC3C10)
                                                  - 1124196854) ^ (((32 * v416) ^ 0x9CBACD60)
                                                                 - ((2 * ((32 * v416) ^ 0x9CBACD60)) & 0xDCE8F7C0)
                                                                 - 294355978) ^ (v413
                                                                               - ((2 * v413 + 149156920) & 0x57CB1E8E)
                                                                               - 262698653);
  v418 = 2 * ((v417 ^ 0x328F3EB4) % 0x5BA58B31);
  v419 = (((v417 ^ 0x328F3EB4) % 0x5BA58B31) ^ 0x3B74FDAE) - 997522862 + (v418 & 0x76E9FB5C);
  if ((v418 & 0x7E5DF7D6) + (((v417 ^ 0x328F3EB4) % 0x5BA58B31) ^ 0x3F2EFBEB) != 1060043755)
    v419 = 0;
  v420 = (v417 ^ 0x328F3EB4) - v419;
  v421 = (char *)*(&off_10112C750 + (v92 ^ 0x7FF4)) - 348109171;
  v422 = *(_DWORD *)&v421[4 * (HIBYTE(v391) ^ 9)];
  v423 = (char *)*(&off_10112C750 + (v92 ^ 0x69F8)) - 150709759;
  v424 = *(_DWORD *)&v423[4
                        * (((BYTE2(v402) ^ 0x3082001B) - ((2 * (BYTE2(v402) ^ 0x3082001B)) & 0x200401E2) - 549244687) ^ 0xEFC130B6)];
  HIDWORD(v425) = v422 ^ 0x3F063;
  LODWORD(v425) = v422 ^ 0x17800000;
  v426 = (v425 >> 21) - ((2 * (v425 >> 21)) & 0x6743B922);
  HIDWORD(v425) = v424 ^ 6;
  LODWORD(v425) = v424 ^ 0x64E91800;
  v427 = (v425 >> 11) + 1631476426 - ((2 * (v425 >> 11)) & 0xC27CB594);
  v428 = ((8 * v427) ^ 0x9F2D650) - ((2 * ((8 * v427) ^ 0x9F2D650)) & 0xCA7315E0) - 449213711;
  v427 ^= 0x613E5ACAu;
  v428 ^= 0xF094C39u;
  v429 = v428 + v427;
  v430 = (v428 & v427) - ((2 * (v428 & v427)) & 0x33E57F44);
  v431 = (v429 ^ 0x75E72EFE)
       + ((2 * v429) & 0xEBCE5DFC)
       + ((2 * v430 - 1276805308) ^ 0xBA85E747)
       + ((2 * (2 * v430 - 1276805308)) & 0xED3ECFF8 ^ 0x9AF53177)
       + 1;
  v432 = v431 - ((2 * v431 + 24146430) & 0x81D7041C) - 1046234355;
  v433 = (v420 ^ 0x84) + ((2 * v420) & 8) + 124;
  v434 = (char *)*(&off_10112C750 + (v92 ^ 0x6B0A)) - 2046937395;
  v435 = (v426 + 866245777) ^ *(_DWORD *)&v434[4
                                             * ((((v407 >> 8) & 0x59 ^ 0x2A165248)
                                               + ((v407 >> 8) & 0xA6 ^ 0xC0C10003)
                                               - 1) ^ 0xEAD75294)];
  v436 = (char *)*(&off_10112C750 + v92 - 26603) - 386213598;
  v437 = v435 ^ *(_DWORD *)&v436[4 * ((v433 - 748581425 - ((2 * v433) & 0x1DC) + 31) ^ 0xD3618DCF)] ^ v432;
  v438 = ((BYTE2(v407) ^ 0x79) + (HIWORD(v407) & 0xE0 ^ 0xBF140B80) - ((BYTE2(v407) ^ 0x79) & 0xE0)) ^ 0xBAE1AEC4;
  v439 = *(_DWORD *)&v423[4 * ((((2 * v438) | 0x7D32F9F0) - v438 - 1050246392) ^ 0x3B6CD9D2)];
  HIDWORD(v425) = v439 ^ 6;
  LODWORD(v425) = v439 ^ 0x64E91800;
  v440 = *(_DWORD *)&v421[4 * (HIBYTE(v402) ^ 0x23)];
  v441 = (v425 >> 11) - ((2 * (v425 >> 11)) & 0xB274FBA4);
  HIDWORD(v425) = v440 ^ 0x3F063;
  LODWORD(v425) = v440 ^ 0x17800000;
  v441 += 1497005522;
  v442 = ((8 * v441) ^ 0xC9D3EE90) + 913327363 + (~(2 * ((8 * v441) ^ 0xC9D3EE90)) | 0x931F75FF);
  v443 = *(_DWORD *)&v436[4
                        * ((((v391 ^ v385) & 0xFFFFFFEF ^ 0xEE6C0261)
                          + (v391 ^ v385 ^ 0x92419E)
                          - ((v391 ^ v385 ^ 0x92419E) & 0x40EF)) ^ 0xEEFE0308)] ^ *(_DWORD *)&v434[4 * (BYTE1(v417) ^ 0xD9)] ^ ((v425 >> 21) - ((2 * (v425 >> 21)) & 0xCF36A26C) - 409251530) ^ v441;
  v444 = v407 ^ v405;
  v445 = *(_DWORD *)&v421[4 * (HIBYTE(v407) ^ 0x16)];
  HIDWORD(v425) = v445 ^ 0x3F063;
  LODWORD(v425) = v445 ^ 0x17800000;
  v446 = v425 >> 21;
  v447 = *(_DWORD *)&v423[4
                        * ((-1015150050
                          - (BYTE2(v417) ^ 0x8021A8FF | 0xC37E0A1E)
                          + (BYTE2(v417) ^ 0x8021A8FF | 0x3C81F5E1)) ^ 0xBCA05D71)];
  HIDWORD(v425) = v447 ^ 6;
  LODWORD(v425) = v447 ^ 0x64E91800;
  v448 = (v425 >> 11) - ((2 * (v425 >> 11)) & 0x9D644560) - 827186512;
  v449 = *(_DWORD *)&v436[4
                        * ((((2 * (v402 ^ v396 ^ 0x44101B2)) & 0x3B2)
                          - (v402 ^ v396 ^ 0x44101B2)
                          - 597701082) ^ 0xD81ECF0B)] ^ *(_DWORD *)&v434[4 * (BYTE1(v391) ^ 0x56)] ^ (v446 - ((2 * v446) & 0x365A6C7A) - 1691535811);
  v450 = *(_DWORD *)&v421[4 * (HIBYTE(v417) ^ 0xBC)];
  v451 = *(_DWORD *)&v423[4 * (BYTE2(v391) ^ 0x85)];
  HIDWORD(v425) = v450 ^ 0x3F063;
  LODWORD(v425) = v450 ^ 0x17800000;
  v452 = (v425 >> 21) - ((2 * (v425 >> 21)) & 0x27081F2);
  HIDWORD(v425) = v451 ^ 6;
  LODWORD(v425) = v451 ^ 0x64E91800;
  v453 = (v425 >> 11) - ((2 * (v425 >> 11)) & 0x22BDF88) - 2129268796;
  v454 = ((v444 & 0xEE ^ 0x8568B563) + (v444 & 0x11) - 1) ^ 0x8568F0D7;
  v501 = v443 ^ v442;
  v455 = *(_DWORD *)&v436[4 * ((-1714773448 - (v454 | 0x99CAA238) + (v454 | 0x66355DC7)) ^ 0x66351805)] ^ *(_DWORD *)&v434[4 * (BYTE1(v402) ^ 0x90)] ^ (v452 + 20463865) ^ v453 ^ (((8 * v453) ^ 0x8AF7E20) - ((2 * ((8 * v453) ^ 0x8AF7E20)) & 0x55E4B570u) + 720526008);
  v456 = (char *)*(&off_10112C750 + (v92 ^ 0x623C)) - 140294843;
  v457 = v456[((((v455 >> 8) & 0xF0 ^ 0x251) - 1) & 0xFFFFFFF0 | (v455 >> 8) & 0xF) ^ 0x244];
  v458 = v449 ^ v448 ^ (((8 * v448) ^ 0x75911580) - ((2 * ((8 * v448) ^ 0x75911580)) & 0x52EFDBB0) - 1451758114);
  HIDWORD(v425) = v457 ^ 3;
  LODWORD(v425) = (v457 ^ 0x70) << 24;
  v459 = (v443 ^ v442) >> 16;
  *(_BYTE *)(((v43 - 1776010157) | ((unint64_t)(v43 - 1776010157 < 0xA009765) << 32)) + a43 - 167810917) = ((v425 >> 27) - ((2 * (v425 >> 27)) & 0x5A) + 45) ^ 0xB8;
  v460 = (char *)*(&off_10112C750 + (v92 ^ 0x6B0B)) - 1498189650;
  LOBYTE(v443) = v460[(((2 * (v458 ^ 0x2294D919)) | 0xDE6D36EC)
                     - (v458 ^ 0x2294D919)
                     - 1865849718) ^ 0x4DA24226];
  *(_BYTE *)(((v43 - 1117195347) | ((unint64_t)(v43 - 1117195347 < 0x31454EC2) << 32)) + a43 - 826625730) = (v443 - 2 * ((v443 + 14) & 0x1F ^ v443 & 1) + 108) ^ 0x89;
  v461 = ((v459 & 0xD9 ^ 0x661E9F01) + (v459 & 0x26 ^ 3) - 1) ^ 0x461FD7AD;
  LOBYTE(v454) = ((2 * ((v459 ^ 0xB3) + (v459 ^ 0x3A))) & 0x6E) + (((v459 ^ 0xB3) + (v459 ^ 0x3A)) ^ 0xB7);
  v462 = ((v455 >> 16) ^ 0x6D47) + ((v455 >> 16) ^ 0x6DCE);
  LOBYTE(v423) = ((2 * v462) & 0xFC) + (v462 ^ 0xFE);
  v463 = (char *)*(&off_10112C750 + v92 - 27131) - 557696718;
  *(_BYTE *)(v493 - 771175368) = (v454 - 55) ^ 0x27 ^ v463[(-155570069 - (v461 | 0xF6BA306B) + (v461 | 0x945CF94)) ^ 0x2944879CLL];
  LOBYTE(v461) = (_BYTE)v423 - ((2 * (_BYTE)v423 + 4) & 0x83);
  LODWORD(v423) = (HIWORD(v437) ^ 0xFB1D) + (HIWORD(v437) ^ 0xFB94);
  v502 = v458;
  *(_BYTE *)(v492 - 964028629) = v463[BYTE2(v455) ^ 0x52] ^ 0x4D ^ (v461 - 61);
  *(_BYTE *)(v491 - 83493810) = (((2 * (_BYTE)v423) & 0xF6)
                               + (v423 ^ 0x7B)
                               - ((2 * (((2 * (_BYTE)v423) & 0xF6) + (v423 ^ 0x7B)) + 10) & 0xAA)
                               - 38) ^ v463[((BYTE2(v437) ^ 0x2F)
                                           + (HIWORD(v437) & 0xD2 ^ 0x8D0)
                                           - ((BYTE2(v437) ^ 0x2F) & 0xD2)) ^ 0x87CLL] ^ 0xF7;
  v464 = v456[(((2 * (BYTE1(v501) ^ 0x7B)) & 0x1B4) - (BYTE1(v501) ^ 0x7Bu) + 2341) ^ 0x982];
  v465 = v43 + 56647180;
  HIDWORD(v425) = v464 ^ 3;
  LODWORD(v425) = (v464 ^ 0x70) << 24;
  *(_BYTE *)(((v43 + 14858436) | ((unint64_t)(v43 + 14858436 < 0x74BF13DE) << 32)) + a43 - 1958679518) = ((v425 >> 27) - ((2 * (v425 >> 27)) & 0xB0) - 40) ^ 0xAC;
  LOBYTE(v464) = v460[(((2 * (v455 ^ 0x89)) | 0xD09CA78C) - (v455 ^ 0x89) - 1749963718) ^ 0x684E534ALL];
  v466 = (BYTE2(v458) ^ 0xAFCEEDB4) + 1345393241 + ((v458 >> 15) & 0x14E ^ 6);
  v467 = v458;
  *(_BYTE *)((v465 | ((unint64_t)(v465 < 0x773CB91D) << 32)) + a43 - 2000468253) = (v464 - 2 * ((v464 + 78) & 0xEF ^ v464 & 1) - 68) ^ 0xEF;
  if ((v458 & 0x800000) != 0)
    v468 = -128;
  else
    v468 = 128;
  v469 = v468 + v466;
  v470 = v466 & 0xA;
  v471 = (HIWORD(v458) ^ 0xF14E) & (HIWORD(v458) ^ 0xF147);
  LOBYTE(v471) = 2 * (v471 - ((2 * v471) & 0x14)) - 108;
  *(_BYTE *)(v494 - 700551725) = ((v471 ^ 0xB) + ((2 * v471) & 0x3C ^ 0x28) + ((2 * (v471 ^ 0xB)) | 0xFB) + 109) ^ 0x4A ^ v463[(v469 + 1538713268 - 2 * (v469 & 0x5BB6E6FF ^ v470) + 65) ^ 0x5BB6E6B4];
  v472 = v43 - 287644173;
  v473 = v472 < 0x62B7410C;
  *(_BYTE *)((v472 | (v473 << 32)) + a43 - 1656176908) = (v460[v501 ^ 0x74]
                                                        - ((2 * v460[v501 ^ 0x74] - 100) & 0xE0)
                                                        + 62) ^ 0xF6;
  v474 = (char *)*(&off_10112C750 + (v92 ^ 0x6D55)) - 1189772594;
  v500 = v437;
  *(_BYTE *)(v496 - 1361642685) = v474[((unint64_t)v501 >> 24) ^ 0xC2] ^ (v474[((unint64_t)v501 >> 24) ^ 0xC2] >> 4) ^ (v474[((unint64_t)v501 >> 24) ^ 0xC2] >> 1) ^ 0x6E;
  v475 = (BYTE1(v500) ^ 0x2E | 0x4917AB0F) - (BYTE1(v500) ^ 0x2E | 0xB6E854F0) - 1226287888;
  v476 = v456[((v475 & 0x804299D ^ 0x86601098) + (v475 ^ 0x917AF07) - ((v475 ^ 0x917AF07) & 0x8E64399D)) ^ 0xCE643DB7];
  HIDWORD(v477) = v476 ^ 3;
  LODWORD(v477) = (v476 ^ 0x70) << 24;
  *(_BYTE *)(((v43 - 6863388) | ((unint64_t)(v43 - 6863388 < 0x7373A102) << 32)) + a43 - 1936957698) = ((v477 >> 27) - ((2 * (v477 >> 27)) & 0x99) + 76) ^ 0xB;
  v478 = v474[HIBYTE(v502) ^ 0xBALL];
  *(_BYTE *)(v495 - 1148323203) = v478 ^ (v478 >> 4) ^ (v478 >> 1) ^ 0x1E;
  v479 = v460[(1215204945 - (v500 ^ 0x8B | 0x486E8E51) + (v500 ^ 0x8B | 0xB79171AE)) ^ 0xB79171D3];
  *(_BYTE *)(((v43 - 981127770) | ((unint64_t)(v43 - 981127770 < 0x396188C3) << 32)) + a43 - 962693315) = (v479 - ((2 * v479 + 28) & 0x46) + 113) ^ 0xD6;
  v480 = v456[BYTE1(v502) ^ 8];
  HIDWORD(v477) = v480 ^ 3;
  LODWORD(v477) = (v480 ^ 0x70) << 24;
  *(_BYTE *)(v499 - 1897862178) = ((v477 >> 27) - ((2 * (v477 >> 27)) & 0xC) + 6) ^ 0x49;
  LODWORD(STACK[0x270]) = a42;
  LODWORD(STACK[0x274]) = a38;
  LODWORD(STACK[0x278]) = a40;
  LODWORD(STACK[0x290]) = a39;
  v481 = v474[HIBYTE(v500) ^ 0x48];
  LODWORD(STACK[0x27C]) = v43;
  *(_BYTE *)(v498 - 1943821088) = v481 ^ (v481 >> 4) ^ (v481 >> 1) ^ 0xEA;
  v482 = v474[BYTE3(v455) ^ 0xBCLL];
  v483 = (((v482 ^ 0x61) - 114) ^ 0xB9)
       - ((4 * v482) & 0x30)
       + ((2 * v482) & 0x1C ^ 0x85)
       + ((2 * ((v482 ^ 0x61) - 114)) & 0x72);
  v484 = v43 - ((2 * v43 + 1159578482) & 0xB0367B76) + 2057969524;
  *(_BYTE *)(v497 - 553017844) = (v482 >> 4) ^ (v482 >> 1) ^ 0x12 ^ (v483 - ((2 * v483 + 4) & 0x48) - 26);
  v485 = ((2 * v484) ^ 0xB0367B76) - ((2 * ((2 * v484) ^ 0xB0367B76)) & 0xD95D6748) - 324095067;
  v486 = (v484 ^ 0x318FFE8C) + (v485 & 0xD329866E ^ 0x3DF175DA) + ((2 * v485) & 0xA2130CDC ^ 0x80110448) + 36046850;
  v487 = ((2 * v486) & 0xEFB8F752) + (v486 ^ 0xF7DC7BA9) + 1021942855;
  v488 = a20 ^ (v487 < 0x34C617F0);
  v489 = v487 < HIDWORD(a20);
  if (v488)
    v489 = a20;
  LODWORD(STACK[0x294]) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 + 8 * ((437 * v489) ^ v92)) - 8))(123, v473, 110, v470, v465, v467, 246, v448, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           v491,
           v492,
           v493,
           v494,
           v495,
           v496,
           v497,
           v498,
           v499,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_1000B0E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 + 8 * SHIDWORD(a25)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_1000B0FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,uint64_t a54,int a55)
{
  int v55;
  uint64_t v56;
  uint64_t v58;

  LODWORD(v58) = ((2 * LODWORD(STACK[0x294])) & 0xC3DCA0DA)
               + ((((v55 + 1202784094) & 0xB84EF7FD) - 504472562) ^ LODWORD(STACK[0x294]))
               + 1052360162;
  HIDWORD(v58) = ((a53 - ((a55 + 364788086) & 0xE1E7CE02) - 2095300281) ^ 0xBF8C14FC)
               - 1163399236
               + ((2 * (a53 - ((a55 + 364788086) & 0xE1E7CE02) - 2095300281)) & 0x9EFFE7FA ^ 0x80E7C602);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 + 8 * ((56 * (HIDWORD(v58) == 170386361)) ^ v55)) - 12))(a1, a2, a3, a4, a5, a6, a7, 2134650450, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           v58);
}

uint64_t sub_1000B10A8()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * v0) - 4))(58949);
}

uint64_t sub_1000B1124(int a1)
{
  int v1;
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v12 + v2) ^= *(_BYTE *)(*(_QWORD *)(v11 + 8 * v4) + (v3 & v2) + v5) ^ *(_BYTE *)(*(_QWORD *)(v11 + 8 * v6)
                                                                                              + (v3 & v2)
                                                                                              + v7) ^ (-65 * (v3 & v2)) ^ *(_BYTE *)(*(_QWORD *)(v11 + 8 * v8) + (v3 & v2) + v9) ^ 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((v2 == 0) * a1) ^ v1)) - 4))();
}

uint64_t sub_1000B1194@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 - 511836610)) - 12))();
}

uint64_t sub_1000B11B0@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((60842 * (a1 == 680557623)) ^ (a1 - 511844106))) - 12))();
}

uint64_t sub_1000B1204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  int v39;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * v39))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1000B1224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  int v39;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * v39))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1000B1248()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 511859516)) - 8))();
}

uint64_t sub_1000B1268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v11;

  v11 = a7 != 230207725 && *(_QWORD *)(v9 + 8) != 0x7C0ADF1C3D95FE54;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v11 << 10) | (v11 << 14)) ^ v7))
                            - ((v7 + 749955296) & 0xD34C7F37 ^ 0x1F3FLL)))();
}

uint64_t sub_1000B12D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t (*a38)(_QWORD))
{
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;

  v41 = a38((12 * a7 + 1532474596));
  STACK[0x2C8] = v41;
  LODWORD(STACK[0x24C]) = v40 + 182;
  return (*(uint64_t (**)(void))(v39 + 8 * ((59960 * (((v41 == 0) ^ ((v38 ^ 0x9D) + 11)) & 1)) ^ v38)))();
}

uint64_t sub_1000B1340()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  BOOL v9;

  v4 = *(_DWORD *)(v3 + 20);
  STACK[0x2D0] = v3 + 20;
  v5 = *(_DWORD *)(v3 + 24);
  LODWORD(STACK[0x274]) = v5;
  v6 = v4 - 2057790325;
  v5 += 76860145;
  v7 = (v4 - 2057790325) < 0x1B5144E6;
  v8 = v5 < ((v1 - 304446506) & 0xFE75F38F) + 788554584;
  v9 = v6 < v5;
  if (v7 != v8)
    v9 = v8;
  LODWORD(STACK[0x354]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((51793 * (((v1 - 1) ^ v9) & 1)) ^ v1)) - 12))();
}

uint64_t sub_1000B13E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  uint64_t v54;
  int v55;
  int v56;
  _DWORD *v57;
  int v58;
  unint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _DWORD *v64;

  v56 = (v55 - 22824) | 0x409A;
  v57 = (_DWORD *)STACK[0x2C8];
  v58 = STACK[0x274];
  v59 = STACK[0x2C8];
  *(_DWORD *)(v59 + 4) = 1229263599;
  *v57 = v58;
  STACK[0x2E0] = v59 + 4;
  v57[2] = *(_DWORD *)STACK[0x2D0];
  v57 += 2;
  STACK[0x220] = (unint64_t)v57 - 2;
  v64 = v57;
  LODWORD(v57) = ((3 * (v56 ^ 0x7114)) ^ 0xAD98E216) + a7;
  LODWORD(STACK[0x278]) = (_DWORD)v57;
  LOBYTE(STACK[0x2EF]) = v57 < 0xBB5134A9;
  LODWORD(STACK[0x308]) = 79134806;
  HIDWORD(v63) = v53 - 511830941;
  LODWORD(a20) = 511843269;
  LODWORD(a16) = v53 - 511827652;
  LODWORD(v63) = v53 - 511867487;
  LODWORD(v62) = v53 - 511852712;
  HIDWORD(v62) = v53 & 0xA0080A3C;
  HIDWORD(v61) = v53 - 1281424259;
  LODWORD(v61) = v53 - 511827718;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *))(*(_QWORD *)(v54 + 8 * v56) - 8))(3355406191, 0x3D9F77F7F77F52C6, 2811339061, 0x1EEFF79DCLL, 8917194, 0xC260880808804312, 929, 12, a9, v61, a11, a12, a13, a14, a15, a16, a17, v62, v63,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           v64);
}

uint64_t sub_1000B1580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v42;

  STACK[0x360] = STACK[0x320];
  STACK[0x228] = STACK[0x318];
  LODWORD(STACK[0x27C]) = STACK[0x314];
  LODWORD(STACK[0x290]) = STACK[0x310];
  LODWORD(STACK[0x294]) = STACK[0x30C];
  v40 = ((LODWORD(STACK[0x308]) - 79134806) ^ (((a9 + v37) & a1) + a2))
      + a6
      + (a4 & (2 * (LODWORD(STACK[0x308]) - 79134806)));
  STACK[0x240] = v40;
  v42 = *(_DWORD *)(STACK[0x2C8] + v40 * a8);
  LODWORD(STACK[0x354]) = v39;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8 * ((((v42 - 381450741) > 0x13) * (int)a7) ^ a9)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1000B1628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  _BOOL4 v63;
  int v64;
  _BOOL4 v65;

  v61 = a44 + v55;
  v62 = *(_DWORD *)(a54 + STACK[0x240] * a8) + v56;
  v63 = a44 + v55 < a3;
  v64 = (v62 < a3) ^ v63;
  v65 = v61 > v62;
  if (v64)
    v65 = v63;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * (int)((!v65 * (((v54 + v58) | v60) ^ 0xEC50E1D7)) ^ v54)) - ((v54 + v57) | 8u) + 2076))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1000B16AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  uint64_t v56;
  unint64_t v57;

  v57 = ((v55 ^ 0xFEEFD644) & (2 * (a44 - 381450747))) + ((a44 - 381450747) ^ 0xFF77EF36) + a5;
  STACK[0x280] = v57;
  STACK[0x288] = (v57 + 1);
  STACK[0x328] = STACK[0x360];
  STACK[0x330] = STACK[0x228];
  LODWORD(STACK[0x338]) = STACK[0x27C];
  LODWORD(STACK[0x33C]) = STACK[0x290];
  LODWORD(STACK[0x340]) = STACK[0x294];
  LODWORD(STACK[0x344]) = v55;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 + 8 * (v55 + 9332)) - 12))(a53, a2, a55);
}

uint64_t sub_1000B17E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  HIDWORD(a12) = a5;
  HIDWORD(a11) = a7;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * v23))(a1, *(_QWORD *)(v26 + 8 * v23), a3, a4, a5, v24, a7, a8, a9, a10, a11, a12, a13, v25, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1000B1830()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1000B1A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v20;
  uint64_t v21;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v21
                                                               + 8
                                                               * (a20 ^ (466 * ((v20 - 2147319647) < 0x14))))
                                                   - 12))(a1, 2134608240);
}

uint64_t sub_1000B1BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,_BOOL4 a21,unsigned int a22)
{
  int v22;
  uint64_t v23;
  _BOOL4 v24;

  v24 = v22 + 1650085289 < a22;
  if (a21 != v22 + 1650085289 < (((a16 - 20993) | 0x201) ^ 0xF852BDAF))
    v24 = a21;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v23
                                                               + 8
                                                               * ((4448 * ((((a16 - 14849) ^ v24) & 1) == 0)) ^ (a16 - 3243)))
                                                   - 12))(a1, 2134608240);
}

uint64_t sub_1000B1C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, _DWORD *a17)
{
  int v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  _BOOL4 v22;

  v20 = *a17 - 324985407;
  v21 = ((v17 - 324985407) < 0x8299C61C) ^ (v20 < 0x8299C61C);
  v22 = v17 - 324985407 > v20;
  if (v21)
    v22 = (v17 - 324985407) < 0x8299C61C;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v19 + 8 * (v18 | (4 * !v22)))
                                                   - (v18 ^ 0x721A ^ (v18 + 5631) ^ 0x581FLL)))(a1, 2134608240);
}

uint64_t sub_1000B1CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned __int16 a29)
{
  uint64_t v29;
  int v30;

  return ((uint64_t (*)(void))(*(_QWORD *)(v29
                                        + 8
                                        * (((a29 == (unsigned __int16)(v30 + 3987)) * ((v30 + 12407) ^ 0x6A5E)) ^ v30))
                            - 8))();
}

uint64_t sub_1000B1D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  uint64_t v18;

  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * a18) - 8))();
}

uint64_t sub_1000B1D9C(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4
                                                               + 8
                                                               * (((v1 != 79134805) * (((v2 + 5631) ^ 0xF7F6) - 30300)) ^ v2))
                                                   - 4))(a1, v3);
}

uint64_t sub_1000B1DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v31 = (v29 - 79134806);
  v32 = v31 << (((v28 - 50) | 4) ^ 0x2Fu);
  v33 = ((v31 ^ 0xAFFFF7CBBF65FFFFLL) + ((v28 - 36402) ^ 0xAu) + (v32 & 0x17ECBFFFELL)) * a8 - 0x3FFF9D8CF8C86174;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * ((236 * ((unsigned __int16)(*(_WORD *)(a28 + v33) - *(_WORD *)(a27 + v33)) == 51626)) ^ v28)) - 4))(v31, a2, v32, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1000B1E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * (((a8 - 1092945983) & 0x5FA77A7F ^ 0x1E8268E7) + a8)))(a1, a2, a3, a4, a5, v26, a6, *(unsigned int *)(a26 + ((a3 & 0x1F3FDBF7ELL) + (a1 ^ 0x6FFFEBEFF9FEDFBFLL)) * a7 - 0x3FFF0F3FB7F27CF4), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1000B1F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * (v7 ^ 0x2B56 ^ (4074 * ((v7 ^ 0x83D614Fu) > 0x6407E44))))
                                                                                                - 12))(a1, a2, a3, a4, v6, a6, v8);
}

uint64_t sub_1000B2024@<X0>(int a1@<W3>, int a2@<W8>, uint64_t a3, int a4, __int16 a5, int a6, int a7, int a8, int a9, unint64_t a10, int a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,__int16 a26,uint64_t a27,int a28,int a29,int a30,int a31,int a32,unint64_t a33)
{
  int v33;
  int v34;
  uint64_t v35;
  unint64_t v36;

  LODWORD(STACK[0x344]) = a11;
  LODWORD(STACK[0x340]) = a7;
  LODWORD(STACK[0x33C]) = a8;
  LODWORD(STACK[0x338]) = a9;
  STACK[0x330] = a10;
  STACK[0x328] = a12;
  STACK[0x298] = a12;
  LODWORD(STACK[0x354]) = a6;
  LODWORD(STACK[0x264]) = a28;
  LODWORD(STACK[0x268]) = a1;
  LODWORD(STACK[0x260]) = a32;
  LODWORD(STACK[0x25C]) = a30;
  STACK[0x358] = a33;
  LODWORD(STACK[0x348]) = v33;
  LODWORD(STACK[0x34C]) = a2;
  LOWORD(STACK[0x21E]) = a26;
  v36 = 12 * STACK[0x298] + 0x253EAFE51F9B11C4;
  *(_DWORD *)(STACK[0x2C8] + v36) = *(_DWORD *)(STACK[0x2C8] + v36) - 2147319647 + v34;
  *(_WORD *)(STACK[0x2E0] + v36) += a5 & 0xEB3B ^ 0x6A29;
  LODWORD(STACK[0x350]) = a28;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 + 8 * a4) - 8))(3355406191, 0x3D9F77F7F77F52C6, 2811339061, 0x1EEFF79DCLL);
}

uint64_t sub_1000B21C4@<X0>(int a1@<W3>, uint64_t a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, int a6, int a7, int a8, int a9, unint64_t a10, int a11, unint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,__int16 a27,uint64_t a28,int a29,int a30,int a31,int a32,int a33,unint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44)
{
  uint64_t v44;
  char v45;

  LODWORD(STACK[0x344]) = a11;
  LODWORD(STACK[0x340]) = a7;
  LODWORD(STACK[0x33C]) = a8;
  LODWORD(STACK[0x338]) = a9;
  STACK[0x330] = a10;
  STACK[0x328] = a12;
  STACK[0x298] = a12;
  LODWORD(STACK[0x264]) = a29;
  LODWORD(STACK[0x268]) = a1;
  LODWORD(STACK[0x260]) = a33;
  LODWORD(STACK[0x25C]) = a31;
  STACK[0x358] = a34;
  LODWORD(STACK[0x348]) = 2134650450;
  LODWORD(STACK[0x34C]) = a14;
  LOWORD(STACK[0x21E]) = a27;
  v45 = (a44 - 1231440812) < LODWORD(STACK[0x278]);
  if (((LOBYTE(STACK[0x2EF]) ^ ((a44 - 1231440812) < 0xBB5134A9)) & 1) != 0)
    v45 = STACK[0x2EF];
  LODWORD(STACK[0x354]) = 2134608237;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v44 + 8 * (int)(((v45 & 1) * (((a3 - 319058074) & 0xFF54E7FF) + 330301599)) ^ a3)) - 12))(3355406191, 0x3D9F77F7F77F52C6, 2811339061, 0x1EEFF79DCLL, a2, 0xC260880808804312, 929);
}

uint64_t sub_1000B235C@<X0>(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,unsigned int a38,int a39,int a40,int a41,int a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  int v51;
  uint64_t v52;
  unint64_t v53;

  v53 = (a38 | ((unint64_t)(a38 < 0x4B78055) << 32)) * a1 - 949617660;
  *(_DWORD *)(STACK[0x2C8] + v53) = a40;
  *(_WORD *)(STACK[0x2E0] + v53) = 4847;
  *(_WORD *)(STACK[0x220] + v53) = STACK[0x21E];
  *(_DWORD *)(a51 + v53) = a42;
  LODWORD(STACK[0x350]) = v51;
  return ((uint64_t (*)(void))(*(_QWORD *)(v52 + 8 * (a2 + 12609)) - 8))();
}

uint64_t sub_1000B23EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,unint64_t a57)
{
  int v57;
  int v58;
  uint64_t v59;
  int v60;
  _BOOL4 v62;

  v60 = STACK[0x350];
  v62 = LODWORD(STACK[0x350]) == v58 && v57 != ((a5 - 10664) | 0x212A) + ((a5 - 1409255718) | 0x4050008C) + 409353501;
  LODWORD(STACK[0x308]) = v57;
  LODWORD(STACK[0x30C]) = a47;
  LODWORD(STACK[0x310]) = a48;
  LODWORD(STACK[0x314]) = a49;
  STACK[0x318] = a57;
  STACK[0x320] = STACK[0x298];
  LODWORD(STACK[0x354]) = v60;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59
                                                                                          + 8 * ((61588 * v62) ^ a5))
                                                                              - 12))(a1, a2, a3, a4, 8917194);
}

uint64_t sub_1000B2494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;

  LODWORD(v54) = v49;
  HIDWORD(a47) = a9;
  HIDWORD(v54) = v49;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 + 8 * v50) - ((v50 + 511858394) ^ 0x1E827A67)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           v54,
           a49,
           v52);
}

uint64_t sub_1000B24E0@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v62;
  uint64_t v63;

  v62 = __PAIR64__(a1, v48);
  v63 = v47 | 0x7F3B89D400000000;
  v53 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v50 + 8 * (v52 - 5856)) - 35626471))(a47, 801, 4, 0);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * ((((int)v53 >= 0) * (((v52 + 310509171) | 0xC005867) - 511827718 + ((v52 - 6547) | 0x1000) + 1295)) ^ v52)) - 8))(v53, v54, v55, v56, v57, v58, v59, v60, 436, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           v62,
           v63,
           a41,
           v51);
}

uint64_t sub_1000B25A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,unsigned int a51)
{
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v54 = ((uint64_t (*)(_QWORD))(*(_QWORD *)(v53 + 8 * (v51 - 3844)) - 1801018642))(a51);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * (((((2 * (_DWORD)v54) & 0xFEC7F6DC) + (v54 ^ 0x7F63FB6E) == 2137258862) * ((v51 - 540319235) & 0x3EB6FE6F ^ 0x1E82FF45)) ^ v51)) - 4))(v54, v55, v56, v57, v58, v59, v60, v61, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1000B2644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,unsigned int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v60 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * (v57 - 4912)) - 2001462886))(a51, a42, a57);
  return ((uint64_t (*)(void))(*(_QWORD *)(v58
                                        + 8
                                        * ((47970
                                          * (((v57 + 1603494253) & 0xBEEEFEFF ^ 0x56D5DB77C75F28DELL ^ v60)
                                           - a57
                                           + ((2 * v60) & 0xADABB6EFB3BAA562) == 0x56D5DB77D9DD52B1)) ^ v57))
                            - 4))();
}

uint64_t sub_1000B26EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,unsigned int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;

  v62 = ((uint64_t (*)(_QWORD, char *))(*(_QWORD *)(v61 + 8 * (v59 - 2788)) - 1458052402))(a51, &a59);
  return ((uint64_t (*)(void))(*(_QWORD *)(v60
                                        + 8
                                        * ((7
                                          * (((((v59 ^ 0xFC1) + 511861932) ^ 0xA16CB4B3) & (2 * v62))
                                           + (v62 ^ 0xDFF7676E) == -537434258)) ^ v59))
                            - 4))();
}

uint64_t sub_1000B2764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void (*a41)(uint64_t),uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,unsigned int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  uint64_t a66;
  void (*v66)(_QWORD);
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;

  v72 = *(_QWORD *)(v68 + 8 * v70);
  v73 = *(_QWORD *)STACK[0x220];
  *(_DWORD *)(v71 - 128) = (v70 + 527176355) ^ (879478891
                                              * ((v71 - 136 - 2 * ((v71 - 136) & 0x43716967) + 1131506023) ^ 0xF3085424));
  *(_QWORD *)(v71 - 120) = v73;
  *(_QWORD *)(v71 - 136) = v72
                         - 879478891
                         * ((v71 - 136 - 2 * ((v71 - 136) & 0x8855529043716967) - 0x77AAAD6FBC8E9699) ^ 0xF34F7F2F3085424)
                         - 8;
  a41(v71 - 136);
  *(_QWORD *)(v69 - 0x2C86DCAB8BD0EBE6) = (a65 ^ 0x5EEEDFEF7FCC6EBFLL)
                                          - 0x3020908080ELL
                                          + ((a65 << (v67 - 110)) & 0xBDDDBFDEFF98DD7ELL);
  *(_QWORD *)(v69 - 0x2C86DCAB8BD0EBDELL) = (a66 ^ 0xF7F2DEF9C6DFD7D0)
                                          + 0x7FFDF78F7D3C7FF0
                                          + ((2 * a66) & 0xEFE5BDF38DBFAFA0);
  v74 = *(_QWORD *)(v68 + 8 * ((int)v70 - 37));
  *(_QWORD *)(v71 - 120) = *(_QWORD *)STACK[0x220];
  *(_DWORD *)(v71 - 128) = (v70 + 527176355) ^ (879478891
                                              * ((v71 - 136 - 2 * ((v71 - 136) & 0xE43FBC66) - 465585050) ^ 0x54468125));
  *(_QWORD *)(v71 - 136) = v74
                         - 879478891
                         * ((v71 - 136 - 2 * ((v71 - 136) & 0x2D073458E43FBC66) + 0x2D073458E43FBC66) ^ 0xAA66913A54468125)
                         - 8;
  a41(v71 - 136);
  v66(a51);
  v75 = *(_QWORD *)(v68 + 8 * ((int)v70 ^ 2));
  v76 = 879478891
      * ((-2 - ((~(v71 - 136) | 0xB35E279A3689A043) + ((v71 - 136) | 0x4CA1D865C9765FBCLL))) ^ 0x343F82F886F09D00);
  *(_DWORD *)(v71 - 128) = (v70 + 527176355) ^ v76;
  *(_QWORD *)(v71 - 120) = a55;
  *(_QWORD *)(v71 - 136) = v75 - v76 - 8;
  v77 = ((uint64_t (*)(uint64_t))a41)(v71 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v68 + 8 * ((int)v70 + 3538)) - 8))(v77);
}

uint64_t sub_1000B29B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  unsigned int v49;
  int v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  int v54;

  LODWORD(STACK[0x344]) = a15;
  LODWORD(STACK[0x340]) = HIDWORD(a12);
  LODWORD(STACK[0x33C]) = a13;
  LODWORD(STACK[0x338]) = HIDWORD(a13);
  STACK[0x330] = a14;
  STACK[0x328] = a16;
  STACK[0x298] = a16;
  LODWORD(STACK[0x264]) = a32;
  LODWORD(STACK[0x268]) = a4;
  LODWORD(STACK[0x260]) = a34;
  LODWORD(STACK[0x25C]) = a33;
  LODWORD(a49) = a33;
  STACK[0x358] = a35;
  LODWORD(STACK[0x348]) = v50;
  LODWORD(STACK[0x34C]) = a9;
  LOWORD(STACK[0x21E]) = a30;
  HIDWORD(a46) = v51;
  LODWORD(STACK[0x354]) = a2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))(*(_QWORD *)(v53 + 8 * v54) - ((v54 - 279602155) & 0xFCFAE3CE) + 3964723590))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           __PAIR64__(v52, v49),
           __PAIR64__(a34, a32),
           a49);
}

uint64_t sub_1000B2A88()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  v2 = v0 + 330251685;
  v3 = STACK[0x354];
  v4 = v0;
  v5 = sub_100DD0758();
  LODWORD(STACK[0x24C]) = v3;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((8231 * (v4 != 1085109544)) ^ ((v2 ^ 0x13AF6237) + v4))))(v5);
}

uint64_t sub_1000B2AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  int v43;
  uint64_t v44;
  int v45;

  return ((uint64_t (*)(void))(*(_QWORD *)(v44 + 8 * ((22816 * (((v45 ^ (a43 == 5)) & 1) == 0)) ^ v43)) - 8))();
}

uint64_t sub_1000B2B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  int v38;
  uint64_t v39;
  int v40;
  unsigned int v41;

  v41 = (v38 + 1876589423) | 0x9025655D;
  LODWORD(STACK[0x264]) = 5;
  LODWORD(STACK[0x268]) = v37;
  LODWORD(STACK[0x26C]) = 0;
  LODWORD(STACK[0x270]) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * (int)((((((v41 - 5) | v41) & 0x80000000) == 0) * ((v41 + 17426) ^ 0x4423)) ^ ((v41 ^ v40 ^ 0x1E82E1F4) + v41))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1000B2B98@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * a1) - 4))();
}

uint64_t sub_1000B2BC8@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v2 == 0) * v1) ^ a1)) - 4))();
}

uint64_t sub_1000B2C38()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  LODWORD(STACK[0x26C]) = v0;
  LODWORD(STACK[0x268]) = v1;
  LODWORD(STACK[0x264]) = v2;
  LODWORD(STACK[0x270]) = v0;
  return (*(uint64_t (**)(void))(v3 + 8 * (v4 - 511827655)))();
}

uint64_t sub_1000B2C60(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  int v52;
  int v53;

  v48 = a45 & 0x542A4251;
  v49 = (v48
       + (STACK[0x270] & 0x542A4251)
       + (a45 & 0xA145150A)
       + ((((v46 - 511862370) | 0x2040) - 1589321539) & STACK[0x270])
       + 2 * (a45 & 0xA90A8A4 & STACK[0x270])
       + (((STACK[0x270] & 0xA90A8A4) - (a45 & 0xA90A8A4) + 86069576) & 0xA90A8A4)) ^ a45;
  v50 = *a4;
  v51 = *(_DWORD *)(a5 + 4 * v50);
  v52 = v49 + v49 * v51;
  if (v49)
    v53 = 0;
  else
    v53 = *(_DWORD *)(a5 + 4 * v50);
  *(_DWORD *)(a5 + 4 * v50) = (v53 + v52) * v51;
  *a4 = ((int)v50 + 1) % 6u;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unsigned int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 + 8 * ((v46 - 511839430) ^ (112 * (v47 != 0)))) - 4))(v48, 86069576, 2134650450, a4, a5, a6, a7, 3783106222, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1000B2D84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * ((25503 * ((((_DWORD)a7 == -1778866085) ^ (a9 + 34)) & 1)) ^ a9)) - ((a9 + 14684) ^ 0x6DA1)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1000B2DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  _BOOL4 v11;

  v10 = *(_DWORD *)(v9 + 16);
  STACK[0x2A0] = v9 + 16;
  v11 = a7 + 641283239 > (v10 + 641283239);
  if ((a7 + 641283239) < 0xBC31DD02 != (v10 + 641283239) < 0xBC31DD02)
    v11 = (a7 + 641283239) < 0xBC31DD02;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((64094 * v11) ^ v7)) - ((v7 ^ 0x1E8217C6u) - 511838276) + 29223))();
}

uint64_t sub_1000B2E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;

  STACK[0x2A8] = v39 + 20;
  STACK[0x2B0] = *(_QWORD *)v39;
  v40 = *(_QWORD *)(v39 + 8);
  STACK[0x2B8] = v39 + 8;
  STACK[0x2C0] = v40;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * ((7 * ((*(_DWORD *)(v39 + 40) & ((a9 ^ 0x1F82) - 28069)) == 0)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1000B2EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t (*a38)(_QWORD),uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  *(_QWORD *)STACK[0x2B8] = 0x7C0ADF1C3D95FE54;
  v49 = a38((a7 + 1778866085));
  HIDWORD(a44) = v48 + 182;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 + 8 * ((64330 * (v49 != 0)) ^ v46)) - 4))(v49, v50, v51, v52, v53, a7, v54, 3783106222, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a7,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1000B2F50@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  _BOOL4 v4;

  v4 = STACK[0x2B0] != a1;
  LODWORD(STACK[0x294]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v4 * (v1 - 22562)) ^ (v1 - 8738)))
                            - (v1 - 7682)
                            + 20387))();
}

uint64_t sub_1000B2FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46)
{
  int v46;
  uint64_t v47;

  LOBYTE(STACK[0x2EF]) = (a46 - 1705446322) < 0x30519CA9;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 + 8 * ((204 * (a46 - 1705446322 == ((v46 - 3433) ^ 0x3051731C) + ((v46 - 60) ^ 0x4EC))) ^ (v46 - 60))) - 4))(a1, (v46 - 3433), a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_1000B3040(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,unsigned int a48)
{
  uint64_t v48;

  LODWORD(STACK[0x290]) = 133684619;
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(v48 + 8 * a2) - (((a2 - 25) | 0x18u) ^ 0x3E15)))(a48, a41);
}

uint64_t sub_1000B30E8@<X0>(unsigned int a1@<W0>, _QWORD *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t a5@<X5>, char a6@<W6>, int a7@<W7>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  int *v10;
  int v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  _BOOL4 v25;

  v19 = (v17 | ((unint64_t)(v17 < v12) << 32)) + a3;
  v20 = *(_BYTE *)(v14 + v19 + a4);
  v21 = v15 + v19;
  v22 = *(_DWORD *)(*a2 + (*v10 & a5));
  v23 = ((((((_DWORD)v14 + v17 + (_DWORD)a3) ^ v22) & 0x7FFFFFFF) * v11) ^ (((((v14 + v17 + (_DWORD)a3) ^ v22) & 0x7FFFFFFF)
                                                                           * v11) >> 16))
      * v11;
  v24 = ((((v21 ^ v22) & 0x7FFFFFFF) * v11) ^ ((((v21 ^ v22) & 0x7FFFFFFF) * v11) >> 16))
      * v11;
  *(_BYTE *)(v21 + a4) = *(_BYTE *)(a8 + (v23 >> 24)) ^ v20 ^ *(_BYTE *)((v23 >> 24) + v9 + 5) ^ *(_BYTE *)(v8 + (v23 >> 24)) ^ *(_BYTE *)(a8 + (v24 >> 24)) ^ *(_BYTE *)((v24 >> 24) + v9 + 5) ^ *(_BYTE *)(v8 + (v24 >> 24)) ^ v23 ^ v24 ^ (BYTE3(v23) * a6) ^ (BYTE3(v24) * a6);
  v25 = v17 + a7 < a1;
  if (v16 != v17 + a7 < 0x30519CA9)
    v25 = v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * ((v25 | (2 * v25)) ^ v13)) - 8))();
}

uint64_t sub_1000B31DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,unsigned int a39,uint64_t a40,uint64_t a41)
{
  uint64_t v41;

  LODWORD(STACK[0x294]) = a37;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 + 8 * (int)(a39 ^ (3 * (a39 ^ 0x664EF45F)) ^ 0x664E9A58 ^ (28842 * (a39 < 0xE3D1425E)))) - 4))(a1, a2, a3, a4, a5, a41, a7, 3783106222);
}

uint64_t sub_1000B3248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  _BOOL4 v11;

  v8 = LODWORD(STACK[0x294]) - 927481909;
  v9 = (v6 ^ 0xC8B7F06C) + a6;
  v10 = (v8 < 0x5EB06826) ^ (v9 < ((v6 - 557175864) & 0x3FB7FEFFu) + 1076751799);
  v11 = v8 < v9;
  if (v10)
    v11 = v9 < ((v6 - 557175864) & 0x3FB7FEFFu) + 1076751799;
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((54808 * v11) ^ v6)))(3367485387);
}

uint64_t sub_1000B32E0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,unsigned int a51)
{
  int v51;
  uint64_t v52;

  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * (v51 ^ 0xDE0B))
                                                                                             - 12))((a1 + a50 + 1), (a50 + 1266998582), a51, 4294967257, 0x93590F11EEE5D44ALL, 3359);
}

uint64_t sub_1000B3354@<X0>(unsigned int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  _BOOL4 v15;
  uint64_t v16;
  _QWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  int v22;
  _BOOL4 v23;

  v19 = v14 + (a2 + v11);
  v20 = ((v19 ^ *(_DWORD *)(*v17 + (*v18 & v13))) & 0x7FFFFFFF) * v12;
  v21 = (v20 ^ HIWORD(v20)) * v12;
  v22 = *(unsigned __int8 *)((v21 >> 24) + v8 + 5) ^ *(unsigned __int8 *)(a7 + (v21 >> 24)) ^ *(unsigned __int8 *)(v7 + (v21 >> 24)) ^ v21 ^ ((v21 >> 24) * a4);
  if (v15 != a1 < v9)
    v23 = v15;
  else
    v23 = a1 < a3;
  *(_BYTE *)(v19 + a5) = v22;
  return ((uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(v16 + 8 * ((!v23 * a6) ^ v10)) - 12))(a1 + 1, (a2 + 1));
}

uint64_t sub_1000B33E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8 * (v40 - 511847112)))(a1, a2, a3, a4, a5, a40, a7, 3783106222);
}

uint64_t sub_1000B3410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v54;
  uint64_t v55;
  _QWORD *v56;

  *v56 = a54;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * (((STACK[0x2B0] != 0x6CA6F0EE111A2BB6) * ((v54 - 1393507986) & 0x348CEEAF ^ 0x5F26)) ^ (v54 + (int)a8))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1000B3480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  unsigned int v50;
  uint64_t v51;
  int v52;
  unint64_t v54;

  v54 = (a50 + v52);
  STACK[0x228] = v54;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 + 8 * ((55 * ((_DWORD)v54 == (((v50 + 209860061) | 0x12001A05) ^ (v50 + 511856610)))) ^ v50)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1000B34F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,unint64_t a57)
{
  uint64_t v57;

  STACK[0x298] = a57;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8 * a9))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1000B3560@<X0>(int a1@<W8>)
{
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;

  v7 = v4 - 1;
  STACK[0x228] = v7;
  *(_BYTE *)(v3 + v7) = ((v1 + v2) ^ v5) * (v2 - 76);
  return (*(uint64_t (**)(void))(v6 + 8 * ((14 * (STACK[0x228] == 0)) ^ a1)))();
}

uint64_t sub_1000B35A0()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 511856565)) - 4))();
}

uint64_t sub_1000B35C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v10 = v8 + a8;
  v11 = (v8 + a8 - 1308) | 0x204Cu;
  v12 = sub_100DD0758();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9 + 8 * v10) - (v11 ^ 0x3449)))(v12);
}

uint64_t sub_1000B3604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t (*a38)(_QWORD))
{
  int v38;
  uint64_t v39;
  _QWORD *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v41 = v38 - 960;
  *v40 = 0x6CA6F0EE111A2BB6;
  v42 = a38((a7 + 1266998582 + v41 + 511840390));
  STACK[0x2C8] = v42;
  STACK[0x2D0] = v42 + 0x7C0ADF1C3D95FE54;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * ((28 * (((v41 + 66) ^ (v42 == 0)) & 1)) ^ v41)) - 12))(v42, v43, v44, v45, v46, v47, v48, 3783106222, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1000B36A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  _BOOL4 v11;

  v11 = STACK[0x2C0] != v5;
  LODWORD(STACK[0x278]) = v10;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8
                                                                                         * ((v11
                                                                                           * ((v6 + 511840390) ^ (v8 + 2498))) ^ (v6 - 15039))))(a1, a2, a3, a4, a5, v9);
}

uint64_t sub_1000B36F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46)
{
  int v46;
  uint64_t v47;

  LOBYTE(STACK[0x2DF]) = (a46 - 1291552337) < 0x48FD220A;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * (((((a46 == -1778866085) ^ (v46 + 69)) & 1) * ((v46 + 11395) ^ 0x5BA8)) ^ v46)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1000B375C()
{
  int v0;
  uint64_t v1;

  STACK[0x2E0] = STACK[0x2C0] - 0x7C0ADF1C3D95FE54;
  LODWORD(STACK[0x274]) = 1427491074;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v1 + 8 * v0) - (v0 ^ 0xBu) + 23450))(4092025097, ((v0 ^ 0xB) - 1081958695) & 0x5EFF7FEF ^ 0x567F5865u, 1427491074);
}

uint64_t sub_1000B37EC(int a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;

  *(_BYTE *)(v7 + (a3 | ((unint64_t)(a3 < v3) << 32)) + v10) = *(_BYTE *)(v6
                                                                               + (a3 | ((unint64_t)(a3 < v3) << 32))
                                                                               + v10);
  v12 = a3 + a1 < v9;
  if (v8 != a3 + a1 < a2)
    v12 = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((v12 * v4) ^ v5)) - 12))();
}

uint64_t sub_1000B3840@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x278]) = v1;
  return (*(uint64_t (**)(void))(v2 + 8 * (a1 - 511855429)))();
}

uint64_t sub_1000B385C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  int v41;
  unsigned int v42;
  _BOOL4 v43;
  int v44;
  _BOOL4 v45;

  v42 = LODWORD(STACK[0x278]) + 1217905442;
  v43 = (a6 + 1217905442) < 0xDE906B7D;
  LOBYTE(STACK[0x2EE]) = v43;
  v44 = v43 ^ (v42 < 0xDE906B7D);
  v45 = v42 < (int)a6 + 1217905442;
  if (v44)
    v45 = (a6 + 1217905442) < 0xDE906B7D;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * ((v45 * (a9 - v41 - 25212)) ^ (a9 - 511850991))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000B38D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  int v47;
  uint64_t v48;

  LODWORD(STACK[0x27C]) = a47;
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(v48 + 8 * (v47 - 2313)) - 4))((v47 + 511842246) ^ 0x5615B94Cu, 49660);
}

uint64_t sub_1000B3928(int a1, int a2)
{
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  _BOOL4 v6;
  unsigned int v7;
  char v8;
  int v9;
  uint64_t v10;
  _BOOL4 v11;

  *(_BYTE *)(v5 + (v9 + v4)) = v8;
  v11 = v9 + a1 < v7;
  if (v6 != v9 + a1 < v2)
    v11 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((!v11 * a2) ^ v3)) - 4))();
}

uint64_t sub_1000B396C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 + a1 + 3123)) - 4))();
}

uint64_t sub_1000B3980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t v37;
  int v38;

  *(_QWORD *)STACK[0x2B8] = STACK[0x2D0];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (((STACK[0x2C0] == 0x7C0ADF1C3D95FE54) * ((((v38 + a9 + 17) | 0x5825) - 9204) ^ (a9 + v36))) ^ (a9 - 511830920))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1000B39F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;
  uint64_t v48;
  int v49;

  STACK[0x220] = STACK[0x2C0] - 0x7C0ADF1C3D95FE54;
  STACK[0x240] = (a47 + 1778866085);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * (((32 * ((_DWORD)a47 == -1778866085)) | (((_DWORD)a47 == -1778866085) << 6)) ^ v47)) - ((v49 + v47 - 296190589) & 0xF3257ABD ^ 0x6838)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1000B3A68@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,unint64_t a48)
{
  uint64_t v48;

  STACK[0x280] = a48;
  STACK[0x288] = ((unint64_t)&STACK[0x240] ^ 0x7D8DDE3D2A5BFBF0)
               + ((2 * (_QWORD)&STACK[0x240]) & 0xFB1BBC7A54B7F7E0)
               - 0x7001820400417A80;
  return ((uint64_t (*)(void))(*(_QWORD *)(v48 + 8 * a1) - 8))();
}

uint64_t sub_1000B3AFC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  uint64_t v7;
  unint64_t v8;

  v8 = v4 + v3;
  STACK[0x240] = v8;
  *(_BYTE *)(v1 + v8) = (v2 ^ v5) * (v2 + 17);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((STACK[0x240] == 0) * v6) ^ a1)) - 8))();
}

uint64_t sub_1000B3B38()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 511844890)) - 4))();
}

uint64_t sub_1000B3B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v10 = (v8 + 71514894) & 0xDD3A7ECF;
  v11 = v8 + a8;
  v12 = sub_100DD0758();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9 + 8 * v11) - v10 + 13385))(v12);
}

uint64_t sub_1000B3BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44)
{
  int v44;
  uint64_t v45;

  *(_DWORD *)STACK[0x2A0] = a6;
  *(_DWORD *)STACK[0x2A8] = a44;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 + 8 * v44) - (((v44 + 136692) | 0x1E80302Eu) ^ 0x1E827A67)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1000B3BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a8 + v9 + 1558)) - 8))();
}

uint64_t sub_1000B3C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,unsigned int a51)
{
  uint64_t (*v51)(_QWORD);
  uint64_t v52;
  int v53;
  uint64_t v54;

  v54 = v51(a51);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v52 + 8 * (v53 - 511858394)) - 8))(v54);
}

uint64_t sub_1000B3C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t (*a38)(_QWORD))
{
  uint64_t v38;
  int v39;
  uint64_t v40;

  v40 = a38(LOWORD(STACK[0x21E]));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v38 + 8 * (v39 - 511856487))
                                          - (((v39 - 511862831) | 0x4925u) ^ 0x5B61)))(v40);
}

uint64_t sub_1000B3C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int v49;
  uint64_t v50;
  int v51;
  int v52;

  v52 = HIBYTE(a49);
  if ((_DWORD)a48 != v51)
    v52 = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 + 8 * ((v52 * (((a9 - 17249) | 0x2061) ^ 0x19AA)) ^ a9)) - (((a9 - 4453) | (v49 + 1561)) ^ 0x1E827A63)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1000B3CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v56;
  uint64_t v57;
  uint64_t v58;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 + 8 * ((((*(unsigned __int8 *)(v58 + ((v56 + 30717578) & 0xFE2BB15E ^ 0xFFFFFFFFEA4B2847) + a56) ^ 8u) < 0x1A) * (v56 - 14190)) ^ v56)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1000B3D68@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  unint64_t v8;
  uint64_t v9;

  v5 = v1 - 8864;
  v6 = v1 - 8836;
  v7 = (v1 - 1770519156) & 0x6987D7EF;
  v8 = *(_QWORD *)(v2 + 8 * (v1 - 8864))
     - 842727511
     * ((((2 * (v4 - 136)) | 0x5505E7B34B6E4588) - (v4 - 136) - 0x2A82F3D9A5B722C4) ^ 0x8B6F58C092B54599)
     - 12;
  *(_QWORD *)(v4 - 136) = v3;
  *(_QWORD *)(v4 - 128) = v8;
  *(_DWORD *)(v4 - 120) = 842727511 * ((((2 * (v4 - 136)) | 0x4B6E4588) - (v4 - 136) + 1514724668) ^ 0x92B54599)
                        + v1
                        - 588293948;
  v9 = a1(v4 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * ((v6 + v5 + (v7 ^ 0x1FA8)) | (16
                                                                                    * ((*(_DWORD *)(v4 - 116) - 1595128172) < 0x7FFFFFD8))))
                                          - 8))(v9);
}

uint64_t sub_1000B3E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t (*a41)(uint64_t),uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;

  v58 = *(_QWORD *)(v55 + 8 * v54);
  v59 = 879478891 * ((~v56 & 0x2D76351C87493278 | v56 & 0xD289CAE378B6CD87) ^ 0xAA17907E37300F3BLL);
  *(_QWORD *)(v57 - 120) = a54;
  *(_DWORD *)(v57 - 128) = (v54 + 527176325) ^ v59;
  *(_QWORD *)(v57 - 136) = v58 - v59 - 8;
  v60 = a41(v57 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v55 + 8 * (v54 ^ ((v54 + 14895) | 9) ^ 0x6A16)) - 4))(v60);
}

uint64_t sub_1000B3EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,__int16 a58,char a59,unsigned __int8 a60)
{
  int v60;
  uint64_t v61;

  return (*(uint64_t (**)(void))(v61 + 8
                                    * (int)(((a60 < 0x36u) * (((v60 - 20014) | 0x945) + (v60 ^ 0xFFFF04F7))) ^ v60)))();
}

uint64_t sub_1000B3F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  int v43;
  uint64_t v44;
  int v45;

  return ((uint64_t (*)(void))(*(_QWORD *)(v44
                                        + 8
                                        * (((a43 != v45 + ((v43 + 276954307) | 0xE002247) + 4)
                                          * ((9 * (v43 ^ 0x593A)) ^ 0xDF11)) ^ v43))
                            - 12))();
}

uint64_t sub_1000B3F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;

  v60 = *(_QWORD *)(v56 + 8 * v55);
  v61 = 210615973
      * ((~((v58 - 136) | 0xB56288792DF83FCALL) + ((v58 - 136) & 0xB56288792DF83FCALL)) ^ 0x55E92687BE8092ALL);
  *(_DWORD *)(v58 - 128) = v54 + a50 + v61;
  *(_QWORD *)(v58 - 136) = a54;
  *(_DWORD *)(v58 - 100) = (v55 - 961777040) ^ v61;
  *(_QWORD *)(v58 - 120) = v59;
  *(_QWORD *)(v58 - 112) = v60 - v61;
  v62 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v57 + 8 * (v55 - 676)) - 1077287))(v58 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v56 + 8 * (v55 ^ 0x6AA0 ^ (v55 + 15042))) - 4))(v62);
}

uint64_t sub_1000B4048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t (*a41)(uint64_t))
{
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;

  v46 = 879478891 * (((v44 | 0x60AA3F40DA580492) - (v44 & 0x60AA3F40DA580492)) ^ 0xE7CB9A226A2139D1);
  *(_QWORD *)(v45 - 136) = *(_QWORD *)(v42 + 8 * v41) - v46 - 8;
  *(_DWORD *)(v45 - 128) = (v41 + 527176325) ^ v46;
  *(_QWORD *)(v45 - 120) = v43;
  v47 = a41(v45 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v42 + 8 * ((int)v41 + 6669))
                                          - ((v41 + 14904) ^ 0x501DLL)))(v47);
}

uint64_t sub_1000B40E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,__int16 a58,char a59,unsigned __int8 a60)
{
  int v60;
  uint64_t v61;

  return ((uint64_t (*)(void))(*(_QWORD *)(v61
                                        + 8
                                        * (((a60 > 0x61u) * (((v60 ^ 0xEEEC) - 1992954095) & 0x76C9D7DD ^ 0x15F4)) ^ v60 ^ 0xEEEC))
                            - (((v60 ^ 0xEEEC) - 755568307) & 0x2D08EFFE)
                            + 12266))();
}

uint64_t sub_1000B4168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,__int16 a58,char a59,unsigned __int8 a60)
{
  int v60;
  uint64_t v61;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 + 8 * (((((v60 - 8041) | 0x540) + 16272) * (a60 < 0xBFu)) ^ v60)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_1000B41B0@<X0>(uint64_t (*a1)(uint64_t)@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;

  v50 = 842727511
      * ((((v49 - 136) | 0xC34B51379CE04696) - ((v49 - 136) | 0x3CB4AEC8631FB969) + 0x3CB4AEC8631FB969) ^ 0x62A6FA2EABE221CBLL);
  v51 = *(_QWORD *)(v47 + 8 * v48)
      - v50
      + (((_DWORD)v48 + 1865433082) ^ 0x6F3005A6 ^ ((_DWORD)v48 + 1865433082) & 0x90CFBFD5 ^ 0xFFFFFFFFFFFFBA78);
  *(_QWORD *)(v49 - 136) = a47;
  *(_QWORD *)(v49 - 128) = v51;
  *(_DWORD *)(v49 - 120) = v50 + v48 - 588285084;
  v52 = a1(v49 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v47
                                                      + 8
                                                      * (int)(v48 ^ 0x3A2B ^ (5898
                                                                            * ((*(_DWORD *)(v49 - 116)
                                                                                            + 552355516) < 0x8000000F))))
                                          - 4))(v52);
}

uint64_t sub_1000B42AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;

  v59 = (((_DWORD)v55 - 296402556) & 0x11AAF8FF ^ 0xFFFFFFFFFFFFAFE5) + *(_QWORD *)(v56 + 8 * v55);
  v60 = 19382863 * ((-2 - ((~v57 | 0xB5BE9AEC5DDC54BLL) + (v57 | 0xF4A416513A223AB4))) ^ 0x5B463E9DCD184995);
  *(_QWORD *)(v58 - 128) = a54;
  *(_QWORD *)(v58 - 120) = a54;
  *(_QWORD *)(v58 - 136) = v59 ^ v60;
  *(_DWORD *)(v58 - 112) = v60 + v55 - 1253357818;
  v61 = v54(v58 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v56
                                                      + 8
                                                      * (int)(v55 ^ 0x328 ^ (14675
                                                                           * ((v55 - 342040181) > 0x429DD6C1))))
                                          - 4))(v61);
}

uint64_t sub_1000B4398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,_DWORD *a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;

  v59 = *(_QWORD *)(v56 + 8 * v55) - 4;
  v60 = 19382863 * ((~(v58 - 136) & 0xB786547DA9ABE0C6 | (v58 - 136) & 0x4879AB8256541F39) ^ 0xE79B834EA16E6C18);
  *(_QWORD *)(v58 - 128) = v57;
  *(_QWORD *)(v58 - 120) = a54;
  *(_DWORD *)(v58 - 112) = v60 + v55 - 1253357818 + 4;
  *(_QWORD *)(v58 - 136) = v59 ^ v60;
  v61 = v54(v58 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v56
                                                      + 8
                                                      * (int)((((int)(4090 * (v55 ^ 0x1592) + *a49 + 1706561051) >= 0)
                                                             * (((v55 - 1424) | 0x4018) + 15148)) ^ (v55 + 6749)))
                                          - 4))(v61);
}

uint64_t sub_1000B4480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,_DWORD *a49,int a50,int a51)
{
  uint64_t v51;
  int v52;

  *a49 = v52 + 8235 - a51 + 881800149;
  return ((uint64_t (*)(void))(*(_QWORD *)(v51 + 8 * v52) - 4))();
}

uint64_t sub_1000B44B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v56;
  uint64_t v57;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 + 8 * ((2940 * (a56 + 1 == a55)) ^ v56)) - (v56 + 2892) + 23385))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

void sub_1000B4518()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = v0;
}

void sub_1000B4558(uint64_t a1)
{
  int v1;
  int v2;
  unint64_t v3;

  v1 = *(_DWORD *)(a1 + 56) - 19382863 * ((-2 - ((~(_DWORD)a1 | 0x42596D63) + (a1 | 0xBDA6929C))) ^ 0x4A9CE1BD);
  v3 = 0x70235649CCE90FDBLL
     * (((0xA562F63938745453 * (_QWORD)&v2) | (0xA562F63938745453 * (*(_QWORD *)(a1 + 48) ^ 0xA0247285AA2B1D25)))
      - 0x5A9D09C6C78BABADLL * (_QWORD)&v2
      - ((0xA562F63938745453 * (_QWORD)&v2) & ((((v1 - 2133315876) & 0xE1665DF) - 8388) ^ (0xA562F63938745453
                                                                                             * (*(_QWORD *)(a1 + 48) ^ 0xA0247285AA2B1D25)))));
  v2 = (~(_DWORD)v3 | 0xE22E1206) + v3 + 1 + (v3 | 0xE22E1206);
  __asm { BR              X15 }
}

uint64_t sub_1000B46F4(unsigned int a1, int a2)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  _BOOL4 v9;

  v9 = ((((v5 ^ (v6 + v2 + v3 + 1111 + 20)) & a1) >> (__clz(v5 ^ (v6 + v2 + v3 + 1111 + 20) | 1) ^ 0x1F)) & 1) == 0
    || *(_QWORD *)(v4 + 8) == v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((v9 * a2) ^ v3)) - 8))();
}

uint64_t sub_1000B4768()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2
                                                                                                + 8
                                                                                                * (v1 - 1896959390))
                                                                                    - 12))((v0 - 8392), (8392 - v0), 1, -626544287, (v1 - 1896953734) ^ 0x5481u, 15977);
}

uint64_t sub_1000B47C0(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v9 + 8 * ((v6 + v8 + a6) ^ (16 * (((a2 + v7) | a1) >= 0))))
                                         - 12))((a1 + 1));
}

uint64_t sub_1000B4850@<X0>(uint64_t a1@<X8>)
{
  int v1;
  unsigned int v2;
  int v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v19;
  _BOOL4 v20;
  uint64_t (*v21)(void);

  v9 = *(_DWORD *)(v5 + 24) ^ v2;
  v10 = (v4 + v1) ^ v1;
  v11 = *(_QWORD *)(v6 + 8 * (v3 ^ 0x5E48));
  v12 = *(unsigned int *)(v11 - 634675579);
  v13 = *(_QWORD *)(v6 + 8 * (v3 ^ 0x5D44)) + 4 * v12;
  v14 = *(_DWORD *)(v13 - 1841666295);
  v15 = v10 + v10 * v14;
  if (v10)
    v16 = 0;
  else
    v16 = *(_DWORD *)(v13 - 1841666295);
  *(_DWORD *)(v13 - 1841666295) = (v15 + v16) * v14;
  *(_DWORD *)(v11 - 634675579) = ((int)v12 + 1) % 6u;
  STACK[0x230] = 2 * ((v3 ^ 0x6D42u) + v9 + ((unint64_t)(v9 < 0x41EA0C29) << 32))
               - 0x511B9B0B7A9AB9AELL;
  STACK[0x240] = v9;
  v17 = (a1 ^ 0x5EFD7E8F6BFFFFCFLL) - 0x5EFD7E8F1BC0B0E0 + ((2 * a1) & 0xBDFAFD1ED7FFFF9ELL);
  v18 = (v7 ^ 0xFDF6ABDCF9EB39D3) + 0x20954235654151CLL + ((2 * v7) & 0xFBED57B9F3D673A6);
  v19 = v17 < 0x503F4EEF;
  v20 = v17 > v18;
  if (v19 != v18 < 0x503F4EEF)
    v20 = v19;
  v21 = (uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (v3 ^ (44 * v20))) - 12);
  STACK[0x3D8] = v8;
  STACK[0x3C0] = v7;
  STACK[0x238] = v5;
  return v21();
}

uint64_t sub_1000B4A60()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * (v0 ^ (29435
                                                             * ((v1 ^ 0x81BBDA0B)
                                                              - 105542800
                                                              + (v2 & 0xB9DFF772 ^ 0xB8884360) != -693795031))))
                                          - 8))(2104575907);
}

uint64_t sub_1000B4AD8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;

  v12 = (a1 - 2104575907);
  *(_BYTE *)(v10 + v12) = *(_BYTE *)(v4 + (v12 & ((v6 + 8012) - 22787))) ^ *(_BYTE *)(a2 + v12) ^ *(_BYTE *)(v3 + (v12 & ((v6 + 8012) - 22787))) ^ *(_BYTE *)(v5 + (v12 & ((v6 + 8012) - 22787))) ^ (-7 * (v12 & (v6 + 73)));
  LODWORD(v12) = a1 + 1496596359;
  v13 = (a1 + 1);
  v14 = (v7 < v8) ^ (v12 < v2);
  v15 = v12 < v7;
  if (v14)
    v15 = v7 < v8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11 + 8 * ((v15 * v9) ^ v6)) - 8))(v13);
}

uint64_t sub_1000B4B68()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = (((2375 * (v0 ^ 0x39C0)) ^ 0xEFFDAC2B) & v2 ^ 0xAAA80364) + (v1 ^ 0xAAAAFA4D) + 968619673 == v0 + 834312405;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * ((v4 | (4 * v4)) ^ v0)) - 8))(968619673);
}

uint64_t sub_1000B4BE0(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  char v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((19293
                                          * ((((a3 + a2 + 134292481) < 8) ^ (a5 - v5 - 36)) & 1)) ^ a5))
                            - 4))();
}

uint64_t sub_1000B4C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((12128
                                          * (((((a5 ^ 0x711197D2) - 1896946906) ^ 0xFFFF90DD) & v5) == -134292480)) ^ a5))
                            - 4))();
}

uint64_t sub_1000B4C8C@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W7>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v20;

  v10 = (a2 + a1 + a4);
  v11 = v10 + a5;
  v12 = v10 + v8;
  v13 = (a2 + a1) & 0xF;
  v14 = v13 + v6 - v12;
  v15 = (v13 | v5) - v12;
  v16 = v13 + v7 - v12;
  v20 = (unint64_t)(v11 - v12) < 0x10 || v14 < 0x10 || v15 < 0x10 || v16 < 0x10;
  return (*(uint64_t (**)(void))(v9 + 8 * ((123 * ((v20 ^ (a3 - 44)) & 1)) ^ a3)))();
}

uint64_t sub_1000B4D08(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  uint64_t v5;

  LODWORD(STACK[0x4BC]) = (a4 - 19235) | 0x110;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((13555 * (v4 > 0xF)) ^ (a4 - 21356))) - 4))();
}

uint64_t sub_1000B4D44(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;

  LODWORD(STACK[0x4BC]) = v7 - 1;
  LODWORD(STACK[0x4B0]) = v7 + 14;
  LODWORD(STACK[0x4A8]) = v7 + 13;
  v9.n128_u64[0] = ((_BYTE)v7 + 5) & 0xF;
  v9.n128_u64[1] = ((_BYTE)v7 + 4) & 0xF;
  v10.n128_u64[0] = ((_BYTE)v7 + 3) & 0xF;
  v10.n128_u64[1] = ((_BYTE)v7 + 2) & 0xF;
  v11.n128_u64[0] = ((_BYTE)v7 + 1) & 0xF;
  v11.n128_u64[1] = v7 & 0xF;
  v12.n128_u64[0] = 0xF9F9F9F9F9F9F9F9;
  v12.n128_u64[1] = 0xF9F9F9F9F9F9F9F9;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(STACK[0x3D8] + 8 * (a7 ^ 0x477D)) - 8))(a1, a2, a3, 0, v8 & 0xFFFFFFF0, a4, v9, v10, v11, (__n128)xmmword_100DF7480, v12);
}

uint64_t sub_1000B4E68(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, int a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v28;
  uint64_t v29;
  int8x16_t v31;
  int8x16_t v32;

  v28 = (v18 + v17 - a10);
  v29 = ((_BYTE)v18 + (_BYTE)v17 - (_BYTE)a10) & 0xF;
  v31.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v31.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v24, a5).u64[0];
  v32 = vrev64q_s8(vmulq_s8(v31, a6));
  *(int8x16_t *)(v20 + v28) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v15 + (v28 & 0xF) - 15), *(int8x16_t *)(a13 + v28)), veorq_s8(*(int8x16_t *)(v14 + (v28 & 0xF) - 15), *(int8x16_t *)(v16 + (v28 & 0xF) - 15))), vextq_s8(v32, v32, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * (((a10 + v21 + v19 == a11) * v22) ^ a12)) - 8))();
}

uint64_t sub_1000B4EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((45020 * (((v5 == a5) ^ (v6 - 5)) & 1)) ^ v6))
                            - ((v6 + 8012) ^ 0x591ALL)))();
}

uint64_t sub_1000B4F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  char v9;
  uint64_t v10;
  _BOOL4 v11;

  LODWORD(STACK[0x4BC]) = a8 + 2393;
  v11 = (v9 & 8) == ((a8 - 206212514) & 0x7D5BFDE7 ^ (a8 + 2393 + v8));
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((4 * v11) | (16 * v11) | a8)) - 4))();
}

uint64_t sub_1000B4F88@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X6>, uint64_t a7@<X8>, __n128 a8@<Q1>)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t (*v13)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, __n128, __n128);

  LODWORD(STACK[0x4A8]) = v9;
  STACK[0x4B0] = a7 - 7;
  v12 = STACK[0x4BC];
  v13 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, __n128, __n128))(*(_QWORD *)(v11 + 8 * SLODWORD(STACK[0x4BC])) - 8);
  LODWORD(STACK[0x4A0]) = v9 & 0xFFFFFFF8;
  a8.n128_u16[0] = -1543;
  a8.n128_u8[2] = -7;
  a8.n128_u8[3] = -7;
  a8.n128_u8[4] = -7;
  a8.n128_u8[5] = -7;
  a8.n128_u8[6] = -7;
  a8.n128_u8[7] = -7;
  return v13((v12 - 8518) | 0x1801u, (a1 + a2 + a3 + 1), (a1 + a2 + a3 + 2), a4, (-8 - a5), v8 - (v9 & 0xFFFFFFF8), a6, v10 - 7, (__n128)xmmword_100DF7490, a8);
}

uint64_t sub_1000B4FFC(int a1, char a2, char a3, int8x16_t a4, int8x8_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  char v16;
  char v17;
  char v18;
  char v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  int8x16x4_t v24;

  v20 = v14 + a7 + 8;
  v21 = v20 + (a1 ^ (v13 + 2379));
  v24.val[0].i64[0] = ((_BYTE)v20 + (a1 ^ (v13 + 75))) & 0xF;
  v24.val[0].i64[1] = (v19 + (_BYTE)a7 + 8) & 0xF;
  v24.val[1].i64[0] = (v18 + (_BYTE)a7 + 8) & 0xF;
  v24.val[1].i64[1] = (v17 + (_BYTE)a7 + 8) & 0xF;
  v22 = STACK[0x3D8];
  v24.val[2].i64[0] = (v16 + (_BYTE)a7 + 8) & 0xF;
  v24.val[2].i64[1] = (a3 + (_BYTE)a7 + 8) & 0xF;
  v24.val[3].i64[0] = (a2 + (_BYTE)a7 + 8) & 0xF;
  v24.val[3].i64[1] = v20 & 0xF;
  *(int8x8_t *)(a10 + v21) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v11 + (v21 & 0xF) - 7), *(int8x8_t *)(STACK[0x4B0] + v21)), veor_s8(*(int8x8_t *)(v10 + (v21 & 0xF) - 7), *(int8x8_t *)(v12 + (v21 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v24, a4), a5)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v22 + 8 * ((43 * (v15 == a7)) ^ LODWORD(STACK[0x4BC]))) - 8))();
}

uint64_t sub_1000B50F8(int a1)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 ^ (25162 * (LODWORD(STACK[0x4A8]) == LODWORD(STACK[0x4A0])))))
                            - (((a1 - 961657919) & 0x3951F97Bu)
                             + 1896952565)
                            + 1896975363))();
}

uint64_t sub_1000B5158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7 + 8 * (a7 - 1896949247)))();
}

uint64_t sub_1000B5180@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v9 + (a1 + v6)) = *(_BYTE *)(v4 + ((a1 + v6) & 0xFLL)) ^ *(_BYTE *)(a2
                                                                                             + (a1 + v6)) ^ *(_BYTE *)(v3 + (((_BYTE)a1 + (_BYTE)v6) & 0xF)) ^ *(_BYTE *)(v5 + (((_BYTE)a1 + (_BYTE)v6) & 0xF)) ^ (((a1 + v6) & 0xF) * v7);
  return (*(uint64_t (**)(void))(v10 + 8 * (v2 | (2 * (a1 - 1 == v8)))))();
}

uint64_t sub_1000B51C8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;

  *(int8x16_t *)&STACK[0x4D0] = veorq_s8(*(int8x16_t *)*(_QWORD *)(v4 + 32), (int8x16_t)xmmword_100DF75D0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a4 ^ (63 * (&STACK[0x4D0] == v5)))) - 12))();
}

uint64_t sub_1000B5220(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 - 144) = *v4;
  *(_BYTE *)(v5 - 143) = v4[1];
  *(_BYTE *)(v5 - 142) = v4[2];
  *(_BYTE *)(v5 - 141) = v4[3];
  *(_BYTE *)(v5 - 140) = v4[4];
  *(_BYTE *)(v5 - 139) = v4[5];
  *(_BYTE *)(v5 - 138) = v4[6];
  *(_BYTE *)(v5 - 137) = v4[7];
  *(_BYTE *)(v5 - 136) = v4[8];
  *(_BYTE *)(v5 - 135) = v4[9];
  *(_BYTE *)(v5 - 134) = v4[10];
  *(_BYTE *)(v5 - 133) = v4[11];
  *(_BYTE *)(v5 - 132) = v4[12];
  *(_BYTE *)(v5 - 131) = v4[13];
  *(_BYTE *)(v5 - 130) = v4[14];
  *(_BYTE *)(v5 - 129) = v4[15];
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * a4) - (((a4 - 14610) | 0x4903u) ^ 0x690FLL)))();
}

uint64_t sub_1000B52DC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  int v9;
  uint64_t v10;

  v6 = 353 * (v0 ^ 0x6962u);
  if (v4)
    v7 = v2 == v1;
  else
    v7 = 1;
  v9 = !v7 && *v3 != 0x4A8D2AE11F6BC808;
  v10 = *(_QWORD *)(v5 + 8 * ((58564 * v9) ^ v0));
  STACK[0x3D0] = v6;
  LODWORD(STACK[0x3CC]) = -42900;
  return ((uint64_t (*)(void))(v10 - v6 + 34233))();
}

uint64_t sub_1000B533C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  int v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  unint64_t v8;
  _BOOL4 v10;
  uint64_t (*v11)(void);

  v6 = STACK[0x240] - ((2 * STACK[0x240] + 2083252142) & 0xDAE0D28A) + 730225948;
  v7 = ((v6 << (a4 ^ 0x13)) & 0xFAF7FFDA ^ 0xDAE0D28A) + (v6 ^ 0x900B96A8);
  v8 = 97 * (v4 ^ 0x6862u);
  STACK[0x3D0] = v8;
  v10 = (((((_DWORD)v8 - 5022) ^ (v4 + 2333)) + v7) & 0xF) == ((2 * ((((_DWORD)v8 - 5022) ^ (v4 + 2333)) + v7)) & 0x1A)
     && v7 != -42205203;
  v11 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((2 * v10) | (4 * v10)) ^ v4)) - 8);
  LODWORD(STACK[0x3CC]) = -42899;
  return v11();
}

#error "1000C0704: call analysis failed (funcsize=9408)"

uint64_t sub_1000C0708()
{
  unsigned int v0;
  uint64_t v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  int v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  unint64_t v36;
  unsigned int v37;
  unint64_t v38;
  int v39;
  unint64_t v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  int v49;
  char *v50;
  int v51;
  unint64_t v52;
  char *v53;
  int v54;
  char *v55;
  int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  char *v60;
  unsigned int v61;
  int v62;
  unsigned __int8 v63;
  int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  unsigned int v77;
  int v78;
  int v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  int v112;
  int v113;
  unsigned int v114;
  int v115;
  int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  int v121;
  int v122;
  unsigned int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  int v152;
  char *v153;
  unsigned int v154;
  int v155;
  char *v156;
  int v157;
  int v158;
  char *v159;
  int v160;
  char *v161;
  int v162;
  int v163;
  unint64_t v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;

  LODWORD(STACK[0x3CC]) = 0;
  v2 = LODWORD(STACK[0x4BC]) ^ 0x711109C6u;
  STACK[0x3D0] = v2;
  v3 = v0 & (v2 ^ 0xFFFF7A34);
  LODWORD(STACK[0x484]) = v3 ^ 0x46AC7F2F;
  LODWORD(v2) = 2 * (v3 ^ 0x46AC7F2F);
  LODWORD(STACK[0x478]) = v2;
  v4 = ((v3 ^ 0x46AC7F2F) - 985583016 - (v2 & 0x8A8264B0)) ^ 0xC5413258;
  STACK[0x438] = (v4 ^ 0x3FB9FAEFCB17FEBFLL) + v1 + ((2 * v4) & 0x1962FFD7ELL);
  v5 = v0 & 0xFFFFFFF4 ^ 0x46AC7F2F;
  LODWORD(STACK[0x46C]) = v5;
  LODWORD(STACK[0x468]) = 2 * v5;
  v6 = *(unsigned __int8 *)(((v5 - 1608097226 - ((2 * v5) & 0x404CC480)) ^ 0xED6DB6D7F58B81B5)
                          + ((2 * ((v5 - 1608097226 - ((2 * v5) & 0x404CC480)) ^ 0xA026624A)) & 0xAB5BC7FE)
                          + v1
                          + 0x12924928AA521C01);
  STACK[0x4B0] = (((v0 & 0xFFFFFFFB ^ 0x46AC7F25) - 263005909 - ((2 * (v0 & 0xFFFFFFFB ^ 0x46AC7F25)) & 0xE0A5B256)) ^ 0xFFFB77BE1C8F8ED4)
               + v1
               + ((2
                 * (((v0 & 0xFFFFFFFB ^ 0x46AC7F25) - 263005909 - ((2 * (v0 & 0xFFFFFFFB ^ 0x46AC7F25)) & 0xE0A5B256)) ^ 0xF052D92B)) & 0x1D9BAAFFELL);
  v7 = v0;
  v8 = STACK[0x330];
  LODWORD(v4) = *(unsigned __int8 *)(STACK[0x330] + (v6 ^ 0x31));
  v9 = v4 - ((2 * (_BYTE)v4 + 24) & 0x1C) + 26;
  v10 = v0 ^ 0x46AC7F25;
  STACK[0x488] = v10;
  STACK[0x4A8] = (v0 ^ 0x7FEBFFBFFA51005BLL) + v1 + ((2 * v10) & 0x179FAFEFCLL);
  LODWORD(v4) = ((16 * v9) ^ 0x60) - 32 * (v4 & 1) - 36;
  v11 = (((v0 & 0xFFFFFFFC ^ 0x46AC7F27)
        - 997923891
        + ((2 * (v0 & 0xFFFFFFFC ^ 0x46AC7F27)) & 0x8909C798 ^ 0xFFFFFFFD)
        + 1) ^ 0xE115F7D312FBFC32)
      + v1
      + ((2
        * (((v0 & 0xFFFFFFFC ^ 0x46AC7F27)
          - 997923891
          + ((2 * (v0 & 0xFFFFFFFC ^ 0x46AC7F27)) & 0x8909C798 ^ 0xFFFFFFFD)
          + 1) ^ 0xC484E3CD)) & 0x1ACFE3FFELL);
  STACK[0x458] = v11;
  LODWORD(v4) = v9 ^ 0xAD ^ ((v4 & 0x60 ^ 0xD0) - ((2 * v4) & 0x40) + 35);
  LODWORD(v6) = v4 - ((2 * v4) & 0xD6);
  LOBYTE(v4) = *(_BYTE *)(v8 + (*(unsigned __int8 *)(v11 + 0x1EEA082C2980E001) ^ 0xECLL));
  LOBYTE(v4) = v4 - ((2 * v4 + 24) & 0xAA) - 31;
  v12 = (((v0 & 0xFFFFFFFA ^ 0x46AC7F25) - 33838829 - ((2 * (v0 & 0xFFFFFFFA ^ 0x46AC7F25)) & 0xFBF75226)) ^ 0x6D3FFDE912045FFCLL)
      + v1
      + ((2
        * (((v0 & 0xFFFFFFFA ^ 0x46AC7F25) - 33838829 - ((2 * (v0 & 0xFFFFFFFA ^ 0x46AC7F25)) & 0xFBF75226)) ^ 0xFDFBA913)) & 0x1DFFFEDDELL);
  STACK[0x470] = v12;
  LOBYTE(v4) = v4 ^ 0x54 ^ (((16 * v4) ^ 0x50) - ((32 * v4) & 0x40) + 44) & 0x60;
  v13 = STACK[0x318];
  v14 = *(_DWORD *)(STACK[0x318] + 4 * (*(unsigned __int8 *)(v12 - 0x6D3FFDE9EFFFF6EFLL) ^ 0x4BLL));
  LODWORD(STACK[0x3F4]) = v4 - 2 * (v4 & 0x7F);
  v15 = 55247725 * v14 - ((110495450 * v14 - 2113577458) & 0xCF07D95A);
  v16 = 441981800 * v14 - ((883963600 * v14 + 271249520) & 0x6C368BB0) + 1043381781;
  v17 = ((v16 & 0x9442E978 ^ 0x14406020)
       + (v16 & 0x84004150 ^ 0xA30405D3)
       - ((v16 & 0x9442E978 ^ 0x14406020) & 0x84004150)) ^ 0xA747504B;
  LODWORD(v10) = v17 - ((2 * v17) & 0x48865610);
  v18 = (((v0 & 0xFFFFFFF2 ^ 0x46AC7F2D)
        - 1367946842
        + ((2 * (v0 & 0xFFFFFFF2 ^ 0x46AC7F2D)) & 0x5CED9344 ^ 0xFFFFFFF7)
        + 1) ^ 0x7BBFA6FD5388975CLL)
      + v1
      + ((2
        * (((v0 & 0xFFFFFFF2 ^ 0x46AC7F2D)
          - 1367946842
          + ((2 * (v0 & 0xFFFFFFF2 ^ 0x46AC7F2D)) & 0x5CED9344 ^ 0xFFFFFFF7)
          + 1) ^ 0xAE76C9A6)) & 0x1FBFCBDF4);
  STACK[0x440] = v18;
  v19 = v0;
  v20 = *(unsigned __int8 *)(v18 - 0x7BBFA6FDFDFE5EFALL) ^ 0x29;
  v21 = (((v0 & 0xFFFFFFF7 ^ 0x46AC7F2D)
        + 1600910863
        + ((2 * ((v0 & 0xFFFFFFF7 ^ 0x46AC7F2D) & 0x5F6BF617 ^ (v0 | 0x7FFFFFEF))) ^ 0x31)
        + 1) ^ 0x72EE926FBDB40572)
      + v1
      + ((2
        * (((v0 & 0xFFFFFFF7 ^ 0x46AC7F2D)
          + 1600910863
          + ((2 * ((v0 & 0xFFFFFFF7 ^ 0x46AC7F2D) & 0x5F6BF617 ^ (v0 | 0x7FFFFFEF))) ^ 0x31)
          + 1) ^ 0x5F6BF60F)) & 0x1C5BFE6FALL);
  STACK[0x410] = v21;
  v22 = *(_DWORD *)(v13 + 4 * v20);
  v23 = (~(110495450 * v22 + 33906190) | 0x83619467) + 55247725 * v22;
  v24 = (441981800 * v22 - ((883963600 * v22 + 271249520) & 0x290EEE80) - 1667436680) & 0x9442E978 ^ 0x90028000;
  v25 = (((v7 & 0xFFFFFFF8 ^ 0x46AC7F27) + 1090506015 - ((2 * (v7 & 0xFFFFFFF8 ^ 0x46AC7F27)) & 0x81FF9A3E)) ^ 0x6DFC2D772D283BA0)
      + ((2
        * (((v7 & 0xFFFFFFF8 ^ 0x46AC7F27) + 1090506015 - ((2 * (v7 & 0xFFFFFFF8 ^ 0x46AC7F27)) & 0x81FF9A3E)) ^ 0x40FFCD1F)) & 0xDBAFED7E)
      + v1;
  STACK[0x448] = v25;
  v26 = *(unsigned __int8 *)(v8 + (*(unsigned __int8 *)(v25 - 0x6DFC2D776DD7F6BFLL) ^ 0x7DLL));
  v27 = v26 - ((2 * v26 + 24) & 0xFFFFFF83);
  LODWORD(v25) = v7 & 0xFFFFFFF3 ^ 0x46AC7F2D;
  LODWORD(STACK[0x40C]) = v25;
  LODWORD(STACK[0x408]) = 2 * v25;
  v28 = (((_DWORD)v25 - 1380612547 - ((2 * (_DWORD)v25) & 0x5B6B0C7Au)) ^ 0xDBEFFFBF12E7F8C4)
      + v1
      + ((2 * (((_DWORD)v25 - 1380612547 - ((2 * (_DWORD)v25) & 0x5B6B0C7A)) ^ 0xADB5863D)) & 0x17EA4FDF2);
  LODWORD(v25) = v19;
  v29 = (v27 + 77) ^ (((16 * ((_BYTE)v27 + 77) - ((32 * ((_BYTE)v27 + 77)) & 0x40) + 32) & 0x60 ^ 0xB0) - 16) ^ 0x60;
  v30 = (((v19 & 0xFFFFFFFD ^ 0x46AC7F27)
        + 675117602
        + ((2 * ((v19 & 0xFFFFFFFD ^ 0x46AC7F27) & 0x283D7A38 ^ (v19 | 0x7FFFFFE7))) ^ 0x35)
        + 1) ^ 0x3DF4763F17C6A5CDLL)
      + ((2
        * (((v19 & 0xFFFFFFFD ^ 0x46AC7F27)
          + 675117602
          + ((2 * ((v19 & 0xFFFFFFFD ^ 0x46AC7F27) & 0x283D7A38 ^ (v19 | 0x7FFFFFE7))) ^ 0x35)
          + 1) ^ 0x283D7A22)) & 0x7FF7BFDE)
      + v1;
  STACK[0x3F8] = v30;
  LODWORD(STACK[0x464]) = 1185709871;
  v31 = (((v19 & 0xFFFFFFF1 ^ 0x46AC7F2F) - 1237556096 - ((2 * (v19 & 0xFFFFFFF1 ^ 0x46AC7F2F)) & 0x6C78C900)) ^ 0x77FDDF772192CE7FLL)
      + v1
      + ((2
        * (((v19 & 0xFFFFFFF1 ^ 0x46AC7F2F) - 1237556096 - ((2 * (v19 & 0xFFFFFFF1 ^ 0x46AC7F2F)) & 0x6C78C900)) ^ 0xB63C6480)) & 0x12F5D55FELL);
  STACK[0x400] = v31;
  v32 = v19 & 0xFFFFFFF6 ^ 0x46AC7F2D;
  LODWORD(STACK[0x42C]) = v32;
  LODWORD(STACK[0x430]) = 2 * v32;
  v33 = *(_DWORD *)(v13
                  + 4
                  * (*(unsigned __int8 *)(((v32 - 2073310490 - ((2 * v32) & 0x8D795CC)) ^ 0x7F7FF7FE39962C39)
                                        + v1
                                        + ((2 * ((v32 - 2073310490 - ((2 * v32) & 0x8D795CC)) ^ 0x846BCAE6)) & 0x17BFBCDBELL)
                                        - 0x7F7FF7FEBDFDE6DFLL) ^ 0x96));
  v34 = 55247725 * v33 - ((110495450 * v33 + 33906190) & 0x6BD14008);
  v35 = (441981800 * v33 - ((883963600 * v33 + 271249520) & 0x5AB41DA0) - 1250982132) & 0x9442E978 ^ 0x94406108;
  v36 = STACK[0x320];
  v37 = (v35 - ((2 * v35) & 0x2880C2F0) - 1644665861) ^ 0x85F80662;
  v38 = STACK[0x328];
  v39 = *(_DWORD *)(STACK[0x328] + 4 * (*(unsigned __int8 *)(v21 - 0x72EE926FE2DFF37DLL) ^ 0x57)) ^ *(_DWORD *)(STACK[0x320] + 4 * (*(unsigned __int8 *)(STACK[0x438] - 0x3FB9FAEFCB17FEBFLL) ^ 0xCELL)) ^ (v34 + 1995132683) ^ (v6 + 362997867) ^ (1733118325 - (v37 | 0x674D4975) + (v37 | 0x98B2B68A));
  v40 = (((v25 & 0xFFFFFFF9 ^ 0x46AC7F27) - 122262443 - ((2 * (v25 & 0xFFFFFFF9 ^ 0x46AC7F27)) & 0xF16CD8B2)) ^ 0x9AF5DF9D154B83A2)
      + v1
      + ((2
        * (((v25 & 0xFFFFFFF9 ^ 0x46AC7F27) - 122262443 - ((2 * (v25 & 0xFFFFFFF9 ^ 0x46AC7F27)) & 0xF16CD8B2)) ^ 0xF8B66C5D)) & 0x1DBFBDFFELL);
  STACK[0x418] = v40;
  LODWORD(v21) = v25;
  LODWORD(STACK[0x454]) = v25;
  LODWORD(v25) = v25 & 0xFFFFFFF0 ^ 0x46AC7F2F;
  LODWORD(STACK[0x428]) = v25;
  LODWORD(STACK[0x424]) = 2 * v25;
  v41 = *(unsigned __int8 *)(v8
                           + (*(unsigned __int8 *)((((_DWORD)v25 + 445758030 - ((2 * (_DWORD)v25) & 0x352374A0u)) ^ 0x4BD8BA9FE1EFDEBFLL)
                                                 + v1
                                                 + ((2
                                                   * (((_DWORD)v25 + 445758030 - ((2 * (_DWORD)v25) & 0x352374A0)) ^ 0x1A91BA52u)) & 0x1F6FCC9DALL)
                                                 - 0x4BD8BA9FFB7E64EDLL) ^ 0x3ELL));
  v42 = (v15 + 679910324) ^ *(_DWORD *)(v38 + 4 * (*(unsigned __int8 *)(STACK[0x4B0] + 0x488411322A801) ^ 0xC0)) ^ *(_DWORD *)(v36 + 4 * (*(unsigned __int8 *)(v40 + 0x650A206212021001) ^ 0xAALL)) ^ (v10 - 1478808818) ^ (v29 - ((2 * v29) & 0x9A) - 1015427763);
  v43 = v41 + ~(2 * (((_BYTE)v41 + 4) & 7 ^ v41 & 2)) - 110;
  v44 = (((16 * v43) ^ 0x50) - ((2 * ((16 * v43) ^ 0x50)) & 0x20) + 90) & 0x6A;
  v45 = v43 ^ 0x79 ^ ((v44 ^ 0xDA) + ((2 * v44) ^ 0x4B) + 125);
  v46 = *(_DWORD *)(v38 + 4 * (*(unsigned __int8 *)(v28 + 0x2410004040AD8107) ^ 0xD3)) ^ (v23 + 2136073428) ^ *(_DWORD *)(v36 + 4 * (*(unsigned __int8 *)(v31 - 0x77FDDF7797AEAAFFLL) ^ 0xEELL)) ^ (265977546 - (v24 | 0xFDA7ECA) + (v24 | 0xF0258135));
  LODWORD(v25) = v21 & 0xFFFFFFFE ^ 0x46AC7F25;
  LODWORD(STACK[0x438]) = v25;
  LODWORD(STACK[0x434]) = 2 * v25;
  LODWORD(v6) = *(_DWORD *)(v13
                          + 4
                          * (*(unsigned __int8 *)((((_DWORD)v25 - 1584464791 - ((2 * (_DWORD)v25) & 0x431DF8D2u)) ^ 0x4BBD5EF517453654)
                                                + v1
                                                + ((2
                                                  * (((_DWORD)v25 - 1584464791 - ((2 * (_DWORD)v25) & 0x431DF8D2)) ^ 0xA18EFC69)) & 0x16D97947ALL)
                                                - 0x4BBD5EF5B6CBCA3DLL) ^ 0x5DLL));
  v47 = v46 ^ (v45 - ((2 * v45) & 0x54) + 845398058);
  v48 = 441981800 * v6 - ((883963600 * v6 + 271249520) & 0x27F00000);
  LOBYTE(v31) = *(_BYTE *)(v30 - 0x3DF4763F3FFBDFEFLL);
  v49 = *(_DWORD *)(v36 + 4 * (v31 ^ 0x69u)) ^ *(_DWORD *)(v38
                                                                            + 4
                                                                            * (*(unsigned __int8 *)(STACK[0x4A8]
                                                                                                  - 0x7FEBFFBFBCFD7F7ELL) ^ 0x6BLL)) ^ (55247725 * v6 - ((110495450 * v6 + 33906190) & 0x3D08B496) + 1602685266) ^ (((2 * ((v48 + 470644799) & 0x9442E978 ^ 0x36440C9B)) | 0xAE0ECF8A) - ((v48 + 470644799) & 0x9442E978 ^ 0x36440C9B) + 687380539) ^ (LODWORD(STACK[0x3F4]) - 872983937);
  LODWORD(v21) = STACK[0x4BC];
  v50 = (char *)*(&off_10112C750 + (LODWORD(STACK[0x4BC]) ^ 0x71118E37)) - 1874182658;
  LODWORD(v25) = STACK[0x308];
  LODWORD(STACK[0x3E0]) = v49;
  LODWORD(v25) = v25 ^ v49;
  v51 = *(_DWORD *)&v50[4 * (BYTE3(v25) ^ 0xA7)];
  HIDWORD(v52) = v51 ^ 0x42A512;
  LODWORD(v52) = v51 ^ 0x17000000;
  LODWORD(v12) = STACK[0x33C];
  LODWORD(STACK[0x3E4]) = v47;
  LODWORD(v40) = v47 ^ v12;
  LODWORD(v10) = v47 ^ v12 ^ 0xD9C17AA1;
  v53 = (char *)*(&off_10112C750 + (int)(v21 ^ 0x71118860)) - 1629025115;
  LODWORD(v6) = *(_DWORD *)&v53[4
                              * (((BYTE2(v10) ^ 0x1525000C) - ((2 * (BYTE2(v10) ^ 0x1525000C)) & 0xA020070) - 275027912) ^ 0xFABE6885)];
  LODWORD(v36) = v6 - ((2 * v6 + 1517574108) & 0xFC2B91C6) - 1420823343;
  LODWORD(v12) = STACK[0x304];
  LODWORD(STACK[0x3EC]) = v39;
  LODWORD(v6) = v12 ^ v39;
  v54 = v12 ^ v39 ^ 0x186EF2FC;
  v55 = (char *)*(&off_10112C750 + (int)(v21 ^ 0x711181B5)) - 1429852486;
  v56 = *(_DWORD *)&v55[4 * (BYTE1(v54) ^ 0x77)];
  LODWORD(v12) = STACK[0x300];
  LODWORD(STACK[0x3E8]) = v42;
  v57 = v12 ^ v42 ^ 0xF7582FB;
  v58 = (((v12 ^ v42) ^ 0xBE) - ((2 * v57) & 0x60) - 1871151312) ^ 0x917C34B0;
  v59 = (v58 | 0xFC610DF0) - (v58 | 0x39EF20F) + 60748303;
  LODWORD(STACK[0x3F4]) = v21 - 1896975367;
  v60 = (char *)*(&off_10112C750 + (int)v21 - 1896973463) - 656777026;
  v61 = LODWORD(STACK[0x2FC]) ^ *(_DWORD *)&v60[4
                                              * (((v57 & 0x63 ^ 0x1143C840) + (v57 & 0x9C ^ 0x60103295) - 1) ^ 0x7153FA0A)] ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0xA5D689E4) - 756333326) ^ (v56 - ((2 * v56 - 1729755268) & 0xD2BCF29E) - 1244562163) ^ v59 ^ v36 ^ ((v59 ^ 0xFD6546FB) - ((2 * (v59 ^ 0xFD6546FB) + 477983446) & 0x34599BA2) - 2006218948) ^ (((4 * v36) ^ 0xF857238C) + 721615523 - 2 * (((4 * v36) ^ 0xF857238C) & 0x2B02FAB0 ^ (4 * v36) & 0x10));
  v62 = *(_DWORD *)&v50[4 * (((v12 ^ v42) >> 24) ^ 0x4D)];
  HIDWORD(v52) = v62 ^ 0x42A512;
  LODWORD(v52) = v62 ^ 0x17000000;
  v63 = v25 ^ 0x1A;
  LODWORD(v38) = *(_DWORD *)&v53[4 * (((v25 ^ 0x14C1CE1A) >> 16) ^ 0x5C)];
  LODWORD(v38) = v38 - 2 * ((v38 + 758787054) & 0x3E65787F ^ v38 & 1) - 341859220;
  v64 = *(_DWORD *)&v55[4
                      * ((((2 * (BYTE1(v10) ^ 0xB01108D0)) & 0x600210F6) - (BYTE1(v10) ^ 0xB01108D0) - 1991073148) ^ 0x3943AA0B)];
  LODWORD(v13) = (v54 ^ 0x70) - 2133152734 - ((2 * (v54 ^ 0x70)) & 0x44444444);
  v65 = ((v54 ^ 0x84) - ((2 * (v54 ^ 0x84)) & 0x192) - 1402125623) ^ 0xBC6DF399;
  LODWORD(v6) = *(_DWORD *)&v50[4 * (BYTE3(v6) ^ 0xFB)];
  LODWORD(v36) = LODWORD(STACK[0x2F8]) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x3A1F3BFE) + 487562751) ^ *(_DWORD *)&v60[4 * (((STACK[0x260] & (2 * v65)) - v65 - 1428556505) ^ 0xBAD94463)] ^ v38 ^ v13 ^ (((4 * v38) ^ 0xF995E1F8) - ((2 * ((4 * v38) ^ 0xF995E1F8)) & 0xED9B9860) + 1993198643) ^ (v64 - ((2 * v64 + 149292924) & 0xDDC18A0) + 1398870030) ^ ((v13 ^ 0x80DAACD2) - ((2 * (v13 ^ 0x80DAACD2) + 1551725270) & 0x502AC166) + 374610462);
  HIDWORD(v52) = v6 ^ 0x42A512;
  LODWORD(v52) = v6 ^ 0x17000000;
  LODWORD(v6) = *(_DWORD *)&v53[4 * (BYTE2(v57) ^ 0x82)];
  LODWORD(v6) = v6 - ((2 * v6 + 1517574108) & 0x5149CE64) - 706800864;
  LODWORD(v38) = ((2 * (v10 ^ 0x51)) | 0x530FD7C2) - (v10 ^ 0x51) + 1450710047;
  LODWORD(v13) = ((2 * (((unsigned __int16)(v25 ^ 0xCE1A) >> 8) ^ 0xE8)) & 0x1AE)
               - (((unsigned __int16)(v25 ^ 0xCE1A) >> 8) ^ 0xE8)
               - 511493592;
  LODWORD(v13) = *(_DWORD *)&v55[4
                               * (((v13 & 0x2103290F ^ 0x1A604101)
                                 + (v13 ^ 0xE103283E)
                                 - ((v13 ^ 0xE103283E) & 0x80110F)) ^ 0x3B636BAE)];
  LODWORD(v10) = LODWORD(STACK[0x2F4]) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x971356D4) - 880170134) ^ *(_DWORD *)&v60[4 * (((v10 & 0x45 ^ 0x7813F104) + (v10 & 0xBA ^ 0xAB) - 1) ^ 0x7813F1EE)] ^ v6 ^ (v13 - ((2 * v13 + 417728380) & 0x29F9BF74) - 512760968) ^ (((4 * v6) ^ 0xA2939CC8) - 2 * (((4 * v6) ^ 0xA2939CC8) & 0x4B29BB7C ^ (4 * v6) & 0x10) - 886457491) ^ v38 ^ ((v38 ^ 0xA987EBE0) - ((2 * (v38 ^ 0xA987EBE0) + 477983446) & 0x1759F46A) - 101993568);
  LODWORD(v12) = *(_DWORD *)&v50[4 * (BYTE3(v40) ^ 0xB4)];
  HIDWORD(v52) = v12 ^ 0x42A512;
  LODWORD(v52) = v12 ^ 0x17000000;
  LODWORD(v6) = *(_DWORD *)&v53[4 * (BYTE2(v54) ^ 0x69)];
  LODWORD(v6) = v6 - ((2 * v6 + 1517574108) & 0xFC92670E) + 730029941;
  v66 = *(_DWORD *)&v55[4 * (BYTE1(v57) ^ 0xF0)];
  LODWORD(v25) = (v25 & 0xA0 ^ 0x66C0D981) + ((v25 ^ 0x14C1CE1A) & 0x5F) - 1;
  LOBYTE(v31) = ((v31 ^ 0x65 | 0xD5) - ((v31 ^ 0x65) & 0xC4)) ^ (v31 ^ 0x65) & 0xFE;
  LOBYTE(v31) = (v31 & 0x3B ^ 0xA) + (v31 ^ 0xB1) - ((v31 ^ 0xB1) & 0x3A);
  LODWORD(v25) = LODWORD(STACK[0x2F0]) ^ v25 ^ *(_DWORD *)&v60[4 * (v63 ^ 0x60)] ^ ((v25 ^ 0x66C0D9F0)
                                                                                  - ((2 * (v25 ^ 0x66C0D9F0) + 8221398) & 0xE0D484)
                                                                                  + 1856971693) ^ v6 ^ (v66 - ((2 * v66 + 417728380) & 0x3B9EB670) + 1782734582) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0xA013A77C) - 804662338) ^ (((4 * v6) ^ 0xF924CE1C) - ((2 * ((4 * v6) ^ 0xF924CE1C)) & 0xB2F2C6A0) + 1501127506);
  LOBYTE(v12) = v31 ^ 0x5F;
  LODWORD(v6) = (((v10 ^ 0x3B640E7E) >> (v31 ^ 0x4F))
               - 120566435
               - ((2 * ((v10 ^ 0x3B640E7E) >> (v31 ^ 0x4F))) & 0xF1A09ABA)) ^ 0xF8D04D5D;
  LODWORD(v31) = *(_DWORD *)&v50[4 * (HIBYTE(v61) ^ 0x37)];
  HIDWORD(v52) = v31 ^ 0x42A512;
  LODWORD(v52) = v31 ^ 0x17000000;
  v67 = (v6 >> v12) - ((2 * (v6 >> v12)) & 0x86);
  LODWORD(v12) = *(_DWORD *)&v53[4 * (((WORD1(v25) & 0x75 ^ 0x835) + (WORD1(v25) & 0x8A ^ 9) - 1) ^ 0x8D5)];
  LODWORD(v12) = v12 - ((2 * v12 + 1517574108) & 0xC989F0D0) - 1845549994;
  v68 = ((v36 & 0xDC ^ 0xB6D105) + 0xFFFFFF) & 0x8011DC | v36 & 0x23;
  v69 = (((2 * (BYTE1(v10) ^ 0x14)) & 0x17A) - (BYTE1(v10) ^ 0x14) + 1809459522) ^ 0xA308C39B;
  v70 = *(_DWORD *)&v55[4 * ((((2 * v69) | 0x73B14ADC) - v69 + 1176984210) ^ 0x710A4FA8)];
  LODWORD(v40) = ((v36 ^ 0x95) - ((2 * (v36 ^ 0x95)) & 0xBC) + 1380550494) ^ 0xF30895C6;
  v71 = LODWORD(STACK[0x2EC]) ^ *(_DWORD *)&v60[4
                                              * ((-880913540
                                                - (v40 | 0xCB7E537C)
                                                + (v40 | 0x3481AC83)) ^ 0x95C0BE73)] ^ v12 ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x650990F0) - 1299920776) ^ (v70 - ((2 * v70 + 417728380) & 0x21D153E8) + 1566289330) ^ (((4 * v12) ^ 0x9313E1A0) - 2 * (((4 * v12) ^ 0x9313E1A0) & 0x4EEAF25C ^ (4 * v12) & 0x10) - 823463347) ^ ((v68 ^ 0x8011E9) + 1345735715 + ((2 * (v68 ^ 0x8011E9) + 8221398) & 0x100256E ^ 0x3F92FFFF));
  LODWORD(v12) = *(_DWORD *)&v50[4 * (BYTE3(v36) ^ 0xB7)];
  HIDWORD(v52) = v12 ^ 0x42A512;
  LODWORD(v52) = v12 ^ 0x17000000;
  LODWORD(v12) = (v52 >> 24) - ((2 * (v52 >> 24)) & 0x26A95F12);
  LODWORD(v31) = *(_DWORD *)&v53[4 * (BYTE2(v61) ^ 0x4D)];
  LODWORD(v31) = v31 - ((2 * v31 + 1517574108) & 0x8FBA1000) + 1964454894;
  LODWORD(v6) = *(_DWORD *)&v55[4
                              * ((((2 * (BYTE1(v25) | 0x3A02B000)) & 0x20010086) - (BYTE1(v25) | 0x3A02B000) + 1802206140) ^ 0x5169CB4F)];
  v72 = ((2 * v10) & 0xA) + 2082608486 + (v10 ^ 0xFFFFFF1D) + 149;
  LODWORD(v40) = (v10 ^ 0xEC) - ((2 * (v10 ^ 0xEC)) & 0x1C0);
  LODWORD(v10) = *(_DWORD *)&v50[4 * (BYTE3(v10) ^ 0x5C)];
  HIDWORD(v52) = v10 ^ 0x42A512;
  LODWORD(v52) = v10 ^ 0x17000000;
  LODWORD(v10) = LODWORD(STACK[0x2E8]) ^ (v12 + 324317065) ^ *(_DWORD *)&v60[4
                                                                           * ((((2
                                                                               * (((_DWORD)v40 - 1995788320) ^ 0x8F8A4F81)) | 0xA4E51E24)
                                                                             - (((_DWORD)v40 - 1995788320) ^ 0x8F8A4F81)
                                                                             + 764244206) ^ 0xD4F26FF1)] ^ (v6 - ((2 * v6 + 417728380) & 0x7BE6FC6C) - 1972993548) ^ v31 ^ v72 ^ ((v72 ^ 0x7C221566) - ((2 * (v72 ^ 0x7C221566) - 595758378) & 0xB87BBEC8) + 1249679567) ^ (((4 * v31) ^ 0x1F742000) - 2 * (((4 * v31) ^ 0x1F742000) & 0x4DADB4D8 ^ (4 * v31) & 0x10) - 844254006);
  LODWORD(v12) = *(_DWORD *)&v53[4 * (BYTE2(v36) ^ 0x68)];
  LODWORD(v12) = v12 + 780769384 + (~(2 * v12 + 41179100) | 0xFD61270D);
  LODWORD(v6) = v25 ^ STACK[0x390];
  LODWORD(v31) = (1488056713 - (v6 ^ 0x96 | 0x58B1F189) + (v6 ^ 0x96 | 0xA74E0E76)) ^ 0xC25C05E4;
  LODWORD(v31) = (v31 | 0x3657343F) - (v31 | 0xC9A8CBC0) - 911684672;
  v73 = *(_DWORD *)&v55[4 * (BYTE1(v61) ^ 0x4A)];
  LODWORD(v6) = (v6 ^ 0xE89A56F3) - ((2 * (v6 ^ 0xE89A56F3)) & 0x912409AC) - 539849514;
  v74 = (4 * v12) ^ 0x53DB1E4;
  LODWORD(v25) = *(_DWORD *)&v50[4 * (BYTE3(v25) ^ 0x9C)];
  LODWORD(v31) = LODWORD(STACK[0x2E4]) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x86E141AE) + 1131454679) ^ *(_DWORD *)&v60[4 * (((v6 & 0x1008D351 ^ 0x48200150) + (v6 ^ 0xB609DE21) - ((v6 ^ 0xB609DE21) & 0xD8601751)) ^ 0x5929D3C1)] ^ v12 ^ (v73 - ((2 * v73 - 1729755268) & 0xE08FDB38) - 1128599206) ^ (v74 - ((2 * v74) & 0x4C3000B0) + 639107160) ^ v31 ^ ((v31 ^ 0x53453FBF) - ((2 * (v31 ^ 0x53453FBF) + 477983446) & 0x1DD8B25A) + 2099974808);
  HIDWORD(v52) = v25 ^ 0x42A512;
  LODWORD(v52) = v25 ^ 0x17000000;
  LODWORD(v12) = (((v67 + 67) ^ 0x36)
                + ((v67 + 323) & 0xFA ^ 0xA98BC1C8)
                - (((v67 + 67) ^ 0x36) & 0xFA)) ^ 0x2D8263EA;
  LODWORD(v12) = *(_DWORD *)&v53[4
                               * ((-1801112298 - (v12 | 0x94A53516) + (v12 | 0x6B5ACAE9)) ^ 0xEF53681B)];
  LODWORD(v12) = v12 - ((2 * v12 + 1517574108) & 0x51F1FA26) + 1446193409;
  LODWORD(v25) = LODWORD(STACK[0x2E0]) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x44BABA9E) - 1570939569) ^ v12 ^ (((4 * v12) ^ 0xA3E3F44C) - ((2 * ((4 * v12) ^ 0xA3E3F44C)) & 0x4E5D1F30) + 657362841);
  LODWORD(v12) = *(_DWORD *)&v55[4 * (BYTE1(v36) ^ 0xF7)];
  v75 = v12 - ((2 * v12 - 1729755268) & 0xB8D08B12) - 1462023865;
  LODWORD(v25) = ((-2059864393 - v12 - ((1729755268 - 2 * v12) & 0xA357F4EA)) ^ v75 ^ 0x143F80E6 ^ ((v75 ^ 0xB4B250DB ^ v25)
                                                                                                  + (v25 ^ 0x1725EAAD)
                                                                                                  + 1
                                                                                                  - ((2 * ((v75 ^ 0xB4B250DB ^ v25) + (v25 ^ 0x1725EAAD) + 1)) & 0x33F87E34)
                                                                                                  - 1711522022))
               + (v25 ^ 0x1725EAAD);
  LODWORD(v12) = v61 ^ LODWORD(STACK[0x380]);
  v76 = (v61 ^ LOBYTE(STACK[0x380]));
  LODWORD(v12) = (((v12 & 0x8B) + (v76 ^ 0xFF)) | 0xAB46BA00) - ((v76 ^ 0xFF) & 0x8B);
  LODWORD(v12) = (v12 & 0x82000252 ^ 0x200452) + (v12 ^ 0xCB0CEA0D) - ((v12 ^ 0xCB0CEA0D) & 0x20400252);
  LODWORD(v25) = ((v12 ^ 0xC22A5652) - ((2 * (v12 ^ 0xC22A5652) - 595758378) & 0x93BA236A) - 1206138080) ^ v12 ^ *(_DWORD *)&v60[4 * (v76 ^ 0x69)] ^ (v25 - ((2 * v25) & 0xA0D4E9F0) - 798329608);
  v77 = v71 ^ v68;
  LODWORD(v12) = *(_DWORD *)&v50[4 * (HIBYTE(v71) ^ 0xA3)];
  HIDWORD(v52) = v12 ^ 0x42A512;
  LODWORD(v52) = v12 ^ 0x17000000;
  LODWORD(v6) = *(_DWORD *)&v53[4 * (BYTE2(v25) ^ 0xB7)];
  LODWORD(v6) = v6 - ((2 * v6 + 1517574108) & 0x853879B0) + 1876322502;
  v78 = ((4 * v6) ^ 0xA70F360) + 146317889 - 2 * (((4 * v6) ^ 0xA70F360) & 0x8B8A24C ^ (4 * v6) & 0xC);
  LODWORD(v38) = ((v10 ^ LOBYTE(STACK[0x378])) ^ 0x840C6A8E)
               - ((2 * ((v10 ^ LOBYTE(STACK[0x378])) ^ 0x840C6A8E)) & 0x810D07C)
               + 1339714622;
  v79 = *(_DWORD *)&v55[4 * (BYTE1(v31) ^ 0x5D)];
  LODWORD(v12) = LODWORD(STACK[0x2DC]) ^ *(_DWORD *)&v60[4
                                                       * ((((v10 ^ LODWORD(STACK[0x378])) & 0x75 ^ 0x171)
                                                         + ((v10 ^ LODWORD(STACK[0x378])) & 0x8A ^ 0x83)
                                                         - 1) ^ 0x165)] ^ ((v52 >> 24)
                                                                         - ((2 * (v52 >> 24)) & 0x76006FDE)
                                                                         + 989870063) ^ (v79
                                                                                       - ((2 * v79 - 1729755268) & 0xC682631C)
                                                                                       - 1347144372) ^ v6 ^ v38 ^ ((v38 ^ 0xCBD60636) - ((2 * (v38 ^ 0xCBD60636) - 595758378) & 0xD5035C1E) - 658479238);
  LODWORD(v6) = *(_DWORD *)&v50[4 * (BYTE3(v10) ^ 0x74)];
  HIDWORD(v52) = v6 ^ 0x42A512;
  LODWORD(v52) = v6 ^ 0x17000000;
  v80 = v12 ^ v78;
  LODWORD(v12) = *(_DWORD *)&v53[4
                               * ((662202802 - (BYTE2(v77) ^ 0x1E | 0x277869B2) + (BYTE2(v77) ^ 0x1E | 0xD887964D)) ^ 0xD887968E)];
  LODWORD(v12) = v12 - ((2 * v12 + 443832284) & 0x18BD3492) - 1181170121;
  v81 = *(_DWORD *)&v55[4 * (BYTE1(v25) ^ 0x89)];
  LODWORD(v36) = ((2 * (v31 ^ 0x4861781B)) & 0x8002B1F6)
               - (v31 ^ 0x4861781B)
               + 527344132;
  LODWORD(v38) = ((2 * (v31 ^ 0xC3)) | 0xA04E8994) - (v31 ^ 0xC3) - 1344750794;
  v82 = *(_DWORD *)&v50[4 * (BYTE3(v31) ^ 0x58)];
  LODWORD(v12) = *(_DWORD *)&v60[4
                               * (((v38 & 0xABA7FECE ^ 0x8A808C44)
                                 + (v38 ^ 0x712773AA)
                                 - ((v38 ^ 0x712773AA) & 0xABA7FECE)) ^ 0x8AA7C92E)] ^ LODWORD(STACK[0x38C]) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x20C25DE6) - 1872679181) ^ v12 ^ (((4 * v12) ^ 0x317A6924) - ((2 * ((4 * v12) ^ 0x317A6924)) & 0xF0365E10) - 132436216) ^ v36 ^ ((v36 ^ 0x570FDA4C) - ((2 * (v36 ^ 0x570FDA4C) - 595758378) & 0x944873D0) - 1201474733);
  HIDWORD(v52) = v82 ^ 0x42A512;
  LODWORD(v52) = v82 ^ 0x17000000;
  LODWORD(v36) = v12 ^ (v81 - ((2 * v81 - 1729755268) & 0xDD10AB50) + 989550950);
  LODWORD(v12) = *(_DWORD *)&v53[4 * (BYTE2(v10) ^ 0x9E)];
  v83 = v12 - ((2 * v12 + 1517574108) & 0xD370809E) - 1762497475;
  LODWORD(v38) = (v25 ^ 0x8A) - ((2 * v25) & 0xC8) + 537380964;
  LODWORD(v38) = (v38 & LODWORD(STACK[0x25C]) ^ 0x3593) + (v38 ^ 0xFE17C86C) - ((v38 ^ 0xFE17C86C) & 0xC20005DF);
  LODWORD(v12) = *(_DWORD *)&v55[4 * ((((v77 >> 8) & 0x90 ^ 0x581) + ((v77 >> 8) & 0x6F) - 1) ^ 0x55B)];
  v84 = (((2 * (v25 ^ 0x6B)) & 0x160) - (v25 ^ 0x6B) + 846825551) ^ 0x6A39C82F;
  LODWORD(v38) = v38 ^ 0x2872ACD2 ^ ((v38 ^ 0x1C12B5DE)
                                   - ((2 * (v38 ^ 0x1C12B5DE) + 1551725270) & 0x68C03218)
                                   + 580833911);
  v85 = *(_DWORD *)&v60[4 * ((v84 - (STACK[0x258] & (2 * v84)) + 467736138) ^ 0x43A156D2)] ^ 0x803FBB00;
  LODWORD(v13) = (v38 & v85) + 837096371 + (~(2 * (v38 & v85)) | 0x9C35D89B);
  v86 = ((2 * (v38 + v85)) & 0xF85BFFFA)
      + ((v38 + v85) ^ 0x7C2DFFFD)
      + ((2 * v13) ^ 0xEEE17F45)
      + ((4 * v13) & 0xE5A94FBC ^ 0x3A7FB177);
  v87 = LODWORD(STACK[0x2D8]) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x54552AC0) + 707433824) ^ v83 ^ (v12 - ((2 * v12 + 417728380) & 0x7C2AAFEE) + 176708533) ^ (((4 * v83) ^ 0xA6E1013C) - ((2 * ((4 * v83) ^ 0xA6E1013C)) & 0xD7E8D7E8) + 1811180532) ^ (v86 - ((2 * v86 + 223170502) & 0x1590441E) + 24037874);
  LODWORD(v25) = *(_DWORD *)&v50[4 * (BYTE3(v25) ^ 0x7B)];
  HIDWORD(v52) = v25 ^ 0x42A512;
  LODWORD(v52) = v25 ^ 0x17000000;
  LODWORD(v25) = (v52 >> 24) - ((2 * (v52 >> 24)) & 0x4A235972);
  LODWORD(v12) = ((BYTE2(v31) ^ 5) - ((2 * (BYTE2(v31) ^ 5)) & 0x42) + 774384929) ^ 0x2F6F2D23;
  LODWORD(v12) = *(_DWORD *)&v53[4 * (((_DWORD)v12 - (STACK[0x254] & (2 * (_DWORD)v12)) + 1592421664) ^ 0x5FAD6DD7)];
  LODWORD(v12) = v12 - ((2 * v12 + 1517574108) & 0x4F8499D8) + 1425832154;
  LODWORD(v6) = ((4 * v12) ^ 0x9F0933B0) + 1653606113 - 2 * (((4 * v12) ^ 0x9F0933B0) & 0x629006E4 ^ (4 * v12) & 4);
  v88 = v77 ^ LODWORD(STACK[0x37C]);
  v89 = ((v88 ^ 0x78) - ((2 * (v88 ^ 0x78)) & 0x96) + 400887115) ^ 0x97840F51;
  LODWORD(v10) = *(_DWORD *)&v55[4 * (BYTE1(v10) ^ 0xA4)];
  LODWORD(v12) = LODWORD(STACK[0x314]) ^ *(_DWORD *)&v60[4
                                                       * (((v88 & 0x29 ^ 0x609) + ((v88 ^ 2) & 0xD6 ^ 0x11) - 1) ^ 0x629)] ^ (v89 - ((2 * v89) & 0x820E66) - 749469901) ^ v12 ^ (v10 - ((2 * v10 - 1729755268) & 0xBFE6FE5A) - 1402567957) ^ (((v89 - ((2 * v89) & 0x820E66) - 749469901) ^ 0x5332FD73) - ((2 * ((v89 - ((2 * v89) & 0x820E66) - 749469901) ^ 0x5332FD73) - 595758378) & 0xE276B1C2) - 545648052);
  v90 = *(_DWORD *)&v50[4 * (HIBYTE(v80) ^ 0xDB)];
  HIDWORD(v52) = v90 ^ 0x42A512;
  LODWORD(v52) = v90 ^ 0x17000000;
  LODWORD(v25) = v12 ^ v6 ^ (v25 - 1525568327);
  LODWORD(v12) = *(_DWORD *)&v53[4 * (BYTE2(v25) ^ 0xBA)];
  LODWORD(v12) = v12 - ((2 * v12 + 1517574108) & 0x72356BDC) - 430644772;
  LODWORD(v31) = *(_DWORD *)&v55[4 * (BYTE1(v87) ^ 0x24)];
  v91 = ((v36 ^ 0x2A) - ((2 * (v36 ^ 0x2A)) & 0x178) + 1263826364) ^ 0x5FF2459C;
  v92 = v91 - ((2 * v91) & 0x21444896) + 430056523;
  LODWORD(v10) = LODWORD(STACK[0x2D4]) ^ *(_DWORD *)&v60[4
                                                       * ((((2 * (v36 ^ 0x3400BC94)) | 0x4BC265CC)
                                                         - (v36 ^ 0x3400BC94)
                                                         - 635515622) ^ 0x11E18EEE)] ^ v12 ^ ((v52 >> 24)
                                                                                            - ((2 * (v52 >> 24)) & 0xECE329AA)
                                                                                            - 160328491) ^ (((4 * v12) ^ 0xE46AD7B8) - ((2 * ((4 * v12) ^ 0xE46AD7B8)) & 0xB88B4C8) - 2050729372) ^ v92 ^ ((v92 ^ 0xD0414CD) - ((2 * (v92 ^ 0xD0414CD) - 595758378) & 0xC2F44450) - 809968749) ^ (v31 - ((2 * v31 + 15075196) & 0x725BCEA) - 804920781);
  LODWORD(v12) = *(_DWORD *)&v50[4 * (BYTE3(v36) ^ 0x55)];
  HIDWORD(v52) = v12 ^ 0x42A512;
  LODWORD(v52) = v12 ^ 0x17000000;
  v93 = *(_DWORD *)&v53[4 * (BYTE2(v80) ^ 0x2B)];
  v94 = v93 - ((2 * v93 + 1517574108) & 0xA75A8C70) - 2132315610;
  LODWORD(v31) = *(_DWORD *)&v55[4 * (BYTE1(v25) ^ 0x9A)];
  v95 = v87 ^ LODWORD(STACK[0x370]);
  v96 = (1460168351 - (v95 ^ 0x68 | 0x5708669F) + (v95 ^ 0x68 | 0xA8F79960)) ^ 0xA9FF8938;
  v97 = ((2 * v96) & 0x1CB62416) - v96 - 1314591244;
  v98 = LODWORD(STACK[0x2D0]) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x6DAC5462) - 1227478479) ^ v94 ^ (v31 - ((2 * v31 - 1729755268) & 0xBECBD00A) + 735636419) ^ (((4 * v94) ^ 0x4EB518E0) + 1437120961 - 2 * (((4 * v94) ^ 0x4EB518E0) & 0x55A8B9CC ^ (4 * v94) & 0xC)) ^ *(_DWORD *)&v60[4 * (v95 ^ 0x20)] ^ v97 ^ ((v97 ^ 0xB0ACFDF4) - ((2 * (v97 ^ 0xB0ACFDF4) - 595758378) & 0xA41E862C) + 1078852737);
  LODWORD(v12) = *(_DWORD *)&v50[4 * (HIBYTE(v87) ^ 0xAB)];
  HIDWORD(v52) = v12 ^ 0x42A512;
  LODWORD(v52) = v12 ^ 0x17000000;
  LODWORD(v31) = *(_DWORD *)&v53[4 * (BYTE2(v36) ^ 0xC7)];
  LODWORD(v6) = v31 - ((2 * v31 + 1517574108) & 0x632A8822) + 1590652927;
  v99 = v25 ^ STACK[0x398];
  v100 = (((2 * (v99 ^ 0xD4)) & 0x15E) - (v99 ^ 0xD4) + 359264080) & 0x10013FFF;
  v101 = *(_DWORD *)&v55[4 * (BYTE1(v80) ^ 0xB8)];
  LODWORD(v31) = LODWORD(STACK[0x310]) ^ *(_DWORD *)&v60[4 * (v99 ^ 0x7A)] ^ v6 ^ (v101
                                                                                 - 2
                                                                                 * ((v101 + 208864190) & 0x2E6FAB65 ^ v101 & 1)
                                                                                 - 85807326) ^ v100 ^ (((4 * v6) ^ 0xC6551044) + 289974509 - 2 * (((4 * v6) ^ 0xC6551044) & 0x1148A8FC ^ (4 * v6) & 0x10)) ^ ((v100 ^ 0x10012FEE) + 2093519119 + ((2 * (v100 ^ 0x10012FEE) + 94934) & 0x2AF46 ^ 0xE3EEFFFF)) ^ ((v52 >> 24) - 1042479315 + (~(2 * (v52 >> 24)) | 0x7C45F1A7));
  LODWORD(v25) = *(_DWORD *)&v50[4 * (BYTE3(v25) ^ 0x24)];
  HIDWORD(v52) = v25 ^ 0x42A512;
  LODWORD(v52) = v25 ^ 0x17000000;
  LODWORD(v12) = *(_DWORD *)&v53[4
                               * (((BYTE2(v87) ^ 0xFFFFFF4F) - 332105465 + ((2 * BYTE2(v87)) | 0x27970DF4)) ^ 0x13CB86AF)];
  LODWORD(v12) = v12 - ((2 * v12 + 443832284) & 0x288D0212) - 1048531721;
  v102 = (v80 ^ LOBYTE(STACK[0x374]));
  v103 = ((v80 ^ LODWORD(STACK[0x374])) & 0x6A) - 1090249728 + (v102 ^ 0xFF) - ((v102 ^ 0xFF) & 0x6A);
  LODWORD(v36) = *(_DWORD *)&v55[4 * (BYTE1(v36) ^ 0x8A)];
  LODWORD(v25) = LODWORD(STACK[0x2CC]) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x76BF5486) + 996125251) ^ *(_DWORD *)&v60[4 * ((1095579532 - (v102 ^ 0x38 | 0x414D378C) + (v102 ^ 0x38 | 0xBEB2C873)) ^ 0xBEB2C864)] ^ (v36 - ((2 * v36 + 15075196) & 0x8A0304) + 1287128384) ^ v103 ^ v12 ^ ((v103 ^ 0xBF041CAA) - ((2 * (v103 ^ 0xBF041CAA) + 477983446) & 0x119320BC) - 150451767) ^ (((4 * v12) ^ 0x511A0424) - ((2 * ((4 * v12) ^ 0x511A0424)) & 0x94417778) - 903824450);
  LODWORD(v12) = *(_DWORD *)&v50[4 * (BYTE3(v10) ^ 0x15)];
  HIDWORD(v52) = v12 ^ 0x42A512;
  LODWORD(v52) = v12 ^ 0x17000000;
  LODWORD(v6) = *(_DWORD *)&v53[4 * (BYTE2(v25) ^ 0x88)];
  LODWORD(v6) = v6 + 1859901661 + ~(2 * ((v6 + 758787054) & 0x41A1ACEF ^ v6 & 1));
  LODWORD(v38) = (v98 ^ LOBYTE(STACK[0x368]));
  LODWORD(v36) = ((2 * (v38 ^ 0x48)) & 0x5A) - (v38 ^ 0x48) + 1234;
  LODWORD(v13) = *(_DWORD *)&v55[4 * (BYTE1(v31) ^ 0x7E)];
  v104 = LODWORD(STACK[0x2C8]) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x91ACE756) + 1222013867) ^ (v13
                                                                                                - ((2 * v13 - 1729755268) & 0xB0924E18)
                                                                                                + 616311498) ^ *(_DWORD *)&v60[4 * ((((((v98 ^ LODWORD(STACK[0x368])) & 0x69) + (v38 ^ 0x10C8A1EB)) | 0x4E011C00) - ((v38 ^ 0x10C8A1EB) & 0xC82069)) ^ 0x5E019DE6)] ^ v6 ^ v36 ^ ((v36 ^ 0x4EE) - ((2 * (v36 ^ 0x4EE) + 209547990) & 0xC1820E0) + 88852955) ^ (((4 * v6) ^ 0x686B3B8) - ((2 * ((4 * v6) ^ 0x686B3B8)) & 0x70F8B208) + 947673348);
  LODWORD(v12) = *(_DWORD *)&v50[4 * (HIBYTE(v98) ^ 0x80)];
  HIDWORD(v52) = v12 ^ 0x42A512;
  LODWORD(v52) = v12 ^ 0x17000000;
  LODWORD(v6) = *(_DWORD *)&v53[4 * (BYTE2(v10) ^ 0xC9)];
  LODWORD(v6) = v6 - ((2 * v6 + 1517574108) & 0x646DDF26) + 1601248129;
  v105 = *(_DWORD *)&v55[4
                       * ((((2 * (BYTE1(v25) ^ 0x824006)) | 0xDAC63DF8) - (BYTE1(v25) ^ 0x824006) - 1835212540) ^ 0x6DE15E04)];
  LODWORD(v38) = v31 ^ LODWORD(STACK[0x360]);
  LODWORD(v36) = (((2 * (v38 ^ 0x70)) | 0x7927C992) - (v38 ^ 0x70) - 1016325321) ^ 0xCC93C499;
  LODWORD(v36) = v36 - ((2 * v36) & 0x2E73DC6A) + 389672501;
  LODWORD(v12) = LODWORD(STACK[0x2C4]) ^ *(_DWORD *)&v60[4 * (v38 ^ 0x12)] ^ v6 ^ ((v52 >> 24)
                                                                                               - ((2 * (v52 >> 24)) & 0xA00E7EE0)
                                                                                               + 1342652272) ^ (((4 * v6) ^ 0xC8DBBE4C) - ((2 * ((4 * v6) ^ 0xC8DBBE4C)) & 0x9DA31150) + 1322354857) ^ v36 ^ ((v36 ^ 0xE739CE17) - ((2 * (v36 ^ 0xE739CE17) + 1551725270) & 0x6471DE78) + 544712871);
  LODWORD(v6) = v105 - 2 * ((v105 + 208864190) & 0x2DA8E177 ^ v105 & 1) + 2048648500;
  v106 = *(_DWORD *)&v50[4 * (BYTE3(v31) ^ 0x16)];
  LODWORD(v36) = v12 ^ v6;
  HIDWORD(v52) = v106 ^ 0x42A512;
  LODWORD(v52) = v106 ^ 0x17000000;
  LODWORD(v6) = *(_DWORD *)&v53[4 * (BYTE2(v98) ^ 0x88)];
  LODWORD(v6) = v6 - ((2 * v6 + 1517574108) & 0x6AF457B6) + 1655986121;
  LODWORD(v38) = *(_DWORD *)&v55[4 * (BYTE1(v10) ^ 0xC6)];
  v107 = v38 + 803266909 + (~(2 * v38 - 1729755268) | 0x392444C3);
  v108 = (v25 ^ STACK[0x3A0]);
  LODWORD(v38) = ((v108 ^ 0x8D) + ((v25 ^ STACK[0x3A0]) & 0xCB ^ 0x794E0242) - ((v108 ^ 0x8D) & 0xCB)) ^ 0x3A1DA66A;
  LODWORD(v38) = v38 - ((2 * v38) & 0x14472) - 2138244551;
  v109 = (-579327039 - (v108 ^ 0x3D | 0xDD782BC1) + (v108 ^ 0x3D | 0x2287D43E)) ^ 0xF817D41C;
  v110 = LODWORD(STACK[0x2BC]) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x32266368) + 420688308) ^ v6 ^ v107 ^ (((4 * v6) ^ 0xD5E8AF6C) - 2 * (((4 * v6) ^ 0xD5E8AF6C) & 0x593A74FC ^ (4 * v6) & 0x10) - 650480401) ^ v38 ^ *(_DWORD *)&v60[4 * ((v109 - ((2 * v109) & 0x26689DE4) - 1825288462) ^ 0x49A44E91)] ^ ((v38 ^ 0xC3DF5E79) - ((2 * (v38 ^ 0xC3DF5E79) + 1551725270) & 0x4948AD7E) + 316870698);
  LODWORD(v25) = *(_DWORD *)&v50[4 * (BYTE3(v25) ^ 0x9F)];
  HIDWORD(v52) = v25 ^ 0x42A512;
  LODWORD(v52) = v25 ^ 0x17000000;
  LODWORD(v12) = *(_DWORD *)&v53[4 * (BYTE2(v31) ^ 0x39)];
  LODWORD(v12) = v12 - ((2 * v12 + 1517574108) & 0xC7C41B86) - 1860421199;
  v111 = *(_DWORD *)&v55[4 * (BYTE1(v98) ^ 0xB2)];
  LOBYTE(v31) = v10 ^ LODWORD(STACK[0x36C]);
  LODWORD(v10) = v31;
  v112 = (-806368591 - (v10 ^ 0x1B | 0xCFEFCAB1) + (v10 ^ 0x1B | 0x3010354E)) ^ 0xB191954D;
  v113 = ((2 * v112) | 0x7EB25920) - v112 + 1084674928;
  v114 = LODWORD(STACK[0x2B8]) ^ *(_DWORD *)&v60[4
                                               * (((v10 ^ 0xA006176)
                                                 + (v31 & 0xF ^ 0xC4260809)
                                                 - ((v10 ^ 0xA006176) & 0x200400F)) ^ 0xCC262911)] ^ v12 ^ (v111 - ((2 * v111 + 417728380) & 0x3C8DD5A6) + 1790570129) ^ (((4 * v12) ^ 0x8F88370C) - ((2 * ((4 * v12) ^ 0x8F88370C)) & 0x33DF6D10) + 435140234) ^ v113 ^ ((v113 ^ 0x3ED88CF0) - ((2 * (v113 ^ 0x3ED88CF0) - 595758378) & 0xC9092D4E) + 1388531730) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x3AE6C4E2) - 1653382543);
  LODWORD(v12) = *(_DWORD *)&v50[4 * (HIBYTE(v104) ^ 0xC5)];
  LODWORD(v25) = ((((v12 ^ 0x1742A512) << ((4 - v74) & 8))
                 + 1599927726
                 - ((2 * ((v12 ^ 0x1742A512) << ((4 - v74) & 8))) & 0xBEB9EB5C)) ^ 0x5F5CF5AE) << ((4 - v74) & 8 ^ 8);
  LODWORD(v25) = ((v12 >> 23) & 0x1DE ^ 0xE)
               + (BYTE3(v12) ^ 0xFF7CFEF8)
               + (v25 ^ 0xF7B679F3)
               + ((2 * v25) & 0xEF6CF3E6);
  LODWORD(v6) = *(_DWORD *)&v53[4 * (BYTE2(v114) ^ 0xE2)];
  LODWORD(v12) = v6 - ((2 * v6 + 1517574108) & 0x9ACC6942) - 90152817;
  LODWORD(v6) = *(_DWORD *)&v55[4 * (((unsigned __int16)(v110 ^ 0x4403) >> 8) ^ 0xD2)];
  LODWORD(v10) = LODWORD(STACK[0x2C0]) ^ v36;
  v115 = (v10 & 0x77 ^ 0x82389557)
       + ((LOBYTE(STACK[0x2C0]) ^ v36) ^ 0x144208A0)
       - (((LOBYTE(STACK[0x2C0]) ^ v36) ^ 0x144208A0) & STACK[0x250]);
  LODWORD(v10) = ((v10 & 0x41 ^ 0xFB3001) + (v10 & 0xBE ^ 0x25) - 1) & 0xB03FFF;
  LODWORD(v25) = LODWORD(STACK[0x2B4]) ^ v12 ^ *(_DWORD *)&v60[4 * (v115 ^ 0x927A950B)] ^ (v6
                                                                                         - 2
                                                                                         * ((v6 + 208864190) & 0x1E3131A9 ^ v6 & 1)
                                                                                         - 358337178) ^ (((4 * v12) ^ 0x3598D284) - ((2 * ((4 * v12) ^ 0x3598D284)) & 0x85B93CE0) - 1025728909) ^ ((v10 ^ 0xB030E9) + 776203331 + ((2 * (v10 ^ 0xB030E9) + 94934) & 0x265AE ^ 0x7FF7FFFF)) ^ (v25 - ((2 * v25 + 295243324) & 0x32ADF066) + 572751697);
  LODWORD(v12) = *(_DWORD *)&v50[4 * (BYTE3(v36) ^ 0x2B)];
  HIDWORD(v52) = v12 ^ 0x42A512;
  LODWORD(v52) = v12 ^ 0x17000000;
  LODWORD(v6) = (BYTE2(v104) ^ 0x965808C7) - ((2 * (BYTE2(v104) ^ 0x965808C7)) & 0x203000DA) - 266493331;
  LODWORD(v6) = *(_DWORD *)&v53[4
                              * (((v6 & 0x4404A0AB ^ 0xC82850A0)
                                + (v6 ^ 0x1756AF0F)
                                - ((v6 ^ 0x1756AF0F) & 0xD02300AB)) ^ 0xAD3CF5A6)];
  LODWORD(v6) = v6 - ((2 * v6 + 443832284) & 0x181B9116) - 1186466695;
  LODWORD(v31) = *(_DWORD *)&v55[4 * (BYTE1(v114) ^ 0x5F)];
  LODWORD(v40) = (-2
                - ((v110 ^ 3 ^ LOBYTE(STACK[0x35C]) | 0xE3DD5A82)
                 + (v110 ^ 3 ^ LOBYTE(STACK[0x35C]) | 0x3EFEBF7D))) ^ 0x5AB3E757;
  LODWORD(v40) = v40 - ((2 * v40) & 0xC20096A) + 1578478773;
  LODWORD(v40) = LODWORD(STACK[0x2B0]) ^ *(_DWORD *)&v60[4
                                                       * ((((v110 ^ 0xF844403 ^ LODWORD(STACK[0x35C])) & 0xE9 ^ 0x3880)
                                                         + ((v110 ^ 0xF844403 ^ LODWORD(STACK[0x35C])) & 0x16 ^ 0x15)
                                                         - 1) ^ 0x386E)] ^ ((v52 >> 24)
                                                                          - ((2 * (v52 >> 24)) & 0x7BAFB464)
                                                                          + 1037556274) ^ (v31
                                                                                         - ((2 * v31 + 417728380) & 0x3D085D4E)
                                                                                         + 1794585189) ^ v6 ^ v40 ^ ((v40 ^ 0xD985AEF7) - ((2 * (v40 ^ 0xD985AEF7) - 595758378) & 0xD5DCE4FC) - 651351063) ^ (((4 * v6) ^ 0x3037222C) - ((2 * ((4 * v6) ^ 0x3037222C)) & 0x6F540638) + 933888798);
  LODWORD(v12) = *(_DWORD *)&v50[4 * (HIBYTE(v110) ^ 0xBC)];
  HIDWORD(v52) = v12 ^ 0x42A512;
  LODWORD(v52) = v12 ^ 0x17000000;
  LODWORD(v12) = *(_DWORD *)&v53[4 * (BYTE2(v36) ^ 0xF5)];
  LODWORD(v12) = v12 - ((2 * v12 + 443832284) & 0x1FB3FCAC) - 1122751932;
  v116 = (v12 & 0x29254A1 ^ 0x292046A) + (v12 & 0x3529AA00 ^ 0x2429A201) - 1;
  LODWORD(v6) = ((4 * v12) ^ 0x3F67F958) - ((2 * ((4 * v12) ^ 0x3F67F958)) & 0xE1676E48) - 256657627;
  v117 = ((2 * (v6 & 0xC844015C ^ 0x41140044)) | 0x5476A29A) - (v6 & 0xC844015C ^ 0x41140044);
  LODWORD(v12) = v6 & 0x37BBFEA0 ^ 0x4FDA308D ^ ((v116 & 0x36398EA0 ^ 0x1E098E80)
                                               + (v116 ^ 0x60725127)
                                               - ((v116 ^ 0x60725127) & 0x36398FE0)) | ((v12 & 0xC0000040 ^ 0xA6910C41)
                                                                                      + (v12 & 0x844011E ^ 0x400001)
                                                                                      - 2) ^ 0x2E910C16;
  LODWORD(v6) = *(_DWORD *)&v55[4
                              * (((BYTE1(v104) ^ 0x5A)
                                + ((v104 >> 8) & 0x51 ^ 0xF26F5F01)
                                - ((BYTE1(v104) ^ 0x5A) & 0x51)) ^ 0xF26F5F90)];
  v118 = ((v114 & 0x66 ^ 0x65) - (v114 & 0x99) - 1611412840) ^ 0xDFC7DA89;
  v119 = ((2 * v118) | 0xD178EC9A) - v118 + 390302131;
  LODWORD(v31) = LODWORD(STACK[0x2A8]) ^ *(_DWORD *)&v60[4
                                                       * (((v114 & 0x99) - 913782273 + (v114 & 0x66 ^ 0x20202447)) ^ 0xE9A8EE22)] ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x86CB2FD8) + 1130731500) ^ (v6 - ((2 * v6 + 417728380) & 0x50AEBA38) + 1959420122) ^ (v117 + 1438953139) ^ v119 ^ (v12 - ((2 * v12) & 0xE42186AC) - 233782442) ^ ((v119 ^ 0xA888664D) - ((2 * (v119 ^ 0xA888664D) + 477983446) & 0x104F0F18) + 1986412791);
  LODWORD(v12) = *(_DWORD *)&v50[4 * (HIBYTE(v114) ^ 0xD1)];
  HIDWORD(v52) = v12 ^ 0x42A512;
  LODWORD(v52) = v12 ^ 0x17000000;
  v120 = *(_DWORD *)&v53[4 * (BYTE2(v110) ^ 8)];
  v121 = v120 - 2 * ((v120 + 758787054) & 0x7B66178F ^ v120 & 1) + 681591676;
  v122 = ((v104 ^ 0x14484038) - ((2 * (v104 ^ 0x14484038)) & 0x1081CC) + 1672173542) ^ LODWORD(STACK[0x384]);
  LODWORD(v38) = *(_DWORD *)&v55[4 * (BYTE1(v36) ^ 2)];
  v123 = LODWORD(STACK[0x2A4]) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x5541B186) - 1432299325) ^ (v38
                                                                                                - ((2 * v38 - 1729755268) & 0xC3F7BBEE)
                                                                                                + 779018677) ^ *(_DWORD *)&v60[4 * (v122 ^ 0x77E31787)] ^ v121 ^ v122 ^ ((v122 ^ 0x77E31797) - ((2 * (v122 ^ 0x77E31797) - 595758378) & 0xC56BCA86) + 1358208686) ^ (((4 * v121) ^ 0xED985E38) - ((2 * ((4 * v121) ^ 0xED985E38)) & 0xB6230180) + 1527873730);
  LODWORD(v36) = v25 ^ v10;
  LODWORD(v25) = *(_DWORD *)&v50[4 * (BYTE3(v25) ^ 0xB2)];
  HIDWORD(v52) = v25 ^ 0x42A512;
  LODWORD(v52) = v25 ^ 0x17000000;
  LODWORD(v12) = *(_DWORD *)&v53[4 * (BYTE2(v123) ^ 0x58)];
  LODWORD(v12) = v12 - ((2 * v12 + 1517574108) & 0xB9FDCB74) - 1975971416;
  LODWORD(v6) = *(_DWORD *)&v55[4 * (BYTE1(v31) ^ 0x36)];
  LODWORD(v10) = LODWORD(STACK[0x2AC]) ^ v40;
  v124 = (LOBYTE(STACK[0x2AC]) ^ v40);
  v125 = (v10 & 0x53 ^ 0xB7BB5D53) - (v10 & 0x53) + (v124 ^ 0x24);
  LODWORD(v10) = ((v124 ^ 0x62) + (v10 & 0xB2 ^ 0x272F7390) - ((v124 ^ 0x62) & 0xB2)) ^ 0xE52FE2F2;
  LODWORD(v8) = *(_DWORD *)&v60[4 * (((_DWORD)v10 - ((2 * (_DWORD)v10) & 0x800004AC) + 2024563286) ^ 0xBAACF30E)] ^ LODWORD(STACK[0x388]) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0xE82393E8) + 1947322868) ^ v12 ^ (v6 - ((2 * v6 - 1729755268) & 0xA98A4E3A) + 557329115) ^ (((4 * v12) ^ 0x73FB96E8) + 983155368 - 2 * (((4 * v12) ^ 0x73FB96E8) & 0x3A99C2BC ^ (4 * v12) & 0x14)) ^ v125 ^ ((v125 ^ 0xB7BB5D1D) - ((2 * (v125 ^ 0xB7BB5D1D) + 477983446) & 0x3A000116) + 188660214);
  LODWORD(v25) = *(_DWORD *)&v50[4 * (BYTE3(v40) ^ 0x5E)];
  HIDWORD(v52) = v25 ^ 0x42A512;
  LODWORD(v52) = v25 ^ 0x17000000;
  LODWORD(v12) = *(_DWORD *)&v53[4 * (BYTE2(v36) ^ 0xEC)];
  LODWORD(v12) = v12 - ((2 * v12 + 443832284) & 0x34B8B6C0) - 946436274;
  v126 = v31 ^ LODWORD(STACK[0x358]);
  v127 = *(_DWORD *)&v55[4 * (BYTE1(v123) ^ 0x83)];
  LODWORD(v25) = LODWORD(STACK[0x2A0]) ^ *(_DWORD *)&v60[4
                                                       * (((v126 ^ 0x2411029)
                                                         - ((2 * (v126 ^ 0x2411029)) & 0x82010E)
                                                         + 692800391) ^ 0x2B0A5BF6)] ^ v12 ^ ((v52 >> 24)
                                                                                            - ((2 * (v52 >> 24)) & 0x3B1B1E)
                                                                                            - 2145546865) ^ (v127 - ((2 * v127 - 1729755268) & 0xDE744D50) + 1001204326) ^ (((4 * v12) ^ 0x69716D80) - ((2 * ((4 * v12) ^ 0x69716D80)) & 0xDBA209F0) + 1842414840);
  LODWORD(v12) = *(_DWORD *)&v50[4 * (BYTE3(v31) ^ 0x60)];
  LODWORD(v10) = v25 ^ ((v126 ^ 0x48) + 2032066076 + ((2 * (v126 ^ 0x48) + 214) & 0x160 ^ 0xEBBFBFFF));
  HIDWORD(v52) = v12 ^ 0x42A512;
  LODWORD(v52) = v12 ^ 0x17000000;
  LOWORD(v12) = (BYTE2(v40) ^ 0x21) - ((2 * (BYTE2(v40) ^ 0x21)) & 0x1AE) - 9001;
  LODWORD(v12) = *(_DWORD *)&v53[4 * (((v12 & 0x255 ^ 0x279A801) + (v12 & 0x5AA ^ 0x1804048B) - 1) ^ 0x1A7DA834)];
  LODWORD(v12) = v12 - ((2 * v12 + 1517574108) & 0xCBAB71F0) - 1827674906;
  LODWORD(v6) = ((4 * v12) ^ 0x9756E3E0) + 1992062849 - 2 * (((4 * v12) ^ 0x9756E3E0) & 0x76BC779C ^ (4 * v12) & 0x1C);
  v128 = v123 ^ STACK[0x3A8];
  v129 = (((v128 ^ 0xFFFFFF26) - 1205346560) ^ 0xAAF5A3BB | 0xB396D80A)
       - (((v128 ^ 0xFFFFFF26) - 1205346560) ^ 0xAAF5A3BB | 0x4C6927F5)
       + 1281959925;
  v130 = *(_DWORD *)&v55[4 * (BYTE1(v36) ^ 0x23)];
  LODWORD(v25) = LODWORD(STACK[0x29C]) ^ *(_DWORD *)&v60[4
                                                       * ((-116444529 - (v128 ^ 0x72) + ((2 * (v128 ^ 0x72)) & 0xD8) + 4) ^ 0xF90F328F)] ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0xE8DBB6D6) - 194126997) ^ (v130 - ((2 * v130 + 417728380) & 0x32FF6544) + 1710405216) ^ v12 ^ v129 ^ ((v129 ^ 0xA144A5E9) - ((2 * (v129 ^ 0xA144A5E9) + 1551725270) & 0x7D7A5B42) + 754706188);
  LODWORD(v12) = *(_DWORD *)&v50[4 * (HIBYTE(v123) ^ 0x1E)];
  HIDWORD(v52) = v12 ^ 0x42A512;
  LODWORD(v52) = v12 ^ 0x17000000;
  v131 = v25 ^ v6;
  LODWORD(v25) = *(_DWORD *)&v53[4 * (BYTE2(v31) ^ 0x19)];
  LODWORD(v25) = v25 - ((2 * v25 + 443832284) & 0x20B57EB8) + 1033169738;
  LODWORD(v31) = *(_DWORD *)&v55[4
                               * ((((v40 >> 8) & 0xDB ^ 0xAFE9E3F6) - ((v40 >> 8) & 0x24)) ^ 0xAFE9E36B)];
  v132 = ((2 * (v36 ^ 0xA1)) & 0x128) - (v36 ^ 0xA1) + 51051;
  LODWORD(v25) = LODWORD(STACK[0x298]) ^ *(_DWORD *)&v60[4 * (v36 ^ 0xF2)] ^ ((v52 >> 24)
                                                                                             - ((2 * (v52 >> 24)) & 0x1E49765C)
                                                                                             - 1893418194) ^ v25 ^ (v31 - ((2 * v31 + 417728380) & 0x44341A7A) - 292744965) ^ v132 ^ (((4 * v25) ^ 0x416AFD70) - ((2 * ((4 * v25) ^ 0x416AFD70)) & 0xB856AF8) + 96646527) ^ ((v132 ^ 0xC728) - ((2 * (v132 ^ 0xC728) - 595758378) & 0xD87CC0D8) - 629335593);
  LODWORD(v12) = *(_DWORD *)&v50[4 * (BYTE3(v8) ^ 0x9E)];
  HIDWORD(v52) = v12 ^ 0x42A512;
  LODWORD(v52) = v12 ^ 0x17000000;
  LODWORD(v6) = *(_DWORD *)&v53[4 * (BYTE2(v25) ^ 0xB5)];
  LODWORD(v6) = v6 - 2 * ((v6 + 758787054) & 0x6E843EDF ^ v6 & 1) - 1682019636;
  v133 = (LOBYTE(STACK[0x354]) ^ v126) ^ 0x56 ^ v10;
  LODWORD(v40) = ((2 * (v133 ^ 0x3409A01F)) | 0xB99E766) - (v133 ^ 0x3409A01F) - 97317811;
  LODWORD(v36) = *(_DWORD *)&v55[4 * (BYTE1(v131) ^ 0x73)];
  v134 = (((((LODWORD(STACK[0x354]) ^ v126 ^ 0x54A21B56 ^ v10) & 0xF5) + (v133 ^ 0xFF)) | 0x909C1200)
        - ((v133 ^ 0xFF) & 0xF5)) ^ 0xCCAC0674;
  LODWORD(v31) = *(_DWORD *)&v50[4 * (BYTE3(v10) ^ 0x23)];
  LODWORD(v12) = LODWORD(STACK[0x294]) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x721AB036) + 957175835) ^ *(_DWORD *)&v60[4 * ((((2 * v134) | 0x4493FD86) - v134 + 1572208957) ^ 0xFE79EAB2)] ^ v6 ^ (((4 * v6) ^ 0xBA10FB78) - ((2 * ((4 * v6) ^ 0xBA10FB78)) & 0xB7DB1768) - 605189196) ^ v40 ^ (v36 - ((2 * v36 + 417728380) & 0x3D577D32) + 1797177943);
  HIDWORD(v52) = v31 ^ 0x42A512;
  LODWORD(v52) = v31 ^ 0x17000000;
  LODWORD(v40) = v12 ^ ((v40 ^ 0x31C553B3) - ((2 * (v40 ^ 0x31C553B3) + 477983446) & 0x1E99FAD4) - 41175339);
  LODWORD(v6) = (BYTE2(v8) ^ 0xA4E7FD9F | 0x27DD79D6) - (BYTE2(v8) ^ 0xA4E7FD9F | 0xD8228629) - 668826071;
  LODWORD(v6) = *(_DWORD *)&v53[4 * (((v6 & 0x13087B2 ^ 0x65406AA1) + (v6 & 0x820A004D) - 1) ^ 0xE67AEE31)];
  LODWORD(v6) = v6 - ((2 * v6 + 443832284) & 0x1730DAAA) - 1194157757;
  v135 = v131 ^ LODWORD(STACK[0x350]);
  v136 = *(_DWORD *)&v55[4 * (BYTE1(v25) ^ 0x57)];
  LODWORD(v38) = (-752928629 - (v135 ^ 0x9E | 0xD31F388B) + (v135 ^ 0x9E | 0x2CE0C774)) ^ 0xACE3C776;
  LODWORD(v31) = *(_DWORD *)&v50[4 * (HIBYTE(v131) ^ 0x51)];
  LODWORD(v12) = LODWORD(STACK[0x290]) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0xE34DFD0C) + 1906769542) ^ v6 ^ (v136 - ((2 * v136 - 1729755268) & 0x802B06DA) - 1937209557) ^ (((4 * v6) ^ 0x2E61B554) - ((2 * ((4 * v6) ^ 0x2E61B554)) & 0xF3CE6B08) - 102287995) ^ *(_DWORD *)&v60[4 * ((-1532702659 - (v38 | 0xA4A4D03D) + (v38 | 0x5B5B2FC2)) ^ 0xDB582F94)];
  HIDWORD(v52) = v31 ^ 0x42A512;
  LODWORD(v52) = v31 ^ 0x17000000;
  LODWORD(v36) = v12 ^ ((v135 ^ 0xDA) - ((2 * (v135 ^ 0xDA) + 209547990) & 0x81836BC) - 221522743);
  LODWORD(v12) = *(_DWORD *)&v53[4 * (BYTE2(v10) ^ 0x1B)];
  LODWORD(v12) = v12 - ((2 * v12 + 1517574108) & 0x69E849E6) - 500281119;
  v137 = (v25 ^ STACK[0x3B0]);
  v138 = ((v137 ^ 0x45) + ((v25 ^ STACK[0x3B0]) & 0x37 ^ 0x98B74932) - ((v137 ^ 0x45) & 0x37)) ^ 0x9065C53F;
  v139 = ((2 * v138) & 0x101097E) - v138 - 76141760;
  v140 = *(_DWORD *)&v55[4 * (BYTE1(v8) ^ 0xFB)];
  v141 = LODWORD(STACK[0x28C]) ^ *(_DWORD *)&v60[4
                                               * ((-511792693
                                                 - (v137 ^ 0x4024305B | 0xE17EA9CB)
                                                 + (v137 ^ 0x4024305B | 0x1E815634)) ^ 0x5EA56613)] ^ v12 ^ (v140 - ((2 * v140 - 1729755268) & 0xB8C6C562) + 685139567) ^ (((4 * v12) ^ 0xD3D093CC) - ((2 * ((4 * v12) ^ 0xD3D093CC)) & 0x85A446A8) - 1026415785) ^ v139 ^ ((v139 ^ 0xF3A4A761) - ((2 * (v139 ^ 0xF3A4A761) + 75330262) & 0x6FB8B52) - 239304940) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x75E4C314) + 988963210);
  LODWORD(v25) = *(_DWORD *)&v50[4 * (BYTE3(v25) ^ 0x6B)];
  HIDWORD(v52) = v25 ^ 0x42A512;
  LODWORD(v52) = v25 ^ 0x17000000;
  LODWORD(v12) = *(_DWORD *)&v53[4 * (BYTE2(v131) ^ 0xEF)];
  LODWORD(v12) = v12 - ((2 * v12 + 1517574108) & 0x47A3B2B2) + 1359742279;
  v142 = *(_DWORD *)&v55[4 * (BYTE1(v10) ^ 0xEA)];
  LOWORD(v10) = (v8 ^ 0x1B) - ((2 * (v8 ^ 0x1B)) & 0x112) + 1417;
  LODWORD(v10) = (v10 & 0x2CF ^ 0x81807247) + (v10 & 0x530 | 0x2000001) - 1;
  LODWORD(v31) = LODWORD(STACK[0x288]) ^ *(_DWORD *)&v60[4
                                                       * ((((2 * (v8 ^ 0x6A0D9ED)) | 0x87FD47E4)
                                                         - (v8 ^ 0x6A0D9ED)
                                                         + 1006722062) ^ 0xC55E7A01)] ^ ((v52 >> 24)
                                                                                       - ((2 * (v52 >> 24)) & 0x53C3BB38)
                                                                                       + 702668188) ^ (v142 - ((2 * v142 - 1729755268) & 0xBFA220B0) + 742659094) ^ v12 ^ v10 ^ ((v10 ^ 0x838077DB) - ((2 * (v10 ^ 0x838077DB) - 595758378) & 0xBC8024B2) - 864105532) ^ (((4 * v12) ^ 0x8F476564) - ((2 * ((4 * v12) ^ 0x8F476564)) & 0x79C7260) - 2083636944);
  LODWORD(v25) = *(_DWORD *)&v50[4 * (BYTE3(v40) ^ 0xAD)];
  HIDWORD(v52) = v25 ^ 0x42A512;
  LODWORD(v52) = v25 ^ 0x17000000;
  LODWORD(v12) = *(_DWORD *)&v53[4 * (BYTE2(v31) ^ 0x3C)];
  LODWORD(v12) = v12 - ((2 * v12 + 1517574108) & 0xBCF58A02) + 196407535;
  LODWORD(v6) = v135 ^ LODWORD(STACK[0x348]) ^ v36;
  LODWORD(v10) = (v6 ^ 0xD18D5055) - ((2 * (v6 ^ 0xD18D5055)) & 0xA0008112);
  LODWORD(v6) = (((2 * (v6 ^ 0xEA)) | 0x17DD5E7E) - (v6 ^ 0xEA) - 200191807) ^ 0x19EEBB6F;
  LODWORD(v6) = (((2 * v6) & 0xDDFB528) - v6 + 2031101291) ^ 0x94EFCECA;
  v143 = *(_DWORD *)&v55[4 * (BYTE1(v141) ^ 0x6C)];
  LODWORD(v10) = v10 - 30359415;
  LODWORD(v10) = LODWORD(STACK[0x284]) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x87F0F47E) - 1007125953) ^ v12 ^ (v143 - ((2 * v143 - 1729755268) & 0xD5C091B0) + 928205974) ^ (((4 * v12) ^ 0x79EB1404) - ((2 * ((4 * v12) ^ 0x79EB1404)) & 0xE0B069F8) + 1884828927) ^ v10 ^ ((v10 ^ 0x2FBD9028) - ((2 * (v10 ^ 0x2FBD9028) - 595758378) & 0xCB1D68C4) + 1405971917) ^ *(_DWORD *)&v60[4 * (v10 ^ ((v10 ^ 0xD0426FD7) - ((2 * (v10 ^ 0xD0426FD7) + 2) & 0xDA9BFEA6) - 313655468) ^ 0x81A6A7C9 ^ ((_DWORD)v6 - ((2 * (_DWORD)v6 + 34) & 0x86AD9164) + 1129760963)) + 64];
  LODWORD(v25) = *(_DWORD *)&v50[4 * (BYTE3(v36) ^ 0x8D)];
  HIDWORD(v52) = v25 ^ 0x42A512;
  LODWORD(v52) = v25 ^ 0x17000000;
  LODWORD(v12) = *(_DWORD *)&v53[4 * (BYTE2(v40) ^ 0xA3)];
  LODWORD(v12) = v12 - ((2 * v12 + 1517574108) & 0xB479424A) - 2022257389;
  LODWORD(v6) = (((2 * (BYTE1(v31) ^ 0x5F)) & 0xFFFFFFC7) - (BYTE1(v31) ^ 0x5F) + 1058742556) ^ 0x3F192DDF;
  LODWORD(v6) = *(_DWORD *)&v55[4
                              * ((-1006433992 - (v6 | 0xC4030938) + (v6 | 0x3BFCF6C7)) ^ 0x3BFEFA9B)];
  v144 = v141 ^ LODWORD(STACK[0x344]);
  v145 = ((v144 ^ 0x45) - ((2 * (v144 ^ 0x45)) & 0x16C) - 949983818) ^ 0xCA08E7F6;
  v146 = (v145 | 0x7D307B9E) - (v145 | 0x82CF8461) - 2100329375;
  LODWORD(v25) = LODWORD(STACK[0x280]) ^ *(_DWORD *)&v60[4
                                                       * ((1966955548
                                                         - (v144 ^ 0x80050626 | 0x753D5C1C)
                                                         + (v144 ^ 0x80050626 | 0x8AC2A3E3)) ^ 0xAC7A5C1)] ^ v12 ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x62B64338) + 828055964) ^ (((4 * v12) ^ 0x68F28494) - ((2 * ((4 * v12) ^ 0x68F28494)) & 0x7FE94070) + 1072996408) ^ v146 ^ ((v146 ^ 0x7058F98F) - ((2 * (v146 ^ 0x7058F98F) + 1551725270) & 0x51EB007A) - 1758185048);
  LODWORD(v12) = v6 - ((2 * v6 - 1729755268) & 0x8EB781B8) + 332317850;
  LODWORD(v6) = *(_DWORD *)&v50[4 * (HIBYTE(v141) ^ 0x58)];
  v147 = v25 ^ v12;
  HIDWORD(v52) = v6 ^ 0x42A512;
  LODWORD(v52) = v6 ^ 0x17000000;
  LODWORD(v12) = *(_DWORD *)&v53[4 * (BYTE2(v36) ^ 0xB3)];
  LODWORD(v12) = v12 - ((2 * v12 + 175396828) & 0xBB390B2) + 856945735;
  LODWORD(v6) = ((4 * v12) ^ 0x17672164) - 2 * (((4 * v12) ^ 0x17672164) & 0x716FA86C ^ (4 * v12) & 8);
  v148 = v31 ^ STACK[0x3B8];
  v149 = ((2 * (((v148 ^ 0xFFFFFF13) - 1503644160) ^ 0x36E395D3)) & 0x64128)
       - (((v148 ^ 0xFFFFFF13) - 1503644160) ^ 0x36E395D3)
       - 1296247445;
  v150 = (BYTE1(v40) ^ 0xF5) + ((v40 >> 8) & 0xE7 ^ 0x5E2E4102) - ((BYTE1(v40) ^ 0xF5) & 0xFFFFFFE7);
  v151 = *(_DWORD *)&v55[4 * (((v150 & 0x2DDE ^ 0x30FC2113) + (v150 & 0x5221) - 1) ^ 0x30FC6073)];
  LODWORD(v25) = LODWORD(STACK[0x27C]) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x91B3EF66) + 1222244275) ^ v12 ^ *(_DWORD *)&v60[4 * ((-1545963376 - (v148 ^ 0x36E550D9 | 0xA3DA7890) + (v148 ^ 0x36E550D9 | 0x5C25876F)) ^ 0x6AC0D776)] ^ (v151 - ((2 * v151 + 15075196) & 0x1FF5950) + 1299361894) ^ v149 ^ ((v149 ^ 0x223F757B) - ((2 * (v149 ^ 0x223F757B) - 595758378) & 0xB3B8D628) - 937745281);
  LODWORD(v12) = *(_DWORD *)&v50[4 * (BYTE3(v31) ^ 0xE1)];
  LODWORD(v50) = v25 ^ (v6 - 244340636);
  HIDWORD(v52) = v12 ^ 0x42A512;
  LODWORD(v52) = v12 ^ 0x17000000;
  LODWORD(v12) = *(_DWORD *)&v53[4
                               * ((((2 * (BYTE2(v141) ^ 0x42C7)) & 0x1C8) - (BYTE2(v141) ^ 0x42C7) + 73888283) ^ 0x46730E5)];
  LODWORD(v53) = 5 * v12;
  LODWORD(v12) = ((8 * v12 - 2 * ((8 * v12 + 164716400) & 0xCBCD448 ^ (8 * v12) & 8) - 158452815) ^ 0x8CBCD440) & ((2 * v12 - ((4 * v12 + 887664568) & 0x32466C48) + 1939312129) ^ 0x19233625);
  LODWORD(v12) = (v12 ^ 0x81070203) + (_DWORD)v53 - ((2 * v12) & 0xFDF1FBF8);
  LODWORD(v6) = *(_DWORD *)&v55[4 * (BYTE1(v36) ^ 0x7C)];
  LODWORD(v31) = v40 ^ LODWORD(STACK[0x34C]);
  LODWORD(v53) = (v31 ^ 0x80922DA5 | 0xEC14F80A) - (v31 ^ 0x80922DA5 | 0x13EB07F5);
  LODWORD(v25) = LODWORD(STACK[0x278]) ^ *(_DWORD *)&v60[4
                                                       * ((2015177741
                                                         - (v31 ^ 0x801478FB | 0x781D2C0D)
                                                         + (v31 ^ 0x801478FB | 0x87E2D3F2)) ^ 0x7F6AB91)] ^ (v6 - ((2 * v6 - 1729755268) & 0xB1104FD6) + 620440489) ^ ((_DWORD)v53 + 334170101) ^ ((v52 >> 24) - ((2 * (v52 >> 24)) & 0x383E29EA) - 1675684619) ^ ((((_DWORD)v53 + 334170101) ^ 0x6C86D527) - ((2 * (((_DWORD)v53 + 334170101) ^ 0x6C86D527) - 595758378) & 0xF6755A0A) + 1769563760) ^ (v12 - ((2 * v12 + 37204806) & 0xBB148B4) + 1727299069);
  v152 = (v50 ^ 0x84) - 1827922304 - ((2 * (v50 ^ 0x84)) & 0x1CA);
  v153 = (char *)*(&off_10112C750 + SLODWORD(STACK[0x24C])) - 1958531607;
  LODWORD(v60) = *(_DWORD *)&v153[4 * (BYTE3(v10) ^ 0x63)];
  LODWORD(v36) = *(_DWORD *)&v153[4 * (HIBYTE(v147) ^ 0x7E)];
  LODWORD(v53) = *(_DWORD *)&v153[4 * ((v50 >> 24) ^ 0xB3)];
  v154 = *(_DWORD *)&v153[4 * (BYTE3(v25) ^ 0x99)];
  v155 = ((2 * ((v154 >> 2) & 0x2783BB69 ^ 0x3682000E)) & 0x60035496) - ((v154 >> 2) & 0x2783BB69 ^ 0x3682000E);
  LODWORD(v10) = v10 ^ 0xCC5028BF;
  LODWORD(v21) = STACK[0x4BC];
  v156 = (char *)*(&off_10112C750 + (LODWORD(STACK[0x4BC]) ^ 0x71118450)) - 715970891;
  v157 = *(_DWORD *)&v156[4 * (BYTE2(v25) ^ 0xC5)];
  LODWORD(STACK[0x3F0]) = *(_DWORD *)&v156[4 * (BYTE2(v10) ^ 0xEB)];
  LODWORD(v55) = *(_DWORD *)&v156[4 * (BYTE2(v147) ^ 0x2A)];
  LODWORD(v153) = *(_DWORD *)&v156[4
                                 * (((BYTE2(v50) ^ 0x28000888)
                                   + ((v50 >> 16) & 0x1C ^ 0x10B1C514)
                                   - ((BYTE2(v50) ^ 0x28000888) & 0x800001C)) ^ 0x30B1CD17)];
  LODWORD(v156) = ((v147 >> 8) & 0x33 ^ 0x36AC5B32) + ((v147 >> 8) & 0xCC ^ 9) - 1;
  v158 = STACK[0x3F4];
  v159 = (char *)*(&off_10112C750 + LODWORD(STACK[0x3F4]) + 2367) - 1323912499;
  LODWORD(v50) = *(_DWORD *)&v159[4 * (BYTE1(v50) ^ 0x2A)];
  LODWORD(v40) = *(_DWORD *)&v159[4 * (BYTE1(v25) ^ 0xA0)];
  v160 = *(_DWORD *)&v159[4 * (BYTE1(v10) ^ 0x82)];
  LODWORD(v156) = *(_DWORD *)&v159[4
                                 * (((v156 & 0x2406F6 ^ 0x490222C4)
                                   + (v156 ^ 0x6F5DD33)
                                   - ((v156 ^ 0x6F5DD33) & 0x6F6)) ^ 0x797FA015)];
  HIDWORD(v52) = v156 ^ 0x12;
  LODWORD(v52) = v156 ^ 0xCDD0F3E0;
  LODWORD(v159) = (v52 >> 5) + 1128107673 - ((2 * (v52 >> 5)) & 0x867B1D32);
  LODWORD(v156) = (8
                 * ((v159 ^ 0x433D8E99) * (v159 ^ 0x433D8E99)
                  - ((2 * (v159 ^ 0x433D8E99) * (v159 ^ 0x433D8E99)) & 0x12C3F954))
                 - 888150704) ^ 0xCB0FE550;
  LODWORD(v38) = (_DWORD)v156 - ((2 * (_DWORD)v156) & 0xCA8B6350);
  v161 = (char *)*(&off_10112C750 + LODWORD(STACK[0x3F4]) + 3938) - 118193398;
  LODWORD(v156) = *(_DWORD *)&v161[4 * (LODWORD(STACK[0x274]) ^ v147)];
  v162 = *(_DWORD *)&v161[4 * ((v152 + 101) ^ 0x930C1E80)];
  v163 = *(_DWORD *)&v161[4 * (v25 ^ 0x47)];
  LODWORD(v153) = LODWORD(STACK[0x264]) ^ LODWORD(STACK[0x494]) ^ v153 ^ v154;
  v164 = STACK[0x3C0];
  LODWORD(v10) = v153 ^ *(_DWORD *)&v161[4 * (LODWORD(STACK[0x340]) ^ v10 ^ 0x1E)] ^ (v155 - 810937052) ^ v159 ^ (v38 + 1699066281);
  v165 = (char *)*(&off_10112C750 + (int)(v21 ^ 0x71118B46)) - 635436787;
  *(_BYTE *)(((LODWORD(STACK[0x40C]) + 60431395 - (STACK[0x408] & 0x7343846)) ^ 0x7CFBD7FDF261869CLL)
           + STACK[0x3C0]
           + ((2 * ((LODWORD(STACK[0x40C]) + 60431395 - (STACK[0x408] & 0x7343846)) ^ 0x39A1C23u)) & 0x1E3F7357ELL)
           - 0x7CFBD7FDF1FB9ABFLL) = v165[BYTE3(v10) ^ 0x69] ^ BYTE3(v10) ^ 0xC8;
  HIDWORD(v52) = v50 ^ 0x12;
  LODWORD(v52) = v50 ^ 0xCDD0F3E0;
  LODWORD(v25) = (v52 >> 5) - 1933619597 - ((2 * (v52 >> 5)) & 0x197E9CE6);
  LODWORD(v50) = 8
               * ((v25 ^ 0x8CBF4E73) * (v25 ^ 0x8CBF4E73) - ((2 * (v25 ^ 0x8CBF4E73) * (v25 ^ 0x8CBF4E73)) & 0x1F4643A2))
               - 48689528;
  LODWORD(v50) = LODWORD(STACK[0x26C]) ^ LODWORD(STACK[0x498]) ^ v60 ^ v157 ^ v156 ^ v25 ^ (((v60 >> 2) & 0x2783BB69 ^ 0x896611C) - ((2 * ((v60 >> 2) & 0x2783BB69 ^ 0x896611C)) & 0xD0B4290) + 384672072) ^ ((v50 ^ 0xFD190E88) + 74508774 - 2 * ((v50 ^ 0xFD190E88) & 0x470E9F0 ^ v50 & 0x10));
  v166 = (char *)*(&off_10112C750 + v158 + 4048) - 350903202;
  *(_BYTE *)(STACK[0x3F8] - 0x3DF4763F3FFBDFEFLL) = v166[(((2 * (BYTE1(v50) ^ 0xCA)) | 0xB4C99682)
                                                        - (BYTE1(v50) ^ 0xCA)
                                                        - 1516555073) ^ 0x5A64CB6ALL] ^ BYTE1(v50) ^ 0x90;
  LODWORD(v25) = ((((v50 & 0xAC) + (v50 ^ 0xBD)) | 0xA9BB5400)
                - ((v50 ^ 0xBD) & 0xAC)) ^ 0x18D9E065;
  v167 = (char *)*(&off_10112C750 + (int)(v21 ^ 0x711183DC)) - 2092161103;
  *(_BYTE *)(STACK[0x458] + 0x1EEA082C2980E001) = v50 ^ v167[(-814092138
                                                                               - (v25 | 0xCF79F096)
                                                                               + (v25 | 0x30860F69)) ^ 0x81E4BBFDLL] ^ 0x80;
  LODWORD(v25) = (((2 * (BYTE2(v10) ^ 0x67)) & 0x1D4) - (BYTE2(v10) ^ 0x67) + 1689222421) ^ 0x65B77CB5;
  v168 = (v25 - ((2 * (_DWORD)v25) & 0x2100D24) + 1437355666) ^ 0x54B44F80;
  v169 = (char *)*(&off_10112C750 + (int)(v21 ^ 0x711180D8)) - 1608195283;
  *(_BYTE *)(STACK[0x440] - 0x7BBFA6FDFDFE5EFALL) = v169[v168] ^ BYTE2(v10) ^ 0x57;
  HIDWORD(v52) = v160 ^ 0x12;
  LODWORD(v52) = v160 ^ 0xCDD0F3E0;
  LODWORD(v168) = (v52 >> 5) + 1111769768 - ((2 * (v52 >> 5)) & 0x84888550);
  LODWORD(v156) = (8
                 * ((v168 ^ 0x424442A8) * (v168 ^ 0x424442A8)
                  - ((2 * (v168 ^ 0x424442A8) * (v168 ^ 0x424442A8)) & 0x179644CC))
                 + 1582895920) ^ 0x5E591330;
  LODWORD(v53) = LODWORD(STACK[0x268]) ^ LODWORD(STACK[0x49C]) ^ v53 ^ (v53 >> 2) & 0x2783BB69 ^ v55 ^ v163 ^ v168 ^ ((_DWORD)v156 - ((2 * (_DWORD)v156) & 0x287DA3B0) - 1807822369);
  *(_BYTE *)(STACK[0x410] - 0x72EE926FE2DFF37DLL) = v165[(v53 >> 24) ^ 0x9BLL] ^ BYTE3(v53) ^ 0x70;
  LOWORD(v168) = 2 * ((BYTE1(v10) ^ 0x82) & 0x7F) - (BYTE1(v10) ^ 0x82) - 13696;
  *(_BYTE *)(STACK[0x400] - 0x77FDDF7797AEAAFFLL) = v166[((v168 & 0x1A9 ^ 0xA384B929) + (v168 & 0x256 ^ 0x44000201) - 1) ^ 0xE784B966] ^ BYTE1(v10) ^ 0x76;
  HIDWORD(v52) = v40 ^ 0x12;
  LODWORD(v52) = v40 ^ 0xCDD0F3E0;
  LODWORD(v168) = (v52 >> 5) + 759289941 - ((2 * (v52 >> 5)) & 0x5A83B0AA);
  LODWORD(v159) = (8
                 * ((v168 ^ 0x2D41D855) * (v168 ^ 0x2D41D855)
                  - ((2 * (v168 ^ 0x2D41D855) * (v168 ^ 0x2D41D855)) & 0x71E9AE4))
                 - 1669698672) ^ 0x9C7A6B90;
  LODWORD(v31) = LODWORD(STACK[0x270]) ^ LODWORD(STACK[0x4A0]) ^ v36 ^ v162 ^ LODWORD(STACK[0x3F0]) ^ ((((v36 >> 2) & 0x2783BB69 ^ 0xE44807B8) & 0x410A97A0 ^ LODWORD(STACK[0x248])) + (((v36 >> 2) & 0x2783BB69 ^ 0xE44807B8) & 0x26812849) - 1) ^ v168 ^ 0x24802009 ^ ((_DWORD)v159 - ((2 * (_DWORD)v159) & 0xD698F980) + 1800174786);
  *(_BYTE *)(STACK[0x4B0] + 0x488411322A801) = BYTE3(v31) ^ 0xB ^ v165[BYTE3(v31) ^ 0xDELL];
  *(_BYTE *)(STACK[0x448] - 0x6DFC2D776DD7F6BFLL) = v31 ^ 9 ^ v167[(((2 * (v31 ^ 0x82009492)) | 0xBF43FBCA)
                                                                  - (v31 ^ 0x82009492)
                                                                  - 1604451813) ^ 0xDDA169EALL];
  *(_BYTE *)(STACK[0x418] + 0x650A206212021001) = BYTE1(v31) ^ v166[(((v31 >> 8) & 0xC9 ^ 0xA822A108)
                                                                     + ((v31 >> 8) & 0x36 ^ 0x44011)
                                                                     - 1) ^ 0xA826E1B5] ^ 0xE1;
  LODWORD(v156) = (((v53 >> 16) & 0x51) + ((v53 >> 16) & 0xAE ^ 0x6DEA0C0B) - 1) ^ 0x65E98CC6;
  *(_BYTE *)(((LODWORD(STACK[0x42C]) - 731444076 - (STACK[0x430] & 0xA8CE1928)) ^ 0xD8EC96F78FAED86BLL)
           + ((2 * ((LODWORD(STACK[0x42C]) - 731444076 - (STACK[0x430] & 0xA8CE1928)) ^ 0xD4670C94)) & 0xB793A9FE)
           + v164
           + 0x27136908A4362B01) = BYTE2(v53) ^ ~v169[(v156
                                                       - ((2 * (_DWORD)v156) & 0x10070FBC)
                                                       - 1699229730) ^ 0x92B44FA3];
  LODWORD(v156) = LODWORD(STACK[0x46C]) - 1165875960 + (STACK[0x468] & 0x75044A00 ^ 0xFFFFFFEF);
  LODWORD(v55) = (((2 * (v10 ^ 0x4B)) & 0x10) - (v10 ^ 0x4B) - 837493769) ^ 0xAE9096F1;
  *(_BYTE *)(((LODWORD(STACK[0x428]) + 158707599 - (STACK[0x424] & 0x12EB5F20)) ^ 0x1EFAEE153F48D266)
           + ((2 * ((LODWORD(STACK[0x428]) + 158707599 - (STACK[0x424] & 0x12EB5F20)) ^ 0x975AF91)) & 0x6C7AFBEE)
           + v164
           - 0x1EFAEE15363D7DF7) = v10 ^ 0x6C ^ v167[(v55 - ((2 * (_DWORD)v55) & 0x1081A08) - 1964077820) ^ 0xEA6AC0EALL];
  LODWORD(v168) = ((v53 ^ 0x5E)
                 + (v53 & 0x2B ^ 0xA2F89D21)
                 - ((v53 ^ 0x5E) & 0x2B)) ^ 0xE8F11C6A;
  *(_BYTE *)((((_DWORD)v156 + 1) ^ 0xBFFFFBFF452DDA5BLL)
           + v164
           + ((2 * (((_DWORD)v156 + 1) ^ 0xBA822508)) & 0x1FF5FFEA6)
           + 0x40000400005000ADLL) = v53 ^ 0x56 ^ v167[(-1570723006
                                                                       - (v168 | 0xA260AB42)
                                                                       + (v168 | 0x5D9F54BD)) ^ 0x1796D533];
  LODWORD(v156) = ((BYTE1(v53) ^ 0xB5) - ((2 * (BYTE1(v53) ^ 0xB5)) & 0x168) - 60530252) ^ 0xE5466FC4;
  *(_BYTE *)(((LODWORD(STACK[0x484]) - 1251363124 + (STACK[0x478] & 0x6AD36D88 ^ 0xFFFFFFEF) + 1) ^ 0xAFCFFF3F989ACB22)
           + ((2 * ((LODWORD(STACK[0x484]) - 1251363124 + (STACK[0x478] & 0x6AD36D88 ^ 0xFFFFFFEF) + 1) ^ 0xB569B6CC)) & 0x5BE6FBDC)
           + v164
           + 0x503000C0D20C8212) = BYTE1(v53) ^ 0x79 ^ v166[(((2 * (_DWORD)v156) & 0x10402806)
                                                             - v156
                                                             - 204231684) ^ 0xEAF1A55ALL];
  *(_BYTE *)(((LODWORD(STACK[0x438]) - 1489181351 + (STACK[0x434] & 0x4E79CAB0 ^ 0xFFFFFFFD) + 1) ^ 0x2FFFEB7178455BA4)
           + v164
           + ((2 * ((LODWORD(STACK[0x438]) - 1489181351 + (STACK[0x434] & 0x4E79CAB0 ^ 0xFFFFFFFD) + 1) ^ 0xA73CE559)) & 0x1BEF37DFALL)
           - 0x2FFFEB71DF79BEFDLL) = BYTE2(v50) ^ 0x3A ^ v169[(((v50 >> 16) & 0xCD ^ 0x4411DAC5)
                                                             + ((v50 >> 16) & 0x32 ^ 0x80080411)
                                                             - 1) ^ 0xC419DE9ALL];
  *(_BYTE *)(STACK[0x470] - 0x6D3FFDE9EFFFF6EFLL) = BYTE2(v31) ^ v169[(((2 * (BYTE2(v31) ^ 0x3244B096)) | 0x79D6C1D8)
                                                                     - (BYTE2(v31) ^ 0x3244B096u)
                                                                     - 1022058732) ^ 0xEAFD0F1] ^ 3;
  *(_BYTE *)(STACK[0x4A8] - 0x7FEBFFBFBCFD7F7ELL) = BYTE3(v50) ^ 0xA8 ^ v165[(v50 >> 24) ^ 0xD9];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3D8]
                                        + 8
                                        * ((52675
                                          * (((STACK[0x488]
                                             + 1185709877
                                             - 2
                                             * ((STACK[0x488] + 16) & STACK[0x464] ^ STACK[0x454] & 0xA)) ^ 0x46AC7F25) < LODWORD(STACK[0x30C]))) ^ ((int)v21 - 1896948484)))
                            - 8))();
}

uint64_t sub_1000C6530@<X0>(int a1@<W8>)
{
  uint64_t v1;

  LODWORD(STACK[0x49C]) = LODWORD(STACK[0x3EC]) ^ 0x7A20EE73;
  LODWORD(STACK[0x498]) = LODWORD(STACK[0x3E0]) ^ 0xB4846408;
  LODWORD(STACK[0x494]) = LODWORD(STACK[0x3E4]) ^ 0x2A99D9C7;
  LODWORD(STACK[0x4A0]) = LODWORD(STACK[0x3E8]) ^ 0x14B79D47;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 + 3096)) - 12))();
}

uint64_t sub_1000C6590()
{
  uint64_t v0;
  int v1;

  v1 = STACK[0x240] - ((STACK[0x230] + 1992699350) & 0x495F502E) - 490365970;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (int)(STACK[0x3D0] | (42
                                                              * (((2 * v1) & 0xFA3DAEF8 ^ 0x481D0028)
                                                               + (v1 ^ 0xD9B17F6B)
                                                               + 2078403468 != 2030093064))))
                            - 12))();
}

uint64_t sub_1000C6668(int a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((v2 + 1896947374) ^ 0x71118C3F) * ((a2 + a1 + 48310404) < 8)) ^ v2))
                            - 8))();
}

uint64_t sub_1000C6714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                       + 8
                                                                       * (((v7 + 20526)
                                                                         * ((v6 + a6 - 16) > 0xFFFFFFEF)) ^ v7)))(a1, a2, a3, a3);
}

uint64_t sub_1000C6754(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _BOOL4 v23;
  int v26;

  v12 = (a2 + a1 + v5);
  v13 = v12 + a5 + v10 - 1896975366;
  v14 = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)v5) & 0xF;
  v15 = v14 - v12;
  v16 = v7 + v15;
  v17 = v7 + v14 + 1;
  v18 = v8 + v15;
  v19 = v8 + v14 + 1;
  v20 = v15 + ((v9 + 133744710) & 0xF807ABFF) + v6 - 35829;
  v21 = v14 + v6 + 3;
  v23 = v17 > v10 && v16 < v13;
  if (v19 > v10 && v18 < v13)
    v23 = 1;
  v26 = v21 > v10 && v20 < v13 || v23;
  return (*(uint64_t (**)(void))(v11 + 8 * ((116 * (v26 ^ 1)) ^ v9)))();
}

uint64_t sub_1000C67FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  v9 = (uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a6 ^ (2036 * (v7 < 0x10)))) - 14875 * (a6 ^ 0x8BF5u) + 29746);
  LODWORD(STACK[0x4BC]) = v6;
  return v9();
}

uint64_t sub_1000C6844(__n128 a1, uint64_t a2, uint64_t a3, char a4, int a5)
{
  __n128 v5;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;

  v5.n128_u64[0] = (a4 + 5) & 0xF;
  v5.n128_u64[1] = (a4 + 4) & 0xF;
  v6.n128_u64[0] = (a4 + 3) & 0xF;
  v6.n128_u64[1] = (a4 + 2) & 0xF;
  v7.n128_u64[0] = (a4 + 1) & 0xF;
  v7.n128_u64[1] = a4 & 0xF;
  v8.n128_u64[0] = (a4 - 1) & 0xF;
  v8.n128_u64[1] = (a4 + 14) & 0xF;
  v9.n128_u64[0] = (a4 + 13) & 0xF;
  v9.n128_u64[1] = (a4 + 12) & 0xF;
  v10.n128_u64[0] = (a4 + 11) & 0xF;
  v10.n128_u64[1] = (a4 + 10) & 0xF;
  v11.n128_u64[0] = (a4 + 9) & 0xF;
  v11.n128_u64[1] = (a4 + 8) & 0xF;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(STACK[0x3D8] + 8 * a5)
                                                                                                 - 4))(a1, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1000C6940(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  int8x16_t v23;
  int8x16_t v24;
  int8x16_t v25;
  uint64_t v26;
  int8x16_t v28;
  int8x16_t v29;
  int8x16_t v30;

  v26 = a16 & v20;
  v28.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v23).u64[0];
  v28.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v23).u64[0];
  v29 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a13 + a16), *(int8x16_t *)(v17 + v26 - 15)), veorq_s8(*(int8x16_t *)(v18 + v26 - 15), *(int8x16_t *)(v26 + v16 - 13))));
  v30 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v29, v29, 8uLL), v25), vmulq_s8(v28, v24)));
  *(int8x16_t *)(a13 + a16) = vextq_s8(v30, v30, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v22 + 8 * (((v19 == 0) * v21) ^ a12)) - 4))();
}

uint64_t sub_1000C69C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8 + 8 * (((((v7 == v6) ^ (a6 + 1)) & 1) * (a6 ^ 0x73EC)) ^ a6)))();
}

uint64_t sub_1000C69FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  char v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v8
                                                                      + 8
                                                                      * ((21037
                                                                        * ((v7 & 8) != (((a6 ^ 0x5EFD) + 23336) ^ 0x72D9))) ^ a6 ^ 0x5EFD)))(a1, a2, a3, (a3 - v6));
}

uint64_t sub_1000C6A50(int a1, int a2, uint64_t a3, double a4, __n128 a5, __n128 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  int v11;
  int v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD, _QWORD, uint64_t, _QWORD, __n128, __n128, __n128);

  LODWORD(STACK[0x4B0]) = v12;
  v14 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD, __n128, __n128, __n128))(*(_QWORD *)(v13 + 8 * a11)
                                                                                        - ((a11 - 6) ^ 0x72DBLL));
  LODWORD(STACK[0x4A8]) = v12 & 0xFFFFFFF8;
  a5.n128_u16[0] = -11823;
  a5.n128_u8[2] = -47;
  a5.n128_u8[3] = -47;
  a5.n128_u8[4] = -47;
  a5.n128_u8[5] = -47;
  a5.n128_u8[6] = -47;
  a5.n128_u8[7] = -47;
  a6.n128_u16[0] = 2056;
  a6.n128_u8[2] = 8;
  a6.n128_u8[3] = 8;
  a6.n128_u8[4] = 8;
  a6.n128_u8[5] = 8;
  a6.n128_u8[6] = 8;
  a6.n128_u8[7] = 8;
  return v14((v11 + a2 + a1 + 2), (v11 + a2 + a1 + 3), a3, a3 - (v12 & 0xFFFFFFF8), (__n128)xmmword_100DF7490, a5, a6);
}

uint64_t sub_1000C6AC0(char a1, char a2, char a3, int8x16_t a4, int8x8_t a5, int8x8_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, int a11)
{
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  char v17;
  char v18;
  int v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  int8x16x4_t v24;

  v20 = a3 + v15 + 8;
  v21 = (v19 + v15 + 8);
  v24.val[0].i64[0] = ((_BYTE)v19 + (_BYTE)v15 + 8) & 0xF;
  v22 = STACK[0x3D8];
  v24.val[0].i64[1] = (v18 + (_BYTE)v15 + 8) & 0xF;
  v24.val[1].i64[0] = (v17 + (_BYTE)v15 + 8) & 0xF;
  v24.val[1].i64[1] = (v20 + (v11 ^ 0x55)) & 0xF;
  v24.val[2].i64[0] = (a2 + (_BYTE)v15 + 8) & 0xF;
  v24.val[2].i64[1] = (a1 + (_BYTE)v15 + 8) & 0xF;
  v24.val[3].i64[0] = (v16 + (_BYTE)v15 + 8) & 0xF;
  v24.val[3].i64[1] = v20 & 0xF;
  *(int8x8_t *)(a10 + v21) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a10 + v21), *(int8x8_t *)(v13 + (v21 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v14 + (v21 & 0xF) - 7), *(int8x8_t *)((v21 & 0xF) + v12 - 5)))), a6), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v24, a4), a5)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v22 + 8 * (((2 * (a11 != v15)) | (8 * (a11 != v15))) ^ a8)) - 8))();
}

uint64_t sub_1000C6BB8()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v0 + 1359016020) | 0x20108402) ^ ((v0 + 16803926) | 0x70110C00) ^ 0x5EFD)
                                * (LODWORD(STACK[0x4B0]) == LODWORD(STACK[0x4A8]))) ^ v0)))();
}

uint64_t sub_1000C6C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5 + 8 * (a5 - 1896956643)))();
}

uint64_t sub_1000C6C40@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v9 + (a1 + v6)) ^= *(_BYTE *)(v4 + ((a1 + v6) & 0xFLL)) ^ *(_BYTE *)(v5
                                                                                              + (((_BYTE)a1 + (_BYTE)v6) & 0xF)) ^ *(_BYTE *)((((_BYTE)a1 + (_BYTE)v6) & 0xF) + v3 + 2) ^ (((a1 + v6) & 0xF) * v7) ^ 8;
  return (*(uint64_t (**)(void))(v10 + 8 * (((a1 - 1 == a2) * v8) ^ v2)))();
}

void sub_1000C6C94()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1293188152)
    v1 = 2134650450;
  else
    v1 = 2134608426;
  *(_DWORD *)(v2 + 40) = v1;
}

void sub_1000C6CF8(uint64_t a1)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v2 = (*(_QWORD *)(a1 + 32) ^ 0x28F5FBAF5F9C7F7ELL)
     - 0x28F5FBAED42AB7FCLL
     + ((2 * *(_QWORD *)(a1 + 32)) & 0x51EBF75EBF38FEFCLL);
  v3 = (*(_QWORD *)(a1 + 8) ^ 0x74BF3FDFFD7FB3D6)
     - 0x74BF3FDF720DEC54
     + ((2 * *(_QWORD *)(a1 + 8)) & 0xE97E7FBFFAFF67ACLL);
  v4 = v2 < 0x8B71C782;
  v5 = v2 > v3;
  if (v4 != v3 < 0x8B71C782)
    v5 = v4;
  v1 = *(_DWORD *)a1 + 1167911989 * ((a1 & 0x26172629 | ~(a1 | 0x26172629)) ^ 0xF7420645);
  __asm { BR              X14 }
}

uint64_t sub_1000C6F0C(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((4340
                                                        * ((v3 ^ 0x4515948)
                                                         + 1124655975
                                                         + (a2 & 0xAEAB7DFE ^ 0xA6094D6E) != ((((v2 - 1742567323) & 0x67DCFCFE)
                                                                                             + 11043) ^ 0x1A5EE93B))) ^ (v2 - 31388)))
                                          - 4))(1488483907);
}

uint64_t sub_1000C6FA4@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  _BOOL4 v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;

  v11 = v7 < v6;
  *(_BYTE *)(a2 + (a1 - 1488483907)) = (*(_BYTE *)(v2 + (a1 - 1488483907)) - 34) ^ *(_BYTE *)(v5 + (((_BYTE)a1 - 67) & 0xF)) ^ *(_BYTE *)((((_BYTE)a1 - 67) & 0xF) + v4 + 2) ^ *(_BYTE *)(((v9 - 5425) | 0x4054) + (unint64_t)(((_BYTE)a1 - 67) & 0xF) + v3 - 19289) ^ (-15 * ((a1 - 67) & 0xF));
  v12 = a1 - 1046074332;
  v13 = (a1 + 1);
  v14 = v11 ^ (v12 < v6);
  v15 = v12 < v7;
  if (!v14)
    v11 = v15;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10 + 8 * ((v11 * v8) ^ v9)) - 4))(v13);
}

uint64_t sub_1000C7048(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((v2 - 10176) ^ (95
                                                         * ((a2 & 0xEBBFEFEE ^ 0xA209CF6E)
                                                          + (v3 ^ 0xA6DB1040)
                                                          - 536876788 == 1440735491))))
                            - (((177 * (v2 ^ 0x9ABB) - 15107) | 0x6B81u) ^ 0x7BD7)))();
}

uint64_t sub_1000C70D4(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((((a7 - 1759502557) & 0x68DFFFD7 ^ 0x9D16)
                                          * ((a2 + a1 - 1977612279) > 7)) ^ a7))
                            - ((a7 - 12179) ^ 0x4C44)))();
}

uint64_t sub_1000C7138(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((49
                                          * (a3 + a8 - 16 < ((a5 + 1084011415) & 0xBF637F35 ^ 0xFFFF1A0F)
                                                          + ((a5 - 12674) | 0x8010))) ^ a5))
                            - 4))();
}

uint64_t sub_1000C7198@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v16;
  unint64_t v17;
  int v19;

  v10 = (a2 + a1 + a3) + a5;
  v11 = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3) & 0xF;
  v12 = v11 + v8 - v10;
  v13 = (v11 | v7) - v10;
  v14 = (v11 | v6) - v10;
  v16 = (unint64_t)(v5 - a5) > 0xF && v12 > 0xF && v13 + 2 >= (unint64_t)(a4 + 7105) - 39622;
  v17 = v14 + (((a4 - 31573) | 0x8420u) ^ 0x87E4);
  v19 = v16 && v17 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((14 * v19) ^ a4)) - 8))();
}

uint64_t sub_1000C7228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9
                                                                        + 8
                                                                        * (int)(((((a8 + 357151647) & 0xEAB5FFB1) - 15146)
                                                                               * (v8 > 0xF)) | a8))
                                                            - 8))(a1, a2, a3);
}

uint64_t sub_1000C7270(double a1, double a2, double a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, double a18, double a19, double a20,double a21,double a22,double a23,double a24,double a25,double a26,double a27,double a28,double a29,double a30,double a31,double a32,double a33,double a34,double a35,double a36,double a37,double a38,double a39,double a40,double a41)
{
  char v41;
  uint64_t v42;
  __n128 v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;
  __n128 v47;
  __n128 v48;

  v43.n128_u64[0] = 0xE0E0E0E0E0E0E0E0;
  v43.n128_u64[1] = 0xE0E0E0E0E0E0E0E0;
  v44.n128_u64[0] = 0x7070707070707070;
  v44.n128_u64[1] = 0x7070707070707070;
  v45.n128_u64[0] = 0x6E6E6E6E6E6E6E6ELL;
  v45.n128_u64[1] = 0x6E6E6E6E6E6E6E6ELL;
  v46.n128_u64[0] = (v41 + 10) & 0xF;
  v46.n128_u64[1] = (v41 + 9) & 0xF;
  v47.n128_u64[0] = (v41 + 8) & 0xF;
  v47.n128_u64[1] = (v41 + 7) & 0xF;
  v48.n128_u64[0] = (v41 + 6) & 0xF;
  v48.n128_u64[1] = (v41 + 5) & 0xF;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double))(*(_QWORD *)(v42 + 8 * a8) - 8))(v43, v44, v45, a4, v46, v47, v48, (__n128)xmmword_100DF7480, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1000C737C(int8x16_t a1, int8x16_t a2, int8x16_t a3, double a4, __n128 a5, __n128 a6, __n128 a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  int v22;
  __int128 v23;
  int8x16_t v27;
  int8x16_t v28;
  int8x16_t v29;
  uint64_t v30;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;

  v28 = vrev64q_s8(*(int8x16_t *)(a14 + v20));
  v29 = vextq_s8(v28, v28, 8uLL);
  v30 = v20 & 0xF;
  v32.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a5 - 1), a8).u64[0];
  v32.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v23, a8).u64[0];
  v33 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v30 + v16 - 13), *(int8x16_t *)(v17 + v30 - 15)), *(int8x16_t *)(v30 + v15 - 11)));
  v34 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v33, v33, 8uLL), vaddq_s8(vaddq_s8(veorq_s8(v29, a2), a3), vandq_s8(vaddq_s8(v29, v29), a1))), vmulq_s8(v32, v27)));
  *(int8x16_t *)(v19 + v20) = vextq_s8(v34, v34, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * (((v21 == 0) * v22) ^ a12)) - 8))();
}

uint64_t sub_1000C741C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  int v38;

  return ((uint64_t (*)(void))(*(_QWORD *)(a37 + 8 * (a8 ^ (16327 * (v37 == v38))))
                            - ((a8 + 24344) ^ 0x7F11)))();
}

uint64_t sub_1000C745C()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * ((((((v1 + 7105) ^ ((v0 & 8) == 0)) & 1) == 0) * (v1 + 31200)) ^ v1))
                            - 8))();
}

uint64_t sub_1000C749C(int a1, int a2, __n128 a3, __n128 a4, double a5, __n128 a6, __n128 a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  int v11;
  uint64_t v12;

  a3.n128_u16[0] = -7968;
  a3.n128_u8[2] = -32;
  a3.n128_u8[3] = -32;
  a3.n128_u8[4] = -32;
  a3.n128_u8[5] = -32;
  a3.n128_u8[6] = -32;
  a3.n128_u8[7] = -32;
  a4.n128_u16[0] = 28784;
  a4.n128_u8[2] = 112;
  a4.n128_u8[3] = 112;
  a4.n128_u8[4] = 112;
  a4.n128_u8[5] = 112;
  a4.n128_u8[6] = 112;
  a4.n128_u8[7] = 112;
  a6.n128_u16[0] = 28270;
  a6.n128_u8[2] = 110;
  a6.n128_u8[3] = 110;
  a6.n128_u8[4] = 110;
  a6.n128_u8[5] = 110;
  a6.n128_u8[6] = 110;
  a6.n128_u8[7] = 110;
  a7.n128_u16[0] = -3599;
  a7.n128_u8[2] = -15;
  a7.n128_u8[3] = -15;
  a7.n128_u8[4] = -15;
  a7.n128_u8[5] = -15;
  a7.n128_u8[6] = -15;
  a7.n128_u8[7] = -15;
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, __n128, __n128, __n128, __n128, __n128))(v12 + 8 * (a11 - 18351)))((v11 + a1 + a2 + 6), (v11 + a1 + a2 + 7), (a11 - 31388), a3, a4, (__n128)xmmword_100DF7490, a6, a7);
}

uint64_t sub_1000C7520(char a1, char a2, unsigned __int8 a3, int8x8_t a4, int8x8_t a5, int8x16_t a6, int8x8_t a7, int8x8_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  int v49;
  char v50;
  char v51;
  char v52;
  int v53;
  uint64_t v54;
  int8x8_t v55;
  int8x16x4_t v57;

  v54 = (v53 + a10);
  v57.val[0].i64[0] = ((_BYTE)v53 + (_BYTE)a10) & 0xF;
  v57.val[0].i64[1] = (v52 + (_BYTE)a10) & 0xF;
  v55 = vrev64_s8(*(int8x8_t *)(a44 + v54));
  v57.val[1].i64[0] = (v51 + (_BYTE)a10) & 0xF;
  v57.val[1].i64[1] = (v50 + (_BYTE)a10) & 0xF;
  v57.val[2].i64[0] = (v47 + (_BYTE)a10 + (a3 ^ 2)) & 0xF;
  v57.val[2].i64[1] = (a2 + (_BYTE)a10) & 0xF;
  v57.val[3].i64[0] = (a1 + (_BYTE)a10) & 0xF;
  v57.val[3].i64[1] = (v48 + (_BYTE)a10) & 0xF;
  *(int8x8_t *)(a40 + v54) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)((v54 & 0xF) + v45 - 5), *(int8x8_t *)(v46 + (v54 & 0xF) - 7)), *(int8x8_t *)((v54 & 0xF) + v44 - 3))), vadd_s8(vadd_s8(veor_s8(v55, a5), a7), vand_s8(vadd_s8(v55, v55), a4))), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v57, a6), a8)));
  return (*(uint64_t (**)(void))(a43 + 8 * ((86 * (v49 == a10)) ^ a42)))();
}

uint64_t sub_1000C761C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,int a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a38 + 8 * (((((a3 + 10210) | 0x341) + 8422) * (a35 != a33)) ^ a3))
                            - ((a3 - 2104788291) & 0x7D74FFDE)
                            + 39634))();
}

uint64_t sub_1000C7680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v6 + 8 * (a6 - 15679)))(a6 ^ 0xB8u, 54296);
}

uint64_t sub_1000C76A8@<X0>(char a1@<W0>, int a2@<W1>, int a3@<W6>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v12 = (a3 + v10);
  *(_BYTE *)(a4 + v12) = *(_BYTE *)((v12 & 0xF) + v6 + 2) ^ *(_BYTE *)(v7 + (v12 & 0xF)) ^ *(_BYTE *)((v12 & 0xF) + v5 + 4) ^ ((*(_BYTE *)(v4 + v12) ^ 0x70) + a1 + ((2 * *(_BYTE *)(v4 + v12)) & 0xE0)) ^ (-15 * (v12 & 0xF));
  return (*(uint64_t (**)(void))(v11 + 8 * (((a3 - 1 == v8) * a2) ^ v9)))();
}

uint64_t sub_1000C7714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int8x16_t a39)
{
  uint64_t v39;
  uint64_t v40;

  a39 = veorq_s8(*(int8x16_t *)(*(_QWORD *)(v39 + 16) - 0x149FEDBA3ADFC6ACLL), (int8x16_t)xmmword_100DF75E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * (int)(a4 ^ (44 * (&a39 == 0)))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_1000C7764@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((v2 == a2) ^ (25 * ((a1 - 118) & 0xBE ^ 0xEF))) & 1)
                                          * ((7 * ((a1 - 1308875126) & 0x4E03BFBE ^ 0x36B9)) ^ 0x31A6)) ^ (a1 - 1308875126) & 0x4E03BFBE))
                            - 12))();
}

uint64_t sub_1000C77DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t v37;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * v36) - ((v36 - 12505) | 0x9821u) + 39189))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1000C78A4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v1 + 2025) ^ 0xA1A1) * (a1 == 0)) ^ v1)) - 12))();
}

uint64_t sub_1000C78D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  int v17;
  uint64_t v18;
  int v19;
  unsigned int v20;
  _BOOL4 v22;

  v20 = (((a17 - 1815897415 + v17) << (a4 - 92)) & 0xDD3DBB1E) + ((a17 - 1815897415 + v17) ^ 0xEE9EDD8F);
  v22 = v20 != -291578481
     && ((19653 * (v19 ^ 0xA108) - 39291) & (v20 + 1)) == (((((v19 ^ 0xEA7B) - 19305) | 0xA102) - 41206) & (2 * (v20 + 1)));
  return (*(uint64_t (**)(void))(v18 + 8 * ((5280 * v22) ^ v19 ^ 0xEA7B)))();
}

uint64_t sub_1000C7978()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((15022 * (((v0 == 0x76168F7F34090EALL) ^ (v1 - 127)) & 1)) ^ v1))
                            - ((v1 + 1656) | 0x108u)
                            + 41214))();
}

uint64_t sub_1000C79D0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  char *v26;
  char *v27;
  char *v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;

  v25 = v23 | 0x60;
  v26 = (char *)*(&off_10112C750 + (v23 | 0x60) - 12323) - 1414610714;
  v27 = (char *)*(&off_10112C750 + ((v23 | 0x60) ^ 0x4E40)) - 1617848991;
  v28 = (char *)*(&off_10112C750 + ((v23 | 0x60) ^ 0x508E)) - 1668660759;
  v29 = *(unsigned __int8 *)(v21 - 0x76168F7F34090E6) ^ v27[*(unsigned __int8 *)(v21
                                                                                                  - 0x76168F7F34090E6) ^ 0xEELL] ^ 0x3C;
  v30 = ((v29 - ((2 * v29) & 0xEC)) << 24) + 1979711488;
  v31 = *((unsigned __int8 *)*(&off_10112C750 + ((v23 | 0x60) ^ 0x41F7))
        + (*(unsigned __int8 *)(v21 - 0x76168F7F34090E3) ^ 0xD8)
        - 1902382574) ^ 0x57;
  v32 = ((v30 ^ 0x76000000) - ((2 * v30) & 0x12000000) - 1980192274) ^ 0x89F8A9EE | (v31
                                                                                   - ((2 * v31) & 0x2E)
                                                                                   + 1113805079) ^ 0x42635117;
  v33 = v26[*(unsigned __int8 *)(v21 - 0x76168F7F34090E4) ^ 0xD5] ^ 0x60;
  v34 = (((v33 - ((2 * v33) & 0x1A2)) << 8) - 1261973248) ^ 0xB4C7D100;
  v35 = (v34 - ((2 * v34) & 0x547D6400) - 364989811) ^ 0xEA3EB28D | (v32 - 1599100721 + (~(2 * v32) | 0xBEA0AE61) + 1) ^ 0xA0AFA8CF;
  v36 = v28[*(unsigned __int8 *)(v21 - 0x76168F7F34090E5) ^ 0x8CLL];
  v37 = v36 - 2 * (((_BYTE)v36 + 2) & 7 ^ v36 & 1) - 72;
  v38 = ((v37 - ((2 * v37) & 0x100)) << 16) + 1098907648;
  v39 = (v35 - 812264918 + (~(2 * v35) | 0x60D45BAB) + 1) ^ 0xCF95D22A | ((v38 ^ 0x41800000)
                                                                        - ((2 * v38) & 0x248C0000)
                                                                        - 767148661) ^ 0xD2463D8B;
  HIDWORD(a5) = v22 + 291578481;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8 * v25) - 4))((((v39 - ((2 * v39) & 0x2A52F028) - 1792444396) ^ 0x6AD687F6) + 1) ^ 0x377DB5F5, 1861970922, 3527818635, 208, 238, v26, v27, v28, a2, a3, a1, a5, (char *)*(&off_10112C750 + (v25 ^ 0x41F7)) - 1902382574, (char *)*(&off_10112C750 + (v25 ^ 0x508E)) - 1668660759, (char *)*(&off_10112C750 + (v25 ^ 0x4E40)) - 1617848991, (char *)*(&off_10112C750 + v25 - 12323) - 1414610714, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21);
}

uint64_t sub_1000C82C8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,int a30,int a31,uint64_t a32)
{
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  uint64_t v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  uint64_t v57;
  int v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  int v67;
  int v68;
  unsigned __int16 v69;
  __int16 v70;
  __int16 v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  char *v80;
  int v81;
  int v82;
  unsigned int v83;
  char *v84;
  int v85;
  int v86;
  unsigned int v87;
  char *v88;
  unsigned int v89;
  char *v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  int v111;
  int v112;
  unsigned int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  int v130;
  unsigned int v131;
  int v132;
  int v133;
  unsigned int v134;
  int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  int v141;
  int v142;
  unsigned int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  unint64_t v149;
  int v150;
  int v151;
  int v152;
  unsigned int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  int v161;
  unsigned int v162;
  int v163;
  int v164;
  int v165;
  unsigned int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  int v174;
  int v175;
  unsigned int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  unsigned int v184;
  int v185;
  int v186;
  unsigned int v187;
  int v188;
  int v189;
  unsigned int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  BOOL v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  int v204;
  int v205;
  __int16 v206;
  unsigned int v207;
  int v208;
  int v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  int v215;
  int v216;
  unsigned int v217;
  int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  int v222;
  unsigned int v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  char v228;
  int v229;
  unsigned int v230;
  int v231;
  unint64_t v232;
  int v233;
  unsigned int v234;
  int v235;
  int v236;
  int v237;
  unsigned int v238;
  int v239;
  int v240;
  unsigned int v241;
  int v242;
  int v243;
  unsigned int v244;
  int v245;
  int v246;
  unsigned int v247;
  unsigned int v248;
  int v249;
  unsigned int v250;
  unsigned int v251;
  int v252;
  unsigned int v253;
  int v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  int v267;
  unsigned int v268;
  int v269;
  int v270;
  int v271;
  unsigned int v272;
  int v273;
  unsigned int v274;
  int v275;
  unsigned int v276;
  int v277;
  int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  int v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  int v290;
  unsigned int v291;
  int v292;
  int v293;
  int v294;
  int v295;
  unsigned int v296;
  int v297;
  int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  unsigned int v309;
  int v310;
  unsigned int v311;
  int v312;
  unsigned int v313;
  int v314;
  int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  char *v319;
  int v320;
  char *v321;
  int v322;
  unsigned int v323;
  unsigned int v324;
  int v325;
  int v326;
  unsigned int v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  int v331;
  char *v332;
  int v333;
  unsigned int v334;
  char *v335;
  int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  unsigned int v342;
  unsigned int v343;
  int v344;
  int v345;
  unsigned int v346;
  int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  int v352;
  unsigned int v353;
  unsigned int v354;
  int v355;
  unsigned int v356;
  int v357;
  unsigned int v358;
  int v359;
  int v360;
  unsigned int v361;
  unsigned int v362;
  int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  char *v368;
  unsigned int v369;
  int v370;
  int v371;
  char *v372;
  int v373;
  unsigned int v374;
  int v375;
  char *v376;
  unsigned int v377;
  unsigned int v378;
  char *v379;
  int v380;
  unsigned int v381;
  unsigned int v382;
  uint64_t v383;
  unsigned int v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  int v388;
  uint64_t v389;
  unsigned int v390;
  unsigned int v391;
  int v392;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  unint64_t v399;
  uint64_t v400;
  uint64_t v401;
  unint64_t v402;
  uint64_t v403;
  uint64_t v404;
  unint64_t v405;
  unint64_t v406;

  v405 = (((v33 & 0xFFFFFFF8 ^ 0xD62D5797) + 1427041678 - (((v33 & 0xFFFFFFF8 ^ 0xD62D5797) << (v32 + 119)) & 0xAA1DDB20)) ^ 0xDEBD7EE2AF8236CLL)
       + a1
       + (((unint64_t)(((v33 & 0xFFFFFFF8 ^ 0xD62D5797)
                             + 1427041678
                             - (((v33 & 0xFFFFFFF8 ^ 0xD62D5797) << (v32 + 119)) & 0xAA1DDB20)) ^ 0x550EED92) << (((v32 + 126) | 2u) - 9)) & 0xFFED9DFC);
  HIDWORD(a20) = v33 & 0xFFFFFFF0 ^ 0xD62D579F;
  v36 = *(unsigned __int8 *)(a6 + (*(unsigned __int8 *)(v405 - 0xDEBD7EE7FF6CEFELL) ^ 0x57));
  v37 = *(unsigned __int8 *)(a6
                           + (*(unsigned __int8 *)(((HIDWORD(a20)
                                                   - 695562800
                                                   - 2 * (HIDWORD(a20) & 0x568A8DF0 ^ v33 & 0x20)) ^ 0x4FEFFED33875F214)
                                                 + a1
                                                 + ((2
                                                   * ((HIDWORD(a20)
                                                     - 695562800
                                                     - 2 * (HIDWORD(a20) & 0x568A8DF0 ^ v33 & 0x20)) ^ 0xD68A8DD0)) & 0x1DDFEFF88)
                                                 - 0x4FEFFED3EEFF7FC4) ^ 9));
  v406 = (((v33 & 0xFFFFFFFA ^ 0xD62D5795) + 1843505307 - ((2 * (v33 & 0xFFFFFFFA ^ 0xD62D5795)) & 0xDBC35136)) ^ 0x973C6ADB821453E4)
       + a1
       + ((2
         * (((v33 & 0xFFFFFFFA ^ 0xD62D5795) + 1843505307 - ((2 * (v33 & 0xFFFFFFFA ^ 0xD62D5795)) & 0xDBC35136)) ^ 0x6DE1A89B)) & 0x1DFEBF6FELL);
  v38 = *(unsigned __int8 *)(v406 + 0x68C39524100A0481);
  v404 = (((v33 & 0xFFFFFFFB ^ 0xD62D5794) - 31342014 - ((2 * (v33 & 0xFFFFFFFB ^ 0xD62D5794)) & 0xFC438484)) ^ 0x5FFFF7FA09C48B33)
       + a1
       + ((2
         * (((v33 & 0xFFFFFFFB ^ 0xD62D5794) - 31342014 - ((2 * (v33 & 0xFFFFFFFB ^ 0xD62D5794)) & 0xFC438484)) ^ 0xFE21C242)) & 0x1EFCA92E2);
  v39 = *(unsigned __int8 *)(v404 - 0x5FFFF7FAF7E54971) ^ 0x9D ^ *(unsigned __int8 *)(a8
                                                                                      + (*(unsigned __int8 *)(v404 - 0x5FFFF7FAF7E54971) ^ 0x1ELL));
  v40 = (((v39 - ((2 * v39) & 0x56)) << 24) + 721420288) ^ 0x2B000000;
  v41 = (v40 - 1319208581 - ((2 * v40) & 0x62000000)) ^ 0xB15E797B | ((v36 ^ 0x31)
                                                                    + 257925607
                                                                    - ((2 * (v36 ^ 0x31)) & 0xFFFFFFCF)) ^ 0xF5FA1E7;
  v42 = *(unsigned __int8 *)(a7 + (v38 ^ 0x5D)) - ((2 * *(unsigned __int8 *)(a7 + (v38 ^ 0x5D)) + 50) & 0x2E) + 48;
  v43 = (((2 * ((2 * v42) ^ 0x2E)) & 0xFFFFFFF7) - ((2 * v42) ^ 0x2E) + 4) & 0x32;
  LOBYTE(v38) = v38 & 0x10;
  v44 = (v42 ^ 0xE) + 2 * v43 + (v43 ^ 0x7E) - 126;
  LODWORD(v398) = v33 & 0xFFFFFFF9;
  v45 = (v44 + (~(2 * v44) | 0x21) - 16) ^ 0x2B;
  v46 = ((v45 - 1247639255 - ((2 * v45) & 0x52)) ^ 0xB5A28929) << v38;
  LODWORD(v38) = ((v46 + 575239693 - ((2 * v46) & 0x4492EC1A)) ^ 0x2249760D) << (v38 ^ 0x10);
  v47 = v38 - ((2 * v38) & 0x24A2970) - 2128276296;
  v402 = (((v33 & 0xFFFFFFF5 ^ 0xD62D579A)
         + 842573094
         + ((2 * (v33 & 0xFFFFFFF5 ^ 0xD62D579A)) & 0x64714A48 ^ 0xFFFFFFFB)
         + 1) ^ 0xDFFBB27FB5C37AD1)
       + a1
       + ((2
         * (((v33 & 0xFFFFFFF5 ^ 0xD62D579A)
           + 842573094
           + ((2 * (v33 & 0xFFFFFFF5 ^ 0xD62D579A)) & 0x64714A48 ^ 0xFFFFFFFB)
           + 1) ^ 0x3238A526)) & 0x10FF7BFEELL);
  LODWORD(v38) = *(unsigned __int8 *)(a9 + (*(unsigned __int8 *)(v402 + 0x20044D8078042009) ^ 0x60)) ^ 0x61;
  LODWORD(v38) = ((((_DWORD)v38 - ((2 * (_DWORD)v38) & 0xEC)) << 8) + 748844544) ^ 0x2CA27600;
  v48 = *(unsigned __int8 *)(a9
                           + (*(unsigned __int8 *)((((v33 & 0xFFFFFFF9 ^ 0xD62D5796)
                                                   + 1081518015
                                                   - ((2 * (v33 & 0xFFFFFFF9 ^ 0xD62D5796)) & 0x80ED4F7E)) ^ 0x7449E775BFC96804)
                                                 + a1
                                                 + ((2
                                                   * (((v33 & 0xFFFFFFF9 ^ 0xD62D5796)
                                                     + 1081518015
                                                     - ((2 * (v33 & 0xFFFFFFF9 ^ 0xD62D5796)) & 0x80ED4F7E)) ^ 0x4076A7BF)) & 0x1FF7F9F76)
                                                 - 0x7449E775FFBFCFBBLL) ^ 0x90));
  HIDWORD(v396) = v33 & 0xFFFFFFF3 ^ 0xD62D579C;
  v49 = *(unsigned __int8 *)(((HIDWORD(v396) + 701093393 - 2 * (HIDWORD(v396) & 0x29C9D613 ^ v33 & 2)) ^ 0xFB7F126FD66611F2)
                           + a1
                           + ((2
                             * ((HIDWORD(v396) + 701093393 - 2 * (HIDWORD(v396) & 0x29C9D613 ^ v33 & 2)) ^ 0x29C9D611)) & 0x1FF5F8FC6)
                           + 0x480ED900050381DLL);
  v50 = ((((v48 ^ 0x33) - ((2 * (v48 ^ 0x33)) & 0xC0)) << 8) - 322609152) ^ 0xECC56000;
  v51 = (v41 - ((2 * v41) & 0xAE425DAE) + 1461792471) ^ 0xD6043A6F ^ v47 | (v50 + 1043721510 - ((2 * v50) & 0x7C6BDA00)) ^ 0x3E35ED26;
  v52 = v51 - ((2 * v51) & 0xFE16D74E);
  v403 = (((v33 & 0xFFFFFFFD ^ 0xD62D5792) - 1727583626 - ((2 * (v33 & 0xFFFFFFFD ^ 0xD62D5792)) & 0x320E54EC)) ^ 0x6BDEA7B5E6949591)
       + ((2
         * (((v33 & 0xFFFFFFFD ^ 0xD62D5792) - 1727583626 - ((2 * (v33 & 0xFFFFFFFD ^ 0xD62D5792)) & 0x320E54EC)) ^ 0x99072A76)) & 0xFF277FCE)
       + a1;
  v53 = ((((v49 ^ 0x71 ^ *(unsigned __int8 *)(a8 + (v49 ^ 0x7C)))
         - ((2 * (v49 ^ 0x71 ^ *(unsigned __int8 *)(a8 + (v49 ^ 0x7C)))) & 0xAC)) << 24)
       + 1442840576) ^ 0x56000000;
  v54 = (v53 - 1404864176 - ((2 * v53) & 0x58000000)) ^ 0xAC437950 | ((v37 ^ 0x31)
                                                                    + 1700347251
                                                                    - ((2 * (v37 ^ 0x31)) & 0xE6)) ^ 0x65593D73;
  v55 = (2 * v54) & 0x706E27AC;
  LODWORD(v49) = v54 + 943133654;
  v56 = v33 & 0xFFFFFFF6 ^ 0xD62D5799;
  HIDWORD(a12) = 2 * v56;
  LODWORD(v395) = v56;
  v57 = *(unsigned __int8 *)(((v56 + 1480176820 - ((2 * v56) & 0xB0736968)) ^ 0x7FFF9FFF9DCF4B5FLL)
                           + a1
                           + ((2 * ((v56 + 1480176820 - ((2 * v56) & 0xB0736968)) ^ 0x5839B4B4)) & 0x18BEDFFD6)
                           - 0x7FFF9FFFC5F6FFEBLL);
  v58 = v49 - v55;
  v59 = *(unsigned __int8 *)(a9 + (*(unsigned __int8 *)(v403 - 0x6BDEA7B57F93BFE7) ^ 0x70)) ^ 0x28;
  v60 = (((v59 - ((2 * v59) & 0x1D2)) << 8) + 625404160) ^ 0x2546E900;
  v400 = (((v33 & 0xFFFFFFF4 ^ 0xD62D579B)
         + 1120529721
         + ((2 * (v33 & 0xFFFFFFF4 ^ 0xD62D579B)) & 0x8593DA60 ^ 0xFFFFFFED)
         + 1) ^ 0x73E76EC33C6E3A92)
       + ((2
         * (((v33 & 0xFFFFFFF4 ^ 0xD62D579B)
           + 1120529721
           + ((2 * (v33 & 0xFFFFFFF4 ^ 0xD62D579B)) & 0x8593DA60 ^ 0xFFFFFFED)
           + 1) ^ 0x42C9ED39)) & 0xFD4FAF56)
       + a1;
  LODWORD(v57) = (*(unsigned __int8 *)(a7 + (v57 ^ 0x2F))
                - ((2 * *(unsigned __int8 *)(a7 + (v57 ^ 0x2F)) + 100) & 0x84)
                + 116) ^ 0xB3;
  LODWORD(v57) = (((v57 - ((2 * (_DWORD)v57) & 0x1D0)) << 16) + 1860698112) ^ 0x6EE80000;
  v401 = v33 ^ 0xD62D5790;
  v399 = (v33 ^ 0xFFAEFFEF3147AC3ELL) + a1 + ((2 * v401) & 0x1CED5F75CLL);
  LODWORD(v38) = (v57 + 1705729302 - ((2 * v57) & 0x4B560000)) ^ 0x65AB5D16 | (v38 + 793561404 - ((2 * v38) & 0x5E999200)) ^ 0x2F4CC93C;
  LODWORD(v396) = v33 & 0xFFFFFFFC ^ 0xD62D5793;
  LODWORD(v49) = (v38 - 582420492 - ((2 * v38) & 0x3A91EFE8)) ^ 0xDD48F7F4 | ((*(unsigned __int8 *)(a6
                                                                                                  + (*(unsigned __int8 *)(v400 - 0x73E76EC37EA7D7ABLL) ^ 0x74)) ^ 0x31)
                                                                            - 989335806
                                                                            - ((2
                                                                              * *(unsigned __int8 *)(a6 + (*(unsigned __int8 *)(v400 - 0x73E76EC37EA7D7ABLL) ^ 0x74))) & 4)) ^ 0xC507EF02;
  LODWORD(v57) = *(unsigned __int8 *)(a6
                                    + (*(unsigned __int8 *)((((_DWORD)v396
                                                            + 1891084756
                                                            - ((2 * (_DWORD)v396) & 0xE16F53A8)) ^ 0xEF7FFB6A4764DE31)
                                                          + ((2
                                                            * (((_DWORD)v396
                                                              + 1891084756
                                                              - ((2 * (_DWORD)v396) & 0xE16F53A8)) ^ 0x70B7A9D4)) & 0x6FA6EFCA)
                                                          + a1
                                                          + 0x10800495C82C881BLL) ^ 0xE7));
  HIDWORD(v395) = v33 & 0xFFFFFFF7 ^ 0xD62D5798;
  v61 = ((v57 ^ 0x31) + 2121192130 - ((2 * v57) & 0x184)) ^ 0x7E6ED2C2 | (v60 - 1870821665 - ((2 * v60) & 0x20FB0C00)) ^ 0x907D86DF;
  v62 = *(unsigned __int8 *)(((HIDWORD(v395) + 1479181380 - 2 * (HIDWORD(v395) & 0x582A8445 ^ v33 & 1)) ^ 0xFFEEBF33A51D1FB0)
                           + a1
                           + ((2
                             * ((HIDWORD(v395) + 1479181380 - 2 * (HIDWORD(v395) & 0x582A8445 ^ v33 & 1)) ^ 0x582A8444)) & 0x1FA6F37E8)
                           + 0x1140CC02C8640CLL);
  v63 = *(unsigned __int8 *)(v399 + 0x51001018950452) ^ 0xF6 ^ *(unsigned __int8 *)(a8
                                                                                    + (*(unsigned __int8 *)(v399 + 0x51001018950452) ^ 0xB7));
  v64 = (((v63 - ((2 * v63) & 0x6E)) << 24) + 922746880) ^ 0x37000000;
  v65 = (v64 + 1575958590 - ((2 * v64) & 0xBA000000)) ^ 0x5DEF383E | (v61 + 826460721 - ((2 * v61) & 0x62859462)) ^ 0x3142CA31;
  v394 = (((v33 & 0xFFFFFFF2 ^ 0xD62D579D)
         + 2072416367
         + ((2 * (v33 & 0xFFFFFFF2 ^ 0xD62D579D)) & 0xF70D20C4 ^ 0xFFFFFFE5)
         + 1) ^ 0x57DFBBB6966B7894)
       + a1
       + ((2
         * (((v33 & 0xFFFFFFF2 ^ 0xD62D579D)
           + 2072416367
           + ((2 * (v33 & 0xFFFFFFF2 ^ 0xD62D579D)) & 0xF70D20C4 ^ 0xFFFFFFE5)
           + 1) ^ 0x7B86906F)) & 0x1DBDBD1F6);
  v66 = *(unsigned __int8 *)(a7 + (*(unsigned __int8 *)(v394 - 0x57DFBBB6EDEDE8FBLL) ^ 0x6ALL));
  LODWORD(v62) = v62 ^ 0x9D ^ *(unsigned __int8 *)(a8 + (v62 ^ 0x1E));
  v67 = v66 - ((2 * v66 + 100) & 0xDE) + 33;
  LODWORD(v49) = (v49 + 945856301 - ((2 * v49) & 0x70C13E5A)) ^ 0x38609F2D | (((_DWORD)v62 << 24)
                                                                            + 1690886014
                                                                            - (((_DWORD)v62 << 25) & 0xC8000000)) ^ 0x64C8DF7E;
  LODWORD(v62) = v49 - ((2 * v49) & 0xA4BF6F88);
  LODWORD(v49) = ((((v67 ^ 0xF) - ((2 * v67) & 0x60)) << 16) - 1137704960) ^ 0xBC300000;
  v68 = (v49 - 1898059089 - ((2 * v49) & 0x1DBA0000)) ^ 0x8EDDEAAF | v58 ^ 0x383713D6;
  v397 = (((v33 & 0xFFFFFFF1 ^ 0xD62D579E) - 1493397074 - ((2 * (v33 & 0xFFFFFFF1 ^ 0xD62D579E)) & 0x4DF9235C)) ^ 0x7EBEFFB75507EA75)
       + a1
       + ((2
         * (((v33 & 0xFFFFFFF1 ^ 0xD62D579E) - 1493397074 - ((2 * (v33 & 0xFFFFFFF1 ^ 0xD62D579E)) & 0x4DF9235C)) ^ 0xA6FC91AE)) & 0x1E7F6F7B6);
  HIDWORD(v398) = v33 & 0xFFFFFFFE ^ 0xD62D5791;
  v69 = *(unsigned __int8 *)(a9 + (*(unsigned __int8 *)(v397 - 0x7EBEFFB7F3FB7BDBLL) ^ 7));
  v70 = ((((v69 ^ 0x21) - ((2 * v69) & 0x114)) << 8) - 30208) ^ 0x8A00;
  v71 = v70 - ((2 * v70) & 0x4E00);
  v72 = v52 - 16028761;
  v73 = *(unsigned __int8 *)(a7
                           + (*(unsigned __int8 *)(((HIDWORD(v398)
                                                   + 1743388488
                                                   - 2 * (HIDWORD(v398) & 0x67E9FF4E ^ v33 & 6)) ^ 0x4CD3ACFE818E00FELL)
                                                 + a1
                                                 + ((2
                                                   * ((HIDWORD(v398)
                                                     + 1743388488
                                                     - 2 * (HIDWORD(v398) & 0x67E9FF4E ^ v33 & 6)) ^ 0x67E9FF48)) & 0x1CCCFFF6CLL)
                                                 - 0x4CD3ACFEE667FFB6) ^ 0x17));
  v74 = (v68 - ((2 * v68) & 0xE48D1594) - 230257974) ^ a28;
  v75 = (v62 + 1382004676) ^ a31;
  v76 = (((((v73 - ((2 * v73 + 100) & 0x84) - 12) ^ 0x1D)
         - ((2 * ((v73 - ((2 * v73 + 100) & 0x84) - 12) ^ 0x1D)) & 0x92)) << 16)
       + 1179189248) ^ 0x46490000;
  v77 = (v65 - ((2 * v65) & 0x61BA50E8) - 1327683468) ^ v34 ^ (v76 - ((2 * v76) & 0x44320000) + 572077003);
  v78 = v72 ^ v35;
  v79 = ((v72 ^ v35) >> 16) ^ 0xF3;
  v80 = (char *)*(&off_10112C750 + (v32 ^ 0x8879)) - 2015692647;
  v81 = *(_DWORD *)&v80[4 * ((v79 - ((2 * v79) & 0x36) + 539) ^ 0x286)];
  LODWORD(v62) = -724660153 * v81 - ((161292430 * v81 + 190977986) & 0xC3C2C6E);
  v82 = (((v75 >> 8) & 0xA ^ 0x6E145603) + ((v75 >> 8) & 0xF5) - 1) ^ 0x7F3E5A8F;
  v83 = (((unsigned __int16)(v72 ^ v35) >> 8) ^ 0xA025087D)
      - ((2 * (((unsigned __int16)(v72 ^ v35) >> 8) ^ 0xA025087D)) & 0xA1022);
  v84 = (char *)*(&off_10112C750 + v32 - 37499) - 1115336963;
  v85 = *(_DWORD *)&v84[4 * ((((2 * v82) | 0xB4D95F76) - v82 + 630411333) ^ 0xCB46A347)];
  v86 = v85 - ((2 * v85 + 1445099040) & 0xCA20E6CA);
  v87 = (((2 * (v74 ^ 0x1E)) | 0xA0AB05CA) - (v74 ^ 0x1E) - 1347781349) ^ 0x50DC8CEC;
  v88 = (char *)*(&off_10112C750 + (v32 ^ 0x9CC8)) - 1545696982;
  v89 = (((2 * v87) | 0xF53FA25A) - v87 + 90189523) ^ 0xFA16DFDD;
  v90 = (char *)*(&off_10112C750 + (v32 ^ 0x92BE)) - 1368625798;
  v91 = *(_DWORD *)&v90[4 * v89] ^ *(_DWORD *)&v88[4 * (HIBYTE(v77) ^ 0x91)] ^ (v86 + 270642805) ^ (v62 + 869212696);
  v92 = ((unsigned __int16)(v74 ^ (v71 - 22622)) >> 8) ^ 0x9B;
  v93 = (((2 * (BYTE2(v75) ^ 0x8A)) & 0x1F0) - (BYTE2(v75) ^ 0x8A) + 1046143751) ^ 0x9C52E123;
  v94 = *(_DWORD *)&v80[4 * ((((2 * v93) & 0x41039D6) - v93 + 564503316) ^ 0x83ADA178)];
  v95 = *(_DWORD *)&v84[4
                      * ((((v92 - 2 * (v92 & 7) + 12208647) & 0xB0013C ^ 0x20042418)
                        + ((v92 - 2 * (v92 & 7) + 12208647) ^ 0x1BFACB25)
                        - (((v92 - 2 * (v92 & 7) + 12208647) ^ 0x1BFACB25) & 0x1340813C)) ^ 0x28B42491)];
  v96 = *(_DWORD *)&v90[4
                      * (((((v77 & 0xBF ^ 0xCDBE9AF9) - (v77 & 0x40)) & 0xC43E18E3 ^ 0x204021A1)
                        + (((v77 & 0xBF ^ 0xCDBE9AF9) - (v77 & 0x40)) ^ 0xDEBEDE52)
                        - ((((v77 & 0xBF ^ 0xCDBE9AF9) - (v77 & 0x40)) ^ 0xDEBEDE52) & 0x100044E3)) ^ 0xE77E3935)] ^ *(_DWORD *)&v88[4 * (HIBYTE(v78) ^ 0x93)] ^ (v95 - ((2 * v95 + 1445099040) & 0xE6CACF5E) + 511091391) ^ (-724660153 * v94 - ((698163342 * v94 + 1533155266) & 0x5A9360E6) - 621101996);
  v97 = *(_DWORD *)&v80[4
                      * ((((2 * (BYTE2(v74) ^ 0x228A447)) | 0xF7488E14) - (BYTE2(v74) ^ 0x228A447) + 73119990) ^ 0xF98CE371)];
  v98 = *(_DWORD *)&v88[4 * (HIBYTE(v75) ^ 0x94)] ^ 0x6C9ECFEE ^ (-724660153 * v97
                                                                - ((1533155266 - 1449320306 * v97) & 0xDBF1E8C6)
                                                                + 464126020);
  v99 = (1720428045 - (v98 & 0xECF290DC ^ 0x40F280DC | 0x668BA60D) + (v98 & 0xECF290DC ^ 0x40F280DC | 0x997459F2)) ^ 0x987409E8;
  LODWORD(v49) = *(_DWORD *)&v84[4
                               * ((((2 * (BYTE1(v77) ^ 0x810464E6)) | 0x3B6737CC) - (BYTE1(v77) ^ 0x810464E6) - 498310118) ^ 0x9CB7FF0D)];
  LODWORD(v62) = (((2 * (v78 ^ 0x90)) | 0x2750F7D6) - (v78 ^ 0x90) - 329808875) ^ 0x93A552EF;
  v100 = (-933582530 - (v99 | 0xC85AA93E) + (v99 | 0x37A556C1)) ^ 0x528796C7 | ((v98 & 0x130D6F23 ^ 0xB49D7FDA)
                                                                              - ((2 * (v98 & 0x130D6F23 ^ 0xB49D7FDA)) & 0x6B225084)
                                                                              - 34363322) ^ 0x5966F6BE;
  v101 = *(_DWORD *)&v80[4 * (BYTE2(v77) ^ 0xB)];
  v102 = (v49 - ((2 * v49 + 102921760) & 0xA507A98) - 1338410916) ^ (v100 - ((2 * v100) & 0x49E897DA) + 619989997);
  LODWORD(v49) = *(_DWORD *)&v84[4 * ((v83 - 1827698159) ^ 0x332A825A)];
  v103 = v102 ^ *(_DWORD *)&v90[4 * (((_DWORD)v62 - ((2 * (_DWORD)v62) & 0x33E8182E) - 1712059369) ^ 0x19F92518)];
  v104 = *(_DWORD *)&v90[4
                       * (((v75 ^ 0x3B) + (v75 & 0x4C ^ 0x444) - ((v75 ^ 0x3B) & 0x4C)) ^ 0x413)] ^ *(_DWORD *)&v88[4 * (HIBYTE(v74) ^ 0xD1)] ^ ((~(698163342 * v101 + 459413442) | 0xD144B215) - 724660153 * v101 + 1158591191) ^ (v49 - 2 * ((v49 + 722549520) & 0x4F2BBD15 ^ v49 & 5) + 2050816032);
  v105 = v96 ^ ((v96 ^ 0x453645F1) - ((2 * (v96 ^ 0x453645F1) + 2) & 0x20BC24E8) - 1872883083) ^ ((v96 ^ 0x495ACDD4)
                                                                                                - ((2 * (v96 ^ 0x495ACDD4)
                                                                                                  + 416878668) & 0x7D580100)
                                                                                                - 887584602) ^ 0x943BA8FA;
  v106 = (-47592717 - (BYTE1(v103) ^ 0xD6 | 0xFD29CAF3) + (BYTE1(v103) ^ 0xD6 | 0x2D6350C)) ^ 0x4AD6F51D;
  v107 = (v106 | 0x9E8A7FAC) - (v106 | 0x61758053) + 1635090515;
  v108 = (v107 ^ 0xD68ABF2B)
       + (((v107 ^ 0x29754002) + 1) ^ 0x37CE934F)
       + ((2 * ((v107 ^ 0x29754002) + 1)) & 0x6F9D269E)
       - 936285007;
  v109 = v105 - ((2 * v105 + 416878666) & 0xD9CD02B6) - 111998592;
  v110 = v108 - ((2 * v108) & 0x6288DC26) - 1320915437;
  LODWORD(v49) = ((v110 ^ 0x4EBB91EF) & (v107 ^ 0xD68ABF2B))
               - ((2 * ((v110 ^ 0x4EBB91EF) & (v107 ^ 0xD68ABF2B))) & 0x241D2948);
  v111 = *(_DWORD *)&v80[4
                       * ((((2 * (BYTE2(v109) ^ 0x9404A2FE)) & 0x90520) - (BYTE2(v109) ^ 0x9404A2FE) - 1645059729) ^ 0x9F6C3B2)];
  v112 = *(_DWORD *)&v84[4 * (v107 ^ 0x98312EC4 ^ v110)
                       + 0x142C223A8
                       + 4 * ((2 * (int)v49 - 1541592760) ^ 0xB525E5E)
                       + 4 * ((2 * (2 * (int)v49 - 1541592760)) & 0x5E9EEE2C ^ 0x481A4200)];
  LODWORD(v62) = *(_DWORD *)&v80[4
                               * (((BYTE2(v103) ^ 0xB2)
                                 + (HIWORD(v103) & 0xA7 ^ 0x4B32A405)
                                 - ((BYTE2(v103) ^ 0xB2) & 0xA7)) ^ 0x4B32A4C6)];
  v113 = *(_DWORD *)&v90[4
                       * ((((2 * (v104 ^ 0x6F)) | 0xD24DCD7A)
                         - (v104 ^ 0x6F)
                         - 1764157117) ^ 0x6926E64F)] ^ *(_DWORD *)&v88[4 * (HIBYTE(v91) ^ 0xA1)] ^ (-724660153 * v111 - ((1533155266 - 1449320306 * v111) & 0xC35FBAA0) - 1889474255) ^ (v112 - ((2 * v112 + 1445099040) & 0x78D362C8) - 411374476);
  v114 = *(_DWORD *)&v88[4 * (HIBYTE(v109) ^ 0x74)];
  v115 = -724660153 * v62 - ((698163342 * v62 + 1533155266) & 0x51BE707C) - 695188449;
  LODWORD(v49) = (v114 ^ v115 ^ 0xE29ECDAE) + 1;
  v115 ^= 0xA8DF383E;
  LODWORD(v49) = v115 + (v49 ^ 0x77EEB9CE) + ((2 * v49) & 0xEFDD739C) - 2012133838;
  v116 = (v114 ^ ((v114 ^ 0x4A41F590) - ((2 * (v114 ^ 0x4A41F590) + 2) & 0xCC3E9548) + 1713326757) ^ 0xDC43225F ^ (v49 - ((2 * v49) & 0x1FC4C528) + 266494612))
       + v115;
  v117 = *(_DWORD *)&v84[4 * (BYTE1(v104) ^ 0x7B)];
  LODWORD(v49) = *(_DWORD *)&v90[4
                               * ((-1844150125
                                 - (v91 ^ 0x807E9896 | 0x92148093)
                                 + (v91 ^ 0x807E9896 | 0x6DEB7F6C)) ^ 0xED95E791)];
  LODWORD(v62) = (v49 & 0x8000000 | ((((v49 & 0x8000000) >> 27) & 1) << 28) | 0x42EF7FB4) ^ 0xEFFFFFFF;
  LODWORD(v49) = (64093780 - (v49 & 0xF7FFFFFF ^ 0x72769FFB | 0x3D1FE54) + (v49 & 0xF7FFFFFF ^ 0x72769FFB | 0xFC2E01AB)) ^ 0xD46F05AA;
  v118 = (v62 + 1593811079 + ((2 * v62 + 782810160) & 0x884000C6 ^ 0xFFFF7BFD)) ^ (v117
                                                                                 - 2
                                                                                 * ((v117 + 185678608) & 0x13235DAF ^ v117 & 1)
                                                                                 + 1043634366) ^ (((2 * v49) | 0x548F6F30)
                                                                                                - v49
                                                                                                + 1438140520) ^ (v116 - ((2 * v116) & 0x2BE0C6DC) - 1779408018);
  v119 = *(_DWORD *)&v80[4 * (((HIWORD(v104) & 0x9E ^ 0x285) + (HIWORD(v104) & 0x61) - 1) ^ 0x208)];
  v120 = *(_DWORD *)&v84[4
                       * (((BYTE1(v91) ^ 0x1220095) - ((2 * (BYTE1(v91) ^ 0x1220095)) & 0x20001BA) - 1478631459) ^ 0xA6FFDFA0)];
  v121 = *(_DWORD *)&v88[4 * (HIBYTE(v104) ^ 0x12)] ^ 0x19B116A;
  v122 = -724660153
       * *(_DWORD *)&v80[4 * ((((2 * (BYTE2(v91) ^ 0xAC)) | 0x9A40E9A0) - (BYTE2(v91) ^ 0xAC) + 853510960) ^ 0xCD2074C8)]
       + 766577633;
  LODWORD(v62) = (v121 & v122) - ((2 * (v121 & v122)) & 0x258DDF02);
  v123 = v122 + v121;
  v124 = (1560629412 - (BYTE1(v109) ^ 0xE) + ((2 * (BYTE1(v109) ^ 0xE)) & 0xB6)) ^ 0x5D0550FD;
  v125 = *(_DWORD *)&v90[4
                       * (((v109 ^ 0xEA) - ((2 * (v109 ^ 0xEA)) & 0x14) + 1290) ^ 0x502)] ^ *(_DWORD *)&v88[4 * (HIBYTE(v103) ^ 0x1E)] ^ (-724660153 * v119 - ((698163342 * v119 + 1533155266) & 0x6A12FE86) - 491091164) ^ (v120 - ((2 * v120 + 1445099040) & 0x8878653E) + 1867345327);
  v126 = (v123 ^ 0x325DFDDF)
       + ((2 * v123) & 0x64BBFBBE)
       + ((2 * v62 + 630054658) ^ 0x828DCE03)
       + ((2 * (2 * v62 + 630054658)) & 0xB1FFDDFC ^ 0xFEE463FB);
  v127 = (*(_DWORD *)&v84[4 * v124] - ((2 * *(_DWORD *)&v84[4 * v124] + 1445099040) & 0x4C726A5A) - 783650755) ^ *(_DWORD *)&v90[4 * ((((2 * (v103 ^ 0x1893007F)) & 0x31060030) - (v103 ^ 0x1893007F) - 518476825) ^ 0xF98BAB65)] ^ (v126 + 1 - 2 * ((v126 + 111276321) & 0x121CCCB6 ^ (v126 + 1) & 6) - 1195459120);
  v128 = ((BYTE2(v118) ^ 0xBB) + (HIWORD(v118) & 0xF7 ^ 0xC4AFA344) - ((BYTE2(v118) ^ 0xBB) & 0xFFFFFFF7)) ^ 0xA317C129;
  v129 = *(_DWORD *)&v80[4 * ((((2 * v128) & 0xCE706698) - v128 + 411487411) ^ 0x7F3EAE33)];
  v130 = *(_DWORD *)&v84[4
                       * (((BYTE1(v125) ^ 0xB3) + 1375136539 - ((2 * (BYTE1(v125) ^ 0xB3)) & 0x6A) + 26) ^ 0x51F6EB1B)];
  v131 = *(_DWORD *)&v90[4
                       * (((v127 ^ 0xC404043)
                         + (v127 & 0xB8 ^ 0x52A9BDB8)
                         - ((v127 ^ 0xC404043) & 0xC0040B8)) ^ 0x52E9BD9C)] ^ *(_DWORD *)&v88[4 * (HIBYTE(v113) ^ 0x67)] ^ (v130 - 2 * ((v130 + 51460880) & 0x2FEA1FF ^ v130 & 1) - 1374692082) ^ (-724660153 * v129 - ((698163342 * v129 + 1533155266) & 0x5BD10498) + 1536790061);
  v132 = *(_DWORD *)&v80[4
                       * ((((2 * (BYTE2(v125) ^ 0x20C20591)) & 0x10408D4) - (BYTE2(v125) ^ 0x20C20591) - 1084677227) ^ 0x9F9B2656)];
  v133 = *(_DWORD *)&v84[4
                       * ((477401782 - (BYTE1(v127) ^ 0x882249CF | 0x1C7492B6) + (BYTE1(v127) ^ 0x882249CF | 0xE38B6D49)) ^ 0x6BA92474)];
  v134 = *(_DWORD *)&v90[4 * (v113 ^ 0x49)] ^ *(_DWORD *)&v88[4 * (HIBYTE(v118) ^ 0x9E)] ^ (-724660153 * v132 - ((1533155266 - 1449320306 * v132) & 0xC22F1FA6) - 1899455564) ^ (v133 - 2 * ((v133 + 722549520) & 0x5A074537 ^ v133 & 1) + 85491782);
  v135 = *(_DWORD *)&v80[4
                       * ((((2 * (BYTE2(v127) ^ 0x2004201A)) & 0x41B4) - (BYTE2(v127) ^ 0x2004201A) - 370405339) ^ 0xC9E830FD)];
  LODWORD(v62) = -724660153 * v135 - ((1533155266 - 1449320306 * v135) & 0xC1976FDC);
  v136 = (((2 * HIBYTE(v125)) ^ 0x152) - 2 * (((2 * HIBYTE(v125)) ^ 0x152) & 0xDE ^ (2 * HIBYTE(v125)) & 4) + 475) & 0x130;
  v137 = (((HIBYTE(v125) ^ 0xA9) + 152) ^ 0xFFFD33FF)
       + 2 * ((HIBYTE(v125) ^ 0xA9) + 152)
       + (v136 ^ 0x7C800113)
       + ((2 * v136) ^ 0xFFFFFDDF);
  v138 = ((BYTE1(v113) ^ 0x52) + ((v113 >> 8) & 0xB1 ^ 0xB79143A1) - ((BYTE1(v113) ^ 0x52) & 0xB1)) ^ 0xB683E0A5;
  v139 = (v118 & 0xC5 ^ 0x381C1340) + (v118 & 0x3A ^ 0xB) - 1;
  v140 = (((v139 & 0x1261 ^ 0xC2030020) + (v139 ^ 0x2018DE51) - ((v139 ^ 0x2018DE51) & 0x48A61)) ^ 0x25FCA89E) + 1;
  LODWORD(v49) = ((v118 & 0x23 ^ 0x3DC11021) + (v118 & 0xDC ^ 0xC000A811) - 1) ^ 0xFDC1B893;
  v141 = v49 + (v140 ^ 0xECBFCDAE) + ((2 * v140) & 0xD97F9B5C) + 322974290;
  v142 = *(_DWORD *)&v84[4 * ((((2 * v138) & 0x2002A60) - v138 + 605547215) ^ 0x250549EC)];
  LODWORD(v62) = *(_DWORD *)&v90[4 * ((v141 - ((2 * v141) & 0x13848C70) + 163726904) ^ 0xF63DB9C6)
                               + 4 * v49] ^ *(_DWORD *)&v88[4 * v137 - 0x1F1F4D004] ^ (v62 - 1904426033) ^ (v142 - 2 * ((v142 + 185678608) & 0x109056DD ^ v142 & 4) - 1147039255);
  v143 = (1701735354 - (BYTE2(v113) ^ 0x36 | 0x656E6BBA) + (BYTE2(v113) ^ 0x36 | 0x9A919445)) ^ 0xA99D405;
  v144 = *(_DWORD *)&v80[4 * ((v143 - ((2 * v143) & 0x6DEF09A8) + 922191060) ^ 0xA6FFC4FE)];
  v145 = ((v125 ^ 0xF8) - ((2 * (v125 ^ 0xF8)) & 0x170) + 513742264) ^ 0xEBD15B8;
  v146 = *(_DWORD *)&v84[4 * (BYTE1(v118) ^ 0x14)];
  v147 = *(_DWORD *)&v90[4 * ((((2 * v145) | 0xC895B4FA) - v145 - 1682627197) ^ 0x7468DA59)];
  v148 = (-724660153 * v144 - ((698163342 * v144 + 1533155266) & 0x491F64FE) - 767508896) ^ *(_DWORD *)&v88[4 * (HIBYTE(v127) ^ 0xAB)] ^ (v146 - ((2 * v146 + 1445099040) & 0xEBE5757A) - 1593575987);
  HIDWORD(v149) = v147 ^ 0xDE;
  LODWORD(v149) = v147 ^ 0x1D3FB900;
  v150 = (v149 >> 8) - ((2 * (v149 >> 8)) & 0x66B55C0E) + 861580807;
  HIDWORD(v149) = v148 ^ 0xAD;
  LODWORD(v149) = v148 ^ 0x64C30200;
  v151 = ((v149 >> 8) - ((2 * (v149 >> 8)) & 0xFEBDD950) + 2136927400) ^ v150;
  v152 = v62 ^ ((v62 ^ 0xEB41731A) - ((2 * (v62 ^ 0xEB41731A) + 2) & 0x69604080) + 883957825) ^ ((v62 ^ 0xC7F0F125)
                                                                                               - ((2
                                                                                                 * (v62 ^ 0xC7F0F125)
                                                                                                 + 1499661440) & 0x77A7DADC)
                                                                                               + 1753575342) ^ 0x1BDD41CB;
  v153 = v152 - ((2 * v152 + 1499661438) & 0xDF536A8E) + 475740038;
  HIDWORD(v149) = v151 ^ 0x2AAA34;
  LODWORD(v149) = v151 ^ 0x1F000000;
  v154 = ((BYTE2(v134) ^ 0x1B) + (HIWORD(v134) & 0x85 ^ 0x7EF99384) - ((BYTE2(v134) ^ 0x1B) & 0x85)) ^ 0x7EFB13A5;
  v155 = *(_DWORD *)&v80[4 * ((v154 - ((2 * v154) & 0x4074E) + 1877697447) ^ 0x6FE9E39B)];
  v156 = (((2 * (BYTE1(v153) ^ 0xD4)) & 0x166) - (BYTE1(v153) ^ 0xD4) + 1467449932) ^ 0x53D6A22C;
  v157 = *(_DWORD *)&v84[4 * ((v156 - ((2 * v156) & 0x142010A) + 1889867909) ^ 0x74043852)];
  v158 = (v149 >> 24) - ((2 * (v149 >> 24)) & 0x126139AC) - 1993302826;
  v159 = *(_DWORD *)&v90[4 * ((BYTE3(v149) - ((2 * BYTE3(v149)) & 0xAC) - 42) ^ 0x18)] ^ *(_DWORD *)&v88[4 * (HIBYTE(v131) ^ 0xE1)] ^ (-724660153 * v155 - ((1533155266 - 1449320306 * v155) & 0xC8541732) - 1847912582) ^ (v157 - ((2 * v157 + 102921760) & 0xE666EC4) + 843346546);
  v160 = *(_DWORD *)&v80[4
                       * (((BYTE2(v153) ^ 0x33E01E08)
                         + (HIWORD(v153) & 0xAC ^ 0x80880A4)
                         - ((BYTE2(v153) ^ 0x33E01E08) & 0x2A016AC)) ^ 0x394888C8)];
  v161 = *(_DWORD *)&v84[4
                       * ((708512064 - (BYTE1(v158) ^ 0x65 | 0x2A3B0940) + (BYTE1(v158) ^ 0x65 | 0x55C4F6BF)) ^ 0x55C4F6E7)];
  v162 = *(_DWORD *)&v90[4
                       * ((232687379
                         - (v131 ^ 0xC010406 | 0xDDE8713)
                         + (v131 ^ 0xC010406 | 0xF22178EC)) ^ 0xFE207CD7)] ^ *(_DWORD *)&v88[4 * (HIBYTE(v134) ^ 0x3F)] ^ (-724660153 * v160 - ((1533155266 - 1449320306 * v160) & 0xC2FFD828) - 1892616203) ^ (v161 - 2 * ((v161 + 722549520) & 0x6204FB0E ^ v161 & 8) - 1927924202);
  v163 = *(_DWORD *)&v80[4 * (BYTE2(v158) ^ 0x55)];
  v164 = *(_DWORD *)&v84[4 * ((((2 * (BYTE1(v131) ^ 0xA4)) & 0x5C) - (BYTE1(v131) ^ 0xA4) + 4305) ^ 0x102F)];
  v165 = ((2 * (v134 ^ 0x84)) | 0x6636C4DC) - (v134 ^ 0x84) - 857432686;
  LODWORD(v49) = ((2 * (BYTE2(v131) ^ 0xEA)) | 0x10A4B21E) - (BYTE2(v131) ^ 0xEA) - 139614479;
  v166 = (-724660153 * v163 - ((1533155266 - 1449320306 * v163) & 0x93CC1FCE) + 2006391752) ^ *(_DWORD *)&v88[4 * (HIBYTE(v153) ^ 0x77)] ^ *(_DWORD *)&v90[4 * (((v165 & 0x2208093D ^ 0x6848905) + (v165 & 0x111376C2 ^ 0x981372C3) - 1) ^ 0xAD8C9974)] ^ (v164 - ((2 * v164 + 1445099040) & 0xF7A9221E) + 652594207);
  v167 = *(_DWORD *)&v80[4 * (((v49 & 0x405069 ^ 0x6285A020) + (v49 & 0x8120F96 ^ 0x89000007) - 1) ^ 0xE3D7F914)];
  LODWORD(v49) = *(_DWORD *)&v88[4 * (HIBYTE(v158) ^ 0xD5)];
  HIDWORD(v149) = ~(_DWORD)v49;
  LODWORD(v149) = v49 ^ 0xB5BE0A6C;
  v168 = -724660153 * v167 - ((27074702 * v167 + 56760258) & 0x55F6E66) - 1335835884;
  v169 = (((v167 << 30) ^ 0x40000000) & 0xC0000000 | (v168 >> 2)) ^ 0x20ABEDCC;
  v170 = (v169 - 2 * (v169 & 0x6B5E82DB ^ (v168 >> 2) & 0x12) - 346127671) ^ ((v149 >> 2)
                                                                            - ((2 * (v149 >> 2)) & 0xFE973B18)
                                                                            - 11821684);
  v171 = ((v134 >> 8) & 0x19 ^ 0xA93FC719) - ((v134 >> 8) & 0x19) + BYTE1(v134);
  LODWORD(v49) = ((2 * (v153 ^ 0x3E)) & 0xFFFFFFDF) - (v153 ^ 0x3E) - 2095035888;
  v172 = *(_DWORD *)&v84[4
                       * (((v171 ^ 0xA50F4F7B) + (v171 & 0x80010722) - ((v171 ^ 0xA50F4F7B) & 0x108722) + 4206592) ^ 0x8C613FC9)];
  HIDWORD(v149) = v170 ^ 0x14151F45;
  LODWORD(v149) = v170;
  v173 = (v172 - ((2 * v172 + 1445099040) & 0xC5441ED2) - 1917629831) ^ *(_DWORD *)&v90[4
                                                                                      * (((v49 & 0x300020F ^ 0x404A9606)
                                                                                        + (v49 ^ 0x3000859)
                                                                                        - ((v49 ^ 0x3000859) & 0x20020F)) ^ 0xC34AD486)] ^ ((v149 >> 30) - ((2 * (v149 >> 30)) & 0xB5824266) + 1522606387);
  v174 = *(_DWORD *)&v80[4 * (BYTE2(v162) ^ 0x4D)];
  v175 = *(_DWORD *)&v84[4
                       * ((((2 * (BYTE1(v166) ^ 0x3901A76)) | 0xA6AFD45A) - (BYTE1(v166) ^ 0x3901A76) - 1398270509) ^ 0x50C7F01A)];
  LODWORD(v49) = (((2 * (v173 ^ 0xA9)) & 0x1E8) - (v173 ^ 0xA9) + 556684555) ^ 0x46CD502B;
  v176 = ((BYTE2(v166) ^ 0x8B) - ((2 * (BYTE2(v166) ^ 0x8B)) & 0x3C) - 1160118498) ^ 0xAA9D781F;
  LODWORD(v62) = ((2 * v176) & 0x201B8CAC) - v176;
  v177 = *(_DWORD *)&v90[4 * ((((2 * (_DWORD)v49) | 0xA97E3F4A) - v49 - 1421811621) ^ 0x335C1AC7)] ^ *(_DWORD *)&v88[4 * (HIBYTE(v159) ^ 0x22)] ^ (-724660153 * v174 - ((1533155266 - 1449320306 * v174) & 0xF3A0627A) + 662781214) ^ (v175 - 2 * ((v175 + 722549520) & 0x64D87281 ^ v175 & 1) - 1880511088);
  v178 = *(_DWORD *)&v80[4 * (((_DWORD)v62 + 576862633) ^ 0x3226BE57)];
  v179 = -724660153 * v178 - ((1533155266 - 1449320306 * v178) & 0x8451C3B2) - 270930502;
  v180 = *(_DWORD *)&v84[4
                       * (((BYTE1(v173) ^ 0x2304C194)
                         + ((v173 >> 8) & 0x75 ^ 0x4A12261)
                         - ((BYTE1(v173) ^ 0x2304C194) & 0x20004175)) ^ 0x7A5A239)];
  LODWORD(v62) = *(_DWORD *)&v88[4 * (HIBYTE(v162) ^ 0xD2)];
  v181 = (v62 ^ 0x88691449 ^ v179) + 1;
  LODWORD(v62) = v62 ^ 0xB5BE0A6F;
  v182 = v62 + (v181 ^ 0xCF7FEFF9) + ((2 * v181) & 0x9EFFDFF2) + 813699079;
  v183 = (v179 ^ ((v179 ^ 0x3DD71E26) - ((2 * (v179 ^ 0x3DD71E26) + 2) & 0x26788850) + 322716713) ^ 0x2E9310DF ^ (v182 - ((2 * v182) & 0xFF0F6A5C) - 7883474))
       + v62;
  v184 = (v180 - 2 * ((v180 + 185678608) & 0xC11555C ^ v180 & 0xC) - 1222471584) ^ *(_DWORD *)&v90[4
                                                                                                 * (((v159 ^ 0xBD) - ((2 * (v159 ^ 0xBD)) & 0x6A) + 1077) ^ 0x481)] ^ (v183 - ((2 * v183) & 0xC7BBB540) - 471999840);
  v185 = *(_DWORD *)&v80[4
                       * (((BYTE2(v173) ^ 0xBB) - 1344151501 - ((2 * (BYTE2(v173) ^ 0xBB)) & 0x1FC) + 203) ^ 0xAFE1E033)];
  v186 = *(_DWORD *)&v84[4 * (BYTE1(v159) ^ 0x99)];
  LODWORD(v49) = (((2 * (v162 ^ 0x8C)) & 0x3C) - (v162 ^ 0x8C) + 949704161) ^ 0x38BBD5EB;
  v187 = *(_DWORD *)&v90[4 * (((_DWORD)v49 - ((2 * (_DWORD)v49) & 0x410A4E) + 2003432743) ^ 0x77497515)] ^ *(_DWORD *)&v88[4 * (HIBYTE(v166) ^ 0x27)] ^ (1108745504 - v186 - ((-1445099042 - 2 * v186) & 0xDA4EB062)) ^ (-724660153 * v185 - ((1533155266 - 1449320306 * v185) & 0xB87CAB8E) - 1980800600);
  v188 = *(_DWORD *)&v80[4
                       * (((BYTE2(v159) ^ 0x831214B8) - ((2 * (BYTE2(v159) ^ 0x831214B8)) & 0x22409C8) - 1114214940) ^ 0x3E847985)];
  v189 = *(_DWORD *)&v84[4
                       * ((-28567102 - (BYTE1(v162) ^ 0xA660008F | 0xFE4C19C2) + (BYTE1(v162) ^ 0xA660008F | 0x1B3E63D)) ^ 0xA7D3E6E9)];
  v190 = *(_DWORD *)&v88[4 * (HIBYTE(v173) ^ 0xD6)] ^ (v189 - ((2 * v189 + 1445099040) & 0xB6BECB1E) + 108044447) ^ 0xCD22F5BD ^ (-724660153 * v188 - ((698163342 * v188 + 1533155266) & 0x478734BA) - 780884418);
  v191 = *(_DWORD *)&v90[4
                       * (((v166 ^ 0x10008C4)
                         - ((2 * (v166 ^ 0x10008C4)) & 0x1FFFFF0)
                         + 1257238008) ^ 0x4BEFE5CE)] ^ 0x1D3FB9DE;
  v192 = (v190 & v191) - ((2 * (v190 & v191)) & 0xD695AA34);
  v193 = ((10981 - (_WORD)v192) & 0x200 ^ 0x9FEBFF53) + 2 * ((10981 - (_WORD)v192) & 0x200);
  v194 = ((2 * (v190 | v191)) & 0xF8FFFEB2) + ((v190 | v191) ^ 0x7C7FFF59);
  v195 = ((v192 + 1800066330) & 0xFFFFFDFF ^ 0x4A0F097B)
       - ((2 * ((v192 + 1800066330) & 0xFFFFFDFF ^ 0x4A0F097B)) & 0x8AA7B916);
  v196 = ((v193 + 1611923629) & (v194 - 2088763225))
       - 1082470143
       - ((2 * ((v193 + 1611923629) & (v194 - 2088763225))) & 0x7EF5A000) == -1082470143;
  v197 = v193 + 2075590400;
  v198 = -1148256858 - v193;
  if (!v196)
    v197 = v198;
  v199 = (v197 + v194 - ((2 * (v197 + v194) - 809892696) & 0xBAD10498) + 1162183840) ^ (v195 + 1163123851);
  v200 = HIBYTE(v177) ^ 0x39;
  v201 = v200
       + (((HIBYTE(v177) ^ 0xFFFFFF5E) + 1) ^ 0xCBBBFFB7)
       + ((2 * ((HIBYTE(v177) ^ 0xFFFFFF5E) + 1)) & 0x9777FF6E)
       + 876871753;
  v202 = ((v201 - ((2 * v201) & 0xB066AABE) - 667724449) ^ 0x27CCAAAF) + v200;
  v203 = (1665769021 - (BYTE1(v187) ^ 0x72 | 0x63499E3D) + (BYTE1(v187) ^ 0x72 | 0x9CB661C2)) ^ 0xC3C6185;
  v204 = *(_DWORD *)&v84[4 * ((((2 * v203) | 0x8A749C6E) - v203 + 986034633) ^ 0x55B04EF5)];
  v205 = *(_DWORD *)&v80[4 * (BYTE2(v184) ^ 0xA)];
  v206 = (v199 ^ 0x38) + (v199 & 0xF6 ^ 0x45C6) - ((v199 ^ 0x38) & 0xF6);
  v207 = *(_DWORD *)&v90[4 * (((v206 & 0x5D9 ^ 0x17C08419) + (v206 & 0x226 ^ 0x48000003) - 1) ^ 0x5FC08144)] ^ *(_DWORD *)&v88[4 * v202] ^ (-724660153 * v205 - ((1533155266 - 1449320306 * v205) & 0xB089768C) + 99993383) ^ (v204 - ((2 * v204 + 1445099040) & 0xA5740758) - 37011780);
  v208 = *(_DWORD *)&v80[4 * (BYTE2(v187) ^ 0x39)];
  v209 = ((BYTE1(v199) ^ 0xDD) - ((2 * (BYTE1(v199) ^ 0xDD)) & 0xBA) + 1137280861) ^ 0x7BC18F5C;
  v210 = *(_DWORD *)&v84[4 * ((((2 * v209) | 0x65A38E32) - v209 - 852608793) ^ 0xAD9CFA5)];
  v211 = ((BYTE2(v199) ^ 0xFE) + (HIWORD(v199) & 0xCF ^ 0xC1A17701) - ((BYTE2(v199) ^ 0xFE) & 0xFFFFFFCF)) ^ 0xC1AD572B;
  v212 = *(_DWORD *)&v90[4
                       * (((v177 ^ 0x4A)
                         + (v177 & 0xC5 ^ 0xF7573B85)
                         - ((v177 ^ 0x4A) & 0xC5)) ^ 0xF7573B3E)] ^ (-724660153 * v208
                                                                                    - ((698163342 * v208 + 459413442) & 0x3404E556)
                                                                                    + 1202945676) ^ *(_DWORD *)&v88[4 * (HIBYTE(v184) ^ 0x23)] ^ (v210 - 2 * ((v210 + 722549520) & 0x4AFE207F ^ v210 & 9) - 166765690);
  v213 = *(_DWORD *)&v80[4 * ((v211 - ((2 * v211) & 0x18592C) + 71216278) ^ 0x4328CE6)];
  v214 = -724660153 * v213 - ((1533155266 - 1449320306 * v213) & 0xBCD3B5AA);
  v215 = *(_DWORD *)&v84[4 * (((BYTE1(v177) ^ 0x18) + 1774296095 - 2 * ((BYTE1(v177) ^ 0x18) & 0x1F)) ^ 0x69C19CD2)];
  v216 = *(_DWORD *)&v90[4 * (v184 ^ 0xDD)];
  v217 = *(_DWORD *)&v88[4 * (HIBYTE(v187) ^ 0xB6)] ^ (v215 - ((2 * v215 + 1445099040) & 0xDA9428BC) - 1738846354);
  v218 = v216 ^ 0x1D3FB9DE;
  if (((2 * ((777367338 - (v216 & 2)) ^ 0xFDF4AF29)) | 0xF35F958) - ((777367338 - (v216 & 2)) ^ 0xFDF4AF29) == -606668455)
    v219 = 2;
  else
    v219 = -2;
  v220 = (v214 + 203089590) ^ v217 ^ (v219 + v218 - ((2 * (v219 + v218)) & 0x1A968AC) - 2133543850);
  v221 = (BYTE2(v177) ^ 0x8E | 0xCC1FC7E3) - (BYTE2(v177) ^ 0x8E | 0x33E0381C) + 870332444;
  v222 = *(_DWORD *)&v80[4
                       * (((v221 & 0x80FCE92 ^ 0x9431812) + (v221 ^ 0xE03CC7C1) - ((v221 ^ 0xE03CC7C1) & 0x96FDE92)) ^ 0x254CDE99)];
  v223 = (BYTE1(v184) ^ 0x16) - ((2 * (BYTE1(v184) ^ 0x16)) & 0xFFFFFF0F) + 1341668999;
  v224 = *(_DWORD *)&v84[4 * (((v223 ^ 0x4C7C3CA2) - (v223 & 0x80021D) + (v223 & 0x44701A1D ^ 0x1C21D)) ^ 0x4775D8DB)];
  v225 = ((v187 & 0x7B ^ 0x9221E0D4) - (v187 & 0x84)) ^ 0xB635A084;
  v226 = *(_DWORD *)&v90[4 * ((((2 * v225) & 0x4828800C) - v225 + 27498745) ^ 0x25B7D810)] ^ (-724660153 * v222
                                                                                            - ((698163342 * v222
                                                                                              + 459413442) & 0x22BA9AF0)
                                                                                            - 1089578663) ^ *(_DWORD *)&v88[4 * (HIBYTE(v199) ^ 0x26)] ^ (v224 - ((2 * v224 + 1445099040) & 0xB8E16988) - 2021527596);
  v227 = ((((v226 ^ 0x4527BF28) >> (BYTE1(v184) & 0x10))
         + 1597425070
         - ((2 * ((v226 ^ 0x4527BF28) >> (BYTE1(v184) & 0x10))) & 0xBE6D8B5C)) ^ 0x5F36C5AE) >> (BYTE1(v184) & 0x10 ^ 0x10);
  v228 = v227 - ((2 * v227) & 0x6C);
  v229 = *(_DWORD *)&v80[4 * (((BYTE2(v212) ^ 7) - ((2 * (BYTE2(v212) ^ 7)) & 0x4E) + 1063) ^ 0x459)];
  v230 = ((-1714288416 * v229 - ((866390464 * v229 + 1816328256) & 0x5C7895C0) - 463616243) ^ 0x2E3C4AED) & 0xFFFFFFE0 | ((-724660153 * v229 - ((698163342 * v229 + 459413442) & 0x288EB1F2u) - 1040685862) >> 27);
  v231 = *(_DWORD *)&v88[4 * (HIBYTE(v207) ^ 0xB8)];
  HIDWORD(v232) = v231 ^ 0x5BE0A6F;
  LODWORD(v232) = v231 ^ 0xB0000000;
  v233 = ((v230 ^ 0x12) + 676746693 + (~(2 * v230) | 0xAF535477)) ^ ((v232 >> 27)
                                                                   - ((2 * (v232 >> 27)) & 0xFD5FFD8C)
                                                                   - 22020410);
  HIDWORD(v232) = v233 ^ 0x12;
  LODWORD(v232) = v233 ^ 0xCBB22800;
  v234 = ((2 * (BYTE1(v220) ^ 0xAD)) | 0xC2DC2D7C) - (BYTE1(v220) ^ 0xAD) - 1634604734;
  v235 = (((2 * (v226 ^ 0x89)) & 0x52) - (v226 ^ 0x89) - 84564266) ^ 0x2AB186D7;
  v236 = *(_DWORD *)&v84[4 * (((v234 & 0x600215CC ^ 0x90808141) + (v234 & 0x16C0233) - 1) ^ 0xF1EE97F9)];
  v237 = (2024547247 - v236 - ((702384606 - 2 * v236) & 0x477ABD80)) ^ *(_DWORD *)&v90[4
                                                                                     * ((-97523511
                                                                                       - (v235 | 0xFA2FE8C9)
                                                                                       + (v235 | 0x5D01736)) ^ 0xD594372F)] ^ ((v232 >> 5) - ((2 * (v232 >> 5)) & 0xF2FA715E) + 2038249647);
  v238 = (BYTE1(v226) ^ 0x35 | 0x7BEE2167) - (BYTE1(v226) ^ 0x35 | 0x8411DE98) - 2079203688;
  v239 = *(_DWORD *)&v80[4 * (BYTE2(v220) ^ 0x73)];
  v240 = *(_DWORD *)&v84[4 * (((v238 & 0x22A62383 ^ 0x8425E380) + (v238 & 0x5948007C ^ 0x51481001) - 1) ^ 0xAE83D2BB)];
  v241 = *(_DWORD *)&v90[4
                       * (((v207 ^ 0xA8)
                         + (v207 & 0x99 ^ 0xBF251411)
                         - ((v207 ^ 0xA8) & 0x99999999)) ^ 0xBF25146A)] ^ *(_DWORD *)&v88[4 * (HIBYTE(v212) ^ 0x8F)] ^ (v240 - 613916970 + (~(2 * v240 + 1445099040) | 0x9F51B875)) ^ (-724660153 * v239 - ((698163342 * v239 + 1533155266) & 0x61AF5BF4) - 561464869);
  v242 = *(_DWORD *)&v80[4 * ((v228 + 54) ^ 0xF3)];
  v243 = *(_DWORD *)&v84[4 * (BYTE1(v207) ^ 0xA4)];
  v244 = *(_DWORD *)&v90[4
                       * (((v212 ^ 0x22E90070)
                         + (v212 & 0x25 ^ 0x4C127905)
                         - ((v212 ^ 0x22E90070) & 0x600025)) ^ 0x6E9B7993)] ^ *(_DWORD *)&v88[4 * (HIBYTE(v220) ^ 0x1D)] ^ (v243 - 2 * ((v243 + 722549520) & 0x4556BB7C ^ v243 & 4) + 1885861512) ^ (-724660153 * v242 - ((1533155266 - 1449320306 * v242) & 0xC2DB58B4) + 253671483);
  v245 = BYTE1(v212) ^ 0x42;
  v246 = v245 - 1567298131 - ((v212 >> 7) & 0x15A);
  v247 = (((2 * ((v212 >> 8) & 0xFFFFD6 ^ 0xFFFFFFC6)) | 0x5C) - ((v212 >> 8) & 0xFFFFD6 ^ 0xFFFFFFC6) - 46) ^ 0xFFFFFFAA;
  v248 = ((v245 << 26) - ((v245 & 0xFFFFFFFB ^ (v212 >> 8) & 8) << 27) + 1275068416) ^ 0x4C000000;
  v249 = *(_DWORD *)&v80[4
                       * (((BYTE2(v207) ^ 0x5825015A)
                         + (HIWORD(v207) & 0x32 ^ 0xA498AE20)
                         - ((BYTE2(v207) ^ 0x5825015A) & 0x18010032)) ^ 0xE4BCAF8A)];
  v250 = (v248 - 629881232 - ((2 * v248) & 0xB0000000)) ^ 0xDA74C670 | ((((unsigned __int16)v212 >> 14) ^ 1)
                                                                      + 1727878590
                                                                      + 2
                                                                      * ((((unsigned __int16)v212 >> 14) ^ 1 | 0x7FFFFFFE) ^ ((unsigned __int16)v212 >> 14))
                                                                      + 2) ^ 0x66FD55BE;
  v251 = (-724660153 * v249 - ((1533155266 - 1449320306 * v249) & 0xF9FA7BAC) + 716065207) ^ *(_DWORD *)&v88[4 * (HIBYTE(v226) ^ 0xDD)];
  v252 = 2
       * (((((2 * v247) & 0x7C) - v247 + 64) ^ 0x40)
        - ((2 * ((((2 * v247) & 0x7C) - v247 + 64) ^ 0x40)) & 0xAC))
       - 18288468;
  v253 = (((v246 ^ 0xA294EDAD) + 214) ^ 0xBBBBB7ED)
       + ((2 * ((v246 ^ 0xA294EDAD) + 214)) & 0x77776FDA)
       + (v252 ^ 0x34E4E20D)
       + 2050504051
       + ((2 * v252) & 0x69C1DABC ^ 0x963E3FE7);
  HIDWORD(v232) = v246 ^ 0x17;
  LODWORD(v232) = v246 ^ 0x28274740;
  v254 = (v250 - ((2 * v250) & 0xE2ADF032) + 1901525017) ^ ((v232 >> 6) - ((2 * (v232 >> 6)) & 0xD154E022) - 391483375);
  v255 = ((((v254 ^ 0xA7F2E095) >> (v244 & 0x1A ^ 0x10))
         + 948429066
         + (~(2 * ((v254 ^ 0xA7F2E095) >> (v244 & 0x1A ^ 0x10))) | 0x8EF03DEB)
         + 1) ^ 0x3887E10A) >> (v244 & 0x1A ^ 0xA);
  v256 = *(_DWORD *)&v84[4 * v253]
       - 1604481002
       + ((((v254 << 6) ^ 0xFCB82540) - ((2 * ((v254 << 6) ^ 0xFCB82540)) & 0xD46CE980) + 1781953788) ^ 0xC3CEB5BB ^ (v255 - ((2 * v255) & 0x54C5CC10) + 711124488));
  v257 = v251 ^ (v256 - ((2 * v256) & 0x4FE3D68E) + 670165831);
  v258 = ((((v237 ^ 0xFE1E6F85) >> (v257 & 0x18 ^ 0x18))
         + 1366379892
         - ((2 * ((v237 ^ 0xFE1E6F85) >> (v257 & 0x18 ^ 0x18))) & 0xA2E29AE8)) ^ 0x51714D74) >> (v257 & 0x18);
  v259 = ((v220 & 0x20) + (v220 ^ 0xFFFFFFBD) + (v220 | 0xA97783DF) + 1) ^ 0x28F7C10A;
  v260 = v257 ^ *(_DWORD *)&v90[4 * ((1074303026 - (v259 | 0x40089032) + (v259 | 0xBFF76FCD)) ^ 0x3E772D18)];
  v261 = (BYTE2(v241) ^ 0x4A) - ((2 * (BYTE2(v241) ^ 0x4A)) & 0x16) + 16395;
  v262 = (BYTE2(v241) ^ 0xFFFFFFAB) - 1267994446 - ((2 * (BYTE2(v241) ^ 0xFFFFFFAB) + 396) & 0x68D7E164) + 198;
  v263 = (v261 ^ 0xFFFFBF2F) - ((2 * (v261 ^ 0xFFFFBF2F) + 2) & 0x1B890834) - 1916500965;
  v264 = (v261 ^ v263 ^ 0x654A729C ^ ((v262 ^ 0xB46BF0B2)
                                    + (v261 ^ 0x4B944F9D ^ v262)
                                    + 1
                                    - ((2 * ((v262 ^ 0xB46BF0B2) + (v261 ^ 0x4B944F9D ^ v262) + 1)) & 0xD11D6CAC)
                                    - 393300394))
       + (v262 ^ 0xB46BF0B2);
  v265 = (((v258 - ((2 * v258) & 0xA6) - 45) ^ 0x7D)
        + ((v258 - ((2 * v258) & 0xA6) + 467) & 0xB6 ^ 0xD49D2082)
        - (((v258 - ((2 * v258) & 0xA6) - 45) ^ 0x7D) & 0xB6)) ^ 0x815C6096;
  v266 = *(_DWORD *)&v80[4 * (v263 ^ 0x2FA993B6 ^ (v264 - ((2 * v264) & 0x44DA2F58) - 1569908820)) + 788];
  v267 = *(_DWORD *)&v84[4
                       * ((((2 * (BYTE1(v244) ^ 0xEE)) | 0xDCAC41AA) - (BYTE1(v244) ^ 0xEE) + 296345387) ^ 0xEE5620F5)];
  v268 = *(_DWORD *)&v90[4
                       * ((461242813
                         - (v260 ^ 0x8128405 | 0x1B7E01BD)
                         + (v260 ^ 0x8128405 | 0xE481FE42)) ^ 0xEC937A90)] ^ (-724660153 * v266
                                                                                             - ((698163342 * v266
                                                                                               + 459413442) & 0x206BB9B8)
                                                                                             - 1108940611) ^ (v267 - 2 * ((v267 + 185678608) & 0x1A1BE9DF ^ v267 & 2) + 1160586477) ^ *(_DWORD *)&v88[4 * ((v265 - ((2 * v265) & 0x8102552E) - 928830825) ^ 0x9D626A81)];
  v269 = *(_DWORD *)&v80[4 * ((((2 * (BYTE2(v244) ^ 0x2F)) & 0xCE) - (BYTE2(v244) ^ 0x2F) + 1176) ^ 0x402)];
  v270 = ((2 * (BYTE1(v260) ^ 0x5B)) & 0x78) - (BYTE1(v260) ^ 0x5B) + 1833998275;
  v271 = *(_DWORD *)&v84[4
                       * (((v270 & 0x205085E3 ^ 0x12A14520) + (v270 ^ 0xE852A2C3) - ((v270 ^ 0xE852A2C3) & 0x850205E3)) ^ 0x32F1F08D)];
  v272 = (1608127927 - (v237 ^ 0xD2 | 0x5FDA15B7) + (v237 ^ 0xD2 | 0xA025EA48)) ^ 0xA8AD1E09;
  v273 = ((2 * (BYTE2(v260) ^ 0x9C)) & 0x1CA) - (BYTE2(v260) ^ 0x9C) + 1909202202;
  v274 = *(_DWORD *)&v90[4 * ((v272 - ((2 * v272) & 0x362872DE) - 1693173393) ^ 0x939CCDC0)] ^ *(_DWORD *)&v88[4 * (HIBYTE(v241) ^ 0x3D)] ^ ((~(1533155266 - 1449320306 * v269) | 0x2B87E999) - 724660153 * v269 - 1746069739) ^ (v271 - 2 * ((v271 + 722549520) & 0x2A53719F ^ v271 & 0xF) + 1432661152);
  v275 = *(_DWORD *)&v80[4
                       * (((v273 & 0x4004018E ^ 0x13A084) + (v273 ^ 0x5504552A) - ((v273 ^ 0x5504552A) & 0x20C8418E)) ^ 0x4417A98E)];
  v276 = (v241 & 0xFD ^ 0x81802870 | v241 & 2 | 0x4454100) ^ 0x916D7D7B;
  v277 = *(_DWORD *)&v84[4
                       * ((((2 * (BYTE1(v237) ^ 0x2043C15F)) & 0x40838102) - (BYTE1(v237) ^ 0x2043C15F) + 1579820414) ^ 0x7E69E498)];
  v278 = *(_DWORD *)&v90[4
                       * (((((v241 & 0xFD ^ 0x81802870) & 0x81410E4F | v241 & 2 | 0x410000) ^ 0x6A120204)
                         + v276
                         - (v276 & 0x4A0044F)) ^ 0xFB5B1A53)];
  v279 = ((2 * v278) ^ 0x3A7F73BC) - ((2 * ((2 * v278) ^ 0x3A7F73BC)) & 0x3FD58EE4);
  v280 = ((2 * ((v278 ^ 0x1D3FB9DE) + 1281678947)) & 0xEEDFBF1E)
       + (((v278 ^ 0x1D3FB9DE) + 1281678947) ^ 0x776FDF8F)
       + ((v279 - 1612003470) & 0x98C9BCC6 ^ 0x18C1C64F)
       + ((2 * (v279 - 1612003470)) & 0x31817984 ^ 0xCE7EF77B);
  v281 = (-724660153 * v275 - ((1533155266 - 1449320306 * v275) & 0xFAB2D5B2) - 1425377606) ^ *(_DWORD *)&v88[4 * (HIBYTE(v244) ^ 0xBE)] ^ (v277 - 2 * ((v277 + 722549520) & 0x685280BD ^ v277 & 5) - 1822180408) ^ (v280 - ((2 * v280 + 900298) & 0x933A2) + 143358006);
  LOWORD(v280) = ((2 * (BYTE1(v241) ^ 0xF7)) & 0x96) - (BYTE1(v241) ^ 0xF7) + 7348;
  v282 = *(_DWORD *)&v80[4
                       * (((BYTE2(v237) ^ 0x280BF) - ((2 * (BYTE2(v237) ^ 0x280BF)) & 0x112) - 1944761207) ^ 0x8C17CCED)];
  v283 = *(_DWORD *)&v84[4 * (((v280 & 0x8B ^ 0x3023500B) + (v280 & 0x774 ^ 0x121) - 1) ^ 0x302355FC)];
  v284 = *(_DWORD *)&v90[4
                       * ((((2 * (v244 ^ 0x482116DA)) | 0xFB023F90)
                         - (v244 ^ 0x482116DA)
                         - 2105614280) ^ 0x35A009B3)] ^ *(_DWORD *)&v88[4 * (HIBYTE(v260) ^ 0xC5)] ^ (v283 - ((2 * v283 + 371357216) & 0x3D557ACA) - 910428043) ^ (-724660153 * v282 - ((1533155266 - 1449320306 * v282) & 0x824114DE) + 1859229264);
  v285 = (BYTE1(v281) ^ 0x54 | 0x8B8D4AB1) - (BYTE1(v281) ^ 0x54 | 0x7472B54E) + 1953674574;
  v286 = *(_DWORD *)&v80[4 * (((BYTE2(v274) | 0x7B0) - (BYTE2(v274) | 0x84F) + 2127) ^ 0x7CE)];
  v287 = (-724660153 * v286 - ((1533155266 - 1449320306 * v286) & 0xA1FEF372) - 21985894) ^ *(_DWORD *)&v88[4 * (HIBYTE(v268) ^ 0x45)];
  v288 = ((2 * v287) ^ 0xA2C8D1A6) - ((2 * ((2 * v287) ^ 0xA2C8D1A6)) & 0x64E5C97C);
  v289 = (((v287 ^ 0xD16468D3) - 1272636667) ^ 0xDF7E77FF)
       + ((2 * ((v287 ^ 0xD16468D3) - 1272636667)) & 0xBEFCEFFE)
       + ((v288 - 1301093185) & 0x684A360A ^ 0x2A4A2E0B)
       + ((2 * (v288 - 1301093185)) & 0xC0846814 ^ 0xBF7BB7EB);
  v290 = *(_DWORD *)&v84[4
                       * (((v285 & 0x3054B86 ^ 0x10522800) + (v285 ^ 0xA305D387) - ((v285 ^ 0xA305D387) & 0x1357EB86)) ^ 0x3BDF7293)];
  v291 = (v290 - 858321985 + ~(2 * ((v290 + 722549520) & 0x21C5D0AF ^ v290 & 1))) ^ *(_DWORD *)&v90[4 * (v284 ^ 0xB8)] ^ (v289 + 1 - 2 * ((v289 + 377060865) & 0x47042ABD ^ (v289 + 1) & 0x10) - 578967379);
  v292 = 2 * HIWORD(v281);
  v293 = (v292 ^ 0x69DE) - ((2 * (v292 ^ 0x69DE)) & 0x9C);
  v294 = *(_DWORD *)&v80[4
                       * ((BYTE2(v281) ^ 0x4EEA7B4B)
                        - (v292 | 0xFFFFFEB7)
                        - ((v293 + 847) & 0x18A)
                        - ((-672 - 2 * v293) & 0x214))
                       - 0x13BA9E758];
  v295 = -724660153 * v294 - ((161292430 * v294 + 190977986) & 0xE4A1C66);
  v296 = (((v284 >> 8) & 4) + (BYTE1(v284) ^ 0xFFFFFF3C) + (BYTE1(v284) | 0x804B14FB) + 1) ^ 0xA51BDFF3;
  v297 = *(_DWORD *)&v84[4 * ((v296 - ((2 * v296) & 0x64EE41C8) + 1920409828) ^ 0x5727EB32)];
  v298 = v297 - ((2 * v297 + 1445099040) & 0xFEBFC19E);
  v299 = (v268 & 0x46 ^ 0xBF) + 1104186980 + ((2 * v268) & 0x88 ^ 0xFFFFFFB7) + 1;
  v300 = ((-1680093075 - (v268 ^ 0xF6 | 0x9BDBD06D) + (v268 ^ 0xF6 | 0x64242F92)) ^ 0x9BDBD02D)
       + 1;
  v301 = (v299 ^ 0x41D08E64) + (v300 ^ 0xFFADFF95) + ((2 * v300) & 0xFF5BFF2A) + 5374059;
  v302 = v299 ^ 0xD1A3A92F ^ (v301 - ((2 * v301) & 0x20E64E96) - 1871501493);
  v303 = *(_DWORD *)&v80[4
                       * ((1255293756 - (BYTE2(v284) ^ 0xAF | 0x4AD2433C) + (BYTE2(v284) ^ 0xAF | 0xB52DBCC3)) ^ 0xB52DBCD9)];
  v304 = ((2 * (~(v268 >> 8) & 0x7B)) | 0x8E6E5F76) - (~(v268 >> 8) & 0x7B) - 1194799035;
  v305 = (v304 ^ 0xB8C8D02E) + 1;
  v304 ^= 0x47372F83u;
  v306 = v304 + (v305 ^ 0x99F7DF2F) + ((2 * v305) & 0x33EFBE5E) + 1711808721;
  v307 = ((v306 - 1032268184 + (~(2 * v306) | 0x7B0E5331)) ^ 0x3D87299B) + v304;
  v308 = *(_DWORD *)&v84[4 * ((v268 >> 8) & 0x84 ^ 0xB8C0DA69 ^ (v307 - ((2 * v307) & 0x7181B5DA) - 1195320595))];
  v309 = *(_DWORD *)&v90[4 * v302] ^ *(_DWORD *)&v88[4 * (HIBYTE(v274) ^ 0xA6)] ^ (v295 + 886446612) ^ (v298 - 1435427873);
  v310 = -724660153 * *(_DWORD *)&v80[4 * (BYTE2(v268) ^ 0xA)] + 766577633;
  v311 = *(_DWORD *)&v88[4 * (HIBYTE(v284) ^ 0x3D)] ^ 0xB5BE0A6F;
  v312 = (v310 & v311) - ((2 * (v310 & v311)) & 0x50F1A362);
  v313 = *(_DWORD *)&v90[4
                       * ((((2 * (v274 ^ 0x876AE3E1)) | 0x988703C)
                         - (v274 ^ 0x876AE3E1)
                         + 993773538) & 0x43AE9FFF ^ 0x43AE9B2B)] ^ *(_DWORD *)&v88[4 * (HIBYTE(v281) ^ 0xAC)] ^ (-724660153 * v303 - ((698163342 * v303 + 459413442) & 0x3A7334DE) + 1256891984) ^ (v308 - ((2 * v308 + 1445099040) & 0xF962B8F6) + 667064203);
  v314 = ((BYTE1(v274) ^ 0x4C) - ((2 * (BYTE1(v274) ^ 0x4C)) & 0x70) - 598434248) ^ 0x5E01AFB4;
  v315 = *(_DWORD *)&v84[4 * ((((2 * v314) | 0xA2BA398A) - v314 + 782426939) ^ 0x53082D6F)];
  v316 = ((v310 + v311) ^ 0xBEBBADFE)
       + ((2 * (v310 + v311)) & 0x7D775BFC)
       + ((2 * v312 + 1358013282) ^ 0xD6B7F323)
       + ((2 * (2 * v312 + 1358013282)) & 0xF3735F7C ^ 0x5E9CB9BB)
       + 1;
  v317 = (((2 * (v281 & 0xB0 ^ 0x601A0498)) | 0x4436AEA6) - (v281 & 0xB0 ^ 0x601A0498) + 1575266477) ^ 0xC201535B | (((2 * (v281 & 0x4F ^ 0x220BFD7B)) & 0x5D24E) - (v281 & 0x4F ^ 0x220BFD7B) - 1092020648) ^ 0x9CE2EB2B;
  v318 = (v315 - 2 * ((v315 + 185678608) & 0x10D1E987 ^ v315 & 2) - 1142741867) ^ *(_DWORD *)&v90[4
                                                                                                * ((v317
                                                                                                  + 2002460756
                                                                                                  - ((2 * v317) & 0x6EB641BA)
                                                                                                  + 137) ^ 0x775B2054)] ^ (v316 - ((2 * v316 + 1979450242) & 0x66ED0AB0) - 294353127);
  v319 = (char *)*(&off_10112C750 + (v32 ^ 0x91EF)) - 1955988375;
  v320 = *(_DWORD *)&v319[4 * (HIBYTE(v291) ^ 0x41)];
  v321 = (char *)*(&off_10112C750 + (v32 ^ 0x93E2)) - 1093235514;
  v322 = *(_DWORD *)&v321[4
                        * ((((2 * (BYTE2(v309) ^ 0x848823D6)) & 0x1104522) - (BYTE2(v309) ^ 0x848823D6) + 473139566) ^ 0x98BBAA4E)];
  HIDWORD(v232) = v320 ^ 0x406B;
  LODWORD(v232) = v320 ^ 0x15298000;
  v323 = (v232 >> 15) - ((2 * (v232 >> 15)) & 0x6B4B1502) - 1247442303;
  v324 = (((2 * ((v323 >> 1) & 0x2F016925 ^ 0x29002004)) & 0x4402C048)
        - ((v323 >> 1) & 0x2F016925 ^ 0x29002004)
        - 577761837) ^ 0xDFC84CC3;
  HIDWORD(v232) = v322 ^ 0x6F38D4D;
  LODWORD(v232) = v322 ^ 0x40000000;
  v325 = (v232 >> 28) - ((2 * (v232 >> 28)) & 0xFA229578) - 49198404;
  HIDWORD(v232) = v325 ^ 2;
  LODWORD(v232) = v325 ^ 0x13E6C6B0;
  v326 = (v232 >> 4) - ((2 * (v232 >> 4)) & 0xE64006AE) - 216005801;
  v327 = (((4 * v326) ^ 0x50CC1B78) - ((2 * ((4 * v326) ^ 0x50CC1B78)) & 0xCAD9ED70) - 445843783) & 0xBB798BD0 ^ 0xE5EEF6BC;
  v328 = (-1547307112 - (BYTE1(v313) ^ 0x9A | 0xA3C5F798) + (BYTE1(v313) ^ 0x9A | 0x5C3A0867)) ^ 0x582B6403;
  v329 = v318 ^ 0x88107203;
  v330 = v329 + (v318 & 0x32 ^ 0x3A78130);
  v331 = v329 & 0x8001032;
  v332 = (char *)*(&off_10112C750 + (v32 ^ 0x9891)) - 194912655;
  v333 = v323 ^ *(_DWORD *)&v332[4 * ((((v313 >> 8) & 0xBC ^ 0x1081) + ((v313 >> 8) & 0x43) - 1) ^ 0x1015)] ^ (((2 * v328) & 0x31DC1474) - v328 + 1729230277) ^ v326 ^ (v324 - ((2 * v324) & 0x4E8E4210) - 1488510712) ^ (v327 - ((2 * v327) & 0x52011580) + 612267683);
  v334 = (v330 - v331) ^ 0x83B7E3C6;
  v335 = (char *)*(&off_10112C750 + (v32 ^ 0x946A)) - 902444978;
  v336 = *(_DWORD *)&v335[4 * v334];
  v337 = v336 - ((2 * v336 + 112090574) & 0xB2F9F724) - 590075271;
  v338 = *(_DWORD *)&v319[4 * (HIBYTE(v309) ^ 0x18)];
  HIDWORD(v232) = v338 ^ 0x406B;
  LODWORD(v232) = v338 ^ 0x15298000;
  v339 = ((-1367217199 - v336 - ((2035393074 - 2 * v336) & 0x63B23570)) ^ v337 ^ 0x5D438AC8 ^ ((v337 ^ 0x731C57FB ^ v333)
                                                                                             + (v333 ^ 0xD59F5396)
                                                                                             + 1
                                                                                             - ((2
                                                                                               * ((v337 ^ 0x731C57FB ^ v333)
                                                                                                + (v333 ^ 0xD59F5396)
                                                                                                + 1)) & 0x6BCCD7C4)
                                                                                             + 904293346))
       + (v333 ^ 0xD59F5396);
  v340 = v339 - ((2 * v339) & 0xA9AE3290);
  v341 = (v232 >> 15) - ((2 * (v232 >> 15)) & 0xDADBEE80) - 311560384;
  v342 = (((v341 >> 1) & 0x2F016925 ^ 0x9002024)
        - ((2 * ((v341 >> 1) & 0x2F016925 ^ 0x9002024)) & 0x4A00C208)
        - 177540860) ^ 0xC150DA98;
  v343 = ((2 * v342) & 0x6234735A) - v342;
  v344 = (BYTE1(v318) ^ 0x75) - ((2 * (BYTE1(v318) ^ 0x75)) & 0x90) + 1666164296;
  v345 = *(_DWORD *)&v321[4
                        * ((((BYTE2(v313) ^ 0x6DE18579) & 0x10033 ^ 0x900A4022)
                          + ((BYTE2(v313) ^ 0x6DE18579) & 0x400004CC ^ 0x3041)
                          - 1) ^ 0xD00B7480)];
  v346 = (((4 * v345) ^ 0x3C3FC010) - ((2 * ((4 * v345) ^ 0x3C3FC010)) & 0x573A63C8) - 1415761434) & 0xBB798BD0 ^ 0xEF9F75EC;
  v347 = *(_DWORD *)&v335[4
                        * ((2063892850
                          - (v291 ^ 0xE4 | 0x7B048172)
                          + (v291 ^ 0xE4 | 0x84FB7E8D)) ^ 0x84FB7E71)];
  v348 = 2 * v347 - ((4 * v347 - 1838179444) & 0x83793890);
  v349 = (((v347 - 1533286685) ^ 0xDEBB4804) + 1672024123 - ((2 * ((v347 - 1533286685) ^ 0xDEBB4804)) & 0xC7522076)) ^ 0x63A9103B;
  v350 = ((v348 - 1963693553) & 0xBD769008 ^ 0xFC517FF7)
       + v349
       + ((2 * (v348 - 1963693553)) & 0x7AC90010 ^ 0x2490010)
       + 43651073;
  v351 = *(_DWORD *)&v332[4 * (((v344 ^ 0xBEB879FD) + 993954460 + ((2 * v344) & 0x42C8)) ^ 0x1936AA11)] ^ v341 ^ (((2 * (BYTE1(v318) ^ 0x924508D)) & 0x1208A118) - (BYTE1(v318) ^ 0x924508D) - 2103275661) ^ v345 ^ (v343 - 827996590) ^ (v350 - 2 * (v350 & 0x58D92CE3 ^ v349 & 1) - 656855838) ^ (v346 + 2097483198 + ((2 * v346) & 0x72021320 ^ 0x77F7F7A7));
  v352 = *(_DWORD *)&v319[4 * (HIBYTE(v313) ^ 0x7D)];
  HIDWORD(v232) = v352 ^ 0x406B;
  LODWORD(v232) = v352 ^ 0x15298000;
  v353 = ((BYTE2(v318) ^ 0x6B) - ((2 * (BYTE2(v318) ^ 0x6B)) & 0x1D8) - 468862996) ^ 0xE08DD37D;
  v354 = (v232 >> 15) - ((2 * (v232 >> 15)) & 0x2689C860) + 323281968;
  v355 = *(_DWORD *)&v321[4 * ((v353 - ((2 * v353) & 0x8000E9E) - 59373745) ^ 0xF8F66361)];
  v356 = (((4 * v355) ^ 0x3C3FC010) - ((2 * ((4 * v355) ^ 0x3C3FC010)) & 0x82EC5D10) - 1049219446) & 0xBB798BD0 ^ 0xC5F67EAC;
  v357 = ((2 * (BYTE1(v291) ^ 0xBC)) & 0x98) - (BYTE1(v291) ^ 0xBC) + 815275955;
  v358 = ((v309 & 0x27 ^ 0xC6A5D122) + (v309 & 0xD8 ^ 0x11) - 1) ^ 0xC6B5D33F;
  v359 = *(_DWORD *)&v319[4 * (HIBYTE(v318) ^ 0x7C)];
  v360 = *(_DWORD *)&v335[4 * ((-730211193 - (v358 | 0xD479DC87) + (v358 | 0x2B862378)) ^ 0x2B962162)];
  HIDWORD(v232) = v359 ^ 0x406B;
  LODWORD(v232) = v359 ^ 0x15298000;
  v361 = v355 ^ (((v291 >> 8) & 0x59 ^ 0x35118010) + ((v291 >> 8) & 0xA6 ^ 0x8024081) - 1) ^ *(_DWORD *)&v332[4 * (((v357 & 0x10849B9F ^ 0x8448A18) + (v357 ^ 0xD4A81187) - ((v357 ^ 0xD4A81187) & 0x24349B9F)) ^ 0xD8C495C7)] ^ v354 ^ (v360 - ((2 * v360 + 112090574) & 0x906A3726) + 1267485306) ^ (((2 * ((v354 >> 1) & 0x2F016925 ^ 0xA016900)) & 0x600804A) - ((v354 >> 1) & 0x2F016925 ^ 0xA016900) - 1137596080) ^ (v356 + 876753829 + ((2 * v356) & 0x60800700 ^ 0xF7FB9FB7));
  v362 = (v232 >> 15) - ((2 * (v232 >> 15)) & 0x23A12C14) - 1848601078;
  v363 = *(_DWORD *)&v321[4 * (BYTE2(v291) ^ 3)];
  LODWORD(v319) = ((BYTE1(v309) ^ 0x43) + ((v309 >> 8) & 0x58 ^ 0x96230818) - ((BYTE1(v309) ^ 0x43) & 0x58)) ^ 0x9E41EC59;
  v364 = (((4 * v363) ^ 0x3C3FC010) + 500946741 - 2 * (((4 * v363) ^ 0x3C3FC010) & 0x1DDBD73C ^ (4 * v363) & 8)) & 0xBB798BD0 ^ 0x5DDFF73C;
  LODWORD(v321) = *(_DWORD *)&v335[4
                                 * ((-1214052835
                                   - (v313 ^ 0xE6)
                                   + 2 * ((v313 ^ 0xE6) & 0xF)
                                   + 211) ^ 0xB7A3061D)];
  v365 = v340 + 1423382856;
  v366 = v363 ^ BYTE1(v309) ^ *(_DWORD *)&v332[4
                                             * (((_DWORD)v319 - ((2 * (_DWORD)v319) & 0x84C3F8) - 1261276676) ^ 0xBCB095CA)] ^ v362 ^ ((_DWORD)v321 - ((2 * (_DWORD)v321 + 112090574) & 0x448B1FAA) - 1516454212) ^ (((v362 >> 1) & 0x2F016925 ^ 0x2E000904) - ((2 * ((v362 >> 1) & 0x2F016925 ^ 0x2E000904)) & 0x4A00D04A) + 636283941) & 0xFF07FFFF ^ (v364 + 1996137025 + ((2 * v364) & 0x64F10480 ^ 0x76FBBFFF));
  v367 = (BYTE2(v361) ^ 0x53) - ((2 * (BYTE2(v361) ^ 0x53)) & 0x12) - 987244791;
  v368 = (char *)*(&off_10112C750 + (v32 ^ 0x90DE)) - 2110196902;
  *(_BYTE *)((((_DWORD)v395 + 1415028145 - (HIDWORD(a12) & 0xA8AF3B64)) ^ 0x7FB7C2FE072CF60CLL)
           + ((2 * (((_DWORD)v395 + 1415028145 - (HIDWORD(a12) & 0xA8AF3B64)) ^ 0x54579DB3)) & 0xA6F6D77E)
           + a4
           - 0x7FB7C2FE537B6BBFLL) = v368[((v367 & 0x44220576 ^ 0x12400552)
                                         + (v367 ^ 0x6523D2AC)
                                         - ((v367 ^ 0x6523D2AC) & 0xA0000576)) ^ 0x566600E5] ^ 0x6D;
  v369 = HIBYTE(v366) ^ ((HIBYTE(v366) ^ 0xFFFFFF95) - ((2 * (HIBYTE(v366) ^ 0xFFFFFF95) + 254) & 0xF8C1DA4A) - 60756572) ^ ((HIBYTE(v366) ^ 0xFFFFFFEB) - ((2 * (HIBYTE(v366) ^ 0xFFFFFFEB) + 2) & 0xA6BF73E) + 87423904) ^ 0xF95516AE;
  v370 = v369 - 2066493876 - ((2 * v369 + 252) & 0x9A79C98) + 126;
  LODWORD(v321) = HIDWORD(v396) + 1356846202 + ((2 * HIDWORD(v396)) & 0xA1BFA8E4 ^ 0xFFFFFFEF) + 1;
  *(_BYTE *)(v394 - 0x57DFBBB6EDEDE8FBLL) = v368[(((2 * (BYTE2(v366) ^ 0x21020FD)) | 0x6E53AC14)
                                                - (BYTE2(v366) ^ 0x21020FDu)
                                                - 925488650) ^ 0x3539F612] ^ 0x60;
  v371 = ((2 * v33) & 0x7B7B7DF0 ^ 0x285A2D24) + (v398 ^ 0x6B90E96C);
  v372 = (char *)*(&off_10112C750 + (v32 ^ 0x9498)) - 1677042854;
  LOBYTE(v340) = v372[v370 ^ 0x84D3CEB1];
  LOBYTE(v370) = ((2 * ((v370 ^ 0xF8) + (v370 ^ 0x4C))) & 0x9E) + (((v370 ^ 0xF8) + (v370 ^ 0x4C)) ^ 0xCF);
  v373 = 2 * (((2 * v33) & 0x77B6F1F2 ^ 0x2412A124) + (v33 & 0x7FFFFFF9 ^ 0x2DF62F6D) - v371) - 2084271106;
  v374 = v371 + (v373 ^ 0xFFF5FE79) + ((2 * v373) & 0xFFEBFCF0);
  *(_BYTE *)((v321 ^ 0xEFBF7FFAA2207B05)
           + a4
           + ((2 * (v321 ^ 0x50DFD47A)) & 0x1E5FF5EFELL)
           + 0x104080050D005081) = v340 ^ 0x1D ^ (v370 - ((2 * v370 + 98) & 0x92) + 122);
  v375 = ((BYTE1(v351) ^ 0x4C) - ((2 * (BYTE1(v351) ^ 0x4C)) & 0x16C) + 49820342) ^ 0xEB83C14;
  v376 = (char *)*(&off_10112C750 + v32 - 36249) - 2002734499;
  *(_BYTE *)(((v374 - 1484804690) | ((unint64_t)(v374 - 1484804690 < 0x65336B21) << 32)) + a4 - 1697868577) = v376[(((2 * v375) | 0x1D4A3E50u) - v375 + 1901781208) ^ 0x82E511C9] ^ ((BYTE1(v351) ^ 0xD) - 2 * (((BYTE1(v351) ^ 0xD) + 8) & 0xF ^ (BYTE1(v351) ^ 0xD) & 1) + 6) ^ 0x63;
  *(_BYTE *)(((HIDWORD(v395) + 16027511 + ((2 * (HIDWORD(v395) & 0xF48F77 ^ (v33 | 0x7FFFFFFE))) ^ 0x13) + 8) ^ 0x52DF7F97FB1B5A84)
           + a4
           + ((2
             * ((HIDWORD(v395) + 16027511 + ((2 * (HIDWORD(v395) & 0xF48F77 ^ (v33 | 0x7FFFFFFE))) ^ 0x13) + 8) ^ 0xF48F7E)) & 0x1F7DFABF4)
           - 0x52DF7F97FBEFD5FALL) = v372[HIBYTE(v361) ^ 0x53] ^ ((HIBYTE(v361) ^ 0x1A)
                                                                  + (HIBYTE(v361) ^ 0xAE)
                                                                  - 2
                                                                  * (((HIBYTE(v361) ^ 0x1A) + (HIBYTE(v361) ^ 0xAE)) & 7)
                                                                  - 121) ^ 0x17;
  v377 = v396 + 1442129676 + ((2 * (v396 & 0x55F5270C ^ (v33 | 0x7FFFFFFB))) ^ 0xF);
  v378 = (v366 ^ 0x45 | 0x6E26FA5E) - (v366 ^ 0x45 | 0x91D905A1) - 1848048223;
  v379 = (char *)*(&off_10112C750 + (v32 ^ 0x925D)) - 620195019;
  LOBYTE(v378) = (v366 ^ 0x9D)
               + (v379[((v378 & 0xE0682CF ^ 0x2000445) + (v378 & 0x60207930 ^ 0x60281811) - 1) ^ 0xC0EE65CLL] ^ 0x8B);
  *(_BYTE *)(((HIDWORD(a20) - 530246879 + ((2 * HIDWORD(a20)) & 0xC0CA2640 ^ 0xFFFFFFFD) + 1) ^ 0xDFDFB2EE0B1E6C7ELL)
           + a4
           + ((2 * ((HIDWORD(a20) - 530246879 + ((2 * HIDWORD(a20)) & 0xC0CA2640 ^ 0xFFFFFFFD) + 1) ^ 0xE0651321)) & 0x1D6F6FEBELL)
           + 0x20204D11148480A1) = (v378 + (~(2 * v378) | 0x19) - 12) ^ 0xFC;
  v380 = ((2 * (BYTE1(v366) ^ 0xBC)) | 0x6684654E) - (BYTE1(v366) ^ 0xBC) + 1287507289;
  v381 = (v380 & 0x23400281 ^ 0x444D8C00) + (v380 ^ 0x3382338F) - ((v380 ^ 0x3382338F) & 0xE74D8E81);
  LOBYTE(v360) = (v365 ^ 0xC6) + (v379[v365 ^ 0x49] ^ 0x8B);
  v382 = HIWORD(v366) & 0x73 ^ 0xFFFFFFFC;
  v383 = (2 * v382) & 0x1FFC4;
  LODWORD(v319) = ((v382 - v383 + 98) ^ 0x62) & (((HIWORD(v366) & 0xFF8C ^ 0xFFFFFFF3)
                                                + ((2 * HIWORD(v366)) & 0x10 ^ 0xFFFFFF9D)
                                                - 70) ^ 0xFFFFFFB9);
  v384 = v319 ^ 0xFFFFFF86;
  LODWORD(v319) = v319 & 0x58;
  v385 = v384 - v319;
  v386 = (v385 + (v319 ^ 0x58)) ^ 0x21;
  LOBYTE(v340) = (BYTE2(v366) ^ 0x43)
               + ((2 * BYTE2(v366)) & 0x66 ^ 0x60)
               + ((v360 - ((2 * v360) & 0x8A) + 69) ^ 0xE2)
               + 77;
  v387 = (v381 ^ 0x678D8FBC) + 2;
  *(_BYTE *)((v377 ^ 0x43DFF57BCA8A5976) + a4 + ((2 * (v377 ^ 0x55F5270B)) & 0x13EFEFCFALL) - 0x43DFF57B9F7F7E7DLL) = v386 + (v340 ^ 0x77) + ((2 * v340) & 0xEF) - 118;
  *(_BYTE *)(v397 - 0x7EBEFFB7F3FB7BDBLL) = v376[((v366 >> 7) & 4)
                                               - 2126446431
                                               - 2 * ((v366 >> 7) & 4)
                                               + (v387 ^ 0x7EBEFF5F)
                                               + ((2 * (_DWORD)v387) & 0x7D7DFEBE)] ^ (((2 * v381) & 0x87)
                                                                                     + ~(_BYTE)v381
                                                                                     - ((2
                                                                                       * (((2 * v381) & 0x87)
                                                                                        + ~(_BYTE)v381)
                                                                                       + 106) & 0xF7)
                                                                                     - 80) ^ 2;
  LOBYTE(v381) = v379[(716120840 - (v361 & 0x81) + (v361 & 0x7E ^ 0x23) + 120) ^ 0x2AAF2308];
  LOBYTE(v381) = (v361 ^ 0xAF ^ v381)
               + 4 * ((v381 ^ 0xB) & (v361 ^ 0x24) & 0x1F)
               + ((2 * ((v381 ^ 0xB) & (v361 ^ 0x24))) ^ 0x3F)
               - 63;
  *(_BYTE *)(v400 - 0x73E76EC37EA7D7ABLL) = (v381 - ((2 * v381) & 0x14) + 10) ^ 0x7A;
  LOBYTE(v381) = ((2 * ((HIBYTE(v365) ^ 0x79) + (HIBYTE(v365) ^ 0xCD))) & 0xAE)
               + (((HIBYTE(v365) ^ 0x79) + (HIBYTE(v365) ^ 0xCD)) ^ 0xD7);
  *(_BYTE *)(v399 + 0x51001018950452) = v372[HIBYTE(v365) ^ 0x30] ^ 0x42 ^ (v381 - ((2 * v381 + 82) & 0xAE));
  v388 = (v361 >> 8) ^ 0x2C;
  v389 = (2 * (_BYTE)v388 + 48) & 0x3C;
  *(_BYTE *)(v402 + 0x20044D8078042009) = (v388 - v389 + 22) ^ 0x79 ^ v376[(((v361 >> 8) & 0xF1 ^ 0x41544080)
                                                                            + ((v361 >> 8) & 0xE ^ 0xC03020B)
                                                                            - 1) ^ 0x4D5742A4];
  v390 = (v379[(((2 * (v351 ^ 0x51E0181)) | 0x7E198E14)
                               - (v351 ^ 0x51E0181u)
                               - 1057801994) ^ 0x3A12C661] ^ 0xFFFFFF8B)
       + (v351 ^ 0x65);
  v391 = (v390 ^ 0xFFFFFFF7) + ((2 * v390) & 0xFFFFFFEF) + 9;
  HIDWORD(v232) = (v391 >> 6) | (4 * v391);
  LODWORD(v232) = ((HIDWORD(v232) - ((8 * v391) & 0x10) + 8) ^ 8) << 24;
  *(_BYTE *)(v405 - 0xDEBD7EE7FF6CEFELL) = ((v232 >> 26) - ((2 * (v232 >> 26)) & 0x66) - 77) ^ 0x58;
  LOBYTE(v391) = ((2 * ((HIBYTE(v351) ^ 0x53) + (HIBYTE(v351) ^ 0xE7))) & 0xBE)
               + (((HIBYTE(v351) ^ 0x53) + (HIBYTE(v351) ^ 0xE7)) ^ 0xDF);
  *(_BYTE *)(v404 - 0x5FFFF7FAF7E54971) = (v391 - ((2 * v391 + 66) & 0x68) + 85) ^ v372[HIBYTE(v351) ^ 0x1ALL] ^ 0xE1;
  *(_BYTE *)(v403 - 0x6BDEA7B57F93BFE7) = ((BYTE1(v365) ^ 0x48)
                                           - 2 * (((BYTE1(v365) ^ 0x48) + 120) & 0x77 ^ BYTE1(v365) & 6)
                                           + 105) ^ 0xD9 ^ v376[(((2 * (BYTE1(v365) ^ 0xA7)) | 0xC550C31C)
                                                               - (BYTE1(v365) ^ 0xA7)
                                                               + 492281458) ^ 0xE2A86163];
  *(_BYTE *)(((HIDWORD(v398) - 830500281 + ((2 * HIDWORD(v398)) & 0x9CFF248C ^ 0xFFFFFFFD) + 1) ^ 0xDF9EFFB78D846998)
           + ((2 * ((HIDWORD(v398) - 830500281 + ((2 * HIDWORD(v398)) & 0x9CFF248C ^ 0xFFFFFFFD) + 1) ^ 0xCE7F9247)) & 0x87F7F7BE)
           + a4
           + 0x20610048BC040421) = v368[BYTE2(v365) ^ 0xB6] ^ 0xAC;
  v392 = v401 - 701671520 - 2 * ((v401 + 16) & 0x562D5793 ^ v33 & 3);
  *(_BYTE *)(v406 + 0x68C39524100A0481) = v368[((BYTE2(v351) ^ 0x2222014)
                                                - ((2 * (BYTE2(v351) ^ 0x2222014)) & 0x408Cu)
                                                + 1008280390) ^ 0x3E3B035ALL] ^ 0x44;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(a32 + 8 * (int)((1950 * (((HIDWORD(a5) | ~(v392 ^ 0xD62D5790)) & ((v392 ^ 0xD62D5790) - HIDWORD(a5)) | HIDWORD(a5) & ~(v392 ^ 0xD62D5790)) >> 31)) ^ v32)) - 12))(v376, v389, v387, a4, v386, (2 * BYTE2(v366)) & 0x66 ^ 0x60u, v385, v383, a2, a3, a4, a5, a6, a7, a8, a9, a10, v394, a12,
           v395,
           (v32 - 6530) | 0x2102u,
           v396,
           v397,
           v398,
           v399,
           v400,
           a20,
           v401,
           v402);
}

uint64_t sub_1000CE534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  int v29;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 + 8 * (v29 - 22303)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1000CE5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  uint64_t v17;
  int v18;
  int v19;

  v19 = a17 - (((((v18 - 34954) | 0x8256) ^ 0x38AF0072) + a9) & 0x7E77B870) - 754997097;
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((94
                                              * (((2 * v19) & 0x3DFE53FE ^ 0x3C761070) + (v19 ^ 0xA1C4F5C7) + 1703016300 == 75571563)) ^ v18)))(1703016300);
}

uint64_t sub_1000CE69C(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((41
                                          * (a2 + v2 + 1627444737 >= (((v4 ^ 0xE043) - 368477770) & 0x15F6DFD6u) - 39630)) ^ v4 ^ 0xE043))
                            - 12))();
}

uint64_t sub_1000CE74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                          + 8
                                                                                          * (int)((((a4 - 1119774290) & 0x42BEBFDE ^ 0x4BCD)
                                                                                                 * (a6 >> 4 == 166720160)) ^ a4))
                                                                              - 12))(a1, a2, a3, a4, v6);
}

uint64_t sub_1000CE794@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, unint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _BOOL4 v48;
  int v51;

  v37 = (a1 + v36 + a2);
  v38 = v37 + a4 + 1;
  v39 = (a1 + v36) & 0xF;
  v40 = v39 - v37;
  v41 = v33 + v40;
  v42 = v39 + v33 + 1;
  v43 = v40 + v35 + 4;
  v44 = v39 + v35 + 5;
  v45 = v34 + ((a3 + 22925) ^ (a3 + 9219) ^ 0xFF98) + v40;
  v46 = v39 + v34 + 3;
  v48 = v42 > a4 && v41 < v38;
  if (v44 > a4 && v43 < v38)
    v48 = 1;
  v51 = v46 > a4 && v45 < v38 || v48;
  return ((uint64_t (*)(void))(*(_QWORD *)(a33 + 8 * ((897 * (v51 ^ 1)) ^ a3)) - 12))();
}

uint64_t sub_1000CE840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  unsigned int v29;
  int v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * ((197 * (v29 < ((v30 - 515033096) ^ 0xE14D9D54))) ^ v30));
  return v32(a1, a2, a3, a4, v32, a6, 197, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1000CE888(__n128 a1)
{
  char v1;
  int v2;
  uint64_t v3;
  __n128 v4;
  __n128 v5;
  __n128 v6;
  __n128 v7;
  __n128 v8;

  v4.n128_u64[0] = (v1 + 2) & 0xF;
  v4.n128_u64[1] = (v1 + 1) & 0xF;
  v5.n128_u64[0] = v1 & 0xF;
  v5.n128_u64[1] = (v1 - 1) & 0xF;
  v6.n128_u64[0] = (((63 * (v2 ^ 0x47)) ^ 3) + v1) & 0xF;
  v6.n128_u64[1] = (v1 + 13) & 0xF;
  v7.n128_u64[0] = 0x7777777777777777;
  v7.n128_u64[1] = 0x7777777777777777;
  v8.n128_u64[0] = 0x808080808080808;
  v8.n128_u64[1] = 0x808080808080808;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v3 + 8 * (int)(v2 ^ 0xE14DC56A ^ (14332 * (v2 != -2071105711))))
                                                                                         - 12))(a1, v4, v5, v6, (__n128)xmmword_100DF7480, v7, v8);
}

uint64_t sub_1000CEA04(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, unsigned int a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  __int128 v24;
  uint64_t v28;
  int8x16_t v30;
  int8x16_t v31;
  int8x16_t v32;

  v28 = a15 & 0xF;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v24, a5).u64[0];
  v31 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a13 + a15), *(int8x16_t *)(v16 + v28 - 15)), veorq_s8(*(int8x16_t *)(v28 + v18 - 11), *(int8x16_t *)(v28 + v17 - 13))));
  v32 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v31, v31, 8uLL), a7), vmulq_s8(v30, a6)));
  *(int8x16_t *)(a13 + a15) = vextq_s8(v32, v32, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (int)(((v22 & ~(v21 ^ ((v20 | v19) >> 31))) * v23) ^ a12)) - 12))();
}

uint64_t sub_1000CEA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,uint64_t a36,uint64_t a37)
{
  int v37;
  int v38;

  return ((uint64_t (*)(void))(*(_QWORD *)(a37 + 8 * (((v38 != a35) * ((1857 * (v37 ^ 0x1F73)) ^ 0x6CE2)) ^ v37)) - 4))();
}

uint64_t sub_1000CEAD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v33 = ((_DWORD)a8 - 1886626386) & 0x7073FBDE;
  v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 + 8 * (int)(((((v33 ^ 0x9ADE) & v31) != 0) * ((a8 + 277969496) & 0xEF6E667F ^ 0x2942)) ^ a8)) - 12);
  return v34(a1, a2, a3, v34, (v30 - v29), a6, v33, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1000CEB3C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X5>, uint64_t a5@<X8>, __n128 a6@<Q1>, __n128 a7@<Q2>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  int v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;

  a6.n128_u16[0] = 30583;
  a6.n128_u8[2] = 119;
  a6.n128_u8[3] = 119;
  a6.n128_u8[4] = 119;
  a6.n128_u8[5] = 119;
  a6.n128_u8[6] = 119;
  a6.n128_u8[7] = 119;
  a7.n128_u16[0] = 2056;
  a7.n128_u8[2] = 8;
  a7.n128_u8[3] = 8;
  a7.n128_u8[4] = 8;
  a7.n128_u8[5] = 8;
  a7.n128_u8[6] = 8;
  a7.n128_u8[7] = 8;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, __n128, __n128, __n128))(*(_QWORD *)(v41 + 8 * a37) - 4))((a1 + a2 + v40 + 13), (a1 + a2 + v40 + 14), (a2 + v40 + a3), (-8 - v37), v38 - (v39 & 0xFFFFFFF8), a4, a5 - 7, (__n128)xmmword_100DF7490, a6, a7);
}

uint64_t sub_1000CEBB4(char a1, char a2, int a3, int a4, int8x16_t a5, int8x8_t a6, int8x8_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41)
{
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unsigned __int8 v45;
  int v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;
  int8x16x4_t v52;

  v50 = (a3 + a4 + 8);
  v52.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)a4 + 8) & 0xF;
  v52.val[0].i64[1] = (v49 + (_BYTE)a4 + 8) & 0xF;
  v52.val[1].i64[0] = (v44 + (_BYTE)a4 + 8 + (v45 ^ 0x55)) & 0xF;
  v52.val[1].i64[1] = (v48 + (_BYTE)a4 + 8) & 0xF;
  v52.val[2].i64[0] = (v44 + (_BYTE)a4 + 8) & 0xF;
  v52.val[2].i64[1] = (v47 + (_BYTE)a4 + 8) & 0xF;
  v52.val[3].i64[0] = (a2 + (_BYTE)a4 + 8) & 0xF;
  v52.val[3].i64[1] = (a1 + (_BYTE)a4 + 8) & 0xF;
  *(int8x8_t *)(a10 + v50) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a10 + v50), *(int8x8_t *)(v41 + (v50 & 0xF) - 7)), veor_s8(*(int8x8_t *)((v50 & 0xF) + v43 - 3), *(int8x8_t *)((v50 & 0xF) + v42 - 5)))), a7), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v52, a5), a6)));
  return ((uint64_t (*)(void))(*(_QWORD *)(a40 + 8 * ((44018 * (v46 == a4)) ^ a41)) - 4))();
}

uint64_t sub_1000CECB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,int a36)
{
  unsigned int v36;
  uint64_t v37;

  return ((uint64_t (*)(void))(*(_QWORD *)(v37
                                        + 8
                                        * ((((v36 - 1656512600) & 0x22BCDBD6 ^ (v36 + 1315012743) & 0x319EFAF7 ^ 0x2D)
                                          * (a36 == a34)) ^ v36))
                            - 4))();
}

uint64_t sub_1000CED14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v7 + 8 * (a7 - 30103)) - 4))(14917);
}

uint64_t sub_1000CED40@<X0>(int a1@<W0>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  v11 = (a2 + v8);
  *(_BYTE *)(a3 + v11) ^= *(_BYTE *)(v4 + (v11 & 0xF)) ^ *(_BYTE *)((v11 & 0xF) + v6 + 4) ^ *(_BYTE *)((v11 & 0xF) + v5 + 2) ^ ((v11 & 0xF) * v9) ^ 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((a2 - 1 != v3) * a1) ^ v7)) - 4))();
}

void sub_1000CEDA0()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1308965087)
    v1 = 2134650450;
  else
    v1 = 2134608426;
  *(_DWORD *)(v2 + 24) = v1;
}

void sub_1000CEE04(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 1167911989 * ((a1 & 0x803C4401 | ~(a1 | 0x803C4401)) ^ 0x5169646D);
  __asm { BR              X10 }
}

uint64_t sub_1000CEED0@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, unsigned __int8 a10, unsigned __int8 a11, unsigned __int8 a12, unsigned __int8 a13, unsigned __int8 a14, unsigned __int8 a15, unsigned __int8 a16, unsigned __int8 a17, unsigned __int8 a18, unsigned __int8 a19, unsigned __int8 a20,unsigned __int8 a21,unsigned __int8 a22,unsigned __int8 a23,unsigned __int8 a24)
{
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  char v58;
  unsigned int v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unsigned int v71;
  uint64_t v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  uint64_t v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  unint64_t v88;
  int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  int v104;
  int v105;
  unsigned int v106;
  int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  unsigned int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  unsigned int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  int v167;
  int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  int v175;
  int v176;
  unsigned int v177;
  int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  int v196;
  int v197;
  BOOL v198;
  int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  int v203;
  unint64_t v204;
  int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  unsigned int v219;
  int v220;
  int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  int v225;
  int v226;
  int v227;
  unsigned int v228;
  int v229;
  int v230;
  int v231;
  unsigned int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  int v236;
  int v237;
  int v238;
  unsigned int v239;
  int v240;
  int v241;
  unsigned int v242;
  int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  unsigned int v253;
  int v254;
  int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  int v260;
  int v261;
  unsigned int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  unsigned int v267;
  int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  unsigned int v276;
  int v277;
  int v278;
  unsigned int v279;
  int v280;
  int v281;
  unsigned int v282;
  int v283;
  int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  unsigned int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  int v314;
  unsigned int v315;
  unsigned int v316;
  int v317;
  unsigned int v318;
  int v319;
  int v320;
  int v321;
  unsigned int v322;
  int v323;
  unsigned int v324;
  int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  unsigned int v333;
  int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  int v340;
  int v341;
  int v342;
  unsigned int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  unsigned int v348;
  unsigned int v349;
  int v350;
  int v351;
  int v352;
  int v353;
  int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  unsigned int v358;
  int v359;
  unsigned int v360;
  unsigned int v361;
  int v362;
  unsigned int v363;
  int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  unsigned int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  unint64_t v373;
  int v374;
  unsigned int v375;
  unsigned int v376;
  int v377;
  int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  int v382;
  int v383;
  unsigned int v384;
  int v385;
  int v386;
  int v387;
  unsigned int v388;
  int v389;
  int v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  int v394;
  int v395;
  unsigned int v396;
  int v397;
  unsigned int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  unsigned int v408;
  int v409;
  int v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  int v414;
  int v415;
  unsigned int v416;
  int v417;
  int v418;
  int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  int v423;
  int v424;
  int v425;
  int v426;
  int v427;
  int v428;
  unint64_t v429;
  int v430;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  int v434;
  int v435;
  int v436;
  unsigned int v437;
  int v438;
  int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  int v444;
  int v445;
  unsigned int v446;
  int v447;
  int v448;
  unsigned int v449;
  int v450;
  int v451;
  int v452;
  unsigned int v453;
  unsigned int v454;
  int v455;
  int v456;
  unsigned int v457;
  int v458;
  unsigned int v459;
  int v460;
  int v461;
  unsigned int v462;
  int v463;
  int v464;
  int v465;
  unsigned int v466;
  int v467;
  unsigned int v468;
  unsigned int v469;
  unsigned int v470;
  int v471;
  int v472;
  int v473;
  unsigned int v474;
  int v475;
  int v476;
  unsigned int v477;
  unsigned int v478;
  int v479;
  int v480;
  unsigned int v481;
  unsigned int v482;
  int v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  int v487;
  unsigned int v488;
  int v489;
  unsigned int v490;
  unsigned int v491;
  unsigned int v492;
  unsigned int v493;
  unsigned int v494;
  unsigned int v495;
  int v496;
  int v497;
  int v498;
  int v499;
  unsigned int v500;
  int v501;
  int v502;
  unsigned int v503;
  unsigned int v504;
  unsigned int v505;
  int v506;
  unsigned int v507;
  unsigned int v508;
  int v509;
  unsigned int v510;
  int v511;
  unsigned int v512;
  int v513;
  unsigned int v514;
  int v515;
  unsigned int v516;
  unsigned int v517;
  int v518;
  int v519;
  unsigned int v520;
  unsigned int v521;
  unsigned int v522;
  unsigned int v523;
  unsigned int v524;
  int v525;
  int v526;
  int v527;
  int v528;
  unsigned int v529;
  int v530;
  unsigned int v531;
  unsigned int v532;
  int v533;
  int v534;
  unsigned int v535;
  int v536;
  int v537;
  int v538;
  unsigned int v539;
  int v540;
  int v541;
  int v542;
  unsigned int v543;
  unsigned int v544;
  unsigned int v545;
  unsigned int v546;
  unsigned int v547;
  int v548;
  int v549;
  int v550;
  unsigned int v551;
  int v552;
  int v553;
  unsigned int v554;
  unsigned int v555;
  unsigned int v556;
  unsigned int v557;
  unsigned int v558;
  unsigned int v559;
  unsigned int v560;
  unsigned int v561;
  int v562;
  unsigned int v563;
  unsigned int v564;
  unsigned int v565;
  int v566;
  unint64_t v567;
  int v568;
  unsigned int v569;
  int v570;
  unsigned int v571;
  int v572;
  int v573;
  int v574;
  int v575;
  unsigned int v576;
  int v577;
  unsigned int v578;
  unsigned int v579;
  unsigned int v580;
  unsigned int v581;
  unsigned int v582;
  char *v583;
  char *v584;
  int v585;
  char *v586;
  int v587;
  char *v588;
  unsigned int v589;
  unsigned int v590;
  int v591;
  unsigned int v592;
  unsigned int v593;
  int v594;
  int v595;
  int v596;
  int v597;
  unsigned int v598;
  int v599;
  int v600;
  unsigned int v601;
  unsigned int v602;
  int v603;
  unsigned int v604;
  int v605;
  unsigned int v606;
  unsigned int v607;
  int v608;
  int v609;
  unsigned int v610;
  int v611;
  unsigned int v612;
  char *v613;
  unsigned int v614;
  char *v615;
  char v616;
  unsigned int v617;
  char *v618;
  int v619;
  char *v620;
  unsigned int v621;
  unsigned int v622;
  unsigned int v623;
  int v624;
  unsigned int v625;
  unsigned int v626;
  int v627;
  int v628;
  unsigned __int8 v630;
  int v631;
  _BYTE *v632;
  uint64_t v633;

  v27 = a2 + 40;
  v632 = v25;
  v633 = v24;
  v28 = *(_QWORD *)(v26 + 8 * ((a2 + 40) ^ 0x7BA3)) - 1232963479;
  v29 = v26;
  v30 = (v27 - 40) ^ 0xEA ^ *(unsigned __int8 *)(v28 + (a18 ^ 0x56));
  v31 = (((v30 - ((2 * v30) & 0x14E)) << 16) + 2141650944) ^ 0x7FA70000;
  v32 = v31 - ((2 * v31) & 0xC92A0000) - 459942986;
  v33 = *(_QWORD *)(v26 + 8 * (v27 - 26167)) - 828009347;
  v630 = *(_BYTE *)(v33 + (a21 ^ 0xE7));
  v34 = *(unsigned __int8 *)(v33 + (a9 ^ 0xB9));
  v35 = *(_QWORD *)(v29 + 8 * (v27 ^ 0x7F30)) - 2067516426;
  v36 = ((((a9 ^ 0xDB ^ v34) - ((2 * (a9 ^ 0xDB ^ v34)) & 0xD8)) << 24) - 335544320) ^ 0xEC000000;
  v37 = v36 - ((2 * v36) & 0xA0000000) - 797514190;
  v38 = *(_QWORD *)(v29 + 8 * (v27 - 27401)) - 130641135;
  v39 = a15 ^ 0x86 ^ *(unsigned __int8 *)(v38 + (a15 ^ 0xA3));
  v40 = (((v39 - ((2 * v39) & 0x1A)) << 8) + 956370176) ^ 0x39010D00;
  v41 = a13 ^ 0x29 ^ *(unsigned __int8 *)(v33 + (a13 ^ 0x76));
  v42 = (((v41 - ((2 * v41) & 0xB0)) << 24) - 671088640) ^ 0xD8000000;
  v43 = (v42 - ((2 * v42) & 0x68000000) - 1258912319) ^ 0xB4F685C1 | (v40 - ((2 * v40) & 0x7A727800) + 1027161266) ^ 0x3D393CB2;
  v44 = *(unsigned __int8 *)(v35 + (a16 ^ 0x3CLL));
  v45 = a19 ^ 0x1A ^ *(unsigned __int8 *)(v38 + (a19 ^ 0x6BLL));
  v46 = (((v45 - ((2 * v45) & 0x28)) << 8) + 1364268032) ^ 0x51511400;
  v47 = (v46 - ((2 * v46) & 0xFC19200) - 941569541) ^ 0xC7E0C9FB | v32 ^ 0xE495D3B6;
  v48 = v47 - ((2 * v47) & 0x958199E0) + 1254149360;
  v49 = a11 ^ 0x11 ^ *(unsigned __int8 *)(v38 + (a11 ^ 0xCALL));
  v50 = (((v49 - ((2 * v49) & 0x20)) << 8) - 1428287488) ^ 0xAADE1000;
  v51 = (v50 - ((2 * v50) & 0x1FF2B200) - 805742246) ^ 0xCFF9595A | v37 ^ 0xD076E632;
  v52 = v51 - ((2 * v51) & 0x7B4E65A0);
  v53 = *(unsigned __int8 *)(v28 + (a14 ^ 0xB9)) ^ 0x49;
  v54 = (((v53 - ((2 * v53) & 0x190)) << 16) + 1992818688) ^ 0x76C80000;
  v55 = (v54 - ((2 * v54) & 0x1A5A0000) - 852668750) ^ 0xCD2D4EB2 | (v43 - ((2 * v43) & 0xE06232EE) + 1882265975) ^ 0x70311977;
  v56 = (v55 - ((2 * v55) & 0xC43421BA) - 501608227) ^ 0xE21A10DD | ((v44 ^ 0x8F)
                                                                   - ((2 * (v44 ^ 0x8F)) & 0x1E0)
                                                                   + 1397118448) ^ 0x534655F0;
  v57 = v56 - ((2 * v56) & 0xA095329A) + 1347066189;
  LOBYTE(v56) = *(_BYTE *)(v33 + (a17 ^ 0x15)) ^ a17;
  LOBYTE(v33) = ((2 * (~(_BYTE)v56 & 0xB1)) | 0x68) - (~(_BYTE)v56 & 0xB1) + 76;
  LOBYTE(v56) = ((v33 & 0xF7 ^ 0xBC) - ((2 * (v33 & 0xF7 ^ 0xBC)) & 0xA6) + 83) ^ (v56 & 8 | 0x53) | ((v56 & 6 ^ 0xA5) - (v56 & 0x40) + 79) ^ 0xF6;
  v58 = v56 - ((2 * v56) & 0x30);
  v59 = (v48 & 0x98FFFFFF ^ 0x6FC0CCF0) - ((2 * (v48 & 0x98FFFFFF ^ 0x6FC0CCF0)) & 0xA685CBA);
  v60 = *(_BYTE *)(v38 + (a23 ^ 0x4DLL));
  v61 = *(unsigned __int8 *)(v28 + (a22 ^ 0xBCLL));
  LODWORD(v28) = *(unsigned __int8 *)(v28 + (a10 ^ 0xCBLL)) ^ 0xDE;
  LODWORD(v28) = ((((_DWORD)v28 - ((2 * (_DWORD)v28) & 0x122)) << 16) - 443482112) ^ 0xE5910000;
  LODWORD(v28) = (v28 - ((2 * v28) & 0x7E2E0000) + 2132250611) ^ 0x7F178FF3 | (v52 - 1113115952) ^ 0xBDA732D0;
  v62 = *(unsigned __int8 *)(v35 + (a20 ^ 0x7FLL));
  LODWORD(v38) = (v59 - 2060177827) ^ 0x85342E5D | ((v62 ^ 0x8F) - ((2 * (v62 ^ 0x8F)) & 0xC2) + 501341025) ^ 0x1DE1DB61;
  v63 = v38 - ((2 * v38) & 0x2D1FC3F0) - 1768955400;
  v64 = *(unsigned __int8 *)(v35 + (a24 ^ 0x3FLL));
  LODWORD(v35) = *(unsigned __int8 *)(v35 + (a12 ^ 0x7BLL)) ^ 0x8F;
  LODWORD(v28) = (v28 - ((2 * v28) & 0xA69E2936) - 749792101) ^ 0xD34F149B | (v35 - ((2 * v35) & 0x3A) + 1452939037) ^ 0x569A171D;
  v65 = v28 - ((2 * v28) & 0x4687D4E) + 36978343;
  LODWORD(v28) = (v64 ^ 0x98) - ((2 * (v64 ^ 0x98)) & 0x184);
  LODWORD(v35) = *(_DWORD *)(*(_QWORD *)(v29 + 8 * (v27 ^ 0x7B5D)) - 800570639 + 4 * (HIBYTE(v65) ^ 0x6A));
  v66 = *(_QWORD *)(v29 + 8 * (v27 ^ 0x7B5D)) - 800570639;
  HIDWORD(v67) = v35 ^ 0x74F7B;
  LODWORD(v67) = v35 ^ 0xA4C80000;
  v68 = v29;
  v69 = *(_QWORD *)(v29 + 8 * (v27 ^ 0x75E1)) - 1230420251;
  v70 = *(_DWORD *)(v69 + 4 * (BYTE2(v57) ^ 0x12u));
  LODWORD(v35) = (v67 >> 19) - ((2 * (v67 >> 19)) & 0xB8C71C60) - 597455312;
  HIDWORD(v67) = v70 ^ 0x186E50D0;
  LODWORD(v67) = v70 ^ 0xC0000000;
  v71 = (v67 >> 29) - ((2 * (v67 >> 29)) & 0x1EFBE414) - 1887571446;
  v631 = v27;
  v72 = *(_QWORD *)(v29 + 8 * (v27 ^ 0x7869)) - 1569580451;
  v73 = *(_DWORD *)(v72 + 4 * (BYTE1(v63) ^ 0x81u));
  HIDWORD(v67) = v73 ^ 0x92;
  LODWORD(v67) = v73 ^ 0xF00E2500;
  v74 = v71 ^ v35 ^ (v71 >> 3) ^ (v71 >> 4);
  v75 = (v67 >> 8) - ((2 * (v67 >> 8)) & 0x224EF53E) + 287799967;
  v76 = ((4 * v75) ^ 0x449DEA7C) - ((2 * ((4 * v75) ^ 0x449DEA7C)) & 0xEB2FA690) - 174599349;
  v77 = ((((v76 & 0xB6E3E5F8 ^ 0x10436528)
         + (v76 & 0x14E165C0 ^ 0x5A41AC3)
         - ((v76 & 0xB6E3E5F8 ^ 0x10436528) & 0x14E165C0)) ^ 0x5A0B90A)
       - 1) ^ v75;
  v78 = v77 & 0x800000 ^ 0xF6B3BCFF;
  v79 = *(_QWORD *)(v68 + 8 * (v27 - 26772)) - 1695589062;
  LODWORD(v28) = ((v28 - 412847166) ^ 0xE76473C2)
               + ((((v28 - 412847166) ^ 0x495D2F3C) + 1) ^ 0x5EFF6FFF)
               + ((2 * (((v28 - 412847166) ^ 0x495D2F3C) + 1)) & 0xBDFEDFFE)
               - 1593798655;
  v80 = *(_DWORD *)(v79 + 4 * (v64 ^ 0x24)) ^ (v28 - ((2 * v28) & 0x1D4242AE) - 1902042793) ^ v77 & 0xFF7FFFFF;
  v81 = v78 + 534771504;
  v82 = v78 + 164381441;
  v83 = 206008622 - v78;
  if ((v82 & v74) != 0)
    v81 = v83;
  v84 = (v74 ^ 0x4A061D5B) - 370390063 + v81 - ((2 * ((v74 ^ 0x4A061D5B) - 370390063 + v81)) & 0x5A564D2A) - 1389681003;
  v85 = (((2 * (BYTE2(v63) ^ 0xD6)) | 0x9D87C8D6) - (BYTE2(v63) ^ 0xD6) - 1321460843) ^ 0x2E93E0A5;
  v86 = ((2 * v85) | 0x8FE948A8) - v85 + 940268460;
  v87 = *(_DWORD *)(v66 + 4 * (HIBYTE(v57) ^ 0xB4));
  HIDWORD(v88) = v87 ^ 0x74F7B;
  LODWORD(v88) = v87 ^ 0xA4C80000;
  v89 = (v88 >> 19) + 1698323593 + (~(2 * (v88 >> 19)) | 0x358B46EF);
  v90 = v80 ^ v84;
  v91 = *(_DWORD *)(v69 + 4 * (v86 ^ 0xA7A4A070));
  HIDWORD(v88) = v91 ^ 0x186E50D0;
  LODWORD(v88) = v91 ^ 0xC0000000;
  v92 = (v88 >> 29) - ((2 * (v88 >> 29)) & 0x657D51C0) + 851355872;
  v93 = ((v65 ^ 0xD8EFCB76) + 655373453 + ((2 * v65) & 0xE6 ^ 2)) % 0x46;
  v94 = (v65 ^ 0x6A7C9105) + (v93 ^ 0x94080447) - ((2 * v93) & 0x70) + 1811413945;
  v95 = *(_DWORD *)(v72 + 4 * (a23 ^ 0x5Cu ^ v60));
  HIDWORD(v88) = v95 ^ 0x92;
  LODWORD(v88) = v95 ^ 0xF00E2500;
  v96 = (v88 >> 8) - ((2 * (v88 >> 8)) & 0x75F8D16E) - 1157863241;
  v97 = (v94 ^ 0xDC) + ((2 * v94) & 0xB8) + 36;
  v98 = ((2 * v93) & 0xBE) + (v93 ^ 0x7BD7FF5F) + ((2 * v97) & 0x1F6) + (v97 ^ 0x6FFAEBFB);
  v99 = v98 - ((2 * v98 + 676997452) & 0x53CB8F30) - 1106060226;
  v100 = (((4 * v96) ^ 0xEBF1A2DC) - ((2 * ((4 * v96) ^ 0xEBF1A2DC)) & 0x1D41D6D0) + 245427048) & 0xB6E3E5F8 ^ 0xB6C06418;
  v101 = (v99 ^ 0xA9E5C798)
       + (((v99 ^ 0x7DC9B66) + 1) ^ 0x5FFD7FFF)
       + ((2 * ((v99 ^ 0x7DC9B66) + 1)) & 0xBFFAFFFE)
       - 1610448895;
  v102 = v89 ^ v92 ^ *(_DWORD *)(v79 + 4 * (v99 ^ 0xA9E5C724)) ^ (v92 >> 3) ^ (v92 >> 4) ^ v96 ^ (((((2 * v100) | 0xD8B16026) - v100 + 329732077) & 0x10CAF94A ^ 0x10CA4948)
                                                                                                  + ((((2 * v100) | 0xD8B16026) - v100 + 329732077) ^ 0xEC04B607)
                                                                                                  - (((((2 * v100) | 0xD8B16026) - v100 + 329732077) ^ 0xEC04B607) & 0x10CAF948)) ^ (v101 - ((2 * v101) & 0x7862FBF6) + 1009876475);
  v103 = *(_DWORD *)(v66 + 4 * ((v58 + 24) ^ 0x67u));
  HIDWORD(v88) = v103 ^ 0x74F7B;
  LODWORD(v88) = v103 ^ 0xA4C80000;
  v104 = (v88 >> 19) - ((2 * (v88 >> 19)) & 0xBF379B9E) + 1604046287;
  v105 = *(_DWORD *)(v69 + 4 * (v61 ^ 0x6C));
  HIDWORD(v88) = v105 ^ 0x186E50D0;
  LODWORD(v88) = v105 ^ 0xC0000000;
  v106 = (v88 >> 29) - ((2 * (v88 >> 29)) & 0xD2013994) - 385835830;
  v107 = *(_DWORD *)(v72 + 4 * (BYTE1(v65) ^ 0x91u));
  HIDWORD(v88) = v107 ^ 0x92;
  LODWORD(v88) = v107 ^ 0xF00E2500;
  v108 = (v88 >> 8) - ((2 * (v88 >> 8)) & 0x9E97F3D0) - 817104408;
  v109 = (((4 * v108) ^ 0x3D2FE7A0) - 226826752 + (~(2 * ((4 * v108) ^ 0x3D2FE7A0)) | 0x1B0A3407)) & 0xB6E3E5F8 ^ 0xB2038400;
  v110 = ((v109 | 0xDCF2DFF1) - (v109 | 0x230D200E) + 588062734) ^ 0xDCFF9E49;
  v111 = ((v57 ^ 0x2F) + (v57 & 0x16 ^ 0x8E2FEA10) - ((v57 ^ 0x2F) & 0x16)) ^ 0xE56F8E1E;
  v112 = ((((2 * v111) & 0x44808BD0) - v111 + 1501805079) ^ 0x32C3DE23)
       + ((((((2 * v111) & 0x44808BD0) - v111 + 1501805079) ^ 0x9CFA82DD) + 1) ^ 0x46FFFF7E)
       + ((2 * (((((2 * v111) & 0x44808BD0) - v111 + 1501805079) ^ 0x9CFA82DD) + 1)) & 0x8DFFFEFC)
       - 1191182206;
  v113 = ((2 * v112) & 0xCBBBF63A) + (v112 ^ 0x65DDFB1D);
  v114 = *(_DWORD *)(v79 + 4 * (v44 ^ 0x6D)) ^ 0x4487324C;
  v115 = ((v113 - 1709046557) & v114) - ((2 * ((v113 - 1709046557) & v114)) & 0x63078442);
  v116 = ((v113 - 1709046557 + v114) ^ 0x7D77FFFD)
       + ((2 * (v113 - 1709046557 + v114)) & 0xFAEFFFFA)
       + ((2 * v115 + 1661436994) ^ 0x420FDD63)
       + ((2 * (2 * v115 + 1661436994)) & 0xBDEF4DBC ^ 0x7BF0F77B)
       + 1;
  v117 = *(_DWORD *)(v66 + 4 * (a21 ^ 0xDCu ^ v630));
  HIDWORD(v88) = v117 ^ 0x74F7B;
  LODWORD(v88) = v117 ^ 0xA4C80000;
  v118 = (v88 >> 19) - ((2 * (v88 >> 19)) & 0x837BB218) + 1102960908;
  v119 = v106 ^ v104 ^ (v106 >> 3) ^ (v106 >> 4) ^ v108 ^ (((2 * v110) | 0xBE68230C) - v110 - 1597247878) ^ (v116 - ((2 * v116 + 1124027844) & 0x42F391FE) + 49901537);
  v120 = *(_DWORD *)(v69 + 4 * (BYTE2(v65) ^ 0x7Cu));
  HIDWORD(v88) = v120 ^ 0x186E50D0;
  LODWORD(v88) = v120 ^ 0xC0000000;
  v121 = 2 * (v57 >> 8);
  v122 = v121 & 0x1BE;
  v123 = (v121 ^ 0xC0) - ((v57 >> 6) & 0x74) + 315;
  v124 = *(_DWORD *)(v72
                   + 4
                   * ((BYTE1(v57) ^ 0xBDEFF7BF)
                    + (v122 ^ 0x80)
                    + (v123 & 0x9A ^ 0x8C84801D)
                    + ((2 * v123) & 0x130 ^ 0xFFFFFFCF)
                    - 1249146776));
  v125 = (v88 >> 29) - ((2 * (v88 >> 29)) & 0xE708E950);
  HIDWORD(v88) = v124 ^ 0x92;
  LODWORD(v88) = v124 ^ 0xF00E2500;
  v126 = (v88 >> 8) - ((2 * (v88 >> 8)) & 0x13425DE2) - 1985925391;
  v127 = (((4 * v126) ^ 0x2684BBC4) - ((2 * ((4 * v126) ^ 0x2684BBC4)) & 0xB886B480) - 599565757) & 0xB6E3E5F8 ^ 0x8324F8;
  v128 = (((2 * v127) & 0x45444100) - v127 - 582365319) ^ 0x49819DF3;
  v129 = ((v63 & 0xA6 ^ 0x2F41CFA6) - (v63 & 0xA6) + v63) ^ 0x92387A6;
  v130 = ((v129 - ((2 * v129) & 0x4C048CA2) + 1854826065) ^ 0x48EC2E44)
       + ((((v129 - ((2 * v129) & 0x4C048CA2) + 1854826065) ^ 0xE6D572BA) + 1) ^ 0xFDD857AF)
       + ((2 * (((v129 - ((2 * v129) & 0x4C048CA2) + 1854826065) ^ 0xE6D572BA) + 1)) & 0xFBB0AF5E)
       + 36153425;
  v131 = v118 ^ *(_DWORD *)(v79 + 4 * (v62 ^ 0xDE)) ^ (v125 - 209423192) ^ ((v125 - 209423192) >> 3) ^ ((v125 - 209423192) >> 4) ^ (v130 - ((2 * v130) & 0x3635674C) - 1692748890) ^ v126 ^ ((v128 | 0x552BBF49) - (v128 | 0xAAD440B6) - 1428930378);
  v132 = v119 ^ 0x94414B81;
  v133 = ((2 * ((v119 ^ 0x94414B81) + (v119 ^ 0xF4EEBA11))) & 0xD297BEBC)
       + (((v119 ^ 0x94414B81) + (v119 ^ 0xF4EEBA11)) ^ 0xE94BDF5E);
  v134 = ((v133 - ((2 * v133 + 761807174) & 0x64969E5E) - 922783790) ^ 0x4DB4B0D1) + v132;
  v135 = v134 - ((2 * v134) & 0x1A3FB51C) - 1927292274;
  v136 = *(_DWORD *)(v69 + 4 * (BYTE2(v102) ^ 0xACu));
  v137 = ((16 * v136) & 0xFFF2BEB0 ^ 0x86E00C00) + ((8 * v136) ^ 0xBC8BD9DF);
  v138 = v137 - 2147049311;
  v139 = (((v137 - 2147049311) & 0xFFFFFFF8 | (v136 >> 29)) ^ 0x24000324)
       + v137
       + ((2 * ((v137 - 2147049311) & 0xFFFFFFF8 | (v136 >> 29))) & 0xB7FFF9BA ^ 0xFFFFFFF7);
  v140 = *(_DWORD *)(v66 + 4 * (HIBYTE(v90) ^ 0xFD));
  HIDWORD(v88) = v140 ^ 0x74F7B;
  LODWORD(v88) = v140 ^ 0xA4C80000;
  v141 = (v88 >> 19) - ((2 * (v88 >> 19)) & 0x11A67DB2) + 148061913;
  v142 = ((v136 >> 29) ^ (((v136 >> 29) ^ 0xFFFFFFF9) - ((2 * ((v136 >> 29) ^ 0xFFFFFFF9) + 2) & 0x2F62FD58) + 397508269) ^ 0xF41EA06A ^ (v139 - 2 * ((v139 + 1543937408) & 0x63AFDEDD ^ v139 & 0x1D) + 1068923968))
       + v138;
  v143 = *(_DWORD *)(v72
                   + 4
                   * (((BYTE1(v135) ^ 0x1B10113) - ((2 * (BYTE1(v135) ^ 0x1B10113)) & 0x16203EE) + 1056274935) ^ 0x3F447873u));
  HIDWORD(v88) = v143 ^ 0x92;
  LODWORD(v88) = v143 ^ 0xF00E2500;
  v144 = (v142 - ((2 * v142) & 0x232D8862) + 295093297) ^ v141 ^ ((v142 - ((2 * v142) & 0x232D8862) + 295093297) >> 3) ^ ((v142 - ((2 * v142) & 0x232D8862) + 295093297) >> 4);
  v145 = (v88 >> 8) + 1978773504 - ((2 * (v88 >> 8)) & 0xEBE3649C) + 590;
  v146 = (((4 * v145) ^ 0xD7C6C938) - ((2 * ((4 * v145) ^ 0xD7C6C938)) & 0xCA70BB08) + 1698192774) & 0xB6E3E5F8 ^ 0xA0636530;
  v147 = (((2 * v146) & 0x45448150) - v146 - 582638256) ^ 0xDC149564;
  HIDWORD(v88) = v145 ^ 0x24E;
  LODWORD(v88) = v145 ^ 0x75F1B000;
  v148 = (v88 >> 12) - ((2 * (v88 >> 12)) & 0xD80ED7E4) - 335057934;
  HIDWORD(v88) = v144 ^ 0xE2D;
  LODWORD(v88) = v144 ^ 0x1A6E4000;
  v149 = ((v88 >> 12) - ((2 * (v88 >> 12)) & 0x2ABB346C) + 358455862) ^ v148;
  v150 = ((v131 ^ 0xF1) - ((2 * (v131 ^ 0xF1)) & 0xDA) + 14639725) ^ 0x2259E2C5;
  v151 = ((((2 * v150) & 0x1040472) - v150 - 13784634) ^ 0xDDAB294B)
       + ((((((2 * v150) & 0x1040472) - v150 - 13784634) ^ 0x739275B5) + 1) ^ 0x38D9FEC3)
       + ((2 * (((((2 * v150) & 0x1040472) - v150 - 13784634) ^ 0x739275B5) + 1)) & 0x71B3FD86)
       - 953810627;
  v152 = (((2 * v147) | 0x6B497F40) - v147 - 899989408) ^ *(_DWORD *)(v79 + 4 * (v131 ^ 0x68u)) ^ (v149 >> 20) ^ (((v149 << 12) ^ 0xFCAF3000) - ((2 * ((v149 << 12) ^ 0xFCAF3000)) & 0xD34E0000) + 1772556137) ^ (v151 - ((2 * v151) & 0xAE72A39E) - 684109361);
  v153 = ((2 * (BYTE2(v135) ^ 0xDB)) & 0x10A) - (BYTE2(v135) ^ 0xDB) - 912385158;
  v154 = *(_DWORD *)(v66 + 4 * (HIBYTE(v102) ^ 0xFB));
  HIDWORD(v88) = v154 ^ 0x74F7B;
  LODWORD(v88) = v154 ^ 0xA4C80000;
  v155 = *(_DWORD *)(v69
                   + 4
                   * (((v153 & 0x18C01BA) + (v153 ^ 0xF18C0BBA) - ((v153 ^ 0xF18C0BBA) & 0x80211BA) + 107061248) ^ 0x37FDA19A));
  v156 = (v88 >> 19) - ((2 * (v88 >> 19)) & 0x9C65CAC0) + 1311958368;
  HIDWORD(v88) = v155 ^ 0x186E50D0;
  LODWORD(v88) = v155 ^ 0xC0000000;
  v157 = (v88 >> 29) - ((2 * (v88 >> 29)) & 0x13476CAC) + 161723990;
  v158 = (v157 >> 4) ^ (v157 >> 3);
  v159 = v157 ^ v156;
  v160 = (BYTE1(v131) ^ 0x8A) - ((2 * (BYTE1(v131) ^ 0x8A)) & 0xF4) - 1657873798;
  v161 = ((v158 & 0x2000021 ^ 0x32890148) + (v158 & 0x74C800 ^ 0x204001) - 1) ^ 0x3A883179;
  v162 = *(_DWORD *)(v72
                   + 4
                   * (((v160 & 0x1922C004 ^ 0x62502004) + (v160 ^ 0x1DAFDC7A) - ((v160 ^ 0x1DAFDC7A) & 0x800404)) ^ 0xFB73E2EB));
  HIDWORD(v88) = v162 ^ 0x92;
  LODWORD(v88) = v162 ^ 0xF00E2500;
  v163 = (v88 >> 8) - ((2 * (v88 >> 8)) & 0x76A1DCCE) + 995159655;
  v164 = (v159 & 0x6274C821 ^ 0x2308800)
       + (v159 & 0x2200C801 ^ 0x248B4607)
       - ((v159 & 0x6274C821 ^ 0x2308800) & 0x2200C801);
  v165 = (v159 & 0x9D8B37DE ^ 0x1003178E) - ((2 * (v159 & 0x9D8B37DE ^ 0x1003178E)) & 0x2A106638) + 1999434556;
  v166 = ((v158 & 0x1D8B37DE ^ 0xC820792 | 0xF65FCA3F) - (v158 & 0x1D8B37DE ^ 0xC820792 | 0x9A035C0) + 161494464) ^ 0xD65F8A33;
  v167 = v166 - ((2 * v166) & 0x62A70B4E) - 1319926361;
  v168 = ((2 * v90) & 0x1CA ^ 0x42) + (v90 ^ 0x3F7BE7C6);
  v169 = ((2 * v90) ^ 0x28FFE646) - ((2 * ((2 * v90) ^ 0x28FFE646)) & 0xF4);
  v170 = v165 ^ 0xFEF53013 ^ v167 | v164 & 0xFFFFFBFF ^ 0x471C882D ^ (v161 - ((2 * v161) & 0x10616034) + 699576858);
  v171 = (((v90 ^ 0x9C09261 | 0xB4B4048B) - (v90 ^ 0x9C09261 | 0x4B4BFB74) + 1263270772) ^ 0x134DCA37)
       + 1;
  v172 = v163 ^ *(_DWORD *)(v79
                          + 4 * (v168 - ((-246 - 2 * v169) & 0x90) + ((v169 + 634) & 0x178 ^ 0x1EAC349u) - 1097247322)) ^ (((4 * v163) ^ 0xED43B99C) - ((2 * ((4 * v163) ^ 0xED43B99C)) & 0x8A2F060) + 72448051) & 0xB6E3E5F8 ^ ((v171 ^ 0xEFE5AFBF) + v168 + ((2 * v171) & 0xDFCB5F7E) - 2 * (((v171 ^ 0xEFE5AFBF) + v168 + ((2 * v171) & 0xDFCB5F7E) + 278816860) & 0x1E7BC063 ^ ((v171 ^ 0xEFE5AFBF) + v168) & 1) - 283498306) ^ (v170 - ((2 * v170) & 0xFE0027AE) + 2130711511);
  v173 = 1852662794 - ((HIWORD(v131) & 0xB) + (HIWORD(v131) | 0xFFFFFF0B));
  v174 = *(_DWORD *)(v66 + 4 * (HIBYTE(v135) ^ 0x64));
  HIDWORD(v88) = v174 ^ 0x74F7B;
  LODWORD(v88) = v174 ^ 0xA4C80000;
  v175 = *(_DWORD *)(v69
                   + 4
                   * (((v173 & 0x10424 ^ 0x28824) + (v173 ^ 0x2EED4409) - ((v173 ^ 0x2EED4409) & 0x802424)) ^ 0x40038C02));
  v176 = (v88 >> 19) - ((2 * (v88 >> 19)) & 0xC9F92242);
  HIDWORD(v88) = v175 ^ 0x186E50D0;
  LODWORD(v88) = v175 ^ 0xC0000000;
  v177 = (v88 >> 29) - ((2 * (v88 >> 29)) & 0x8CB37E60) - 967196880;
  v178 = *(_DWORD *)(v72 + 4 * (BYTE1(v90) ^ 0xF3u));
  HIDWORD(v88) = v178 ^ 0x92;
  LODWORD(v88) = v178 ^ 0xF00E2500;
  v179 = (v88 >> 8) - ((2 * (v88 >> 8)) & 0xD5CDEBB0) + 1793521112;
  v180 = ((4 * v179) ^ 0xAB9BD760) - ((2 * ((4 * v179) ^ 0xAB9BD760)) & 0x275562A8) - 1817530026;
  v181 = ((2 * (v102 ^ 0x5000013D)) | 0xCCFECF80) - (v102 ^ 0x5000013D) + 427857984;
  v182 = (v181 ^ 0xB67F66C7)
       + (((v181 ^ 0x18463A39) + 1) ^ 0x9B937EAC)
       + ((2 * ((v181 ^ 0x18463A39) + 1)) & 0x3726FD58)
       + 1684832596;
  v183 = (v176 + 1694273825) ^ *(_DWORD *)(v79 + 4 * (((v102 & 0xE ^ 0x809) + (v102 & 0xF1) - 1) ^ 0x88E)) ^ v177 ^ (v177 >> 3) ^ (v177 >> 4);
  v184 = *(_DWORD *)(v69 + 4 * (BYTE2(v90) ^ 0x7Fu));
  v185 = v183 ^ v179 ^ ((v180 & 0xB6E3E5F8 ^ 0x933A8150)
                      + (v180 & 0xA4C1E470 ^ 0x64C57422)
                      - ((v180 & 0xB6E3E5F8 ^ 0x933A8150) & 0xA4C9E470)) ^ (v182 - ((2 * v182) & 0x5D2A7218) + 781531404);
  HIDWORD(v88) = v184 ^ 0x186E50D0;
  LODWORD(v88) = v184 ^ 0xC0000000;
  v186 = *(_DWORD *)(v66 + 4 * (HIBYTE(v131) ^ 0x6D));
  v187 = (v88 >> 29) - ((2 * (v88 >> 29)) & 0x11F28930) + 150553752;
  HIDWORD(v88) = v186 ^ 0x74F7B;
  LODWORD(v88) = v186 ^ 0xA4C80000;
  v188 = *(_DWORD *)(v72 + 4 * (BYTE1(v102) ^ 0x97u));
  v189 = (v88 >> 19) - ((2 * (v88 >> 19)) & 0x4AFA8CA4);
  HIDWORD(v88) = v188 ^ 0x92;
  LODWORD(v88) = v188 ^ 0xF00E2500;
  v190 = v189 - 1518516654;
  v191 = (v88 >> 8) - 2098978919 - ((2 * (v88 >> 8)) & 0x5C83F32);
  v192 = ((4 * v191) ^ 0xB907E64) - ((2 * ((4 * v191) ^ 0xB907E64)) & 0xBC957760);
  v193 = (v135 ^ 0x2082A286)
       + (v135 & 0x49 ^ 0xC0250C49)
       - ((v135 ^ 0x2082A286) & 0x20822049);
  v194 = ((2 * ((v192 + 1581956018) & 0xB6A3E5F8 ^ 0x9481A4F0)) & 0x48430940)
       - ((v192 + 1581956018) & 0xB6A3E5F8 ^ 0x9481A4F0)
       - 611419298;
  v195 = (v194 & 0x558276DE ^ 0x45000080) + (v194 ^ 0x989F7E5E) - ((v194 ^ 0x989F7E5E) & 0x558276D8);
  v196 = (-1581956020 - v192) & 0x400000;
  v197 = v196 | 0x79B8E135;
  v198 = (v196 & ~v191) == 0;
  v199 = -210648470 - (v196 | 0x79B8E135);
  if (v198)
    v199 = v197;
  v200 = (v191 ^ 0x82E41F99)
       - 2042159413
       + v199
       - ((2 * ((v191 ^ 0x82E41F99) - 2042159413 + v199)) & 0x713CB12)
       + 59368841;
  v201 = (v193 ^ 0xC0258E41)
       + (((v193 ^ 0x6E1CD2BF) + 1) ^ 0xBBE79BF6)
       + ((2 * ((v193 ^ 0x6E1CD2BF) + 1)) & 0x77CF37EC)
       + 1142449162;
  v202 = v190 ^ v187 ^ *(_DWORD *)(v79 + 4 * (v193 ^ 0xC0258EFD)) ^ (v187 >> 3) ^ (v187 >> 4) ^ v195 ^ v200 ^ (v201 - ((2 * v201) & 0x121F22DE) - 1995468433);
  v203 = *(_DWORD *)(v66 + 4 * (HIBYTE(v152) ^ 9));
  HIDWORD(v204) = v203 ^ 0x74F7B;
  LODWORD(v204) = v203 ^ 0xA4C80000;
  v205 = (v204 >> 19) - ((2 * (v204 >> 19)) & 0xBA7E23FA) + 1564414461;
  v206 = *(_DWORD *)(v69 + 4 * (BYTE2(v172) ^ 0xF3u));
  HIDWORD(v204) = v206 ^ 0x186E50D0;
  LODWORD(v204) = v206 ^ 0xC0000000;
  v207 = (v204 >> 29) - ((2 * (v204 >> 29)) & 0x315397F0) - 1733702664;
  v208 = *(_DWORD *)(v72 + 4 * (BYTE1(v185) ^ 0x49u));
  v209 = ((((v208 ^ 0xF00E2592) << ((v113 + 3) & 0x18))
         + 9605273
         + (~(2 * ((v208 ^ 0xF00E2592) << ((v113 + 3) & 0x18))) | 0xFEDADECD)
         + 1) ^ 0x929099) << ((v113 + 3) & 0x18 ^ 0x18);
  v210 = (v209 - ((2 * v209) & 0x5EDFA536) + 795857563) ^ 0x2F6FD29B | (v208 >> 8) ^ 0xF00E25;
  v211 = (((2 * (v202 ^ 0x889839D3)) | 0x524B3562) - (v202 ^ 0x889839D3) - 690330289) ^ 0x8BBCE38D;
  v212 = ((((-1006383011 - ((v202 & 0x5E) + (v202 | 0xFFFFFF5E))) & 0x1D73 ^ 0x52146970)
         + ((-1006383011 - ((v202 & 0x5E) + (v202 | 0xFFFFFF5E))) & 0x28C ^ 0xA880020D)
         - 1) ^ 0x54AD27A5)
       + 1;
  v213 = ((2 * v202) & 0xFC ^ 0xB0)
       + (v202 ^ 0xDF2C35A6)
       + (v212 ^ 0x5FDFDF7F)
       + ((2 * v212) & 0xBFBFBEFE);
  v214 = v205 ^ *(_DWORD *)(v79 + 4 * ((v211 - ((2 * v211) & 0xE81C908) - 2025790332) ^ 0xAD41A40F)) ^ v207 ^ (v207 >> 3) ^ (v207 >> 4) ^ (v210 - ((2 * v210) & 0x5C7778) + 3029948) ^ (((4 * (v210 - ((2 * v210) & 0x5C7778) + 3029948)) ^ 0xB8EEF0) - ((2 * ((4 * (v210 - ((2 * v210) & 0x5C7778) + 3029948)) ^ 0xB8EEF0)) & 0x8D0B37C8) + 1183161318) & 0xB6E3E5F8 ^ (v213 - ((2 * v213 + 31970822) & 0x21D73974) - 773879875);
  v215 = *(_DWORD *)(v66 + 4 * (HIBYTE(v172) ^ 0x77));
  HIDWORD(v204) = v215 ^ 0x74F7B;
  LODWORD(v204) = v215 ^ 0xA4C80000;
  v216 = (v204 >> 19) - ((2 * (v204 >> 19)) & 0x209A1414) - 1873999350;
  v217 = *(_DWORD *)(v69 + 4 * (BYTE2(v185) ^ 0x71u));
  HIDWORD(v204) = v217 ^ 0x186E50D0;
  LODWORD(v204) = v217 ^ 0xC0000000;
  v218 = *(_DWORD *)(v72 + 4 * (BYTE1(v202) ^ 0xDAu));
  v219 = (v204 >> 29) - ((2 * (v204 >> 29)) & 0x25862854) + 314774570;
  HIDWORD(v204) = v218 ^ 0x92;
  LODWORD(v204) = v218 ^ 0xF00E2500;
  v220 = ((2 * (v152 ^ 0xA9)) & 0x172) - (v152 ^ 0xA9) + 6470;
  v221 = (v204 >> 8) - ((2 * (v204 >> 8)) & 0xD161F73A) - 391054435;
  v222 = ((v152 ^ 0xE8) - ((2 * (v152 ^ 0xE8)) & 0x1AA) - 225244203) ^ 0xD0B7BB4D;
  v223 = (v220 ^ 0x19E5)
       + (((v220 ^ 0xAE39451B) + 1) ^ 0xBFAFEADF)
       + ((2 * ((v220 ^ 0xAE39451B) + 1)) & 0x5C52D5BE)
       + 1078990113;
  v224 = v216 ^ v219 ^ *(_DWORD *)(v79 + 4 * ((((2 * v222) & 0x40015ADA) - v222 - 965274990) ^ 0xE453A254)) ^ (v219 >> 3) ^ (v219 >> 4) ^ v221 ^ (((((4 * v221) ^ 0xA2C3EE74) - ((2 * ((4 * v221) ^ 0xA2C3EE74)) & 0x3FFA6BC8) + 536688102) & 0xB6E3E5F8 ^ 0x4F8F9897) - 1) ^ (v223 - ((2 * v223) & 0xAF292A0C) + 1469355270);
  v225 = *(_DWORD *)(v66 + 4 * (HIBYTE(v185) ^ 0xFE));
  HIDWORD(v204) = v225 ^ 0x74F7B;
  LODWORD(v204) = v225 ^ 0xA4C80000;
  v226 = (v204 >> 19) - ((2 * (v204 >> 19)) & 0x64945784) + 843721666;
  v227 = *(_DWORD *)(v69 + 4 * (BYTE2(v202) ^ 0xD1u));
  HIDWORD(v204) = v227 ^ 0x186E50D0;
  LODWORD(v204) = v227 ^ 0xC0000000;
  v228 = (v204 >> 29) - ((2 * (v204 >> 29)) & 0x468740E4) - 1555849102;
  v229 = (((2 * (BYTE1(v152) ^ 0xF5)) & 0x17A) - (BYTE1(v152) ^ 0xF5) + 1853185602) ^ 0x4BE4DF62;
  v230 = *(_DWORD *)(v72 + 4 * ((v229 - ((2 * v229) & 0xB0106BE) + 531407711) ^ 0x3A3D2295u));
  HIDWORD(v204) = v230 ^ 0x92;
  LODWORD(v204) = v230 ^ 0xF00E2500;
  v231 = (v204 >> 8) - ((2 * (v204 >> 8)) & 0x627A10F6) - 1321400197;
  v232 = ((4 * v231) ^ 0xC4F421EC) - ((2 * ((4 * v231) ^ 0xC4F421EC)) & 0x9FF46648) + 1341797158;
  v233 = (v172 ^ 0x119B4D6) - ((2 * (v172 ^ 0x119B4D6)) & 0x13607A) - 252708803;
  v234 = (v233 ^ 0xF1F64C19)
       + (((v233 ^ 0x5FCF10E7) + 1) ^ 0x7EFDFEFF)
       + ((2 * ((v233 ^ 0x5FCF10E7) + 1)) & 0xFDFBFDFE)
       - 2130575103;
  v235 = v226 ^ v228 ^ *(_DWORD *)(v79 + 4 * (((v172 & 0x71 ^ 0xDF290B31) + (v172 & 0x8E ^ 0xD) - 1) ^ 0xDF290B73)) ^ (v228 >> 3) ^ (v228 >> 4) ^ v231 ^ (v234 - ((2 * v234) & 0xA7F5BB66) - 738533965) ^ ((v232 & 0x1063C558 ^ 0x1135C159 | v232 & 0xA68020A0) - 1);
  v236 = *(_DWORD *)(v66 + 4 * (HIBYTE(v202) ^ 0x20));
  HIDWORD(v204) = v236 ^ 0x74F7B;
  LODWORD(v204) = v236 ^ 0xA4C80000;
  v237 = (v204 >> 19) - ((2 * (v204 >> 19)) & 0xC326414E) - 510451545;
  v238 = *(_DWORD *)(v69 + 4 * (BYTE2(v152) ^ 0x5Bu));
  HIDWORD(v204) = v238 ^ 0x186E50D0;
  LODWORD(v204) = v238 ^ 0xC0000000;
  v239 = (BYTE1(v172) ^ 0x68 | 0x6E30E4DF) - (BYTE1(v172) ^ 0x68 | 0x91CF1B20) - 1848698080;
  v240 = *(_DWORD *)(v72 + 4 * (((v239 & 0x2200A03E ^ 0x842023) + (v239 & 0x4C3047C1 ^ 0xCD104381) - 1) ^ 0xA3A4874B));
  v241 = (v204 >> 29) - ((2 * (v204 >> 29)) & 0x8AC98AB2);
  HIDWORD(v204) = v240 ^ 0x92;
  LODWORD(v204) = v240 ^ 0xF00E2500;
  v242 = v241 + 1164232025;
  v243 = (v204 >> 8) - ((2 * (v204 >> 8)) & 0x68D23016) + 879302667;
  v244 = ((4 * v243) ^ 0xD1A4602C) - ((2 * ((4 * v243) ^ 0xD1A4602C)) & 0x82E08C68) - 1049606601;
  v245 = ((v244 & 0xB6E3E5F8 ^ 0x22A1A050)
        + (v244 & 0x92E2A550 ^ 0xD15E1F00)
        - ((v244 & 0xB6E3E5F8 ^ 0x22A1A050) & 0x92E2A550)) ^ 0x1BBFB930;
  v246 = (v185 ^ 0x77 | 0x62914ADC) - (v185 ^ 0x77 | 0x9D6EB523) - 1653689053;
  v247 = (v246 ^ 0x62914A95)
       + (((v246 ^ 0xCCA8166B) + 1) ^ 0x33FBDD77)
       + ((2 * ((v246 ^ 0xCCA8166B) + 1)) & 0x67F7BAEE)
       - 872144247;
  v248 = v237 ^ *(_DWORD *)(v79
                          + 4
                          * ((((2 * (v185 ^ 0x89875E)) | 0x247FF23C)
                            - (v185 ^ 0x89875E)
                            - 306182430) ^ 0x12B67EC2u)) ^ v242 ^ (v242 >> 3) ^ (v242 >> 4) ^ v243 ^ (v247 - ((2 * v247) & 0x5B2175E4) + 764459762) ^ (((2 * v245) & 0x97732A40) - v245 + 877030111);
  v249 = ((HIWORD(v224) & 0x64 ^ 0x16609B61) + (HIWORD(v224) & 0x9B) - 1) ^ 0x7A28B77;
  v250 = *(_DWORD *)(v66 + 4 * (HIBYTE(v214) ^ 0xCD));
  HIDWORD(v204) = v250 ^ 0x74F7B;
  LODWORD(v204) = v250 ^ 0xA4C80000;
  v251 = (v204 >> 19) - ((2 * (v204 >> 19)) & 0x54BE4AFE) + 710878591;
  v252 = *(_DWORD *)(v69 + 4 * ((((2 * v249) | 0x7888FAD6) - v249 - 1011121515) ^ 0x2D866D8Fu));
  HIDWORD(v204) = v252 ^ 0x186E50D0;
  LODWORD(v204) = v252 ^ 0xC0000000;
  v253 = (v204 >> 29) - ((2 * (v204 >> 29)) & 0x5F17CF0) - 2097627528;
  v254 = *(_DWORD *)(v72 + 4 * (BYTE1(v235) ^ 0x36u));
  HIDWORD(v204) = v254 ^ 0x92;
  LODWORD(v204) = v254 ^ 0xF00E2500;
  v255 = (v204 >> 8) - ((2 * (v204 >> 8)) & 0x76F6EBE2) - 1149536783;
  v256 = ((4 * v255) ^ 0xEDEDD7C4) - ((2 * ((4 * v255) ^ 0xEDEDD7C4)) & 0x4C98E230) + 642543896;
  v257 = ((v256 & 0xB6E3E5F8 ^ 0x6428160)
        + (v256 & 0x6006000 ^ 0x1147807)
        - ((v256 & 0xB6E3E5F8 ^ 0x6428160) & 0x6006000)) & 0xFEFFE5F8;
  v258 = ((v248 ^ 0xF3) + (v248 & 0xAB ^ 0xC85D7E08) - ((v248 ^ 0xF3) & 0xAB)) ^ 0xE8DF6EAF;
  v259 = ((((2 * v258) & 0x4100018E) - v258 - 852567240) ^ 0xEDACCB88)
       + ((((((2 * v258) & 0x4100018E) - v258 - 852567240) ^ 0x43959776) + 1) ^ 0xF7FEDECB)
       + ((2 * (((((2 * v258) & 0x4100018E) - v258 - 852567240) ^ 0x43959776) + 1)) & 0xEFFDBD96)
       + 134291765;
  v260 = ((2 * (v248 ^ 0x34)) & 0xD6) - (v248 ^ 0x34) - 93303404;
  v261 = *(_DWORD *)(v66 + 4 * (HIBYTE(v224) ^ 0xB8));
  v262 = v251 ^ v253 ^ *(_DWORD *)(v79
                                 + 4 * (((v260 & 0x4EA ^ 0x8C1) - (v260 & 0x10000315) + 1025827604) ^ 0x2D24EE8Eu)) ^ (v253 >> 3) ^ (v253 >> 4) ^ v255 ^ v257 ^ (v259 - ((2 * v259) & 0xA1EA6C82) - 789236159);
  HIDWORD(v204) = v261 ^ 0x74F7B;
  LODWORD(v204) = v261 ^ 0xA4C80000;
  v263 = (v204 >> 19) - ((2 * (v204 >> 19)) & 0x192BAE6);
  v264 = *(_DWORD *)(v69 + 4 * (BYTE2(v235) ^ 0x6Cu));
  HIDWORD(v204) = v264 ^ 0x186E50D0;
  LODWORD(v204) = v264 ^ 0xC0000000;
  v265 = *(_DWORD *)(v72
                   + 4
                   * ((((2 * (BYTE1(v248) ^ 0x240A48B1)) | 0x3B2A90C6) - (BYTE1(v248) ^ 0x240A48B1) + 1651160989) ^ 0xB99F00C9));
  v266 = (v204 >> 29) - ((2 * (v204 >> 29)) & 0xE739D5DA);
  HIDWORD(v204) = v265 ^ 0x92;
  LODWORD(v204) = v265 ^ 0xF00E2500;
  v267 = v266 + 1939663597;
  v268 = (v204 >> 8) - ((2 * (v204 >> 8)) & 0x3BE7C90A) + 502523013;
  v269 = (((4 * v268) ^ 0x77CF9214) - ((2 * ((4 * v268) ^ 0x77CF9214)) & 0x5FE8D608) + 804547332) & 0xB6E3E5F8 ^ 0x146225A0;
  v270 = (v214 ^ 0xC1) + (v214 & 0x4A ^ 0x170A) - ((v214 ^ 0xC1) & 0x4A);
  v271 = (v270 ^ 0x175A)
       + (((v270 ^ 0xAE394BA4) + 1) ^ 0xDFEE26FB)
       + ((2 * ((v270 ^ 0xAE394BA4) + 1)) & 0xBFDC4DF6)
       + 538040581;
  v272 = ((v214 ^ 0xE2 | 0xC58261EC) - (v214 ^ 0xE2 | 0x3A7D9E13) + 981310995) ^ 0xF1E6D08A;
  v273 = (v263 + 13196659) ^ *(_DWORD *)(v79 + 4 * ((((2 * v272) | 0xCDF270CA) - v272 + 419874715) ^ 0xD29D898C)) ^ v267 ^ (v267 >> 3) ^ (v267 >> 4) ^ v268 ^ (v271 - ((2 * v271) & 0x468071B4) + 591411418) ^ (((v269 - ((2 * v269) & 0x498549B0) - 1396005668) ^ 0xA90D45B1) - 1);
  v274 = HIBYTE(v248) ^ 0x4B;
  v275 = *(_DWORD *)(v66 + 4 * (HIBYTE(v235) ^ 0x3E));
  v276 = ((HIWORD(v248) & 0x98) + (BYTE2(v248) ^ 0xFFFFFFFA) + (BYTE2(v248) | 0xBAA92867) + 1) ^ 0xBAA9281C;
  HIDWORD(v204) = v275 ^ 0x74F7B;
  LODWORD(v204) = v275 ^ 0xA4C80000;
  v277 = (v204 >> 19) - ((2 * (v204 >> 19)) & 0x8A8D5C4C) + 1162260006;
  v278 = *(_DWORD *)(v69 + 4 * v276);
  HIDWORD(v204) = v278 ^ 0x186E50D0;
  LODWORD(v204) = v278 ^ 0xC0000000;
  v279 = (v204 >> 29) - ((2 * (v204 >> 29)) & 0xCEAF4B1E) + 1733797263;
  v280 = *(_DWORD *)(v72 + 4 * (BYTE1(v214) ^ 0x4Eu));
  HIDWORD(v204) = v280 ^ 0x92;
  LODWORD(v204) = v280 ^ 0xF00E2500;
  v281 = (v204 >> 8) - ((2 * (v204 >> 8)) & 0xC562D312) - 491689591;
  v282 = (((4 * v281) ^ 0x8AC5A624) - ((2 * ((4 * v281) ^ 0x8AC5A624)) & 0xE054FFE8) + 1881833461) & 0xB6E3E5F8 ^ 0x32F4A36C;
  v283 = ((2 * v282) & 0x60068750) - v282 + 1324657750;
  v284 = (v224 & 0xDA ^ 0x1994C78A)
       + (v224 ^ 0x44481055)
       - ((v224 ^ 0x44481055) & 0x440800DA);
  v285 = ((v224 & 2)
        + (v224 ^ 0xA02A134E)
        - ((v224 ^ 0xA02A134E) & 0x200A1102)
        + 202705920) ^ 0x8C350EB7;
  v286 = (v284 ^ 0x19D4D7C8)
       + (((v284 ^ 0xB7ED8B36) + 1) ^ 0xDF7EDFBD)
       + ((2 * ((v284 ^ 0xB7ED8B36) + 1)) & 0xBEFDBF7A)
       + 545333315;
  v287 = v286 - ((2 * v286) & 0xA1D24C16) - 790026741;
  v288 = *(_DWORD *)(v66 + 4 * v274);
  HIDWORD(v204) = v288 ^ 0x74F7B;
  LODWORD(v204) = v288 ^ 0xA4C80000;
  v289 = (v204 >> 19) - ((2 * (v204 >> 19)) & 0xF3827DF2) - 104775943;
  v290 = *(_DWORD *)(v69 + 4 * (BYTE2(v214) ^ 0xA1u));
  HIDWORD(v204) = v290 ^ 0x186E50D0;
  LODWORD(v204) = v290 ^ 0xC0000000;
  v291 = *(_DWORD *)(v72
                   + 4
                   * ((((2 * (BYTE1(v224) ^ 0xE9)) | 0x230FBF1E) - (BYTE1(v224) ^ 0xE9) + 1316495473) & 0x3FFFFFFF ^ 0x3187DF4Du));
  v292 = (v204 >> 29) - ((2 * (v204 >> 29)) & 0xE68F2910) + 1934070920;
  HIDWORD(v204) = v291 ^ 0x92;
  LODWORD(v204) = v291 ^ 0xF00E2500;
  v293 = v277 ^ *(_DWORD *)(v79 + 4 * v285) ^ v279 ^ (v279 >> 3) ^ (v279 >> 4) ^ v281 ^ v283 ^ v287;
  v294 = (v204 >> 8) - ((2 * (v204 >> 8)) & 0xEA7610) + 7682824;
  v295 = (((4 * v294) ^ 0x1D4EC20) - 2 * (((4 * v294) ^ 0x1D4EC20) & 0x154CE6B4 ^ (4 * v294) & 4) - 1790122318) & 0xB6E3E5F8 ^ 0x36428480;
  v296 = v295 - ((2 * v295) & 0x24824880) - 1705434045;
  v297 = (v235 ^ 0x41A33776 | 0x58A81398)
       - (v235 ^ 0x41A33776 | 0xA757EC67)
       - 1487410073;
  v298 = (v297 & 0x1080056 ^ 0x83640056) + (v297 ^ 0x3C1ABC89) - ((v297 ^ 0x3C1ABC89) & 0x25008056);
  LOWORD(v295) = (v235 ^ 0x26) + (v235 & 0x77 ^ 0x9F51) - ((v235 ^ 0x26) & 0x7777);
  v299 = (v298 ^ 0x827D1846)
       + (((v298 ^ 0x2C4444B8) + 1) ^ 0x6EB7F7AF)
       + ((2 * ((v298 ^ 0x2C4444B8) + 1)) & 0xDD6FEF5E)
       - 1857550255;
  v300 = v289 ^ *(_DWORD *)(v79 + 4 * (((v295 & 0x96AC ^ 0x85029289) + (v295 & 0x6953) - 1) ^ 0x85020D12)) ^ v294 ^ v292 ^ (v292 >> 3) ^ (v292 >> 4) ^ v296 & 0xFFEFFFF8 ^ (v299 - ((2 * v299) & 0x1A1BCA2) - 2133795247);
  v301 = (v300 ^ 0x7FB3B2CD) + 1907365943;
  v302 = ((2 * v300) ^ 0xFF67659A) - 2 * (((2 * v300) ^ 0xFF67659A) & 0x670918CC ^ (2 * v300) & 4) - 418834232;
  v303 = (v301 ^ 0x7DDAFEDE)
       + ((2 * v301) & 0xFBB5FDBC)
       + (v302 & 0xE360306E ^ 0x6920300F)
       + ((2 * v302) & 0xC2802050 ^ 0x3DFFDFEF)
       + 1;
  v304 = v303 - ((2 * v303 + 805945782) & 0x2C2EEE8A) - 1910745056;
  v305 = *(_DWORD *)(v66 + 4 * (HIBYTE(v262) ^ 0x6C));
  HIDWORD(v204) = v305 ^ 0x74F7B;
  LODWORD(v204) = v305 ^ 0xA4C80000;
  v306 = (v204 >> 19) - ((2 * (v204 >> 19)) & 0x5FAD12C) + 50161814;
  v307 = *(_DWORD *)(v69
                   + 4
                   * ((((2 * (BYTE2(v273) ^ 0x40448E6)) & 0x8080048) - (BYTE2(v273) ^ 0x40448E6) + 1771825371) ^ 0x6D9FA0A2u));
  HIDWORD(v204) = v307 ^ 0x186E50D0;
  LODWORD(v204) = v307 ^ 0xC0000000;
  v308 = *(_DWORD *)(v72 + 4 * (BYTE1(v293) ^ 0x67u));
  v309 = (v204 >> 29) - ((2 * (v204 >> 29)) & 0x6DC01B74);
  HIDWORD(v204) = v308 ^ 0x92;
  LODWORD(v204) = v308 ^ 0xF00E2500;
  v310 = v309 - 1226830406;
  v311 = (v204 >> 8) - ((2 * (v204 >> 8)) & 0x7FB964A4) - 1076055470;
  v312 = ((4 * v311) ^ 0xFF72C948) - ((2 * ((4 * v311) ^ 0xFF72C948)) & 0xF83C9188) - 65124156;
  v313 = ((v312 & 0xB6E3E5F8 ^ 0x2261A0C8)
        + (v312 & 0x32C0A4C8 ^ 0x51800607)
        - ((v312 & 0xB6E3E5F8 ^ 0x2261A0C8) & 0x32C0A4C8)) ^ 0x6382E6CE;
  LOWORD(v301) = (v304 & 0x2B ^ 0xFA23) + (v304 & 0xD4 ^ 0x85) - 1;
  v314 = (v301 & 3 ^ 0x2189801) + (v301 & 0x3FC ^ 0x8A402A9) - 1;
  v315 = (v314 ^ 0xABC984B)
       + (((v314 ^ 0xA485C4B5) + 1) ^ 0xFFD7F596)
       + ((2 * ((v314 ^ 0xA485C4B5) + 1)) & 0xFFAFEB2C)
       + 2624106;
  v316 = ((v304 ^ 0x550EC74E) - ((2 * (v304 ^ 0x550EC74E)) & 0xAA188EAA) + 1430085461) ^ 0x817A5AFC;
  v317 = *(_DWORD *)(v66 + 4 * (HIBYTE(v273) ^ 0xCF));
  v318 = v306 ^ v310 ^ *(_DWORD *)(v79 + 4 * ((((2 * v316) & 0x107FB702) - v316 + 1665148030) ^ 0xE209E660)) ^ (v310 >> 3) ^ (v310 >> 4) ^ v311 ^ (v313 - ((2 * v313) & 0x274594B2) + 329435737) ^ (v315 - ((2 * v315) & 0x5FB95958) - 1344492372);
  HIDWORD(v204) = v317 ^ 0x74F7B;
  LODWORD(v204) = v317 ^ 0xA4C80000;
  v319 = *(_DWORD *)(v69 + 4 * (BYTE2(v293) ^ 0x9Du));
  v320 = (v204 >> 19) - ((2 * (v204 >> 19)) & 0xEA27F22);
  HIDWORD(v204) = v319 ^ 0x186E50D0;
  LODWORD(v204) = v319 ^ 0xC0000000;
  v321 = v320 + 122765201;
  v322 = ((BYTE1(v304) ^ 0x2482D76) - ((2 * (BYTE1(v304) ^ 0x2482D76)) & 0x49053FA) - 11671043) ^ 0xF585EC15;
  v323 = *(_DWORD *)(v72 + 4 * ((((2 * v322) | 0xB903F33A) - v322 - 1552021917) ^ 0x5401D139));
  v324 = (v204 >> 29) - ((2 * (v204 >> 29)) & 0x1DBF15E) - 2131887953;
  HIDWORD(v204) = v323 ^ 0x92;
  LODWORD(v204) = v323 ^ 0xF00E2500;
  v325 = (v204 >> 8) - ((2 * (v204 >> 8)) & 0x1FB7FC38) - 1881407972;
  v326 = (((4 * v325) ^ 0x3F6FF870) - ((2 * ((4 * v325) ^ 0x3F6FF870)) & 0xD972E178) + 1824092351) & 0xB6E3E5F8 ^ 0xA4A962F8;
  v327 = ((4 * (v262 & 1)) ^ 4) & 0xFFFFFFFD | (2 * (v262 & 1));
  v328 = v324 ^ *(_DWORD *)(v79
                          + 4
                          * (((v262 ^ 0xE553A12C)
                            - ((2 * (v262 ^ 0xE553A12C)) & 0x88050172)
                            + 1151779513) ^ 0xA1F56348)) ^ (v324 >> 3) ^ (v324 >> 4) ^ v321 ^ v325 ^ (v327 - 1213732247 + ((2 * ((v327 - 1371972355) & 0x8280D6E ^ ((v327 - 1632723715) | 0xFFFFFFFB))) ^ 0xB)) ^ ((v326 | 0x6230C518) - (v326 | 0x9DCF3AE7) - 1647363353);
  v329 = *(_DWORD *)(v66 + 4 * (HIBYTE(v293) ^ 0xDC));
  HIDWORD(v204) = v329 ^ 0x74F7B;
  LODWORD(v204) = v329 ^ 0xA4C80000;
  v330 = (v204 >> 19) - ((2 * (v204 >> 19)) & 0xA7229FEE) - 745451529;
  v331 = *(_DWORD *)(v69 + 4 * (BYTE2(v304) ^ 0x33u));
  HIDWORD(v204) = v331 ^ 0x186E50D0;
  LODWORD(v204) = v331 ^ 0xC0000000;
  v332 = *(_DWORD *)(v72 + 4 * (BYTE1(v262) ^ 0x70u));
  v333 = (v204 >> 29) - ((2 * (v204 >> 29)) & 0x5204E4B6) - 1459457445;
  HIDWORD(v204) = v332 ^ 0x92;
  LODWORD(v204) = v332 ^ 0xF00E2500;
  v334 = (v204 >> 8) - ((2 * (v204 >> 8)) & 0x7F195FCC) + 1066184678;
  v335 = ((4 * v334) ^ 0xFE32BF98) - 2 * (((4 * v334) ^ 0xFE32BF98) & 0x448AE224 ^ (4 * v334) & 0x20) + 1149952518;
  v336 = ((v335 & 0x20626410 ^ 0x29460E15) + (v335 & 0x968181E8 ^ 0x96010109) - 2) ^ 0x38677F1D;
  v337 = (((2 * (v273 ^ 0x16)) & 0xFFFFFF7F) - (v273 ^ 0x16) + 30435904) & 0x1102BFF;
  v338 = (v337 ^ 0xAF297632) + 1;
  v339 = v333 ^ *(_DWORD *)(v79 + 4 * (((v273 & 0x2E ^ 0x312E8D0D) + (v273 & 0xD1) - 1) ^ 0x312E8D2A)) ^ (v333 >> 3) ^ (v333 >> 4) ^ v330 ^ v334 ^ (v336 - ((2 * v336) & 0x27026B00) - 1818675324) ^ ((v337 ^ 0x1102ACC) + (v338 ^ 0x7ECF599A) + ((2 * v338) & 0x5C12B334) - 2127518106 - ((2 * ((v337 ^ 0x1102ACC) + (v338 ^ 0x7ECF599A) + ((2 * v338) & 0x5C12B334) - 2127518106)) & 0x68F06DF8) + 880293628);
  v340 = *(_DWORD *)(v66 + 4 * (HIBYTE(v304) ^ 0x7F));
  HIDWORD(v204) = v340 ^ 0x74F7B;
  LODWORD(v204) = v340 ^ 0xA4C80000;
  v341 = (v204 >> 19) - ((2 * (v204 >> 19)) & 0x73187BA8) - 1181991468;
  v342 = *(_DWORD *)(v69 + 4 * (BYTE2(v262) ^ 0x4Cu));
  HIDWORD(v204) = v342 ^ 0x186E50D0;
  LODWORD(v204) = v342 ^ 0xC0000000;
  v343 = (v204 >> 29) - ((2 * (v204 >> 29)) & 0x5F7D27A) - 2097419971;
  v344 = *(_DWORD *)(v72 + 4 * (BYTE1(v273) ^ 0x3Cu));
  HIDWORD(v204) = v344 ^ 0x92;
  LODWORD(v204) = v344 ^ 0xF00E2500;
  v345 = (v204 >> 8) - ((2 * (v204 >> 8)) & 0xCB8BA4C2) + 1707463265;
  v293 = v293;
  v346 = 2 * ((v293 ^ 4) & 0x3F) - (v293 ^ 4);
  v347 = ((2 * (v293 ^ 0x52)) & 0xD8) - (v293 ^ 0x52) - 557977965;
  v348 = ((v346 - 1951403328) ^ 0x8BAFF279)
       + ((((v346 - 1951403328) ^ 0x2596AE87) + 1) ^ 0xF6FFF77B)
       + ((2 * (((v346 - 1951403328) ^ 0x2596AE87) + 1)) & 0x4C72EEF6)
       + 150997125;
  v349 = v343 ^ *(_DWORD *)(v79
                          + 4
                          * (((v347 & 0x80200AAF ^ 0x2E) + (v347 ^ 0xBB32BFC1) - ((v347 ^ 0xBB32BFC1) & 0x40212AF)) ^ 0xE1AD4BAE)) ^ (v343 >> 3) ^ (v343 >> 4) ^ v345 ^ v341 ^ (v348 - ((2 * v348) & 0x5372AA30) + 700011800) ^ (((4 * v345) ^ 0x97174984) - ((2 * ((4 * v345) ^ 0x97174984)) & 0x77DB9830) - 1142043624) & 0xB6E3E5F8;
  v350 = *(_DWORD *)(v66 + 4 * (HIBYTE(v349) ^ 0xC8));
  HIDWORD(v204) = v350 ^ 0x74F7B;
  LODWORD(v204) = v350 ^ 0xA4C80000;
  v351 = (v204 >> 19) - ((2 * (v204 >> 19)) & 0xEEE0218C) - 143650618;
  v352 = *(_DWORD *)(v69 + 4 * (((HIWORD(v318) & 0x7A ^ 0x539) + (HIWORD(v318) & 0x85) - 1) ^ 0x57C));
  HIDWORD(v204) = v352 ^ 0x186E50D0;
  LODWORD(v204) = v352 ^ 0xC0000000;
  v353 = *(_DWORD *)(v72 + 4 * (BYTE1(v328) ^ 0x81u));
  v354 = (v204 >> 29) - ((2 * (v204 >> 29)) & 0xF6D381EA);
  HIDWORD(v204) = v353 ^ 0x92;
  LODWORD(v204) = v353 ^ 0xF00E2500;
  v355 = v354 - 76955403;
  v356 = (v204 >> 8) - ((2 * (v204 >> 8)) & 0xA762D328) - 743347820;
  v357 = (((4 * v356) ^ 0x4EC5A650) - 2 * (((4 * v356) ^ 0x4EC5A650) & 0x4CB88E04 ^ (4 * v356) & 4) + 1287163393) & 0xB6E3E5F8 ^ 0x6A0C494;
  v358 = ((v339 & 0x46 ^ 0x1E043) - 1) & 0xFFFF7FFF | v339 & 0xB9;
  v359 = (((2 * (v339 ^ 0x5F)) & 0x1EA) - (v339 ^ 0x5F) + 646287114) ^ 0x62C20F44;
  v360 = (v358 ^ 0x160BA)
       + (((v358 ^ 0xAE383C44) + 1) ^ 0xEF53AFFF)
       + ((2 * ((v358 ^ 0xAE383C44) + 1)) & 0x5C225BFE)
       + 279728129;
  v361 = v351 ^ *(_DWORD *)(v79 + 4 * ((((2 * v359) & 0x8012D0C) - v359 + 2077714809) ^ 0x3F90E92Cu)) ^ v355 ^ (v355 >> 3) ^ (v355 >> 4) ^ v356 ^ (v360 - ((2 * v360) & 0xEE892BC0) + 2000983520) ^ ((v357 | 0x5F50B0DA) - (v357 | 0xA0AF4F25) - 1599123675);
  v362 = ((v361 >> 7) & 0x19EFBBE ^ 0x1024B3C) + ((v361 >> 8) ^ 0x6E7E5A61);
  v363 = (((2 * (v362 + 33)) & 0xFA)
        + ((((v361 >> 7) & 0xBE ^ 0x3C) + (BYTE1(v361) ^ 0x61) + 33) ^ 0xF36BAF7D)
        + 211046531)
       % 0xD1;
  v364 = *(_DWORD *)(v69 + 4 * (BYTE2(v328) ^ 0xAu));
  HIDWORD(v204) = v364 ^ 0x186E50D0;
  LODWORD(v204) = v364 ^ 0xC0000000;
  v365 = (v204 >> 29) - ((2 * (v204 >> 29)) & 0x7307280) - 2087175872;
  v366 = v365 >> 1;
  v367 = (2 * (v366 & 0x800000)) ^ 0x1000000 | v366 & 0x800000;
  v368 = ((v367 - 0x800000) & (v365 ^ 0x83800000)) + (~(2 * ((v367 - 0x800000) & (v365 ^ 0x83800000))) | 0xEF8F7CF);
  v369 = v367 + 1330499263;
  v370 = 1347276479 - v367;
  if (v368 == -1)
    v371 = v369;
  else
    v371 = v370;
  v372 = *(_DWORD *)(v66 + 4 * (HIBYTE(v318) ^ 0x21));
  HIDWORD(v373) = v372 ^ 0x74F7B;
  LODWORD(v373) = v372 ^ 0xA4C80000;
  v374 = (v373 >> 19) - ((2 * (v373 >> 19)) & 0xA4DFB3A2) + 1383061969;
  v375 = (v366 & 0x7F7FFFF8 ^ 0x57710B10)
       + (v366 & 0x1C5141E0 ^ 0x880040E5)
       - ((v366 & 0x7F7FFFF8 ^ 0x57710B10) & 0x1C5141E0);
  v376 = ((v365 ^ 0x83983940)
        - 1338887871
        + v371
        - ((2 * ((v365 ^ 0x83983940) - 1338887871 + v371)) & 0x5300246)
        + 43516195) ^ ((v375 & 0xD8E6E5EC ^ 0x50A2A528) + (v375 ^ 0x8E4550D6) - ((v375 ^ 0x8E4550D6) & 0xD8E6E5E9));
  v377 = *(_DWORD *)(v72
                   + 4 * (((BYTE1(v339) ^ 0xE5) - 624131533 - ((2 * (BYTE1(v339) ^ 0xE5)) & 0x92) + 22) ^ 0xDACC8233));
  HIDWORD(v373) = v377 ^ 0x92;
  LODWORD(v373) = v377 ^ 0xF00E2500;
  v378 = (v373 >> 8) + 1189594435 + (~(2 * (v373 >> 8)) | 0x7230757B);
  v379 = (((4 * v378) ^ 0x1B9F1508) - ((2 * ((4 * v378) ^ 0x1B9F1508)) & 0xD6E022B8) + 1802506591) & 0xB6E3E5F8 ^ 0xAEE06D5D;
  v380 = ((v349 & 0x41) + (v349 ^ 0xFFFFFFFD) + (v349 | 0xC92023BE) + 1) ^ 0xC1682AF6;
  v381 = ((v380 - ((2 * v380) & 0x1CD6596C) + 241904822) ^ 0x62325B1)
       + ((((v380 - ((2 * v380) & 0x1CD6596C) + 241904822) ^ 0xA81A794F) + 1) ^ 0xDE73A6E9)
       + ((2 * (((v380 - ((2 * v380) & 0x1CD6596C) + 241904822) ^ 0xA81A794F) + 1)) & 0xBCE74DD2)
       + 562845975;
  v382 = v374 ^ *(_DWORD *)(v79 + 4 * (((v349 ^ 0x30) - ((2 * v349) & 0x12) + 8201) ^ 0x20C8)) ^ v378 ^ v365 ^ (((2 * v379) & 0x7441C092) - v379 + 1154686388) ^ (v376 >> 3);
  v383 = *(_DWORD *)(v66 + 4 * (HIBYTE(v328) ^ 0xB8));
  HIDWORD(v373) = v383 ^ 0x74F7B;
  LODWORD(v373) = v383 ^ 0xA4C80000;
  v384 = v382 ^ (v381 - ((2 * v381) & 0x3B01AADC) + 494982510);
  v385 = (v373 >> 19) - ((2 * (v373 >> 19)) & 0x8F0BAD26) + 1199953555;
  v386 = *(_DWORD *)(v69 + 4
                         * (((BYTE2(v339) ^ 0x1D) - ((2 * (BYTE2(v339) ^ 0x1D)) & 0x2C) + 351949078) ^ 0x14FA5190u));
  HIDWORD(v373) = v386 ^ 0x186E50D0;
  LODWORD(v373) = v386 ^ 0xC0000000;
  v387 = *(_DWORD *)(v72 + 4 * (BYTE1(v349) ^ 0x66u));
  v388 = (v373 >> 29) - ((2 * (v373 >> 29)) & 0xA1A1D690) - 791614648;
  HIDWORD(v373) = v387 ^ 0x92;
  LODWORD(v373) = v387 ^ 0xF00E2500;
  v389 = (v373 >> 8) - ((2 * (v373 >> 8)) & 0xB8D8DA2C) - 596873962;
  v390 = ((4 * v389) ^ 0x71B1B458) - ((2 * ((4 * v389) ^ 0x71B1B458)) & 0x4F7D2AF8) - 1480682114;
  v391 = ((v318 ^ 0xC7) - ((2 * (v318 ^ 0xC7)) & 0xFFFFFF7F) - 1676485441) ^ 0x957071FF;
  v392 = ((v318 & 0xC9 ^ 0x682A0080) + (v318 & 0x36 ^ 0x86111821) - 1) ^ 0xEF98F327;
  v393 = (((v391 | 0x89523FCE) - (v391 | 0x76ADC031) + 1991098417) ^ 0x803092D3)
       + (((((v391 | 0x89523FCE) - (v391 | 0x76ADC031) + 1991098417) ^ 0x2E09CE2D) + 1) ^ 0xF77FFF72)
       + ((2 * ((((v391 | 0x89523FCE) - (v391 | 0x76ADC031) + 1991098417) ^ 0x2E09CE2D) + 1)) & 0xEEFFFEE4)
       + 142606478;
  v394 = *(_DWORD *)(v66 + 4 * (HIBYTE(v339) ^ 0x45));
  HIDWORD(v373) = v394 ^ 0x74F7B;
  LODWORD(v373) = v394 ^ 0xA4C80000;
  v395 = (v373 >> 19) - ((2 * (v373 >> 19)) & 0x4023E21A) - 1609436915;
  v396 = v385 ^ *(_DWORD *)(v79 + 4 * ((v392 - ((2 * v392) & 0x3424BFE) + 1840068095) ^ 0x6C0EDE5E)) ^ v388 ^ (v388 >> 3) ^ (v388 >> 4) ^ v389 ^ ((v390 & 0xB6E3E5F8 ^ 0x37A6D7EE) + (v390 & 0x9221A1A0 ^ 0xC8192000) - ((v390 & 0xB6E3E5F8 ^ 0x37A6D7EE) & 0x9325B3A0)) ^ (v393 - ((2 * v393) & 0x78864C06) + 1011033603);
  v397 = *(_DWORD *)(v69 + 4 * (BYTE2(v349) ^ 0xC8u));
  HIDWORD(v373) = v397 ^ 0x186E50D0;
  LODWORD(v373) = v397 ^ 0xC0000000;
  v398 = (v373 >> 29) - ((2 * (v373 >> 29)) & 0x1E0929CE) - 1895525145;
  v399 = *(_DWORD *)(v72 + 4 * (BYTE1(v318) ^ 0x83u));
  HIDWORD(v373) = v399 ^ 0x92;
  LODWORD(v373) = v399 ^ 0xF00E2500;
  v400 = (v373 >> 8) - ((2 * (v373 >> 8)) & 0xC0B82232) + 1616646425;
  v401 = v328;
  v402 = ((2 * (v328 ^ 0xDD)) | 0x38AD2142) - (v328 ^ 0xDD) - 475435169;
  v403 = (v402 ^ 0x1C56904D) + (v402 ^ 0x4D90334C);
  v404 = v403 ^ 0xDD59BEBB;
  v405 = (2 * v403) & 0xBAB37D76;
  v406 = (((4 * v400) ^ 0x81704464) - ((2 * ((4 * v400) ^ 0x81704464)) & 0x93A07720) - 909100141) & 0xB6E3E5F8 ^ 0xB440A4C8;
  v407 = (((2 * (v401 ^ 0x9F)) & 0x12C) - (v401 ^ 0x9F) - 1428682903) ^ 0xE6D43961;
  v408 = v404 + ((2 * v402) ^ 0x9B22679B) + ((4 * v402) & 0x7FFBFDF8 ^ 0xC9BF32CF) + v405 + 1;
  v409 = v395 ^ v398 ^ *(_DWORD *)(v79 + 4 * ((((2 * v407) | 0xF8A67D9C) - v407 - 2085830350) ^ 0x305F00D4)) ^ (v398 >> 3) ^ (v398 >> 4);
  v410 = *(_DWORD *)(v69 + 4 * (BYTE2(v396) ^ 0x31u));
  HIDWORD(v373) = v410 ^ 0x186E50D0;
  LODWORD(v373) = v410 ^ 0xC0000000;
  v411 = v409 ^ v400 ^ ((((v406 | 0xA8793667) - (v406 | 0x5786C998) + 1468451224) & 0xA58912ED ^ 0x21800089)
                      + (((v406 | 0xA8793667) - (v406 | 0x5786C998) + 1468451224) & 0x5A76ED12 ^ 0x8702113)
                      - 1) ^ (v408 - ((2 * v408 + 1162379396) & 0xBBF95C30) - 2136936870);
  v412 = (v373 >> 29) - ((2 * (v373 >> 29)) & 0x6305CFE2) - 1316821007;
  v413 = (v412 ^ (v412 >> 1) ^ 0xE9439409) >> (BYTE1(v411) & 3 ^ 3);
  v414 = *(_DWORD *)(v66 + 4 * (HIBYTE(v384) ^ 0x92));
  HIDWORD(v373) = v414 ^ 0x74F7B;
  LODWORD(v373) = v414 ^ 0xA4C80000;
  v415 = (v373 >> 19) - ((2 * (v373 >> 19)) & 0x34B49F68) + 442126260;
  v416 = ((v413 - ((2 * v413) & 0x329E1FD2) + 424611817) ^ 0x194F0FE9) >> (BYTE1(v411) & 3);
  v417 = (BYTE1(v411) ^ 0x65) - ((2 * (BYTE1(v411) ^ 0x65)) & 0x1AC) - 792293930;
  v418 = *(_DWORD *)(v72
                   + 4
                   * (((v417 & 0x90868C0E ^ 0x2529500A) + (v417 ^ 0xD0D68DD4) - ((v417 ^ 0xD0D68DD4) & 0x40E)) ^ 0xB5BFDCE3));
  HIDWORD(v373) = v418 ^ 0x92;
  LODWORD(v373) = v418 ^ 0xF00E2500;
  v419 = (v373 >> 8) + 1539776001 + (~(2 * (v373 >> 8)) | 0x4871C3FF);
  v420 = (((2 * (v361 ^ 0xF0)) & 0x94) - (v361 ^ 0xF0) - 1546477899) ^ 0xEC238992;
  v421 = ((v420 - ((2 * v420) & 0x904028D4) + 2016205930) ^ 0x37DDCBBC)
       + ((((v420 - ((2 * v420) & 0x904028D4) + 2016205930) ^ 0x99E49742) + 1) ^ 0x7AD73FFF)
       + ((2 * (((v420 - ((2 * v420) & 0x904028D4) + 2016205930) ^ 0x99E49742) + 1)) & 0xF5AE7FFE)
       - 2060926975;
  v422 = v412 ^ *(_DWORD *)(v79
                          + 4
                          * (((v361 ^ 0x21 | 0x4B586AE8)
                            - (v361 ^ 0x21 | 0xB4A79517)
                            - 1264085737) ^ 0x4B586A74)) ^ v419 ^ v415 ^ (v416 - ((2 * v416) & 0x8E62EB6C) + 1194423734) ^ (v421 - ((2 * v421) & 0x12E4CB0C) + 158492038) ^ (((((4 * v419) ^ 0x6F1C7800) - ((2 * ((4 * v419) ^ 0x6F1C7800)) & 0xC90D3AB8) - 460939939) & 0xB6E3E5F8 ^ 0xBA074B15) - 1) & 0xBEE3E7F8;
  v423 = *(_DWORD *)(v66 + 4 * (HIBYTE(v396) ^ 0x50));
  HIDWORD(v373) = v423 ^ 0x74F7B;
  LODWORD(v373) = v423 ^ 0xA4C80000;
  v424 = (v373 >> 19) - ((2 * (v373 >> 19)) & 0xB2FCA26A) - 646033099;
  v425 = *(_DWORD *)(v69
                   + 4
                   * (((BYTE2(v411) ^ 0x76) + (HIWORD(v411) & 0xB3 ^ 0x281) - ((BYTE2(v411) ^ 0x76) & 0xB3)) ^ 0x24D));
  HIDWORD(v373) = v425 ^ 0x186E50D0;
  LODWORD(v373) = v425 ^ 0xC0000000;
  v426 = v373 >> 29;
  v427 = 603979981 - v363;
  if (((2 * v363) & 0x1FA) + (v363 ^ 0xF75DBEFD) != -144851203)
    v427 = 205;
  v428 = *(_DWORD *)(v72
                   + 4
                   * (((v362 + v427 + 84) - 1997880794 - ((2 * (v362 + v427 + 340)) & 0xD6) + 69) ^ 0x88EAC226));
  HIDWORD(v429) = v428 ^ 0x92;
  LODWORD(v429) = v428 ^ 0xF00E2500;
  v430 = (v429 >> 8) - ((2 * (v429 >> 8)) & 0xB2D9EF2E) - 647170153;
  v431 = (v384 ^ 0x98)
       + (((v384 ^ 0xAE395C66) + 1) ^ 0x7F7AEB75)
       + ((2 * ((v384 ^ 0xAE395C66) + 1)) & 0x5C7092EA)
       - 2138762101;
  v432 = (((4 * v430) ^ 0x65B3DE5C) - ((2 * ((4 * v430) ^ 0x65B3DE5C)) & 0xE7D71550) + 1944816297) & 0xB6E3E5F8 ^ 0x90612578;
  v433 = v424 ^ (v426 - ((2 * v426) & 0x9A7FB1B2) - 851453735) ^ *(_DWORD *)(v79
                                                                           + 4
                                                                           * (((v384 & 0x67 ^ 0x324)
                                                                             + (v384 & 0x98 ^ 0x89)
                                                                             - 1) ^ 0x388)) ^ ((v426
                                                                                              - ((2 * v426) & 0x9A7FB1B2)
                                                                                              - 851453735) >> 3) ^ ((v426 - ((2 * v426) & 0x9A7FB1B2) - 851453735) >> 4) ^ v430 ^ (v431 - ((2 * v431) & 0x480EC4B0) + 604463704) ^ (((v432 - ((2 * v432) & 0xC4281C0) + 103897824) ^ 0xE72D93B7) - 1);
  v434 = *(_DWORD *)(v66 + 4 * (HIBYTE(v411) ^ 0xD));
  HIDWORD(v429) = v434 ^ 0x74F7B;
  LODWORD(v429) = v434 ^ 0xA4C80000;
  v435 = *(_DWORD *)(v69 + 4 * (BYTE2(v361) ^ 0x27u));
  v436 = (v429 >> 19) - ((2 * (v429 >> 19)) & 0x15C7AE4C) - 1964779738;
  HIDWORD(v429) = v435 ^ 0x186E50D0;
  LODWORD(v429) = v435 ^ 0xC0000000;
  v437 = (v429 >> 29) - ((2 * (v429 >> 29)) & 0xF9436CCA) - 56510875;
  v438 = *(_DWORD *)(v72 + 4 * (BYTE1(v384) ^ 3u));
  HIDWORD(v429) = v438 ^ 0x92;
  LODWORD(v429) = v438 ^ 0xF00E2500;
  v439 = (v429 >> 8) - ((2 * (v429 >> 8)) & 0x48E584D6) - 1535982997;
  v440 = ((4 * v439) ^ 0x91CB09AC) - ((2 * ((4 * v439) ^ 0x91CB09AC)) & 0xC42C55B8) - 501863716;
  v441 = ((2 * (v396 ^ 0x9D)) & 0xFFFFFFFB) - (v396 ^ 0x9D) + 1026;
  v442 = (v441 ^ 0x477)
       + (((v441 ^ 0xAE395889) + 1) ^ 0x23F7B5DE)
       + ((2 * ((v441 ^ 0xAE395889) + 1)) & 0x44626BBC)
       - 603436510;
  v443 = ((2 * (v396 ^ 0xF09B32EA)) | 0x6DA717A6) - (v396 ^ 0xF09B32EA) + 1227650093;
  v444 = v436 ^ *(_DWORD *)(v79 + 4 * (((v443 & 0x444033B4 ^ 0x5022125) + (v443 & 0x208884B) - 1) ^ 0x434A9849)) ^ v437 ^ (v437 >> 3) ^ (v437 >> 4) ^ v439;
  v445 = *(_DWORD *)(v66 + 4 * (HIBYTE(v361) ^ 0xB1));
  HIDWORD(v429) = v445 ^ 0x74F7B;
  LODWORD(v429) = v445 ^ 0xA4C80000;
  v446 = v444 ^ (v442 - ((2 * v442) & 0x54001BCA) - 1442837019) ^ ((v440 & 0xB2A02590 ^ 0x12BC0181)
                                                                 + (v440 & 0x443C068 ^ 0x40028049)
                                                                 - 2);
  v447 = (v429 >> 19) - ((2 * (v429 >> 19)) & 0xDC040BB2) - 301857319;
  v448 = *(_DWORD *)(v69 + 4 * (BYTE2(v384) ^ 0x72u));
  HIDWORD(v429) = v448 ^ 0x186E50D0;
  LODWORD(v429) = v448 ^ 0xC0000000;
  v449 = (v429 >> 29) - ((2 * (v429 >> 29)) & 0xF568E672) + 2058646329;
  v450 = *(_DWORD *)(v72 + 4 * (BYTE1(v396) ^ 0xC8u));
  HIDWORD(v429) = v450 ^ 0x92;
  LODWORD(v429) = v450 ^ 0xF00E2500;
  v451 = (v429 >> 8) - ((2 * (v429 >> 8)) & 0x50C24A42) - 1470028511;
  v452 = ((2 * (v411 ^ 0x18)) & 0xB6) - (v411 ^ 0x18) + 5540;
  v453 = (((4 * v451) ^ 0xA1849484) - 2 * (((4 * v451) ^ 0xA1849484) & 0x4D3E8238 ^ (4 * v451) & 8) + 1295942193) & 0xB6E3E5F8 ^ 0x86634570;
  v454 = (v452 ^ 0x15E6)
       + (((v452 ^ 0xAE394918) + 1) ^ 0x67F7FF7D)
       + ((2 * ((v452 ^ 0xAE394918) + 1)) & 0x4C62FEFA)
       - 1744306045;
  v455 = (((2 * (v411 ^ 0x91)) & 0x136) - (v411 ^ 0x91) + 82829668) ^ 0x4CEFE864;
  v456 = v447 ^ *(_DWORD *)(v79 + 4 * ((((2 * v455) & 0x80006636) - v455 + 253856996) ^ 0x47218593)) ^ v449 ^ (v449 >> 3) ^ (v449 >> 4);
  v457 = v451 ^ ((((v453 | 0xDC8538C7) - (v453 | 0x237AC738) + 595248952) & 0x9A6D992B ^ 0x22C8129)
               + (((v453 | 0xDC8538C7) - (v453 | 0x237AC738) + 595248952) ^ 0xDCD13CC6)
               - ((((v453 | 0xDC8538C7) - (v453 | 0x237AC738) + 595248952) ^ 0xDCD13CC6) & 0x9A6D992B)) ^ (v454 - ((2 * v454) & 0x152F969E) - 1969763505);
  v458 = *(_DWORD *)(v66 + 4 * (HIBYTE(v422) ^ 0x9E));
  v459 = v456 ^ v457;
  HIDWORD(v429) = v458 ^ 0x74F7B;
  LODWORD(v429) = v458 ^ 0xA4C80000;
  v460 = (v429 >> 19) - ((2 * (v429 >> 19)) & 0xE1BD9C76) - 253833669;
  v461 = *(_DWORD *)(v69 + 4
                         * (((BYTE2(v433) ^ 0xAA) - ((2 * (BYTE2(v433) ^ 0xAA)) & 0x54) - 1970642902) ^ 0x8A8A606E));
  HIDWORD(v429) = v461 ^ 0x186E50D0;
  LODWORD(v429) = v461 ^ 0xC0000000;
  v462 = (v429 >> 29) - ((2 * (v429 >> 29)) & 0x8957319A) + 1152096461;
  v463 = ((v446 >> 8) & 0xA3) + ((v446 >> 8) & 0x5C ^ 0x283FDE1D) - 1;
  v464 = *(_DWORD *)(v72
                   + 4
                   * (((v463 & 0x280C931C ^ 0x10002110) + (v463 ^ 0xAC2EDE0C) - ((v463 ^ 0xAC2EDE0C) & 0x10031C)) ^ 0xBC0DB370));
  HIDWORD(v429) = v464 ^ 0x92;
  LODWORD(v429) = v464 ^ 0xF00E2500;
  v465 = (v429 >> 8) + 6431968 - ((2 * (v429 >> 8)) & 0xC45464) + 1362;
  v466 = (((4 * v465) ^ 0x188A8C8) - ((2 * ((4 * v465) ^ 0x188A8C8)) & 0xBC55AE68) - 567617737) & 0xB6E3E5F8 ^ 0x9203E440;
  v467 = ((v459 ^ 0x2D5C2A8) - ((2 * (v459 ^ 0x2D5C2A8)) & 0x1016E) + 170423) & 0x70FFF;
  v468 = (v467 ^ 0x70BE5)
       + (((v467 ^ 0xAE3E571B) + 1) ^ 0x77F1FF7C)
       + ((2 * ((v467 ^ 0xAE3E571B) + 1)) & 0x4C62FEF8)
       - 2012348284;
  v469 = v460 ^ *(_DWORD *)(v79
                          + 4
                          * (((v459 ^ 0x3083DE)
                            - ((2 * (v459 ^ 0x3083DE)) & 0x41077A)
                            - 1175681091) ^ 0xB9DC0425)) ^ v462 ^ (v462 >> 3) ^ (v462 >> 4) ^ v465 ^ (((2 * v466) | 0x39CF484E) - v466 - 484942887) & 0xFFFFFFF8 ^ (v468 - ((2 * v468) & 0x4247C46A) + 555999797);
  v470 = ((HIWORD(v446) & 0x44) + (BYTE2(v446) ^ 0x46) - ((BYTE2(v446) ^ 0x46) & 0x44444444) + 405314304) ^ 0x8A78D954;
  v471 = *(_DWORD *)(v66 + 4 * (HIBYTE(v433) ^ 9));
  HIDWORD(v429) = v471 ^ 0x74F7B;
  LODWORD(v429) = v471 ^ 0xA4C80000;
  v472 = (v429 >> 19) - ((2 * (v429 >> 19)) & 0xC01BCD2C) - 535959914;
  v473 = *(_DWORD *)(v69 + 4 * ((((2 * v470) | 0x7FD07B9C) - v470 + 1075298866) ^ 0x2DB87F76));
  HIDWORD(v429) = v473 ^ 0x186E50D0;
  LODWORD(v429) = v473 ^ 0xC0000000;
  v474 = (v429 >> 29) - ((2 * (v429 >> 29)) & 0x774972D2) - 1146832535;
  v475 = *(_DWORD *)(v72 + 4 * (BYTE1(v459) ^ 0x7Cu));
  HIDWORD(v429) = v475 ^ 0x92;
  LODWORD(v429) = v475 ^ 0xF00E2500;
  v476 = (v429 >> 8) - ((2 * (v429 >> 8)) & 0x710223C0) - 1199500832;
  v477 = ((4 * v476) ^ 0xE2044780) - 2 * (((4 * v476) ^ 0xE2044780) & 0x61C823FC ^ (4 * v476) & 8) - 506977292;
  v478 = ((v477 & 0xB6E3E5F8 ^ 0x8442E578)
        + (v477 & 0x10A2C000 ^ 0x51A41003)
        - ((v477 & 0xB6E3E5F8 ^ 0x8442E578) & 0x10A2C000)) ^ v476;
  v479 = v474 ^ v472 ^ (v474 >> 3) ^ (v474 >> 4);
  v480 = v479 ^ 0x47678344;
  v481 = v478 ^ 0xCDA5056B;
  v482 = (v478 ^ 0xCDA5056B | v479 ^ 0x47678344)
       - ((2 * (v478 ^ 0xCDA5056B | v479 ^ 0x47678344)) & 0xB5B202C)
       + 95260694;
  v483 = v478 ^ v479;
  v484 = v483 ^ 0x8AC2862F;
  v485 = (v483 ^ 0x8AC2862F) + (v483 ^ 0x7090E9C6 ^ v482) + 1;
  v486 = (v482 ^ ((v482 ^ 0xFA526FE9) - 1355032213 + (~(2 * (v482 ^ 0xFA526FE9) + 2) | 0xA1884D2D)) ^ 0xFF2A796C ^ (v485 - ((2 * v485) & 0xAB786026) + 1438396435))
       + v484;
  v487 = 2 * (((2 * v486) & 0x5AFB7FA4) + (v486 ^ 0x6D7DBFD2)) + 621051996;
  v488 = v484 + (v487 ^ 0xEFFD9EAF) + ((2 * v487) & 0xDFFB3D5C) + 268591441;
  v489 = 2 * ((v481 & v480) - ((2 * (v481 & v480)) & 0x2E448B34)) - 1371239628;
  v490 = ((2 * v489) & 0xCFB6FBCC ^ 0xB37FEDB7) + (v489 ^ 0xB660092D) + (v488 ^ 0xE5F7FEE5) + ((2 * v488) & 0xCBEFFDCA);
  v491 = (((v422 ^ 0x65B36085) - ((2 * (v422 ^ 0x65B36085)) & 0x494000EA) + 883171189) ^ 0xFF2E23C5)
       + 1;
  v492 = (v422 ^ 0xFC | 0xF131A5E3) - (v422 ^ 0xFC | 0xECE5A1C) + 248404508;
  v493 = (v491 ^ 0x3DFFFF57)
       + ((2 * v491) & 0x7BFFFEAE)
       + (((v492 & 0xD0202542 ^ 0xACA6800) + (v492 ^ 0xF13187E3) - ((v492 ^ 0xF13187E3) & 0x2142)) ^ 0xDAEA4F75)
       - 1040187223;
  v494 = ((v422 ^ 0xEB) + (v422 & 0x9B ^ 0xBD85DF10) - ((v422 ^ 0xEB) & 0x9B)) ^ 0x9DCE3319;
  v495 = (v490 - ((2 * v490 + 63372806) & 0xB009CB60) + 1508402355) ^ *(_DWORD *)(v79
                                                                                + 4
                                                                                * ((((2 * v494) & 0x17AC9C)
                                                                                  - v494
                                                                                  + 1693460913) ^ 0x44BBC5AF)) ^ (v493 - ((2 * v493) & 0x539F96F6) + 701483899);
  v496 = *(_DWORD *)(v66 + 4 * (HIBYTE(v446) ^ 0x6F));
  HIDWORD(v429) = v496 ^ 0x74F7B;
  LODWORD(v429) = v496 ^ 0xA4C80000;
  v497 = *(_DWORD *)(v69
                   + 4
                   * (((BYTE2(v459) ^ 0x44002903 | 0x6867337) - (BYTE2(v459) ^ 0x44002903 | 0xF9798CC8) - 109474616) ^ 0x42865ABB));
  v498 = (v429 >> 19) - ((2 * (v429 >> 19)) & 0x52CC0C3A);
  HIDWORD(v429) = v497 ^ 0x186E50D0;
  LODWORD(v429) = v497 ^ 0xC0000000;
  v499 = v498 - 1452931555;
  v500 = (v429 >> 29) - ((2 * (v429 >> 29)) & 0xDCB3B730) - 296100968;
  v501 = *(_DWORD *)(v72
                   + 4
                   * ((((2 * (BYTE1(v422) ^ 0x50440873)) & 0x80076) - (BYTE1(v422) ^ 0x50440873) - 176992572) ^ 0xA53746DC));
  HIDWORD(v429) = v501 ^ 0x92;
  LODWORD(v429) = v501 ^ 0xF00E2500;
  v502 = (v429 >> 8) - ((2 * (v429 >> 8)) & 0x728F5B72) + 960998841;
  LOWORD(v501) = (v433 ^ 0xBF) + (v433 & 0x55 ^ 0x6C40) - ((v433 ^ 0xBF) & 0x5555);
  v503 = (((4 * v502) ^ 0xE51EB6E4) - ((2 * ((4 * v502) ^ 0xE51EB6E4)) & 0xBBC3BE18) - 572399857) & 0xB6E3E5F8 ^ 0x8422E0F8;
  v504 = (((2 * v503) & 0x21400110) - v503 - 431491210) & 0x31014518 ^ 0x11000109 | (((2 * v503) & 0x21400110)
                                                                                   - v503
                                                                                   - 431491210) & 0xCEE2BAE0;
  v459 >>= 24;
  v505 = (v459 ^ 0x1E)
       + (((v459 ^ 0xFFFFFF08) + 1) ^ 0xBDFB6FFA)
       + ((2 * ((v459 ^ 0xFFFFFF08) + 1)) & 0x7BF6DFF4)
       + 1107595270;
  v506 = ((v505 - ((2 * v505) & 0x549C9FA) - 2103122691) ^ 0x7D5B1B03) + (v459 ^ 0x1E);
  v507 = (v501 & 0x59C ^ 0x8345085) + (v501 & 0x263 ^ 0x80010203) - 1;
  v508 = (v507 ^ 0x883556CA)
       + (((v507 ^ 0x260C0A34) + 1) ^ 0x33FF6FFF)
       + ((2 * ((v507 ^ 0x260C0A34) + 1)) & 0x67FEDFFE)
       - 872378367;
  v509 = v499 ^ v500 ^ *(_DWORD *)(v79
                                 + 4
                                 * ((((2 * (v433 ^ 0x5044207F)) & 0xF4)
                                   - (v433 ^ 0x5044207F)
                                   + 1979626373) ^ 0x25BA93E1u)) ^ (v500 >> 3) ^ (v500 >> 4) ^ v502 ^ (v504 - 1);
  v510 = (-2 - ((~BYTE2(v422) | 0x1DAADC67) + (BYTE2(v422) | 0xE2552398))) ^ 0x1DAECC2F;
  v511 = *(_DWORD *)(v69 + 4 * ((v510 - ((2 * v510) & 0x35075608) - 1702647036) ^ 0x9A87BBEC));
  v512 = v509 ^ (v508 - ((2 * v508) & 0xCEF137EA) + 1735957493);
  HIDWORD(v429) = v511 ^ 0x186E50D0;
  LODWORD(v429) = v511 ^ 0xC0000000;
  v513 = *(_DWORD *)(v66
                   + 4
                   * ((v459 ^ ((v459 ^ 0xFFFFFFE1) - ((2 * (v459 ^ 0xFFFFFFE1) + 2) & 0x972733D0) + 1267964393) ^ 0xFAE7A940 ^ (1433112456 - (((2 * v506) & 0x47EEBBD2) + (v506 ^ 0xA3F75DE9)) - ((1206828452 - 2 * (((2 * v506) & 0x47EEBBD2) + (v506 ^ 0xA3F75DE9))) & 0x62E8616C)))
                    + 233));
  v514 = (v429 >> 29) - ((2 * (v429 >> 29)) & 0x5D76804A) - 1363460059;
  HIDWORD(v429) = v513 ^ 0x74F7B;
  LODWORD(v429) = v513 ^ 0xA4C80000;
  v515 = (v429 >> 19) - ((2 * (v429 >> 19)) & 0x79C6E02A) + 1021538325;
  LOWORD(v508) = (v446 & 0x7B ^ 0xB949) + (v446 & 0x84 ^ 5) - 1;
  v516 = (v508 & 0x313 ^ 0x84005200) + (v508 & 0xEC ^ 0x42520461) - 1;
  v517 = (v516 ^ 0xC65257A6)
       + (((v516 ^ 0x686B0B58) + 1) ^ 0x5BD4E6CB)
       + ((2 * ((v516 ^ 0x686B0B58) + 1)) & 0xB7A9CD96)
       - 1540679371;
  v518 = *(_DWORD *)(v72 + 4 * (BYTE1(v433) ^ 0x91u));
  HIDWORD(v429) = v518 ^ 0x92;
  LODWORD(v429) = v518 ^ 0xF00E2500;
  v519 = (v429 >> 8) - ((2 * (v429 >> 8)) & 0x8C5FF88) + 73596868;
  v520 = ((2 * (v446 ^ 0x8C)) | 0xA03A0770) - (v446 ^ 0x8C) - 1344078776;
  v521 = (((((4 * v519) ^ 0x118BFF10) - ((2 * ((4 * v519) ^ 0x118BFF10)) & 0x6782E5D0) + 868315883) & 0xB6E3E5F8 ^ 0xEC265025)
        - 1) ^ 0xDEE729FC;
  v522 = v515 ^ *(_DWORD *)(v79
                          + 4 * (((v520 & 0x165 ^ 0x80608041) + (v520 & 0x501D069A ^ 0x6419201B) - 1) ^ 0xB464A358)) ^ v514 ^ (v514 >> 3) ^ (v514 >> 4) ^ v519 ^ (v517 - ((2 * v517) & 0x7E2A95F0) + 1058360056) ^ (((2 * v521) & 0xC804830) - v521 - 106702368);
  v523 = (((2 * (BYTE2(v522) ^ 0xD3)) & 0x4E) - (BYTE2(v522) ^ 0xD3) - 1815366440) ^ 0x9269B09C;
  v524 = (v523 - ((2 * v523) & 0x1040436) - 389912037) ^ 0xE9606EB2;
  v525 = *(_DWORD *)(v66 + 4 * (HIBYTE(v512) ^ 0x6D));
  HIDWORD(v429) = v525 ^ 0x74F7B;
  LODWORD(v429) = v525 ^ 0xA4C80000;
  v526 = (v429 >> 19) - ((2 * (v429 >> 19)) & 0xD30A7DD6) + 1770340075;
  v527 = *(_DWORD *)(v69 + 4 * v524);
  HIDWORD(v429) = v527 ^ 0x186E50D0;
  LODWORD(v429) = v527 ^ 0xC0000000;
  v528 = *(_DWORD *)(v72
                   + 4
                   * ((((2 * (BYTE1(v469) ^ 0x220A78C1)) & 0x4400C16E) - (BYTE1(v469) ^ 0x220A78C1) + 1164909128) ^ 0x676562DEu));
  v529 = (v429 >> 29) - ((2 * (v429 >> 29)) & 0x776CB0B4) + 1001805914;
  HIDWORD(v429) = v528 ^ 0x92;
  LODWORD(v429) = v528 ^ 0xF00E2500;
  v530 = (v429 >> 8) - ((2 * (v429 >> 8)) & 0xA5966C4) - 2060668062;
  v531 = (((4 * v530) ^ 0x14B2CD88) - ((2 * ((4 * v530) ^ 0x14B2CD88)) & 0x3C4F46C8) - 1641569433) & 0xB6E3E5F8 ^ 0x6224E0;
  v532 = (((v531 | 0x54CC4CF8) - (v531 | 0xAB33B307) - 1422675193) & 0xE56F7F88 ^ 0xA4272704)
       + (((v531 | 0x54CC4CF8) - (v531 | 0xAB33B307) - 1422675193) ^ 0x51D858FA)
       - ((((v531 | 0x54CC4CF8) - (v531 | 0xAB33B307) - 1422675193) ^ 0x51D858FA) & 0xE56F7F8C);
  v533 = ((v495 ^ 8) - ((2 * (v495 ^ 8)) & 0x76) - 644155333) ^ 0x51FF7A30;
  v534 = *(_DWORD *)(v79 + 4 * ((((2 * v533) & 0x10410FAC) - v533 + 366290985) ^ 0x9DB0AA8D));
  v535 = (v534 & 0x800 ^ 0xF4D79EF3) + 2 * (v534 & 0x800);
  v536 = v529 ^ v526 ^ (v529 >> 3) ^ (v529 >> 4) ^ v530 ^ v532;
  v198 = ((v536 ^ 0xA5E89000) & (v535 + 187195661)) == ((2 * ((v536 ^ 0xA5E89000) & (v535 + 187195661))) & 0xCDEF9000);
  v537 = *(_DWORD *)(v69 + 4 * (BYTE2(v495) ^ 0x33u));
  HIDWORD(v429) = v537 ^ 0x186E50D0;
  LODWORD(v429) = v537 ^ 0xC0000000;
  v538 = *(_DWORD *)(v66 + 4 * (HIBYTE(v469) ^ 0x40));
  v539 = (v429 >> 29) - ((2 * (v429 >> 29)) & 0xBA792E68) + 1564251956;
  HIDWORD(v429) = v538 ^ 0x74F7B;
  LODWORD(v429) = v538 ^ 0xA4C80000;
  v540 = (v429 >> 19) - ((2 * (v429 >> 19)) & 0xEC0A3980) + 1980046528;
  v541 = *(_DWORD *)(v72
                   + 4
                   * (((BYTE1(v512) ^ 0x5800C4BA) - ((2 * (BYTE1(v512) ^ 0x5800C4BA)) & 0xB00009B8) + 2094085852) ^ 0x24D1F2C7));
  HIDWORD(v429) = v541 ^ 0x92;
  LODWORD(v429) = v541 ^ 0xF00E2500;
  v542 = (v429 >> 8) - ((2 * (v429 >> 8)) & 0x68127C58) + 873020972;
  v543 = ((v522 ^ 0x4F | 0x9A7C2CBC) - (v522 ^ 0x4F | 0x6583D343) + 1703138115) ^ 0xA4D252C;
  v544 = ((((2 * v543) & 0xA2B5A550) - v543 - 1364906665) ^ 0x3E942434)
       + ((((((2 * v543) & 0xA2B5A550) - v543 - 1364906665) ^ 0x90AD78CA) + 1) ^ 0xF77B3F8F)
       + ((2 * (((((2 * v543) & 0xA2B5A550) - v543 - 1364906665) ^ 0x90AD78CA) + 1)) & 0xEEF67F1E)
       + 142917745;
  v545 = (((4 * v542) ^ 0xD024F8B0) - 2 * (((4 * v542) ^ 0xD024F8B0) & 0x1E362E1C ^ (4 * v542) & 8) - 1640616428) & 0xB6E3E5F8 ^ 0x36E381D8;
  v546 = ((v522 ^ 0x427BC7E0 | 0x7987522F)
        - (v522 ^ 0x427BC7E0 | 0x8678ADD0)
        - 2038911536) ^ 0x23FC07DC;
  v547 = v540 ^ *(_DWORD *)(v79 + 4 * ((((2 * v546) | 0x87759D26) - v546 - 1136316051) ^ 0x5BBA5C80)) ^ v539 ^ (v539 >> 3) ^ (v539 >> 4) ^ v542 ^ ((((v545 | 0x7C93C8E) - (v545 | 0xF836C371) - 130628751) & 0xAD6A059E ^ 0x8720517) + (((v545 | 0x7C93C8E) - (v545 | 0xF836C371) - 130628751) & 0x1285FA60 ^ 0x42011801) - 2) ^ (v544 - ((2 * v544) & 0xEA7EDB74) + 1967091130);
  v548 = *(_DWORD *)(v66 + 4 * (HIBYTE(v495) ^ 0xF4));
  HIDWORD(v429) = v548 ^ 0x74F7B;
  LODWORD(v429) = v548 ^ 0xA4C80000;
  v549 = (v429 >> 19) - ((2 * (v429 >> 19)) & 0x7EADCFA6) + 1062660051;
  v550 = *(_DWORD *)(v69 + 4 * (((HIWORD(v512) & 0xAC ^ 0x289) + (HIWORD(v512) & 0x53) - 1) ^ 0x2D4));
  HIDWORD(v429) = v550 ^ 0x186E50D0;
  LODWORD(v429) = v550 ^ 0xC0000000;
  v551 = (v429 >> 29) - ((2 * (v429 >> 29)) & 0x6ACD6F24) + 895924114;
  v552 = *(_DWORD *)(v72
                   + 4
                   * (((BYTE1(v522) ^ 0xB1) + ((v522 >> 8) & 0x1A ^ 0x20A) - ((BYTE1(v522) ^ 0xB1) & 0x1A)) ^ 0x2D8));
  HIDWORD(v429) = v552 ^ 0x92;
  LODWORD(v429) = v552 ^ 0xF00E2500;
  v553 = (v429 >> 8) - ((2 * (v429 >> 8)) & 0xC1B9FF2C) + 1625096086;
  v554 = ((4 * v553) ^ 0x8373FE58) - ((2 * ((4 * v553) ^ 0x8373FE58)) & 0xC289D20) - 2045489519;
  v555 = ((v554 & 0xA2826198 ^ 0xCA1E0301) + (v554 & 0x14618460 ^ 0x8461) - 2) ^ 0xE49A63B0;
  v556 = ((v469 & 0x74 ^ 0x344D721) - 1) & 0xFFC03FFF | v469 & 0x8B;
  v557 = (v556 ^ 0x34017FF)
       + (((v556 ^ 0xAD794B01) + 1) ^ 0x83FFA7CB)
       + ((2 * ((v556 ^ 0xAD794B01) + 1)) & 0x6F24F96)
       + 2080397365
       - ((2
         * ((v556 ^ 0x34017FF)
          + (((v556 ^ 0xAD794B01) + 1) ^ 0x83FFA7CB)
          + ((2 * ((v556 ^ 0xAD794B01) + 1)) & 0x6F24F96)
          + 2080397365)) & 0x1CEFCF16)
       - 1904744565;
  v558 = ((v469 ^ 0xA3) + (v469 & 0x3F ^ 0x8050551C) - ((v469 ^ 0xA3) & 0x3F)) ^ 0x54438A5;
  v559 = v549 ^ *(_DWORD *)(v79 + 4 * ((((2 * v558) & 0x9E) - v558 - 1111593040) ^ 0x38AA02EA)) ^ v551 ^ (v551 >> 3) ^ (v551 >> 4) ^ v553 ^ (((2 * v555) | 0xC216C046) - v555 - 1628135459) ^ v557;
  v560 = (v495 ^ 0x8080911A)
       + (v495 & 0x25 ^ 0x10616A25)
       - ((v495 ^ 0x8080911A) & 0x809125);
  v561 = (v560 ^ 0x90616A24)
       + (((v560 ^ 0x3E5836DA) + 1) ^ 0x7FF7DF7F)
       + ((2 * ((v560 ^ 0x3E5836DA) + 1)) & 0xFFEFBEFE)
       - 2146951039;
  v562 = v561 - ((2 * v561) & 0x2A4A09AC) - 1792736042;
  v563 = v535 + 2134568896;
  v564 = 1760177574 - v535;
  if (!v198)
    v563 = v564;
  v565 = (v536 ^ 0xA5E89553)
       - 1947373235
       + v563
       - ((2 * ((v536 ^ 0xA5E89553) - 1947373235 + v563)) & 0x5D77ACD0)
       + 784062056;
  v566 = *(_DWORD *)(v66 + 4 * (HIBYTE(v522) ^ 0x6C));
  HIDWORD(v567) = v566 ^ 0x74F7B;
  LODWORD(v567) = v566 ^ 0xA4C80000;
  v568 = (v567 >> 19) - ((2 * (v567 >> 19)) & 0x987D126C) - 868316874;
  v569 = (((2 * (v534 & 0xFFFFF7FF ^ 0xD159A005)) | 0x53EDC762) - (v534 & 0xFFFFF7FF ^ 0xD159A005) + 1443437647) ^ v562;
  v570 = *(_DWORD *)(v69 + 4 * (BYTE2(v469) ^ 0xCDu));
  v571 = v565 ^ v569;
  HIDWORD(v567) = v570 ^ 0x186E50D0;
  LODWORD(v567) = v570 ^ 0xC0000000;
  v572 = *(_DWORD *)(v72 + 4 * (BYTE1(v495) ^ 0xEFu));
  v573 = (v567 >> 29) - ((2 * (v567 >> 29)) & 0x49DB2736);
  HIDWORD(v567) = v572 ^ 0x92;
  LODWORD(v567) = v572 ^ 0xF00E2500;
  v574 = (v567 >> 8) - ((2 * (v567 >> 8)) & 0x212B6DFE) + 278247167;
  v575 = ((4 * v574) ^ 0x4256DBFC) - ((2 * ((4 * v574) ^ 0x4256DBFC)) & 0x7E75BFE8) + 1060823029;
  v576 = (v575 & 0xB6E3E5F8 ^ 0x30E345B0)
       + (v575 & 0x24A321A0 ^ 0xD0C2803)
       - ((v575 & 0xB6E3E5F8 ^ 0x30E345B0) & 0x24A321A0);
  v577 = (v512 ^ 0x30ABC6F6) - ((2 * (v512 ^ 0x30ABC6F6)) & 0x6107080C) - 1316776954;
  v578 = (v577 & 0x2C7 ^ 0x42560EC2) + (v577 ^ 0x1A07035) - ((v577 ^ 0x1A07035) & 0xC2062AC7);
  v579 = ((2 * v578) ^ 0x85BC1814) - ((2 * ((2 * v578) ^ 0x85BC1814)) & 0x10C) + 646;
  v580 = (v578 ^ 0x42DE0C0A)
       + (((v578 ^ 0xECE750F4) + 1) ^ 0xEFB5EBBF)
       + ((2 * ((v578 ^ 0xECE750F4) + 1)) & 0xDF6BD77E)
       + 273290305;
  v581 = *(_DWORD *)(v79
                   + 4
                   * ((((v578 ^ 0x42DE0C0A) + 188) ^ 0xD776D5F7)
                    + ((2 * ((v578 ^ 0x42DE0C0A) + 188)) & 0x2EEDABEE)
                    - ((2 * v579) & 0xE0)
                    + (v579 & 0x178 ^ 0x887A510D)
                    - 1609639684)) ^ v568 ^ (v573 + 619549595) ^ ((v573 + 619549595) >> 3) ^ ((v573 + 619549595) >> 4) ^ v574 ^ (v580 - ((2 * v580) & 0x8459CDB8) - 1037244708) ^ 0x28408121 ^ ((v576 & 0xAE2CD0 ^ 0x800411 | v576 & 0xFF51C328) - 1);
  v582 = ((2 * (BYTE2(v559) ^ 0xE1)) & 0xFFFFFF0F) - (BYTE2(v559) ^ 0xE1) + 905507960;
  v583 = (char *)*(&off_10112C750 + v631 - 25911) - 1720994947;
  v584 = (char *)*(&off_10112C750 + v631 - 28986) - 96342750;
  v585 = *(_DWORD *)&v583[4
                        * (((v582 & 0x5354 ^ 0x80040054) + (v582 ^ 0x66017F09) - ((v582 ^ 0x66017F09) & 0x41810B54)) ^ 0x927CD02F)];
  v586 = (char *)*(&off_10112C750 + v631 - 29116) - 1773579934;
  v587 = ((v581 ^ 0xA6) - ((2 * (v581 ^ 0xA6)) & 0x1D6) + 1749263083) ^ 0x6056916A;
  v588 = (char *)*(&off_10112C750 + (v631 ^ 0x792E)) - 1890445242;
  v589 = ((BYTE2(v571) ^ 0x43 | 0x51767ED4) - (BYTE2(v571) ^ 0x43 | 0xAE89812B) - 1366720213) ^ 0x41F65C21;
  v590 = ((v589 | 0x1FEF6E5B) - (v589 | 0xE01091A4) - 535785052) ^ 0xF6F4C1D;
  v591 = *(_DWORD *)&v588[4 * (((v587 | 0x2BFD7D9C) - (v587 | 0xD4028263) - 738033053) ^ 0x23E84E2F)];
  v592 = *(_DWORD *)&v586[4 * (BYTE1(v571) ^ 0x95)] ^ *(_DWORD *)&v584[4 * (HIBYTE(v547) ^ 0x99)] ^ (v585 - ((2 * v585 + 567641348) & 0x4D035522) + 2003594515) ^ ((BYTE1(v571) ^ 0xC0) - 376470226 + ((2 * (BYTE1(v571) ^ 0xC0) + 302) & 0x12C ^ 0x2ABFDFFF)) ^ (v591 - ((2 * v591 + 476071880) & 0x129EEBA2) + 125802933);
  v593 = BYTE1(v571) ^ HIBYTE(v547) ^ 0xE91EB1B5;
  v594 = *(_DWORD *)&v583[4 * v590] - 789921150;
  v595 = *(_DWORD *)&v584[4 * (HIBYTE(v559) ^ 0x4F)] ^ HIBYTE(v559) ^ 0x510CF55D;
  v596 = (v595 & v594) - ((2 * (v595 & v594)) & 0x379B1364);
  v597 = (BYTE1(v581) ^ 0x54046814) + ((v581 >> 8) & 0xD0 ^ 0x1D307C0) - ((BYTE1(v581) ^ 0x54046814) & 0x448D0);
  v598 = ((2 * (v595 + v594)) & 0xB7FFEEEE)
       + ((v595 + v594) ^ 0xDBFFF777)
       + ((2 * v596 + 932909924) ^ 0x6137B6D)
       + ((2 * (2 * v596 + 932909924)) & 0x9CEF2FEC ^ 0xF3D9D937);
  v599 = ((BYTE1(v581) ^ 0xF) - ((2 * (BYTE1(v581) ^ 0xF)) & 0x1D8) + 199123436) ^ 0xBFE64FD;
  v600 = *(_DWORD *)&v588[4
                        * ((((2 * (v547 ^ 0x610A86B)) | 0xB988E08C)
                          - (v547 ^ 0x610A86B)
                          + 591105978) ^ 0xDAD4D891)];
  v601 = (v600 - 2 * ((v600 + 36709348) & 0x383F0D5 ^ v600 & 1) + 28579000) ^ ((v597 ^ 0x55D327D2)
                                                                             - ((2 * (v597 ^ 0x55D327D2) - 717217490) & 0x91F095D0)
                                                                             - 1281860737) ^ *(_DWORD *)&v586[4 * ((v599 - ((2 * v599) & 0x3432) + 2040486425) ^ 0x79BF5F44)] ^ (v598 - ((2 * v598 - 454082302) & 0x90237680) - 1165403199);
  v602 = ((BYTE1(v547) ^ 0xFC | 0xF8DC3CEF) - (BYTE1(v547) ^ 0xFC | 0x723C310) + 119784208) ^ 0x617FBDEF;
  v603 = *(_DWORD *)&v583[4 * (BYTE2(v581) ^ 0x6E)];
  v604 = (((2 * (BYTE1(v547) ^ 0x7E)) & 0x14A) - (BYTE1(v547) ^ 0x7E) - 1697562022) ^ 0x9AC41688;
  v605 = *(_DWORD *)&v588[4 * (v559 ^ 0xD0)];
  v606 = *(_DWORD *)&v586[4 * ((((2 * v604) & 0x2A211A) - v604 - 1650405518) ^ 0x9DB59B23)] ^ *(_DWORD *)&v584[4 * (HIBYTE(v571) ^ 0xD6)] ^ (v603 - 2 * ((v603 + 1357562498) & 0x6A5D7B47 ^ v603 & 1) - 1152893496) ^ (v605 - ((2 * v605 - 60799032) & 0xC10B4F9A) - 558511183) ^ (((2 * v602) & 0x653F7B34) - v602 + 1298154085) ^ (((((2 * v602) & 0x653F7B34) - v602 + 1298154085) ^ 0xD4C3C331) - ((2 * ((((2 * v602) & 0x653F7B34) - v602 + 1298154085) ^ 0xD4C3C331) + 1430266158) & 0x651EBD28) - 1657835733);
  LOBYTE(v603) = HIBYTE(v571) ^ 0xBA;
  v607 = ((BYTE1(v559) ^ 0x2D) + ((v559 >> 8) & 0xA3 ^ 0xF50ACB82) - ((BYTE1(v559) ^ 0x2D) & 0xA3)) ^ 0xD4366BE5;
  v608 = ((2 * v607) & 0x4018159A) - v607 + 1236448562;
  v609 = *(_DWORD *)&v583[4 * ((((2 * (BYTE2(v547) ^ 0xFE)) & 0x4A) - (BYTE2(v547) ^ 0xFE) + 730) ^ 0x2EF)];
  v610 = HIBYTE(v581);
  v611 = *(_DWORD *)&v588[4
                        * (((v571 ^ 0x91) - ((2 * (v571 ^ 0x91)) & 0x2C) + 534) ^ 0x2C5)];
  v612 = *(_DWORD *)&v586[4
                        * (((BYTE1(v559) ^ 0xA215E9E4) - ((2 * (BYTE1(v559) ^ 0xA215E9E4)) & 0x285370) + 494287800) ^ 0xBF63D2F2)] ^ *(_DWORD *)&v584[4 * (HIBYTE(v581) ^ 0xFB)] ^ (v609 - ((2 * v609 + 567641348) & 0x5097DC34) + 2033627292) ^ v608 ^ ((v608 ^ 0x688E15A2) - ((2 * (v608 ^ 0x688E15A2) - 717217490) & 0xA6AF6102) + 1039647000) ^ (v611 - ((2 * v611 + 1012942792) & 0x3AA7D4E4) + 461639254);
  v613 = (char *)*(&off_10112C750 + (v631 ^ 0x7B3A)) - 342010702;
  LOBYTE(v586) = v613[HIBYTE(v601) ^ 0xF7];
  LOBYTE(v608) = (_BYTE)v586 - ((2 * (_BYTE)v586 + 110) & 0xAC) + 13;
  LOBYTE(v609) = (4 * ((v608 ^ 0xD6) * (v608 ^ 0xD6) - ((2 * (v608 ^ 0xD6) * (v608 ^ 0xD6)) & 0x2A)) - 44) ^ 0xD4;
  v632[4] = v608 ^ 0xEA ^ (v609 - ((2 * v609) & 0xA8) + 85);
  LOBYTE(v608) = v613[HIBYTE(v606) ^ 0x72];
  LOBYTE(v608) = v608 - ((2 * v608 + 110) & 0x8A) + 124;
  LOBYTE(v609) = 4 * ((v608 ^ 0x45) * (v608 ^ 0x45) - ((2 * (v608 ^ 0x45) * (v608 ^ 0x45)) & 0x38)) + 112;
  v614 = (((v612 >> 7) & 0x38) + (BYTE1(v612) ^ 0xFFFFFFBD) + 1047335908) ^ 0x7E4B1372;
  v632[8] = v608 ^ ((v609 ^ 0x70) - 2 * ((v609 ^ 0x70) & 0x68 ^ v609 & 8) + 97) ^ 0xC;
  v615 = (char *)*(&off_10112C750 + (v631 ^ 0x64DE)) - 1737508330;
  v616 = v610 ^ 8;
  v617 = v615[(v614 - ((2 * v614) & 0x800C107C) - 933820354) ^ 0x88710801]
       + ((v612 >> 8) ^ 0xFFFFFFF6)
       - 84;
  v632[14] = (v617 - ((2 * v617) & 0x44) + 34) ^ 0xE9;
  v618 = (char *)*(&off_10112C750 + v631 - 28586) - 552108654;
  v632[11] = v618[(v603 ^ v606) ^ 0xA8] ^ v603 ^ v606 ^ 0xF7;
  v632[7] = v618[(((2 * ((v601 ^ v597) ^ 0xBC)) | 0xF6A082F0)
                - ((v601 ^ v597) ^ 0xBC)
                - 2068857208) ^ 0x7B5041D9] ^ v601 ^ v597 ^ 0x5C;
  v619 = ((BYTE2(v612) ^ 0x5B) - ((2 * (BYTE2(v612) ^ 0x5B)) & 0x1DA) + 1908450285) ^ 0x72C0A3C4;
  v620 = (char *)*(&off_10112C750 + v631 - 29500) - 1507843358;
  LOBYTE(v619) = v620[(((2 * v619) & 0x2001232u) - v619 - 1843349786) ^ 0x9120B6ECLL];
  v632[13] = (84 * v619 - ((40 * v619 + 48) & 0x20) - 117) ^ (21 * v619
                                                            - 2 * ((21 * v619 + 62) & 0x35 ^ (21 * v619) & 1)
                                                            + 114) ^ 0x99;
  v621 = ((v593 ^ v592) ^ 0x9D)
       + ((v593 ^ v592) & 0xE9 ^ 0xB44C9560)
       - (((v593 ^ v592) ^ 0x9D) & 0xE9);
  v632[3] = v618[((v621 & 0x24480035 ^ 0x42132814) + (v621 ^ 0xAC4C55E1) - ((v621 ^ 0xAC4C55E1) & 0x18004035)) ^ 0x665BA8F8] ^ v593 ^ v592 ^ 0x65;
  LOBYTE(v619) = v613[HIBYTE(v592) ^ 0x1BLL];
  LOBYTE(v619) = v619 - ((2 * v619 + 110) & 0x83) + 120;
  LOBYTE(v621) = (4 * ((v619 ^ 0x41) * (v619 ^ 0x41) - ((2 * (v619 ^ 0x41) * (v619 ^ 0x41)) & 0x14)) + 40) ^ 0x28;
  *v632 = v619 ^ (v621 - ((2 * v621) & 0x48) + 39) ^ 0x30;
  v622 = ((BYTE1(v592) ^ 0xA7) + ((v592 >> 8) & 0x63 ^ 0xFE2FB740) - ((BYTE1(v592) ^ 0xA7) & 0x63)) ^ 0x93A0B082;
  v623 = v615[(((2 * v622) | 0x8EEDA424) - v622 - 1198969362) ^ 0x2AF9D5E3]
       + ((v592 >> 8) ^ 0xFFFFFFAD)
       - 84;
  v632[2] = (v623 + (~(2 * v623) | 0x37) + 101) ^ 0xFE;
  LOBYTE(v623) = v620[(65902 - (BYTE2(v601) ^ 0x72) + ((2 * (BYTE2(v601) ^ 0x72)) & 0x96) + 1606) ^ 0x10733];
  v632[5] = (21 * v623 - ((42 * v623 + 124) & 0xD8) + 42) ^ 0x72 ^ (84 * v623
                                                                  - 2 * ((84 * v623 + 120) & 0x44 ^ (84 * v623) & 4)
                                                                  - 72);
  v624 = (HIWORD(v592) & 0x15) + (HIWORD(v592) & 0xEA ^ 0x7D2856B) - 1;
  LOBYTE(v621) = v620[((v624 & 0x1808055 ^ 0xD8003015) + (v624 ^ 0x5BB8568) - ((v624 ^ 0x5BB8568) & 0x280055)) ^ 0xDBC1B05FLL];
  v632[1] = (84 * v621 - ((-88 * v621 - 16) & 0x8F) + 60) ^ 0x51 ^ (21 * v621
                                                                  - 2 * ((21 * v621 + 62) & 0x77 ^ (21 * v621) & 1)
                                                                  - 76);
  v625 = v615[BYTE1(v606) ^ 0xD6] + ((v606 >> 8) ^ 0xFFFFFFCC) - 84;
  v632[10] = (v625 - ((2 * v625) & 0x60) - 80) ^ 0xCF;
  v626 = (((2 * ((v616 ^ v612) ^ 0xBC451BD3)) & 0x400807D4)
        - ((v616 ^ v612) ^ 0xBC451BD3)
        - 598098923) ^ 0x649C2D6E;
  v632[15] = v618[(((2 * v626) & 0x1B1030F6) - v626 + 846260100) ^ 0x36F06DF1] ^ v616 ^ v612 ^ 0xEB;
  v627 = (((2 * (BYTE2(v606) ^ 0xC6)) & 0x11A) - (BYTE2(v606) ^ 0xC6) - 1242166158) ^ 0x47F46D42;
  LOBYTE(v627) = v620[(((2 * v627) | 0x6B6BC82Au) - v627 + 1246370795) ^ 0x47B785CDLL];
  v632[9] = (84 * v627 - ((-88 * v627 - 16) & 0x9F) + 68) ^ 0xBD ^ (((-42 * v627 - 126) | 5) + 21 * v627 + 60);
  v628 = v615[(((2 * (BYTE1(v601) ^ 0x30474E9)) | 0x1A107DC0) - (BYTE1(v601) ^ 0x30474E9u) - 218644192) ^ 0xE0C4A31]
       + ((v601 >> 8) ^ 0x22)
       - 84;
  v632[6] = (v628 - ((2 * v628) & 0xD8) + 108) ^ 0xA5;
  LOBYTE(v628) = v613[HIBYTE(v612) ^ 0x8FLL];
  LOBYTE(v628) = v628 - ((2 * v628 + 110) & 0x60) + 103;
  LOBYTE(v624) = (4 * ((v628 ^ 0x30) * (v628 ^ 0x30) - ((2 * (v628 ^ 0x30) * (v628 ^ 0x30)) & 0x38)) + 112) ^ 0x70;
  v632[12] = v628 ^ 0xBE ^ (v624 - ((2 * v624) & 0x78) - 67);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v633 + 8 * v631) - 12))(a1);
}

int *sub_1000D639C(int *result)
{
  int v1;
  int v2;

  if ((v1 ^ 0xD7B6DFBB) + ((2 * v1) & 0xAF6CB050) == -675881029)
    v2 = 1691287168;
  else
    v2 = -1409528920;
  *result = v2;
  return result;
}

void sub_1000D6410(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  BOOL v4;
  int v5;

  v1 = 668045089 * ((~(_DWORD)a1 & 0x49C24365 | a1 & 0xB63DBC9A) ^ 0x40B336E);
  v2 = *(_DWORD *)a1 - v1;
  v3 = (unsigned __int16)(*(_WORD *)(a1 + 4) - v1);
  if (*(_QWORD *)(a1 + 16))
    v4 = v3 == 17109;
  else
    v4 = 1;
  v5 = v4;
  __asm { BR              X9 }
}

void sub_1000D64F4()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = (v0 ^ 0x7FBD7E7F) - 8474669 + ((2 * v0) & 0xFF7AB4B2);
}

void sub_1000D88BC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 20) - 19382863 * (((a1 | 0x3C02A4A6) - (a1 & 0x3C02A4A6)) ^ 0x34C72878);
  __asm { BR              X8 }
}

uint64_t sub_1000D89C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int16 v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unsigned int v24;
  int v25;
  uint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unsigned int v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  int v44;
  unint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  unsigned int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unsigned int v57;
  int v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  int v62;
  int v63;
  unint64_t v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  uint64_t v68;
  int v69;
  int v70;
  unint64_t v71;
  int v72;
  int v73;
  uint64_t v74;
  unsigned int v75;
  unsigned int v76;
  uint64_t v77;
  unsigned int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  int v97;
  unsigned int v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  unint64_t v104;
  int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  int v116;
  int v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  int v135;
  int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  int v146;
  unsigned int v147;
  int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  unsigned int v156;
  char *v157;
  char *v158;
  int v159;
  int v160;
  char *v161;
  char *v162;
  unsigned int v163;
  int v164;
  int v165;
  unsigned int v166;
  char *v167;
  char *v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  int v172;
  BOOL v173;
  int v174;
  char *v175;
  unsigned int v176;
  int v177;
  char *v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  int v182;
  int v183;
  int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  int v225;
  int v226;
  unsigned int v227;
  unsigned int v228;
  int v229;
  unsigned int v230;
  int v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  unsigned int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  int v243;
  int v244;
  unsigned int v245;
  int v246;
  unsigned int v247;
  unsigned int v248;
  int v249;
  unsigned int v250;
  unsigned int v251;
  int v252;
  unsigned int v253;
  int v254;
  unsigned int v255;
  int v256;
  int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned __int8 v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  int v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  int v272;
  int v273;
  int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  int v278;
  int v279;
  int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  int v292;
  unsigned int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  int v300;
  int v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  int v305;
  int v306;
  int v307;
  unsigned int v308;
  int v309;
  int v310;
  int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  int v315;
  unsigned int v316;
  unsigned int v317;
  int v318;
  unsigned int v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  int v326;
  int v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  int v331;
  int v332;
  int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  int v342;
  unsigned int v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  unsigned int v348;
  int v349;
  unsigned int v350;
  int v351;
  int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  int v360;
  int v361;
  int v362;
  int v363;
  int v364;
  int v365;
  unsigned int v366;
  unsigned int v367;
  int v368;
  int v369;
  unsigned int v370;
  int v371;
  unsigned int v372;
  unsigned int v373;
  int v374;
  unsigned int v375;
  int v376;
  int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  int v381;
  unsigned int v382;
  int v383;
  unsigned int v384;
  int v385;
  unsigned int v386;
  int v387;
  int v388;
  unsigned int v389;
  int v390;
  int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  unsigned int v396;
  int v397;
  unsigned int v398;
  unsigned int v399;
  int v400;
  int v401;
  unsigned int v402;
  int v403;
  int v404;
  int v405;
  int v406;
  unsigned int v407;
  unsigned int v408;
  unsigned int v409;
  int v410;
  char *v411;
  char *v412;
  unsigned int v413;
  int v414;
  char *v415;
  int v416;
  int v417;
  char *v418;
  unsigned int v419;
  int v420;
  int v421;
  int v422;
  unsigned int v423;
  unsigned int v424;
  int v425;
  int v426;
  unsigned int v427;
  int v428;
  int v429;
  int v430;
  unsigned int v431;
  int v432;
  int v433;
  unsigned int v434;
  int v435;
  unsigned int v436;
  unsigned int v437;
  int v438;
  unsigned int v439;
  int v440;
  int v441;
  int v442;
  int v443;
  int v444;
  unsigned int v445;
  int v446;
  int v447;
  unsigned int v448;
  int v449;
  unsigned int v450;
  unsigned int v451;
  int v452;
  unsigned int v453;
  int v454;
  unsigned int v455;
  unsigned int v456;
  char *v457;
  uint64_t v458;
  int v459;
  char *v460;
  unsigned int v461;
  char *v462;
  char *v463;
  unsigned int v464;
  unsigned int v465;
  unsigned int v466;
  int v467;
  char v468;
  unsigned int v469;
  uint64_t v470;
  int v472;
  int v473;
  unsigned int v474;
  int v475;
  int v476;
  unsigned int v477;
  int v478;
  unsigned int v479;
  unsigned int v480;
  unsigned int v481;
  int v482;
  int v483;
  int v484;
  unsigned int v485;
  int v486;
  unsigned int v487;
  unsigned int v488;
  int v489;
  unsigned int v490;
  unsigned int v491;
  int v492;
  unsigned int v493;
  unsigned int v494;
  int v495;
  unsigned int v496;
  unsigned int v497;
  unsigned int v498;
  int v499;
  int v500;
  int v501;
  unsigned int v502;
  int v503;
  unsigned int v504;
  unsigned int v505;
  unsigned int v506;
  int v507;
  int v508;
  int v509;
  unsigned int v510;
  int v511;
  unsigned int v512;
  unsigned int v513;
  int v514;
  int v515;
  int v516;
  int v517;
  unsigned int v518;
  unsigned int v519;
  int v520;
  int v521;
  int v522;
  int v523;
  int v524;
  int v525;
  unsigned int v526;
  int v527;
  unsigned int v528;
  int v529;
  unsigned int v530;
  int v531;
  unsigned int v532;
  int v533;
  int v534;
  int v535;
  unsigned int v536;
  int v537;
  int v538;
  unsigned int v539;
  unsigned int v540;
  int v541;
  int v542;
  int v543;
  int v544;
  unsigned int v545;
  int v546;
  int v547;
  int v548;
  unsigned int v549;
  int v550;
  unsigned int v551;
  int v552;
  unsigned int v553;
  int v554;
  int v555;
  int v556;
  unsigned int v557;
  int v558;
  int v559;
  unsigned int v560;
  int v561;
  int v562;
  unsigned int v563;
  int v564;
  int v565;
  int v566;
  uint64_t v567;
  int v568;
  int v569;
  unsigned int v570;
  unsigned int v571;
  unsigned int v572;
  int v573;
  int v574;
  int v575;
  int v576;
  unsigned int v577;
  int v578;
  unsigned int v579;
  unsigned int v580;
  int v581;
  unsigned int v582;
  int v583;
  unsigned int v584;
  unsigned int v585;
  int v586;
  uint64_t v587;
  unsigned int v588;
  int v589;
  int v590;
  unsigned int v591;
  int v592;
  int v593;
  int v594;
  int v595;
  unsigned int v596;
  int v597;
  unsigned int v598;
  int v599;
  unsigned int v600;
  int v601;
  int v602;
  int v603;
  int v604;
  int v605;
  int v606;
  unsigned int v607;
  int v608;
  int v609;
  unsigned int v610;
  unsigned int v611;
  unsigned int v612;
  int v613;
  int v614;
  unsigned int v615;
  int v616;
  unsigned int v617;
  int v618;
  int v619;
  unsigned int v620;
  unsigned int v621;
  int v622;
  unsigned int v623;

  v6 = v1 + 14328;
  *(_QWORD *)(v5 - 232) = v1 - 0x4A8D2AE11F6BC808;
  *(_QWORD *)(v5 - 224) = v1;
  v7 = *(_QWORD *)(v3 + 8 * (v4 - 24955)) - 709111214;
  v8 = *(unsigned __int8 *)(v5 - 100) ^ *(unsigned __int8 *)(v7 + (*(unsigned __int8 *)(v5 - 100) ^ 0x16)) ^ 0xC0;
  v9 = (((v4 - 18515) | 0x4828) + ((v8 - ((2 * v8) & 0x8A)) << 24) - 989882474) ^ 0xC5000000;
  v10 = v3;
  v11 = *(_QWORD *)(v3 + 8 * (v4 ^ 0x6559)) - 664908318;
  v12 = *(unsigned __int8 *)(v11 + (*(unsigned __int8 *)(v5 - 99) ^ 0x20)) ^ 0x1F;
  v13 = (((v12 - ((2 * v12) & 0xFFFFFF0F)) << 16) - 7929856) ^ 0xFF870000;
  v14 = (v13 - ((2 * v13) & 0x9F720000) - 809950389) ^ 0xCFB9234B | (v9 - ((2 * v9) & 0xE4000000) - 230577712) ^ 0xF241A9D0;
  v15 = *(_QWORD *)(v10 + 8 * (v4 ^ 0x6692)) - 828770555;
  v16 = *(unsigned __int8 *)(v15 + (*(unsigned __int8 *)(v5 - 98) ^ 0x9ELL));
  v17 = ((((v16 ^ 0x73) - ((2 * v16) & 0x18)) << 8) - 1578497024) ^ 0xA1EA0C00;
  v18 = (v14 - ((2 * v14) & 0xD5924408) + 1791566340) ^ 0x6AC92204 | (v17 - ((2 * v17) & 0x3C85E800) + 507704482) ^ 0x1E42F4A2;
  v19 = (v18 - ((2 * v18) & 0xC64D12CC) - 484013722) ^ 0xE3268966;
  v20 = *(unsigned __int8 *)(v5 - 97);
  *(_QWORD *)(v5 - 216) = v2;
  v21 = *(_QWORD *)(v10 + 8 * (v4 - 25391)) - 1973262970;
  v22 = ((v20 ^ 0xB)
       + (v20 ^ 0xF)
       - ((2 * ((v20 ^ 0xB) + (v20 ^ 0xF))) & 0x3B2)
       + 89) ^ *(unsigned __int8 *)(v21 + (v20 ^ 0xA0));
  *(_QWORD *)(v5 - 256) = v22;
  v23 = v19 | ((v22 ^ 0x27) - ((2 * (v22 ^ 0x27)) & 0x34) - 1553963494) ^ 0xA360661A;
  v24 = v23 - ((2 * v23) & 0x9902B562) + 1283545777;
  v25 = *(_DWORD *)(*(_QWORD *)(v10 + 8 * (v4 - 23058)) - 154014199 + 4 * (v22 ^ 0xE7u));
  v26 = *(_QWORD *)(v10 + 8 * (v4 - 23058)) - 154014199;
  LODWORD(v20) = v25 - ((2 * v25 - 2009361512) & 0x8E8911A0) - 1956490596;
  LODWORD(STACK[0x37C]) = BYTE2(v24);
  v27 = ((BYTE2(v24) ^ 0x80) - ((2 * (BYTE2(v24) ^ 0x80)) & 0x140) - 886141024) ^ 0x65F529C3;
  v28 = (((2 * v27) & 0xC17802E) - v27 - 103530520) ^ 0x570F99A4;
  v29 = *(_QWORD *)(v10 + 8 * (v4 - 25054)) - 70175659;
  v30 = v24;
  LODWORD(STACK[0x35C]) = BYTE1(v24);
  v31 = (BYTE1(v24) ^ 0x5D | 0x5957A44) - (BYTE1(v24) ^ 0x5D | 0xFA6A85BB) - 93682245;
  LODWORD(v22) = (v31 & 0x147077 ^ 0x98281063) + (v31 ^ 0x4946414) - ((v31 ^ 0x4946414) & 0x1077);
  *(_QWORD *)(v5 - 208) = a1;
  v32 = ((v6 ^ 0x34400200 | 0x234436BC) - (v6 ^ 0x34400200 | 0xDCBBC943) - 591673021) ^ 0x170434BC;
  *(_DWORD *)(v5 - 136) = (~(690300674 * v32) | 0x41E0F4F5) - 1802333311 * v32;
  v33 = v22 ^ 0x993D6E61;
  v34 = v10;
  v35 = *(_QWORD *)(v10 + 8 * (v4 ^ 0x643D)) - 1491840378;
  v36 = *(_QWORD *)(v10 + 8 * (v4 ^ 0x624E)) - 1922200399;
  v37 = HIBYTE(v24);
  STACK[0x360] = v37;
  LOBYTE(v22) = ((((2 * HIBYTE(v24)) ^ 0x9E) - ((2 * ((2 * HIBYTE(v24)) ^ 0x9E)) & 0x9F) - 49) & 0x82)
              + (HIBYTE(v24) ^ 0x51);
  v38 = v36;
  LODWORD(v22) = *(unsigned __int8 *)(v36 + (v37 ^ 0x94)) ^ 0xAE ^ (((2 * v22) & 0xEA)
                                                                                   + (v22 ^ 0xF5)
                                                                                   - ((2
                                                                                     * (((2 * v22) & 0xEA) + (v22 ^ 0xF5))
                                                                                     + 22) & 0x9F)
                                                                                   - 38);
  v39 = *(unsigned __int8 *)(v11 + (*(unsigned __int8 *)(v5 - 111) ^ 0xA8));
  STACK[0x370] = v39;
  v40 = ((((v39 ^ 0x28) - ((2 * (v39 ^ 0x28)) & 0x90)) << 16) + 474480640) ^ 0x1C480000;
  LODWORD(v37) = *(unsigned __int8 *)(v7 + (*(unsigned __int8 *)(v5 - 112) ^ 0xC8)) ^ *(unsigned __int8 *)(v5 - 112);
  LODWORD(STACK[0x36C]) = v37;
  LODWORD(v39) = ((((v37 ^ 0xC7) - 2 * ((v37 ^ 0xC7) & 1)) << 24) + 150994944) ^ 0x1000000;
  v41 = (v39 - ((2 * v39 - 0x10000000) & 0xDFFFFFFF) - 418116001) ^ 0xEF140E5F | (v40
                                                                                - ((2 * v40) & 0x6DFA0000)
                                                                                + 1996352209) ^ 0x76FDEAD1;
  v42 = *(unsigned __int8 *)(v5 - 109);
  LODWORD(v37) = (((v42 & 0xFFFFFFBF ^ 0xFFFFFFEA) + (v42 & 0xAB ^ 1) - ((v42 & 0xFFFFFFBF ^ 0xFFFFFFEA) & 0xFFFFFFAB)) ^ (((v42 & 0x40 ^ 0x44) & 0xFFFFFF7F | ((((v42 & 0x40) >> 6) & 1) << 7)) + 120) ^ 0xA)
               + (v42 ^ 0xFFFFFFF3);
  v43 = ((_DWORD)v37 - ((2 * (_DWORD)v37) & 0x30) - 104) ^ *(unsigned __int8 *)(v21 + (v42 ^ 0x58));
  STACK[0x350] = v43;
  v44 = (v41 - ((2 * v41) & 0x32D04F66) - 1721227341) ^ 0x996827B3 | ((~(2 * (v43 ^ 0xE6)) | 0xFFFFFF6D)
                                                                    + (v43 ^ 0xE6)
                                                                    + 2000262986) ^ 0x77399749;
  v45 = *(unsigned __int8 *)(v15 + (*(unsigned __int8 *)(v5 - 110) ^ 0x25));
  STACK[0x318] = v45;
  LODWORD(v42) = ((((v45 ^ 0x54) - ((2 * (v45 ^ 0x54)) & 0xFFFFFF9F)) << 8) - 152973568) ^ 0xF6E1CF00;
  v46 = (v44 - ((2 * v44) & 0x8C692C88) - 969632188) ^ 0xC6349644 | (v42 - ((2 * v42) & 0x6C3EC600) + 1981768689) ^ 0x761F63F1;
  v47 = *(_DWORD *)(v35 + 4 * v33) ^ v20 ^ (v46 - ((2 * v46) & 0xE3A768C) - 2028127418) ^ *(_DWORD *)(v29 + 4 * v28) ^ (v22 - ((2 * v22) & 0xFFFFFFC7) - 390967069);
  v48 = *(unsigned __int8 *)(v15 + (*(unsigned __int8 *)(v5 - 106) ^ 0xFDLL));
  *(_QWORD *)(v5 - 240) = v48;
  LODWORD(v20) = ((((v48 ^ 0x40) - ((2 * (v48 ^ 0x40)) & 0xA2)) << 8) + 897732864) ^ 0x35825100;
  v49 = *(unsigned __int8 *)(v11 + (*(unsigned __int8 *)(v5 - 107) ^ 0xAALL));
  STACK[0x2F8] = v49;
  v50 = ((((v49 ^ 3) - ((2 * (v49 ^ 3)) & 0xFFFFFFFB)) << 16) - 688062464) ^ 0xD6FD0000;
  LODWORD(v49) = *(unsigned __int8 *)(v7 + (*(unsigned __int8 *)(v5 - 108) ^ 0x2FLL)) ^ *(unsigned __int8 *)(v5 - 108);
  LODWORD(STACK[0x2B0]) = v49;
  LODWORD(v42) = (((v49 ^ 0x34) - ((2 * (v49 ^ 0x34)) & 0x1C)) << 24) + 234881024;
  v51 = ((v42 ^ 0xE000000) - ((2 * v42) & 0xA0000000) - 797229145) ^ 0xD07B3FA7 | (v50
                                                                                 - ((2 * v50) & 0x25AA0000)
                                                                                 - 757787906) ^ 0xD2D512FE;
  LODWORD(v20) = (v51 - ((2 * v51) & 0x9A785FB0) + 1295790040) ^ 0x4D3C2FD8 | (v20
                                                                             - ((2 * v20) & 0x18652C00)
                                                                             + 1278383846) ^ 0x4C3296E6;
  v52 = *(unsigned __int8 *)(v5 - 105);
  v53 = ((v52 ^ 0xFFFFFFAE)
       + (v52 ^ 0xFFFFFFAA)
       - ((2 * ((v52 ^ 0xFFFFFFAE) + (v52 ^ 0xFFFFFFAA))) & 0xFFFFFFA4)
       + 82) ^ *(unsigned __int8 *)(v21 + (v52 ^ 1));
  *(_QWORD *)(v5 - 184) = v53;
  LODWORD(v20) = (v20 - ((2 * v20) & 0x91277B7E) + 1217641919) ^ 0x4893BDBF | ((v53 ^ 0x2C)
                                                                             - ((2 * (v53 ^ 0x2C)) & 0x1A8)
                                                                             + 1345604564) ^ 0x50344BD4;
  v54 = *(unsigned __int8 *)(v15 + (*(unsigned __int8 *)(v5 - 102) ^ 0xF1));
  STACK[0x320] = v54;
  LODWORD(v15) = v20 - ((2 * v20) & 0xD13DF1FA) - 392234755;
  LODWORD(v20) = ((((v54 ^ 0x57) - ((2 * (v54 ^ 0x57)) & 0x128)) << 8) + 135894016) ^ 0x8199400;
  LODWORD(v11) = *(unsigned __int8 *)(v11 + (*(unsigned __int8 *)(v5 - 103) ^ 0xC0)) ^ 0x39;
  LODWORD(v11) = ((((_DWORD)v11 - ((2 * (_DWORD)v11) & 0x77777777)) << 16) - 71630848) ^ 0xFBBB0000;
  LODWORD(v7) = *(unsigned __int8 *)(v7 + (*(unsigned __int8 *)(v5 - 104) ^ 1)) ^ *(unsigned __int8 *)(v5 - 104);
  LODWORD(STACK[0x34C]) = v7;
  LODWORD(v7) = (((v7 ^ 0x7C) - ((2 * (v7 ^ 0x7C)) & 0x44444444)) << 24) + 570425344;
  LODWORD(v7) = ((v7 ^ 0x22000000) - ((2 * v7) & 0x28000000) + 346123385) ^ 0x14A16C79 | (v11
                                                                                        - ((2 * v11) & 0x286E0000)
                                                                                        - 1808288653) ^ 0x9437B473;
  LODWORD(v7) = (v7 - ((2 * v7) & 0x9E761B8) - 2064404260) ^ 0x84F3B0DC | (v20 - ((2 * v20) & 0x2FA3BA00) - 1747853869) ^ 0x97D1DDD3;
  v55 = *(unsigned __int8 *)(v5 - 101);
  v56 = ((v55 ^ 0x13)
       + (v55 ^ 0x17)
       - ((2 * ((v55 ^ 0x13) + (v55 ^ 0x17))) & 0x3C)
       + 30) ^ *(unsigned __int8 *)(v21 + (v55 ^ 0xBC));
  STACK[0x338] = v56;
  LODWORD(v7) = (v7 - ((2 * v7) & 0xEF2572CA) + 2006104421) ^ 0x7792B965 | ((v56 ^ 0x60)
                                                                          - ((2 * (v56 ^ 0x60)) & 0xE2)
                                                                          + 751786353) ^ 0x2CCF5971;
  LODWORD(v56) = v7 - ((2 * v7) & 0x3FB184E8) - 1613184396;
  LODWORD(STACK[0x2C0]) = v47;
  v57 = v56 ^ v15 ^ v47;
  LODWORD(STACK[0x32C]) = v56;
  v58 = v15 ^ v47;
  LODWORD(STACK[0x2DC]) = v15 ^ v47;
  *(_DWORD *)(v5 - 244) = v30;
  LODWORD(v49) = ((v57 ^ v30) >> 16);
  LODWORD(STACK[0x308]) = v49;
  LODWORD(v15) = ((((v57 ^ v30) >> 8) & 0x44 ^ 0x25A53C05) + (((v57 ^ v30) >> 8) & 0xBB) - 1) ^ 0xB3;
  LODWORD(STACK[0x300]) = v57 ^ v30;
  LODWORD(v55) = *(_DWORD *)(v26 + 4 * ((v57 ^ v30) ^ 0x33u));
  LODWORD(v56) = *(_DWORD *)(v29
                           + 4
                           * (((v49 ^ 0xF3)
                             + (((v57 ^ v30) >> 16) & 0xF8 ^ 0x408)
                             - ((v49 ^ 0xF3) & 0xF8)) ^ 0x4E7)) ^ (v55
                                                                               - ((2 * v55 + 138122136) & 0x2EF6E000)
                                                                               + 1536768460);
  v59 = (v57 ^ v30) >> 24;
  *(_QWORD *)(v5 - 152) = v59;
  LODWORD(v55) = *(unsigned __int8 *)(v36 + (v59 ^ 0xC0)) ^ ((((v57 ^ v30) >> 24) ^ 0x44)
                                                                            - ((2 * (((v57 ^ v30) >> 24) ^ 0x44) - 126) & 0xD0)
                                                                            - 87) ^ 0x30;
  LODWORD(v49) = *(_DWORD *)(v35 + 4 * (((v15 & 0x426 ^ 0xE8101007) + (v15 & 0xD9) - 1) ^ 0xE81014A3)) ^ v56 ^ v47 ^ (v55 - ((2 * v55) & 0x1D2) + 116063465);
  LODWORD(STACK[0x26C]) = v49;
  LODWORD(v56) = v49 ^ 0xC8185391;
  LODWORD(v49) = v49 ^ 0xC8185391 ^ v58;
  LODWORD(STACK[0x280]) = v49;
  LODWORD(v15) = v49 ^ 0x5BFBFAC1;
  v60 = v30 ^ 0x3B0A251D ^ v49 ^ 0x5BFBFAC1;
  LODWORD(STACK[0x2AC]) = BYTE2(v60);
  LODWORD(v55) = (BYTE2(v60) ^ 0x51) - ((v60 >> 15) & 0x5C) - 1073150418;
  LODWORD(STACK[0x2B8]) = BYTE1(v60);
  LODWORD(v11) = (BYTE1(v60) ^ 0x54 | 0x69D75678) - (BYTE1(v60) ^ 0x54 | 0x9628A987) - 1775720057;
  LODWORD(v55) = *(_DWORD *)(v35
                           + 4
                           * (((v11 & 0x9815685 ^ 0x96010281)
                             + (v11 ^ 0x69DC757E)
                             - ((v11 ^ 0x69DC757E) & 0x90285)) ^ 0x9F82758B)) ^ *(_DWORD *)(v29 + 4 * (((v55 & 0xC008006A ^ 0x2002382A) + (v55 ^ 0xD17C41C0) - ((v55 ^ 0xD17C41C0) & 0x1111046A)) ^ 0xE06E7B7F));
  LODWORD(v59) = v30 ^ 0x1D ^ v49 ^ 0xC1 ^ 0x55;
  LODWORD(v11) = (v59 + (v60 & 0x8D ^ 0xE3EA9888) - (v59 & 0x8D)) ^ 0x6B299A87;
  LODWORD(v11) = *(_DWORD *)(v26 + 4 * (((_DWORD)v11 - ((2 * (_DWORD)v11) & 0x11001476) + 1017391675) ^ 0xB46728FE));
  v61 = HIBYTE(v60);
  *(_QWORD *)(v5 - 160) = v61;
  v62 = *(unsigned __int8 *)(v36 + (v61 ^ 0xE7)) ^ ((HIBYTE(v60) ^ 0x63)
                                                                   - ((2 * (HIBYTE(v60) ^ 0x63) + 2) & 0x1C)
                                                                   - 49) ^ 0xD6;
  LODWORD(v49) = v55 ^ v56 ^ (v62 - ((2 * v62) & 0x98) + 187057484) ^ (v11
                                                                     - ((2 * v11 - 2009361512) & 0xCB11771C)
                                                                     - 1448704678);
  LODWORD(v15) = v49 ^ v15;
  LODWORD(v59) = v49;
  LODWORD(STACK[0x22C]) = v49;
  LODWORD(v56) = v56 ^ (v7 - ((2 * v7) & 0x3FB184E8) - 1613184396);
  LODWORD(STACK[0x298]) = v56;
  LODWORD(v49) = v15 ^ v56;
  LODWORD(v45) = v15;
  LODWORD(STACK[0x240]) = v15;
  LODWORD(v56) = v15 ^ v56 ^ v60;
  LODWORD(STACK[0x2A8]) = v60;
  v63 = v49;
  LODWORD(STACK[0x254]) = v49;
  LODWORD(STACK[0x304]) = BYTE2(v56);
  LODWORD(v15) = *(_DWORD *)(v29 + 4 * (BYTE2(v56) ^ 0xCDu));
  LODWORD(STACK[0x2B4]) = BYTE1(v56);
  LODWORD(v15) = *(_DWORD *)(v35 + 4 * (BYTE1(v56) ^ 0xD0u)) ^ v15;
  LODWORD(STACK[0x2BC]) = v56;
  LODWORD(v55) = *(_DWORD *)(v26
                           + 4
                           * ((((2 * (v56 ^ 0xDF)) | 0x173EACEE)
                             - (v56 ^ 0xDF)
                             + 1684056457) & 0x1FFFFFFF ^ 0x1B9F5602u));
  v64 = BYTE3(v56);
  STACK[0x340] = v64;
  LODWORD(v56) = *(unsigned __int8 *)(v36 + (v64 ^ 0xDC)) ^ ((BYTE3(v56) ^ 0x58)
                                                                            - ((2 * (BYTE3(v56) ^ 0x58) - 126) & 0xCA)
                                                                            - 90);
  v65 = v15 ^ v59 ^ ((v56 ^ 0x3D) - ((2 * v56) & 0x100) + 1807577984) ^ (v55
                                                                       - ((2 * v55 + 138122136) & 0x1E819042)
                                                                       - 748776979);
  LODWORD(v49) = v65 ^ 0x87F8DDDA ^ v45;
  LODWORD(STACK[0x208]) = v49;
  LODWORD(v56) = v49 ^ 0x65697B0F;
  LODWORD(v49) = v49 ^ 0x65697B0F ^ v60;
  LODWORD(STACK[0x334]) = v49;
  LODWORD(v55) = v49 ^ 0xDC1BC84D;
  v66 = ((v49 ^ 0xDC1BC84D) >> 16) & 0xF9 ^ 0x8B6884B9;
  LODWORD(v49) = ((v49 ^ 0xDC1BC84D) >> 16);
  LODWORD(STACK[0x330]) = v49;
  LODWORD(STACK[0x30C]) = BYTE1(v55);
  LOWORD(v59) = (BYTE1(v55) ^ 0x2D) - ((2 * (BYTE1(v55) ^ 0x2D)) & 0x60) - 16336;
  LODWORD(v45) = *(_DWORD *)(v26 + 4 * (v55 ^ 0xB5u));
  v67 = *(_DWORD *)(v29
                  + 4
                  * (((v49 ^ 0x854246) + v66 - ((v49 ^ 0x854246) & 0x8002F9)) ^ 0x8B6DC41C)) ^ (v45 - ((2 * v45 + 138122136) & 0x7B7BE4D0) - 2116305868);
  v68 = BYTE3(v55);
  *(_QWORD *)(v5 - 168) = v68;
  LODWORD(v7) = *(unsigned __int8 *)(v36 + (v68 ^ 6)) ^ ((BYTE3(v55) ^ 0x82)
                                                                        - ((2 * (BYTE3(v55) ^ 0x82) + 2) & 0x70)
                                                                        - 7) ^ 0xD9;
  LODWORD(v68) = *(_DWORD *)(v35 + 4 * (((v59 & 0x478F ^ 0xE008C68D) + (v59 & 0x3870 ^ 0x42061) - 1) ^ 0xE00CA6B8)) ^ v67 ^ v65 ^ 0x87F8DDDA ^ (v7 - ((2 * v7) & 0xFFFFFFFB) + 1844998653);
  LODWORD(STACK[0x21C]) = v56 ^ v63;
  LODWORD(v15) = v56 ^ v63 ^ 0xCFD2B899;
  v600 = v68 ^ v56;
  v585 = v68;
  v617 = v68 ^ v56 ^ v15;
  LODWORD(v55) = v617 ^ v55;
  LODWORD(STACK[0x2F0]) = BYTE2(v55);
  LODWORD(STACK[0x2D4]) = v55 >> 8;
  LODWORD(STACK[0x2C4]) = BYTE1(v55);
  LODWORD(v7) = *(_DWORD *)(v29 + 4 * (((BYTE2(v55) ^ 0x65) - ((2 * (BYTE2(v55) ^ 0x65)) & 0x2E) + 5911) ^ 0x17FBu));
  v69 = *(_DWORD *)(v35
                  + 4
                  * (((BYTE1(v55) ^ 0xC9) + ((v55 >> 8) & 0x8E ^ 0x27F06) - ((BYTE1(v55) ^ 0xC9) & 0x8E)) ^ 0x27FA1));
  STACK[0x288] = v35;
  LODWORD(v7) = v69 ^ v7;
  LODWORD(STACK[0x2D8]) = v55;
  *(_QWORD *)(v5 - 200) = v26;
  v70 = *(_DWORD *)(v26 + 4 * (v55 ^ 0x78u));
  LODWORD(v7) = v7 ^ (v70 - ((2 * v70 + 138122136) & 0x2BFFB3FA) - 635591735);
  v71 = BYTE3(v55);
  STACK[0x2E0] = v71;
  *(_QWORD *)(v5 - 192) = v36;
  v72 = *(unsigned __int8 *)(v36 + (v71 ^ 0xFF)) ^ ((BYTE3(v55) ^ 0x7B)
                                                                   - ((2 * (BYTE3(v55) ^ 0x7B) + 2) & 0x2A)
                                                                   - 42) ^ 0xCD;
  v73 = v7 ^ (v72 - ((2 * v72) & 0x5E) + 1176083503);
  LODWORD(v71) = v73 ^ v56;
  LODWORD(v56) = v73 ^ v68 ^ v15;
  LODWORD(v45) = v73 ^ v68;
  v615 = v73 ^ v68;
  LODWORD(v68) = v56 ^ v55;
  LODWORD(v36) = v56;
  v598 = v56;
  LODWORD(v56) = ((v56 ^ v55) >> 16);
  LODWORD(STACK[0x310]) = v56;
  LODWORD(v56) = ((2 * (v56 ^ 0x6F)) | 0x6EA88F1C) - (v56 ^ 0x6F) + 1219213426;
  LODWORD(STACK[0x2D0]) = BYTE1(v68);
  LODWORD(STACK[0x2F4]) = v68;
  LODWORD(v52) = v68;
  LODWORD(v55) = *(_DWORD *)(v26 + 4 * (v68 ^ 0xE5u));
  LODWORD(v15) = *(_DWORD *)(v35
                           + 4
                           * ((((2 * (BYTE1(v68) ^ 0x4218FC)) | 0x75685ADC) - (BYTE1(v68) ^ 0x4218FC) + 1162597010) ^ 0xBAF635E0)) ^ (v55 - ((2 * v55 + 138122136) & 0x54E8DC5E) + 1855076347);
  v74 = BYTE3(v68);
  LODWORD(STACK[0x314]) = v52;
  *(_QWORD *)(v5 - 176) = v74;
  LODWORD(v55) = *(unsigned __int8 *)(v38 + (v74 ^ 0xC0)) ^ ((v74 ^ 0x44)
                                                                            - ((2 * (v74 ^ 0x44) + 2) & 0x48)
                                                                            - 27) ^ 0xFC;
  LODWORD(v45) = v15 ^ v45 ^ (v55 - ((2 * v55) & 0x14E) - 1618869081) ^ *(_DWORD *)(v29
                                                                                  + 4
                                                                                  * (((v56 & 0x4100FED ^ 0x4280961)
                                                                                    + (v56 & 0x33444012 ^ 0x38446001)
                                                                                    - 1) ^ 0xB382EA6));
  v75 = v71 ^ 0x8662CFC7 ^ v45;
  v580 = v45;
  LODWORD(STACK[0x2EC]) = v75 ^ v36;
  LODWORD(v38) = v75 ^ v36 ^ 0x2CD35CE4;
  v76 = v38 ^ v52;
  LODWORD(v55) = ((unsigned __int16)(v38 ^ v52) >> 8);
  v77 = *(_QWORD *)(v34 + 8 * (v4 - 23648)) - 662875495;
  v78 = *(_DWORD *)(v77
                  + 4
                  * ((((2 * (v55 ^ 0x82832C8)) | 0xD072A14A) - (v55 ^ 0x82832C8) - 1748586661) ^ 0x601162A9));
  LODWORD(v56) = (((v78 >> 4) & 0xF8F12FE ^ 0xD141A3E9) - 1) ^ 0x1B1220C;
  v79 = v56 - ((2 * v56) & 0x275305E0) - 1280725264;
  v80 = *(_QWORD *)(v34 + 8 * (v4 ^ 0x6975)) - 924036018;
  LODWORD(v56) = ((BYTE2(v76) ^ 0xF7 | 0x9DA134AA) - (BYTE2(v76) ^ 0xF7 | 0x625ECB55) + 1650379605) ^ 0x65C0389E;
  v81 = *(_QWORD *)(v34 + 8 * (v4 - 25076)) - 882627155;
  LODWORD(v56) = *(_DWORD *)(v81
                           + 4
                           * (((v56 | 0x198B6436) - (v56 | 0xE6749BC9) - 428565559) ^ 0xE1EA6868));
  v82 = v56 - ((2 * v56 + 75167094) & 0x1E738500) + 1903639867;
  v83 = (v38 ^ v52) >> 24;
  v84 = *(_QWORD *)(v34 + 8 * (v4 - 22750)) - 1664595115;
  LODWORD(v74) = *(_DWORD *)(v80
                           + 4
                           * ((((v38 ^ v52) ^ 0x90B1917D | 0xC7C3DD40)
                             - ((v38 ^ v52) ^ 0x90B1917D | 0x383C22BF)
                             + 943465151) ^ 0x57724C81)) ^ *(_DWORD *)(v84 + 4 * (v83 ^ 0x3D)) ^ v78 ^ v82 ^ v79 ^ ((v83 ^ 0xE8) - ((2 * (v83 ^ 0xE8) + 200304372) & 0xB004F3C) + 864017176);
  LODWORD(v74) = v74 ^ ((v74 ^ 0x2DFF75E8) - ((2 * (v74 ^ 0x2DFF75E8) + 1863257832) & 0x8B9833B8) - 44850864) ^ ((v74 ^ 0x9A78F29B) - ((2 * (v74 ^ 0x9A78F29B) + 2) & 0xFC26A800) + 2115195905) ^ 0x5E5840B8;
  v85 = (((2 * (BYTE1(v75) ^ 0xE7)) & 0x152) - (BYTE1(v75) ^ 0xE7) + 1836201046) ^ 0x283A3672;
  v86 = *(_DWORD *)(v77 + 4 * ((((2 * v85) & 0x8080069A) - v85 + 1032324274) ^ 0x78C00606));
  *(_DWORD *)(v5 - 140) = v74 - ((2 * v74 + 252645094) & 0x142F5442) - 1046531692;
  LODWORD(v74) = (((v86 >> 4) & 0xF8F12FE ^ 0x6B66A195) - 1) ^ 0xE274B39A;
  v87 = (((2 * (v71 ^ 0xC7 ^ v45 ^ 0xE)) | 0xC7FB65E4)
       - (v71 ^ 0xC7 ^ v45 ^ 0xE)
       - 1677570802) ^ 0x29FF1AE2;
  v88 = ((HIWORD(v75) & 0x22 ^ 0xC49B1522) - (HIWORD(v75) & 0x22) + (BYTE2(v75) ^ 0x51)) ^ 0x94331F22;
  v89 = *(_DWORD *)(v81 + 4 * (((v88 | 0x2430F750) - (v88 | 0xDBCF08AF) - 607188817) ^ 0x7498FD22));
  *(_DWORD *)(v5 - 144) = *(_DWORD *)(v80 + 4 * (((v87 | 0xA560FED7) - (v87 | 0x5A9F0128) + 1520369960) ^ 0xEF625692)) ^ *(_DWORD *)(v84 + 4 * (HIBYTE(v75) ^ 0x88)) ^ v86 ^ (v89 - ((2 * v89 - 998574730) & 0xD81176B6) + 1313224214) ^ ((HIBYTE(v75) ^ 0x5D) + 1748114976 + ((2 * (HIBYTE(v75) ^ 0x5D) + 1780) & 0x54A ^ 0xAF8FBFFF)) ^ (v74 - ((2 * v74) & 0x500042C) + 41987863);
  v90 = *(_QWORD *)(v34 + 8 * (v4 ^ 0x6858)) - 342261503;
  STACK[0x2A0] = v90;
  LODWORD(v74) = *(_DWORD *)(v90 + 4 * (LODWORD(STACK[0x2B0]) ^ 0x32u));
  HIDWORD(v91) = v74 ^ 0x38B;
  LODWORD(v91) = v74 ^ 0x25047000;
  LODWORD(v74) = (v91 >> 12) - ((2 * (v91 >> 12)) & 0x689CF99A) + 877558989;
  LODWORD(v90) = ((v74 >> 1) & 0x7352AF45 ^ 0x142AA41)
               - ((2 * ((v74 >> 1) & 0x7352AF45 ^ 0x142AA41)) & 0x62804A02)
               + 1027962113;
  *(_DWORD *)(v5 - 132) = v4;
  v92 = *(_QWORD *)(v34 + 8 * (v4 ^ 0x6452)) - 1323151291;
  v93 = *(_DWORD *)(v92 + 4 * (STACK[0x2F8] ^ 0xFB));
  v94 = *(_QWORD *)(v34 + 8 * (v4 - 25279)) - 1155984618;
  v95 = *(_QWORD *)(v34 + 8 * (v4 - 22788)) - 139533635;
  LODWORD(v74) = v74 ^ *(_DWORD *)(v94 + 4 * (*(_QWORD *)(v5 - 240) ^ 0xB6)) ^ (v93
                                                                                - ((2 * v93 - 559229500) & 0xAC0F82C8)
                                                                                - 983749562) ^ (((((*(_QWORD *)(v5 - 184) ^ 0x22) + 1) ^ 0x6F) + ((2 * ((*(_QWORD *)(v5 - 184) ^ 0x22) + 1)) & 0xDE) + *(_BYTE *)(v95 + (*(_QWORD *)(v5 - 184) ^ 0x8FLL)) + 98)
                                                                                              - ((2
                                                                                                * ((((*(_QWORD *)(v5 - 184) ^ 0x22) + 1) ^ 0x6F)
                                                                                                 + ((2 * ((*(_QWORD *)(v5 - 184) ^ 0x22) + 1)) & 0xDE)
                                                                                                 + *(unsigned __int8 *)(v95 + (*(_QWORD *)(v5 - 184) ^ 0x8FLL))
                                                                                                 + 98)) & 0x1E4)
                                                                                              + 1389587186) ^ ((v90 & 0x205D048F ^ 0x11048F) + (v90 ^ 0xBF4C7110) - ((v90 ^ 0xBF4C7110) & 0x205D048F));
  *(_DWORD *)(v5 - 240) = v74;
  LODWORD(v7) = (v74 ^ 0x5C6AFDB8) + 221953657;
  LODWORD(STACK[0x29C]) = v7 ^ 0xFFB6F45A;
  LODWORD(STACK[0x294]) = (2 * v7) & 0xFF6DE8B4;
  LODWORD(v52) = *(_DWORD *)(v77
                           + 4
                           * ((((v71 >> 8) & 0xB2 ^ 0x983) + ((v71 >> 8) & 0x4D) - 1) ^ 0x95F));
  LODWORD(v7) = (((v52 >> 3) & 0x61201B8) + 483825188 + ((v52 >> 4) & 0xF8F12FE ^ 0xF37BEDDF)) ^ 0x1CD69E2B;
  v96 = ((2 * v7) | 0x3296CA08) - v7 + 1723112188;
  LODWORD(v36) = (((2 * (v71 ^ 0x3002B004)) | 0xEE267FB2)
                - (v71 ^ 0x3002B004)
                + 149733415) ^ 0xC7118F93;
  LODWORD(v7) = *(_DWORD *)(v81
                          + 4
                          * ((((2 * (BYTE2(v71) ^ 0xDF)) & 0x172) - (BYTE2(v71) ^ 0xDF) + 1925201478) ^ 0x72C03EE4u));
  v97 = v7 - ((2 * v7 + 75167094) & 0x2B625748) - 135354785;
  v98 = v71 ^ 0xC6853A50;
  LODWORD(v15) = (((2 * (BYTE2(v76) ^ 0x16)) & 0x122) - (BYTE2(v76) ^ 0x16) + 1617119342) ^ 0x304348E6;
  LODWORD(v55) = (((2 * (v55 ^ 0x24)) | 0xE95FDB2E) - (v55 ^ 0x24) - 1957686679) ^ 0x7CF7E997;
  v99 = v29;
  STACK[0x2C8] = v29;
  LODWORD(v15) = *(_DWORD *)(v29 + 4 * ((((2 * (_DWORD)v15) & 0x80000D3C) - (_DWORD)v15 - 1829258911) ^ 0xC2D7B9CD));
  v100 = STACK[0x288];
  LODWORD(v15) = *(_DWORD *)(STACK[0x288]
                           + 4
                           * (((v55 | 0x65B0B3D4) - (v55 | 0x9A4F4C2B) - 1706079189) ^ 0x6DE8B70A)) ^ v15;
  LODWORD(v55) = ((v76 & 0x5B ^ 0xA13BC713) + (v76 & 0xA4 ^ 0x81) - 1) ^ 0x83288792;
  v101 = *(_QWORD *)(v5 - 200);
  LODWORD(v55) = *(_DWORD *)(v101
                           + 4
                           * (((v55 | 0x9E421430) - (v55 | 0x61BDEBCF) + 1639836623) ^ 0xBC515404));
  v102 = *(_QWORD *)(v5 - 192);
  LODWORD(v83) = *(unsigned __int8 *)(v102 + (v83 ^ 0x51)) ^ ((HIBYTE(v76) ^ 0xD5)
                                                                             - ((2 * (HIBYTE(v76) ^ 0xD5) + 2) & 0x48)
                                                                             - 27) ^ 0xC5;
  LODWORD(v15) = v15 ^ v45 ^ (v55 - ((2 * v55 + 138122136) & 0x776F5F9A) - 2786919) ^ (v83
                                                                                     - ((2 * v83) & 0x104)
                                                                                     + 1362173570);
  LODWORD(STACK[0x204]) = v15;
  LODWORD(v83) = v15 ^ 0x8988334F;
  v621 = ((((v15 ^ 0x8988334F ^ v75) & 0x80000 ^ 0xF84D8894) & 0xFFEFFFFF | (((((v15 ^ 0x8988334F ^ v75) & 0x80000) >> 19) & 1) << 20))
        + 523611130) ^ (v15 ^ 0x8988334F ^ v75) & 0xFFF7FFFF;
  v607 = v621 ^ 0xC1A71A50 ^ v38;
  LODWORD(v15) = v607 ^ 0x29DF191B;
  *(_DWORD *)(v5 - 184) = v607 ^ 0x29DF191B;
  v604 = ((v607 ^ 0x29DF191B ^ v76) >> 16);
  LODWORD(v55) = ((((v15 ^ v76) >> 8) & 0x93 ^ 0xACA1A16F) - (((v15 ^ v76) >> 8) & 0x6C)) ^ 0x2CADA96C;
  v591 = v607 ^ 0x29DF191B ^ v76;
  LODWORD(v71) = (((v15 ^ v76) ^ 0xFD | 0xC8A101FB)
                - ((v15 ^ v76) ^ 0xFD | 0x375EFE04)
                + 928972292) ^ 0x6AE609BB;
  LODWORD(v71) = *(_DWORD *)(v101 + 4 * ((((2 * (_DWORD)v71) | 0x6D70E91E) - (_DWORD)v71 + 1229425521) ^ 0x14FF7C5Cu));
  LODWORD(v15) = *(_DWORD *)(v100
                           + 4
                           * (((v55 | 0xDB498FA8) - (v55 | 0x24B67057) + 615936087) ^ 0x5B45873A)) ^ *(_DWORD *)(v99 + 4 * ((((2 * (v604 ^ 0x96002089)) | 0x92EEAB96) - (v604 ^ 0x96002089) - 1232557515) ^ 0xDF777507));
  LODWORD(v55) = v71 - ((2 * v71 + 138122136) & 0x4317DA4E) - 441862413;
  v587 = HIBYTE(v591);
  LODWORD(v71) = *(unsigned __int8 *)(v102 + (v587 ^ 0x73)) ^ ((HIBYTE(v591) ^ 0xF7)
                                                                              - ((2 * (HIBYTE(v591) ^ 0xF7) + 2) & 0x38)
                                                                              + 93) ^ 0x7D;
  LODWORD(v45) = v15 ^ v83 ^ (v71 - ((2 * v71) & 0x3A) - 747526115) ^ v55;
  LODWORD(STACK[0x20C]) = BYTE3(v45);
  LODWORD(v83) = (BYTE3(v45) ^ 0x41) - 404620154 + ((2 * (BYTE3(v45) ^ 0x41) + 756) & 0x216 ^ 0xAC2FFFFF);
  LODWORD(STACK[0x230]) = v83;
  LODWORD(v101) = (((v98 >> (v83 & 0x18 ^ 8)) - ((2 * (v98 >> (v83 & 0x18 ^ 8))) & 0x6D8C19CC) - 1228534554) ^ 0xB6C60CE6) >> (v83 & 0x18 ^ 0x10);
  LODWORD(v101) = (v101 - ((2 * v101) & 0x87) - 61);
  LODWORD(v83) = ((v101 ^ 0x10100E6 | 0x94F46CEB) - (v101 ^ 0x10100E6 | 0x6B0B9314) + 1795920660) ^ 0x95F56CEB;
  LODWORD(v101) = (((2 * (v101 ^ 0x8F)) & 0x3A) - (v101 ^ 0x8F) - 411445790) ^ 0xEEBBC5EA;
  v103 = *(_DWORD *)(v80 + 4 * v36) ^ v52 ^ v97 ^ v96 ^ (v83
                                                                       - ((2 * v83 + 1542481652) & 0x5693A326)
                                                                       - 1723726579) ^ *(_DWORD *)(v84
                                                                                                 + 4
                                                                                                 * ((((2 * (_DWORD)v101) & 0x13802934) - (_DWORD)v101 - 2147343515) ^ 0x89C033D1));
  LODWORD(STACK[0x2B0]) = v103;
  LODWORD(v101) = ((BYTE1(v57) ^ 0x14) + ((v57 >> 8) & 0xD1 ^ 0xF76365C1) - ((BYTE1(v57) ^ 0x14) & 0xD1)) ^ 0xB14145B1;
  LODWORD(v101) = *(_DWORD *)(v77 + 4 * ((((2 * (_DWORD)v101) & 0xC4048C0) - (_DWORD)v101 - 1067480161) ^ 0x867DAB38));
  LODWORD(v99) = (v57 ^ 0xC0 | 0xCCDB7099) - (v57 ^ 0xC0 | 0x33248F66) + 858034022;
  LODWORD(v15) = ((BYTE2(v57) ^ 0x50 | 0x2D66A94) - (BYTE2(v57) ^ 0x50 | 0xFD29956B) - 47606421) ^ 0x389F7994;
  LODWORD(v15) = *(_DWORD *)(v81 + 4 * ((((2 * (_DWORD)v15) | 0x14EEC308) - (_DWORD)v15 + 1971887740) ^ 0xB03E72F6));
  LODWORD(STACK[0x2F8]) = v57 ^ ~*(_DWORD *)(v5 - 244);
  LODWORD(v99) = v101 ^ ((HIBYTE(v57) ^ 0x61) + 1131716940 + ((2 * (HIBYTE(v57) ^ 0x61) + 1780) & 0xBA2 ^ 0xF50FBFFF)) ^ *(_DWORD *)(v80 + 4 * (((v99 & 0x489B6573 ^ 0x31120522) + (v99 & 0x84401A8C ^ 0x200A81) - 1) ^ 0xFDE97F91)) ^ *(_DWORD *)(v84 + 4 * (HIBYTE(v57) ^ 0xB4)) ^ (((v101 >> 4) & 0xF8F12FE ^ 0xF24182E) + ((v101 >> 4) & 0x78C1050 ^ 0xD098A050) - (((v101 >> 4) & 0xF8F12FE ^ 0xF24182E) & 0x78C1850)) ^ (v15 - ((2 * v15 - 998574730) & 0x8398BC98) + 604625159);
  *(_DWORD *)(v5 - 244) = v99;
  LODWORD(v83) = (v103 ^ 0xD95F663) + (v99 ^ 0xA0DF5B18);
  LODWORD(v99) = *(_DWORD *)(v77
                           + 4
                           * (((LODWORD(STACK[0x2B4]) ^ 0x93130185 | 0x6DF2DF0E)
                             - (LODWORD(STACK[0x2B4]) ^ 0x93130185 | 0x920D20F1)
                             - 1844633359) ^ 0xFEE1DE03));
  LODWORD(v15) = ((v99 >> 4) & 0xF8F12FE ^ 0xC06107A)
               + ((v99 >> 4) & 0x98802E8 ^ 0x91882280)
               - (((v99 >> 4) & 0xF8F12FE ^ 0xC06107A) & 0x98802E8);
  LODWORD(v55) = ((LODWORD(STACK[0x2BC]) ^ 0x79725BC5)
                - ((2 * (LODWORD(STACK[0x2BC]) ^ 0x79725BC5)) & 0x20A08372)
                + 341172665) ^ 0xED24A3BD;
  LODWORD(v99) = v99 ^ *(_DWORD *)(v80
                                 + 4
                                 * ((v55 - ((2 * (_DWORD)v55) & 0xC0491FC0) - 98267168) ^ 0x7A2796D6)) ^ 0x55FA4BE8 ^ ((v15 & 0x52783BF8 ^ 0xC230F931 | v15 & 0x2D870406) - 1);
  LODWORD(v15) = *(_DWORD *)(v81
                           + 4
                           * (((LODWORD(STACK[0x304]) ^ 0xFFFFFF27)
                             + 1801496099
                             + ((2 * LODWORD(STACK[0x304])) | 0x293EB3BC)) ^ 0x949F5919))
               - 499287365;
  LODWORD(v55) = 2 * ((v99 & v15) - ((2 * (v99 & v15)) & 0x1322086C)) - 1826486164;
  LODWORD(v99) = ((2 * (v99 + v15)) & 0xFDE7FF7A)
               + ((v99 + v15) ^ 0xFEF3FFBD)
               + (v55 ^ 0x11A2067F)
               + ((2 * v55) & 0xFAFFE3D8 ^ 0xDDBBFF27);
  LODWORD(v15) = (((STACK[0x340] << 17) ^ 0x10E0000)
                - 1298973586
                + (~(2 * ((STACK[0x340] << 17) ^ 0x10E0000)) | 0xFEDBFFFF)) ^ 0xB2253C6D;
  LODWORD(v55) = *(_DWORD *)(v84 + 4 * (STACK[0x340] ^ 9));
  HIDWORD(v91) = v55 ^ 0x4724;
  LODWORD(v91) = v55 ^ 0x8E248000;
  LODWORD(v15) = (v15 - ((2 * v15 + 1307228128) & 0x6420C65C) + 419807006) ^ ((v91 >> 15)
                                                                            - ((2 * (v91 >> 15)) & 0xE5E76130)
                                                                            + 1928573080);
  HIDWORD(v91) = v15 ^ 0x19E80;
  LODWORD(v91) = v15 ^ 0xED660000;
  LODWORD(v55) = (v99 + 70617543 + (~(2 * v99 + 219669602) | 0xF4ACD0D5)) ^ ((v91 >> 17)
                                                                           - ((2 * (v91 >> 17)) & 0x1F435610)
                                                                           + 262253320);
  LODWORD(STACK[0x340]) = v55;
  LODWORD(v101) = LODWORD(STACK[0x29C])
                + LODWORD(STACK[0x294])
                + (v55 ^ 0x2AC1D25B)
                + (v83 ^ 0x96804002)
                - ((2 * v83) & 0xD2FF7FFA)
                + 1850822970;
  LODWORD(v99) = *(_DWORD *)(v77
                           + 4
                           * (((BYTE1(v65) ^ 0x53) + ((v65 >> 8) & 0x97 ^ 0x984) - ((BYTE1(v65) ^ 0x53) & 0x97)) ^ 0x9E3));
  LODWORD(v90) = *(_DWORD *)(v81 + 4 * (BYTE2(v65) ^ 0xDAu));
  LODWORD(v15) = *(_DWORD *)(v80
                           + 4
                           * (((((v65 & 0x54) + (v65 ^ 0x82802776)) | 0x601DD000)
                             - ((v65 ^ 0x82802776) & 0x802054)) ^ 0xE21DD7AC)) ^ v99 ^ *(_DWORD *)(v84 + 4 * (HIBYTE(v65) ^ 0x9A)) ^ (v90 - ((2 * v90 + 75167094) & 0xA97AB80) - 410431365) ^ ((HIBYTE(v65) ^ 0x4F) + 8725322 + ((2 * (HIBYTE(v65) ^ 0x4F) + 1780) & 0xFFFFFF9F ^ 0xFEEFBFFF)) ^ (((v99 >> 4) & 0xF8F12FE ^ 0xD8512A6) - ((2 * ((v99 >> 4) & 0xF8F12FE ^ 0xD8512A6)) & 0x60805E8) + 591700724);
  LODWORD(v101) = (v15 ^ 0xE0F07D72) + (v101 ^ 0xBBEFDA9E) + ((2 * v101) & 0x77DFB53C) + 1141908834;
  LODWORD(v59) = v15;
  LODWORD(STACK[0x304]) = v15;
  LODWORD(v99) = (4 * v15) & 0x6BE7FAE8 ^ 0x3C1F0C8;
  LODWORD(v15) = *(_DWORD *)(v77
                           + 4
                           * (((STACK[0x2D4] & 0x12)
                             + (LODWORD(STACK[0x2C4]) ^ 0x980A32F2)
                             - ((LODWORD(STACK[0x2C4]) ^ 0x980A32F2) & 0x10083212)
                             + 1641090304) ^ 0xE9D30D0F));
  LODWORD(v55) = (((v15 >> 4) & 0xF8F12FE ^ 0xF8A10FC)
                + ((v15 >> 4) & 0xF100E ^ 0xA015A403)
                - (((v15 >> 4) & 0xF8F12FE ^ 0xF8A10FC) & 0xF00FF00F)) ^ 0xA22DB45F;
  LODWORD(v90) = (((2 * (LODWORD(STACK[0x2D8]) ^ 0x38)) | 0x37F60A6) - (LODWORD(STACK[0x2D8]) ^ 0x38) - 29339731) ^ 0xD9AFD37F;
  LODWORD(v71) = *(_DWORD *)(v81
                           + 4
                           * ((((2 * (LODWORD(STACK[0x2F0]) ^ 0x244B287F)) & 0x8940044)
                             - (LODWORD(STACK[0x2F0]) ^ 0x244B287F)
                             - 1340736035) ^ 0x945ED5FE));
  LODWORD(v55) = *(_DWORD *)(v80
                           + 4
                           * (((v90 | 0xE9EA78DE) - (v90 | 0x16158721) + 370509601) ^ 0x31FA1B81)) ^ v15 ^ *(_DWORD *)(v84 + 4 * (STACK[0x2E0] ^ 0x97)) ^ (v71 - ((2 * v71 + 1148908918) & 0x6F9D6274) - 1710478347) ^ ((STACK[0x2E0] ^ 0x42) - ((2 * (STACK[0x2E0] ^ 0x42) + 200304372) & 0x81000FE) + 1141208057) ^ ((v55 | 0xDDF5EAF2) - (v55 | 0x220A150D) + 571086093);
  LODWORD(STACK[0x2F0]) = v55;
  LODWORD(v99) = ((2 * v59) ^ 0x74130791) + v99 + 1242301067 + (v55 ^ 0xF25AC658);
  LODWORD(v101) = (v99 ^ 0xC00822A5)
                - ((2 * v99) & 0x7FEFBAB4)
                + (*(_DWORD *)(v5 - 144) ^ 0x7DAE3650)
                + (v101 ^ 0xB2F7FA5F)
                + ((2 * v101) & 0x65EFF4BE)
                + 1206577521;
  LODWORD(v101) = (*(_DWORD *)(v5 - 140) ^ 0xA17AA21) + (v101 ^ 0xFFD1FE7F) + ((2 * v101) & 0xFFA3FCFE) + 3015041;
  LODWORD(v101) = ((2 * v101) & 0x6DFEFF72) + (v101 ^ 0xB6FF7FB9);
  LODWORD(v55) = v101 - 1327787602 + (~(2 * v101 + 6150142) | 0xFFA6B4A3);
  LODWORD(STACK[0x258]) = v55;
  LODWORD(STACK[0x260]) = ((2 * v55) & 0x6EB9FEFE ^ 0x221BA1E) + (v55 ^ 0x364F22F0);
  LODWORD(v99) = *(_DWORD *)(v5 - 136) + 1594852742;
  LODWORD(v55) = ((v99 >> 7) & 0x1FFFFDE ^ 4) + ((v99 >> 8) ^ 0x6D);
  LODWORD(v59) = *(_DWORD *)(v5 - 132);
  LODWORD(v55) = (v99 >> 8) ^ (v55 - 2 * ((v55 + 44) & 0x6F ^ v55 & 3) + 24) ^ 0x4D ^ *((unsigned __int8 *)*(&off_10112C750 + (int)(v59 ^ 0x6844)) + ((((2 * (BYTE1(v99) ^ 0xFC)) & 0xB6) - (BYTE1(v99) ^ 0xFCu) + 2468) ^ 0x9F2) - 389768835);
  LODWORD(v55) = (((v55 - ((2 * (_DWORD)v55) & 0x1EE)) << 8) + 750450432) ^ 0x2CBAF700;
  LODWORD(v90) = (*(_BYTE *)(v5 - 136) - 122) ^ 0x6A;
  LOBYTE(v15) = ((2 * (((*(_BYTE *)(v5 - 136) - 122) ^ 0xD4) + ((*(_BYTE *)(v5 - 136) - 122) ^ 0x66))) & 0x5A)
              + ((((*(_BYTE *)(v5 - 136) - 122) ^ 0xD4) + ((*(_BYTE *)(v5 - 136) - 122) ^ 0x66)) ^ 0xAD);
  LODWORD(v15) = (v15 - ((2 * v15 - 90) & 0xF4) + 77) ^ 0x32 ^ *((unsigned __int8 *)*(&off_10112C750 + (int)v59 - 24415)
                                                                                + (((((v90 | 0xEFD03C54)
                                                                                    - (v90 | 0x102FC3AB)
                                                                                    + 271565739) & 0x424029F3 ^ 0x10448163)
                                                                                  + (((v90 | 0xEFD03C54)
                                                                                    - (v90 | 0x102FC3AB)
                                                                                    + 271565739) & 0xAD90160C ^ 0xAD985001)
                                                                                  - 1) ^ 0x520CEDA0)
                                                                                - 680150090);
  LODWORD(v15) = (v55 - ((2 * v55) & 0x5BB8AE00) + 1843156801) ^ 0x6DDC5741 | (v15 - ((2 * v15) & 0x96) + 344069707) ^ 0x1482164B;
  LODWORD(v55) = *((unsigned __int8 *)*(&off_10112C750 + (int)v59 - 23407) + (BYTE2(v99) ^ 0xB0) - 1914579514);
  LODWORD(v55) = (-69 * v55 - ((54 * v55 + 58) & 0x32) + 22) ^ 0xBF;
  LODWORD(v55) = (((v55 - ((2 * (_DWORD)v55) & 0xE0)) << 16) - 1200619520) ^ 0xB8700000;
  LODWORD(v15) = (v55 - ((2 * v55) & 0x25DA0000) - 1829959750) ^ 0x92ED07BA | (v15
                                                                             - ((2 * v15) & 0x5BF09BA0)
                                                                             - 1376236080) ^ 0xADF84DD0;
  LODWORD(v99) = *((unsigned __int8 *)*(&off_10112C750 + (int)(v59 ^ 0x62C8)) + (BYTE3(v99) ^ 0x23) - 1499461263);
  LODWORD(v99) = (-123 * v99 - ((10 * v99 + 14) & 0x56) - 14) ^ 0x2C;
  LODWORD(v99) = ((((_DWORD)v99 - ((2 * (_DWORD)v99) & 0x52)) << 24) - 1459617792) ^ 0xA9000000;
  LODWORD(v99) = (v15 - ((2 * v15) & 0x25ECF25C) - 1829340882) ^ 0x92F6792E | (v99
                                                                             - ((2 * v99) & 0x64000000)
                                                                             - 1297068942) ^ 0xB2B04C72;
  *(_DWORD *)(v5 - 136) = (v99 - ((2 * v99) & 0xB538CE44) - 627284190) ^ 0x24004428;
  LODWORD(v15) = BYTE1(LODWORD(STACK[0x2EC])) ^ 0xBE;
  LODWORD(v99) = v15 + ((LODWORD(STACK[0x2EC]) >> 8) & 0x15 ^ 0x8428E401) - (v15 & 0x15);
  LODWORD(v99) = *(_DWORD *)(v77 + 4 * (((v99 & 0x55A ^ 0xA115014B) + (v99 & 0x2A5) - 1) ^ 0xA115055A));
  LODWORD(v15) = (v99 ^ 0x26F44F41) + 1;
  LODWORD(v99) = v99 ^ 0x5FC02609;
  LODWORD(v15) = v99 + (v15 ^ 0xFD3BF83D) + ((2 * v15) & 0xFA77F07A) + 46401475;
  LODWORD(v99) = ((v15 - ((2 * v15) & 0xF12ADE88) - 124424380) ^ 0x76A90BA) + v99;
  LODWORD(v55) = ((HIWORD(LODWORD(STACK[0x2EC])) & 0x7D ^ 0xE85C23AA) - (HIWORD(LODWORD(STACK[0x2EC])) & 0x82)) ^ 0xA83C2706;
  LODWORD(v55) = *(_DWORD *)(v81 + 4 * ((((2 * (_DWORD)v55) | 0xE2E7D5F4) - (_DWORD)v55 + 244061446) ^ 0xB113EE7F));
  LODWORD(STACK[0x244]) = *(_DWORD *)(v84 + 4 * (HIBYTE(LODWORD(STACK[0x2EC])) ^ 0xA3u)) ^ *(_DWORD *)(v80 + 4 * (((STACK[0x2EC] & 0x17 ^ 0x4798CA14) + (STACK[0x2EC] & 0xE8 ^ 0x180004E1) - 1) ^ 0x5F98CE90u)) ^ (v55 - ((2 * v55 - 998574730) & 0xF7C2428C) + 1579064321) ^ (v99 - ((2 * v99) & 0xBE3334CE) - 551970201) ^ ((HIBYTE(LODWORD(STACK[0x2EC])) ^ 0x76) - 1850492680 + ((2 * (HIBYTE(LODWORD(STACK[0x2EC])) ^ 0x76) + 1780) & 0xAFA ^ 0xBC8FFFFF)) ^ ((v99 - ((2 * (_DWORD)v99) & 0xBE3334CE) - 551970201) >> 4) & 0xF8F12FE;
  LODWORD(v99) = (((2 * (LODWORD(STACK[0x30C]) ^ 0x3F)) | 0xEE0C0EE0) - (LODWORD(STACK[0x30C]) ^ 0x3F) - 1996883824) ^ 0x50D4F138;
  LODWORD(v99) = *(_DWORD *)(v77 + 4 * (((_DWORD)v99 - ((2 * (_DWORD)v99) & 0x47C5CCA0) + 1675814480) ^ 0x44301011u));
  LODWORD(STACK[0x2EC]) = v99;
  LODWORD(STACK[0x2E0]) = ((2 * ((v99 >> 4) & 0xF8F12FE ^ 0xACE43611)) | 0x952C0FD8)
                        - ((v99 >> 4) & 0xF8F12FE ^ 0xACE43611)
                        - 1251346412;
  LODWORD(v99) = ((LODWORD(STACK[0x334]) ^ 0xE0)
                + (STACK[0x334] & 0x76 ^ 0x6458E216)
                - ((LODWORD(STACK[0x334]) ^ 0xE0) & 0x76)) ^ 0xE650B8AE;
  v596 = (v99 - ((2 * v99) & 0x4108770) - 277878856) ^ 0x6D67BDD5;
  LODWORD(v99) = *(_DWORD *)(v81
                           + 4
                           * (((LODWORD(STACK[0x330]) ^ 0x58) - ((LODWORD(STACK[0x334]) >> 15) & 0x108) + 9092) ^ 0x23B5));
  LODWORD(STACK[0x2D8]) = v99 - ((2 * v99 + 1148908918) & 0x476082D6) - 2048017370;
  LODWORD(STACK[0x2D4]) = (*(_QWORD *)(v5 - 168) ^ 0x4C)
                        - 134326748
                        + ((2 * (*(_QWORD *)(v5 - 168) ^ 0x4C) + 1780) & 0x552 ^ 0xEFFFBFFF);
  LODWORD(v99) = *(_DWORD *)(v77
                           + 4
                           * ((((2 * (LODWORD(STACK[0x2D0]) ^ 0x208080EC)) & 0x41000182)
                             - (LODWORD(STACK[0x2D0]) ^ 0x208080EC)
                             + 238523966) ^ 0x2EB71612u));
  LODWORD(STACK[0x27C]) = v99;
  LODWORD(v99) = ((v99 >> 4) & 0xA0B02A8 ^ 0x10592389)
               + ((v99 >> 4) & 0x5841056 ^ 0x4800057)
               - 2;
  LODWORD(STACK[0x278]) = (v99 & 0x3C110A0 ^ 0x1A04820) + (v99 ^ 0xFA4B3784) - ((v99 ^ 0xFA4B3784) & 0xA38110A0);
  LODWORD(v99) = (((2 * (LODWORD(STACK[0x2F4]) ^ 6)) | 0x978771E0) - (LODWORD(STACK[0x2F4]) ^ 6) - 1271118064) ^ 0xB4368D8;
  v588 = (((2 * v99) | 0xE906B8D8) - v99 + 192717716) ^ 0xB4038C84;
  LODWORD(v99) = *(_DWORD *)(v81
                           + 4
                           * ((((LODWORD(STACK[0x314]) >> 15) & 0x40 | 0x4A66EA80)
                             + (LODWORD(STACK[0x310]) ^ 0xFFFFFFF6)
                             + 96) ^ 0x4A66EA80));
  LODWORD(STACK[0x274]) = v99 - ((2 * v99 + 75167094) & 0x158FF988) + 1829074815;
  LODWORD(STACK[0x270]) = (*(_QWORD *)(v5 - 176) ^ 0xAF)
                        - 1440540444
                        + ((2 * (*(_QWORD *)(v5 - 176) ^ 0xAF) + 1780) & 0xAD2 ^ 0xA7AFBFFF);
  v572 = v45 ^ v621 ^ 0xC1A71A50;
  LODWORD(v55) = v572 ^ 0x486327B8 ^ v76;
  LODWORD(v99) = (((2 * (BYTE2(v55) ^ 0x58)) & 0xFFFFFFF7) - (BYTE2(v55) ^ 0x58) + 944031236) ^ 0x58E49604;
  LODWORD(v15) = *(_DWORD *)(STACK[0x2C8]
                           + 4 * ((((2 * (_DWORD)v99) | 0xB99672AA) - v99 - 1556822357) ^ 0x3C6B699B));
  v564 = BYTE1(v55);
  LODWORD(v99) = ((2 * (BYTE1(v55) ^ 0xC5)) & 0x26) - (BYTE1(v55) ^ 0xC5) - 1220307732;
  v555 = (v45 ^ v621 ^ 0x50) ^ 0xB8 ^ v76;
  LODWORD(v55) = (((2 * (v555 ^ 0xBA)) & 0xEEEEEEEE) - (v555 ^ 0xBA) - 1081991032) ^ 0x47843269;
  LODWORD(v55) = *(_DWORD *)(*(_QWORD *)(v5 - 200)
                           + 4
                           * (((v55 | 0x3DAAD596) - (v55 | 0xC2552A69) - 1034605975) ^ 0xC5ACC7D4));
  v530 = v572 ^ 0x486327B8 ^ v76;
  v567 = HIBYTE(v530);
  LODWORD(v90) = *(unsigned __int8 *)(*(_QWORD *)(v5 - 192) + (v567 ^ 0x1C)) ^ ((HIBYTE(v530) ^ 0x98)
                                                                                               - ((2 * HIBYTE(v530) + 2) & 4)
                                                                                               - 61) ^ 0xE3;
  LODWORD(v90) = *(_DWORD *)(v100
                           + 4
                           * (((v99 & 0x23038657 ^ 0x8906A17)
                             + (v99 ^ 0xF76B94E8)
                             - ((v99 ^ 0xF76B94E8) & 0x280657)) ^ 0x6B93EEC3)) ^ v15 ^ v45 ^ (v90 - ((2 * v90) & 4) - 909109246) ^ (v55 - 2 * ((v55 + 69061068) & 0x64233E1 ^ v55 & 1) + 1247804844);
  LODWORD(v15) = v90 ^ v572 ^ 0x486327B8;
  v104 = STACK[0x2A0];
  LODWORD(v55) = *(_DWORD *)(STACK[0x2A0] + 4 * (BYTE3(v15) ^ 0xA0));
  HIDWORD(v91) = v55 ^ 0x38B;
  LODWORD(v91) = v55 ^ 0x25047000;
  v620 = (v91 >> 12) - ((2 * (v91 >> 12)) & 0x6A8DC82E) + 893838359;
  LODWORD(v55) = ((v620 >> 1) & 0x7352AF45 ^ 0x21400E40 | 0x98650451)
               - ((v620 >> 1) & 0x7352AF45 ^ 0x21400E40 | 0x679AFBAE)
               + 1738210222;
  v619 = (v55 & 0x4838E255 ^ 0x4830C264) + (v55 ^ 0x820F281B) - ((v55 ^ 0x820F281B) & 0x4838E275);
  v105 = *(_DWORD *)(v92
                   + 4
                   * (((WORD1(v15) & 0xC1)
                     + (BYTE2(v15) ^ 0x1C2000D1)
                     + 1644972288
                     - ((BYTE2(v15) ^ 0x1C2000D1) & 0xFFFFFFC1)) ^ 0x620C49BB));
  v106 = (((2 * (BYTE1(v15) ^ 0xF0)) & 0x114) - (BYTE1(v15) ^ 0xF0) + 2062699125) ^ 0x52BAF26E;
  LODWORD(v15) = *(unsigned __int8 *)(v95
                                    + ((((v90 ^ v572 ^ 0xB8) ^ 0x2F | 0x82D4A4D2)
                                      - ((v90 ^ v572 ^ 0xB8) ^ 0x2F | 0x7D2B5B2D)
                                      + 2099993389) ^ 0x82D4A421))
               + 2 * ((v15 ^ 0x71) + 1)
               + (((v15 ^ 0x71) + 1) ^ 0x7F)
               + 82;
  v614 = v15 - ((2 * v15) & 0x10A) + 554546565;
  v613 = (v105 - ((2 * v105 + 514512324) & 0x1CA13068) - 39451882) ^ *(_DWORD *)(v94
                                                                               + 4
                                                                               * (((v106 | 0xDB0181A7)
                                                                                 - (v106 | 0x24FE7E58)
                                                                                 + 620658264) ^ 0xF3493953));
  LODWORD(v83) = v90 ^ *(_DWORD *)(v5 - 184);
  LODWORD(v15) = *(_DWORD *)(STACK[0x2A0] + 4 * (((v83 ^ v530) >> 24) ^ 0x15));
  LODWORD(STACK[0x30C]) = v101 - ((2 * v101 + 108837278) & 0x3EF18A92) + 45556248;
  HIDWORD(v91) = v15 ^ 0x38B;
  LODWORD(v91) = v15 ^ 0x25047000;
  v612 = (v91 >> 12) - ((2 * (v91 >> 12)) & 0xF3D06F96) - 102221877;
  LODWORD(v101) = *(_DWORD *)(v92 + 4 * (((v83 ^ v530) >> 16) ^ 0x6Fu));
  v609 = v101 + 607885545 + (~(2 * v101 + 1588254148) | 0x9633A3F3);
  LODWORD(v101) = (((v83 ^ v530) ^ 0x27 | 0x92061262)
                 - ((v83 ^ v530) ^ 0x27 | 0x6DF9ED9D)
                 + 1845095837) ^ 0x9A06BAE6;
  LODWORD(v101) = *(unsigned __int8 *)(v95
                                     + ((((2 * (_DWORD)v101) & 0x4902E3BA) - v101 - 612463070) ^ 0xD37E2669))
                + (((v83 ^ v530 ^ 0x45) + 1) ^ 0x5E)
                + ((2 * ((v83 ^ v530 ^ 0x45) + 1)) & 0xBC)
                + 115;
  v603 = v101 - ((2 * v101) & 0xBA) + 1655678813;
  v595 = 1149887743
       - (*(_BYTE *)(v95 + (v83 ^ 0xCELL))
                         + (((v83 ^ 0x63) + 1) ^ 0x37)
                         + ((2 * ((v83 ^ 0x63) + 1)) & 0x6E)
                         - 102);
  LODWORD(v101) = *(_DWORD *)(v104 + 4 * (BYTE3(v83) ^ 0x84));
  HIDWORD(v91) = v101 ^ 0x38B;
  LODWORD(v91) = v101 ^ 0x25047000;
  v579 = (v91 >> 12) - ((2 * (v91 >> 12)) & 0xFF61F690) - 5178552;
  LODWORD(v101) = ((v579 >> 1) & 0x51420805) + 67899575 + ((v579 >> 1) & 0x2210A740 ^ 0x2201);
  v594 = (v101 & 0x31402EB2 ^ 0x802D2223) + (v101 & 0x4212914D);
  LODWORD(v101) = *(_DWORD *)(v92
                            + 4
                            * (((BYTE2(v83) ^ 0xA2E21263)
                              + (WORD1(v83) & 0x6C ^ 0x48084D0C)
                              - ((BYTE2(v83) ^ 0xA2E21263) & 0x2000006C)) ^ 0xCAEA5FA4));
  v593 = v101 - ((2 * v101 - 559229500) & 0xB3CD6CB4) + 1228677436;
  LODWORD(v101) = *(_DWORD *)(v104 + 4 * (BYTE3(v90) ^ 0x69));
  HIDWORD(v91) = v101 ^ 0x38B;
  LODWORD(v91) = v101 ^ 0x25047000;
  v577 = (v91 >> 12) - ((2 * (v91 >> 12)) & 0x48CD4AA8) + 610706772;
  LODWORD(v71) = *(_DWORD *)(v92
                           + 4
                           * ((((2 * (BYTE2(v90) ^ 0xC380063A)) | 0x391BC1B0) - (BYTE2(v90) ^ 0xC380063A) + 1668423464) ^ 0x5F0DE64A));
  v590 = v71 + 1378535984 - ((2 * v71 - 559229500) & 0xC5AAC95A);
  LODWORD(v71) = (((v90 >> 8) & 0xD0 ^ 0xB6AC3341) + ((v90 >> 8) & 0x2F) - 1) ^ 0x22;
  LODWORD(v90) = *(unsigned __int8 *)(v95 + (((v90 & 0x57 ^ 0x313) + (v90 & 0xA8 ^ 0x89) - 1) ^ 0x35B))
               + (((v90 ^ 0x6D) + 1) ^ 0x8C)
               + ((2 * ((v90 ^ 0x6D) + 1)) & 0x18)
               + 69;
  v583 = v90 - ((2 * v90) & 0x164) - 732171342;
  *(_DWORD *)(v5 - 192) = ((((*(_QWORD *)(v5 - 256) ^ 0x49) + 1) ^ 0x57)
                                          + ((2 * ((*(_QWORD *)(v5 - 256) ^ 0x49) + 1)) & 0xAE)
                                          + *(_BYTE *)(v95 + (*(_QWORD *)(v5 - 256) ^ 0xE4))
                                          + 122)
                        - ((2
                          * ((((*(_QWORD *)(v5 - 256) ^ 0x49) + 1) ^ 0x57)
                           + ((2 * ((*(_QWORD *)(v5 - 256) ^ 0x49) + 1)) & 0xAE)
                           + *(unsigned __int8 *)(v95 + (*(_QWORD *)(v5 - 256) ^ 0xE4))
                           + 122)) & 0x12A)
                        + 490165653;
  LODWORD(v90) = *(_DWORD *)(v104 + 4 * (STACK[0x360] ^ 0x48));
  HIDWORD(v91) = v90 ^ 0x38B;
  LODWORD(v91) = v90 ^ 0x25047000;
  LODWORD(v90) = (v91 >> 12) - ((2 * (v91 >> 12)) & 0x81F73086) + 1090230339;
  *(_DWORD *)(v5 - 200) = v90;
  LODWORD(v90) = (((2 * ((v90 >> 1) & 0x7352AF45 ^ 0x70520545)) | 0x621510C8)
                - ((v90 >> 1) & 0x7352AF45 ^ 0x70520545)
                + 1324709788) ^ 0xA5068164;
  *(_DWORD *)(v5 - 256) = ((2 * v90) & 0x43588426) - v90 + 1582546412;
  LODWORD(v90) = *(_DWORD *)(v92
                           + 4
                           * (((LODWORD(STACK[0x37C]) ^ 0xB8)
                             - ((2 * (LODWORD(STACK[0x37C]) ^ 0xB8)) & 0xFFFFFFEF)
                             + 1527) ^ 0x5A6));
  LODWORD(STACK[0x37C]) = v90 - ((2 * v90 + 514512324) & 0x39D58318) + 205532270;
  LODWORD(STACK[0x338]) = ((((STACK[0x338] ^ 0x4E) + 1) ^ 0x2F)
                                          + ((2 * ((STACK[0x338] ^ 0x4E) + 1)) & 0x5E)
                                          + *(_BYTE *)(v95 + (STACK[0x338] ^ 0xE3))
                                          - 94)
                        - ((2
                          * ((((STACK[0x338] ^ 0x4E) + 1) ^ 0x2F)
                           + ((2 * ((STACK[0x338] ^ 0x4E) + 1)) & 0x5E)
                           + *(unsigned __int8 *)(v95 + (STACK[0x338] ^ 0xE3))
                           - 94)) & 0xC2)
                        - 1694259871;
  LODWORD(v55) = *(_DWORD *)(v104 + 4 * (LODWORD(STACK[0x34C]) ^ 0x14u));
  HIDWORD(v91) = v55 ^ 0x38B;
  LODWORD(v91) = v55 ^ 0x25047000;
  LODWORD(v55) = (v91 >> 12) - ((2 * (v91 >> 12)) & 0x988C9A28) - 867807980;
  LODWORD(STACK[0x334]) = v55;
  LODWORD(v55) = ((v55 >> 1) & 0x53428741 ^ 0x88CF0700)
               + ((v55 >> 1) & 0x20102804 ^ 0x20002005)
               - 1;
  LODWORD(STACK[0x330]) = (v55 & 0xA31082A2 ^ 0x203082A2) + (v55 ^ 0xDF4B1100) - ((v55 ^ 0xDF4B1100) & 0x271082A2);
  LODWORD(v90) = *(_DWORD *)(v92 + 4 * (STACK[0x370] ^ 0xAC));
  LODWORD(v90) = v90 - ((2 * v90 - 559229500) & 0xBD2EDE2E);
  LODWORD(v55) = ((((LODWORD(STACK[0x32C]) ^ 0x4CAB3CD3u) >> ((6 - v90) & 0x10))
                 - ((2 * ((LODWORD(STACK[0x32C]) ^ 0x4CAB3CD3u) >> ((6 - v90) & 0x10))) & 0x41B4392A)
                 + 551165077) ^ 0x20DA1C95) >> ((6 - v90) & 0x10 ^ 0x10);
  LODWORD(v55) = (v55 + (~(2 * v55) | 0xF9) + 4) ^ 0x20581523;
  LODWORD(v55) = *(_DWORD *)(v92 + 4 * ((((2 * (_DWORD)v55) | 0x4705E156) - (_DWORD)v55 + 1551699797) ^ 0x83DAE584));
  LODWORD(STACK[0x32C]) = v55 - ((2 * v55 - 559229500) & 0xD8B580EA) + 1538272087;
  LODWORD(STACK[0x370]) = v90 + 1307367929;
  LODWORD(v55) = *(_DWORD *)(v104 + 4 * (LODWORD(STACK[0x36C]) ^ 0x77u));
  HIDWORD(v91) = v55 ^ 0x38B;
  LODWORD(v91) = v55 ^ 0x25047000;
  LODWORD(v55) = (v91 >> 12) - ((2 * (v91 >> 12)) & 0xCE35067A) + 1729790781;
  LODWORD(STACK[0x36C]) = v55;
  LODWORD(v55) = (((v55 >> 1) & 0x7352AF45 ^ 0x31022105)
                - ((2 * ((v55 >> 1) & 0x7352AF45 ^ 0x31022105)) & 0xE0A10200)
                - 252133078) ^ 0x24A9B81E;
  LODWORD(STACK[0x360]) = (v55 | 0x82FC22DA) - (v55 | 0x7D03DD25) + 2097405221;
  v576 = *(_DWORD *)(v94
                   + 4
                   * (((((unsigned __int16)(v83 ^ v530) >> 8) ^ 0x80178853 | 0x1BEED889)
                     - (((unsigned __int16)(v83 ^ v530) >> 8) ^ 0x80178853 | 0xE4112776)
                     - 468637834) ^ 0x9BF9506E));
  v574 = *(_DWORD *)(v94 + 4 * (BYTE1(v83) ^ 0xDEu));
  v575 = *(_DWORD *)(v94 + 4 * (((v71 & 0x1031 ^ 0x24506420) + (v71 & 0x3CE ^ 0x4B0A0249) - 1) ^ 0x6F5A7578));
  LODWORD(STACK[0x34C]) = *(_DWORD *)(v94 + 4 * (LODWORD(STACK[0x35C]) ^ 0x7Bu));
  LODWORD(STACK[0x320]) = *(_DWORD *)(v94 + 4 * (STACK[0x320] ^ 0x14));
  LODWORD(STACK[0x35C]) = *(_DWORD *)(v94 + 4 * (STACK[0x318] ^ 0x39));
  LODWORD(STACK[0x350]) = ((((STACK[0x350] ^ 0x4F) + 1) ^ 0x4F)
                                          + ((2 * ((STACK[0x350] ^ 0x4F) + 1)) & 0x9E)
                                          + *(_BYTE *)(v95 + (STACK[0x350] ^ 0xE2))
                                          - 126)
                        - ((2
                          * ((((STACK[0x350] ^ 0x4F) + 1) ^ 0x4F)
                           + ((2 * ((STACK[0x350] ^ 0x4F) + 1)) & 0x9E)
                           + *(unsigned __int8 *)(v95 + (STACK[0x350] ^ 0xE2))
                           - 126)) & 0x1AA)
                        - 1004172075;
  LODWORD(STACK[0x318]) = (*(_QWORD *)(v5 - 152) ^ 0xA)
                        - ((2 * (*(_QWORD *)(v5 - 152) ^ 0xA) + 200304372) & 0x93023F6)
                        + 1955693941;
  LODWORD(v90) = STACK[0x300];
  LODWORD(v83) = BYTE1(LODWORD(STACK[0x300])) ^ 0x280036;
  LODWORD(v83) = *(_DWORD *)(v77 + 4 * (((_DWORD)v83 - ((2 * (_DWORD)v83) & 0x100102) - 316850815) ^ 0xED353D84));
  LODWORD(STACK[0x314]) = v83;
  LODWORD(v83) = (((v83 >> 4) & 0xF8F12FE ^ 0x78B00EE)
                + ((v83 >> 4) & 0xD0C0264 ^ 0xC8540301)
                - (((v83 >> 4) & 0xF8F12FE ^ 0x78B00EE) & 0xD0C0264)) ^ 0xD7746100;
  LODWORD(STACK[0x310]) = ((2 * v83) & 0xCF708DCC) - v83 + 407353625;
  LODWORD(v99) = (((2 * LODWORD(STACK[0x2F8])) & 0x20) - (~(_DWORD)v90 & 0x11) - 872399675) ^ 0xC81B7B45;
  LODWORD(v99) = (((2 * v99) | 0xC5DD219A) - v99 + 487681843) & 0xFFFFFFFB ^ 0xE6F5D75C;
  LODWORD(v83) = (v99 + 1635941418 + ((2 * v99) & 0x4304F854 ^ 0xFFFFFFF7) + 5) ^ (v90 & 4 | 0x61827C2A) | (((2 * (v90 & 0xEA ^ 0x61206AAC)) & 0x42401500) - (v90 & 0xEA ^ 0x61206AAC) + 1145594239) ^ 0x25680BBB;
  LODWORD(v99) = (((2 * (LODWORD(STACK[0x308]) ^ 0xF89E77A2)) | 0x1C03BB14)
                - (LODWORD(STACK[0x308]) ^ 0xF89E77A2)
                + 1912480374) ^ 0x97CDB00A;
  LODWORD(v99) = *(_DWORD *)(v81
                           + 4 * ((((2 * (_DWORD)v99) | 0x9C24C6EA) - v99 + 837655691) ^ 0x2F4079EC));
  v560 = (v83 - ((2 * v83) & 0x44AA991E) + 1649757327) ^ 0x62554C94;
  LODWORD(STACK[0x308]) = v99 - ((2 * v99 - 998574730) & 0xF3C35BD8) - 601937753;
  LODWORD(v55) = STACK[0x2DC];
  v547 = HIBYTE(LODWORD(STACK[0x2DC]));
  LODWORD(STACK[0x300]) = (v547 ^ 0x63)
                        - 1931184777
                        + ((2 * ((unsigned __int16)v547 ^ 0x63) + 756) & 0x3F8 ^ 0xE62FFFFF);
  LODWORD(v90) = v55;
  LODWORD(v83) = *(_DWORD *)(v77
                           + 4
                           * (((BYTE1(v55) ^ 0x38794379 | 0xED403A2C)
                             - (BYTE1(v55) ^ 0x38794379 | 0x12BFC5D3)
                             + 314557907) ^ 0xD5397993));
  LODWORD(STACK[0x2F8]) = v83;
  LODWORD(v83) = (((v83 >> 4) & 0xF8F12FE ^ 0x707BDE3) - 1) ^ 0xCAD68541;
  LODWORD(STACK[0x2F4]) = v83 - ((2 * v83) & 0x81827054) - 1058931670;
  v557 = ((v90 ^ 0x15A53CC4) - ((2 * (v90 ^ 0x15A53CC4)) & 0x2808386E) - 1809965769) ^ 0x81BB211F;
  LODWORD(v83) = ((BYTE2(v90) ^ 0xC1) + (WORD1(v90) & 0x7A ^ 0x407D53A) - ((BYTE2(v90) ^ 0xC1) & 0x7A)) ^ 0xC27D97C;
  LODWORD(v83) = *(_DWORD *)(v81
                           + 4
                           * (((v83 | 0x803F66BF) - (v83 | 0x7FC09940) + 2143328576) ^ 0x881F6AA7));
  LODWORD(STACK[0x2DC]) = v83 - ((2 * v83 + 75167094) & 0x3620A85C) + 2102251241;
  LODWORD(v90) = STACK[0x2C0];
  v543 = HIBYTE(LODWORD(STACK[0x2C0]));
  LODWORD(STACK[0x2D0]) = (v543 ^ 2) - ((2 * (v543 ^ 2) + 468739828) & 0x19A061DC) + 986360936;
  LODWORD(v101) = *(_DWORD *)(v77
                            + 4
                            * ((((2 * (BYTE1(v90) ^ 0x6E)) | 0x1BAA6BA0) - (BYTE1(v90) ^ 0x6E) + 1378535984) & 0x3FFFFFFF ^ 0x2DD53525u));
  LODWORD(STACK[0x2C8]) = v101;
  LODWORD(STACK[0x2C4]) = ((((v101 >> 4) & 0xF8F12FE ^ 0x60C0F1F9) - 1) & 0x4601B306 ^ 0x6310004)
                        + ((((v101 >> 4) & 0xF8F12FE ^ 0x60C0F1F9) - 1) ^ 0xE982FBDA)
                        - (((((v101 >> 4) & 0xF8F12FE ^ 0x60C0F1F9) - 1) ^ 0xE982FBDA) & 0x86411206);
  LODWORD(v99) = (BYTE2(v90) ^ 0xE9 | 0xD5955CCB) - (BYTE2(v90) ^ 0xE9 | 0x2A6AA334) + 711631668;
  LODWORD(v99) = *(_DWORD *)(v81
                           + 4
                           * (((v99 & 0x51111770 ^ 0x18302350)
                             + (v99 ^ 0xC58714A2)
                             - ((v99 ^ 0xC58714A2) & 0x10100770)) ^ 0x49237FA8));
  v553 = ((v90 ^ 0x5C | 0x90A51DF7) - (v90 ^ 0x5C | 0x6F5AE208) + 1868227080) ^ 0x90A51D09;
  LODWORD(STACK[0x2C0]) = v99 - 1636344872 + (~(2 * v99 + 1148908918) | 0x878C3DC7);
  LODWORD(STACK[0x2BC]) = (*(_QWORD *)(v5 - 160) ^ 0x4D)
                        + 84496548
                        + ((2 * (*(_QWORD *)(v5 - 160) ^ 0x4D) + 1780) & 0xA52 ^ 0xF5DFDFFF);
  LODWORD(v99) = *(_DWORD *)(v77
                           + 4
                           * ((((2 * (LODWORD(STACK[0x2B8]) ^ 0xF8)) | 0x2C877C4C)
                             - (LODWORD(STACK[0x2B8]) ^ 0xF8)
                             - 373538342) ^ 0x1643BEBAu));
  LODWORD(STACK[0x2B8]) = v99;
  LODWORD(v83) = ((v99 >> 4) & 0xF8F12FE ^ 0x90412E6 | 0x3CB28527)
               - ((v99 >> 4) & 0xF8F12FE ^ 0x90412E6 | 0xC34D7AD8)
               - 1018332456;
  LODWORD(STACK[0x2B4]) = (v83 & 0x10189620 ^ 0x80083200) + (v83 ^ 0x3C16C5AF) - ((v83 ^ 0x3C16C5AF) & 0x10181620);
  v551 = ((STACK[0x2A8] & 1) + 108580863 + (STACK[0x2A8] & 0xFE ^ 0x2804007F)) ^ 0x2E7CD0D0;
  LODWORD(v15) = *(_DWORD *)(v81
                           + 4
                           * (((LODWORD(STACK[0x2AC]) ^ 0x53)
                             + (HIWORD(LODWORD(STACK[0x2A8])) & 0xF5 ^ 0x20A4)
                             - ((LODWORD(STACK[0x2AC]) ^ 0x53) & 0xF5)) ^ 0x2033u));
  LODWORD(STACK[0x2AC]) = v15 - ((2 * v15 + 75167094) & 0x3D5A8A1E) - 2132099126;
  v107 = STACK[0x298];
  v534 = HIBYTE(LODWORD(STACK[0x298]));
  LODWORD(STACK[0x2A8]) = (v534 ^ 0xC6)
                        - 1068304325
                        + ((2 * (((v534 ^ 0xC6) + 890) & 0x4C1 ^ (v534 | 0x7FFFFFFE))) ^ 0xB00003);
  LODWORD(v15) = *(_DWORD *)(v77
                           + 4
                           * ((((2 * (BYTE1(v107) ^ 0x6B)) | 0x3AE0A71A) - (BYTE1(v107) ^ 0x6B) + 1116712051) & 0x3FFFFFFF ^ 0x3D70536Cu));
  LODWORD(STACK[0x2A0]) = v15;
  LODWORD(v15) = ((v15 >> 4) & 0xF8F12FE ^ 0xB8A0028 | 0xBE0785A5)
               - ((v15 >> 4) & 0xF8F12FE ^ 0xB8A0028 | 0x41F87A5A)
               + 1106803290;
  LODWORD(STACK[0x29C]) = (v15 & 0xA62F8EC1 ^ 0x2220C840) + (v15 & 0x59D0113E ^ 0x18502127);
  v549 = ((v107 & 0x4A ^ 0xD0638149) + (v107 & 0xB5) - 1) ^ 0xD06381FD;
  LODWORD(v15) = *(_DWORD *)(v81
                           + 4
                           * (((BYTE2(v107) ^ 0x85926939 | 0x298D2992)
                             - (BYTE2(v107) ^ 0x85926939 | 0x1672D66D)
                             + 376624749) ^ 0x2C1F4038));
  LODWORD(STACK[0x298]) = v15 - ((2 * v15 + 75167094) & 0x39ADEA24);
  LODWORD(v71) = STACK[0x280];
  v523 = HIBYTE(LODWORD(STACK[0x280]));
  LODWORD(STACK[0x294]) = (v523 ^ 0xE3) + 1761374250 + ((2 * (v523 ^ 0xE3) + 1780) & 0x95E ^ 0xADFF9FFF);
  LODWORD(v15) = ((2 * (BYTE1(v71) ^ 0x2D)) | 0x2FEAF8CC) - (BYTE1(v71) ^ 0x2D) - 401964134;
  LODWORD(v15) = *(_DWORD *)(v77
                           + 4 * (((v15 & 0x12141865 ^ 0x90140021) + (v15 & 0x5E1E79A ^ 0x21E10401) - 1) ^ 0xA6007876));
  LODWORD(STACK[0x288]) = v15;
  LODWORD(v15) = ((v15 >> 4) & 0xA107E ^ 0xA05A4465 | (v15 >> 4) & 0xF850280) - 1;
  LODWORD(STACK[0x284]) = (v15 & 0x271204A4 ^ 0x3008180) + (v15 ^ 0xACDA146E) - ((v15 ^ 0xACDA146E) & 0x70200A4);
  LODWORD(v15) = ((v71 & 0x72 ^ 0x6254FEAF) - (v71 & 0x8D)) ^ 0x250FEB7;
  v545 = (((2 * v15) | 0xE5965E08) - v15 + 221565180) ^ 0x92CF2F96;
  LODWORD(v15) = *(_DWORD *)(v81 + 4 * (((BYTE2(v71) ^ 0xCE) - ((2 * (BYTE2(v71) ^ 0xCE)) & 0x86) + 2115) ^ 0x8AFu));
  LODWORD(STACK[0x280]) = v15 - ((2 * v15 - 998574730) & 0xF79F5FFC) + 1577921209;
  LODWORD(v55) = *(_DWORD *)(v81 + 4 * (BYTE2(LODWORD(STACK[0x26C])) ^ 0x87u));
  LODWORD(v55) = v55 - ((2 * v55 + 75167094) & 0x2F2BAE50) - 103591453;
  LODWORD(v90) = BYTE1(LODWORD(STACK[0x26C])) ^ 0xD8;
  LODWORD(v90) = (((2 * v90) | 0x1871C532) - v90 + 1942429031) ^ 0x8CD80208;
  LODWORD(v90) = *(_DWORD *)(v77
                           + 4
                           * (((v90 | 0x22D864C1) - (v90 | 0xDD279B3E) - 584606914) ^ 0x223884F5));
  LODWORD(v90) = *(_DWORD *)(v80 + 4 * (((STACK[0x26C] & 0x57 ^ 0x154) + (STACK[0x26C] & 0xA8 ^ 0x29) - 1) ^ 0x16Eu)) ^ v90 ^ (((v90 >> 4) & 0x90B10DC ^ 0x40582C01) + ((v90 >> 4) & 0x6840222 ^ 0x2800001) + 2147483646) & 0x4F8F3FFE;
  LODWORD(v71) = v55 ^ 0x1795D728;
  LODWORD(v55) = (v55 ^ 0x1795D728)
               + (((v55 ^ 0x28A6849D ^ v90) + 1) ^ 0xD7DDF7FD)
               + ((2 * ((v55 ^ 0x28A6849D ^ v90) + 1)) & 0xAFBBEFFA)
               + 673318915;
  LODWORD(v55) = (v90 ^ ((v90 ^ 0x3F3353B5) - ((2 * (v90 ^ 0x3F3353B5) + 2) & 0x6B83E974) - 1245580101) ^ 0x3DFC1E4F ^ (v55 - ((2 * v55) & 0x91E28D7E) + 1223771839))
               + v71;
  LODWORD(STACK[0x26C]) = *(_DWORD *)(v84 + 4 * (HIBYTE(LODWORD(STACK[0x26C])) ^ 0x74u)) ^ ((HIBYTE(LODWORD(STACK[0x26C])) ^ 0xA1)
                                                                                            + 343661756
                                                                                            + ((2
                                                                                              * (HIBYTE(LODWORD(STACK[0x26C])) ^ 0xA1)
                                                                                              + 756) & 0x282 ^ 0xB6FFBFFF)) ^ (v55 - ((2 * v55) & 0x6660E448) + 858812964);
  LODWORD(v71) = STACK[0x254];
  v520 = HIBYTE(LODWORD(STACK[0x254]));
  LODWORD(STACK[0x268]) = (v520 ^ 0x68) - ((2 * (v520 ^ 0x68) + 200304372) & 0xB40606C) - 174429264;
  LODWORD(v15) = *(_DWORD *)(v77
                           + 4
                           * (((BYTE1(v71) ^ 0x4A68D)
                             + ((v71 >> 8) & 0x45 ^ 0x3FEA0040)
                             - ((BYTE1(v71) ^ 0x4A68D) & 0x2645)) ^ 0x3FEE8062));
  LODWORD(STACK[0x264]) = v15;
  LODWORD(v15) = (((v15 >> 4) & 0xF8F12FE ^ 0xA8E021C)
                - ((2 * ((v15 >> 4) & 0xF8F12FE ^ 0xA8E021C)) & 0x19040484)
                - 1126029757) ^ 0x1FC06E45;
  LODWORD(STACK[0x25C]) = ((2 * v15) & 0xC228CFB4) - v15 + 518756388;
  LODWORD(v55) = ((2 * (BYTE2(v71) ^ 0xD7)) | 0xFA8D16DE) - (BYTE2(v71) ^ 0xD7) + 45708433;
  LODWORD(v99) = *(_DWORD *)(v81
                           + 4
                           * (((v55 & 0x900E4383 ^ 0x80084083)
                             + (v55 ^ 0x3D469B68)
                             - ((v55 ^ 0x3D469B68) & 0x900E4383)) ^ 0x500E5347));
  v540 = ((((v71 & 0x2F) + (v71 ^ 0x7F)) | 0x400) - ((v71 ^ 0x7F) & 0x2F)) ^ 0x48F;
  LODWORD(STACK[0x254]) = v99 - ((2 * v99 - 998574730) & 0x8A69D58C) + 661808513;
  v108 = STACK[0x240];
  LODWORD(v99) = HIBYTE(LODWORD(STACK[0x240]));
  LODWORD(v15) = *(_DWORD *)(v84 + 4 * (v99 ^ 0x58));
  HIDWORD(v91) = v15 ^ 4;
  LODWORD(v91) = v15 ^ 0x8E24C720;
  LODWORD(v15) = (v91 >> 5) - ((2 * (v91 >> 5)) & 0xCE7F9556) - 415249749;
  LODWORD(v99) = ((2 * ((v99 ^ 0x8D) - 1376242822)) & 0x5AB06EEE) + (((v99 ^ 0x8D) - 1376242822) ^ 0xFF5FBF77);
  HIDWORD(v91) = v99 + 9;
  LODWORD(v91) = v99 + 10502281;
  LODWORD(v99) = v15 ^ ((v91 >> 5) - ((2 * (v91 >> 5)) & 0x513A7846) - 1466090461);
  HIDWORD(v91) = v99 ^ 0x6B6F5;
  LODWORD(v91) = v99 ^ 0xDFFFFFFF;
  LODWORD(STACK[0x250]) = (v91 >> 27) - ((2 * (v91 >> 27)) & 0x5F97BD08) + 801889924;
  LODWORD(v99) = *(_DWORD *)(v77 + 4 * (BYTE1(v108) ^ 0x1Du));
  LODWORD(STACK[0x24C]) = v99;
  LODWORD(STACK[0x248]) = ((v99 >> 4) & 0xF8F12FE ^ 0x1F800222 | 0xB0DC4C9B)
                        - ((v99 >> 4) & 0xF8F12FE ^ 0x1F800222 | 0x4F23B364)
                        + 1327739748;
  LODWORD(v99) = (((2 * (v108 ^ 0x30)) & 0xFFFFFFBF) - (v108 ^ 0x30) + 696211232) ^ 0x3B7D7F71;
  v536 = (((2 * v99) | 0xD32F09B4) - v99 + 375946022) ^ 0xFB95ACB3;
  LODWORD(v99) = (((2 * (BYTE2(v108) ^ 0x24)) & 0x1B8) - (BYTE2(v108) ^ 0x24) + 1669594915) ^ 0xEEC2EF6D;
  LODWORD(v99) = *(_DWORD *)(v81 + 4 * ((((2 * (_DWORD)v99) & 0x1250FF58) - (_DWORD)v99 + 1725399123) ^ 0xEB9690C0));
  LODWORD(STACK[0x240]) = v99 - ((2 * v99 - 998574730) & 0xAB3FDC26) + 937257166;
  LODWORD(v71) = STACK[0x22C];
  v515 = HIBYTE(LODWORD(STACK[0x22C]));
  LODWORD(STACK[0x23C]) = (v515 ^ 0x78) - 1130708643 + ((2 * (v515 ^ 0x78) + 1780) & 0xBC4 ^ 0xE6BFFFFF);
  LODWORD(v15) = *(_DWORD *)(v77
                           + 4
                           * (((BYTE1(v71) ^ 0x2048176) - ((2 * (BYTE1(v71) ^ 0x2048176)) & 0x408024C) + 1320058150) ^ 0x4CAAFC28u));
  LODWORD(STACK[0x238]) = v15;
  LODWORD(v15) = (((v15 >> 4) & 0xF8F12FE ^ 0xC8402F2)
                - ((2 * ((v15 >> 4) & 0xF8F12FE ^ 0xC8402F2)) & 0x12254C)
                + 1880716199) ^ 0x701D7BD7;
  LODWORD(STACK[0x234]) = v15 - ((2 * v15) & 0x20D4B7D0) - 261465112;
  LODWORD(v90) = ((BYTE2(v71) ^ 0x99) + (WORD1(v71) & 0x53 ^ 0x2F647C42) - ((BYTE2(v71) ^ 0x99) & 0x53)) ^ 0xA0607D79;
  LODWORD(v90) = *(_DWORD *)(v81 + 4 * ((((2 * (_DWORD)v90) & 0x1C0009F8) - (_DWORD)v90 - 1321362685) ^ 0x3E399A9Fu));
  v532 = ((v71 ^ 0x70 | 0x8BC8C8CA) - (v71 ^ 0x70 | 0x74373735) + 1949775669) ^ 0x8BC8C8CC;
  LODWORD(STACK[0x22C]) = v90 - ((2 * v90 - 998574730) & 0xFACA911A) - 542981304;
  LODWORD(v71) = STACK[0x21C];
  v507 = HIBYTE(LODWORD(STACK[0x21C]));
  LODWORD(STACK[0x228]) = (v507 ^ 0xF) - 1803170232 + ((2 * (v507 ^ 0xF) + 1780) & 0x59A ^ 0xB6EFDFFF);
  LODWORD(v15) = ((2 * (BYTE1(v71) ^ 0x6E)) & 0x17C) - (BYTE1(v71) ^ 0x6E) - 846168511;
  LODWORD(v15) = *(_DWORD *)(v77
                           + 4
                           * (((v15 & 0x8C8007D1 ^ 0x12050200)
                             + (v15 ^ 0x8C82F5D1)
                             - ((v15 ^ 0x8C82F5D1) & 0x11083D1)) ^ 0xDE870C73));
  LODWORD(STACK[0x224]) = v15;
  LODWORD(STACK[0x220]) = (((v15 >> 4) & 0xF8F12FE ^ 0x4117A0FB) - 1) & 0x4F8F12FE;
  LODWORD(v15) = ((v71 ^ 0x9D) + (v71 & 0x93 ^ 0x1547B802) - ((v71 ^ 0x9D) & 0x93)) ^ 0x9575BDF3;
  v526 = (v15 - ((2 * v15) & 0x2410C8) - 367081372) ^ 0x6A2CCD23;
  LODWORD(v15) = (((2 * (WORD1(v71) & 7 ^ 4)) & 8) - (WORD1(v71) & 7 ^ 4) + 112751051) ^ 0x9F833D94;
  LODWORD(v99) = (((2 * v15) & 0x76800A) - v15 - 620483334) ^ 0x423F60A5 | ((WORD1(v71) & 0xF8 ^ 0x920402A0)
                                                                          - ((2 * (WORD1(v71) & 0xF8 ^ 0x920402A0)) & 0x40800E0)
                                                                          + 125690996) ^ 0x9579E624;
  LODWORD(v99) = *(_DWORD *)(v81
                           + 4 * (((_DWORD)v99 - 1707990958 - ((2 * (_DWORD)v99) & 0x3464417C) + 108) ^ 0x9A322052));
  LODWORD(STACK[0x21C]) = v99 - ((2 * v99 + 1148908918) & 0x6569D76C) + 351430257;
  v109 = STACK[0x208];
  v110 = HIBYTE(LODWORD(STACK[0x208]));
  LODWORD(v99) = (((2 * v110) ^ 0x144) - 2 * (((2 * v110) ^ 0x144) & 0x5A ^ (2 * v110) & 2) + 89) & 0xF4 ^ 0x30;
  LODWORD(v99) = ((v99 | 0xB5FE5815) - (v99 | 0x4A01A7EA) + 1241622506) ^ 0x6AEBD777;
  LODWORD(v99) = ((2 * v99) & 0xDF01415C) - v99 - 1870700719;
  LODWORD(v15) = v110 ^ 0xE292E373 ^ v99;
  LODWORD(v99) = 2
               * (((v99 ^ 0xD681003) & (v110 ^ 0x2DF83370))
                - ((2 * ((v99 ^ 0xD681003) & (v110 ^ 0x2DF83370))) & 0x502047F6))
               + 1882152950;
  LODWORD(v99) = v15 + (v99 ^ 0xBDD1011B) + 838967571 + ((2 * v99) & 0x9BFCBDD8 ^ 0x805CBDC8);
  LODWORD(STACK[0x218]) = v99 - ((2 * v99) & 0xE94267A2) + 1956721617;
  LODWORD(v99) = *(_DWORD *)(v77
                           + 4
                           * ((((v109 >> 8) & 0x6D ^ 0xC42A030D) + ((v109 >> 8) & 0x92 ^ 0x2404491) - 1) ^ 0xC66A4731));
  LODWORD(STACK[0x214]) = v99;
  LODWORD(v99) = (((2 * ((v99 >> 4) & 0xF8F12FE ^ 0xB0512C6)) & 0x15122454)
                - ((v99 >> 4) & 0xF8F12FE ^ 0xB0512C6)
                + 1697046741) ^ 0x61B7E151;
  LODWORD(STACK[0x210]) = (v99 | 0x71B83517) - (v99 | 0x8E47CAE8) - 1907897624;
  LODWORD(v99) = (v109 ^ 0x19) + (v109 & 0x79 ^ 0xB160D960) - ((v109 ^ 0x19) & 0x79);
  v513 = ((v99 & 0x906083E7 ^ 0x400D0306) + (v99 ^ 0x9BF0D4E9) - ((v99 ^ 0x9BF0D4E9) & 0x80003E7)) ^ 0xF2FD8E08;
  LODWORD(v99) = (BYTE2(v109) ^ 0xDD | 0xE03665F6) - (BYTE2(v109) ^ 0xDD | 0x1FC99A09) + 533305865;
  LODWORD(v99) = *(_DWORD *)(v81
                           + 4
                           * (((v99 & 0x20004766 ^ 0x10080E04)
                             + (v99 ^ 0x2816E16B)
                             - ((v99 ^ 0x2816E16B) & 0x8766)) ^ 0xF8284B25));
  LODWORD(STACK[0x208]) = v99 - ((2 * v99 - 998574730) & 0x9C36CD60) - 1336352405;
  LODWORD(v36) = v617;
  v502 = HIBYTE(v617);
  v623 = *(_DWORD *)(v77
                   + 4
                   * (((BYTE1(v617) ^ 0x2804645A)
                     + ((v617 >> 8) & 0x37 ^ 0x12790825)
                     - ((BYTE1(v617) ^ 0x2804645A) & 0x28040437)) ^ 0x1279689B));
  LODWORD(STACK[0x200]) = (HIBYTE(v617) ^ 0x80) + 1724353159 + ((2 * (HIBYTE(v617) ^ 0x80) + 1780) & 0xE18 ^ 0xAE6FDFFF);
  LODWORD(v101) = ((v36 ^ 0x5C) + (v36 & 0x1B ^ 0xA5CA8003) - ((v36 ^ 0x5C) & 0x1B)) ^ 0xD4DE72C5;
  LODWORD(v99) = *(_DWORD *)(v81
                           + 4
                           * (((BYTE2(v36) ^ 0x5855646F)
                             + (WORD1(v36) & 0xF2 ^ 0xA0028990)
                             - ((BYTE2(v36) ^ 0x5855646F) & 0x480064F2)) ^ 0xB057897A));
  v510 = (((2 * v101) & 0x20082ED6) - v101 - 505812844) ^ 0x90CD1A45;
  v618 = v99 - ((2 * v99 + 75167094) & 0x294B84BA) + 1994603800;
  v111 = HIBYTE(v600);
  v611 = (HIBYTE(v600) ^ 0x68) - 768122146 + ((2 * (HIBYTE(v600) ^ 0x68) + 1780) & 0xEC6 ^ 0xB78FBFFF);
  v610 = *(_DWORD *)(v77 + 4 * (BYTE1(v600) ^ 0x19u));
  LODWORD(v83) = (((v610 >> 4) & 0xF8F12FE ^ 0x58E021C)
                + ((v610 >> 4) & 0x8881078 ^ 0x18605860)
                - (((v610 >> 4) & 0xF8F12FE ^ 0x58E021C) & 0x8881078)) ^ 0x50F60868;
  v606 = ((2 * v83) & 0x250EFDF8) - v83 + 1832386819;
  LODWORD(v83) = ((v600 ^ 0xE8) - ((2 * (v600 ^ 0xE8)) & 0xB6) - 713522085) ^ 0x9568844F;
  v506 = (((2 * v83) | 0x8F724248) - v83 + 944168668) ^ 0x87A9212A;
  LODWORD(v83) = ((BYTE2(v600) ^ 0x41) + (HIWORD(v600) & 0x5E ^ 0x38335E1E) - ((BYTE2(v600) ^ 0x41) & 0x5E)) ^ 0x3E92DE53;
  LODWORD(v83) = *(_DWORD *)(v81 + 4 * ((((2 * (_DWORD)v83) & 0xC42077C) - (_DWORD)v83 - 2133553087) ^ 0x86751024));
  v601 = v83 - ((2 * v83 + 1148908918) & 0x5D0BEDBE) + 281244058;
  v498 = HIBYTE(v585);
  v584 = (HIBYTE(v585) ^ 0xE9)
       - 535843987
       + ((2 * (((HIBYTE(v585) ^ 0xE9) + 890) & 0xFFFFFFF3 ^ (HIBYTE(v585) ^ 0xE9 | 0x7FFFFFFE))) ^ 0x40206003);
  v582 = *(_DWORD *)(v77
                   + 4
                   * (((BYTE1(v585) ^ 0x24591299 | 0x7C20BB02) - (BYTE1(v585) ^ 0x24591299 | 0x83DF44FD) - 2082519811) ^ 0x5879A97F));
  LODWORD(v83) = (((2 * ((v582 >> 4) & 0xF8F12FE ^ 0xA06000E)) | 0x25EE6F16)
                - ((v582 >> 4) & 0xF8F12FE ^ 0xA06000E)
                + 1829292149) ^ 0x17E3B98F;
  v578 = 537016362 - v83 + ((2 * v83) & 0xBFFB7330);
  LODWORD(v83) = (((2 * (v585 ^ 0xE2)) | 0x157F84FA) - (v585 ^ 0xE2) + 1967144323) ^ 0x9ABFC75D;
  v505 = (((2 * v83) & 0x4AF42082) - v83 + 444985278) ^ 0xA85EA82;
  LODWORD(v83) = ((BYTE2(v585) ^ 0xD1 | 0x16ED25CE) - (BYTE2(v585) ^ 0xD1 | 0xE912DA31) - 384640463) ^ 0x3AE24C8;
  LODWORD(v83) = *(_DWORD *)(v81 + 4 * (((_DWORD)v83 - ((2 * (_DWORD)v83) & 0x48D9448C) + 611099206) ^ 0x312FA3FBu));
  v586 = v83 - 203643794 + (~(2 * v83 + 75167094) | 0xDCC1AC9B);
  v494 = HIBYTE(v598);
  v571 = (HIBYTE(v598) ^ 0xF) - 1327091099 + ((2 * (HIBYTE(v598) ^ 0xF) + 1780) & 0xDD4 ^ 0xFE2F9FFF);
  LODWORD(v83) = ((BYTE1(v598) ^ 0x3A5FDB62 | 0x46410416) - (BYTE1(v598) ^ 0x3A5FDB62 | 0xB9BEFBE9) - 1178666007) ^ 0xFC083BF9;
  v570 = *(_DWORD *)(v77 + 4 * ((((2 * (_DWORD)v83) | 0x2403BB9A) - (_DWORD)v83 - 302112205) ^ 0x92173947));
  LODWORD(v83) = (((v570 >> 4) & 0xF8F12FE ^ 0x8C10BE)
                + ((v570 >> 4) & 0x5850250 ^ 0x7571C740)
                - (((v570 >> 4) & 0xF8F12FE ^ 0x8C10BE) & 0x5850250)) ^ 0x19F9A741;
  v569 = ((2 * v83) & 0x60E68B86) - v83 - 812860868;
  LOBYTE(v83) = (v598 & 0x68 ^ 0x21) + (v598 & 0x97) - 1;
  LODWORD(v99) = ((HIWORD(v598) & 0x4E ^ 0x4D) - (HIWORD(v598) & 0xB1) + 959136176) ^ 0x69ABC1B3;
  LODWORD(v99) = *(_DWORD *)(v81
                           + 4 * ((((2 * (_DWORD)v99) | 0xFB981B06) - v99 - 2110524803) ^ 0x2D4C8D10));
  v497 = ((v83 & 0xA ^ 0x20014403) + (v83 & 0xF5) - 1) ^ 0x20014463;
  v566 = v99 - ((2 * v99 - 998574730) & 0xA092EFAA) - 1299778928;
  LODWORD(v15) = HIBYTE(v615);
  v563 = *(_DWORD *)(v77 + 4 * ((((v615 >> 8) & 0xEC ^ 0x130BA109) + ((v615 >> 8) & 0x13) - 1) ^ 0x130BA1E8));
  v562 = (HIBYTE(v615) ^ 0x19)
       - 1963973197
       + ((2 * (((HIBYTE(v615) ^ 0x19) + 890) & 0x239 ^ (HIBYTE(v615) ^ 0x19 | 0x7FFFFFFE))) ^ 0x19E06003);
  v493 = ((v615 & 5 ^ 0x58386A04) + (v615 & 0xFA ^ 0x81) - 1) ^ 0x58386A95;
  LODWORD(v83) = ((BYTE2(v615) ^ 0x79) - ((2 * (BYTE2(v615) ^ 0x79)) & 0xFFFFFFF7) + 1536320251) ^ 0x7E9251BB;
  LODWORD(v101) = *(_DWORD *)(v81 + 4 * ((((2 * (_DWORD)v83) & 0x48006464) - (_DWORD)v83 - 1016265267) ^ 0xE66D362C));
  v559 = v101 - ((2 * v101 + 1148908918) & 0x4D27D416) - 1999543098;
  v490 = HIBYTE(v580);
  v542 = (HIBYTE(v580) ^ 0xD5)
       + 1183848439
       + ((2 * (((HIBYTE(v580) ^ 0xD5) + 890) & 0x47D ^ (HIBYTE(v580) ^ 0xD5 | 0x7FFFFFFE))) ^ 0x11204003);
  LODWORD(v101) = ((BYTE1(v580) ^ 0x4A) - 2 * ((BYTE1(v580) ^ 0x4A) & 0x1F) + 644302367) ^ 0xB7676C17;
  v539 = *(_DWORD *)(v77 + 4 * (((_DWORD)v101 - ((2 * (_DWORD)v101) & 0x2200103C) + 293832734) ^ 0x8083A243));
  v488 = (((2 * (v580 ^ 0xC4)) | 0x5C7B7EF6) - (v580 ^ 0xC4) - 775798651) ^ 0x2E3DBF53;
  LODWORD(v101) = *(_DWORD *)(v81
                            + 4
                            * ((((2 * (BYTE2(v580) ^ 0x55)) | 0xD2D87122) - (BYTE2(v580) ^ 0x55) - 1768700049) ^ 0x696C38B8));
  v538 = v101 - ((2 * v101 + 75167094) & 0xF263538) - 372206249;
  v528 = *(_DWORD *)(v77
                   + 4
                   * ((((2 * (BYTE1(v591) ^ 0x10CF0187)) | 0x1E2D776A) - (BYTE1(v591) ^ 0x10CF0187) + 1894335563) ^ 0x9FD9BACA));
  v529 = (v587 ^ 0xBD) - 1586208859 + ((2 * (v587 ^ 0xBD) + 1780) & 0x854 ^ 0xBD0FBFFF);
  LODWORD(v101) = (((v528 >> 4) & 0xF8F12FE ^ 0xB104A)
                 - ((2 * ((v528 >> 4) & 0xF8F12FE ^ 0xB104A)) & 0x120A21C0)
                 + 1765120224) ^ 0x827D2A0;
  v525 = v101 - ((2 * v101) & 0x84BA3648) - 1034085596;
  LODWORD(v101) = (v607 ^ 0x1B ^ v76 ^ 0xFC | 0x3EBFC582)
                - (v607 ^ 0x1B ^ v76 ^ 0xFC | 0xC1403A7D)
                - 1052755331;
  v481 = ((v101 & 0xA1B4487 ^ 0x40024005) + (v101 & 0x34A48378 ^ 0x34C00009) - 1) ^ 0x4A7D8596;
  LODWORD(v101) = *(_DWORD *)(v81 + 4 * (v604 ^ 0x94u));
  v522 = v101 - ((2 * v101 - 998574730) & 0xC73CF372) + 1172042868;
  LODWORD(v99) = HIBYTE(v607);
  v519 = (HIBYTE(v607) ^ 0x26) + 1927074210 + ((2 * (HIBYTE(v607) ^ 0x26) + 1780) & 0xC4E ^ 0xF63FDFFF);
  v518 = *(_DWORD *)(v77
                   + 4
                   * (((BYTE1(v607) ^ 0x17228C32)
                     + ((v607 >> 8) & 0xB2 ^ 0x485C0180)
                     - ((BYTE1(v607) ^ 0x17228C32) & 0x72208B2)) ^ 0x585C857A));
  v477 = ((v621 ^ 0x50 ^ v38 ^ 0x410010C0)
        - ((2 * (v621 ^ 0x50 ^ v38 ^ 0x410010C0)) & 0x200214E)
        - 1185080153) ^ 0xF85D0C01;
  LODWORD(v101) = (((2 * (BYTE2(v607) ^ 0x55CACD60)) & 0x23040A76) - (BYTE2(v607) ^ 0x55CACD60) - 834012988) ^ 0xDA023418;
  LODWORD(v101) = *(_DWORD *)(v81 + 4 * (((_DWORD)v101 - ((2 * (_DWORD)v101) & 0xCA88219A) - 180064051) ^ 0xB4C57177));
  v517 = v101 - ((2 * v101 + 1148908918) & 0x468DB11C) + 92558153;
  v512 = (HIBYTE(v621) ^ 0x7B) - 1960801251 + ((2 * (HIBYTE(v621) ^ 0x7B) + 244) & 0x144 ^ 0xE5AFDFFF);
  LODWORD(v101) = (((2 * (BYTE1(v621) ^ 0x9E)) & 0x44444444) - (BYTE1(v621) ^ 0x9E) + 1257005789) ^ 0x4A6A62DF;
  v112 = (((2 * v101) | 0x1E2BA7F2) - v101 + 1894394887) ^ 0x8F93D359;
  v474 = (((2 * (v621 ^ 0x8DC00451)) | 0xC1BDA8D0) - (v621 ^ 0x8DC00451) - 1625216104) ^ 0xED1ED02C;
  LODWORD(v101) = *(_DWORD *)(v81
                            + 4
                            * ((((2 * (BYTE2(v621) ^ 0x50E8C43B)) | 0x820D039A) - (BYTE2(v621) ^ 0x50E8C43B) + 1056538163) ^ 0x91EE4593));
  v509 = v101 - ((2 * v101 - 998574730) & 0xA83915CA) + 911869344;
  LODWORD(v90) = STACK[0x204];
  LODWORD(v36) = HIBYTE(LODWORD(STACK[0x204]));
  LODWORD(v101) = (BYTE1(v90) ^ 0xA9 | 0x49F9DA23) - (BYTE1(v90) ^ 0xA9 | 0xB60625DC) - 1241111076;
  v504 = *(_DWORD *)(v77 + 4 * (((v101 & 0x40D01349 ^ 0xC2440348) + (v101 & 0x929C8B6 ^ 0x1C294823) - 1) ^ 0x9794910E));
  LODWORD(v101) = (((v504 >> 4) & 0xF8F12FE ^ 0x80E0042)
                 - ((2 * ((v504 >> 4) & 0xF8F12FE ^ 0x80E0042)) & 0x1118200C)
                 + 2028780806) ^ 0x3C6C3D06;
  v501 = ((2 * v101) & 0x2C0C9078) - v101 - 369510461;
  LODWORD(v101) = *(_DWORD *)(v81
                            + 4
                            * (((BYTE2(v90) ^ 0xA4090036 | 0x631BE7E8)
                              - (BYTE2(v90) ^ 0xA4090036 | 0x9CE41817)
                              - 1662773225) ^ 0xC712E70C));
  v500 = v101 - ((2 * v101 - 998574730) & 0xBE74CEBA) - 1049107944;
  LODWORD(v101) = (v564 ^ 0xB1) + ((v530 >> 8) & 0xF8 ^ 0xB342B248) - ((v564 ^ 0xB1) & 0xF8);
  v496 = *(_DWORD *)(v77 + 4 * (((v101 & 0x197 ^ 0x40941505) + (v101 & 0x268 ^ 0x480009) - 1) ^ 0x40DC1755));
  LODWORD(v95) = ((v555 ^ 0x20300018 | 0x63665E5F) - (v555 ^ 0x20300018 | 0x9C99A1A0) - 1667653216) ^ 0x43565E4C;
  LODWORD(v55) = *(_DWORD *)(v81
                           + 4
                           * (((HIWORD(v530) & 0x47 ^ 0x84E61606) + (HIWORD(v530) & 0xB8 ^ 0x21000121) - 1) ^ 0xA5E61781));
  v492 = v55 - ((2 * v55 + 1148908918) & 0x611D5D50) + 315369827;
  v113 = HIBYTE(v530);
  v489 = (v567 ^ 0x8B) - 269582238 + ((2 * (v567 ^ 0x8B) + 1780) & 0x9CE ^ 0xFC1FFFFF);
  LODWORD(v55) = v572 ^ 0x486327B8 ^ *(_DWORD *)(v5 - 184);
  v487 = (BYTE3(v55) ^ 0x8C) - 2005934003 + ((2 * (BYTE3(v55) ^ 0x8C) + 1780) & 0x9A4 ^ 0xEF1FBFFF);
  LODWORD(v52) = ((BYTE1(v55) ^ 0xF3) + ((v55 >> 8) & 0x85 ^ 0xE6DC5504) - ((BYTE1(v55) ^ 0xF3) & 0x85)) ^ 0xF8C10EC6;
  LODWORD(v59) = *(_DWORD *)(v77
                           + 4
                           * (((v52 | 0xE8401573) - (v52 | 0x17BFEA8C) + 398453388) ^ 0xF65D4E42));
  LODWORD(v52) = *(_DWORD *)(v81 + 4 * (BYTE2(v55) ^ 0x35u));
  v484 = v59;
  v485 = (v59 >> 4) & 0xF8F12FE ^ 0xF6F8737;
  v483 = v52 - ((2 * v52 + 75167094) & 0x3CB9EBC0);
  LOBYTE(v71) = v45 ^ v621 ^ 0x50;
  v479 = *(_DWORD *)(v77 + 4 * (((unsigned __int16)(v45 ^ v621 ^ 0x1A50) >> 8) ^ 0x8Bu));
  v480 = (HIBYTE(v572) ^ 0x39) + 1297607565 + ((2 * (HIBYTE(v572) ^ 0x39) + 52) & 0x24 ^ 0xE54F9FFF);
  LODWORD(v100) = (((2 * (BYTE2(v572) ^ 0xCD)) & 0x19C) - (BYTE2(v572) ^ 0xCD) + 200748849) ^ 0x88B32F31;
  v568 = *(_DWORD *)(v84 + 4 * (*(_QWORD *)(v5 - 168) ^ 0x99));
  v531 = *(_DWORD *)(v84 + 4 * (*(_QWORD *)(v5 - 176) ^ 0x7A));
  *(_DWORD *)(v5 - 152) = *(_DWORD *)(v84 + 4 * (*(_QWORD *)(v5 - 152) ^ 0xDF));
  *(_DWORD *)(v5 - 168) = *(_DWORD *)(v84 + 4 * (v547 ^ 0xB6u));
  *(_DWORD *)(v5 - 176) = *(_DWORD *)(v84 + 4 * (v543 ^ 0xD7u));
  LODWORD(STACK[0x204]) = *(_DWORD *)(v84 + 4 * (*(_QWORD *)(v5 - 160) ^ 0x98));
  v616 = *(_DWORD *)(v84 + 4 * (v534 ^ 0x13u));
  v608 = *(_DWORD *)(v84 + 4 * (v523 ^ 0x36u));
  v599 = *(_DWORD *)(v84 + 4 * (v520 ^ 0xBDu));
  v581 = *(_DWORD *)(v84 + 4 * (v515 ^ 0xADu));
  v565 = *(_DWORD *)(v84 + 4 * (v507 ^ 0xDAu));
  v556 = *(_DWORD *)(v84 + 4 * (v110 ^ 0xDFu));
  v548 = *(_DWORD *)(v84 + 4 * (v502 ^ 0x55));
  v544 = *(_DWORD *)(v84 + 4 * (v111 ^ 0xBD));
  v535 = *(_DWORD *)(v84 + 4 * (v498 ^ 0x3C));
  v521 = *(_DWORD *)(v84 + 4 * (v494 ^ 0xDA));
  v516 = *(_DWORD *)(v84 + 4 * (v15 ^ 0xCC));
  v508 = *(_DWORD *)(v84 + 4 * v490);
  v503 = *(_DWORD *)(v84 + 4 * (HIBYTE(v591) ^ 0x68));
  v499 = *(_DWORD *)(v84 + 4 * (v99 ^ 0xF3));
  v495 = *(_DWORD *)(v84 + 4 * (HIBYTE(v621) ^ 0xAE));
  v486 = *(_DWORD *)(v84 + 4 * (v36 ^ 0x9C));
  v482 = *(_DWORD *)(v84 + 4 * (v113 ^ 0x5E));
  v478 = *(_DWORD *)(v84 + 4 * (BYTE3(v55) ^ 0x59));
  v476 = *(_DWORD *)(v84 + 4 * (HIBYTE(v572) ^ 0xEC));
  LODWORD(v83) = *(_DWORD *)(v81 + 4 * ((((2 * (_DWORD)v100) & 0x40815C4) - (_DWORD)v100 - 1176390371) ^ 0x3AA5B54Eu));
  v473 = *(_DWORD *)(v84 + 4 * (LODWORD(STACK[0x20C]) ^ 0x94u));
  v491 = *(_DWORD *)(v77 + 4 * v112);
  v114 = *(_DWORD *)(v77 + 4 * (BYTE1(v45) ^ 0x25u));
  v475 = v83 - ((2 * v83 - 998574730) & 0x8903323A) - 1497426984;
  LODWORD(v83) = (((v114 >> 4) & 0xF8F12FE ^ 0xA8C02F4)
                + ((v114 >> 4) & 0x58D0012 ^ 0x85410802)
                - (((v114 >> 4) & 0xF8F12FE ^ 0xA8C02F4) & 0x58D0012)) ^ 0x86C14834;
  v472 = ((2 * v83) & 0xAD342D60) - v83 + 694503758;
  LODWORD(v52) = v45;
  LODWORD(v83) = ((v52 ^ 0xCF | 0x9202161E) - (v52 ^ 0xCF | 0x6DFDE9E1) + 1845357025) ^ 0x9C6235DF;
  LODWORD(v587) = *(_DWORD *)(v80 + 4 * v596);
  v524 = *(_DWORD *)(v80 + 4 * v588);
  *(_DWORD *)(v5 - 160) = *(_DWORD *)(v80 + 4 * v560);
  *(_DWORD *)(v5 - 184) = *(_DWORD *)(v80 + 4 * v557);
  LODWORD(STACK[0x20C]) = *(_DWORD *)(v80 + 4 * v553);
  v622 = *(_DWORD *)(v80 + 4 * v551);
  v605 = *(_DWORD *)(v80 + 4 * v549);
  v602 = *(_DWORD *)(v80 + 4 * v545);
  v597 = *(_DWORD *)(v80 + 4 * v540);
  v592 = *(_DWORD *)(v80 + 4 * v536);
  v589 = *(_DWORD *)(v80 + 4 * v532);
  LODWORD(v567) = *(_DWORD *)(v80 + 4 * v526);
  v561 = *(_DWORD *)(v80 + 4 * v513);
  v558 = *(_DWORD *)(v80 + 4 * v510);
  v554 = *(_DWORD *)(v80 + 4 * v506);
  v552 = *(_DWORD *)(v80 + 4 * v505);
  v550 = *(_DWORD *)(v80 + 4 * v497);
  v546 = *(_DWORD *)(v80 + 4 * v493);
  v541 = *(_DWORD *)(v80 + 4 * v488);
  v537 = *(_DWORD *)(v80 + 4 * v481);
  v533 = *(_DWORD *)(v80 + 4 * v477);
  v527 = *(_DWORD *)(v80 + 4 * v474);
  v115 = *(_DWORD *)(v80
                   + 4
                   * (((v90 ^ 0xFFFFFFBC) + 1398252310 + ((2 * v90) | 0x5950B9D6)) ^ 0xACA85C52));
  v514 = *(_DWORD *)(v80 + 4 * v95);
  v511 = *(_DWORD *)(v80 + 4 * (v55 ^ 0x2Du));
  v573 = *(_DWORD *)(v80 + 4 * (v71 ^ 0xFBu));
  LODWORD(v80) = *(_DWORD *)(v80 + 4 * (((_DWORD)v83 - ((2 * (_DWORD)v83) & 0xBE97ABE) + 1173667167) ^ 0x4B949E58u));
  LODWORD(v101) = *(_DWORD *)(v81
                            + 4
                            * (((~WORD1(v52) | 0x9891333D)
                              - (~WORD1(v52) | 0x676ECCC2)
                              + 1735314626) ^ 0x9891334D));
  v116 = v101 - ((2 * v101 + 75167094) & 0xF66692A) - 370102448;
  v117 = *(_DWORD *)(v5 - 132);
  v118 = (char *)*(&off_10112C750 + v117 - 23307) - 954779166;
  LODWORD(v101) = v118[*(unsigned __int8 *)(v5 - 117) ^ 0xC1];
  HIDWORD(v91) = v101 ^ 0x66;
  LODWORD(v91) = ~(_DWORD)v101 << 24;
  v119 = (char *)*(&off_10112C750 + v117 - 26625) - 1275894758;
  LODWORD(v101) = (v91 >> 31) + (~(2 * (v91 >> 31)) | 0xFFFFFFA3) + 47;
  LODWORD(v101) = v101 ^ (((v91 >> 31) + (~(2 * (v91 >> 31)) | 0xA3) + 47) >> 3) ^ ((v101 >> 7) & 1 | 0x38) ^ 0x13;
  LODWORD(v45) = v101 - ((2 * v101) & 0x4E) - 580936921;
  LODWORD(v101) = v118[*(unsigned __int8 *)(v5 - 113) ^ 0xB1];
  HIDWORD(v91) = v101 ^ 0x66;
  LODWORD(v91) = ~(_DWORD)v101 << 24;
  LODWORD(v95) = (v91 >> 31) - ((2 * (v91 >> 31)) & 0xFFFFFFF3);
  v120 = (char *)*(&off_10112C750 + v117 - 22429) - 1718962122;
  LODWORD(v101) = v118[*(unsigned __int8 *)(v5 - 125) ^ 0x82];
  HIDWORD(v91) = v101 ^ 0x66;
  LODWORD(v91) = ~(_DWORD)v101 << 24;
  LODWORD(v83) = ((v91 >> 31) + (~(2 * (v91 >> 31)) | 0x49) + 92);
  LODWORD(v101) = ((v91 >> 31) + (~(2 * (v91 >> 31)) | 0x49) + 92) ^ (v83 >> 7) ^ (v83 >> 3) ^ 0x50;
  LODWORD(v104) = v101 - ((2 * v101) & 0xDC) + 750015086;
  LODWORD(v101) = v118[*(unsigned __int8 *)(v5 - 121) ^ 0x29];
  HIDWORD(v91) = v101 ^ 0x66;
  LODWORD(v91) = ~(_DWORD)v101 << 24;
  v121 = *(unsigned __int8 *)(v5 - 119);
  LODWORD(v77) = v121 - ((2 * v121) & 0x1E8) - 1144996364;
  v122 = (char *)*(&off_10112C750 + (v117 ^ 0x78F4)) - 462431251;
  v123 = *(unsigned __int8 *)(v5 - 123);
  LODWORD(v118) = v123 - ((2 * v123) & 0x19C) - 1711417138;
  LODWORD(v81) = ((v91 >> 31) - ((2 * (v91 >> 31)) & 0xA8) - 44);
  v124 = *(unsigned __int8 *)(v5 - 115);
  v125 = v124 - ((2 * v124) & 0x30) + 619207960;
  LODWORD(v95) = (v95 - 7) ^ ((v95 - 7) >> 3) ^ (((v95 - 7) >> 7) & 1 | 0xE6) ^ 0x5B;
  LODWORD(v84) = *(_DWORD *)&v122[4 * (v121 ^ 0xA9)];
  LODWORD(v123) = *(_DWORD *)&v122[4 * (v123 ^ 0xB0)];
  LODWORD(v121) = *(_DWORD *)&v122[4 * (v124 ^ 0xF6)];
  LODWORD(v59) = v593 ^ v574 ^ v579 ^ v595 ^ *(_DWORD *)&v119[4 * (*(unsigned __int8 *)(v5 - 120) ^ 0xADLL)] ^ *(_DWORD *)&v120[4 * (*(unsigned __int8 *)(v5 - 118) ^ 0x1CLL)] ^ v45 ^ v84 ^ (v594 - 1) ^ v77;
  LODWORD(v122) = (v590 + 1375) ^ v575 ^ v577 ^ (v577 >> 1) & 0x7352AF45 ^ v583 ^ *(_DWORD *)&v120[4
                                                                                                 * (*(unsigned __int8 *)(v5 - 126) ^ 0xF3)] ^ v104 ^ *(_DWORD *)&v119[4 * (*(unsigned __int8 *)(v5 - 128) ^ 0x4CLL)] ^ *(_DWORD *)&v122[4 * (*(unsigned __int8 *)(v5 - 127) ^ 2)] ^ (*(unsigned __int8 *)(v5 - 127) - ((2 * *(unsigned __int8 *)(v5 - 127)) & 0x14E) - 154708569);
  LODWORD(v124) = v613 ^ v620 ^ v614 ^ v123 ^ v118 ^ (((((v91 >> 31)
                                                                                      - ((2 * (v91 >> 31)) & 0xA8)
                                                                                      - 44) ^ (v81 >> 7) ^ (v81 >> 3)) ^ 0xCF)
                                                                  - ((2
                                                                    * (((v91 >> 31)
                                                                      - ((2 * (v91 >> 31)) & 0xFFFFFFA8)
                                                                      - 44) ^ (v81 >> 7) ^ (v81 >> 3) ^ 0xCF)) & 0x5E)
                                                                  - 626481873) ^ *(_DWORD *)&v120[4
                                                                                                * (*(unsigned __int8 *)(v5 - 122) ^ 0x24)] ^ v619 ^ *(_DWORD *)&v119[4 * (*(unsigned __int8 *)(v5 - 124) ^ 0xCDLL)];
  LODWORD(v123) = v609 ^ v576 ^ v612 ^ (((v612 >> 1) & 0x5050A845 ^ 0x83D5875)
                                      + ((v612 >> 1) & 0x23020700 ^ 0x21020701)
                                      - 1) & 0x7352AFFF ^ (v95 - ((2 * v95) & 0x17A) + 1529463229) ^ *(_DWORD *)&v119[4 * (*(unsigned __int8 *)(v5 - 116) ^ 0x37)] ^ v121 ^ v603 ^ *(_DWORD *)&v120[4 * (*(unsigned __int8 *)(v5 - 114) ^ 0xE7)] ^ v125;
  v126 = (char *)*(&off_10112C750 + (v117 ^ 0x6613)) - 1800257434;
  v127 = (char *)*(&off_10112C750 + (v117 ^ 0x6AB4)) - 85417427;
  v128 = (char *)*(&off_10112C750 + (v117 ^ 0x6058)) - 1043695359;
  v129 = (char *)*(&off_10112C750 + v117 - 21987) - 1599813190;
  LODWORD(v120) = *(_DWORD *)&v128[4 * (v124 ^ 0x79)];
  LODWORD(v55) = (((4 * (_DWORD)v120) ^ 0x5F4B982C)
                - 2 * (((4 * (_DWORD)v120) ^ 0x5F4B982C) & 0x27998EFC ^ (4 * (_DWORD)v120) & 0x10)
                - 1483108626) & 0x8BF1700C ^ 0x8A110004;
  LODWORD(v80) = v473 ^ LODWORD(STACK[0x230]) ^ v114 ^ v80 ^ v116 ^ v472 ^ *(_DWORD *)&v126[4
                                                                                          * ((v122 >> 24) ^ 0xBE)] ^ v120 ^ *(_DWORD *)&v127[4 * (BYTE2(v123) ^ 0xAB)] ^ *(_DWORD *)&v129[4 * (((unsigned __int16)(v59 ^ 0x100C) >> 8) ^ 0xB0)] ^ (v55 - ((2 * v55) & 0x13404010) + 1772498443) & 0xBFF3F7FC;
  LODWORD(v120) = *(_DWORD *)&v128[4 * (v59 ^ 7)];
  LODWORD(v90) = (((4 * (_DWORD)v120) ^ 0x5F4B982C) - ((2 * ((4 * (_DWORD)v120) ^ 0x5F4B982C)) & 0x9DE3EDC0) - 823003422) & 0x8BF1700C ^ 0xE14F5178;
  LODWORD(v90) = v476 ^ v480 ^ v479 ^ v573 ^ (((v479 >> 4) & 0xC0C1230 ^ 0xAC0C8411)
                                            + ((v479 >> 4) & 0x38300CE ^ 0x303000D)
                                            - 2) ^ v475 ^ *(_DWORD *)&v127[4 * (BYTE2(v122) ^ 0xE2)] ^ *(_DWORD *)&v126[4 * (BYTE3(v124) ^ 0x2D)] ^ *(_DWORD *)&v129[4 * (BYTE1(v123) ^ 0xCC)] ^ v120 ^ (((((2 * v90) | 0x54AB214C) - v90 + 1437232986) & 0xF4E9404E ^ 0x30414009) + ((((2 * v90) | 0x54AB214C) - v90 + 1437232986) ^ 0xC5AEA756) - (((((2 * v90) | 0x54AB214C) - v90 + 1437232986) ^ 0xC5AEA756) & 0xF4E9404E));
  LODWORD(v52) = *(_DWORD *)&v128[4 * (v123 ^ 0x88)];
  LODWORD(v120) = v478 ^ v487 ^ v511 ^ v484 ^ (v483 + 10121371) ^ (v485 - 1) & 0xF8F12FE ^ *(_DWORD *)&v126[4 * (BYTE3(v59) ^ 0x32)] ^ *(_DWORD *)&v127[4 * (BYTE2(v124) ^ 0xF5)] ^ v52 ^ *(_DWORD *)&v129[4 * (BYTE1(v122) ^ 0x8B)] ^ (((4 * v52) ^ 0x5F4B982C) - ((2 * ((4 * v52) ^ 0x5F4B982C)) & 0x799BABC8) + 1020122598) & 0x8BF1700C;
  LODWORD(v122) = *(_DWORD *)&v128[4 * (v122 ^ 0xE0)];
  LODWORD(v52) = (((4 * (_DWORD)v122) ^ 0x5F4B982C) - ((2 * ((4 * (_DWORD)v122) ^ 0x5F4B982C)) & 0xF7BCD050) + 2078173227) & 0x8BF1700C ^ 0x80C00000;
  LODWORD(v52) = ((v52 | 0xB7586891) - (v52 | 0x48A7976E) + 1218942830) ^ 0x914CE0A2;
  LODWORD(v123) = BYTE3(v123);
  LODWORD(v55) = v496 ^ v489 ^ v514 ^ v482 ^ v492 ^ (((2 * ((v496 >> 4) & 0xF8F12FE ^ 0x50C00F6)) | 0x920286BC)
                                                   - ((v496 >> 4) & 0xF8F12FE ^ 0x50C00F6)
                                                   + 922664098) ^ *(_DWORD *)&v127[4
                                                                                 * (((v59 ^ 0x4090100C) >> 16) ^ 0x4A)] ^ *(_DWORD *)&v129[4 * (BYTE1(v124) ^ 0x84)] ^ *(_DWORD *)&v126[4 * (v123 ^ 0x22)] ^ v122 ^ ((v52 | 0xCB924E88) - (v52 | 0x346DB177) + 879604087);
  LODWORD(v124) = ((((v120 ^ 0xB64AD2A4) >> (v123 & 8))
                  - ((2 * ((v120 ^ 0xB64AD2A4) >> (v123 & 8))) & 0xB2D98368)
                  + 1500299700) ^ 0x596CC1B4) >> (v123 & 8 ^ 8);
  LODWORD(v124) = (v124 - ((2 * v124) & 0xC8) - 28) ^ 0x51;
  LODWORD(v124) = (((2 * v124) | 0x3242416) - v124 + 2121133557) ^ 0x899615BB;
  LODWORD(v124) = ((v36 ^ 0x49) + 1028402531 + ((2 * (v36 ^ 0x49) + 756) & 0x3D0 ^ 0xE55F9FFF)) ^ v486 ^ v115 ^ v504 ^ v500 ^ v501 ^ *(_DWORD *)&v127[4 * (BYTE2(v55) ^ 0x1F)] ^ *(_DWORD *)&v126[4 * (BYTE3(v80) ^ 0xA4)] ^ 0x18CA446B ^ *(_DWORD *)&v129[4 * ((((2 * (_DWORD)v124) & 0x134B48C8) - (_DWORD)v124 - 161850469) ^ 0xFE5E5CF4)];
  LODWORD(v122) = ((2 * (v124 & 0x6AC745EA ^ 0x68454420)) & 0xD10608C4) - (v124 & 0x6AC745EA ^ 0x68454420) + 39605132;
  LODWORD(v52) = *(_DWORD *)&v128[4 * (v90 ^ 0x1C)];
  LODWORD(v123) = ((4 * v52) ^ 0x5F4B982C) - ((2 * ((4 * v52) ^ 0x5F4B982C)) & 0xEF9979B0) + 2009906392;
  LODWORD(v124) = ((v122 & 0xFC801F58 ^ 0xFC001E11)
                 + (v122 ^ 0x3BCE1C8)
                 - ((v122 ^ 0x3BCE1C8) & 0xFC801F58)) ^ 0xFDA6A9D5 | v124 & 0x9538BA15 ^ 0x95203A10;
  LODWORD(v122) = ((v123 & 0x8BF1700C ^ 0x3C0700C)
                 + (v123 & 0x991500C ^ 0x781F8F73)
                 - ((v123 & 0x8BF1700C ^ 0x3C0700C) & 0x991500C)) & 0xFFFFF1FC ^ v52 ^ (v124
                                                                                      - ((2 * v124) & 0xC7D503E4)
                                                                                      + 1676313074);
  LODWORD(v124) = *(_DWORD *)&v128[4
                                 * (((v120 ^ 0x9E | 0x91709E43)
                                   - (v120 ^ 0x9E | 0x6E8F61BC)
                                   + 1854890428) ^ 0x91709EE4)];
  LODWORD(v123) = (((4 * v124) ^ 0x5F4B982C) - ((2 * ((4 * v124) ^ 0x5F4B982C)) & 0x68619FF8) - 1271869442) & 0x8BF1700C ^ 0x20B9602C;
  LODWORD(v123) = v495 ^ v512 ^ v527 ^ v491 ^ v509 ^ (v491 >> 4) & 0xF8F12FE ^ *(_DWORD *)&v127[4 * (BYTE2(v80) ^ 0x16)] ^ *(_DWORD *)&v126[4 * (BYTE3(v90) ^ 0xD3)] ^ *(_DWORD *)&v129[4 * (BYTE1(v55) ^ 0x5E)] ^ v124 ^ ((v123 | 0xF6C60B3) - (v123 | 0xF0939F4C) - 258760884);
  LODWORD(v52) = *(_DWORD *)&v128[4 * (v55 ^ 0x3A)];
  v130 = (((4 * v52) ^ 0x5F4B982C) - ((2 * ((4 * v52) ^ 0x5F4B982C)) & 0x10A40AF0) - 2007890565) & 0x8BF1700C ^ 0xB90700C;
  v131 = (v130 - ((2 * v130) & 0x17028008) + 260425636) ^ 0xAC45F3A4;
  v132 = ((BYTE2(v120) ^ 0xFFFFFFB5) - 1524592494 + ((2 * BYTE2(v120)) | 0xB5BEDEDE)) ^ 0xFE349C45;
  LODWORD(v52) = v499 ^ v519 ^ v518 ^ v533 ^ (((v518 >> 4) & 0x3010038 ^ 0x11208011 | (v518 >> 4) & 0xC8E12C6) - 1) ^ v517 ^ *(_DWORD *)&v126[4 * ((v120 >> 24) ^ 0xE2)] ^ *(_DWORD *)&v127[4 * (BYTE2(v90) ^ 0xDA)] ^ v52 ^ *(_DWORD *)&v129[4 * (((BYTE1(v80) ^ 0x463A41BD) + ((v80 >> 8) & 0xE2 ^ 0xB8449242) - ((BYTE1(v80) ^ 0x463A41BD) & 0x421240E2)) ^ 0xBC6C93BE)] ^ (((2 * v131) | 0x3F68A940) - v131 + 1615571808);
  LODWORD(v124) = *(_DWORD *)&v128[4 * (v80 ^ 0xD6)];
  LODWORD(v120) = (((4 * v124) ^ 0x5F4B982C)
                 - 2 * (((4 * v124) ^ 0x5F4B982C) & 0x6ADE9AB8 ^ (4 * v124) & 0x10)
                 - 354510168) & 0x8BF1700C ^ 0x89205008;
  LODWORD(v55) = v503 ^ v529 ^ v528 ^ v522 ^ v537 ^ v525 ^ *(_DWORD *)&v126[4 * (BYTE3(v55) ^ 0x71)] ^ *(_DWORD *)&v129[4 * (BYTE1(v90) ^ 0x47)] ^ *(_DWORD *)&v127[4 * ((((2 * v132) | 0x9B2D761A) - v132 + 845759731) ^ 0x697D481F)] ^ v124 ^ ((v120 | 0x5B73B237) - (v120 | 0xA48C4DC8) - 1534308920);
  LODWORD(v124) = *(_DWORD *)&v128[4 * (v123 ^ 6)];
  LODWORD(v120) = (((4 * v124) ^ 0x5F4B982C) - ((2 * ((4 * v124) ^ 0x5F4B982C)) & 0x1FB2C00) - 2130864637) & 0x8BF1700C ^ 0x83500008;
  LODWORD(v120) = (((2 * (_DWORD)v120) | 0x937DC498) - (_DWORD)v120 - 1237246540) ^ 0x4D997AD4;
  LODWORD(v124) = v508 ^ v542 ^ v541 ^ v539 ^ v538 ^ (((v539 >> 4) & 0xF8F12FE ^ 0x2C203A0A)
                                                    + ((v539 >> 4) & 0xD8510DA ^ 0x51D5C0D1)
                                                    - (((v539 >> 4) & 0xF8F12FE ^ 0x2C203A0A) & 0xD8518DA)) ^ *(_DWORD *)&v127[4 * (BYTE2(v55) ^ 0x31)] ^ *(_DWORD *)&v129[4 * (BYTE1(v52) ^ 0x9E)] ^ v124 ^ ((_DWORD)v120 - ((2 * (_DWORD)v120) & 0x49E9AB70) + 620025272) ^ *(_DWORD *)&v126[4 * ((v122 >> 24) ^ 0xB2)];
  LODWORD(v90) = *(_DWORD *)&v128[4 * (v52 ^ 0x48)];
  v133 = ((4 * v90) ^ 0x5F4B982C) - ((2 * ((4 * v90) ^ 0x5F4B982C)) & 0xC6F29CA0) + 1668894291;
  v134 = ((v133 & 0x8BF1700C ^ 0x3F02004)
        + (v133 & 0x9817000 ^ 0x3C055DA1)
        - ((v133 & 0x8BF1700C ^ 0x3F02004) & 0x9817000)) ^ 0x7D8155A1;
  LODWORD(v120) = *(_DWORD *)&v126[4 * (BYTE3(v123) ^ 0x31)] ^ *(_DWORD *)(v5 - 144) ^ *(_DWORD *)&v129[4 * (BYTE1(v55) ^ 0xFE)] ^ v90 ^ ((v134 | 0x64725BFA) - (v134 | 0x9B8DA405) - 1685216251) ^ *(_DWORD *)&v127[4 * (BYTE2(v122) ^ 0xE4)];
  LODWORD(v90) = *(_DWORD *)&v126[4 * (BYTE3(v52) ^ 0x58)];
  v135 = v90 ^ LODWORD(STACK[0x258]);
  LODWORD(v90) = (((v90 ^ 0x92127AC) + 1) ^ 0x9FFFBAFA)
               + LODWORD(STACK[0x260])
               + ((2 * ((v90 ^ 0x92127AC) + 1)) & 0x3FFF75F4);
  LODWORD(v90) = LODWORD(STACK[0x260])
               + 1218642049
               + (v135 ^ ((v135 ^ 0x8832FA23) - ((2 * (v135 ^ 0x8832FA23) + 2) & 0x57216D48) - 1416579419) ^ 0xF6DBE31A ^ (v90 - ((2 * v90 + 1363577614) & 0x550CA0C4) - 752249367));
  LODWORD(v90) = ((2 * v90) & 0xA7F5FFA2) + (v90 ^ 0xD3FAFFD1);
  HIDWORD(v91) = v90 - 1;
  LODWORD(v91) = v90 + 738525231;
  LODWORD(v90) = (v91 >> 4) - ((2 * (v91 >> 4)) & 0x658EC66) + 53245491;
  HIDWORD(v91) = LODWORD(STACK[0x244]) ^ 3;
  LODWORD(v91) = LODWORD(STACK[0x244]) ^ 0xB72DAFE0;
  LODWORD(v90) = v90 ^ ((v91 >> 4) - ((2 * (v91 >> 4)) & 0xC3B5739A) + 1641724365);
  HIDWORD(v91) = v90 ^ 0xA9224CB;
  LODWORD(v91) = v90 ^ 0x10000000;
  v136 = *(_DWORD *)&v128[4 * (v55 ^ 0x15)];
  v137 = ((4 * v136) ^ 0x5F4B982C) - ((2 * ((4 * v136) ^ 0x5F4B982C)) & 0x36661FC8) + 456331236;
  LODWORD(v90) = *(_DWORD *)&v127[4 * (BYTE2(v123) ^ 0x3A)] ^ v136 ^ (((v137 & 0xB313000 ^ 0x1E1F28A3) - 1) & 0x1B313800 | v137 & 0x80C0400C) ^ *(_DWORD *)&v129[4 * (BYTE1(v122) ^ 0xCE)] ^ ((v91 >> 28) - ((2 * (v91 >> 28)) & 0x72F6D9DE) - 1183093521);
  LODWORD(v122) = *(_DWORD *)&v128[4 * (v122 ^ 0x48)];
  v138 = (((4 * (_DWORD)v122) ^ 0x5F4B982C) - ((2 * ((4 * (_DWORD)v122) ^ 0x5F4B982C)) & 0x5BEE0C50) - 1376319960) & 0x8BF1700C ^ 0x2F12D8D5;
  v139 = (((2 * v138) | 0xBC648BCC) - v138 + 567130650) ^ 0x38F69533;
  LODWORD(v123) = *(_DWORD *)&v126[4 * (BYTE3(v55) ^ 0x43)] ^ *(_DWORD *)(v5 - 140) ^ *(_DWORD *)&v127[4 * (BYTE2(v52) ^ 0xCA)] ^ *(_DWORD *)&v129[4 * (BYTE1(v123) ^ 0x75)] ^ v122 ^ (((2 * v139) & 0x73599A1C) - v139 + 1179857649);
  LODWORD(v122) = ((2 * (BYTE1(v90) ^ 0xD3)) | 0xC878A8DC) - (BYTE1(v90) ^ 0xD3) + 465808274;
  LODWORD(v55) = (((2 * (v120 ^ 0x8B)) | 0x2E233CB2) - (v120 ^ 0x8B) - 387030617) ^ 0x1B15833F;
  LODWORD(v55) = *(_DWORD *)&v128[4
                                * (((v55 | 0x77D593D3) - (v55 | 0x882A6C2C) - 2010485716) ^ 0x7BD18ED5)];
  LODWORD(v52) = (((2 * (v90 ^ 0x25)) | 0xED62DB60) - (v90 ^ 0x25) - 1991339440) ^ 0xFCB9FD95;
  LODWORD(v52) = *(_DWORD *)&v128[4
                                * (((v52 | 0x46F0B07D) - (v52 | 0xB90F4F82) - 1190178942) ^ 0xCCF820F8)];
  LODWORD(v55) = v516 ^ v562 ^ v546 ^ v563 ^ (((((v563 >> 4) & 0xF8F12FE ^ 0xD8C6AE37) - 1) ^ 0x33BA7F4B) - 1) ^ v559 ^ *(_DWORD *)&v126[4 * (BYTE3(v124) ^ 0xB5)] ^ *(_DWORD *)&v127[4 * (BYTE2(v123) ^ 0x1D)] ^ *(_DWORD *)&v129[4 * (((v122 & 0xA00846DB ^ 0x20220D1) + (v122 & 0x44341924 ^ 0x44140021) - 1) ^ 0xA22A74B6)] ^ v55 ^ (((4 * v55) ^ 0x5F4B982C) - 2 * (((4 * v55) ^ 0x5F4B982C) & 0x2AAA903C ^ (4 * v55) & 0x10) - 1431662546) & 0x8BF1700C;
  LODWORD(v122) = (((4 * v52) ^ 0x5F4B982C) - ((2 * ((4 * v52) ^ 0x5F4B982C)) & 0x14849B38) + 172117404) & 0x8BF1700C ^ 0x6E450684;
  LODWORD(v122) = *(_DWORD *)&v126[4 * ((v120 >> 24) ^ 0xC9)] ^ LODWORD(STACK[0x2B0]) ^ *(_DWORD *)&v127[4 * (BYTE2(v124) ^ 0xBB)] ^ *(_DWORD *)&v129[4 * (BYTE1(v123) ^ 0xBE)] ^ v52 ^ ((_DWORD)v122 - ((2 * (_DWORD)v122) & 0x5788EC18) - 1413023924);
  v140 = BYTE3(v123) ^ 0x32;
  LODWORD(v123) = *(_DWORD *)&v128[4 * (v123 ^ 0x6C)];
  v141 = (((((4 * v123) ^ 0x5F4B982C) - ((2 * ((4 * v123) ^ 0x5F4B982C)) & 0xBCABCA60) + 1582687538) & 0x8BF1700C ^ 0xE1B2B877)
        - 1) ^ 0xEB61D876;
  LODWORD(v52) = v521 ^ v571 ^ v550 ^ v570 ^ v566 ^ v569 ^ *(_DWORD *)&v127[4
                                                                          * ((((2 * (BYTE2(v120) ^ 0xE0)) | 0x2E7EFE12)
                                                                            - (BYTE2(v120) ^ 0xE0)
                                                                            + 1220575479) & 0x3FFFFFFF ^ 0x373F7F8F)] ^ *(_DWORD *)&v129[4 * (BYTE1(v124) ^ 0xBB)] ^ *(_DWORD *)&v126[4 * (BYTE3(v90) ^ 0xD7)] ^ v123 ^ (((2 * v141) & 0x5240000) - v141 + 493220511);
  LODWORD(v123) = ((BYTE1(v120) ^ 0xB) - ((2 * (BYTE1(v120) ^ 0xB)) & 0x94) + 894863690) ^ 0xCC321365;
  LODWORD(v124) = *(_DWORD *)&v128[4 * (v124 ^ 0xE)];
  LODWORD(v120) = (((4 * v124) ^ 0x5F4B982C) - ((2 * ((4 * v124) ^ 0x5F4B982C)) & 0x74FD7028) + 981383189) & 0x8BF1700C ^ 0xECC4EF3E;
  LODWORD(v124) = v524 ^ LODWORD(STACK[0x27C]) ^ v531 ^ LODWORD(STACK[0x274]) ^ LODWORD(STACK[0x270]) ^ LODWORD(STACK[0x278]) ^ *(_DWORD *)&v127[4 * (BYTE2(v90) ^ 0x87)] ^ *(_DWORD *)&v129[4 * (((v123 | 0xEAD9146E) - (v123 | 0x1526EB91) + 354872209) ^ 0x13BD8E9D)] ^ v124 ^ ((_DWORD)v120 - ((2 * (_DWORD)v120) & 0x7616C00) - 2085439808) ^ *(_DWORD *)&v126[4 * v140];
  LODWORD(v123) = (((2 * (v122 ^ 0x5B)) & 0xA8) - (v122 ^ 0x5B) - 1188692309) ^ 0x1931CFEB;
  LODWORD(v123) = *(_DWORD *)&v128[4
                                 * (((v123 | 0x7A62813) - (v123 | 0xF859D7EC) - 128329748) ^ 0xA7B2196D)];
  LODWORD(v120) = (((4 * v123) ^ 0x5F4B982C) - ((2 * ((4 * v123) ^ 0x5F4B982C)) & 0x75127A48) + 982072615) & 0x8BF1700C ^ 0xE685309C;
  LODWORD(v123) = v535 ^ v584 ^ v582 ^ v552 ^ v586 ^ (v578 + 3644) ^ *(_DWORD *)&v127[4 * (BYTE2(v124) ^ 0xA7)] ^ *(_DWORD *)&v126[4 * (BYTE3(v55) ^ 0x9A)] ^ *(_DWORD *)&v129[4 * (BYTE1(v52) ^ 0x22)] ^ v123 ^ (((2 * (_DWORD)v120) & 0xC200A128) - (_DWORD)v120 - 1627411864);
  LODWORD(v90) = *(_DWORD *)&v128[4 * (v52 ^ 0xFE)];
  v142 = (((4 * v90) ^ 0x5F4B982C) - ((2 * ((4 * v90) ^ 0x5F4B982C)) & 0x9637A250) + 1260114217) & 0x8BF1700C ^ 0x2714000;
  v143 = (v142 - ((2 * v142) & 0x11C08018) - 52115508) ^ 0x9D8C45CE;
  LODWORD(v120) = v544 ^ v611 ^ v610 ^ v554 ^ v606 ^ v601 ^ *(_DWORD *)&v127[4 * (BYTE2(v55) ^ 0xD5)] ^ *(_DWORD *)&v129[4 * (BYTE1(v124) ^ 0xBB)] ^ *(_DWORD *)&v126[4 * ((v122 >> 24) ^ 0x4C)] ^ v90 ^ (((2 * v143) | 0xBF471E9A) - v143 - 1604554573);
  LODWORD(v90) = *(_DWORD *)&v129[4 * ((((2 * (BYTE1(v55) ^ 0xE5)) & 0x1B0) - (BYTE1(v55) ^ 0xE5) + 4391) ^ 0x116B)] ^ 0xCB274A67;
  v144 = LODWORD(STACK[0x200]) ^ v548 ^ v623 ^ v558 ^ v618 ^ (((v623 >> 4) & 0xF8F12FE ^ 0x90410A0 | 0xBAC6D993)
                                                            - ((v623 >> 4) & 0xF8F12FE ^ 0x90410A0 | 0x4539266C)
                                                            + 1161373292) ^ *(_DWORD *)&v127[4 * (BYTE2(v122) ^ 0x4A)] ^ *(_DWORD *)&v126[4 * (BYTE3(v52) ^ 0xAC)] ^ 0xFC85306A;
  LODWORD(v59) = (v144 + v90) ^ 0xEF3FFEF7;
  v145 = (2 * (v144 + v90)) & 0xDE7FFDEE;
  LODWORD(v90) = 2 * ((v144 & v90) - ((2 * (v144 & v90)) & 0x36B3F84E)) - 1229719474;
  LODWORD(v90) = v59 + v145 + (v90 ^ 0xBEA77149) + ((2 * v90) & 0xEFD6EDF0 ^ 0x92B91F6F) + 1;
  v146 = *(_DWORD *)&v128[4 * (v124 ^ 0xE1)];
  LODWORD(v59) = (((4 * v146) ^ 0x5F4B982C) - ((2 * ((4 * v146) ^ 0x5F4B982C)) & 0x70F322B0) - 1199992488) & 0x8BF1700C ^ 0x8A91700C;
  LODWORD(v59) = (((2 * v59) & 0xF0001FFF) - v59 - 202114701) ^ 0xF3511563;
  v147 = ((v59 | 0xDABB48BC) - (v59 | 0x2544B743) + 625260355) ^ v146 ^ (v90
                                                                       - ((2 * v90 + 290910212) & 0x17FBBF82)
                                                                       - 1800841277);
  LODWORD(v55) = *(_DWORD *)&v128[4
                                * (((v55 ^ 0x8885A7B6 | 0x7B49C6E)
                                  - (v55 ^ 0x8885A7B6 | 0xF84B6391)
                                  - 129277039) ^ 0x8F313B09)];
  v148 = (((4 * v55) ^ 0x5F4B982C) - ((2 * ((4 * v55) ^ 0x5F4B982C)) & 0x96116340) + 1258860962) & 0x8BF1700C ^ 0x21500C;
  LODWORD(v90) = *(_DWORD *)&v126[4 * (BYTE3(v124) ^ 0x62)] ^ LODWORD(STACK[0x2F0]) ^ *(_DWORD *)&v129[4 * (BYTE1(v122) ^ 0xBF)] ^ *(_DWORD *)&v127[4 * (BYTE2(v52) ^ 0x87)] ^ v55 ^ (((((2 * v148) & 0x2E22018) - v148 + 1854169713) & 0x19B1D3B0 ^ 0x59115483) + ((((2 * v148) & 0x2E22018) - v148 + 1854169713) & 0xA646204C ^ 0x2600000D) - 2);
  LODWORD(v122) = ((BYTE1(v147) ^ 0xC6 | 0x63AC104E) - (BYTE1(v147) ^ 0xC6 | 0x9C53EFB1) - 1672220751) ^ 0x43830E47;
  LODWORD(v55) = *(_DWORD *)&v128[4 * (v120 ^ 0xDA)];
  LODWORD(v52) = (((4 * v55) ^ 0x5F4B982C) - ((2 * ((4 * v55) ^ 0x5F4B982C)) & 0xD92406E8) + 1821508468) & 0x8BF1700C ^ 0x90900C0A;
  LODWORD(v122) = *(_DWORD *)&v126[4 * (BYTE3(v123) ^ 0x44)] ^ LODWORD(STACK[0x304]) ^ *(_DWORD *)&v127[4 * (BYTE2(v90) ^ 0x3B)] ^ v55 ^ *(_DWORD *)&v129[4 * ((((2 * (_DWORD)v122) & 0x7101BB14) - (_DWORD)v122 - 2021711243) ^ 0xA7503CC1)] ^ (((2 * v52) | 0x569CCF08) - v52 - 726558596);
  LODWORD(v55) = ((BYTE1(v90) ^ 0x53 | 0x388D9AA6) - (BYTE1(v90) ^ 0x53 | 0xC7726559) - 948804263) ^ 0x31AD4AA6;
  LODWORD(v52) = *(_DWORD *)&v128[4 * (v147 ^ 0x82)];
  v149 = ((4 * v52) ^ 0x5F4B982C) - ((2 * ((4 * v52) ^ 0x5F4B982C)) & 0x15F578A0) - 1963279279;
  v150 = (v149 & 0x8A411000 ^ 0x8A099E03 | v149 & 0x1B0600C) - 1;
  LODWORD(v55) = v556 ^ LODWORD(STACK[0x214]) ^ v561 ^ LODWORD(STACK[0x208]) ^ LODWORD(STACK[0x210]) ^ LODWORD(STACK[0x218]) ^ *(_DWORD *)&v126[4 * ((v120 >> 24) ^ 0x77)] ^ *(_DWORD *)&v129[4 * ((((2 * (_DWORD)v55) & 0x596A164) - (_DWORD)v55 - 46878899) ^ 0xF4147F92)] ^ v52 ^ *(_DWORD *)&v127[4 * (BYTE2(v123) ^ 0xB3)] ^ ((v150 & 0x8A105008 ^ 0x8E069151) + (v150 & 0x1E12004 ^ 0x40E12081) - 2);
  LODWORD(v52) = *(_DWORD *)&v128[4 * (v90 ^ 0xA2)];
  LODWORD(v36) = v565 ^ LODWORD(STACK[0x228]) ^ v567 ^ LODWORD(STACK[0x224]) ^ LODWORD(STACK[0x220]) ^ LODWORD(STACK[0x21C]) ^ *(_DWORD *)&v127[4 * (BYTE2(v120) ^ 3)] ^ *(_DWORD *)&v126[4 * (HIBYTE(v147) ^ 0x8D)] ^ v52 ^ *(_DWORD *)&v129[4 * (BYTE1(v123) ^ 0x5B)] ^ (((4 * v52) ^ 0x5F4B982C) - ((2 * ((4 * v52) ^ 0x5F4B982C)) & 0xE9C99E30) - 186331367) & 0x8BF1700C;
  LODWORD(v123) = *(_DWORD *)&v128[4 * (v123 ^ 0x40)];
  LODWORD(v52) = ((4 * v123) ^ 0x5F4B982C) - ((2 * ((4 * v123) ^ 0x5F4B982C)) & 0xE2260CC8) - 250411420;
  LODWORD(v52) = ((v52 & 0xBC16000 ^ 0x4AC44F71 | v52 & 0x8030100C) - 1) ^ 0xDBC14FF0;
  v151 = v587 ^ LODWORD(STACK[0x2D4]) ^ v568 ^ LODWORD(STACK[0x2EC]) ^ LODWORD(STACK[0x2D8]) ^ LODWORD(STACK[0x2E0]) ^ *(_DWORD *)&v126[4 * (BYTE3(v90) ^ 0x43)] ^ *(_DWORD *)&v127[4 * (BYTE2(v147) ^ 0x19)] ^ *(_DWORD *)&v129[4 * (BYTE1(v120) ^ 0xFE)] ^ v123 ^ ((v52 | 0x7B5B0C14) - (v52 | 0x84A4F3EB) - 2069564437);
  LODWORD(v123) = ((BYTE2(v151) ^ 0xE7 | 0xE3EE2FDA) - (BYTE2(v151) ^ 0xE7 | 0x1C11D025) + 470929445) ^ 0xC2E22B8D;
  LODWORD(v90) = *(_DWORD *)&v128[4 * (v55 ^ 0x92)];
  LODWORD(v52) = ((4 * v90) ^ 0x5F4B982C) - ((2 * ((4 * v90) ^ 0x5F4B982C)) & 0xF5E72470) + 2062783032;
  LODWORD(v123) = v581 ^ LODWORD(STACK[0x23C]) ^ v589 ^ LODWORD(STACK[0x238]) ^ LODWORD(STACK[0x22C]) ^ LODWORD(STACK[0x234]) ^ *(_DWORD *)&v126[4 * ((v122 >> 24) ^ 0x1A)] ^ *(_DWORD *)&v129[4 * ((((v36 >> 8) & 0x17 ^ 0x52496005) + ((v36 >> 8) & 0xE8 ^ 0x1049) - 1) ^ 0x524970BA)] ^ v90 ^ *(_DWORD *)&v127[4 * ((((2 * (_DWORD)v123) & 0x3EBF84D6) - (_DWORD)v123 + 547372436) ^ 0x1AC39FC)] ^ ((v52 & 0x83C1700C ^ 0x4409A9E5) + (v52 & 0x8300000 ^ 0x8000001) - 2) & 0x8BF971EC;
  LODWORD(v90) = *(_DWORD *)&v128[4
                                * (((v36 ^ 0x50A1EA9A)
                                  + (v36 & 0x22 ^ 0x27580420)
                                  - ((v36 ^ 0x50A1EA9A) & 0xA00022)) ^ 0x7759EE56)];
  LODWORD(v52) = (((4 * v90) ^ 0x5F4B982C) - ((2 * ((4 * v90) ^ 0x5F4B982C)) & 0xF94B7F50) + 2091237291) & 0x8BF1700C ^ 0xA714004;
  LODWORD(v52) = (((2 * v52) & 0x602010) - v52 + 734259350) ^ 0x2FC38136;
  LODWORD(v120) = v592 ^ LODWORD(STACK[0x24C]) ^ LODWORD(STACK[0x248]) ^ LODWORD(STACK[0x240]) ^ LODWORD(STACK[0x250]) ^ *(_DWORD *)&v126[4 * (BYTE3(v55) ^ 0x1A)] ^ *(_DWORD *)&v127[4 * ((((2 * (BYTE2(v122) ^ 0xE7)) | 0x362B3E66) - (BYTE2(v122) ^ 0xE7) + 1693081805) ^ 0x9B159FCF)] ^ *(_DWORD *)&v129[4 * (BYTE1(v151) ^ 0xE0)] ^ v90 ^ (v52 - ((2 * v52) & 0x42C52B8) - 2112476834);
  v152 = *(_DWORD *)&v128[4 * (v151 ^ 0x99)];
  LODWORD(v59) = (((((4 * v152) ^ 0x5F4B982C) - ((2 * ((4 * v152) ^ 0x5F4B982C)) & 0x8806E660) + 1141076785) & 0x8BF1700C ^ 0x6631B2B3)
                - 1) ^ 0x6F34C172;
  LODWORD(v59) = v599 ^ LODWORD(STACK[0x268]) ^ LODWORD(STACK[0x264]) ^ v597 ^ LODWORD(STACK[0x254]) ^ LODWORD(STACK[0x25C]) ^ *(_DWORD *)&v126[4 * (BYTE3(v36) ^ 0x3E)] ^ *(_DWORD *)&v129[4 * ((((2 * (BYTE1(v122) ^ 0xB6)) & 0x164) - (BYTE1(v122) ^ 0xB6) + 1364924493) ^ 0x515B1890)] ^ v152 ^ *(_DWORD *)&v127[4 * (((WORD1(v55) & 0x11) + (WORD1(v55) & 0xEE ^ 0xAC8AA25) - 1) ^ 0xAC8AA03)] ^ (v59 - ((2 * v59) & 0x7620000) + 1404633088);
  LODWORD(v122) = ((v122 ^ 0xFD | 0x3149D3E4) - (v122 ^ 0xFD | 0xCEB62C1B) - 826921957) ^ 0x358D5FF4;
  LODWORD(v122) = *(_DWORD *)&v128[4
                                 * (((v122 | 0xCE2BADEB) - (v122 | 0x31D45214) + 835998228) ^ 0xCAEF2185)];
  LODWORD(v52) = (((4 * (_DWORD)v122) ^ 0x5F4B982C) - ((2 * ((4 * (_DWORD)v122) ^ 0x5F4B982C)) & 0x90DD1BF8) - 932278786) & 0x8BF1700C ^ 0x80C13000;
  LODWORD(v52) = ((v52 | 0x3F8DB637) - (v52 | 0xC07249C8) - 1066251832) ^ 0x772A8637;
  LODWORD(v122) = *(_DWORD *)&v126[4 * (HIBYTE(v151) ^ 0x46)] ^ LODWORD(STACK[0x340]) ^ *(_DWORD *)&v127[4 * ((((2 * (BYTE2(v36) ^ 0x9E)) | 0x8D4861CC) - (BYTE2(v36) ^ 0x9E) - 1185165542) ^ 0x46A4309B)] ^ *(_DWORD *)&v129[4 * (BYTE1(v55) ^ 0x7A)] ^ v122 ^ (v52 - ((2 * v52) & 0xA4DEB6E2) + 1383029617);
  LODWORD(v52) = *(_DWORD *)&v128[4 * (v120 ^ 0x8D)];
  LODWORD(v55) = LODWORD(STACK[0x26C]) ^ *(_DWORD *)&v126[4 * (BYTE3(v123) ^ 0xA1)] ^ *(_DWORD *)&v129[4 * (BYTE1(v59) ^ 0xD2)] ^ v52 ^ (((4 * v52) ^ 0x5F4B982C) - ((2 * ((4 * v52) ^ 0x5F4B982C)) & 0x622DEDD0) - 1323895061) & 0x8BF1700C;
  LODWORD(v52) = *(_DWORD *)&v128[4 * (v59 ^ 0xB1)];
  LODWORD(v36) = v55 ^ *(_DWORD *)&v127[4 * (BYTE2(v122) ^ 0xC)];
  LODWORD(v55) = (((4 * v52) ^ 0x5F4B982C) - ((2 * ((4 * v52) ^ 0x5F4B982C)) & 0x4145FC68) + 547552821) & 0x8BF1700C ^ 0x83512008;
  LODWORD(v55) = (v55 - ((2 * v55) & 0x17E0A000) + 469651667) ^ 0x5A3A4AC9;
  LODWORD(v55) = v608 ^ LODWORD(STACK[0x294]) ^ v602 ^ LODWORD(STACK[0x288]) ^ LODWORD(STACK[0x280]) ^ LODWORD(STACK[0x284]) ^ *(_DWORD *)&v126[4 * ((v120 >> 24) ^ 0x6F)] ^ *(_DWORD *)&v127[4 * (BYTE2(v123) ^ 0x52)] ^ v52 ^ *(_DWORD *)&v129[4 * (BYTE1(v122) ^ 0xE8)] ^ (v55 - ((2 * v55) & 0xEC8F0014) + 1984398730);
  LODWORD(v52) = v616 ^ LODWORD(STACK[0x2A8]) ^ v605 ^ LODWORD(STACK[0x2A0]) ^ (LODWORD(STACK[0x298]) - 15437875) ^ (LODWORD(STACK[0x29C]) - 1) ^ LODWORD(STACK[0x30C]) ^ *(_DWORD *)&v126[4 * (BYTE3(v59) ^ 0xB0)];
  LODWORD(v52) = (v52 & 0xFFFFBFFF ^ 0x530CAEA9 | 0xE7E7B48A) - (v52 & 0xFFFFBFFF ^ 0x530CAEA9 | 0x18184B75) + 404245365;
  v153 = (((2 * (BYTE1(v123) ^ 0xD5)) & 0x168) - (BYTE1(v123) ^ 0xD5) + 409759051) ^ 0x189C6F4B;
  v154 = *(_DWORD *)&v128[4 * (v122 ^ 0xFA)];
  LODWORD(v45) = (((4 * v154) ^ 0x5F4B982C) - ((2 * ((4 * v154) ^ 0x5F4B982C)) & 0xD371B388) + 1773722052) & 0x8BF1700C ^ 0x970C4C0;
  LODWORD(v90) = *(_DWORD *)&v127[4 * (BYTE2(v120) ^ 0x9F)] ^ LODWORD(STACK[0x30C]) ^ v154 ^ *(_DWORD *)&v129[4 * ((((2 * v153) | 0x21BF25EC) - v153 - 283087606) ^ 0x102F90DC)] ^ (-(((unsigned __int16)(v616 ^ LOWORD(STACK[0x2A8]) ^ v605 ^ LOWORD(STACK[0x2A0]) ^ (LOWORD(STACK[0x298]) + 28621) ^ (LOWORD(STACK[0x29C]) - 1) ^ LOWORD(STACK[0x30C])) ^ *(_WORD *)&v126[4 * (BYTE3(v59) ^ 0xB0)]) & 0x4000) - 168068924) ^ ((v52 & 0xECC7D07B ^ 0x2800C073) + (v52 ^ 0xC7E71A88) - ((v52 ^ 0xC7E71A88) & 0xECC7D07B)) ^ (((2 * v45) & 0x1A26810) - v45 + 1797571319);
  LODWORD(v123) = *(_DWORD *)&v128[4 * (v123 ^ 0xE7)];
  LODWORD(v52) = (((4 * v123) ^ 0x5F4B982C) - ((2 * ((4 * v123) ^ 0x5F4B982C)) & 0x8828408) + 71385605) & 0x8BF1700C ^ 0x43604904;
  LODWORD(v122) = LODWORD(STACK[0x204]) ^ LODWORD(STACK[0x2BC]) ^ v622 ^ LODWORD(STACK[0x2B8]) ^ LODWORD(STACK[0x2AC]) ^ LODWORD(STACK[0x2B4]) ^ *(_DWORD *)&v127[4 * (BYTE2(v59) ^ 0xA5)] ^ *(_DWORD *)&v129[4 * (BYTE1(v120) ^ 0x36)] ^ v123 ^ *(_DWORD *)&v126[4 * ((v122 >> 24) ^ 0x34)] ^ (((2 * v52) & 0x11E09010) - v52 - 754763996);
  LODWORD(v123) = ((v55 & 0xC1) + (v55 ^ 0xFFFFFFC3) + (v55 | 0x2901973E) + 1) ^ 0x2137D73E;
  LODWORD(v123) = *(_DWORD *)&v128[4 * ((((2 * (_DWORD)v123) & 0x7E17408A) - (_DWORD)v123 + 1089757114) ^ 0x48C21F87)];
  LODWORD(v94) = *(_DWORD *)(v5 - 176) ^ LODWORD(STACK[0x2D0]) ^ LODWORD(STACK[0x20C]) ^ LODWORD(STACK[0x2C8]) ^ LODWORD(STACK[0x2C0]) ^ LODWORD(STACK[0x2C4]) ^ *(_DWORD *)&v126[4 * (BYTE3(v36) ^ 0x76)] ^ *(_DWORD *)&v127[4 * (BYTE2(v122) ^ 0x41)] ^ *(_DWORD *)&v129[4 * (BYTE1(v90) ^ 0xD4)] ^ v123 ^ (((4 * v123) ^ 0x5F4B982C) - ((2 * ((4 * v123) ^ 0x5F4B982C)) & 0x2A42D578) - 1792972099) & 0x8BF1700C;
  LODWORD(v120) = *(_DWORD *)&v128[4 * (v90 ^ 0x51)];
  LODWORD(v52) = (((4 * (_DWORD)v120) ^ 0x5F4B982C) - ((2 * ((4 * (_DWORD)v120) ^ 0x5F4B982C)) & 0x4C9798C8) - 1504981916) & 0x8BF1700C ^ 0xD3294264;
  LODWORD(v120) = *(_DWORD *)(v5 - 168) ^ LODWORD(STACK[0x300]) ^ LODWORD(STACK[0x2F8]) ^ *(_DWORD *)(v5 - 184) ^ LODWORD(STACK[0x2DC]) ^ LODWORD(STACK[0x2F4]) ^ *(_DWORD *)&v127[4 * (BYTE2(v36) ^ 0x55)] ^ *(_DWORD *)&v129[4 * (BYTE1(v122) ^ 0x8A)] ^ *(_DWORD *)&v126[4 * (BYTE3(v55) ^ 0x6E)] ^ v120 ^ ((v52 | 0xC4D6D823) - (v52 | 0x3B2927DC) + 992552924);
  LODWORD(v124) = *(_DWORD *)&v126[4 * ((v122 >> 24) ^ 0x5E)];
  LODWORD(v122) = *(_DWORD *)&v128[4 * (v122 ^ 0x1F)];
  v155 = ((4 * (_DWORD)v122) ^ 0x5F4B982C) - ((2 * ((4 * (_DWORD)v122) ^ 0x5F4B982C)) & 0x301EA640) - 1743826144;
  v156 = (v155 & 0x89B10008 ^ 0xF0070F91) + (v155 & 0x2407004 ^ 0x403005) - 2;
  LODWORD(v52) = *(_DWORD *)&v129[4
                                * (((BYTE1(v55) ^ 0xAE)
                                  + ((v55 >> 8) & 0xF4 ^ 0x250)
                                  - ((BYTE1(v55) ^ 0xAE) & 0xF4)) ^ 0x28E)];
  LODWORD(v55) = *(_DWORD *)(v5 - 244) ^ *(_DWORD *)&v126[4 * (BYTE3(v90) ^ 0xBE)] ^ *(_DWORD *)&v129[4 * (BYTE1(v36) ^ 0xE6)] ^ v122 ^ *(_DWORD *)&v127[4 * (((WORD1(v55) & 0x1E ^ 0x1FF) - (WORD1(v55) & 0xE1)) ^ 0x141)] ^ 0x60100BD1 ^ ((v156 & 0x8881700C ^ 0x94073025 | v156 & 0x3700010) - 1);
  LODWORD(v122) = *(_DWORD *)&v128[4 * (v36 ^ 0xC)];
  LODWORD(v128) = (((4 * (_DWORD)v122) ^ 0x5F4B982C)
                 - ((2 * ((4 * (_DWORD)v122) ^ 0x5F4B982C)) & 0x78597DE0)
                 - 1137918221) & 0x8BF1700C ^ 0xAF13008;
  LODWORD(v36) = *(_DWORD *)(v5 - 152) ^ LODWORD(STACK[0x318]) ^ LODWORD(STACK[0x314]) ^ LODWORD(STACK[0x308]) ^ LODWORD(STACK[0x310]) ^ *(_DWORD *)(v5 - 160) ^ v124 ^ *(_DWORD *)&v127[4 * (BYTE2(v90) ^ 0x8C)] ^ v122 ^ v52 ^ (((((2 * (_DWORD)v128) | 0x14378830) - (_DWORD)v128 + 1977891816) & 0x612AFAC ^ 0x4102AA4) + ((((2 * (_DWORD)v128) | 0x14378830) - (_DWORD)v128 + 1977891816) ^ 0xBA4EC549) - (((((2 * (_DWORD)v128) | 0x14378830) - (_DWORD)v128 + 1977891816) ^ 0xBA4EC549) & 0x612AFAC));
  *(_DWORD *)(v5 - 140) = (BYTE3(v94) ^ 0xD8) - ((2 * (BYTE3(v94) ^ 0xD8) - 1109906930) & 0xB150012E) + 1469472158;
  LODWORD(v59) = *(_DWORD *)(v5 - 132);
  v157 = (char *)*(&off_10112C750 + (int)(v59 ^ 0x6360)) - 2050241831;
  v158 = (char *)*(&off_10112C750 + (int)(v59 ^ 0x65F2)) - 1075960923;
  LODWORD(v124) = *(_DWORD *)&v158[4 * (BYTE2(v36) ^ 0x94)];
  LODWORD(v127) = v124 - ((2 * v124 + 31197332) & 0x45EE672) - 1692567677;
  LODWORD(v122) = ((2 * BYTE1(v55)) ^ 0x4C) + (BYTE1(v55) ^ 0x1DBEA759);
  v159 = (_DWORD)v122 - 1273483282 + ((2 * (_DWORD)v122 + 966) & 0xC14 ^ 0x2FF1BFFF);
  LODWORD(v124) = ((2 * (unsigned __int16)(v55 >> 8)) & 0x112) + (BYTE1(v55) ^ 0xFFFFFF9D) - 1419478409;
  v160 = ((v124 & 0x28440ACB ^ 0x40002C9) + (v124 ^ 0xAA653832) - ((v124 ^ 0xAA653832) & 0x2CB)) ^ 0x2D454879;
  v161 = (char *)*(&off_10112C750 + (int)(v59 ^ 0x6AAE)) - 1467956911;
  LODWORD(v124) = ((v120 & 0x78 ^ 0x810659) + (v120 & 0x87 ^ 0x870A6880) - 1) ^ 0x870A29FF;
  LODWORD(v81) = (((2 * v124) & 0x100058A) - v124 - 1487667910) ^ 0xA7D2BA83;
  v162 = (char *)*(&off_10112C750 + (int)v59 - 24060) - 64587595;
  LODWORD(v122) = *(_DWORD *)&v158[4 * (BYTE2(v94) ^ 2)];
  v163 = (_DWORD)v122 - ((2 * (_DWORD)v122 + 836503700) & 0xDB82A620) - 2035329190;
  LODWORD(v122) = ((v36 >> 7) & 0x1F6 ^ 0x1F4) + (BYTE1(v36) ^ 0x5FFBF701);
  LODWORD(v52) = (_DWORD)v122 - 1447375660 + ((2 * (_DWORD)v122 + 13006) & 0x26D8 ^ 0xBFF1FFFF);
  LODWORD(v122) = (((v36 >> 8) & 0xAC ^ 0x5896EF29) + ((v36 >> 8) & 0x53) - 1) ^ 0x4095BF9A;
  LODWORD(v90) = ((v122 | 0xE55B4A8E) - (v122 | 0x1AA4B571) + 447001969) ^ 0xFD581A74;
  LODWORD(v122) = v55 ^ 0x49;
  LODWORD(v80) = *(_DWORD *)&v158[4 * (BYTE2(v120) ^ 0xC1)];
  LODWORD(v84) = (BYTE1(v94) ^ 0xFF8EDF7F) + ((v94 >> 7) & 0x9A);
  v164 = LODWORD(STACK[0x338]) ^ LODWORD(STACK[0x320]) ^ LODWORD(STACK[0x334]) ^ LODWORD(STACK[0x330]) ^ LODWORD(STACK[0x32C]) ^ *(_DWORD *)&v157[4 * (BYTE3(v55) ^ 0x4E)] ^ (v84 - 666098176 + ((2 * v84 + 42026) & 0xA7D4 ^ 0x2FF9FFFF)) ^ (v80 - ((2 * v80 + 836503700) & 0xEB7AD5EE) - 1901367487) ^ ((BYTE3(v55) ^ 0xCF) + 242910551 + ((2 * (BYTE3(v55) ^ 0xCF) + 14) & 0x9E ^ 0xE2E7DFFF)) ^ *(_DWORD *)&v161[4 * (((BYTE1(v94) ^ 0x2C) - ((2 * (BYTE1(v94) ^ 0x2C)) & 0xE6) + 2931) ^ 0xBDF)];
  LODWORD(v124) = *(_DWORD *)&v162[4 * (v36 ^ 0x5D)];
  LODWORD(v38) = ((2 * v124) & 0xEF2BFFAA ^ 0x2D216A08) + (v124 ^ 0x61654AF3);
  LODWORD(v124) = (((v124 ^ 0xD39907DA ^ v164) + 1) ^ 0xFFBAE3FF)
                + v38
                + ((2 * ((v124 ^ 0xD39907DA ^ v164) + 1)) & 0xFF75C7FE);
  LODWORD(v123) = v38
                + 141164587
                + (v164 ^ ((v164 ^ 0x4569B2FC) - ((2 * (v164 ^ 0x4569B2FC) + 2) & 0x50ADE4F2) + 676786810) ^ 0x1130F53C ^ (v124 - ((2 * v124 + 22952024) & 0x7E0948C) - 1935710606));
  LODWORD(v158) = *(_DWORD *)&v158[4 * (BYTE2(v55) ^ 0x2B)];
  LODWORD(v55) = v123 - ((2 * v123) & 0xEFB859CC) + 2010918118;
  LODWORD(v128) = ((v120 >> 7) & 0x1F6 ^ 0x72) + (BYTE1(v120) ^ 0x7DB579C2);
  v165 = *(_DWORD *)(v5 - 136);
  LODWORD(v122) = *(_DWORD *)(v5 - 240) ^ v165 ^ *(_DWORD *)&v157[4 * ((v120 >> 24) ^ 0x51)] ^ *(_DWORD *)&v162[4 * v122] ^ *(_DWORD *)&v161[4 * v90] ^ (((v120 >> 24) ^ 0xD0) - 771585972 + ((2 * ((v120 >> 24) ^ 0xD0) + 526) & 0x688 ^ 0x5BF7DFFF)) ^ v52 ^ 0x9B9DB573 ^ v163;
  LODWORD(v123) = LODWORD(STACK[0x34C]) ^ *(_DWORD *)(v5 - 192) ^ v165 ^ *(_DWORD *)(v5 - 200) ^ LODWORD(STACK[0x37C]) ^ *(_DWORD *)(v5 - 256) ^ *(_DWORD *)&v157[4 * (BYTE3(v36) ^ 0x54)] ^ ((_DWORD)v128 - 5100373 + ((2 * (_DWORD)v128 + 11982) & 0x2A86 ^ 0xFFF0BFFF)) ^ *(_DWORD *)&v161[4 * ((((v120 >> 8) & 0x82 ^ 0xE45C8381) + ((v120 >> 8) & 0x7D) - 1) ^ 0xE45C830B)] ^ *(_DWORD *)&v162[4 * (v94 ^ 0x9F)] ^ ((_DWORD)v158 - ((2 * (_DWORD)v158 + 836503700) & 0xB1120E6C) - 243856512) ^ ((BYTE3(v36) ^ 0xD5) - 1016639976 + ((2 * (BYTE3(v36) ^ 0xD5) + 526) & 0x220 ^ 0x772FDFFF));
  LODWORD(v90) = v55 ^ v165 ^ 0x82D77608;
  v166 = v122 ^ v123 ^ v55 ^ v165;
  v167 = (char *)*(&off_10112C750 + (int)(v59 ^ 0x78CA)) - 1512419411;
  LODWORD(v36) = v59;
  v168 = (char *)*(&off_10112C750 + (int)v59 - 25199) - 2106131258;
  v169 = LODWORD(STACK[0x35C]) ^ LODWORD(STACK[0x370]) ^ LODWORD(STACK[0x36C]) ^ LODWORD(STACK[0x350]) ^ LODWORD(STACK[0x360]) ^ v165 ^ *(_DWORD *)&v157[4 * (BYTE3(v94) ^ 0x59)] ^ *(_DWORD *)(v5 - 140) ^ *(_DWORD *)&v161[4 * v160] ^ v127 ^ *(_DWORD *)&v162[4 * v81] ^ v159 ^ v122 ^ v90;
  LODWORD(v122) = v123 ^ 0xDBB27DF3 ^ v169;
  v170 = v122 ^ v90;
  LODWORD(v90) = (HIBYTE(v170) ^ 0x589A5B0C) + (HIBYTE(v170) ^ 0xF1);
  LODWORD(v122) = v122 ^ v166;
  v171 = *(_DWORD *)&v167[4 * (HIBYTE(v170) ^ 0xA2)] + (v90 ^ 0x5BCBDFBF) + ((2 * v90) & 0xB114BF7E);
  v172 = *(_DWORD *)&v168[4
                        * (((BYTE2(v122) ^ 0xEB)
                          + ((v122 >> 16) & 0x5C ^ 0x1298FD14)
                          - ((BYTE2(v122) ^ 0xEB) & 0x5C)) ^ 0x1298FD35)];
  LODWORD(v59) = (v172 & 0x400000 ^ 0x45EBB67E) + 2 * (v172 & 0x400000);
  v173 = ((v171 - 1777812357) & ((_DWORD)v59 - 1173075582)) == ((2 * ((v171 - 1777812357) & ((_DWORD)v59 - 1173075582))) & 0x5A800000);
  LODWORD(v45) = (HIBYTE(v169) ^ 0x589A5B5C) + (HIBYTE(v169) ^ 0xA1);
  v174 = (v45 ^ 0x4F7F93EF) + ((2 * v45) & 0x903427DE) + *(_DWORD *)&v167[4 * (HIBYTE(v169) ^ 0xF2)];
  LODWORD(v45) = v174 - ((2 * v174 + 1151996054) & 0x451D9DA4) - 991701219;
  LODWORD(v104) = (((((v170 >> 8) & 0xA7) + (BYTE1(v170) ^ 0xFF)) | 0xC9972C00) - ((BYTE1(v170) ^ 0xFF) & 0xA7)) ^ 0x8EB43968;
  LODWORD(v94) = ((2 * v104) | 0xAC0AE74A) - v104 + 704285787;
  v175 = (char *)*(&off_10112C750 + (int)(v36 ^ 0x79EF)) - 41724942;
  v176 = v122 ^ 0xB819FA4D;
  LODWORD(v104) = (2 * (_DWORD)v122) & 0x15C;
  LODWORD(v122) = v122;
  LODWORD(v104) = (v104 ^ 0xC) + (v122 ^ 0xFFEF7CF8);
  LODWORD(v157) = (2 * v104 + 1424) & 0xB1A ^ 0xACCB3FFF;
  v177 = v104 - 475340714;
  v178 = (char *)*(&off_10112C750 + (int)(v36 ^ 0x6F4F)) - 841979502;
  v179 = *(_DWORD *)&v175[4 * ((((2 * (BYTE1(v170) ^ 0x91)) & 0x1AA) - (BYTE1(v170) ^ 0x91) + 2858) ^ 0xB99)] ^ *(_DWORD *)&v168[4 * (BYTE2(v166) ^ 0x52)] ^ *(_DWORD *)&v178[4 * (((v122 ^ 0x8E40AE6 | 0x9EFD848A) - (v122 ^ 0x8E40AE6 | 0x61027B75) + 1627552629) ^ 0x96198E90)] ^ v45 ^ v94 ^ (v177 + (_DWORD)v157);
  LODWORD(v94) = (HIBYTE(v166) ^ 0xBD) + (HIBYTE(v166) ^ 0x589A5B40);
  LODWORD(v157) = ((HIWORD(v170) & 0x47 ^ 0x48B5BF04) + (HIWORD(v170) & 0xB8 ^ 0xB1) - 1) ^ 0x68A53377;
  LODWORD(v127) = ((BYTE1(v176) ^ 0x34 | 0x3A0A5B53) - (BYTE1(v176) ^ 0x34 | 0xC5F5A4AC) - 973757268) ^ 0x1A026B7B;
  LODWORD(v45) = (v94 ^ 0xF5F6DF7D) + ((2 * v94) & 0xA124BEFA) + *(_DWORD *)&v167[4 * (HIBYTE(v166) ^ 0xEE)];
  LODWORD(v94) = (((2 * (BYTE1(v176) ^ 0xD5)) | 0x68F90248) - (BYTE1(v176) ^ 0xD5) - 880574756) ^ 0xFC5BE56C;
  v180 = ((2 * v169) & 0x19E ^ 0x98) + (v169 ^ 0x27FEFD83);
  v181 = *(_DWORD *)&v175[4
                        * (((v94 | 0x321DD2DC) - (v94 | 0xCDE22D23) - 840815325) ^ 0xFA3AB69C)] ^ *(_DWORD *)&v168[4 * (((v157 | 0xBDFD2E90) - (v157 | 0x4202D16F) + 1107480943) ^ 0x9DEDA275)] ^ *(_DWORD *)&v178[4 * (v169 ^ 0xE6)] ^ (v180 + 2089276958 + ((2 * v180 + 4942) & 0x18EC ^ 0xAEF23FFF)) ^ (v45 - ((2 * v45 - 138708614) & 0xF2E9CE70) + 1968350197) ^ (((2 * (_DWORD)v127) & 0x5EC33728) - (_DWORD)v127 - 1868667797);
  v182 = -1959404820 - v59;
  v183 = v59 - 10588688;
  if (!v173)
    v183 = v182;
  v184 = v171 - 142802976 + v183 - ((2 * (v171 - 142802976 + v183) + 310587482) & 0x18D59D2E) - 441686332;
  v185 = (((2 * (BYTE1(v169) ^ 0x65)) | 0x27471116) - (BYTE1(v169) ^ 0x65) + 1817999221) ^ 0xBFAF188F;
  v186 = ((2 * v166) & 0x182 ^ 0x180) + (v166 ^ 0x1FE77F15);
  v187 = *(_DWORD *)&v178[4 * (v166 ^ 0x7E)] ^ *(_DWORD *)&v175[4
                                                                               * ((((v169 >> 8) & 0x75 ^ 0x2AF)
                                                                                 - ((v169 >> 8) & 0x8A)) ^ 0x2D8)] ^ (v186 + 116085501 + ((2 * v186 + 184170) & 0x3D68E ^ 0xADDBFFFF)) ^ ((v185 | 0x2E95F5AA) - (v185 | 0xD16A0A55) - 781579691) ^ ((v172 & 0xFFBFFFFF ^ 0xED999AB1 | 0x8893C9C0) - (v172 & 0xFFBFFFFF ^ 0xED999AB1 | 0x776C363F) + 2003580479) ^ v184;
  v188 = (HIBYTE(v176) ^ 0xA3) + (HIBYTE(v176) ^ 0x589A5B5E);
  v189 = (v188 ^ 0xD7CF7FE8) + ((2 * v188) & 0xA114BFD0) + *(_DWORD *)&v167[4 * (HIBYTE(v176) ^ 0xF0)];
  v190 = ((2 * v170) & 0x1EA ^ 0xE0) + (v170 ^ 0x3BE6FF87);
  v191 = *(_DWORD *)&v175[4 * ((((v166 >> 8) & 0xDE ^ 0x84D1A72D) - ((v166 >> 8) & 0x21)) ^ 0x84D1A734)] ^ *(_DWORD *)&v178[4 * (((v170 ^ 0xA7) + (v170 & 0x96 ^ 0x6D8BAD10) - ((v170 ^ 0xA7) & 0x96)) ^ 0x6D8BADE9)] ^ *(_DWORD *)&v168[4 * ((((2 * (BYTE2(v169) ^ 0x722A6D60)) | 0xDDD2AE20) - (BYTE2(v169) ^ 0x722A6D60) + 286697712) & 0x9CC317FF ^ 0x9CC31205)] ^ ((BYTE1(v166) ^ 0x90040479 | 0x1BF2C635) - (BYTE1(v166) ^ 0x90040479 | 0xE40D39CA) - 468895286) ^ (v190 - ((2 * v190 + 2070925058) & 0x7024EBBC) + 2016042335) ^ (v189 - ((2 * v189 + 873085092) & 0xDC97695E) - 2007969535);
  v192 = (HIBYTE(v179) ^ 0xD2) + (HIBYTE(v179) ^ 0x589A5B2F);
  v193 = (v192 ^ 0x6777FEDE) + ((2 * v192) & 0x8024BDBC) + *(_DWORD *)&v167[4 * (HIBYTE(v179) ^ 0x81)];
  v194 = ((BYTE1(v187) ^ 0x7C116508) + ((v187 >> 8) & 0x8C ^ 0x83C00284) - ((BYTE1(v187) ^ 0x7C116508) & 0x4800048C)) ^ 0x5345227F;
  v195 = (BYTE1(v187) ^ 0x1C | 0x10A9A0F1) - (BYTE1(v187) ^ 0x1C | 0xEF565F0E) - 279552242;
  v196 = ((2 * v191) & 0x11C ^ 0x110) + (v191 ^ 0x67FCDD46);
  v197 = *(_DWORD *)&v175[4
                        * (((v195 & 0x1028A4E8 ^ 0xF202A008) + (v195 ^ 0xDF956F0) - ((v195 ^ 0xDF956F0) & 0x1450E4E8)) ^ 0xEB2A124A)] ^ *(_DWORD *)&v168[4 * (BYTE2(v181) ^ 0x1A)] ^ *(_DWORD *)&v178[4 * ((((2 * (v191 ^ 0x498448B3)) & 0x110001DA) - (v191 ^ 0x498448B3) + 1429567762) ^ 0x1CB131C3)] ^ (v196 - ((2 * v196 + 591664080) & 0x2215567C) + 581748006) ^ (v193 - ((2 * v193 + 347683512) & 0x153C83B2) + 351985461) ^ ((v194 | 0x1B3A8299) - (v194 | 0xE4C57D66) - 456819354);
  v198 = (HIBYTE(v181) ^ 0x589A5B4E) + (HIBYTE(v181) ^ 0xB3);
  v199 = (v198 ^ 0xFEFEE03F) + ((2 * v198) & 0xFFFF807F) + *(_DWORD *)&v167[4 * (HIBYTE(v181) ^ 0xE0)];
  v200 = (-353309111 - (BYTE2(v187) ^ 0x16) + ((2 * (BYTE2(v187) ^ 0x16)) & 0x1EC) + 192) ^ 0xEAF0EE49;
  v201 = ((2 * (v179 & 0x7F)) ^ 6) + (v179 ^ 0xEBB3EF7C);
  v202 = *(_DWORD *)&v175[4
                        * (((BYTE1(v191) ^ 0x8D | 0x9ACAB819) - (BYTE1(v191) ^ 0x8D | 0x653547E6) + 1697990630) ^ 0x9ACAB822)] ^ *(_DWORD *)&v178[4 * (v179 ^ 0xA9)] ^ ((BYTE1(v191) ^ 0xC4401230 | 0xF643E08F) - (BYTE1(v191) ^ 0xC4401230 | 0x9BC1F70) + 163323760) ^ (v201 - 543602182 + ((2 * v201 + 12270) & 0x2404 ^ 0xDCE37FFF)) ^ (v199 - ((2 * v199 - 441747466) & 0x8388A920) + 882512011) ^ *(_DWORD *)&v168[4 * (((v200 | 0xCD410A6B) - (v200 | 0x32BEF594) + 851375508) ^ 0xCD410BC2)];
  v203 = (HIBYTE(v187) ^ 0x68) + (HIBYTE(v187) ^ 0x589A5B95);
  v204 = (v203 ^ 0xFDFFC7FD) + ((2 * v203) & 0xB1348FFA) + *(_DWORD *)&v167[4 * (HIBYTE(v187) ^ 0x3B)];
  v205 = (((v179 >> 8) & 0xCE ^ 0xC36F31CE) - ((v179 >> 8) & 0xCE) + (BYTE1(v179) ^ 0x10)) ^ 0xC3C5BDE4;
  v206 = ((2 * v181) & 0x1DE ^ 0x194) + (v181 ^ 0xEFF72B25);
  v207 = *(_DWORD *)&v175[4
                        * (((BYTE1(v179) ^ 0xA4100EFE | 0xDC151F19) - (BYTE1(v179) ^ 0xA4100EFE | 0x23EAE0E6) + 602595558) ^ 0x780511DD)] ^ *(_DWORD *)&v168[4 * (((HIWORD(v191) & 0x90 ^ 0x6406011) + (HIWORD(v191) & 0x6F) - 1) ^ 0x6406054)] ^ (v206 - ((2 * v206 + 323974926) & 0x6214C566) - 1057874374) ^ (((2 * v205) & 0x1010456) - v205 - 696554028) ^ *(_DWORD *)&v178[4 * ((((2 * v181) & 0x52) + (v181 ^ 0xFFFFFF2D) - 130042409) ^ 0xF83FB564)] ^ (v204 - ((2 * v204 - 408311686) & 0xE3D3468C) - 440502397);
  v208 = (((HIBYTE(v191) ^ 0x589A5B05) + (HIBYTE(v191) ^ 0xF8)) ^ 0xA6D3DEEF)
       + ((2 * ((HIBYTE(v191) ^ 0x589A5B05) + (HIBYTE(v191) ^ 0xF8))) & 0x124BDDE)
       + *(_DWORD *)&v167[4 * (HIBYTE(v191) ^ 0xAB)];
  v209 = ((HIWORD(v179) & 0xDB ^ 0x470B13E7) - (HIWORD(v179) & 0x24)) ^ 0xBD0034;
  v210 = ((BYTE1(v181) ^ 6) + ((v181 >> 8) & 0x94 ^ 0xA6FD4090) - ((BYTE1(v181) ^ 6) & 0x94)) ^ 0xA6744EE4;
  v211 = ((2 * v187) & 0x1FA ^ 0x1B2) + (v187 ^ 0xD6E2B726);
  v212 = *(_DWORD *)&v175[4 * (BYTE1(v181) ^ 0xB6)] ^ *(_DWORD *)&v168[4
                                                                     * ((((2 * v209) | 0x959E08BA) - v209 + 892402595) ^ 0x8D7917EE)] ^ (v210 - ((2 * v210) & 0x1105F4E) + 852373415) ^ (v208 - ((2 * v208 + 369195670) & 0x263D5C8A) + 1579117456) ^ *(_DWORD *)&v178[4 * (v187 ^ 0x71)] ^ (v211 - 1502734510 + ((2 * v211 + 24306) & 0x4FB0 ^ 0xFCDE7FFF));
  v213 = ((2 * v212) ^ 0xE0A29528) - ((2 * ((2 * v212) ^ 0xE0A29528)) & 0x5F75510) + 1123789449;
  v214 = (((v212 ^ 0x70514A94) - 1734003873) ^ 0xF72AFB4E)
       + ((2 * ((v212 ^ 0x70514A94) - 1734003873)) & 0xEE55F69C)
       + (v213 & 0x314A66BE ^ 0x345A68AD)
       + ((2 * v213) & 0x2944934 ^ 0xFF6BBEEF)
       + 1;
  v215 = v214 - ((2 * v214 - 1450609382) & 0x8B8461B4);
  v216 = (HIBYTE(v207) ^ 0x589A5BA0) + (HIBYTE(v207) ^ 0x5D);
  v217 = (v216 ^ 0xBB5FFBDF) + ((2 * v216) & 0x3034B7BE) + *(_DWORD *)&v167[4 * (HIBYTE(v207) ^ 0xE)];
  v218 = ((v215 - 1702433945) >> 16) ^ 0xBC;
  v219 = (BYTE1(v197) ^ 0x9C | 0x9786F42A) - (BYTE1(v197) ^ 0x9C | 0x68790BD5) + 1752763349;
  v220 = ((BYTE1(v197) ^ 0xD4 | 0xDCCFF94) - (BYTE1(v197) ^ 0xD4 | 0xF233006B) - 231538581) ^ 0x8DA4B7E6;
  v221 = ((2 * v202) & 0x196 ^ 0x114) + (v202 ^ 0xA9DFE375);
  v222 = *(_DWORD *)&v175[4 * ((v220 - ((2 * v220) & 0x592611FC) - 1399650050) ^ 0x2CFB40BE)] ^ *(_DWORD *)&v178[4 * ((((2 * (v202 ^ 0x42898C8A)) | 0x4C9495DA) - (v202 ^ 0x42898C8A) + 1505080595) ^ 0xE4C3C673)] ^ (v221 - 304484788 + ((2 * v221 + 1878) & 0x1540 ^ 0xCFCA3FFF)) ^ ((v219 & 0x8684B5EB ^ 0x6A808143) + (v219 & 0x11024214 ^ 0x101A0015) - 1) ^ (v217 - ((2 * v217 + 1827225782) & 0x5796E4F4) - 499117355) ^ *(_DWORD *)&v168[4 * ((v218 - ((2 * v218) & 0x124) - 1164459374) ^ 0xBA97C2D5)];
  v223 = (HIBYTE(v197) ^ 0x2A) + (HIBYTE(v197) ^ 0x589A5BD7);
  v224 = (v223 ^ 0x9FF6FFDE) + ((2 * v223) & 0x3124BFBC) + *(_DWORD *)&v167[4 * (HIBYTE(v197) ^ 0x79)];
  v225 = (v215 + 103);
  v226 = (v225 ^ 0x7BF75BD5) + ((2 * (_BYTE)v215 - 18) & 0x1E ^ 0x14);
  v227 = ((BYTE2(v202) ^ 0xEB) - ((2 * (BYTE2(v202) ^ 0xEB)) & 0xE0) + 773285232) ^ 0xAB1F66EC;
  v228 = ((BYTE1(v207) ^ 0xE8) - ((2 * (BYTE1(v207) ^ 0xE8)) & 0x4E) + 725484327) ^ 0xEB7E7363;
  v229 = ((BYTE1(v207) ^ 0xB5) - ((2 * (BYTE1(v207) ^ 0xB5)) & 0x19A) - 37528627) ^ 0x28D71BC4;
  v230 = *(_DWORD *)&v175[4 * ((((2 * v229) | 0x6CB68C0C) - v229 + 1235532282) ^ 0x634F06C2)] ^ *(_DWORD *)&v168[4 * ((((2 * v227) & 0x2100814) - v227 - 1264227339) ^ 0x31AD6869)] ^ (v224 - ((2 * v224 - 1548011336) & 0xBA21DB7E) + 787384859) ^ (((2 * v228) & 0x8087C9FA) - v228 + 563878658) ^ (v226 - 472854539 + ((2 * v226 + 206) & 0x71A ^ 0xBFEF7FFF)) ^ *(_DWORD *)&v178[4 * (((v225 ^ 0x420184D3) - ((2 * (v225 ^ 0x420184D3)) & 0x800008C0) + 1709467488) ^ 0x27E5E3C3)];
  v231 = (HIBYTE(v202) ^ 0x589A5B1F) + (HIBYTE(v202) ^ 0xE2);
  v232 = (v231 ^ 0xF9B9DFDF) + ((2 * v231) & 0xB130BFBE) + *(_DWORD *)&v167[4 * (HIBYTE(v202) ^ 0xB1)];
  v233 = ((HIWORD(v207) & 0xA6) + (BYTE2(v207) ^ 0xFFFFFFB6) + (BYTE2(v207) | 0x6BA22259) + 1) ^ 0x29F20578;
  v234 = ((2 * v197) & 0xB6 ^ 0x80) + (v197 ^ 0x77BABDBF);
  v235 = ((v197 & 0x89 ^ 0x983FCC88) + (v197 & 0x76 ^ 0x71) - 1) ^ 0xA813DC89;
  v236 = v234 + 1654727652 + ((2 * v234 + 5174) & 0x1390 ^ 0xBEC63FFF);
  v237 = *(_DWORD *)&v178[4 * ((((2 * v235) & 0x182BAE) - v235 + 2103568936) ^ 0x4D4DFA17)];
  v238 = v236 ^ 0xA0BCF9C8;
  v239 = (v237 ^ v236 ^ 0x1232CF7E) + (v236 ^ 0xA0BCF9C8) + 1;
  v240 = (v237 ^ ((v237 ^ 0xB28E36B6) - ((2 * (v237 ^ 0xB28E36B6) + 2) & 0xFA1CAB28) + 2098091413) ^ (v239 - ((2 * v239) & 0x3E595E80) - 1624461504) ^ 0xAF53339D)
       + v238;
  v241 = *(_DWORD *)&v175[4
                        * (((((v215 - 1702433945) >> 8) & 9)
                          + 1243743231
                          + (((v215 - 1702433945) >> 8) & 0xF6 ^ 0x20C81323)) ^ 0x6AEA17D6)] ^ *(_DWORD *)&v168[4 * ((((2 * v233) & 0x1B9EE2C0) - v233 + 1915784863) ^ 0x3060A97A)] ^ (v232 - ((2 * v232 - 264931146) & 0x910D8170) - 1063158509) ^ (((2 * (((unsigned __int16)(v215 - 5273) >> 8) ^ 0x45)) & 0x15A) - (((unsigned __int16)(v215 - 5273) >> 8) ^ 0x45) + 1106) ^ (v240 - ((2 * v240) & 0x1F671E92) - 1884057783);
  v242 = (v215 - 1702433945) >> 24;
  v243 = (((v242 ^ 0x589A5B38) + (v242 ^ 0xC5)) ^ 0x2E9DFFB)
       + ((2 * ((v242 ^ 0x589A5B38) + (v242 ^ 0xC5))) & 0x110BFF6)
       + *(_DWORD *)&v167[4 * (v242 ^ 0x96)];
  v244 = BYTE1(v202);
  v245 = (v244 ^ 0xA4507059 | 0x8DFF3B5A) - (v244 ^ 0xA4507059 | 0x7200C4A5) + 1912652965;
  LOWORD(v244) = (v244 ^ 0xC6) - ((2 * (v244 ^ 0xC6)) & 0x10A) - 7547;
  v246 = ((2 * v207) & 0x1F6 ^ 0xB0) + (v207 ^ 0x5EFFDFA3);
  v247 = (((2 * v207) & 0x34) + (v207 ^ 0xFFFFFFDA) + 998522342) ^ 0x335071E5;
  v248 = *(_DWORD *)&v175[4 * (((v244 & 0x10F ^ 0x4097D10D) + (v244 & 0x2F0 ^ 0x400201) - 1) ^ 0x40D7D1BB)] ^ *(_DWORD *)&v168[4 * (((BYTE2(v197) ^ 0xD5 | 0x5C7C039F) - (BYTE2(v197) ^ 0xD5 | 0xA383FC60) - 1551631264) ^ 0x5C7C03C0)] ^ *(_DWORD *)&v178[4 * (((v247 | 0xD18F1075) - (v247 | 0x2E70EF8A) + 779153290) ^ 0xD95B5CA2)] ^ (v246 + 387172984 + ((2 * v246 + 3830) & 0x185F8 ^ 0x8FD7FFFF)) ^ (v243 - ((2 * v243 - 573212546) & 0xA356FBFA) - 1063896516);
  v249 = (HIBYTE(v230) ^ 0x98) + (HIBYTE(v230) ^ 0x589A5B65);
  v250 = (v249 ^ 0xBFFF1BFE) + ((2 * v249) & 0x313437FC) + *(_DWORD *)&v167[4 * (HIBYTE(v230) ^ 0xCB)];
  v251 = v248 ^ v245;
  v252 = (v248 ^ v245);
  v253 = ((2 * v251) & 0xE2 ^ 0x40) + (v252 ^ 0xEF36E2D9);
  v254 = (((2 * (v252 ^ 0x40)) & 0x1A6) - (v252 ^ 0x40) + 1429690412) ^ 0x4D6488C;
  v255 = *(_DWORD *)&v175[4 * ((1326919 - (BYTE1(v222) ^ 0xD4) + ((2 * (BYTE1(v222) ^ 0xD4)) & 0x26) + 165) ^ 0x143F47)] ^ *(_DWORD *)&v168[4 * (BYTE2(v241) ^ 0x72)] ^ ((BYTE1(v222) ^ 3) + ((v222 >> 8) & 7 ^ 0xC9E92604) - ((BYTE1(v222) ^ 3) & 7)) ^ (v250 - ((2 * v250 + 1672151160) & 0xBD7341C2) - 1869668067) ^ (v253 - 1903789719 + ((2 * v253 + 2570) & 0x8C6 ^ 0xFFC33FFF)) ^ *(_DWORD *)&v178[4 * ((((2 * v254) | 0x28B167D6) - v254 - 341357547) ^ 0x45B9A309)];
  v256 = (HIBYTE(v241) ^ 0x6F) + (HIBYTE(v241) ^ 0x589A5B92);
  v257 = (v256 ^ 0x5FFFF2FE) + *(_DWORD *)&v167[4 * (HIBYTE(v241) ^ 0x3C)];
  v258 = v257
       + ((2 * v256) & 0xB134A5FC)
       - 2 * ((v257 + ((2 * v256) & 0xB134A5FC) + 299149628) & 0x3C3E798D ^ v257 & 1)
       + 1309876936;
  v259 = ((2 * (BYTE1(v251) ^ 0x42)) & 0x9A) - (BYTE1(v251) ^ 0x42) - 1095665742;
  v260 = ((v259 & 0x29010FF ^ 0x48044) + (v259 ^ 0xA69B57BB) - ((v259 ^ 0xA69B57BB) & 0x80230FF)) ^ 0x12BC906B;
  v261 = ((2 * v230) & 0x1FA ^ 0x1F2) + (v230 ^ 0x9F7DBB06);
  v262 = v261 + 204280399 + ((2 * v261 + 1778) & 0xDAA ^ 0x9FEA3FFF);
  v263 = 2 * (((v222 ^ 0x2A000000) / 0x5E000000) & 1) + (((v222 ^ 0x2A000000) / 0x5E000000) ^ 0x5F69CBF5);
  v264 = 94 * v263 - ((-68 * v263 + 20) & 0x98) - 42;
  if ((((HIBYTE(v222) ^ 0x2A) - 94 * ((175 * (HIBYTE(v222) ^ 0x2A)) >> 14)) ^ 0xFBF9B3FF)
     + 2 * ((HIBYTE(v222) ^ 0x2A) - 94 * ((175 * (HIBYTE(v222) ^ 0x2A)) >> 14)) != -67521537)
    v264 = HIBYTE(v222) ^ 0xE6;
  v265 = *(_DWORD *)&v175[4 * v260] ^ *(_DWORD *)&v168[4 * (BYTE2(v222) ^ 0x39)] ^ *(_DWORD *)&v178[4 * (v230 ^ 0x51)] ^ (((2 * (BYTE1(v251) ^ 0x8842281B)) & 0xC4) - (BYTE1(v251) ^ 0x8842281B) + 1249046429) ^ v262 ^ v258;
  v266 = (v264 ^ 0xCC) + (v264 ^ 0x589A5B31);
  v267 = (v266 ^ 0x62FFDFBD)
       + ((2 * v266) & 0x8134BF7A)
       + *(_DWORD *)&v167[4
                        * (((v264 ^ 0x31094CCC) + (v264 & 0xA4 ^ 0x4E163220) - ((v264 ^ 0x31094CCC) & 0x10844A4)) ^ 0x7E173AF7)];
  v268 = (BYTE1(v230) ^ 0x99) - ((2 * (BYTE1(v230) ^ 0x99)) & 0x1D2) + 722670313;
  v269 = ((2 * v241) & 0xBE ^ 0x2E) + (v241 ^ 0x4AFF9E48);
  v270 = *(_DWORD *)&v175[4 * (BYTE1(v230) ^ 0x7F)] ^ *(_DWORD *)&v168[4 * (BYTE2(v248) ^ 0x51)] ^ (v269
                                                                                                  - ((2 * v269 + 1564381742) & 0x42111670)
                                                                                                  - 739716017) ^ *(_DWORD *)&v178[4 * (((v241 ^ 0x3B | 0x537F8294) - (v241 ^ 0x3B | 0x2C807D6B) + 746618219) ^ 0x537F8212)] ^ ((v268 & 0x23020055 ^ 0x800C4014) + (v268 ^ 0x271227CB) - ((v268 ^ 0x271227CB) & 0x8011455)) ^ (v267 - ((2 * v267 + 497645818) & 0x80F5C57E) + 1330618172);
  v271 = HIBYTE(v251);
  v272 = (HIBYTE(v251) ^ 0x74) + (HIBYTE(v251) ^ 0x589A5B89);
  v273 = (v272 ^ 0x3BF6ED77) + ((2 * v272) & 0x31249AEE) + *(_DWORD *)&v167[4 * (v271 ^ 0x27)];
  v274 = ((2 * v222) & 0xE6 ^ 0xE0) + (v222 ^ 0x7FF3F987);
  v275 = ((BYTE1(v241) ^ 0x8C) - ((2 * (BYTE1(v241) ^ 0x8C)) & 0x1FC) - 1588905474) ^ 0xE8C13958;
  v276 = (((v241 >> 7) & 0x20) + (BYTE1(v241) ^ 0xFFFFFF1B) - 1360093968) ^ 0xE7B950A3;
  v277 = *(_DWORD *)&v175[4 * ((v276 - ((2 * v276) & 0x80018A90) + 1411966280) ^ 0x1D7F290E)] ^ *(_DWORD *)&v168[4 * ((((2 * (BYTE2(v230) ^ 0x59)) & 0x1D0) - (BYTE2(v230) ^ 0x59) + 5911) ^ 0x17A5)] ^ *(_DWORD *)&v178[4 * (((v222 ^ 0x50) + (v222 & 0xCE ^ 0x28E) - ((v222 ^ 0x50) & 0xCE)) ^ 0x2C0)] ^ (v274 - 2042228757 + ((2 * v274 + 6) & 0x3CE ^ 0xEECBBFFF)) ^ (v273 - ((2 * v273 + 733699462) & 0x36A44F74) - 785394051);
  v278 = (HIBYTE(v255) ^ 0x589A5B98) + (HIBYTE(v255) ^ 0x65);
  v279 = (v278 ^ 0x37F17FF5) + ((2 * v278) & 0x2120BFEA) + *(_DWORD *)&v167[4 * (HIBYTE(v255) ^ 0x36)];
  v280 = v279 - ((2 * v279 + 868628618) & 0x3CC7C76C) - 666435589;
  v281 = ((BYTE1(v270) ^ 0xAC) + ((v270 >> 8) & 0xA7 ^ 0xDA7B1E03) - ((BYTE1(v270) ^ 0xAC) & 0xA7)) ^ 0xE3DB36A7;
  v282 = (((2 * v281) & 0x410044D0) - v281 + 1563708823) ^ 0x649465DB;
  v283 = v277 ^ (((2 * v275) | 0xA76497C0) - v275 - 1404193760);
  v284 = (v277 ^ (((2 * v275) | 0xC0) - v275 + 32));
  v285 = ((2 * v283) & 0x1FC ^ 0x1AC) + (v284 ^ 0x7FBBBF29);
  v286 = (v284 ^ 0x26) - ((2 * (v284 ^ 0x26)) & 0x1C4) + 1004665058;
  v287 = (HIBYTE(v265) ^ 0x589A5B98) + (HIBYTE(v265) ^ 0x65);
  v288 = *(_DWORD *)&v175[4 * v282] ^ *(_DWORD *)&v168[4
                                                     * (((BYTE2(v265) ^ 0x22)
                                                       - ((2 * (BYTE2(v265) ^ 0x22)) & 0xEC)
                                                       + 4214) ^ 0x1023)] ^ *(_DWORD *)&v178[4
                                                                                           * (((v286 & 0x810F09 ^ 0x40000609)
                                                                                             + (v286 ^ 0x23DDE9E2)
                                                                                             - ((v286 ^ 0x23DDE9E2) & 0x180F09)) ^ 0x58A51E52)] ^ ((((((v270 >> 8) & 0x6E ^ 0x2B15412F) - 1) & 0xEEEEEEEE | (v270 >> 8) & 0x91) ^ 0xAD996D8A) - 109314048) ^ v280 ^ (v285 + 530317343 + ((2 * v285 + 20208) & 0x1B14C ^ 0xBCCFFFFF));
  v289 = (v287 ^ 0xEFE71AF6) + ((2 * v287) & 0x910435EC) + *(_DWORD *)&v167[4 * (HIBYTE(v265) ^ 0x36)];
  v290 = ((2 * v255) & 0xF8 ^ 0x70) + (v255 ^ 0xEAFD7CC5);
  v291 = *(_DWORD *)&v175[4 * (BYTE1(v283) ^ 0xD7)] ^ *(_DWORD *)&v178[4
                                                                     * ((((2 * v255) & 0x4C)
                                                                       + (v255 ^ 0xFFFFFF2F)
                                                                       - 463462950) ^ 0xE4601D1A)] ^ (((2 * (BYTE1(v283) ^ 0x3712386D)) & 0x2620402A) - (BYTE1(v283) ^ 0x3712386D) - 320185366) ^ (v289 - ((2 * v289 + 64684680) & 0x85833A2C) - 995156390) ^ (v290 + 931269251 + ((2 * v290 + 5620) & 0x1F10 ^ 0xAEFEFFFF)) ^ *(_DWORD *)&v168[4 * ((((2 * (BYTE2(v270) ^ 0x78)) & 0xBC) - (BYTE2(v270) ^ 0x78) + 10145) ^ 0x27AE)];
  v292 = (HIBYTE(v270) ^ 0x589A5B78) + (HIBYTE(v270) ^ 0x85);
  v293 = (v292 ^ 0xEF9FD6AF) + ((2 * v292) & 0x9134AD5E) + *(_DWORD *)&v167[4 * (HIBYTE(v270) ^ 0xD6)];
  v294 = ((2 * (BYTE1(v255) ^ 0x55)) | 0x8A235296) - (BYTE1(v255) ^ 0x55) + 988698293;
  v295 = ((2 * v265) & 0x17C ^ 0x78) + (v265 ^ 0x3F3DBFC3);
  LOWORD(v292) = ((2 * (BYTE1(v255) ^ 0x79)) & 0x5A) - (BYTE1(v255) ^ 0x79) - 27438;
  v296 = (((2 * (v265 ^ 0xF1)) & 0x76) - (v265 ^ 0xF1) - 1066674748) ^ 0x805A1706;
  v297 = *(_DWORD *)&v175[4 * (((v292 & 0x19C ^ 0x26B2E185) + (v292 & 0x663) - 1) ^ 0x26B2E56B)] ^ *(_DWORD *)&v168[4 * (BYTE2(v277) ^ 0xCC)] ^ (v295 - ((2 * v295 + 1958891376) & 0x413724DC) + 1530706470) ^ *(_DWORD *)&v178[4 * ((((2 * v296) & 0x80218E22) - v296 - 1557194514) ^ 0xE31EDA0A)] ^ ((v294 & 0xB84DF5FE ^ 0xB00090E4) + (v294 ^ 0xE6D671B) - ((v294 ^ 0xE6D671B) & 0xB84DF5FE)) ^ (v293 - ((2 * v293 + 74025750) & 0x372A0574) + 499763269);
  v298 = (((HIBYTE(v283) ^ 0x589A5B0B) + (HIBYTE(v283) ^ 0xF6)) ^ 0xEDFD7FF5)
       + ((2 * ((HIBYTE(v283) ^ 0x589A5B0B) + (HIBYTE(v283) ^ 0xF6))) & 0x9130BFEA)
       + *(_DWORD *)&v167[4 * (HIBYTE(v283) ^ 0xA5)];
  v299 = v298 - ((2 * v298 + 128858250) & 0xD4AF8FD6) - 298916816;
  v300 = BYTE1(v265);
  v301 = ((2 * v270) & 0x15E ^ 0x102) + (v270 ^ 0x239FED3E);
  v302 = *(_DWORD *)&v175[4
                        * ((((2 * (BYTE1(v265) ^ 0x380010FA)) | 0xDDF42E2E) - (BYTE1(v265) ^ 0x380010FA) + 285599977) ^ 0xD6FA07D3)] ^ *(_DWORD *)&v168[4 * (((BYTE2(v255) ^ 0xE8E5A487 | 0x9548A153) - (BYTE2(v255) ^ 0xE8E5A487 | 0x6AB75EAC) + 1790402220) ^ 0x7DAD051C)] ^ (v301 + 2130246889 + ((2 * v301 + 910) & 0x642 ^ 0xAECBFFFF)) ^ v299 ^ *(_DWORD *)&v178[4 * ((((2 * (v270 ^ 0x84D00119)) | 0xC46E78E6) - (v270 ^ 0x84D00119) - 1647787123) ^ 0xE6E73D51)];
  v303 = (HIBYTE(v288) ^ 0x589A5B2E) + (HIBYTE(v288) ^ 0xD3);
  v304 = (v303 ^ 0x6FAEE9DD) + ((2 * v303) & 0x911493BA) + *(_DWORD *)&v167[4 * (HIBYTE(v288) ^ 0x80)];
  v305 = ((2 * (BYTE1(v297) ^ 0x46)) & 0x14E) - (BYTE1(v297) ^ 0x46) - 1854803624;
  v306 = v302 ^ v300;
  v307 = v306;
  v308 = ((2 * v306) & 0x1FA ^ 0x14A) + (v306 ^ 0xB2FD2F5A);
  v309 = (HIBYTE(v291) ^ 0x589A5BC8) + (HIBYTE(v291) ^ 0x35);
  v310 = v309 ^ 0x2ABE77D7;
  v311 = (2 * v309) & 0x1134AFAE;
  v312 = *(_DWORD *)&v175[4
                        * (((v305 & 0x1401DDA ^ 0x4C8C1CC2) + (v305 ^ 0x91416138) - ((v305 ^ 0x91416138) & 0x109DDA)) ^ 0x4DEC0D0F)] ^ *(_DWORD *)&v168[4 * ((((2 * (BYTE2(v291) ^ 0x422026E5)) | 0x5F848A20) - (BYTE2(v291) ^ 0x422026E5) - 801260816) ^ 0x6DE263C2)] ^ *(_DWORD *)&v178[4 * (v307 ^ 0xD)] ^ (((2 * (BYTE1(v297) ^ 0x2CA6)) | 0x9DB7A1F2) - (BYTE1(v297) ^ 0x2CA6) - 1323028729) ^ (v304 - ((2 * v304 + 72049850) & 0x1FE3C1B0) - 1843948747) ^ (v308 - 1369018678 + ((2 * v308 + 28402) & 0x6EA0 ^ 0xBCF6FFFF));
  v313 = v310 + v311 + *(_DWORD *)&v167[4 * (HIBYTE(v291) ^ 0x66)];
  v314 = ((BYTE1(v302) ^ 0xD1 | 0x330A6F85) - (BYTE1(v302) ^ 0xD1 | 0xCCF5907A) - 856321926) ^ 0x33496BA2;
  v315 = (((v302 >> 8) & 0xD1 ^ 0xD0) + ((v302 >> 8) & 0x41 ^ 0x49C8129) - (((v302 >> 8) & 0xD1 ^ 0xD0) & 0x41)) ^ 0x1C11EB;
  v316 = ((2 * v288) ^ 0xD0) + (v288 ^ 0xE8FFE397);
  v317 = (((2 * (v288 ^ 0x51)) & 0xBC) - (v288 ^ 0x51) - 228209759) ^ 0xF045F3B1;
  v318 = (HIBYTE(v297) ^ 0x589A5B25) + (HIBYTE(v297) ^ 0xD8);
  v319 = *(_DWORD *)&v175[4 * (((v314 | 0xA7895384) - (v314 | 0x5876AC7B) + 1484172411) ^ 0xA7CA57C0)] ^ *(_DWORD *)&v168[4 * (BYTE2(v297) ^ 0x60)] ^ (v313 - ((2 * v313 - 1909700410) & 0xE3BDE928) - 1191896841) ^ (v316 - ((2 * v316 + 557713134) & 0x420C05E0) + 933561959) ^ (((((v302 >> 8) & 0x2E ^ 6) - ((2 * ((v302 >> 8) & 0x2E ^ 6)) & 4) + 18) & 0x2E ^ 0x33F2F5F3) + 992079423) ^ (v315 - ((2 * v315) & 0x9010E08) + 880838436) ^ *(_DWORD *)&v178[4 * ((v317 - ((2 * v317) & 0x400063A) + 1444725533) ^ 0x543CFB9E)];
  v320 = (v318 ^ 0x7FFFEBFF) + ((2 * v318) & 0xB13497FE) + *(_DWORD *)&v167[4 * (HIBYTE(v297) ^ 0x8B)];
  v321 = v320 - ((2 * v320 - 475438986) & 0xEF76838C) - 376442367;
  v322 = (BYTE1(v288) ^ 0x86) - ((2 * (BYTE1(v288) ^ 0x86)) & 0xFFFFFFE3) + 225284337;
  v323 = (((2 * (BYTE1(v288) ^ 0x2E)) & 0x1C) - (BYTE1(v288) ^ 0x2E) - 805707023) ^ 0xCEF8E6FD;
  v324 = ((v323 | 0x6A872A76) - (v323 | 0x9578D589) - 1787243127) ^ 0x6B862E71;
  v325 = ((2 * v291) ^ 0xF8) + (v291 ^ 0xFFEF1E83);
  v326 = ((v291 ^ 0x91) - ((2 * (v291 ^ 0x91)) & 0x138) + 2070240412) ^ 0x2BCD3CDC;
  v327 = ((BYTE2(v288) ^ 0x2D) + (HIWORD(v288) & 0x6A ^ 0x53B72042) - ((BYTE2(v288) ^ 0x2D) & 0x6A)) ^ 0x729B065B;
  v328 = (((HIBYTE(v302) ^ 0x589A5BC8) + (HIBYTE(v302) ^ 0x35)) ^ 0xFFEFEC4D)
       + ((2 * ((HIBYTE(v302) ^ 0x589A5BC8) + (HIBYTE(v302) ^ 0x35))) & 0xB114989A)
       + *(_DWORD *)&v167[4 * (HIBYTE(v302) ^ 0x66)];
  v329 = *(_DWORD *)&v175[4 * v324] ^ *(_DWORD *)&v168[4
                                                     * (((BYTE2(v302) ^ 0x48844B1)
                                                       - ((2 * (BYTE2(v302) ^ 0x48844B1)) & 0x8008152)
                                                       + 2087803049) ^ 0x78F91C35)] ^ *(_DWORD *)&v178[4 * ((((2 * v326) | 0xF1510284) - v326 - 2024309058) ^ 0x2800E145)] ^ (v325 - ((2 * v325 + 861901038) & 0x3010FB46) - 1850194406) ^ v322 & 0x8001FFF ^ v321;
  v330 = (BYTE1(v291) ^ 0xFFFFFF77) + 1837079816 + ((2 * BYTE1(v291)) | 0x2500C5F2);
  v331 = *(_DWORD *)&v175[4 * (BYTE1(v291) ^ 0x1C)] ^ (v328 - ((2 * v328 + 1674141658) & 0x79C5DD0C) - 1362649485) ^ *(_DWORD *)&v168[4 * ((v327 - ((2 * v327) & 0x40081F7A) - 335048771) ^ 0xCD2BA98E)];
  v332 = ((2 * (v330 & 0x2000022 ^ 0x34916460)) & 0x60606060) - (v330 & 0x2000022 ^ 0x34916460) - 1882628793;
  v333 = v331 & 0x2E806022;
  v334 = (((2 * (v331 & 0xD17F9FDD ^ 0x9F80CE06)) | 0x8BA754B0) - (v331 & 0xD17F9FDD ^ 0x9F80CE06) + 975984040) ^ 0x2A18FC48;
  v335 = (v330 & 0x1DD ^ 0x1109189) + (v330 & 0x10000044 ^ 0x8EED6444) - ((v330 & 0x1DD ^ 0x1109189) & 0x9044);
  v336 = ((v335 & 0x6294424 ^ 0x40000822) + (v335 ^ 0x9E29F4C5) - ((v335 ^ 0x9E29F4C5) & 0x424)) ^ 0xFFD942DF ^ (((2 * v334) & 0xED75FBA8) - v334 + 155517483) | v332 ^ 0x9B583927 ^ v333;
  v337 = (((2 * v297) & 0x196 ^ 0x96)
        + (v297 ^ 0x7D7DA790)
        + 639911288
        + ((2 * (((2 * v297) & 0x196 ^ 0x96) + (v297 ^ 0x7D7DA790)) + 3926) & 0xB98 ^ 0xAFFBFFFF)) ^ *(_DWORD *)&v178[4 * (v297 ^ 0xF1)] ^ (v336 - ((2 * v336) & 0xAB05DA8A) - 712839867);
  v338 = (HIBYTE(v312) ^ 0x54) + (HIBYTE(v312) ^ 0x589A5BA9);
  v339 = (v338 ^ 0xF66F2CEF) + ((2 * v338) & 0xA01419DE) + *(_DWORD *)&v167[4 * (HIBYTE(v312) ^ 7)];
  v340 = (v337 ^ 0x9FF7FD8E) + ((2 * v337) & 0x11C);
  v341 = *(_DWORD *)&v175[4
                        * ((((2 * (BYTE1(v329) ^ 0xF2)) | 0xEC20A98) - (BYTE1(v329) ^ 0xF2) + 2023684788) ^ 0x87610518)] ^ *(_DWORD *)&v168[4 * (((BYTE2(v319) ^ 0xC5) + (HIWORD(v319) & 0x26 ^ 0x10F22) - ((BYTE2(v319) ^ 0xC5) & 0x26)) ^ 0x10FB9)] ^ (((v329 >> 8) & 0xDA ^ 0x4381) + ((v329 >> 8) & 0x25) - 1) ^ (v339 - ((2 * v339 - 154476906) & 0xE6EA939E) + 1859827994) ^ (v340 - 893844961 + ((2 * ((v340 + 2536) & 0x837 ^ (v337 | 0x7FFFFFFE))) ^ 0x62240003)) ^ *(_DWORD *)&v178[4 * (((v337 & 0xC1 ^ 0x1BCA9980) + (v337 & 0x3E ^ 0x4200031) - 1) ^ 0x1FEA991A)];
  v342 = (HIBYTE(v319) ^ 0x589A5B71) + (HIBYTE(v319) ^ 0x8C);
  v343 = (((2 * (BYTE2(v329) ^ 0xF7)) | 0xA1D78D82) - (BYTE2(v329) ^ 0xF7) + 789854527) ^ 0xD0E3C280;
  v344 = ((BYTE2(v329) ^ 0xEF) + (HIWORD(v329) & 0xD5 ^ 0xE8E2E810) - ((BYTE2(v329) ^ 0xEF) & 0xD5)) ^ 0xB034A52A;
  v345 = ((v344 | 0x98E2B15A) - (v344 | 0x671D4EA5) + 1729973925) ^ 0x3FCB0332;
  v346 = (v342 ^ 0x2DFF16FD) + ((2 * v342) & 0x11342DFA) + *(_DWORD *)&v167[4 * (HIBYTE(v319) ^ 0xDF)];
  v347 = ((2 * v312) ^ 0xD8) + (v312 ^ 0xEBF1A693);
  v348 = *(_DWORD *)&v175[4 * ((((2 * (BYTE1(v337) ^ 0xFB)) & 0xFFFFFF03) - (BYTE1(v337) ^ 0xFB) + 638) ^ 0x2FB)] ^ *(_DWORD *)&v168[4 * ((v343 - ((2 * v343) & 0xBE41EC8) + 99749732) ^ (v345 - ((2 * v345 + 116) & 0xD2B4989C) + 1767525512) ^ 0x320B1BDF ^ (((v343 - ((2 * v343) & 0xBE41EC8) + 99749732) ^ 0xFA05F493) - ((2 * ((v343 - ((2 * v343) & 0xBE41EC8) + 99749732) ^ 0xFA05F493) + 2) & 0xBD56B9FA) + 1588288766)) + 228] ^ *(_DWORD *)&v178[4 * (v312 ^ 0xC6)] ^ (v347 - ((2 * v347 + 458916078) & 0x522965FA) - 155061388) ^ (v346 - ((2 * v346 - 2018833798) & 0x8D50560E) - 1971474364) ^ (((v337 >> 8) & 0xE9 ^ 0x5E3D2A48) + ((v337 >> 8) & 0x16 ^ 7) - 1);
  v349 = (HIBYTE(v329) ^ 0xFC) + (HIBYTE(v329) ^ 0x589A5B01);
  v350 = (v349 ^ 0xF7FDFF73) + ((2 * v349) & 0xA130BEE6) + *(_DWORD *)&v167[4 * (HIBYTE(v329) ^ 0xAF)];
  v351 = (((v312 >> 8) & 0x69) + ((v312 >> 8) & 0x96 ^ 0x67589E13) - 1) ^ 0x6D086AFA;
  v352 = ((2 * v319) ^ 0x18C61206) - ((2 * ((2 * v319) ^ 0x18C61206)) & 0xE8) + 372;
  v353 = (v319 ^ 0x399EE775) + (v352 & 0xEC ^ 0xFDBFD797) + ((2 * v352) & 0x1C0 ^ 0xC0) + 37758989;
  v354 = *(_DWORD *)&v175[4 * (((v351 | 0x47001C14) - (v351 | 0xB8FFE3EB) - 1191189525) ^ 0x4D50E8C0)] ^ *(_DWORD *)&v178[4 * (v319 ^ 0xA9)] ^ (((2 * (BYTE1(v312) ^ 0xCF)) & 0x156) - (BYTE1(v312) ^ 0xCF) - 1011806380) ^ (v350 - ((2 * v350 - 206751346) & 0x9992B2A8) + 1184888347) ^ (v353 - ((2 * v353) & 0x41020DA2) + 1623262929) ^ *(_DWORD *)&v168[4 * (BYTE2(v337) ^ 0x39)];
  v355 = ((HIWORD(v312) & 7) + (HIWORD(v312) & 0xF8 ^ 0xCACCA1D1) - 1) ^ 0xEA8CA078;
  v356 = (((HIBYTE(v337) ^ 0x589A5B74) + (HIBYTE(v337) ^ 0x89)) ^ 0xFF7BA3DF)
       + ((2 * ((HIBYTE(v337) ^ 0x589A5B74) + (HIBYTE(v337) ^ 0x89))) & 0xB03407BE)
       + *(_DWORD *)&v167[4 * (HIBYTE(v337) ^ 0xDA)];
  v357 = ((2 * v329) & 0xCE ^ 0xE) + (v329 ^ 0xAFB77F60);
  v358 = (((2 * (v329 ^ 0xEC)) & 0x82) - (v329 ^ 0xEC) - 1485079618) ^ 0xAA77B932;
  v359 = *(_DWORD *)&v175[4 * (((BYTE1(v319) ^ 0xDF) - ((2 * (BYTE1(v319) ^ 0xDF)) & 0xFFFFFF0F) + 2951) ^ 0xB95)] ^ *(_DWORD *)&v168[4 * ((((2 * v355) | 0x4BFB697A) - v355 - 637383869) ^ 0x5BDB584)] ^ ((BYTE1(v319) ^ 0x144E79) - ((2 * (BYTE1(v319) ^ 0x144E79)) & 0x88DEE) - 233842697) ^ (v357 + 952655924 + ((2 * v357 + 53278) & 0x1F048 ^ 0xAEFFFFFF)) ^ *(_DWORD *)&v178[4 * ((v358 - ((2 * v358) & 0x180006FA) + 1045635965) ^ 0x335FE1B0)] ^ (v356 - ((2 * v356 + 1689383094) & 0x5002291A) + 442109160);
  v360 = (HIBYTE(v341) ^ 0xF7) + (HIBYTE(v341) ^ 0x589A5B0A);
  v361 = *(_DWORD *)&v168[4
                        * ((((2 * (BYTE2(v348) ^ 0x6E)) | 0xCF6F15A) - (BYTE2(v348) ^ 0x6E) + 1770293075) & 0x1FFFFFFF ^ 0x167B78A9)];
  v362 = *(_DWORD *)&v167[4 * (HIBYTE(v341) ^ 0xA4)] + (v360 ^ 0x19FF5B2B) + ((2 * v360) & 0x3134B656);
  v363 = 1456883398 - (v361 & 0x800000 | 0x2B6B2363);
  if (((v362 - 271236849) & v361 & 0x800000) == 0)
    v363 = v361 & 0x800000 | 0x2B6B2363;
  v364 = ((2 * v359) ^ 0x8E) + (v359 ^ 0x63FEFBB8);
  v365 = (HIBYTE(v348) ^ 0x589A5BF0) + (HIBYTE(v348) ^ 0xD);
  v366 = (v365 ^ 0xBF3FED97) + ((2 * v365) & 0x30349B2E) + *(_DWORD *)&v167[4 * (HIBYTE(v348) ^ 0x5E)];
  v367 = *(_DWORD *)&v178[4
                        * (((v359 & 0x11)
                          + (v359 ^ 0xFFFFFF1D)
                          + (v359 | 0x569E02EE)
                          + 1) ^ 0x569E02E1)] ^ *(_DWORD *)&v175[4
                                                               * ((((v354 >> 8) & 0x67 ^ 0x38B1B146)
                                                                 + ((v354 >> 8) & 0x98 ^ 0x3000009)
                                                                 - 1) ^ 0x3BB1B1A7)] ^ ((BYTE1(v354) ^ 0x4580102F)
                                                                                      - ((2 * (BYTE1(v354) ^ 0x4580102F)) & 0x100008A)
                                                                                      + 9277253) ^ (v364
                                                                                                  - ((2 * v364 + 725604078) & 0x501C182A)
                                                                                                  - 1072822388) ^ (180922883 - (v361 & 0xFF7FFFFF ^ 0x995B0A6E) + ((2 * (v361 & 0xFF7FFFFF ^ 0x995B0A6E)) & 0xEA6EAB70) + 68) ^ (v362 - 276300064 + v363 - ((2 * (v362 - 276300064 + v363) + 2042903960) & 0x5477B5EA) + 1730017729);
  v368 = ((2 * (BYTE1(v359) ^ 0xD)) | 0x70236288) - (BYTE1(v359) ^ 0xD) + 1206800060;
  v369 = ((2 * (v341 ^ 0x24)) & 0x17E ^ 0x3E) + (v341 ^ 0x7C32FFC4);
  v370 = *(_DWORD *)&v175[4
                        * (((v368 & 0x101029F7 ^ 0x4C808B2) + (v368 ^ 0x3A10F145) - ((v368 ^ 0x3A10F145) & 0x96D869F7)) ^ 0x14D929B1)] ^ *(_DWORD *)&v168[4 * (BYTE2(v354) ^ 0x19)] ^ *(_DWORD *)&v178[4 * ((((2 * (v341 ^ 0x4A2032EC)) | 0xA1C3A036) - (v341 ^ 0x4A2032EC) - 1356976155) ^ 0x1AC1E226)] ^ (v366 - ((2 * v366 + 1697209670) & 0xCBE05DBE) + 411360642) ^ ((BYTE1(v359) ^ 0x40D8C) - ((2 * (BYTE1(v359) ^ 0x40D8C)) & 0x810CC) - 273745818) ^ (v369 - 1400683869 + ((2 * v369 + 511854) & 0x6B5D6 ^ 0xADD7FFFF));
  v371 = (HIBYTE(v354) ^ 0xF9) + (HIBYTE(v354) ^ 0x589A5B04);
  v372 = (v371 ^ 0x97FC76AB) + ((2 * v371) & 0x2130AD56) + *(_DWORD *)&v167[4 * (HIBYTE(v354) ^ 0xAA)];
  LOWORD(v371) = ((2 * (BYTE2(v359) ^ 0xD4)) & 0xEA) - (BYTE2(v359) ^ 0xD4) + 22410;
  v373 = ((BYTE1(v341) ^ 0xFFFFFFDE) + 1416939226 + ((2 * BYTE1(v341)) | 0x5716724E)) ^ 0xA88F1AE3;
  v374 = v373 - ((2 * v373) & 0x4F72) - 398788679;
  v375 = (v348 ^ 0xFF4FFBAC) + 978250727 + ((2 * v348) & 0x11E ^ 6);
  v376 = *(_DWORD *)&v178[4
                        * (((((v348 & 0xB2) + (v348 ^ 0xA05998FB)) | 0x4B266400)
                          - ((v348 ^ 0xA05998FB) & 0x908B2)) ^ 0xEB76F4C0)] ^ 0x4D71C949;
  v377 = 2 * ((v375 & v376) - ((2 * (v375 & v376)) & 0x5201DBC6)) - 566101050;
  v378 = ((v375 + v376) ^ 0x7FFD615F)
       + ((2 * (v375 + v376)) & 0xFFFAC2BE)
       + (v377 ^ 0x7E69D085)
       + ((2 * v377) & 0xBFAFA978 ^ 0x437C5EF7)
       + 1;
  v379 = *(_DWORD *)&v175[4
                        * (((BYTE1(v341) ^ 0xA003518C) - ((2 * (BYTE1(v341) ^ 0xA003518C)) & 0x4002219E) + 1961728719) ^ 0xD4EECB6A)] ^ (v372 - ((2 * v372 - 1280292066) & 0xF799D97E) - 710602162) ^ v374 ^ *(_DWORD *)&v168[4 * (((v371 & 0x151B ^ 0xC168D411) + (v371 & 0xAE4 ^ 0x100AA1) - 1) ^ 0xC178C947)] ^ (v378 - ((2 * v378 + 1068820156) & 0x57F5A790) - 1948956890);
  v380 = (((HIBYTE(v359) ^ 0x56) + (HIBYTE(v359) ^ 0x589A5BAB)) ^ 0x65FB7BDF)
       + ((2 * ((HIBYTE(v359) ^ 0x56) + (HIBYTE(v359) ^ 0x589A5BAB))) & 0x8134B7BE)
       + *(_DWORD *)&v167[4 * (HIBYTE(v359) ^ 5)];
  v381 = (2 * v354) & 0x1FA ^ 0x1A;
  v382 = *(_DWORD *)&v175[4 * ((((v348 >> 8) & 0x31) + ((v348 >> 8) & 0xCE ^ 0x85) + 1791) ^ 0x74A)] ^ *(_DWORD *)&v168[4 * ((((2 * (BYTE2(v341) ^ 0x9CC0544B)) & 0x298020AE) - (BYTE2(v341) ^ 0x9CC0544B) + 1745547176) ^ 0xF4CABBD2)] ^ *(_DWORD *)&v178[4 * ((((2 * (v354 ^ 0x88)) & 0x174) - (v354 ^ 0x88) + 4421) ^ 0x1168)] ^ (v381 + (v354 ^ 0xBF7763F2) - ((2 * (v381 + (v354 ^ 0xBF7763F2)) + 1951336178) & 0x633D0DCE) + 1910970976) ^ BYTE1(v348) ^ (v380 - ((2 * v380 + 397557942) & 0x1DB763DE) + 448057930);
  v383 = (HIBYTE(v367) ^ 0x589A5B3B) + (HIBYTE(v367) ^ 0xC6);
  v384 = (v383 ^ 0xBFFE7BFE) + ((2 * v383) & 0x3134B7FC) + *(_DWORD *)&v167[4 * (HIBYTE(v367) ^ 0x95)];
  v385 = ((2 * v382) ^ 0x1D2) + (v382 ^ 0x7DEBF616);
  v386 = *(_DWORD *)&v175[4 * (((BYTE1(v379) ^ 0xF7) - ((2 * (BYTE1(v379) ^ 0xF7)) & 0x120) + 8336) ^ 0x2090)] ^ *(_DWORD *)&v168[4 * ((((2 * (BYTE2(v370) ^ 0x5B)) & 0x13A) - (BYTE2(v370) ^ 0x5B) + 610) ^ 0x259)] ^ *(_DWORD *)&v178[4 * ((((2 * (v382 ^ 0xF021219)) & 0x404251C) - (v382 ^ 0xF021219) - 1111964303) ^ 0xB2BAD72B)] ^ (v385 - ((2 * v385 + 2003165422) & 0x73001D50) + 999554847) ^ (v384 - ((2 * v384 + 1672233080) & 0xCCBEEA52) + 406164837);
  v387 = (HIBYTE(v370) ^ 0x589A5B93) + (HIBYTE(v370) ^ 0x6E);
  v388 = v387 ^ 0x73FDBFEB;
  v389 = (2 * v387) & 0xA1303FD6;
  v390 = ((2 * (BYTE2(v379) ^ 0x52)) & 0x1D6) - (BYTE2(v379) ^ 0x52) - 414570988;
  v391 = v388 + v389 + *(_DWORD *)&v167[4 * (HIBYTE(v370) ^ 0x3D)];
  v392 = v391 - ((2 * v391 - 72501090) & 0xF632D868) - 118470525;
  v393 = ((BYTE1(v382) ^ 0xD | 0x24B016B3) - (BYTE1(v382) ^ 0xD | 0xDB4FE94C) - 615519924) ^ 0x2F29489C;
  v394 = (((2 * (BYTE1(v382) ^ 0x8A)) & 0x10A) - (BYTE1(v382) ^ 0x8A) - 1249899398) ^ 0xADA80D6A;
  v395 = ((2 * v367) & 0x1CE ^ 0xC4) + (v367 ^ 0xFBF33995);
  v396 = *(_DWORD *)&v175[4 * ((((2 * v394) | 0x53272844) - v394 + 1449946078) ^ 0xB1BB9582)] ^ *(_DWORD *)&v178[4 * (((v367 & 0x42) + (v367 ^ 0xFFFFFFF2) + (v367 | 0xECABA8BD) + 1) ^ 0xECABA868)] ^ v392 ^ (((2 * v393) | 0x1B826C5C) - v393 - 230766126) ^ (v395 - 90473961 + ((2 * v395 + 6942) & 0x190E ^ 0x8EE27FFF)) ^ *(_DWORD *)&v168[4 * (((v390 & 0x264A228E ^ 0x18B1188C) + (v390 ^ 0x274EE213) - ((v390 ^ 0x274EE213) & 0x8004828E)) ^ 0x7EFB7E0A)];
  v397 = (HIBYTE(v379) ^ 0xDA) + (HIBYTE(v379) ^ 0x589A5B27);
  LOWORD(v392) = (BYTE2(v382) & 0xFA ^ 0x153) - (HIWORD(v382) | 0x3FA);
  v398 = (v397 ^ 0xF8FBCDFB) + ((2 * v397) & 0xB1349BF6) + *(_DWORD *)&v167[4 * (HIBYTE(v379) ^ 0x89)];
  v399 = v398 - ((2 * v398 - 240018306) & 0xD8C47B76) - 449115142;
  v400 = ((2 * (v370 & 0x7F)) ^ 0x14) + (v370 ^ 0x3FBFFFF5);
  v382 >>= 24;
  v401 = *(_DWORD *)&v167[4 * (v382 ^ 0x4E)];
  v402 = *(_DWORD *)&v175[4
                        * ((((2 * (BYTE1(v367) ^ 0x3003C6E2)) | 0x392AE47A) - (BYTE1(v367) ^ 0x3003C6E2) + 1667927491) ^ 0xAC96B4F9)] ^ *(_DWORD *)&v168[4 * (((_WORD)v392 + 1022) & 0x3FF ^ 0x151)] ^ *(_DWORD *)&v178[4 * ((((2 * (v370 ^ 0x6000248F)) & 0x8000406C) - (v370 ^ 0x6000248F) + 584209609) ^ 0x42D27066)] ^ (v400 + 87890958 + ((2 * v400 + 12439534) & 0xBC682C ^ 0xEDFFFFFF)) ^ (((2 * (BYTE1(v367) ^ 0x30262)) | 0x2C8F374C) - (BYTE1(v367) ^ 0x30262) - 373791654) ^ v399;
  v403 = (((v382 ^ 0x589A5BE0) + (v382 ^ 0x1D)) ^ 0xDFF6DABF)
       + ((2 * ((v382 ^ 0x589A5BE0) + (v382 ^ 0x1D))) & 0xB124B57E)
       + v401;
  v404 = v403 - ((2 * v403 + 599491318) & 0x4F72D602) - 1181275012;
  v405 = (((2 * (BYTE2(v367) ^ 0x65)) | 0x38BCE1F0) - (BYTE2(v367) ^ 0x65) - 475951352) ^ 0x1C1F40D8;
  v406 = *(_DWORD *)&v178[4
                        * (((v379 ^ 0x1840AD4)
                          + (v379 & 0x45 ^ 0x1629D501)
                          - ((v379 ^ 0x1840AD4) & 0x800A45)) ^ 0x172DD5DD)];
  v407 = (v379 ^ 0x75757F10)
       + ((2 * v379) & 0x1EC ^ 0x1CC)
       + ((v406 & 0x8000000 | ((((v406 & 0x8000000u) >> 27) & 1) << 28) | 0xE7EBDB8E) ^ 0xEFFFFFFF);
  v408 = *(_DWORD *)&v175[4
                        * ((((2 * (BYTE1(v370) ^ 0x40480017)) & 0x80800050) - (BYTE1(v370) ^ 0x40480017) - 1564650281) ^ 0xE2F55457)] ^ *(_DWORD *)&v168[4 * (((v405 | 0xF9C78730) - (v405 | 0x63878CF) + 104364239) ^ 0xF986B710)] ^ (((2 * (BYTE1(v370) ^ 0x7E)) & 0x26) - (BYTE1(v370) ^ 0x7E) + 16876) ^ v404 ^ ((v406 & 0xF7FFFFFF ^ 0x61615980 | 0xBE5AD2D8) - (v406 & 0xF7FFFFFF ^ 0x61615980 | 0x41A52D27) + 1101344039) ^ (v407 - ((2 * v407 + 1747617310) & 0xB5F636F6) + 319839882);
  v409 = ((((v396 ^ 0x151C24E2) >> (HIBYTE(v370) & 0x18 ^ 8))
         - ((2 * ((v396 ^ 0x151C24E2) >> (HIBYTE(v370) & 0x18 ^ 8))) & 0xC59EBDB0)
         - 489726248) ^ 0xE2CF5ED8) >> (HIBYTE(v370) & 0x18 ^ 0x10);
  LOBYTE(v404) = v409 - ((2 * v409) & 0x42) - 95;
  v410 = *(_DWORD *)(v5 - 132);
  v411 = (char *)*(&off_10112C750 + (v410 ^ 0x61D9)) - 2015182238;
  v412 = (char *)*(&off_10112C750 + v410 - 26377) - 2073865694;
  v413 = *(_DWORD *)&v411[4 * (HIBYTE(v386) ^ 0x3A)] + (HIBYTE(v386) ^ 0xB16EEB25) - 56135139;
  v414 = v413 - ((2 * v413) & 0x41802220) + 549458192;
  v415 = (char *)*(&off_10112C750 + v410 - 21991) - 1552305858;
  v416 = *(_DWORD *)&v415[4 * ((((v402 >> 8) & 0xE3 ^ 0x182) + ((v402 >> 8) & 0x1C ^ 0x19) - 1) ^ 0x1C6)];
  v417 = v416 + 323950892 + ~(2 * ((v416 + 937972112) & 0x5B66C79F ^ v416 & 4));
  v418 = (char *)*(&off_10112C750 + v410 - 24943) - 851633210;
  v419 = (((2 * v417) ^ 0xB6CD8F36) - ((2 * ((2 * v417) ^ 0xB6CD8F36)) & 0x3C047BD0) + 1040334312) & 0x2CC20D58 ^ 0xFF3FFFEE;
  v420 = v418[v408 ^ 4];
  v421 = (v420 + 3) ^ 0x35 ^ (((32 - 8 * v420) & 0x28 ^ 0xF8) + 2 * ((32 - 8 * v420) & 0x28) - 115);
  v422 = v417 ^ *(_DWORD *)&v412[4 * (((BYTE2(v396) ^ 0x6A) - ((2 * (BYTE2(v396) ^ 0x6A)) & 0xB8) + 1372) ^ 0x53F)] ^ (v421 - ((2 * v421) & 0x14A) + 51667621) ^ (v419 - 953211241 + ((2 * v419) & 0x8040820 ^ 0x79A5BAF3)) ^ v414;
  LOWORD(v419) = ((v404 & 6 ^ 0x5D03) + (v404 & 0xF9) - 1) ^ 0xF1;
  v423 = *(_DWORD *)&v411[4 * (((v419 & 0x65 ^ 0x50882825) + (v419 & 0x59A ^ 0x4010503) - 1) ^ 0x5489288E)]
       + (((v404 | 0x194) - (v404 | 0x26B) + 619) ^ 0xB16EEAD1)
       - 56135139;
  v424 = v423 - ((2 * v423) & 0xB63AF466) + 1528658483;
  v425 = *(_DWORD *)&v415[4
                        * (((BYTE1(v408) ^ 0x27) + ((v408 >> 8) & 0xA4 ^ 0x7383F780) - ((BYTE1(v408) ^ 0x27) & 0xA4)) ^ 0x7383F77B)];
  v426 = v425 - 2 * ((v425 + 937972112) & 0x22B979DD ^ v425 & 5) + 1520552808;
  v427 = (((2 * v426) ^ 0x4572F3B0) - 2 * (((2 * v426) ^ 0x4572F3B0) & 0x1FA87FD6 ^ (2 * v426) & 4) + 531136467) & 0x2CC20D58 ^ 0xDFBDFFF6;
  v428 = v418[(v386 ^ BYTE1(v379)) ^ 0x7ELL];
  v429 = (2 * v428 + 6) & 0x2C;
  v428 -= 101;
  v430 = v428 - v429 - 2;
  v431 = (((8 * v430) ^ 0x30) - 16 * (v428 & 1) + 14) & 0x28 ^ 0xFFFFFFD8;
  v432 = v430 ^ 0xFB ^ (v431 - ((2 * v431) & 0xD0) - 19);
  v433 = v426 ^ *(_DWORD *)&v412[4 * (BYTE2(v402) ^ 0x85)] ^ (v432 - ((2 * v432) & 0x1A6) - 618504493) ^ v424 ^ (v427 - 410298779 + ((2 * v427) & 0x49040880 ^ 0x79ED5BB7));
  v434 = *(_DWORD *)&v411[4 * (HIBYTE(v402) ^ 0x6B)] + (HIBYTE(v402) ^ 0xB16EEB74) - 56135139;
  v435 = *(_DWORD *)&v415[4 * (BYTE1(v386) ^ 0x43)];
  v436 = v435 - ((2 * v435 + 1875944224) & 0xF0EC06D4) + 811488506;
  v437 = (((2 * v436) ^ 0xF0EC06D4) - 2 * (((2 * v436) ^ 0xF0EC06D4) & 0x1DDE1CDE ^ (2 * v436) & 2) + 1037966557) & 0x2CC20D58 ^ 0xFFFFFEFE;
  v438 = v437 - ((2 * v437) & 0x50000290) + 1423135016;
  v439 = ((v396 ^ 0xA0) - ((2 * (v396 ^ 0xA0)) & 0x1BC) + 248315614) ^ 0xD44CFEEC;
  v440 = v418[(((2 * v439) & 0x100051E) - v439 + 2052907376) ^ 0xA0DCE1C3];
  v441 = v440 - ((2 * v440 + 6) & 0x4E) - 86;
  v442 = (((8 * v441) ^ 0x38) - ((2 * ((8 * v441) ^ 0x38)) & 0x20) + 55) & 0x2F;
  v443 = v441 ^ 0xD ^ ((v442 ^ 0xF7) + ((2 * v442) ^ 0xB1) + 43);
  v444 = v443 - ((2 * v443) & 0x1D0) + 645985000;
  v445 = (HIBYTE(v408) ^ 0xB16EEB96) - 56135139 + *(_DWORD *)&v411[4 * (HIBYTE(v408) ^ 0x89)];
  v446 = *(_DWORD *)&v415[4
                        * ((1182262120 - (BYTE1(v396) ^ 0xC3) + ((2 * (BYTE1(v396) ^ 0xC3)) & 0xFFFFFF1F) + 8) ^ 0x4677E368)];
  v447 = v446 - 2 * ((v446 + 937972112) & 0x62F0C6DE ^ v446 & 0xA) + 450435172;
  v448 = (((2 * v447) ^ 0xC5E18DA8) - ((2 * ((2 * v447) ^ 0xC5E18DA8)) & 0x319DB934) + 953080986) & 0x2CC20D58 ^ 0xFBFFFEBE;
  v449 = v418[((v402 & 0x55 ^ 0x151) + (v402 & 0xAA ^ 0xA1) - 1) ^ 0x194];
  v450 = v449 - ((2 * v449 + 6) & 0xFFFFFFDC) + 113;
  v451 = *(_DWORD *)&v412[4 * (BYTE2(v408) ^ 0xBF)] ^ v436 ^ (v434 - ((2 * v434) & 0x855DD57E) - 1028724033) ^ v438 ^ 0x3F53AB7F ^ v444;
  v452 = v450 ^ 0x8F ^ (((24 - ((8 * v450) ^ 0x70)) & 0x28 ^ 0xD8)
                      + ((2 * ((24 - ((8 * v450) ^ 0x70)) & 0x28)) ^ 0xEF)
                      - 86);
  v453 = *(_DWORD *)(v5 - 136);
  v454 = v422 ^ v433 ^ 0x61BCA3F1 ^ v451;
  v455 = v453 ^ *(_DWORD *)&v412[4 * (BYTE2(v386) ^ 0xB1)] ^ (v445 - ((2 * v445) & 0x571D0488) + 730759748) ^ v447 ^ (v452 - ((2 * v452) & 0x1B2) + 2128553689) ^ (v448 - 1399672228 + ((2 * v448) & 0x590400B0 ^ 0xFFDE9BFB)) ^ 0x2CDB5993 ^ v451;
  v456 = v455 ^ v454;
  v457 = (char *)*(&off_10112C750 + v410 - 22713) - 493425198;
  LOBYTE(v445) = v457[((v455 ^ v454) >> 24) ^ 0x68];
  v458 = *(_QWORD *)(v5 - 224);
  *(_BYTE *)(v458 - 0x4A8D2AE11F6BC807) = (-((14 - 2 * v445) & 8) - 73 * v445 + 27) ^ 0xE5;
  LODWORD(v412) = v454 ^ v453;
  v459 = ((v454 ^ v453) >> 16) ^ 0xB7;
  v460 = (char *)*(&off_10112C750 + (v410 ^ 0x78D7)) - 631120342;
  LOBYTE(v459) = v460[(((((2 * v459) | 0x98CAF82E) - v459 + 865764329) & 0x8001DF13 ^ 0x30808611)
                     + ((((2 * v459) | 0x98CAF82E) - v459 + 865764329) & 0x4C6420EC ^ 0x4C340005)
                     - 1) ^ 0xB0D1FA29];
  **(_BYTE **)(v5 - 232) = (3 * v459 + (~(6 * v459 + 124) | 0x4D) - 104) ^ (12 * v459 - ((24 * v459 - 16) & 0xDF) + 101) ^ 0x90;
  LOBYTE(v448) = v457[(v412 >> 24) ^ 0xCFLL];
  *(_BYTE *)(v458 - 0x4A8D2AE11F6BC801) = (-73 * v448 - ((110 * v448 + 46) & 0x60) - 57) ^ 0x51;
  v461 = v455 ^ v433;
  v462 = (char *)*(&off_10112C750 + (v410 ^ 0x6E14)) - 502568499;
  *(_BYTE *)(v458 - 0x4A8D2AE11F6BC7FFLL) = v462[((BYTE1(v461) ^ 0x44425AF)
                                                - ((2 * (BYTE1(v461) ^ 0x44425AF)) & 0x80236u)
                                                + 319258907) ^ 0x1743A4E4] ^ ((BYTE1(v461) ^ 0x92)
                                                                              - ((2 * (BYTE1(v461) ^ 0x92) - 46) & 0x8F)
                                                                              - 80) ^ 0x58;
  v463 = (char *)*(&off_10112C750 + (v410 ^ 0x6C51)) - 1122957846;
  *(_BYTE *)(v458 - 0x4A8D2AE11F6BC805) = v463[((v412 ^ 0x40834627)
                                                + (v412 & 0xEF ^ 0x855821C8)
                                                - ((v412 ^ 0x40834627) & 0x400306EF)) ^ 0x85D861E1] ^ 0x3F;
  v464 = v422 ^ v453;
  *(_BYTE *)(v458 - 0x4A8D2AE11F6BC7F9) = v463[(((2 * (v464 ^ 0xE5)) & 0x18C)
                                                - (v464 ^ 0xE5u)
                                                + 1081) ^ 0x4E4] ^ 0x3F;
  v465 = ((BYTE1(v412) ^ 0xC0) - ((v412 >> 7) & 0x12) + 2136512777) ^ 0xEBD89219;
  *(_BYTE *)(v458 - 0x4A8D2AE11F6BC7FCLL) = v462[((v465 | 0x3C7B1DFD) - (v465 | 0xC384E202) - 1014701566) ^ 0xA8FB160ALL] ^ ((BYTE1(v412) ^ 0xE5) - ((2 * (BYTE1(v412) ^ 0xE5) - 46) & 0xF3) + 98) ^ 0xE6;
  LOBYTE(v465) = v460[(((2 * (BYTE2(v461) ^ 0x708B8E4)) | 0xAC3E3294) - (BYTE2(v461) ^ 0x708B8E4) + 702604982) ^ 0xD117A192];
  *(_BYTE *)(v458 - 0x4A8D2AE11F6BC7FELL) = (3 * v465 - ((6 * v465 + 124) & 0x6A) + 115) ^ (12 * v465
                                                                                          - ((24 * v465 - 16) & 0xAA)
                                                                                          - 51) ^ 0x44;
  LOBYTE(v465) = v457[HIBYTE(v464) ^ 0x7BLL];
  *(_BYTE *)(v458 - 0x4A8D2AE11F6BC802) = ((~(110 * v465 + 46) | 0x15) - 73 * v465 - 115) ^ 0x94;
  v466 = ((BYTE2(v456) ^ 0x8A) + (HIWORD(v456) & 0x8F ^ 0x92FE8E05) - ((BYTE2(v456) ^ 0x8A) & 0xFFFFFF8F)) ^ 0x83DECECF;
  LOBYTE(v466) = v460[((v466 | 0xFDFB8D01) - (v466 | 0x20472FE) + 33846014) ^ 0xECDBCDD7];
  *(_BYTE *)(v458 - 0x4A8D2AE11F6BC800) = (12 * v466 - ((24 * v466 + 112) & 0x78) + 52) ^ (3 * v466
                                                                                           - ((6 * v466 + 124) & 0x42)
                                                                                           + 95) ^ 0xB9;
  v467 = ((2 * (((v464 >> 8) ^ 0xC3B41C) + 105)) & 0xFC) + ((((v464 >> 8) ^ 0xC3B41C) + 105) ^ 0x7E);
  v468 = v462[(2068305472 - (BYTE1(v464) ^ 0x26) + ((2 * (BYTE1(v464) ^ 0x26)) & 0x8E) + 120) ^ 0x7B47D640] ^ 0x1F;
  LOBYTE(v411) = v468 & ((v467 - ((2 * v467 + 4) & 0x54) + 44) ^ 0xAA);
  LOBYTE(v467) = v468 | (v467 - 2 * ((v467 + 2) & 0x47 ^ v467 & 1) + 72) ^ 0xC6;
  *(_BYTE *)(v458 - 0x4A8D2AE11F6BC806) = (v467 - ((2 * v467) & 0x92) + 73) ^ ((_BYTE)v411
                                                                               + (~(2 * (_BYTE)v411) | 0x3F)
                                                                               - 31) ^ 0xA9;
  v469 = (((v464 >> 15) & 0x1C0) + (BYTE2(v464) ^ 0xFFFFFFF7) + 1771757344) ^ 0x38C6DB33;
  LOBYTE(v469) = 3 * v460[(((2 * v469) | 0xD921651E) - v469 + 326061425) ^ 0xBDCCB61DLL];
  *(_BYTE *)(v458 - 0x4A8D2AE11F6BC7FBLL) = (4 * v469 - 2 * ((4 * v469 + 56) & 0x3C ^ (4 * v469) & 4) - 77) ^ (v469 - 2 * ((v469 + 62) & 0xC3 ^ v469 & 1)) ^ 0xDD;
  v470 = *(_QWORD *)(v5 - 208);
  *(_BYTE *)(v458 - 0x4A8D2AE11F6BC7FALL) = v463[((v456 ^ 0xF4)
                                                + 658485285
                                                - ((2 * (v456 ^ 0xF4)) & 0x8C)
                                                + 33) ^ 0x273FB025] ^ 0x3F;
  LOBYTE(v457) = v457[HIBYTE(v461) ^ 7];
  *(_BYTE *)(v458 - 0x4A8D2AE11F6BC7FDLL) = (-73 * (_BYTE)v457 - ((110 * (_BYTE)v457 + 46) & 0xE0) - 121) ^ 0x91;
  LODWORD(v457) = ((v461 & 0xB9 ^ 0x604B098) + (v461 & 0x46 ^ 7) - 1) ^ 0xB0591BD;
  *(_BYTE *)(v458 - 0x4A8D2AE11F6BC804) = v463[(v457 - ((2 * (_DWORD)v457) & 0x183C) - 760591330) ^ 0xDFAB6DE0] ^ 0x3F;
  *(_BYTE *)(v458 - 0x4A8D2AE11F6BC803) = (((2 * BYTE1(v456) + 2) & 0xA) - BYTE1(v456) + 17) ^ 0x65 ^ v462[(((((v456 >> 8) & 0x90) + (BYTE1(v456) ^ 0x9A)) | 0x800) - ((BYTE1(v456) ^ 0x9A) & 0x90)) ^ 0x8C8];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 - 216) + 8 * v410) - 4))(v470);
}

uint64_t sub_1000E7E9C(uint64_t result)
{
  int v1;
  int v2;

  if ((v1 ^ 0x2F7FFF6B) + ((2 * v1) & 0x5EFEB0D0) == 796917611)
    v2 = 2134650450;
  else
    v2 = 2134608426;
  *(_DWORD *)(result + 16) = v2;
  return result;
}

void sub_1000E7F10(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1000E7FA4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 + v1)) - 12))();
}

uint64_t sub_1000E7FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t))(a2
                                            + 8
                                            * (((*(_DWORD *)(*(_QWORD *)(v5 + 8 * (v4 ^ (v3 + 221))) - 2083519394)
                                               - 394808572 < ((v4 + v2) ^ 0xFFFFE5A5))
                                              * ((v4 + 1721632257) ^ 0x7258)) ^ (v2 + v4 + 2814))))(a1);
}

uint64_t sub_1000E805C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, int a4)
{
  int v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a2
                                                      + 8
                                                      * (((a4 - 394818136 + (v4 ^ 0x7F9Bu) + 6225 < 0x2E)
                                                        * (2 * (v4 ^ 0x7F9B) - 6768)) | v4))
                                          - 4))(a1);
}

uint64_t sub_1000E80B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a3
                                                     + 8
                                                     * ((28422
                                                       * (((((v4 - 4955) | 0x844) - 508260532) ^ (v4 + 446453364) & 0xE563F6A5)
                                                        + *(_DWORD *)(v3 - 2083519390) > 0xFFFFFFE0)) ^ v4)))(a1, a2);
}

uint64_t sub_1000E8120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, int a4, int a5)
{
  int v5;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a2
                                                      + 8
                                                      * ((1977
                                                        * (a5 - 508247792 + (v5 ^ 0x77F8u) + 5399 >= 7 * (v5 ^ 0x77F8u) - 9581)) ^ v5))
                                          - 4))(a1);
}

uint64_t sub_1000E8178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;

  return (*(uint64_t (**)(uint64_t))(a2 + 8 * v2))(a1);
}

uint64_t sub_1000E81B8@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * v1) - ((v1 + 16795148) | 0x98620C20) + 2573364372))();
}

uint64_t sub_1000E81EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 8) = v1;
  return result;
}

void sub_1000E81F8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 60) + 210615973 * ((a1 - 2 * (a1 & 0xBCE28F0D) - 1126002931) ^ 0x150D4612);
  __asm { BR              X8 }
}

uint64_t sub_1000E82D0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((26166
                                          * (((*(_QWORD *)(v1 + 16) == 0) ^ ((v0 ^ 0x9B) + 1)) & 1)) ^ (v0 - 13953)))
                            - 4))();
}

uint64_t sub_1000E8318()
{
  int v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (v0 | (52 * (((v1 ^ *(_BYTE *)(v2 + 48)) ^ 0x70) == 0))))
                            - ((v0 - 35815) | 0x6882u)
                            + 26771))();
}

uint64_t sub_1000E8368()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  BOOL v3;
  int v7;

  if (v1[3])
    v3 = v1[5] == 0;
  else
    v3 = 1;
  v7 = !v3 && v1[8] != 0 && v1[1] != 0x153ED30AE03C6166 && *v1 != 0x5F8A4050DD942E7CLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((651 * v7) ^ (v0 - 9061)))
                            - ((v0 - 23014) ^ 0x3216)))();
}

uint64_t sub_1000E83E4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((19519 * (*(_DWORD *)(v0 - 0x5F8A4050DD942E7CLL) == 838707769)) ^ v1))
                            - ((v1 + 11902) | 0x803u)
                            + 26775))();
}

uint64_t sub_1000E843C@<X0>(unint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);

  v9 = *(_QWORD *)(v2 - 0x5F8A4050DD942E74) + 0x57C266CB223BC3B4;
  v10 = *(_QWORD *)(v7 + 8 * ((a2 + 1065395887) ^ 0x3F8119FD)) - 12;
  STACK[0x530] = v3;
  *(_QWORD *)(v8 - 160) = v10;
  *(_QWORD *)(v8 - 152) = 0x5D6F9E6046D66DA0;
  *(_QWORD *)(v8 - 136) = (a2 + 1065395887) ^ 0x111Cu;
  *(_QWORD *)(v8 - 144) = v9;
  *(_DWORD *)(v8 - 128) = a2 + 1065395887;
  *(_DWORD *)(v8 - 124) = (a2 + 1065395887) | 5;
  *(_DWORD *)(v8 - 104) = a2
                        - 967721411
                        * ((((v8 - 120) | 0x6C01680F) - (v8 - 120) + ((v8 - 120) & 0x93FE97F0)) ^ 0xCA3CF920)
                        - 218944086;
  *(_QWORD *)(v8 - 112) = v8 - 160;
  v11 = (void (*)(uint64_t))(*(_QWORD *)(v5 + 8 * (a2 ^ 0x6E4C)) - 450234315);
  STACK[0x370] = v4;
  STACK[0x5A8] = v6;
  STACK[0x5A0] = a1;
  v11(v8 - 120);
  return (*(uint64_t (**)(unint64_t))(v7 + 8 * *(int *)(v8 - 120)))(STACK[0x5A0]);
}

uint64_t sub_1000E8558()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = v0 != 0x153ED30AE03C6166 && *v2 != 0x5AD3795249AA9ECLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((39 * v5) ^ (v1 - 13953)))
                            - ((v1 + 831165027) & 0xCE75371B ^ 0x321ELL)))();
}

uint64_t sub_1000E85CC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((21293
                                          * ((((*(_DWORD *)(v2 + 52) ^ v1) + 5) & 0xF)
                                           + ((a1 + 13953) ^ 0x6FA8D366)
                                           - ((2 * ((*(_DWORD *)(v2 + 52) ^ v1) + 5)) & 0x16) == 1873329149)) ^ a1))
                            - 4))();
}

uint64_t sub_1000E862C@<X0>(int a1@<W8>)
{
  unsigned int v1;
  unsigned __int8 v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = v1 > 7 && v2 > 7u;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((3041 * (a1 ^ 0x3219)) ^ 0x4B38) + 3060) * v5) ^ a1)) - 4))();
}

uint64_t sub_1000E8674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  STACK[0x4E8] = v13;
  LODWORD(STACK[0x4F0]) = v12;
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 + 8 * v11) - 8);
  LODWORD(STACK[0x52C]) = -82;
  LODWORD(STACK[0x528]) = -356823780;
  LODWORD(STACK[0x524]) = -1948018194;
  LODWORD(STACK[0x518]) = 474086122;
  LODWORD(STACK[0x510]) = 1602752663;
  LODWORD(STACK[0x508]) = 415490911;
  LODWORD(STACK[0x500]) = 1897591101;
  *(_DWORD *)(v15 - 252) = -503045117;
  *(_DWORD *)(v15 - 244) = 1554138268;
  STACK[0x4F8] = a1 + 6;
  *(_DWORD *)(v15 - 248) = -135452675;
  *(_DWORD *)(v15 - 256) = 486381322;
  *(_QWORD *)(v15 - 200) = v14;
  return v16(a1, 3342017332, 3854398160, a4, 1160734062, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1000E8828()
{
  unsigned int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  *(_DWORD *)(v5 - 240) = v1 - 5916;
  v6 = *(unsigned __int8 *)(STACK[0x5A0] + (v2 + v3 + 6));
  v7 = *(unsigned __int8 *)(STACK[0x5A0] + v0);
  LODWORD(STACK[0x544]) = v3 - 8;
  LODWORD(STACK[0x584]) = v6 - ((2 * v6) & 0xFFFFFF9A) + 77;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v4 + 8 * v1) - 8))((v7 ^ 0x5B) + ((2 * v7) & 0xFFFFFFB6) - 9);
}

uint64_t sub_1000E8974@<X0>(unsigned __int8 a1@<W0>, int a2@<W2>, unsigned __int8 a3@<W3>, int a4@<W4>, unsigned __int8 a5@<W7>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  unsigned __int8 v9;
  int v10;
  unsigned __int8 v11;
  int v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  char v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  unsigned int v38;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unint64_t v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  int v89;
  int v90;
  unsigned int v91;
  int v92;
  int v93;
  unsigned int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  int v115;
  unsigned int v116;
  unsigned int v117;
  int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  unsigned int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  int v184;
  int v185;
  unsigned int v186;
  unsigned int v187;
  int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  BOOL v217;
  int v218;
  int v219;
  int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unint64_t v245;
  int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  int v255;
  unsigned int v256;
  int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  int v284;
  int v285;
  int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  int v304;
  unsigned int v305;
  int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  int v319;
  int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  unsigned int v344;
  int v345;
  unsigned int v346;
  unsigned int v347;
  int v348;
  int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  int v354;
  int v355;
  int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  unsigned int v360;
  int v361;
  unsigned int v362;
  unsigned int v363;
  int v364;
  unsigned int v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  unint64_t v371;
  int v372;
  unsigned int v373;
  int v374;
  int v375;
  unsigned int v376;
  int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  int v381;
  int v382;
  unsigned int v383;
  unsigned int v384;
  unsigned int v385;
  unsigned int v386;
  int v387;
  unsigned int v388;
  int v389;
  int v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  unsigned int v398;
  int v399;
  int v400;
  unsigned int v401;
  int v402;
  unsigned int v403;
  int v404;
  unsigned int v405;
  unsigned int v406;
  int v407;
  unsigned int v408;
  int v409;
  unsigned int v410;
  int v411;
  int v412;
  int v413;
  unsigned int v414;
  int v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  int v425;
  int v426;
  unsigned int v427;
  unsigned int v428;
  int v429;
  int v430;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  unsigned int v435;
  int v436;
  unsigned int v437;
  unsigned int v438;
  int v439;
  unsigned int v440;
  int v441;
  int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  int v447;
  int v448;
  int v449;
  unsigned int v450;
  int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  int v456;
  int v457;
  int v458;
  int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  int v464;
  unsigned int v465;
  int v466;
  int v467;
  unsigned int v468;
  int v469;
  unsigned int v470;
  int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  int v476;
  unsigned int v477;
  int v478;
  int v479;
  int v480;
  int v481;
  int v482;
  int v483;
  unsigned int v484;
  unsigned int v485;
  int v486;
  unsigned int v487;
  unsigned int v488;
  int v489;
  int v490;
  unsigned int v491;
  int v492;
  unsigned int v493;
  unsigned int v494;
  unsigned int v495;
  int v496;
  int v497;
  unsigned int v498;
  int v499;
  unsigned int v500;
  int v501;
  unsigned int v502;
  int v503;
  int v504;
  unsigned int v505;
  unsigned int v506;
  int v507;
  int v508;
  unsigned int v509;
  unsigned int v510;
  int v511;
  int v512;
  int v513;
  unsigned int v514;
  unsigned int v515;
  int v516;
  unsigned int v517;
  unsigned int v518;
  unsigned int v519;
  unsigned int v520;
  int v521;
  int v522;
  unsigned int v523;
  unsigned int v524;
  unsigned int v525;
  unsigned int v526;
  unsigned int v527;
  int v528;
  int v529;
  unsigned int v530;
  int v531;
  unsigned int v532;
  int v533;
  unsigned int v534;
  int v535;
  int v536;
  int v537;
  unsigned int v538;
  unsigned int v539;
  int v540;
  unsigned int v541;
  unsigned int v542;
  int v543;
  unsigned int v544;
  int v545;
  int v546;
  unsigned int v547;
  unsigned int v548;
  unsigned int v549;
  unsigned int v550;
  int v551;
  unsigned int v552;
  int v553;
  unsigned int v554;
  unsigned int v555;
  int v556;
  int v557;
  unsigned int v558;
  int v559;
  unsigned int v560;
  int v561;
  unsigned int v562;
  unsigned int v563;
  unsigned int v564;
  int v565;
  unsigned int v566;
  unsigned int v567;
  unsigned int v568;
  int v569;
  int v570;
  int v571;
  unsigned int v572;
  unsigned int v573;
  int v574;
  unsigned int v575;
  unsigned int v576;
  int v577;
  unsigned int v578;
  int v579;
  int v580;
  int v581;
  unsigned int v582;
  int v583;
  unsigned int v584;
  unsigned int v585;
  unsigned int v586;
  unsigned int v587;
  int v588;
  unsigned int v589;
  int v590;
  unsigned int v591;
  unsigned int v592;
  unsigned int v593;
  unsigned int v594;
  unsigned int v595;
  int v596;
  int v597;
  int v598;
  int v599;
  unsigned int v600;
  int v601;
  unsigned int v602;
  unsigned int v603;
  unsigned int v604;
  unsigned int v605;
  unsigned int v606;
  unsigned int v607;
  unsigned int v608;
  unsigned int v609;
  unsigned int v610;
  unsigned int v611;
  int v612;
  int v613;
  unsigned int v614;
  unsigned int v615;
  unsigned int v616;
  unsigned int v617;
  unsigned int v618;
  int v619;
  int v620;
  int v621;
  int v622;
  unsigned int v623;
  int v624;
  int v625;
  unsigned int v626;
  unsigned int v627;
  unsigned int v628;
  unsigned int v629;
  unsigned int v630;
  unsigned int v631;
  unsigned int v632;
  unsigned int v633;
  int v634;
  int v635;
  int v636;
  unsigned int v637;
  unsigned int v638;
  int v639;
  unsigned int v640;
  int v641;
  unsigned int v642;
  unsigned int v643;
  int v644;
  int v645;
  int v646;
  int v647;
  unsigned int v648;
  unsigned int v649;
  unsigned int v650;
  unsigned int v651;
  unsigned int v652;
  unsigned int v653;
  unsigned int v654;
  int v655;
  unsigned int v656;
  int v657;
  unsigned int v658;
  unsigned int v659;
  unsigned int v660;
  int v661;
  unsigned int v662;
  unsigned int v663;
  unsigned int v664;
  int v665;
  int v666;
  int v667;
  int v668;
  int v669;
  int v670;
  unsigned int v671;
  int v672;
  int v673;
  unsigned int v674;
  unsigned int v675;
  unsigned int v676;
  int v677;
  unsigned int v678;
  int v679;
  unsigned int v680;
  int v681;
  unsigned int v682;
  unsigned int v683;
  int v684;
  unsigned int v685;
  unsigned int v686;
  unsigned int v687;
  unsigned int v688;
  int v689;
  unsigned int v690;
  int v691;
  unsigned int v692;
  unsigned int v693;
  int v694;
  int v695;
  unsigned int v696;
  int v697;
  int v698;
  unsigned int v699;
  unsigned int v700;
  int v701;
  int v702;
  unsigned int v703;
  int v704;
  unsigned int v705;
  unsigned int v706;
  int v707;
  unsigned int v708;
  int v709;
  unsigned int v710;
  int v711;
  unsigned int v712;
  int v713;
  unsigned int v714;
  int v715;
  unsigned int v716;
  int v717;
  unsigned int v718;
  int v719;
  unsigned int v720;
  unsigned int v721;
  unsigned int v722;
  int v723;
  unsigned int v724;
  unsigned int v725;
  unsigned int v726;
  int v727;
  unsigned int v728;
  unsigned int v729;
  int v730;
  unsigned int v731;
  unsigned int v732;
  unsigned int v733;
  int v734;
  unsigned int v735;
  unsigned int v736;
  unsigned int v737;
  unsigned int v738;
  unsigned int v739;
  unsigned int v740;
  int v741;
  int v742;
  unsigned int v743;
  unsigned int v744;
  unsigned int v745;
  unsigned int v746;
  unsigned int v747;
  unsigned int v748;
  unsigned int v749;
  unsigned int v750;
  unsigned int v751;
  unsigned int v752;
  unsigned int v753;
  unsigned int v754;
  unsigned int v755;
  int v756;
  unsigned int v757;
  int v758;
  unsigned int v759;
  unsigned int v760;
  unsigned int v761;
  unsigned int v762;
  unsigned int v763;
  int v764;
  unsigned int v765;
  int v766;
  unsigned int v767;
  unsigned int v768;
  unsigned int v769;
  unsigned int v770;
  unsigned int v771;
  unsigned int v772;
  int v773;
  unsigned int v774;
  unsigned int v775;
  int v776;
  unsigned int v777;
  unsigned int v778;
  int v779;
  int v780;
  int v781;
  unsigned int v782;
  unsigned int v783;
  unsigned int v784;
  unsigned int v785;
  unsigned int v786;
  unsigned int v787;
  unsigned int v788;
  int v789;
  unsigned int v790;
  unsigned int v791;
  int v792;
  int v793;
  unsigned int v794;
  unsigned int v795;
  unsigned int v796;
  int v797;
  unsigned int v798;
  int v799;
  unsigned int v800;
  int v801;
  unsigned int v802;
  unsigned int v803;
  unsigned int v804;
  unsigned int v805;
  int v806;
  unsigned int v807;
  int v808;
  unsigned int v809;
  int v810;
  int v811;
  unsigned int v812;
  unsigned int v813;
  unsigned int v814;
  unsigned int v815;
  unsigned int v816;
  unsigned int v817;
  unsigned int v818;
  unsigned int v819;
  int v820;
  unsigned int v821;
  unsigned int v822;
  unsigned int v823;
  unsigned int v824;
  unsigned int v825;
  int v826;
  unsigned int v827;
  int v828;
  unsigned int v829;
  unsigned int v830;
  unsigned int v831;
  unsigned int v832;
  unsigned int v833;
  int v834;
  int v835;
  int v836;
  int v837;
  int v838;
  unsigned int v839;
  unsigned int v840;
  _BOOL4 v841;
  int v842;
  unsigned int v843;
  unsigned int v844;
  int v845;
  uint64_t v846;

  v21 = *(_DWORD *)(v19 - 240);
  *(_DWORD *)(v19 - 224) = v6 + v8;
  *(_DWORD *)(v19 - 192) = v7 + a6;
  v22 = *v13;
  LODWORD(STACK[0x538]) = v21 ^ 0x636B;
  v23 = ((v22 ^ ((v21 ^ 0x6B) + 17)) + ((2 * v22) & 0xFB) + 64);
  LODWORD(STACK[0x588]) = v21 ^ 0xB618;
  v24 = v11 | ((v11 < 0x7Fu) << 8);
  *(_DWORD *)(v19 - 228) = v23 | ((v23 < ((v21 ^ 0x18) - 98)) << 8);
  v25 = (v10 - 88) + 1883888185 - ((2 * (v10 - 88)) & 0x72);
  LODWORD(STACK[0x568]) = v25;
  v26 = a5 | ((a5 < 0x23u) << 8);
  LODWORD(STACK[0x570]) = v9;
  LODWORD(STACK[0x560]) = v9 < 0x64u;
  v27 = a1 | ((a1 < 0x52u) << 8);
  v28 = (a4 - 3912721 + ~((2 * a4 + 744392020) & 0xD32A1288)) ^ (v14 - 934091151);
  v29 = v18 ^ 0x6CF559DA;
  v30 = a4
      - 1775287639
      + (v18 ^ 0x1D31DE7 ^ ((v28 ^ 0x69950944) + 1831224381 - 2 * ((v28 ^ 0x69950944) & 0x6D26443F ^ v28 & 2)));
  v31 = (v30 ^ 0x3FFF7ED7) + v16 + ((2 * v30) & 0x7FFEFDAE);
  v32 = a2 - 1075622818;
  v33 = (a2 - 1075622818) ^ 0x46554817 ^ (v31 - ((2 * v31 - 773305576) & 0x8CAA902E) - 1354142301);
  v34 = v16 - 1460427677;
  v35 = ((((v14 - 934091151) ^ v18 ^ 0x6CF559DA)
        + 1645518060
        + (~(2 * ((v14 - 934091151) ^ v18 ^ 0x6CF559DA)) | 0x3BD6C629)) ^ 0x9DEB6314)
      + v16
      - 1460427677;
  v36 = v16;
  v37 = v17 - a2 - (v14 + v15) + (v35 ^ 0x37FD35FF) + ((2 * v35) & 0x6FFA6BFE);
  v38 = ((v33 - 1475380739 - ((2 * v33) & 0x501EF3FA)) ^ 0xA80F79FD) + v15 - 531794273;
  v40 = ((v18 ^ 0x6CF559DA) - 755020969 - ((2 * (v18 ^ 0x6CF559DA) - 2) & 0xA5FE96B0)) ^ (v16 - 1460427677);
  v41 = (v40 ^ 0xD2FF4B58) + 1844631553 - 2 * ((v40 ^ 0xD2FF4B58) & 0x6DF2D803 ^ v40 & 2);
  v42 = v12 + v20 + (v38 ^ 0xF563FEEF) + ((2 * v38) & 0xEAC7FDDE) + v26 + 1235298940;
  HIDWORD(v43) = v42 - 657708007;
  LODWORD(v43) = v42 - 1661972631;
  v44 = ((v43 >> 3) ^ 0x695FEFBB) + a4 + ((2 * (v43 >> 3)) & 0xD2BFDF76);
  v45 = (v36 - ((2 * v36 + 300370120) & 0x1C50CCD8) - 1222898992) ^ v32;
  v46 = (((v45 ^ 0xE28666C) - 2112719802 - 2 * ((v45 ^ 0xE28666C) & 0x2127456 ^ v45 & 0x10)) ^ 0x82127446) + v34;
  v47 = v44 - ((2 * v44 + 1503569372) & 0xCFCFD638) + 347553290;
  v48 = v25 ^ 0x7049DA39;
  v49 = ((v37 - ((2 * v37 - 1956330782) & 0xEAC527BE) - 1156254384) ^ 0x928578C3 ^ v47) + (v25 ^ 0x7049DA39);
  v50 = a4 + (v49 ^ 0x2891CE0A) + ((2 * v49) & 0x51239C14);
  v51 = (v18 ^ 0xCFB2A1A8 ^ ((v41 ^ 0x6DF2D801) + v32 - ((2 * ((v41 ^ 0x6DF2D801) + v32)) & 0x468FF0E4) - 1555564430))
      + v15
      - 531794273;
  v52 = (v51 ^ 0xE7B725DF) + v17 + ((2 * v51) & 0xCF6E4BBE);
  HIDWORD(v43) = v50 + 1238831971;
  LODWORD(v43) = v50 - 867789981;
  v53 = v15 + v17 + (v46 ^ 0x80B00218) - ((2 * v46) & 0xFE9FFBCE);
  v54 = v32 ^ 0x3C34ED3D ^ (a2 - ((2 * a2 + 2143721662) & 0x7869DA7A) - 65521252);
  v55 = (v15 - 531794273) ^ (v54 - ((2 * v54) & 0x847BF5DC) + 1111358190) ^ 0xA5DA11F2 ^ v47;
  v56 = (v17 - 432848674) ^ 0xFEA3BC6F ^ (v55 - 22823825 - ((2 * v55) & 0xFD4778DE));
  v57 = v47 ^ 0xE7E7EB1C;
  v58 = (v47 ^ 0xE7E7EB1C) & ((v12 - ((865697346 - 2 * v17) & 0xA495F900) - 333988959) ^ 0xD24AFC80);
  v59 = v14 + ((v43 >> 13) ^ 0x7FECED57) + ((2 * (v43 >> 13)) & 0xFFD9DAAE) - 29395009;
  v60 = ((2 * v58) & 0xF217553C) + (v58 ^ 0x790BAA9E) + v59;
  v61 = (a3 | ((a3 < 0x29u) << 8)) + 130141854;
  LODWORD(STACK[0x554]) = v61;
  v62 = (v52 - ((2 * v52 - 50842114) & 0x988DB014) - 893193463) ^ 0x2BA13316 ^ v47;
  v63 = v14 + ((v43 >> 13) ^ 0x7FECED57) + ((2 * (v43 >> 13)) & 0xFFD9DAAE) + 1214642458;
  v64 = v14 + v61 + ((v63 + v62) ^ 0x3EF99F8D) + ((2 * (v63 + v62)) & 0x7DF33F1A);
  v65 = (v17 - 432848674) ^ 0x8665F3DA ^ (v60 - ((2 * v60 + 37072250) & 0xCCBE7B4) + 1468058263);
  v66 = v65 + 174826141 - ((2 * v65) & 0x14D7453A);
  v67 = (v56 + 1156884377 - ((2 * v56) & 0x89E94F32)) ^ 0x44F4A799 ^ v63;
  v68 = v67 - 2079496603 - ((2 * v67) & 0x81ACCCA);
  HIDWORD(v43) = v64 - 833993580;
  LODWORD(v43) = v64 + 441074836;
  v69 = v29 + ((v43 >> 26) ^ 0xEF3FEF75) + ((2 * (v43 >> 26)) & 0xDE7FDEEA) + 281022603;
  v70 = ((2 * v69) & 0x6F0FEAFE) + (v69 ^ 0x3787F57F);
  v71 = (*(_DWORD *)(v19 - 176) ^ 0x8B5765F9)
      + ((v53 + 1171305829 + (v47 ^ 0xE7E7EB1C)) ^ 0x7B7FFF7E)
      + ((2 * (v53 + 1171305829 + (v47 ^ 0xE7E7EB1C))) & 0xF6FFFEFC)
      + v59
      - v70
      + 103708508;
  v72 = v29 + (v71 ^ 0x7ABB57FF) + ((2 * v71) & 0xF576AFFE) + 1426494825;
  v73 = ((2 * v72) & 0x97BFF776) + (v72 ^ 0xCBDFFBBB);
  v74 = ((2 * (v70 - 931657087 + (v66 ^ 0xA6BA29D))) & 0xF8EFE7BE)
      + ((v70 - 931657087 + (v66 ^ 0xA6BA29D)) ^ 0xFC77F3DF);
  HIDWORD(v43) = v73 + 1093;
  LODWORD(v43) = v73 + 874513477;
  v75 = v36 + ((v43 >> 12) ^ 0xC9FFEFDF) + ((2 * (v43 >> 12)) & 0x93FFDFBE);
  v76 = ((v68 ^ 0x840D6665) + 931657087 - v70 - 401674617 - ((2 * ((v68 ^ 0x840D6665) + 931657087 - v70)) & 0xD01DDD0E)) ^ 0xE80EEE87;
  v77 = v75 - 554453884;
  v78 = (v70 - 931657087) ^ ((v63 ^ v47 ^ 0xE7E7EB1C)
                           + 1808470424
                           - 2 * ((v63 ^ v47 ^ 0xE7E7EB1C) & 0x6BCB1199 ^ (v63 ^ v47) & 1));
  LODWORD(STACK[0x564]) = v24 - 127;
  v79 = (((v76 ^ (v75 - 554453884)) + 1377673651 - ((2 * (v76 ^ (v75 - 554453884))) & 0xA43B4366)) ^ 0x521DA1B3)
      + v24
      - 127;
  v80 = v36 + (v79 ^ 0xB19ABB9E) + ((2 * v79) & 0x6335773C);
  HIDWORD(v43) = v80 + 4;
  LODWORD(v43) = v80 + 1275792572;
  v81 = (v78 ^ 0x6BCB1198) + 1062229945 - 2 * ((v78 ^ 0x6BCB1198) & 0x3F5057BB ^ v78 & 2);
  v82 = ((v43 >> 3) ^ 0xB7FA3FE9) + a2 + ((2 * (v43 >> 3)) & 0x6FF47FD2);
  v83 = ((v17 - 432848674) & (v15 - 531794274) ^ 0xFEDE69FD)
      + ((2 * ((v17 - 432848674) & (v15 - 531794274))) & 0xFDBCD3FA)
      + 18978307
      + (v47 ^ 0xE7E7EB1C);
  v84 = v15 + (v83 ^ 0x9E9FF7BB) + ((2 * v83) & 0x3D3FEF76);
  v85 = v75 + 927749419;
  v86 = v82 - ((2 * v82 + 265427178) & 0x86149262) + 1257461158;
  v87 = ((v70 - 931657087) & (v63 + 1) ^ 0xCEFD1BEF)
      - v59
      + ((2 * ((v70 - 931657087) & (v63 + 1))) & 0x9DFA37DE)
      + v75
      + 927749419
      - 1903967729;
  v88 = v86 ^ 0x430A4931;
  v89 = v87 + (v86 ^ 0x430A4931) - ((2 * (v87 + (v86 ^ 0x430A4931))) & 0x70904632);
  v90 = v24 + 1572253690;
  v91 = v84 + v59 + v70 - 117637232 + v85 + 49703562 + (v86 ^ 0xBCF5B6CE);
  v92 = a2 + v90 + (v91 ^ 0x3FEFFFBF) + ((2 * v91) & 0x7FDFFF7E);
  HIDWORD(v43) = v92 - 916839540;
  LODWORD(v43) = v92 - 359742580;
  v93 = ((v43 >> 13) ^ 0x7EFDDFE5) + v15 + ((2 * (v43 >> 13)) & 0xFDFBBFCA);
  v94 = (v77 & (v70 - 931657086) ^ 0xFD3FD3F3)
      + ((2 * (v77 & (v70 - 931657086))) & 0xFA7FA7E6)
      + 46148621
      + (v86 ^ 0x430A4931);
  v95 = *(_DWORD *)(v19 - 228) + 586177490;
  LODWORD(STACK[0x55C]) = v95;
  v96 = v74 + v85 - ((2 * (v74 + v85) + 1449055988) & 0x485054DE) + 1331140073;
  v97 = v93 - ((2 * v93 + 43986292) & 0xD701E88) + 1745331710;
  v98 = v95 - 586177551 + (v96 ^ 0xE19A6C1A ^ v86 ^ v97);
  v99 = v15 + (v98 ^ 0x7AF7DCBF) + ((2 * v98) & 0xF5EFB97E);
  v100 = v97 ^ 0x6B80F44;
  v101 = ((v77 + (v47 ^ 0xE7E7EB1C)) ^ 0xB57BFFFD) + ((2 * (v77 + (v47 ^ 0xE7E7EB1C))) & 0x6AF7FFFA);
  HIDWORD(v43) = v99 + 1321894648;
  LODWORD(v43) = v99 - 959806728;
  v102 = (v70 - 931657087) ^ 0xD2A6C71C ^ (v94 - 760821988 - ((2 * v94) & 0xA54D8E38));
  LODWORD(STACK[0x548]) = (*(_BYTE *)(v19 - 216) ^ LOBYTE(STACK[0x584]) ^ 0x3A)
                        - ((2 * (*(_DWORD *)(v19 - 216) ^ LODWORD(STACK[0x584]) ^ 0x3A)) & 0x3C);
  v103 = v17 + ((v43 >> 26) ^ 0xFB57B68D) + ((2 * (v43 >> 26)) & 0xF6AF6D1A);
  v104 = v48
       + (((v86 ^ 0x430A4931) + (v81 ^ 0xC0AFA846)) ^ 0x7B67CFBF)
       + ((2 * ((v86 ^ 0x430A4931) + (v81 ^ 0xC0AFA846))) & 0xF6CF9F7E)
       + ((v101 + 1250164739 + (v97 ^ 0x6B80F44)) ^ 0xA6110400)
       - ((2 * (v101 + 1250164739 + (v97 ^ 0x6B80F44))) & 0xB3DDF7FE)
       - 561566655;
  LODWORD(STACK[0x550]) = v103 + 791037503;
  v105 = v17 + (v104 ^ 0xCDF7FF7D) + ((2 * v104) & 0x9BEFFEFA) + v103 + 791037503;
  HIDWORD(v43) = v105 + 293079956;
  LODWORD(v43) = v105 - 1182970988;
  v106 = (v43 >> 12) + 604382848 - ((2 * (v43 >> 12)) & 0x480C4D00);
  v107 = ((v106 ^ 0x24062680) & (v47 ^ 0xE7E7EB1C)) - ((2 * ((v106 ^ 0x24062680) & (v47 ^ 0xE7E7EB1C))) & 0x61217634);
  v108 = v106 ^ v47;
  v109 = (v108 ^ 0xC3E1CD9C)
       + ((2 * v107 + 1629582900) ^ 0x175E08CB)
       - 1988067071
       + ((2 * (2 * v107 + 1629582900)) & 0xECFEFDFC ^ 0xC042EC68);
  v110 = ((2 * v109) & 0x3DFFFED8) + (v109 ^ 0x9EFFFF6C);
  v111 = v103 + 1287584760;
  v112 = ((2 * ((v97 ^ 0x6B80F44) + ((v102 - 1085567385 - ((2 * v102) & 0x7E971CCE)) ^ 0xBF4B8E67))) & 0xB47EEDFE)
       + (((v97 ^ 0x6B80F44) + ((v102 - 1085567385 - ((2 * v102) & 0x7E971CCE)) ^ 0xBF4B8E67)) ^ 0xDA3F76FF)
       - (v103
        + 1287584760)
       - v110;
  v113 = v112 - ((2 * v112 + 1296561192) & 0xFA9E1E0C);
  v114 = v103 - 354710959;
  v115 = v103 - 354710959 + ((v89 + 944251673) ^ 0x3EF02C5D ^ v97);
  v116 = *(_DWORD *)(v19 - 184) + v57 + (v115 ^ 0x6FDBFFDF) + ((2 * v115) & 0xDFB7FFBE) - v110 - 800938200;
  v117 = ((2 * v116) & 0x6BDFFDF6) + (v116 ^ 0xB5EFFEFB);
  v118 = *(_DWORD *)(v19 - 232);
  v119 = STACK[0x57C];
  v120 = (v118 & 0xA9 ^ 0xBC501034) + LODWORD(STACK[0x57C]) - ((2 * v118) & 0x110);
  HIDWORD(v43) = v117 + 5;
  LODWORD(v43) = v117 + 1242562821;
  v121 = ((v97 ^ 0x6B80F44) - 335952519 - ((2 * (v97 ^ 0x6B80F44) - 2) & 0xD7F38AF4)) ^ 0xEBF9C57A ^ v114;
  v122 = ((v43 >> 3) ^ 0xBBF26E3F) + v59 + ((2 * (v43 >> 3)) & 0x77E4DC7E);
  v123 = (((2 * (v118 & 0xEF ^ 0x4A)) | 0xC6F025F2) - (v118 & 0xEF ^ 0x4A) - 1668813561) ^ 0x645E93B3;
  v124 = v123 - ((2 * v123) & 0x5B9ACBFC);
  v125 = ((2 * (v108 & 1 | (2 * (v108 & 1)))) ^ 0x6FBF9AFB)
       - 1874828027
       + (((v110 ^ 1) - ((2 * (v110 ^ 1) - 1040187096) & 0xD2D7886A) + 1248576713) ^ 0xE96BC435);
  v126 = v125 - 1207963650 - ((2 * v125) & 0x6FFFE616);
  v127 = ((v97 ^ 0x6B80F44) & (v86 ^ 0xBCF5B6CE) ^ 0x808020C0)
       - ((2 * ((v97 ^ 0x6B80F44) & (v86 ^ 0xBCF5B6CE))) & 0xFEFFBE7E)
       + v111
       + 1;
  v128 = v122 - ((2 * v122 + 476587576) & 0x59BDB6EC) - 1156387182;
  v129 = v27 + LODWORD(STACK[0x52C]);
  LODWORD(STACK[0x558]) = v129;
  v130 = v59
       + ((v129 + ((v113 - 1544353510) ^ 0x5191D470 ^ v128)) ^ 0xBB151FDF)
       + ((2 * (v129 + ((v113 - 1544353510) ^ 0x5191D470 ^ v128))) & 0x762A3FBE);
  v131 = (v97 ^ 0x6B80F44) + ((v85 - ((2 * v85 + 1330560692) & 0xDBC1AA40) + 361247866) ^ 0x2EEA9C11 ^ v86);
  v132 = v85 + (v131 ^ 0x3EEBE6B4) + ((2 * v131) & 0x7DD7CD68) - v111 + v110;
  v133 = v132 - 807542832 - 2 * ((v132 + 731835104) & 0x4DCFE70F ^ (v132 - 807542832) & 4);
  v134 = *(_DWORD *)(v19 - 224) + (v118 ^ 0xC29CD4CA) - 124;
  v135 = (v124 + 768435710) ^ *(_DWORD *)(v19 - 168);
  v136 = ((2 * v134) & 0x6FC1EFF6)
       + (v134 ^ 0x77E0F7FB)
       + (((v135 ^ 0x8183DA84) + 1) ^ 0x7AAFC8FF)
       + ((2 * ((v135 ^ 0x8183DA84) + 1)) & 0xF55F91FE);
  v137 = v136 - ((2 * v136 + 450788876) & 0x37A7CCF6);
  v138 = (v121 + 648148665 - ((2 * v121) & 0x4D43ED72)) ^ 0x26A1F6B9;
  HIDWORD(v43) = v130 + 1208822806;
  LODWORD(v43) = v130 - 1986352106;
  v139 = ((v43 >> 13) ^ 0xDFF7FFBF) + v70 + ((2 * (v43 >> 13)) & 0xBFEFFF7E);
  v140 = v110 + 1627390100 + (v86 ^ 0x307A099D ^ (v127 - ((2 * v127 + 993581872) & 0xE6E08158) - 1861439932));
  v141 = v139 - ((2 * v139 + 16782724) & 0x691C0F0) - 339154118;
  v142 = (v141 ^ 0x348E078) + ((v133 - 1450118629) ^ 0x61113C7D ^ v128);
  v143 = v141 ^ 0x348E078;
  *(_DWORD *)(v19 - 224) = v141 ^ 0x348E078;
  v144 = v26 + 1235298940 + v70 - 117637232 + (v142 ^ 0x30FEBFA7) + ((2 * v142) & 0x61FD7F4E);
  v145 = (v128 ^ 0x2CDEDB76)
       + (v97 ^ 0xEDFE036C ^ (v110 + 1627390100 + v138 - ((2 * (v110 + 1627390100 + v138)) & 0xD68C1850) - 347730904));
  v146 = v118;
  v147 = v145 - ((2 * v145) & 0xFECD8E1C);
  v148 = ((2 * v140) & 0x3FC7AF9A) + (v140 ^ 0x1FE3D7CD) + (v128 ^ 0xD3212489);
  v149 = ((v110 + 1627390100) ^ v114) + 233891165 - ((2 * ((v110 + 1627390100) ^ v114)) & 0x1BE1CABA);
  HIDWORD(v43) = v144 + 1564952859;
  LODWORD(v43) = v144 - 1387837157;
  v150 = *(_DWORD *)(v19 - 192) + (v118 ^ 0x48818B5B);
  v151 = ((v43 >> 26) ^ 0x1B53FB7E) + v85 + ((2 * (v43 >> 26)) & 0x36A7F6FC);
  v152 = v151 - ((2 * v151 + 413583286) & 0xD13A0512) - 185571740;
  *(_DWORD *)(v19 - 228) = v141 ^ v152;
  v26 -= 35;
  LODWORD(STACK[0x54C]) = v26;
  v153 = ((v148 - ((2 * v148 + 3690600) & 0x2D8E90D4) + 1994616990) ^ 0xFD12AA9B ^ v141 ^ v152) + v26;
  v154 = v85 + (v153 ^ 0xBEFFFDEE) + ((2 * v153) & 0x7DFFFBDC);
  v155 = (((v128 ^ 0x2F963B0E ^ v141) + 1) ^ 0x7FFF6774) + ((2 * ((v128 ^ 0x2F963B0E ^ v141) + 1)) & 0xFFFECEE8);
  HIDWORD(v43) = v154 + 533567595;
  LODWORD(v43) = v154 + 1635997803;
  v156 = (v110 + 1627390100) ^ (v126 + 781) ^ v128 ^ 0xF3BC2AF4 ^ v152;
  v157 = (((v149 ^ 0xDF0E55D) + 1) ^ 0x74D97DDB)
       + ((2 * ((v149 ^ 0xDF0E55D) + 1)) & 0xE9B2FBB6)
       - 1960410587
       + (v128 ^ 0x2CDEDB76);
  v158 = v128 ^ 0x2CDEDB76;
  v159 = (v135 ^ 0xCC80E3F2)
       + (*(_DWORD *)(v19 - 176) ^ 0x8523EA8B ^ ((v118 & 0x14 ^ 0xE748D33) + (v118 & 0xC0 ^ 0x241) - 2));
  v160 = v88 + ((v43 >> 12) ^ 0x5F7FFFDE) + ((2 * (v43 >> 12)) & 0xBEFFFFBC) - 1602224094;
  LODWORD(STACK[0x574]) = v160 ^ 0xFADCFFBB;
  v161 = ((2 * v160) & 0xF5B9FF76) + (v160 ^ 0xFADCFFBB);
  v162 = ((v147 + 2137442062) ^ 0x14B325FF ^ v141 ^ v152) - 86179909 - v161;
  *(_DWORD *)(v19 - 176) = v161;
  v163 = v90 + v88 + (v162 ^ 0xD3EB9FEE) + ((2 * v162) & 0xA7D73FDC) + 2072778256;
  v164 = ((2 * v163) & 0xCDFADE92) + (v163 ^ 0x66FD6F49);
  v165 = v137 - 1455217279;
  v166 = (v159 ^ 0xBEDBFFDB) + ((2 * v159) & 0x7DB7FFB6) + 1092878373 + ((v137 - 1455217279) ^ 0xFE90BDF4);
  v167 = v166 + 402733852 - ((2 * v166) & 0x30027638);
  v168 = v141 ^ (v156 - ((2 * v156) & 0x76EA2802) - 1149955071) ^ 0xB83DF479 ^ (v161 + 86179909);
  v169 = v168 + 1755275999 - ((2 * v168) & 0xD13EC5BE);
  v170 = ((v150 - 48) ^ 0x779B7573) + ((2 * (v150 - 48)) & 0xEF36EAE6) - 2006676851 + (v135 ^ 0x6DEA810E);
  v171 = v111 + (v157 ^ 0x3FFDEFD7) + ((2 * v157) & 0x7FFBDFAE) + 1579064962 + v143;
  v172 = (v171 ^ 0xCEDFD4CE) + ((2 * v171) & 0x9DBFA99C) + 824191794 + (v152 ^ 0x689D0289);
  v173 = v152 ^ 0x689D0289;
  *(_DWORD *)(v19 - 192) = v152 ^ 0x689D0289;
  HIDWORD(v43) = v164 - 1;
  LODWORD(v43) = v164 - 1727885129;
  v174 = (v172 - 2096808083 - ((2 * v172) & 0x60A7EDA)) ^ 0x83053F6D ^ (v161 + 86179909);
  v175 = v161 + 86179909;
  LODWORD(STACK[0x56C]) = v161 + 86179909;
  v176 = v100 + ((v43 >> 3) ^ 0x7FEF7F6F) + ((2 * (v43 >> 3)) & 0xFFDEFEDE) - 2146402159;
  v177 = ((2 * v176) & 0x9EFFBF6C) + (v176 ^ 0x4F7FDFB6);
  *(_DWORD *)(v19 - 216) = v177 - 1333780406;
  v178 = v177;
  LODWORD(STACK[0x584]) = v177;
  v179 = (v174 - 978647538 - ((2 * v174) & 0x8B560C1C)) ^ 0xC5AB060E ^ (v177 - 1333780406);
  v180 = v119 - 801809956 + ((v179 - 1518291690 - ((2 * v179) & 0x4B016A2C)) ^ 0xA580B516);
  v181 = v100 + (v180 ^ 0x7E9F2FF7) + ((2 * v180) & 0xFD3E5FEE) + 1279675009;
  v182 = ((2 * v181) & 0xFF77EEFA) + (v181 ^ 0xFFBBF77D);
  HIDWORD(v43) = v182 + 2179;
  LODWORD(v43) = v182 + 4458627;
  v183 = ((v43 >> 13) ^ 0xEDE6BFD7) + v111 + ((2 * (v43 >> 13)) & 0xDBCD7FAE);
  v184 = v183 - ((2 * v183 + 543923460) & 0x249B0B9A) + 1115903055;
  LODWORD(STACK[0x578]) = v184;
  v185 = v118 & 0x42;
  v186 = (v135 ^ 0xD66A3540) + (*(_DWORD *)(v19 - 204) ^ 0x98D1AFA5 ^ v185);
  v187 = ((2 * v186) & 0xDFAC7FEE)
       + (v186 ^ 0x6FD63FF7)
       + (v165 & 0x60094B91 ^ 0xC8744228)
       + ((2 * v165) & 0x40109700 ^ 0xFFFF7BFF);
  v188 = (v170 ^ 0x7FAEFDB7) + ((2 * v170) & 0x7F5DFB6E) - 2142174647 + (v165 ^ 0x44041592);
  v189 = *(_DWORD *)(v19 - 184);
  v190 = v189
       + (((v146 ^ 0x9F651DA8) + 1) ^ 0x737EFBED)
       + ((2 * ((v146 ^ 0x9F651DA8) + 1)) & 0xE6FDF7DA)
       + (((v135 ^ 0xF9587168) + 1) ^ 0xBD4DD77B)
       + ((2 * ((v135 ^ 0xF9587168) + 1)) & 0x7A9BAEF6)
       + 1723343725
       + (v165 & 0x100040F8 ^ 0x8ED3515C ^ ((v165 & 0xEFFBBF07 ^ 0x9BD7E6FB)
                                          - ((2 * (v165 & 0xEFFBBF07 ^ 0x9BD7E6FB)) & 0x1DA62208)
                                          + 2127761636));
  v191 = ((2 * v188) & 0x4FBEEEFE)
       + (v188 ^ 0x27DF777F)
       + (v167 & 0xE47DFED2 ^ 0x8FB604EB)
       + ((2 * v167) & 0x86A7DA4 ^ 0x27420);
  v192 = v135 ^ 0x7D9F41E3 ^ v165;
  v193 = ((v120 + 1 - ((2 * (v120 + 1) + 667587404) & 0xF2E760F6) - 1923548639) ^ 0xB8A3852B ^ v192)
       + (v167 & 0x9A1E4245 ^ 0x894AA24)
       + ((2 * v167) & 0x1414848A ^ 0xEFFFFBF7)
       - 278177823;
  v194 = v193 - ((2 * v193) & 0xABC0CB62);
  v195 = (v187 - ((2 * v187 - 1888911454) & 0xD1C8B28C) + 815339799) ^ v167;
  v196 = v191 - ((2 * v191 - 1865247988) & 0xA3C01BCC) - 1706469524;
  v197 = (v195 ^ 0x14250A78) + (v196 & 0x137CA864 ^ 0x39648049) + ((2 * v196) & 0x26F04080 ^ 0xDD3FFF7F) - 671385644;
  v198 = v197 + 2091145077 - 2 * (v197 & 0x7CA45777 ^ v195 & 2);
  v199 = (((v146 ^ 0xE2E68330) + 1) ^ 0x1ED97BFF)
       + ((2 * ((v146 ^ 0xE2E68330) + 1)) & 0x3DB2F7FE)
       + LODWORD(STACK[0x570])
       + (v135 ^ 0x533FCE59)
       + (LODWORD(STACK[0x560]) << 8)
       - 517569635;
  v200 = ((2 * v165) & 0x40048170 ^ 0xFFFB7F8F)
       + (v165 & 0x300341B9 ^ 0xC01A4138)
       + (v199 ^ 0xBFDECFFF)
       + ((2 * v199) & 0x7FBD9FFE);
  v201 = v200 + 868226705 + (~(2 * v200 - 535798270) | 0x789030E1);
  v178 -= 1076219140;
  v202 = v189 + LODWORD(STACK[0x550]) + v178;
  LODWORD(STACK[0x57C]) = v178;
  v203 = v202
       + (((v169 ^ 0x689F62DF) + (v184 ^ 0x6DB27A32) + 1) ^ 0x7FEF65F5)
       + ((2 * ((v169 ^ 0x689F62DF) + (v184 ^ 0x6DB27A32) + 1)) & 0xFFDECBEA);
  LODWORD(STACK[0x580]) = v158;
  *(_DWORD *)(v19 - 204) = v184 ^ 0x924D85CD;
  v204 = ((v175 + v158) ^ 0xB3D5FEFF) + ((2 * (v175 + v158)) & 0x67ABFDFE) + 1277821185 + (v184 ^ 0x924D85CD);
  v205 = ((v155 - 2147444596 + v173) ^ 0xDFB99F28)
       + 1047523298
       + ((2 * (v155 - 2147444596 + v173)) & 0xBF733E50)
       + v178
       + (v204 ^ 0x20000188)
       - ((2 * v204) & 0xBFFFFCEE)
       + 3319;
  HIDWORD(v43) = v203 - 1962311418;
  LODWORD(v43) = v203 - 821460730;
  v206 = (v190 ^ 0xFDDFBEFB)
       + (((v167 ^ 0x895B4AF8) + 1) ^ 0xDFE73BFF)
       + ((2 * ((v167 ^ 0x895B4AF8) + 1)) & 0x3FCE77FE)
       + ((2 * v190) & 0x7BBF7DF6);
  v207 = v146;
  v208 = ((2 * ((v146 ^ 0x973722DF) + 1)) & 0xDDC7A7EA)
       + (((v146 ^ 0x973722DF) + 1) ^ 0xEEE3D3F5)
       + LODWORD(STACK[0x554]);
  v209 = v208 - ((2 * v208 + 313834120) & 0xC73D20D2);
  v210 = ((2 * (_BYTE)v135) | 0xFFFFFFB3) - (v135 & 0x27) + ((LODWORD(STACK[0x548]) - 1913101538) ^ 0xEBF38D12) + 39;
  v211 = (v210 ^ 0xFFEFFFBD) + 1048570 + ((2 * v210) & 0xFFDFFF7A) + (v165 ^ 0xDC98C9A1) + 73;
  v212 = ((v43 >> 26) ^ 0x9F1FFC1F) + v110 + ((2 * (v43 >> 26)) & 0x3E3FF83E);
  v213 = v212 + 1386832851 + (~(2 * v212 + 62916842) | 0xDE6D4145);
  LODWORD(STACK[0x570]) = v213;
  v214 = (((_WORD)v206 + 262) & 0x100 ^ 0x6DE36B6C) + 2 * (((_WORD)v206 + 262) & 0x100);
  v215 = (v198 ^ 0x4979B58) + ((v194 + 1440769457) ^ v196 ^ 0xB049BDD4);
  v216 = v215 + 1653483245 - ((2 * v215) & 0xC51C4DDA);
  v217 = ((v214 - 1843620716) & (v196 ^ 0x51E00D00))
       - 1357020638
       - ((2 * ((v214 - 1843620716) & (v196 ^ 0x51E00D00))) & 0x5E3B0400) == -1357020638;
  v218 = v214 - 1207961672;
  v219 = -1815687536 - v214;
  if (!v217)
    v218 = v219;
  v220 = ((v205 - ((2 * v205 + 1694015370) & 0x68624F84) + 1722644359) ^ 0x24F8789F ^ v213)
       + (*(_DWORD *)(v19 - 168) ^ 0x15BF2B89);
  v221 = (((v198 ^ 0x9495AFD6) + 1) ^ 0x7BAFFA56)
       + ((2 * ((v198 ^ 0x9495AFD6) + 1)) & 0xF75FF4AC)
       - 2075130454
       + ((((v206 + 574162182) & 0xFFFFFEFF) - ((2 * (v206 + 574162182)) & 0x43B8D130) - 505649000) ^ 0x6265B467 ^ ((v196 ^ 0x51E00DE6) - 635659044 + v218 - ((2 * ((v196 ^ 0x51E00DE6) - 635659044 + v218)) & 0x790082C8) + 1015038308));
  v222 = (((v198 ^ 0x62722A6D) + 1) ^ 0xEDF7DEF5)
       + (v167 ^ (v211 - ((2 * v211) & 0x207646D0) - 801430680) ^ 0x2ED054BC ^ v196)
       + ((2 * ((v198 ^ 0x62722A6D) + 1)) & 0xDBEFBDEA)
       + 302522635;
  v223 = v222 - ((2 * v222) & 0x4F0CE41E);
  v224 = (v216 ^ 0x5ABBCB47) + (v221 ^ 0x6F9FF57D) + ((2 * v221) & 0xDF3FEAFA) - 1872754045;
  v225 = v224 + 368713727 - ((2 * v224) & 0x2BF43FFE);
  v226 = v110 + (v220 ^ 0xEE3F9DF6) + ((2 * v220) & 0xDC7F3BEC);
  v227 = (((v135 ^ 0x9582ECD0) + 1) ^ 0x7FB3C7AF)
       + (((LODWORD(STACK[0x54C]) ^ v146 ^ 0xF3A8E401)
         + 1365361187
         - 2 * ((LODWORD(STACK[0x54C]) ^ v146 ^ 0xF3A8E401) & 0x5161C233 ^ (LODWORD(STACK[0x54C]) ^ v146) & 0x10)) ^ 0xAB809993)
       + ((2 * ((v135 ^ 0x9582ECD0) + 1)) & 0xFF678F5E)
       - 2142488495;
  v228 = (((v135 ^ 0x7058E357) + 1) ^ 0xDF7EFFEF)
       + ((2 * ((v135 ^ 0x7058E357) + 1)) & 0xBEFDFFDE)
       + ((LODWORD(STACK[0x564]) + (v146 ^ 0x1A3E8FD9)) ^ 0xF379FBBA)
       + ((2 * (LODWORD(STACK[0x564]) + (v146 ^ 0x1A3E8FD9))) & 0xE6F3F774)
       + 755434583
       + (v165 ^ 0xD8F4412F);
  v229 = ((2 * ((v167 ^ 0xDA7CDF62) + 1)) & 0xF2FAFE7E)
       + (((v167 ^ 0xDA7CDF62) + 1) ^ 0x797D7F3F)
       + (v228 ^ 0xFDDFFBBF)
       + ((2 * v228) & 0xFBBFF77E);
  v230 = (v135 & 0x2B ^ 0x8C909224)
       + (v146 ^ LODWORD(STACK[0x568]) ^ 0x81AACFA3)
       + ((2 * (_BYTE)v135) & 0x52 ^ 0xFFFFFFBF);
  v231 = ((2 * (v196 & 0xD9930388 ^ 0x51000380)) & 0xB0200700) - (v196 & 0xD9930388 ^ 0x51000380) - 1582843832;
  v232 = (((v196 ^ 0xD216A405) + 1) ^ 0xDFFDBD79)
       + (v167 ^ 0x76A6FFD ^ v201)
       + ((2 * ((v196 ^ 0xD216A405) + 1)) & 0xBFFB7AF2)
       + 537019015;
  v233 = ((2 * ((v198 ^ 0x367411FB) + 1)) & 0xEFEDEE3E)
       + (((v198 ^ 0x367411FB) + 1) ^ 0x77F6F71F)
       + (v232 ^ 0x7EFECEF5)
       + ((2 * v232) & 0xFDFD9DEA);
  v234 = v233 - ((2 * v233 + 303330264) & 0xE7D9407E);
  v235 = (v192 ^ (v209 - 319230547) ^ 0x8E8D2777) + (v167 ^ 0xE6DB3739);
  v236 = v235 - ((2 * v235) & 0x353A1F40);
  v237 = (v196 ^ 0x213D7A00 ^ (v229 - ((2 * v229 + 289737220) & 0x8903D0D2) - 853250709)) + (v198 ^ 0xA2259C93);
  v238 = (v216 ^ 0xC875C9CE) + (v237 ^ 0xC3C3BF5A) + ((2 * v237) & 0x87877EB4) + 1010581670;
  v239 = (v185 ^ 0x563DB77F)
       + 2 * v185
       + (((v135 ^ 0x2879C2E7) + 1) ^ 0x77FE2D7B)
       + ((2 * ((v135 ^ 0x2879C2E7) + 1)) & 0x6FFC5AF6)
       + LODWORD(STACK[0x55C])
       - 1073751920;
  v240 = v239 - ((2 * v239 + 497536206) & 0x5ED94E1A);
  v241 = (v225 & 0x6C4E7EC1 ^ 0xFBBDC134)
       + 528458
       + ((2 * v225) & 0xD88CBD82 ^ 0x8843D82)
       + (v216 ^ 0xDB612307 ^ (v223 - 1484361201))
       + 4033;
  v242 = v241 - ((2 * v241) & 0x174D16B0);
  v243 = (v165 ^ (v227 - ((2 * v227) & 0xD77ECB72) - 339778119) ^ 0x2BC856B0) + (v167 ^ 0x379BC613);
  v244 = ((2 * ((v165 ^ 0x6C70D3BF) + 1)) & 0x7F7E78AC)
       + (((v165 ^ 0x6C70D3BF) + 1) ^ 0xFFBF3C56)
       + (v167 & 0xC0236E24 ^ 0xFE7EF5BB)
       + ((2 * v167) & 0x80469C48 ^ 0x21408)
       + ((v230 + 1936682491) ^ 0x3B9BFEBE)
       + ((2 * (v230 + 1936682491)) & 0x7737FD7C);
  HIDWORD(v245) = v226 + 2051360670;
  LODWORD(v245) = v226 - 47392866;
  v246 = v225 ^ v216 ^ (v234 + 2096552491);
  v247 = (v216 & 0x1A849ACF ^ 0x7CFA9C52)
       + (v196 ^ v198 ^ (v236 + 446500768) ^ 0x829B61E0)
       + ((2 * v216) & 0x3409351E ^ 0x408051A)
       - 2122227359;
  v248 = ((2 * ((v225 ^ 0x39C8EBB7) + 1)) & 0x9F734CDC)
       + (((v225 ^ 0x39C8EBB7) + 1) ^ 0x4FB9A66E)
       + (v247 ^ 0x1F37F7F1)
       + ((2 * v247) & 0x3E6FEFE2);
  v249 = v248 - ((2 * v248 + 572310338) & 0xCB50B55A);
  v250 = (v243 ^ 0xFF7540D7) + 9092375 + ((2 * v243) & 0xFEEA81AE) + (v196 ^ 0x7654E72A);
  v251 = v158 + ((v245 >> 12) ^ 0x7FEE6BB6) + ((2 * (v245 >> 12)) & 0xFFDCD76C) - 2146331574;
  LODWORD(STACK[0x568]) = ((2 * v251) & 0xEBB7FCEE) + (v251 ^ 0x75DBFE77);
  v252 = (v196 ^ v198 ^ (v244 - ((2 * v244 + 206162522) & 0x37E9CD14) - 501625929) ^ 0xE484B359) + (v216 ^ 0xC9CD685B);
  v253 = (((2 * (v165 & 0xE0094C75 ^ 0x20090064)) & 0x80028062) - (v165 & 0xE0094C75 ^ 0x20090064) + 1070378572) ^ 0x9EA6BC4C;
  *(_DWORD *)(v19 - 168) = 2 * v246;
  v254 = v242 + 195464024;
  v255 = (v242 + 195464024) ^ v246;
  v256 = (v225 & 0xFDB8DE05 ^ 0xCA45D3BE)
       + ((2 * v225) & 0xBB719802 ^ 0x2B701802)
       + (v246 & 0x1D66B274 ^ 0x7FDB6FEA)
       + ((2 * v246) & 0x38CC6468 ^ 0x482028)
       + (v238 ^ 0x1DEABFFF)
       + ((2 * v238) & 0x3BD57FFE)
       - 2095582584
       + (v255 ^ 0x940F6184);
  v257 = v256 + 207227504 - ((2 * v256) & 0x18B414E0);
  v258 = (v225 ^ 0x34A6FE76) + (v252 ^ 0x9F47EFDA) + ((2 * v252) & 0x3E8FDFB4) + 1622675494;
  v259 = (((2 * (v257 & 0x25A5D28E ^ 0x5A40206)) & 0x300A104) - (v257 & 0x25A5D28E ^ 0x5A40206) - 64117924) ^ 0xFD49A35A;
  v260 = ((2 * v259) | 0x14E8295C) - v259;
  v261 = LODWORD(STACK[0x558]) - (v207 & 0x9E) + (v135 ^ 0xDB0BF3F4);
  v262 = (v167 & 0xE4505E10 ^ 0x5A80A29)
       + (v165 ^ 0xCBF3E985 ^ (v240 + 2118159732))
       + ((2 * v167) & 0xC0A09C00 ^ 0xFFFFEBFF)
       - 94900280;
  v263 = (v246 ^ 0xF3BCCCBA ^ (v249 + 1991687246)) + (v255 ^ 0x705E022C);
  v264 = (((v198 ^ 0xA6743E1D) + 1) ^ 0xBB3DF6DB)
       + (((v231 & 0xD2B20780 ^ 0x5290B7D7 | v231 & 0x2D410808) - 1) ^ (v262 - ((2 * v262) & 0x1D925748) - 825676892) ^ 0x3D7A967A)
       + ((2 * ((v198 ^ 0xA6743E1D) + 1)) & 0x767BEDB6)
       + 1153567013;
  v265 = v264 - ((2 * v264) & 0x9387B806);
  v266 = ((2 * v263) & 0xCFADB32E)
       + (v263 ^ 0xE7D6D997)
       + (v257 & 0xCF0F68D4 ^ 0x4C92AA1)
       + ((2 * v257) & 0x8E189008 ^ 0xF7EFEFFF);
  v267 = (((v198 ^ 0x73095C2E) + 1) ^ 0x7F75EFFF)
       + ((2 * ((v198 ^ 0x73095C2E) + 1)) & 0xFEEBDFFE)
       + ((v250 + 530) ^ 0xBFF7E77F)
       + (v216 ^ 0x9BC8ED60)
       + ((2 * (v250 + 530)) & 0x7FEFCEFE)
       - 1064163198;
  v268 = (v167 ^ 0x55FB6C61) + ((v261 - ((2 * v261) & 0xABE3361C) - 705586418) ^ 0xE2E906F5 ^ v165);
  v269 = (v246 ^ 0xF1144628 ^ (v258 - ((2 * v258) & 0xD63BADC6) + 1797117667))
       + (((v255 ^ 0xADB05EA4) + 1) ^ 0x6EFF7FBD)
       + ((2 * ((v255 ^ 0xADB05EA4) + 1)) & 0xDDFEFF7A);
  v270 = (v207 ^ 0xF3A8E401)
       + (((v135 ^ 0xD0BE7AB3) + 1) ^ 0x6777FDCE)
       + ((2 * ((v135 ^ 0xD0BE7AB3) + 1)) & 0xCEEFFB9C)
       - 1735917006;
  v271 = ((2 * v270) & 0x8FFFDF66)
       + (v270 ^ 0x47FFEFB3)
       + (((v165 ^ 0x868DD565) + 1) ^ 0x3FDBBF7F)
       + ((2 * ((v165 ^ 0x868DD565) + 1)) & 0x7FB77EFE);
  v272 = (((v225 ^ 0x246D2479) + 1) ^ 0xD3EFDF3F)
       + (v246 ^ 0x7C6E013D)
       + ((2 * ((v225 ^ 0x246D2479) + 1)) & 0xA7DFBE7E)
       + (v267 ^ 0xE5FB777D)
       + ((2 * v267) & 0xCBF6EEFA)
       + 1175759172;
  v273 = (v268 ^ 0x2BBF7757) + ((2 * v268) & 0x577EEEAE) - 733968215 + (v196 ^ 0x4381D0F3);
  v274 = (v216 ^ 0x7919DDA ^ (v265 - 909911037)) + (v225 ^ 0x759BC314);
  v275 = v274 - ((2 * v274) & 0xF8BE68B2);
  v276 = (v196 ^ 0x725F289D) + (v135 ^ v167 ^ 0x3B8D93D3 ^ (((2 * v253) & 0x80931F20) - v253 + 757493871));
  v277 = ((v273 - ((2 * v273) & 0x3A378E4) + 1104264306) ^ 0x90F4FF8F ^ v198)
       - 269225986
       + (v216 & 0xC097BDF6 ^ 0x508A25FD)
       + ((2 * v216) & 0x812779CC ^ 0x7EFBB637);
  v278 = v266 - ((2 * v266 + 516687602) & 0xCEE1A178) - 153693131;
  v279 = ((2 * (v269 - 1862238141)) & 0x6F7B9BCE)
       + ((v269 - 1862238141) ^ 0xB7BDCDE7)
       + (((v257 ^ 0xB605E021) + 1) ^ 0x3D7BE2BB)
       + ((2 * ((v257 ^ 0xB605E021) + 1)) & 0x7AF7C576)
       + (((v278 ^ 0xBD6ED580) + 1) ^ 0x77FCDFBF)
       + ((2 * ((v278 ^ 0xBD6ED580) + 1)) & 0xEFF9BF7E);
  v280 = v279 - ((2 * v279 + 630382398) & 0xD392C87A) + 2089997276;
  v281 = (v280 & 0x14400180 ^ 0x94F350C1) + (v280 & 0x2804020C ^ 9) - 2;
  v282 = (v281 & 0x94C7028C ^ 0x4820A) + (v281 ^ 0xD4FB5195) - ((v281 ^ 0xD4FB5195) & 0x544C02CD);
  v283 = ((2 * (v277 + 3818)) & 0xDF1B7E3A)
       + ((v277 + 3818) ^ 0xEF8DBF1D)
       + (((v225 ^ 0x7DEF5ED5) + 1) ^ 0x3EFCCDFF)
       + ((2 * ((v225 ^ 0x7DEF5ED5) + 1)) & 0x7DF99BFE);
  HIDWORD(v245) = v283 + 13028;
  LODWORD(v245) = v283 - 780832028;
  v284 = (v245 >> 14) - ((2 * (v245 >> 14)) & 0xE16851AE) - 256628521;
  HIDWORD(v245) = v284 ^ 0x3428D7;
  LODWORD(v245) = v284 ^ 0xF0800000;
  v285 = (v245 >> 22) - ((2 * (v245 >> 22)) & 0xAE42A2EE) + 1461801335;
  HIDWORD(v245) = v285 ^ 0x7215177;
  LODWORD(v245) = v285 ^ 0x55555555;
  v286 = v245 >> 28;
  v287 = (v272 ^ 0x5FB3FCFF)
       + ((2 * v272) & 0xBF67F9FE)
       + (((v255 ^ 0x845ECB7) + 1) ^ 0xFB793ADE)
       + ((2 * ((v255 ^ 0x845ECB7) + 1)) & 0xF6F275BC)
       + (((v257 ^ 0xCDC340BB) + 1) ^ 0x777AFDF3)
       + ((2 * ((v257 ^ 0xCDC340BB) + 1)) & 0xEEF5FBE6)
       + 760728112
       + (v278 ^ 0x4D352310);
  v288 = (v167 & 0x40000 ^ 0xDEBED5DD) + 2 * (v167 & 0x40000);
  v289 = ((2 * v287) & 0xD3BF53F6)
       + (v287 ^ 0x69DFA9FB)
       + (((v280 ^ 0x2EE53503) + 1) ^ 0xEFEEF7E7)
       + ((2 * ((v280 ^ 0x2EE53503) + 1)) & 0xDFDDEFCE);
  v290 = v289 - ((2 * v289 + 1281539132) & 0x706288C6);
  v217 = ((v288 + 557918755) & (v271 + 2015645902))
       - 1302971080
       - ((2 * ((v288 + 557918755) & (v271 + 2015645902))) & 0x64A80000) == -1302971080;
  v291 = v288 + 2146646712;
  v292 = 1030809202 - v288;
  if (v217)
    v292 = v291;
  v293 = v292 + v271 - ((2 * (v292 + v271) + 853835890) & 0x80999D28);
  v294 = (v167 ^ 0x18013B1C)
       + (((v196 ^ 0x7E62738D) + 1) ^ 0xFCAF57F7)
       + ((2 * ((v196 ^ 0x7E62738D) + 1)) & 0xF95EAFEE)
       + 55617545;
  v295 = ((((2 * (v167 & 0xFFFBFFFF ^ 0xE00A680E)) & 0x6D25C63E) - (v167 & 0xFFFBFFFF ^ 0xE00A680E) + 1231625440) ^ 0xB28D2FC4 ^ (v293 - 641790259))
       + (v196 ^ 0xC8C47120);
  v296 = (v286 ^ 0x7FDE7BF7)
       + (((v246 ^ 0x1795B590) + 1) ^ 0x7DFEE5FD)
       + ((2 * v286) & 0xFFBCF7EE)
       + ((2 * ((v246 ^ 0x1795B590) + 1)) & 0xFBFDCBFA)
       + (v255 ^ 0x6DCEA9E3)
       + 35823116;
  v297 = ((2 * v296) & 0x33B2FFBE)
       + (v296 ^ 0x99D97FDF)
       + (((v257 ^ 0x6DEEA5CA) + 1) ^ 0xDEF6DE8F)
       + ((2 * ((v257 ^ 0x6DEEA5CA) + 1)) & 0xBDEDBD1E)
       + (((v278 ^ 0x43F07CED) + 1) ^ 0xE49D6B7D)
       + ((2 * ((v278 ^ 0x43F07CED) + 1)) & 0xC93AD6FA);
  v298 = v297 - ((2 * v297 + 1160014890) & 0xE0FF6A5A);
  v299 = (v167 ^ 0x348BCF20) + (v165 ^ 0x9BD3E67B);
  v300 = (v198 ^ 0x1E7D00B9) + (v295 ^ 0x7CBFDBFB) + ((2 * v295) & 0xF97FB7F6) - 2092948475;
  v301 = (((v278 ^ 0x3493F125) + 1) ^ 0xEF6DE7FB)
       + (v254 ^ (v275 + 2086614105) ^ 0xC61F13FC ^ (v260 + 1972104018))
       + ((2 * ((v278 ^ 0x3493F125) + 1)) & 0xDEDBCFF6)
       + 278009861;
  *(_DWORD *)(v19 - 232) = (2 * v255) & 0xA0301098 ^ 0xFFDFEF67;
  v302 = v290 + 1583522433;
  v303 = v282 ^ (v301 - ((2 * v301) & 0xFB353642) - 40199391) ^ (v290 + 1583522433);
  v304 = v198 ^ v216;
  LODWORD(STACK[0x564]) = (v198 ^ v216 ^ 0xBE89A9FE)
                        + (((v225 ^ 0x42DC929) + 1) ^ 0x7F5FFF35)
                        + ((2 * ((v225 ^ 0x42DC929) + 1)) & 0xFEBFFE6A);
  v305 = ((v298 - 1827542206) ^ v280 ^ 0xC03060C2)
       + (v302 & 0x2F356242 ^ 0xA4B7BF9D)
       + ((2 * v302) & 0x1808C484 ^ 0x10008084)
       + 1937309729;
  v306 = ((-(v303 & 0x8000) - 1797669014) & 0x28000 ^ 0x80A9) - ((-(v303 & 0x8000) - 1797669014) & 0x50040) + 351297;
  v307 = ((2 * v305) & 0xBEFCF7F6)
       + (v305 ^ 0xDF7E7BFB)
       + (((v303 & 0xE4F72917 ^ 0x84562117) + (v303 & 0x1B0856E8 ^ 0x18085449) - 1) ^ 0x3E271030 ^ ((v306 & 0x78000 ^ 0x508C795A)
                                                                                                  - ((2 * v306) & 0x50000)
                                                                                                  - 1550170692));
  *(_DWORD *)(v19 - 184) = v307 - ((2 * v307 + 1090717708) & 0xDCAC0FE0);
  v308 = (v225 ^ 0xB3E3905B) + (v216 ^ 0xCD5DCA97 ^ (v300 - ((2 * v300) & 0x388311CE) - 1673426713));
  v309 = (v276 ^ 0x7ED8DFAC)
       + ((2 * v276) & 0xFDB1BF58)
       + (v198 & 0xE9C27E85 ^ 0xBD6C29DB)
       + ((2 * v198) & 0x8380FD08 ^ 0x8100AC08)
       + (((v216 ^ 0x5807DEA2) + 1) ^ 0x71F7731F)
       + ((2 * ((v216 ^ 0x5807DEA2) + 1)) & 0xE3EEE63E)
       + 960703831
       + (v225 ^ 0x3380D727);
  v310 = v309 - ((2 * v309) & 0x90E720FA);
  v311 = (v299 ^ 0xA6FFFFBB) + ((2 * v299) & 0x4DFFFF76) + 1493172293 + (v196 ^ 0x6DBAF6D0);
  v312 = (v311 ^ 0x3D434FEF)
       + ((2 * v311) & 0x7A869FDE)
       + (((v198 ^ 0xB6E863C5) + 1) ^ 0xAFEF75CF)
       + ((2 * ((v198 ^ 0xB6E863C5) + 1)) & 0x5FDEEB9E)
       + 315439682
       + (v216 ^ 0x485B84A7);
  v313 = (v312 ^ 0x27EB6FFB) + ((2 * v312) & 0x4FD6DFF6) - 669741051 + (v225 ^ 0xB4617563);
  v314 = (v225 ^ 0x4FD80371) + (v304 ^ (v294 - ((2 * v294) & 0xF4420CC) - 2019422106) ^ 0xE701D86F);
  v315 = (v257 ^ 0x1ADB0AEE) + (v255 ^ 0x490EBCD);
  LODWORD(STACK[0x55C]) = (2 * v303) & 0x847036DA ^ 0x600280;
  v316 = ((2 * v308) & 0x2AFDDEEA)
       + (v308 ^ 0x157EEF75)
       + (((v246 ^ 0xB5BB0F0D) + 1) ^ 0x7EFEF7DF)
       + ((2 * ((v246 ^ 0xB5BB0F0D) + 1)) & 0xFDFDEFBE)
       + (((v255 ^ 0x7ECB4A15) + 1) ^ 0xF8BFFEEF)
       + ((2 * ((v255 ^ 0x7ECB4A15) + 1)) & 0xF17FFDDE)
       + (((v257 ^ 0xB653754F) + 1) ^ 0xE7BFF36F)
       + ((2 * ((v257 ^ 0xB653754F) + 1)) & 0xCF7FE6DE);
  v317 = v316 - ((2 * v316 + 369380508) & 0x47F14B60);
  v318 = ((v310 - 931950467) ^ v246 ^ 0xD350264D)
       + (((v255 ^ 0xEBE5E8C5) + 1) ^ 0xCAFB6FFF)
       + ((2 * ((v255 ^ 0xEBE5E8C5) + 1)) & 0x95F6DFFE);
  v319 = STACK[0x56C];
  v320 = (LODWORD(STACK[0x56C]) + 1) & 0xBEE81DF ^ STACK[0x574] & 1;
  v321 = (v314 ^ 0x5FFFFF56)
       + ((2 * v314) & 0xBFFFFEAC)
       + (((v246 ^ 0x9D818F03) + 1) ^ 0x5F6F7BD7)
       + ((2 * ((v246 ^ 0x9D818F03) + 1)) & 0xBEDEF7AE)
       + (v255 & 0x8AE21718 ^ 0xD77F7E3E)
       + ((2 * v255) & 0x5C42A20 ^ 0x1000200)
       + 1754335133
       + (v257 ^ 0xC7B6ECAB);
  v322 = (v246 ^ 0x2391A088) + (v225 ^ 0x15FA1FFF) - ((2 * ((v246 ^ 0x2391A088) + (v225 ^ 0x15FA1FFF))) & 0xDA0B6082);
  v323 = (v321 ^ 0x57BA9E76)
       + ((2 * v321) & 0xAF753CEC)
       + (v278 & 0x264982A6 ^ 0x57F0C0A7)
       + ((2 * v278) & 0xC930548 ^ 0xF37EFEB7)
       + 1;
  v324 = ((v318 + 889491457) ^ 0xDF4FFAFB)
       + (v257 & 0x29B5BAFD ^ 0x2741E22)
       + ((2 * (v318 + 889491457)) & 0xBE9FF5F6)
       + ((2 * v257) & 0x4323555A ^ 0xFFDFEBBF)
       + 374075572
       + (v278 ^ 0x5D568521);
  v325 = (v216 ^ 0x628E26ED)
       + (((v225 ^ 0xB9CDF765) + 1) ^ 0xB7F7DBFD)
       + ((2 * ((v225 ^ 0xB9CDF765) + 1)) & 0x6FEFB7FA)
       + 1208493059;
  v326 = (v324 ^ 0xC21EBFB7)
       + ((2 * v324) & 0x843D7F6E)
       + (((v280 ^ 0x4E37D49E) + 1) ^ 0xF8FDFE35)
       + ((2 * ((v280 ^ 0x4E37D49E) + 1)) & 0xF1FBFC6A)
       + 1155744276
       + (v302 ^ 0x2AFE75A);
  v327 = (v278 ^ 0xE770D0BC) + (v280 & 0xFABCB69D ^ 0x31BDA008) + ((2 * v280) & 0x45106510 ^ 0xBEEFBFEF) + 650804204;
  v328 = (v327 ^ 0x3B63FEDE) + ((2 * v327) & 0x76C7FDBC) - 996409054 + (v302 ^ 0x2DFC93FB);
  LODWORD(STACK[0x558]) = v328 - ((2 * v328) & 0x57638398);
  v329 = (v313 ^ 0x7EF7EDAB)
       + (v246 & 0xB9CD5DB8 ^ 0xD5F1F26F)
       + ((2 * v313) & 0xFDEFDB56)
       + (*(_DWORD *)(v19 - 168) & 0x608A1B70 ^ 0x40081B20)
       + (((v255 ^ 0xB5880A76) + 1) ^ 0xFFB77CBE)
       + ((2 * ((v255 ^ 0xB5880A76) + 1)) & 0xFF6EF97C)
       + 215672216
       + (v257 ^ 0xD9600449);
  v330 = (v280 ^ 0xAFF47F2A) + (v278 ^ 0xE07A9997 ^ (v317 - 1359295490));
  v331 = ((2 * ((v255 ^ 0xAC7E9841) + (v246 ^ 0xA3A45DD5))) & 0xFF9C0EBC)
       + (((v255 ^ 0xAC7E9841) + (v246 ^ 0xA3A45DD5)) ^ 0xFFCE075E)
       + (((v257 ^ 0x10A80F67) + 1) ^ 0x7EFEF39B)
       + ((2 * ((v257 ^ 0x10A80F67) + 1)) & 0xFDFDE736)
       + (v278 & 0x1DB84AA3 ^ 0x1D7041AF)
       + ((2 * v278) & 0xB709540 ^ 0xF59F7EBF);
  v332 = v331 - ((2 * v331 + 300287986) & 0x17571894);
  v333 = ((v325 - ((2 * v325) & 0xC61150C2) + 1661511777) ^ v246 ^ 0x9B236975)
       + (v255 & 0xDC180F4D ^ 0xA8B30C7C)
       + *(_DWORD *)(v19 - 232);
  v334 = (v257 ^ 0x1FE4DA1C) + ((v322 + 1829089345) ^ 0xF3FD80E3 ^ v255);
  v335 = v334 - ((2 * v334) & 0x8CC9486);
  v336 = ((LODWORD(STACK[0x564]) - 2136997685) ^ 0x76FC6FEB)
       + (((v246 ^ 0x55B6A2DA) + 1) ^ 0x587FF3FE)
       + ((2 * (LODWORD(STACK[0x564]) - 2136997685)) & 0xEDF8DFD6)
       + ((2 * ((v246 ^ 0x55B6A2DA) + 1)) & 0xB0FFE7FC)
       + 813931543
       + (v255 ^ 0x148C237);
  *(_DWORD *)(v19 - 168) = ((*(_DWORD *)(v19 - 192) - 1) ^ 0x477F7F5B)
                         - 1199538011
                         + ((2 * (*(_DWORD *)(v19 - 192) - 1)) & 0x8EFEFEB6);
  v337 = (v302 ^ 0xDB79A7CC) + ((v323 - ((2 * v323 + 220873486) & 0x833B240) + 984545959) ^ v280 ^ 0xF0DCC195);
  v338 = (v257 ^ 0xC5A0A70) + (v278 & 0x67FB0934 ^ 0x9817EFCB) + ((2 * v278) & 0xCEC61268 ^ 0xCEC00068);
  v339 = (v336 ^ 0x77C2EBFF)
       + ((2 * v336) & 0xEF85D7FE)
       + (((v257 ^ 0xA52A12B6) + 1) ^ 0x7F4FCD7F)
       + ((2 * ((v257 ^ 0xA52A12B6) + 1)) & 0xFE9F9AFE)
       + (((v278 ^ 0x96F81B60) + 1) ^ 0xC7AF5DB5)
       + ((2 * ((v278 ^ 0x96F81B60) + 1)) & 0x8F5EBB6A)
       + 1094576333
       + (v280 ^ 0x5F7E118);
  v340 = *(_DWORD *)(v19 - 224);
  v341 = *(_DWORD *)(v19 - 216);
  v342 = *(_DWORD *)(v19 - 204);
  v343 = ((v341 + v340) ^ 0xFFFF5D7F) + ((2 * (v341 + v340)) & 0xFFFEBAFE) + 41601 + v342;
  v344 = ((v319 + (*(_DWORD *)(v19 - 228) ^ 0x942A1D0E)) ^ 0xF97C7B5C)
       + ((2 * (v319 + (*(_DWORD *)(v19 - 228) ^ 0x942A1D0E))) & 0xF2F8F6B8);
  v345 = STACK[0x570];
  v346 = LODWORD(STACK[0x570]) ^ 0x90C95F5D;
  *(_DWORD *)(v19 - 232) = v346;
  v347 = (v343 ^ 0xF72FEF7F) + ((2 * v343) & 0xEE5FDEFE) + 147853441 + v346;
  v348 = v344 + (v347 ^ 0x483742E4) - ((2 * v347) & 0x6F917A36) + 1;
  v349 = v348 - ((2 * v348 + 2090369918) & 0x4BA38040);
  v350 = ((2 * v329) & 0xB8E7E7EA)
       + (v329 ^ 0xDC73F3F5)
       + (((v278 ^ 0x81EF048D) + 1) ^ 0xDEF5E7FF)
       + ((2 * ((v278 ^ 0x81EF048D) + 1)) & 0xBDEBCFFE)
       + (((v280 ^ 0x3C0C44B6) + 1) ^ 0x37FFFF2F)
       + ((2 * ((v280 ^ 0x3C0C44B6) + 1)) & 0x6FFFFE5E)
       + (((v302 ^ 0xB39D210F) + 1) ^ 0x6EF5DD3D)
       + ((2 * ((v302 ^ 0xB39D210F) + 1)) & 0xDDEBBA7A);
  v351 = ((v333 + 1398601936) ^ 0xD5DF77FF)
       + ((2 * (v333 + 1398601936)) & 0xABBEEFFE)
       + (((v257 ^ 0xE235B1E1) + 1) ^ 0x5EFFBFB9)
       + ((2 * ((v257 ^ 0xE235B1E1) + 1)) & 0xBDFF7F72)
       - 887044024
       + (v278 ^ 0x78339247);
  v352 = ((2 * v315) & 0x5E7F6D9E)
       + (v315 ^ 0x2F3FB6CF)
       + (v278 & 0xAFA0C25B ^ 0xE7214239)
       + ((2 * v278) & 0x5F4080B4 ^ 0xB1BF7FCF);
  LODWORD(STACK[0x54C]) = v352 - ((2 * v352 + 561876514) & 0x91AAB0C4);
  v353 = ((v351 - ((2 * v351) & 0xBDB4D3F2) + 1591372281) ^ 0x1689088B ^ ((((v280 & 0xD94265F0 ^ 0xA3055A7D) - 1) & 0x265B0 ^ 0x134533)
                                                                        + (((v280 & 0xD94265F0 ^ 0xA3055A7D) - 1) & 0xD9400040)
                                                                        - 1))
       + (((v302 ^ 0xCAF04F32) + 1) ^ 0x77F9DFFF)
       + ((2 * ((v302 ^ 0xCAF04F32) + 1)) & 0xEFF3BFFE)
       - 2012864511;
  LODWORD(STACK[0x560]) = v353 - ((2 * v353) & 0x5A4EAEF8);
  v354 = STACK[0x568];
  v355 = LODWORD(STACK[0x568]) - 1977351799;
  v356 = (v355 ^ (v349 - 467795489) ^ 0x25D1C020)
       + 341642097
       - 2 * ((v355 ^ (v349 - 467795489) ^ 0x25D1C020) & 0x145D0B73 ^ (v355 ^ (v349 - 467795489)) & 2);
  v357 = (v303 ^ 0x43945B10) + 277876634 + (v337 ^ 0xEF6FEB2D) + ((2 * v337) & 0xDEDFD65A) + 1337;
  v358 = *(_DWORD *)(v19 - 184) + 249007094;
  v359 = (v357 ^ 0x7FBFFDFE) + ((2 * v357) & 0xFF7FFBFC) - 2143288830 + (v358 ^ 0xD2ABC54A);
  v360 = ((2 * v359) & 0xF7FEFDEE) + (v359 ^ 0xFBFF7EF7);
  *(_DWORD *)(v19 - 228) = v360;
  v361 = v360 + 67141897 + (v356 ^ 0x145D0B71);
  v362 = ((v338 + 9965569) ^ 0xEF6BFF5D)
       + ((2 * (v338 + 9965569)) & 0xDED7FEBA)
       + (((v280 ^ 0x6B539C7) + 1) ^ 0xFAED7D7B)
       + ((2 * ((v280 ^ 0x6B539C7) + 1)) & 0xF5DAFAF6)
       + 363234088
       + (v302 ^ 0xD32C7ED6);
  LODWORD(STACK[0x550]) = v362 - ((2 * v362) & 0x107D4C3A);
  LODWORD(STACK[0x574]) = (v302 ^ 0xB8314463)
                        + (v303 & 0x6A50ED57 ^ 0xF9722440)
                        + ((2 * v303) & 0x14A1D88E ^ 0xEF5FB77F)
                        + 207468495
                        - ((2
                          * ((v302 ^ 0xB8314463)
                           + (v303 & 0x6A50ED57 ^ 0xF9722440)
                           + ((2 * v303) & 0x14A1D88E ^ 0xEF5FB77F)
                           + 249429745)) & 0xFAFF71BC);
  v363 = (v280 ^ 0xE9C9643D) + (v302 & 0xEA7A0C5A ^ 0x3A10F443) + ((2 * v302) & 0xD0B418B4 ^ 0xAFDFF77B) + 1843335168;
  v364 = (*(_DWORD *)(v19 - 176) - 2 * v320 + 286360100) ^ 0xBEE81DE ^ v341;
  v365 = ((v332 + 1956548675) ^ 0xD318B3FC ^ v280)
       + (((v302 ^ 0x5CC67677) + 1) ^ 0xC7EFFAFB)
       + ((2 * ((v302 ^ 0x5CC67677) + 1)) & 0x8FDFF5F6)
       + 940573957;
  v366 = ((v335 - 2073671101) ^ v278 ^ 0xB94C4FE8 ^ (((2 * (v280 & 0x606D5B16 ^ 0x6E51F095)) & 0xDCD1752C)
                                                   - (v280 & 0x606D5B16 ^ 0x6E51F095)
                                                   - 1869134591))
       + (((v302 ^ 0x9F12BE2C) + 1) ^ 0x4F7F7D3A)
       + ((2 * ((v302 ^ 0x9F12BE2C) + 1)) & 0x9EFEFA74);
  v367 = (v326 ^ 0x3AD7F3D5)
       + ((2 * v326) & 0x75AFE7AA)
       + (((v303 ^ 0x2DD94717) + 1) ^ 0x7D96CDEF)
       + ((2 * ((v303 ^ 0x2DD94717) + 1)) & 0xFB2D9BDE)
       + 1200700988
       + (v358 ^ 0x2CBE9FB4);
  *(_DWORD *)(v19 - 216) = (v367 ^ 0x2FF9FFC3) - 251674688 + ((2 * v367) & 0x5FF3FF86);
  v368 = LODWORD(STACK[0x580]) + (v361 ^ 0x7D3E656B) + ((2 * v361) & 0xFA7CCAD6) + 2079521161;
  v369 = ((2 * v368) & 0xD7EFCDD6) + (v368 ^ 0x6BF7E6EB);
  LODWORD(STACK[0x564]) = (v350 - ((2 * v350 + 188780352) & 0x954F1AE) + 575324279) ^ v303 ^ 0x881022DC;
  v370 = (v365 - ((2 * v365) & 0x8EAC328A) + 1196824901) ^ v303 ^ 0x881022DC;
  HIDWORD(v371) = v369 + 67639573;
  LODWORD(v371) = v369 - 1811408619;
  v372 = v340 + ((v371 >> 28) ^ 0xDDFB7F37) + ((2 * (v371 >> 28)) & 0xBBF6FE6E) + 570720457;
  v373 = ((2 * v372) & 0x7F7F6CCC) + (v372 ^ 0xBFBFB666);
  v374 = STACK[0x578];
  v375 = ((v364 - ((2 * v364) & 0x5C82CAD8) + 776037740) ^ 0xBC0CE0A1 ^ LODWORD(STACK[0x578])) + v319;
  v376 = (v319 & *(_DWORD *)(v19 - 168) ^ 0x77F6FF6F) + ((2 * (v319 & *(_DWORD *)(v19 - 168))) & 0xEFEDFEDE);
  *(_DWORD *)(v19 - 184) = ((2 * v330) & 0xEEDFA9FE)
                         + (v330 ^ 0xF76FD4FF)
                         + (v303 & 0xA762E10E ^ 0x7C1F9CF6)
                         + (((v302 ^ 0x84544536) + 1) ^ 0xBFDFB8F5)
                         + ((2 * v303) & 0x42C5420C ^ 0x2C04200)
                         + ((2 * ((v302 ^ 0x84544536) + 1)) & 0x7FBF71EA)
                         + (((v358 ^ 0x1511A1D2) + 1) ^ 0x6D7DBF96)
                         + ((2 * ((v358 ^ 0x1511A1D2) + 1)) & 0xDAFB7F2C);
  v377 = v358;
  v378 = (v358 ^ 0xA4080CEC) + (v303 ^ 0x7A90EB4B ^ (LODWORD(STACK[0x558]) - 1414413876));
  v379 = ((2 * v378) & 0xFF7EDB6E) + (v378 ^ 0xFFBF6DB7);
  LODWORD(STACK[0x558]) = v379;
  v380 = (v339 ^ 0xFB7D7D76) + ((2 * v339) & 0xF6FAFAEC) + 75661962 + (v302 ^ 0x4BB7D9D0);
  v381 = ((2 * ((v374 ^ v345 ^ 0x284DA90) + 1)) & 0xF7FFEF7E) + (((v374 ^ v345 ^ 0x284DA90) + 1) ^ 0xFBFFF7BF) + v354;
  v382 = *(_DWORD *)(v19 - 232);
  v383 = v355 & (((v382 + 1) ^ 0xFFFCBFE3) + 213021 + ((2 * (v382 + 1)) & 0xFFF97FC6));
  v384 = ((2 * ((v303 ^ 0x34322401) + 1)) & 0x62BBF74C)
       + (((v303 ^ 0x34322401) + 1) ^ 0xB15DFBA6)
       + ((v366 - 1333755194) ^ 0xFDDBF6FD)
       + ((2 * (v366 - 1333755194)) & 0xFBB7EDFA);
  LODWORD(STACK[0x580]) = v384 - ((2 * v384 - 1584653638) & 0xC9119FF8);
  LODWORD(STACK[0x56C]) = ((LODWORD(STACK[0x54C]) - 644604045) ^ 0xC302D1C8 ^ v280)
                        + (v302 & 0x674A1845 ^ 0x2022A061)
                        + ((2 * v302) & 0xCE90308A ^ 0xBFFFFF7D);
  v385 = ((2 * v383) & 0xF93ACBDE) + (v383 ^ 0x7C9D65EF) + v373;
  v386 = v385 - ((2 * v385 - 2025470122) & 0x80EAC826);
  v387 = *(_DWORD *)(v19 - 192);
  v388 = v379 + v340 + ((v342 + v387) ^ 0x204044B4) - ((2 * (v342 + v387)) & 0xBF7F7696);
  v389 = STACK[0x57C];
  v390 = v354;
  v391 = v388
       + ((v376 + LODWORD(STACK[0x57C]) + 2024730079 + v382) ^ 0x7EB7AB7F)
       + ((2 * (v376 + LODWORD(STACK[0x57C]) + 2024730079 + v382)) & 0xFD6F56FE)
       - v354
       - v373
       - 175278665;
  v392 = ((2 * v391) & 0xD79DEDF6) + (v391 ^ 0xEBCEF6FB);
  v393 = (v377 ^ 0x4902A10D) + (v303 ^ 0xDD5035A2 ^ (v363 - ((2 * v363) & 0x3A9FC196) - 1655709493));
  v394 = ((2 * v393) & 0x7FF2C9FE) + (v393 ^ 0xBFF964FF);
  *(_DWORD *)(v19 - 168) = v394;
  LODWORD(STACK[0x54C]) = v373 - 424674492 + (~(2 * v373 + 8426290) | 0xB3209CAB);
  v395 = (v303 & 0x42381F6D ^ 0xFF8FDEBD)
       + (v380 ^ 0x47DD7FCF)
       + LODWORD(STACK[0x55C])
       + ((2 * v380) & 0x8FBAFF9E)
       - 1201494988
       + (v377 ^ 0x50D33C);
  *(_DWORD *)(v19 - 224) = ((2 * v395) & 0xFBFEFFD6) + (v395 ^ 0x7DFF7FEB);
  v396 = (v354 - ((2 * v354 + 340263696) & 0xC781ED56) + 1843722291) ^ 0xE3C0F6AB ^ (v373 + 1077954970);
  v397 = ((((v375 - ((2 * v375) & 0xEBA603DE) + 1976762863) ^ v345 ^ 0xE51A5EB2 ^ v355)
         + 1126867243
         - ((2 * ((v375 - ((2 * v375) & 0xEBA603DE) + 1976762863) ^ v345 ^ 0xE51A5EB2 ^ v355)) & 0x86554256)) ^ 0x432AA12B)
       - 1077954970
       - v373;
  v398 = v397 - ((2 * v397) & 0xCC8BB81C);
  HIDWORD(v371) = v392 + 261;
  LODWORD(v371) = v392 + 338757893;
  v399 = v387
       + ((v371 >> 9) ^ 0xFFEF16FF)
       + ((2 * (v371 >> 9)) & 0xFFDE2DFE)
       - 1039946497
       - ((2 * (v387 + ((v371 >> 9) ^ 0xFFEF16FF) + ((2 * (v371 >> 9)) & 0xFFDE2DFE) + 1108225)) & 0x83E587FC);
  v400 = v377;
  v401 = ((2 * (v370 ^ v400)) & 0xFDE9EFE8 ^ 0xC929CA20) + (v370 ^ v400 ^ 0x9B6812E4);
  v402 = (v374 ^ v345 ^ (LODWORD(STACK[0x584]) - ((2 * LODWORD(STACK[0x584]) + 1627406482) & 0xBBD6B564) + 241924859) ^ 0x5F6F8022)
       - LODWORD(STACK[0x584])
       - v390;
  v403 = v401 - 1715612541 + ((v398 + 1715854350) ^ 0xA7B71FF0 ^ v399);
  v404 = v377;
  v405 = (v303 ^ 0x594F3478 ^ (LODWORD(STACK[0x550]) - 2009160163))
       + (((v400 ^ 0x5CBBD3EB) + 1) ^ 0x587AEDFF)
       + ((2 * ((v400 ^ 0x5CBBD3EB) + 1)) & 0xB0F5DBFE);
  v406 = (v373 + 1077954970) ^ (v402 - ((2 * v402 - 1967670182) & 0x94027C92) + 257760374);
  v407 = v345 ^ 0x50BC3B4E ^ (v386 - 2078783554);
  v408 = (v374 ^ 0x14E5BD21 ^ (v381 - ((2 * v381 + 206050196) & 0xD5071D8) + 348930742)) - 1077954970 - v373;
  v409 = (((v406 ^ 0x4A013E49) + 370966793 - 2 * ((v406 ^ 0x4A013E49) & 0x161C811B ^ v406 & 0x12)) ^ 0x161C8109)
       + (v399 ^ 0x3E0D3C01)
       + 1;
  v410 = v387 + (v403 ^ 0xFAF35FE7) + ((2 * v403) & 0xF5E6BFCE) + 84713497;
  HIDWORD(v371) = (v410 ^ 0xFFB2B8E7) + 5064473 + ((2 * v410) & 0xFF6571CE);
  LODWORD(v371) = HIDWORD(v371);
  v411 = v371 >> 27;
  v412 = *(_DWORD *)(v19 - 176);
  v413 = v412 - 707576141 + (v411 ^ 0x663EFDF7);
  v414 = v413 + ((2 * v411) & 0xCC7DFBEE);
  v415 = (v409 + 1323320565 + (~(2 * v409) | 0x623F7615) + 1) ^ 0x4EE044F5 ^ (v414 - 921648229);
  v416 = ((v405 - 1484451327) ^ 0xFDB3FD63)
       + ((2 * (v405 - 1484451327)) & 0xFB67FAC6)
       + 38535837
       + ((v415 + 1238771761 - ((2 * v415) & 0x93AC5062)) ^ 0x49D62831);
  v417 = v412 + (v416 ^ 0xF776EFE6) + ((2 * v416) & 0xEEEDDFCC);
  v418 = (v408 - ((2 * v408) & 0xEE88B7F4) + 2000968698) ^ v399 ^ 0xB6B69804 ^ (v414 - 921648229);
  v419 = (v399 ^ 0xC1F2C3FE) + ((v396 + 991570452 - ((2 * v396) & 0x76345428)) ^ 0x3B1A2A14);
  HIDWORD(v371) = v417 + 158203335;
  LODWORD(v371) = v417 - 579994169;
  v420 = LODWORD(STACK[0x584]) + ((v371 >> 24) ^ 0x67EFFDEF) + ((2 * (v371 >> 24)) & 0xCFDFFBDE);
  v421 = (v419 - 110449626 - ((2 * v419) & 0xF2D5584C)) ^ v355;
  v422 = (v421 ^ 0xF96AAC26) + 1666765510 - 2 * ((v421 ^ 0xF96AAC26) & 0x6358D2C7 ^ v421 & 1);
  v423 = v420 + 1217405531 + ((v418 - 1268142726 - ((2 * v418) & 0x68D35AF4)) ^ 0xB469AD7A);
  v424 = v394 + v389 + (v423 ^ 0xAFFCFEEB) + ((2 * v423) & 0x5FF9FDD6);
  v425 = (v414 - 2 * ((v414 + 1225835420) & 0x7F8183EF ^ v413 & 1) + 1217546122) ^ 0x7F8183EE ^ (v420 + 1217405531);
  v426 = v420 - 1083231620;
  v427 = (((v399 ^ 0xC1F2C3FE) + v407) ^ 0x7DFDFFFF)
       + ((2 * ((v399 ^ 0xC1F2C3FE) + v407)) & 0xFBFBFFFE)
       - v414
       - 765240098
       + v420
       - 1083231620;
  v428 = v427 - ((2 * v427 + 1599971022) & 0x6C6B9236);
  HIDWORD(v371) = v424 + 1432464731;
  LODWORD(v371) = v424 - 715018917;
  v429 = *(_DWORD *)(v19 - 204);
  v430 = v429 + ((v371 >> 28) ^ 0x6FED535E) + ((2 * (v371 >> 28)) & 0xDFDAA6BC) - 1877824350;
  v431 = ((2 * v430) & 0xDF5EFBFE) + (v430 ^ 0xEFAF7DFF);
  v432 = (v303 ^ 0x8D712550)
       + (((v404 ^ 0x13E5AD20) + 1) ^ 0x34FFFBD5)
       + ((2 * ((v404 ^ 0x13E5AD20) + 1)) & 0x69FFF7AA)
       - 889191381;
  LODWORD(STACK[0x584]) = ((2 * v432) & 0xCDDB46C4) + (v432 ^ 0x66EDA362);
  v433 = (LODWORD(STACK[0x54C]) ^ 0x98628DAB ^ v399) - 921648229 + v414 + 1;
  v434 = (v433 ^ 0x5FBFEFFF) + v373 + ((2 * v433) & 0xBF7FDFFE);
  LODWORD(STACK[0x57C]) = v401 + 17500172;
  v435 = ((((v428 + 635738242) ^ 0xB635C91B ^ (v431 + 273711617))
         - 1536729826
         - ((2 * ((v428 + 635738242) ^ 0xB635C91B ^ (v431 + 273711617))) & 0x48CEBA3C)) ^ 0xA4675D1E)
       + v401
       + 17500172;
  v436 = v429 + (v435 ^ 0x37BBDFEB) + ((2 * v435) & 0x6F77BFD6) - 1869199493;
  v437 = ((2 * v436) & 0xDFFFEFF6) + (v436 ^ 0x6FFFF7FB);
  v438 = v420
       + 1217405531
       + (((v399 ^ 0xC1F2C3FE ^ (v414 - 921648229))
         - ((2 * (v399 ^ 0xC1F2C3FE ^ (v414 - 921648229))) & 0xAC46AA9C)
         + 1445156174) ^ 0xA9DCAAB1);
  v439 = (v420 + 1217405531) ^ (v434 - ((2 * v434 + 16823094) & 0x73B1020) - 467803733);
  v440 = (v303 ^ 0x7C68357C ^ (LODWORD(STACK[0x560]) + 757553020))
       + (((v400 ^ 0x981B7497) + 1) ^ 0x61FF769D)
       + ((2 * ((v400 ^ 0x981B7497) + 1)) & 0xC3FEED3A)
       - 1644131997;
  *(_DWORD *)(v19 - 176) = (v440 ^ 0xF6E761C7) + 2147458939 + ((2 * v440) & 0xEDCEC38E);
  HIDWORD(v371) = v437 + 5;
  LODWORD(v371) = v437 - 1879046139;
  v441 = *(_DWORD *)(v19 - 232);
  v442 = v441
       + ((v371 >> 9) ^ 0x3E7DEB7C)
       + ((2 * (v371 >> 9)) & 0x7CFBD6F8)
       + 874737982
       - ((2 * (v441 + ((v371 >> 9) ^ 0x3E7DEB7C) + ((2 * (v371 >> 9)) & 0x7CFBD6F8) - 1048439676)) & 0xE542B974);
  v443 = v431 + 273711617 + ((v425 - 1309657530 - ((2 * v425) & 0x63E06C8C)) ^ 0xB1F03646);
  v444 = (v443 ^ 0xBDDF7EF6) - v414 + ((2 * v443) & 0x7BBEFDEC);
  v445 = v444 - ((2 * v444 - 232817954) & 0x96740146);
  v446 = (v438 ^ 0xBF757BFF) + (v399 ^ 0x3E0D3C01) + ((2 * v438) & 0x7EEAF7FE);
  v447 = *(_DWORD *)(v19 - 228);
  *(_DWORD *)(v19 - 192) = v431 + 1517742054;
  v448 = v442 ^ 0x72A15CBA;
  v449 = v420 - 1083231620 + v431 + 1517742054 + 1056606714 + (v442 ^ 0x72A15CBA);
  v450 = v447
       + v441
       + ((v414 - 921648229 + (v422 ^ 0x6358D2C6)) ^ 0x67F7975F)
       + ((2 * (v414 - 921648229 + (v422 ^ 0x6358D2C6))) & 0xCFEF2EBE)
       + (v449 ^ 0x54A10150)
       - ((2 * v449) & 0x56BDFD5E)
       - 1461923470;
  v451 = ((2 * v450) & 0x1FBFFD74) + (v450 ^ 0xFDFFEBA);
  v452 = (((v439 ^ 0x39D8810) + 748197944 - 2 * ((v439 ^ 0x39D8810) & 0x2C989839 ^ v439 & 1)) ^ 0x2C989838)
       - 273711617
       - v431;
  v453 = (v431 + 273711617) & ((-1892953910 - v420 - ((-306307008 - 2 * (v420 - 1083231620)) & 0xAF77E64C)) ^ 0xD7BBF326);
  v454 = (v446 - ((2 * v446 - 2129328124) & 0xFBEAAE32) + 1048566555) ^ 0xFDF55719 ^ (v431 + 273711617);
  v455 = v454 - ((2 * v454) & 0x6041E1E8);
  HIDWORD(v371) = v451 + 2097478;
  LODWORD(v371) = v451 - 266337978;
  v456 = v390 + ((v371 >> 27) ^ 0xD9DDD1EF) + ((2 * (v371 >> 27)) & 0xB3BBA3DE);
  v457 = v456 + 602691356;
  v458 = ((v452 - ((2 * v452) & 0x73CBCE60) + 971368240) ^ 0x4B44BB8A ^ v442) - (v456 + 602691356) + 1940268930;
  v459 = v447;
  v460 = v447 + v390 + (v458 ^ 0xFFF5FB97) + ((2 * v458) & 0xFFEBF72E);
  v461 = (v453 ^ 0x7EFE7FF3) + ((2 * v453) & 0xFDFCFFE6) - 2130608115 + (v442 ^ 0x72A15CBA);
  v462 = v420 - 1083231620 + (v461 ^ 0xFE497EFB) + ((2 * v461) & 0xFC92FDF6) - (v456 + 602691356) + 1807727503;
  v463 = v462 - ((2 * v462 + 628865454) & 0x4B7DE124);
  HIDWORD(v371) = v460 + LODWORD(STACK[0x528]);
  LODWORD(v371) = v460 + 1941654812;
  v464 = v456 - 1337577574;
  v465 = (v431 - ((2 * v431 + 547423236) & 0xB22655AE) + 1768139993) ^ v442 ^ 0x2BB2766D ^ (v456 - 1337577574);
  v466 = v373 + ((v371 >> 24) ^ 0x7A7AE9FD) + ((2 * (v371 >> 24)) & 0xF4F5D3FA);
  v467 = STACK[0x558];
  v468 = LODWORD(STACK[0x558])
       + v373
       + ((v464 + ((v455 + 807465204) ^ 0x4281AC4E ^ v442)) ^ 0x76EFEEF2)
       + ((2 * (v464 + ((v455 + 807465204) ^ 0x4281AC4E ^ v442))) & 0xEDDFDDE4);
  v469 = v466 - 72851525;
  v470 = v468 + v466 - 72851525;
  HIDWORD(v371) = v470 + 1296539033;
  LODWORD(v371) = v470 - 1656250983;
  v471 = (v399 ^ 0xC1F2C3FE) + ((v371 >> 28) ^ 0x2EF7FECB) + ((2 * (v371 >> 28)) & 0x5DEFFD96) - 788004555;
  v472 = ((2 * v471) & 0xDFCDED7C) + (v471 ^ 0xEFE6F6BE);
  v473 = *(_DWORD *)(v19 - 224)
       + (v399 ^ 0xC1F2C3FE)
       + ((v464 + ((v445 - 1001800174) ^ 0x399B5C19 ^ v442)) ^ 0x5E5FDFBF)
       + ((2 * (v464 + ((v445 - 1001800174) ^ 0x399B5C19 ^ v442))) & 0xBCBFBF7E)
       + v466
       - 72851525
       - v472
       - 668081776;
  v474 = ((2 * v473) & 0xDF77FFDC) + (v473 ^ 0xEFBBFFEE);
  HIDWORD(v371) = v474 + 18;
  LODWORD(v371) = v474 + 272891922;
  v475 = (((v463 + 947703145) ^ 0xA5BEF092 ^ (v466 - 976920675))
        - 1935029881
        - ((2 * ((v463 + 947703145) ^ 0xA5BEF092 ^ (v466 - 976920675))) & 0x1953930E)) ^ 0x8CA9C987;
  v476 = v472 + 270076226 + v475 + 865842589 - ((2 * (v472 + 270076226 + v475)) & 0x67376B3A);
  v477 = (((v303 ^ 0xCA4C0A9C) + 1) ^ 0xFFFF227D)
       + ((2 * ((v303 ^ 0xCA4C0A9C) + 1)) & 0xFFFE44FA)
       + ((LODWORD(STACK[0x56C]) - 2269215) ^ 0xAC89FB4F)
       + ((2 * (LODWORD(STACK[0x56C]) - 2269215)) & 0x5913F69E)
       + 1400300084;
  LODWORD(STACK[0x554]) = v404;
  *(_DWORD *)(v19 - 232) = ((2 * (v477 + (v404 ^ 0xF695D15F))) & 0xB7FFFFFE)
                         + ((v477 + (v404 ^ 0xF695D15F)) ^ 0x5BFFFFFF);
  v478 = v414 + ((v371 >> 9) ^ 0xBF7FBFF2) + ((2 * (v371 >> 9)) & 0x7EFF7FE4);
  v479 = v466 + 1251677330;
  v480 = (v466 + 1251677330) ^ (v457 - ((2 * v457 + 414429438) & 0x4FA9EE22) - 1272000624);
  v481 = (v480 ^ 0x27D4F711) + 167096131 - 2 * ((v480 ^ 0x27D4F711) & 0x9F5AF4F ^ v480 & 0xC);
  v482 = v478 + 160498601;
  v483 = (v472 - ((2 * v472 + 540152454) & 0x7CC5E99E) + 1316748818) ^ 0x3E62F4CF ^ (v478 + 160498601);
  v484 = v483 - ((2 * v483) & 0xEBE38212);
  v485 = v466 + 1251677330 + ((v465 - 1019964508 - ((2 * v465) & 0x86692748)) ^ 0xC33493A4);
  v486 = *(_DWORD *)(v19 - 184) - 508365696;
  v487 = (((v476 ^ 0x339BB59D ^ (v478 + 160498601))
         + 1425403956
         - ((2 * (v476 ^ 0x339BB59D ^ (v478 + 160498601))) & 0xA9EBE068)) ^ 0x54F5F034)
       + v486;
  v488 = v414 + (v487 ^ 0x7DFC98F7) + ((2 * v487) & 0xFBF931EE);
  HIDWORD(v371) = v488 + 1266701076;
  LODWORD(v371) = v488 - 1551871212;
  v489 = ((v371 >> 27) ^ 0x7D4EF7F3) + v426 + ((2 * (v371 >> 27)) & 0xFA9DEFE6);
  v490 = v489 - ((2 * v489 + 396619736) & 0x3562CDC6);
  v491 = v464 & (((v448 - 1) ^ 0x7D7EABF9) - 2105453561 + ((2 * (v448 - 1)) & 0xFAFD57F2));
  v492 = v466 - 1652484398;
  v493 = (v491 ^ 0x77DA7F25)
       - 8519947
       + ((2 * v491) & 0xEFB4FE4A)
       + v466
       - 1652484398
       + ((v472 + 270076226 + v448) ^ 0x82808080)
       - ((2 * (v472 + 270076226 + v448)) & 0xFAFEFEFE)
       + 263;
  v494 = v493 - ((2 * v493 + 109182014) & 0x6CEF47A);
  v495 = ((v472 + 270076226) ^ v479) - 632622623 - ((2 * ((v472 + 270076226) ^ v479)) & 0xB495E3C2);
  v496 = v459 + v426 + (v485 ^ 0x3FFDF361) + ((2 * v485) & 0x7FFBE6C2);
  v478 += 1908692094;
  v497 = v490 - 1501339953;
  v498 = v497 ^ 0x9AB166E3;
  v499 = ((v490 - 1501339953) ^ 0x9AB166E3) + v478;
  v500 = v496
       + ((v499 + v431 + v472 + 2147205096 + 943356550) ^ 0x3E0CE05)
       - ((2 * (v499 + v431 + v472 + 2147205096 + 943356550)) & 0xF83E63F4);
  v501 = ((v484 - 168705783) ^ 0x6F40A7EA ^ (v490 - 1501339953)) + v472 + 270076226;
  v502 = (v472
        + 270076226
        + (v481 ^ 0x9F5AF43)
        + 1378356321
        - ((2 * (v472 + 270076226 + (v481 ^ 0x9F5AF43))) & 0xA45018C2)) ^ v464;
  HIDWORD(v371) = v500 - 1424054654;
  LODWORD(v371) = v500 - 1038178686;
  v503 = (((v502 ^ 0x52280C61) - 1575277301 - 2 * ((v502 ^ 0x52280C61) & 0x221B2D0F ^ v502 & 4)) ^ 0xA21B2D0B) + v482;
  v504 = v431 + ((v371 >> 24) ^ 0xFFFFEFEF) + ((2 * (v371 >> 24)) & 0xFFFFDFDE);
  v505 = ((v494 + 917010524) ^ 0x83677A3D ^ v482)
       + 1179725362
       - ((2 * ((v494 + 917010524) ^ 0x83677A3D ^ v482)) & 0x8CA25C64);
  v506 = (LODWORD(STACK[0x564]) ^ v404 ^ 0x47C0EDFE)
       - 491389024
       + ((2 * (LODWORD(STACK[0x564]) ^ v404)) & 0xFFDE54FA ^ 0x705E0402);
  v507 = v504 - 1750121274;
  v508 = v504 + 273715729;
  v504 += 273715730;
  v509 = (v504 ^ v497 ^ 0x9AB166E3) + 777258207 - ((2 * (v504 ^ v497 ^ 0x9AB166E3)) & 0x5CA809BE);
  v510 = v506 + *(_DWORD *)(v19 - 192);
  LODWORD(STACK[0x578]) = v506;
  v511 = v510
       + (((v497 ^ 0x9AB166E3) + (v505 ^ 0x46512E32)) ^ 0xFBFE5FFF)
       + ((2 * ((v497 ^ 0x9AB166E3) + (v505 ^ 0x46512E32))) & 0xF7FCBFFE)
       + v507;
  HIDWORD(v371) = v511 + 486917058;
  LODWORD(v371) = v511 + 2097529794;
  v512 = ((v503 - ((2 * v503) & 0x4631889E) + 588825679) ^ 0xB9A9A2AC ^ v497) + v504;
  v513 = v448 + ((v371 >> 28) ^ 0xFEFC53BF) + ((2 * (v371 >> 28)) & 0xFDF8A77E) + 17017921;
  v514 = ((2 * v513) & 0x7EDFFCFA) + (v513 ^ 0xBF6FFE7D);
  v515 = (v514 + 1083179395) ^ (v512 - 463175807 - ((2 * v512) & 0xC8C8FF02));
  v516 = v499
       + v469
       + (((v495 ^ 0xDA4AF1E1) + 1) ^ 0x7FFFFF77)
       + ((2 * ((v495 ^ 0xDA4AF1E1) + 1)) & 0xFFFFFEEE)
       + 1723819147;
  v517 = (v516 - 1765895003 - ((2 * v516) & 0x2D7D294A)) ^ 0x96BE94A5 ^ v504;
  *(_DWORD *)(v19 - 204) = v467 + 4231753;
  v518 = (((v515 ^ 0xE4647F81) - 842471104 - 2 * ((v515 ^ 0xE4647F81) & 0x4DC8E942 ^ v515 & 2)) ^ 0xCDC8E940)
       + v467
       + 4231753;
  v519 = v448 + (v518 ^ 0xDE55E7BF) + ((2 * v518) & 0xBCABCF7E) - 326135111;
  v520 = ((2 * v519) & 0xF3EFDDFC) + (v519 ^ 0xF9F7EEFE);
  HIDWORD(v371) = v520 + 258;
  LODWORD(v371) = v520 + 101191938;
  v521 = v457 + ((v371 >> 9) ^ 0x5FE3F4FE) + ((2 * (v371 >> 9)) & 0xBFC7E9FC) - 272662560;
  v522 = v457 + ((v371 >> 9) ^ 0x5FE3F4FE) + ((2 * (v371 >> 9)) & 0xBFC7E9FC) + 745923456;
  v523 = (v522 ^ (v514 + 1083179395)) - 932904258 - ((2 * (v522 ^ (v514 + 1083179395))) & 0x90CA057C);
  v524 = ((v517 - ((2 * v517) & 0x783FFA) + 3940349) ^ 0xC8591D43 ^ v523) + v486;
  v525 = v457 + (v524 ^ 0xD7BFF7F7) + ((2 * v524) & 0xAF7FEFEE);
  HIDWORD(v371) = v525 - 1481466035;
  LODWORD(v371) = v525 - 1078812851;
  v526 = ((2 * ((v509 ^ 0x2E5404DF) + 1)) & 0x75EC7BEA) + (((v509 ^ 0x2E5404DF) + 1) ^ 0xBAF63DF5) + v514;
  v527 = v526 - ((2 * v526 + 187926300) & 0x306DB454);
  v528 = v469 + ((v371 >> 27) ^ 0xFF3EAAFF) + ((2 * (v371 >> 27)) & 0xFE7D55FE);
  v529 = v508 + ((v478 - ((2 * v478 + 261709400) & 0x11EAA90E) + 549585843) ^ 0xEDBBCD9B ^ v497);
  v530 = v507 + ((v514 + 1083179395) & v508 ^ 0x10280038) - ((2 * ((v514 + 1083179395) & v508)) & 0xDFAFFF8E) + v521 + 1;
  v531 = v530 - 224965967 + (~(2 * v530 + 1247764838) | 0x6530CC05);
  v532 = v514 + 1744601076;
  v533 = v528 - 1211059070;
  v534 = *(_DWORD *)(v19 - 168)
       + v492
       - v507
       + (v501 ^ 0x5FEEFFD9)
       + ((2 * v501) & 0xBFDDFFB2)
       + v514
       + 1744601076
       - v521
       + v528
       - 1211059070;
  HIDWORD(v371) = v534 + 1572680673;
  LODWORD(v371) = v534 - 759352351;
  v535 = v528 + 1337199064;
  v536 = ((v528 + 1337199064) & (v522 + 1)) - ((2 * ((v528 + 1337199064) & (v522 + 1))) & 0x4A78126E);
  v537 = ((v371 >> 24) ^ 0x3E2FCDEF) + v472 + ((2 * (v371 >> 24)) & 0x7C5F9BDE);
  v538 = v537 - ((2 * v537 - 1546488154) & 0xCCEEE904) + 945860565;
  v539 = v478
       + ((v529 + 2) ^ 0xDFDC7DDE)
       + ((2 * (v529 + 2)) & 0xBFB8FBBC)
       + v514
       + 1744601076
       - v521
       - (v528
        - 1211059070)
       - 1142294042;
  v540 = v538 ^ 0x66777482;
  v541 = *(_DWORD *)(v19 - 176)
       + v472
       + 2147205096
       + ((v539 + (v538 ^ 0x66777482)) ^ 0x6EDEF9EB)
       + ((2 * (v539 + (v538 ^ 0x66777482))) & 0xDDBDF3D6);
  v542 = (((v527 - 1647272520) ^ v497 ^ v522 ^ 0x8287BCC9)
        - 828075189
        - 2 * (((v527 - 1647272520) ^ v497 ^ v522 ^ 0x8287BCC9) & 0x4EA4934F ^ ((v527 - 1647272520) ^ v497 ^ v522) & 4)) ^ 0xCEA4934B ^ v535;
  v543 = ((2 * ((v523 ^ 0xC86502BE) + 1)) & 0x7FFDFFFC) + (((v523 ^ 0xC86502BE) + 1) ^ 0x3FFEFFFE) + v533;
  v544 = (v514 + 1083179395) ^ 0x991D52E0 ^ (v543 - 2 * ((v543 + 400840024) & 0x191D52E5 ^ v543 & 5) - 251549640);
  HIDWORD(v371) = v541 + 1334357281;
  LODWORD(v371) = v541 - 1551323871;
  v545 = ((v371 >> 25) ^ 0xBEE5FD5A) + v478 + ((2 * (v371 >> 25)) & 0x7DCBFAB4);
  v546 = v545 - ((2 * v545 + 835543970) & 0x668A76CE) + 204205368;
  v547 = ((v542 - ((2 * v542) & 0xBB4356A0) + 1570876240) ^ 0x3BD6DFD2 ^ v538) + (v546 ^ 0xCCBAC498);
  v548 = (v538 ^ 0x66777482)
       + (((v531 ^ 0x4D6799FD ^ v535) - 2130314621 - ((2 * (v531 ^ 0x4D6799FD ^ v535)) & 0x20BF506)) ^ 0x8105FA83);
  v549 = v467 + v478 + ((v547 + 1) ^ 0x7BE577FF) + ((2 * (v547 + 1)) & 0xF7CAEFFE);
  HIDWORD(v371) = v549 + 121563193;
  LODWORD(v371) = v549 + 2060511289;
  v550 = *(_DWORD *)(v19 - 224) - 2113896427 + ((v548 - ((2 * v548) & 0xD73EABFA) + 1805604349) ^ 0x58DA6E9A ^ v546);
  v551 = v498 + ((v371 >> 17) ^ 0x63F3DFD8) + ((2 * (v371 >> 17)) & 0xC7E7BFB0) - 1676926936;
  v552 = ((2 * v551) & 0x7F7FCE9E) + (v551 ^ 0xBFBFE74F);
  v553 = (v538 ^ 0x66777482) + ((v544 + 865056082 - ((2 * v544) & 0x671F6AA4)) ^ 0x338FB552);
  v554 = v498 + (v550 ^ 0x7BFE7B7E) + ((2 * v550) & 0xF7FCF6FC) + 1559521706 + v552;
  v555 = ((2 * v554) & 0x9EDCF9BA) + (v554 ^ 0xCF6E7CDD);
  v556 = v546 ^ 0x33453B67;
  HIDWORD(v371) = v555 + 99107;
  LODWORD(v371) = v555 + 814842659;
  v557 = v507 + ((v371 >> 17) ^ 0x7DFFBD37) + ((2 * (v371 >> 17)) & 0xFBFF7A6E);
  v558 = ((v536 + 624691511) ^ 0x434B7DB5 ^ v538)
       - v521
       - 320641823
       + (~(2 * (((v536 + 624691511) ^ 0x434B7DB5 ^ v538) - v521) + 110311616) | 0xACCC6EFF);
  v559 = v557 - 137396258;
  v560 = (v553 ^ 0x6D6FEB6F) + ((2 * v553) & 0xDADFD6DE) - 1836051311 + (v546 ^ 0x33453B67);
  v561 = *(_DWORD *)(v19 - 216);
  v562 = v557 - 137396258 + v552;
  v563 = v561 + v507 + (v560 ^ 0x6FFDFD9E) + ((2 * v560) & 0xDFFBFB3C) - v562;
  HIDWORD(v371) = v563 - 170846549;
  LODWORD(v371) = v563 + 1952011435;
  v564 = v538 ^ 0xAD5A911E ^ (v552
                            + 1077942449
                            + (v538 ^ 0xAACDB01A ^ v546)
                            - ((2 * (v552 + 1077942449 + (v538 ^ 0xAACDB01A ^ v546))) & 0x965BCB38)
                            - 886184548);
  v565 = ((v533 - ((2 * v533 + 801548970) & 0x8A719182) - 585359850) ^ 0x234FBC43 ^ v538) + v535;
  v566 = (v565 ^ 0xC0200900) - ((2 * v565) & 0x7FBFEDFE) + 1071642368 + (v546 ^ 0x33453B67);
  v567 = (2 * (v557 - 137396258) - ((4 * (v557 - 137396258) + 189284572) & 0xA4ADA21C) + 1476063612) & 0xB76FBE36 ^ 0x214FB816;
  v568 = (-201092516 - (v567 | 0xF403925C) + (v567 | 0xBFC6DA3)) ^ 0x1BF565B3;
  v569 = v514 + ((v371 >> 4) ^ 0x7FDB6D8D) + ((2 * (v371 >> 4)) & 0xFFB6DB1A);
  v570 = (v557 - 90075115) ^ 0x39CA6E6E ^ (v568 - ((2 * v568) & 0x35949CDC) + 449465966);
  v571 = STACK[0x554];
  v572 = (LODWORD(STACK[0x554]) ^ LODWORD(STACK[0x574]) ^ 0xE13318FE)
       + 1525447740
       + ((2 * (LODWORD(STACK[0x554]) ^ LODWORD(STACK[0x574]))) & 0xFF6F7FBA ^ 0x3D094E02);
  v573 = (v558 ^ 0x1ADCF3E7 ^ v546) - v562;
  v574 = v569 + 527595508;
  *(_DWORD *)(v19 - 192) = v572;
  v575 = v572
       + v532
       + ((v573 - (v569 + 527595508) + 464239382) ^ 0x7EBDCF7F)
       + ((2 * (v573 - (v569 + 527595508) + 464239382)) & 0xFD7B9EFE);
  HIDWORD(v371) = v575 + LODWORD(STACK[0x524]);
  LODWORD(v371) = v575 + 1407425006;
  v576 = ((2 * (v570 - ((2 * v570) & 0x5AC94E1A) - 1385912563)) & 0xFFFCC7DE ^ 0x675C035A)
       + ((v570 - ((2 * v570) & 0x5AC94E1A) - 1385912563) ^ 0xCC50E252);
  v577 = v564 - v559;
  v578 = ((2 * v566) & 0xFFFC075A) + (v566 ^ 0xFFFE03AD) + v552 - v559;
  v579 = ((v371 >> 25) ^ 0x7FB697FB) + v521 + ((2 * (v371 >> 25)) & 0xFF6D2FF6);
  v580 = v579 - ((2 * v579 + 436180810) & 0x1903188E);
  v581 = v569 - 1061907466;
  v582 = (v578 - ((2 * v578 + 2061502874) & 0xCB3DE912) + 588183894) ^ 0xE59EF489 ^ (v569 - 1061907466);
  v583 = v580 + 1233213420;
  v584 = ((v582 + 536174598 + (~(2 * v582) | 0xC0153FF3) + 1) ^ 0x1FF56006) + ((v580 + 1233213420) ^ 0x737E73B8);
  v585 = v576
       + 105489
       + (((v546 ^ 0x33453B67 ^ (v552 + 1077942449))
         + 2144820901
         + (~(2 * (v546 ^ 0x33453B67 ^ (v552 + 1077942449))) | 0x5142B7)) ^ 0x8028A15B);
  v586 = v574
       + ((v576 + 105489) & (v552 + 1077942450) ^ 0xA00E0265)
       - ((2 * ((v576 + 105489) & (v552 + 1077942450))) & 0xBFE3FB34)
       + 1;
  v587 = (v586 - ((2 * v586 + 40383288) & 0xA9451D2A) + 1440131121) ^ (v552 + 1077942449);
  v588 = (v587 ^ 0x54A28E95) + 1838159801 - 2 * ((v587 ^ 0x54A28E95) & 0x6D9017BB ^ v587 & 2);
  v589 = v506 + v521 + ((v584 + 1) ^ 0x6CFF65FF) + ((2 * (v584 + 1)) & 0xD9FECBFE);
  HIDWORD(v371) = v589 + LODWORD(STACK[0x518]);
  LODWORD(v371) = v589 + 895744746;
  v590 = v533 + ((v371 >> 17) ^ 0x6EEF1BF4) + ((2 * (v371 >> 17)) & 0xDDDE37E8);
  v591 = ((((v576 + 105489) ^ v581) + 1828203800 - ((2 * ((v576 + 105489) ^ v581)) & 0xD9F05A30)) ^ 0x6CF82D18) + 1;
  v592 = v583 ^ 0x8C818C47;
  v593 = ((v580 + 1233213420) ^ 0x8C818C47) + (v591 ^ 0xF9F71BFF) + ((2 * v591) & 0xF3EE37FE);
  v594 = (v583 ^ 0x8C818C47) - 2070282141 + (v585 ^ 0x7B65F15F) + ((2 * v585) & 0xF6CBE2BE);
  v595 = ((v577 - 47321143) ^ 0xEE16EFF3)
       + ((2 * (v577 - 47321143)) & 0xDC2DDFE6)
       + v574
       - 1289016305
       + (v583 ^ 0x8C818C47);
  v596 = v467;
  v597 = v590 - 1611074048;
  v598 = v467
       + (v595 ^ 0xF7A57CBE)
       + ((2 * v595) & 0xEF4AF97C)
       - (((v371 >> 17) ^ 0x6EEF1BF4)
        + ((2 * (v371 >> 17)) & 0xDDDE37E8)
        - 1611074048);
  HIDWORD(v371) = v598 + LODWORD(STACK[0x510]);
  LODWORD(v371) = v598 + 2029523095;
  v599 = v590 + 687094114;
  v600 = (v583 ^ 0x8C818C47 ^ (v590 + 687094114)) - ((2 * (v583 ^ 0x8C818C47 ^ (v590 + 687094114))) & 0x43FB2688);
  v601 = v540 + ((v371 >> 17) ^ 0xF72B6B56) + ((2 * (v371 >> 17)) & 0xEE56D6AC) + 148149418;
  v602 = ((2 * v601) & 0xDC247FDE) + (v601 ^ 0x6E123FEF);
  v603 = v583 ^ 0xE1119BFE ^ v588;
  v604 = (((v581 ^ 0x8C818C47 ^ v583) + 1336227057 - ((2 * (v581 ^ 0x8C818C47 ^ v583)) & 0x9F4A69E2)) ^ 0x4FA534F1) + 1;
  v605 = (v604 ^ 0xEEBFB36) - v574 + ((2 * v604) & 0x1DD7F66C) + v597 - 781736663 + v602;
  v606 = v605 - ((2 * v605 + 849776164) & 0xF92D55CC);
  v607 = ((v603 + v599) ^ 0x7A67FC9E) - v602 + ((2 * (v603 + v599)) & 0xF4CFF93C);
  v608 = v572
       + v540
       + ((v581 + v556) ^ 0xB0105B29)
       - ((2 * (v581 + v556)) & 0x9FDF49AC)
       + ((v594 + 3646) ^ 0xF6BEFEDE)
       + ((2 * (v594 + 3646)) & 0xED7DFDBC);
  v609 = ((2 * (v608 - v597 - 250892874 + v602 - 67109126)) & 0xE784F8FE)
       + ((v608 - v597 - 250892874 + v602 - 67109126) ^ 0xF3C27C7F);
  HIDWORD(v371) = v609 + 1;
  LODWORD(v371) = v609 + 205357953;
  v610 = (v597 - ((2 * v597 + 301369026) & 0xEB3CC9AE) - 23484360) ^ 0x759E64D7 ^ (v602 - 1846689775);
  v611 = v610 - ((2 * v610) & 0x8431D00E);
  v612 = v556
       + ((v371 >> 4) ^ 0xDECEFD9D)
       + ((2 * (v371 >> 4)) & 0xBD9DFB3A)
       + 844145322
       - ((2 * (v556 + ((v371 >> 4) ^ 0xDECEFD9D) + ((2 * (v371 >> 4)) & 0xBD9DFB3A) + 556860003)) & 0x223F408E);
  v613 = *(_DWORD *)(v19 - 232);
  v614 = v602
       - 1846689775
       + ((v600 + 570266436) ^ 0xDE026CBB)
       - ((2 * (v602 - 1846689775 + ((v600 + 570266436) ^ 0xDE026CBB))) & 0x796816F2);
  v615 = v613 - 1543503872 + ((v607 - ((2 * v607 - 413890910) & 0xA9613A96) + 1213915292) ^ 0x45AF3D0C ^ v612) + 1;
  v616 = v556 + (v615 ^ 0xFFAB9BFE) + ((2 * v615) & 0xFF5737FC) + 166597832;
  v617 = ((2 * v616) & 0x9BFBBFFE) + (v616 ^ 0xCDFDDFFF);
  HIDWORD(v371) = v617 + 139265;
  LODWORD(v371) = v617 + 839000065;
  v618 = v597
       - v576
       + ((v593 + 101245953) ^ 0x5BDFFEF7)
       + ((2 * (v593 + 101245953)) & 0xB7BFFDEE)
       + v602
       - 67109126
       - 1022924431;
  v619 = v612 ^ 0x111FA047;
  v620 = ((v371 >> 25) ^ 0x7BD9FFFF) + v552 + ((2 * (v371 >> 25)) & 0xF7B3FFFE);
  v621 = v618 + (v612 ^ 0x111FA047) - ((2 * (v618 + (v612 ^ 0x111FA047))) & 0x73485688) - 1180423356;
  v622 = v620 - ((2 * v620 + 147599716) & 0x75C0E2AC) + 2135329288;
  v623 = v552
       + (((v621 ^ 0x3445A12 ^ v622) + LODWORD(STACK[0x57C])) ^ 0xAFB37FEC)
       + ((2 * ((v621 ^ 0x3445A12 ^ v622) + LODWORD(STACK[0x57C]))) & 0x5F66FFD8);
  HIDWORD(v371) = v623 + LODWORD(STACK[0x508]);
  LODWORD(v371) = v623 - 1961499809;
  v624 = ((v371 >> 17) ^ 0x6ED3FF77) + v576 + ((2 * (v371 >> 17)) & 0xDDA7FEEE);
  v625 = v624 - ((2 * v624 + 576403764) & 0x4C41D52A) + 927893295;
  v626 = v622 ^ 0xBAE07156;
  v627 = v625 ^ 0xA620EA95;
  v628 = (v625 ^ 0xA620EA95) + (v622 ^ 0xBAE07156);
  v629 = ((v606 + 367653368) ^ 0x6D890AA1 ^ v612) + (v628 ^ 0xC08C8E40) - ((2 * v628) & 0x7EE6E37E) + 1064530368;
  v630 = ((LODWORD(STACK[0x580]) - 1253122727) ^ 0xB48C6368 ^ v571) + (v629 ^ 0xEFBE8E63) + ((2 * v629) & 0xDF7D1CC6);
  v631 = (v622 ^ 0xBAE07156) + ((v602 + 156183670 + (~(2 * v602 + 601587748) | 0x113D2739)) ^ 0x667ECC24 ^ v612);
  v632 = (v631 ^ 0x76FFFF6F) + v602 + ((2 * v631) & 0xEDFFFEDE);
  v633 = ((v630 + 272724381) ^ 0x66F9DAF9) + v576 + ((2 * (v630 + 272724381)) & 0xCDF3B5F2);
  HIDWORD(v371) = v633 + 125320;
  LODWORD(v371) = v633 - 244061816;
  v634 = v574 + ((v371 >> 17) ^ 0xF11D7FBD) + ((2 * (v371 >> 17)) & 0xE23AFF7A);
  v635 = ((v611 + 1108928519) ^ 0x53074840 ^ v612) + v599;
  v636 = v622 ^ v612;
  v637 = (v625 ^ 0xA620EA95) + (v583 ^ (v614 - 1129051271) ^ 0x9BCA562F ^ v622 ^ v612);
  v638 = *(_DWORD *)(v19 - 184) + v574 + (v637 ^ 0xE5F7EB7F) + ((2 * v637) & 0xCBEFD6FE);
  v639 = v634 - 1339777979;
  v640 = (v625 ^ 0xA620EA95 ^ (v634 - 1339777979))
       - 70382113
       - ((2 * (v625 ^ 0xA620EA95 ^ (v634 - 1339777979))) & 0xF79C1BBE);
  v641 = v634 + 1609548791;
  v642 = v638 - (v634 + 1609548791);
  HIDWORD(v371) = v642 + 2102741541;
  LODWORD(v371) = v642 - 979090507;
  v643 = (v636 ^ 0xF220C47B ^ v625)
       + 1476378559
       + ((v639 + v619) ^ 0xA800400E)
       - ((2 * (v639 + v619)) & 0xAFFF7FE2)
       + 51;
  v644 = v592 + ((v371 >> 4) ^ 0x4A9FBBFD) + ((2 * (v371 >> 4)) & 0x953F77FA) - 1251982333;
  v645 = ((2 * v644) & 0x7DF7DFE2) + (v644 ^ 0x3EFBEFF1);
  v646 = STACK[0x584];
  v647 = v645 - 73547776;
  v648 = LODWORD(STACK[0x584])
       + v592
       + (v635 ^ 0x7ACF6F7B)
       + ((2 * v635) & 0xF59EDEF6)
       + (v628 ^ 0x42020241)
       - ((2 * v628) & 0x7BFBFB7C)
       + v634
       + 1609548791
       - 1626703434
       + v645
       - 73547776;
  v649 = ((2 * v648) & 0xA836BBF6) + (v648 ^ 0xD41B5DFB);
  v650 = (v632 - ((2 * v632 + 903577924) & 0x76B4D55E) + 1447570257) ^ 0x9D7A803A ^ v625;
  v651 = ((2 * ((v622 ^ 0x1CC09BC3 ^ v625) + 1)) & 0xEBFFEFDE)
       + (((v622 ^ 0x1CC09BC3 ^ v625) + 1) ^ 0xF5FFF7EF)
       + v634
       + 1609548791;
  v652 = v651 - ((2 * v651 + 879345854) & 0x72C74E5C);
  HIDWORD(v371) = v649 + 31760901;
  LODWORD(v371) = v649 + 736403973;
  v653 = (((v640 ^ 0xFBCE0DDF ^ (v645 - 1056698353))
         - ((2 * (v640 ^ 0xFBCE0DDF ^ (v645 - 1056698353))) & 0x7CE2407C)
         - 1099882434) ^ 0x418EDFC1)
       + v627;
  v654 = v653 - ((2 * v653) & 0x76B20002);
  v655 = ((v371 >> 25) ^ 0x74F67FDF) + v597 + ((2 * (v371 >> 25)) & 0xE9ECFFBE);
  v656 = v655 - ((2 * v655 + 671713030) & 0xE86322B6) - 2009705250;
  v657 = v656 ^ 0x7431915B;
  v658 = ((v650 - v641 - v645 - 288942173) ^ 0xBDF56FFF)
       + ((2 * (v650 - v641 - v645 - 288942173)) & 0x7BEADFFE)
       + 1107988481
       + (v656 ^ 0x7431915B);
  v659 = *(_DWORD *)(v19 - 228) + v597 + (v658 ^ 0x7EFF4F35) + ((2 * v658) & 0xFDFE9E6A);
  v660 = (v656 ^ 0x7431915B)
       + ((((v645 - 1056698353) ^ v639) - ((2 * ((v645 - 1056698353) ^ v639)) & 0xEE83156C) + 2000784054) ^ 0x88BE7549);
  v661 = v660 + 718252241 - ((2 * v660) & 0x559F51A2);
  v662 = (v643 + 1129639502 - ((2 * v643) & 0x86A9DC9C)) ^ 0x4354EE4E ^ (v645 - 1056698353);
  v663 = v645 - 1056698353 + (v622 ^ 0x8383D678 ^ (v652 - 1818720371));
  v664 = v663 - ((2 * v663) & 0xBC27D590);
  HIDWORD(v371) = v659 - 1023938642;
  LODWORD(v371) = v659 - 656281682;
  v665 = v602 + ((v371 >> 17) ^ 0xE78FF7FF) + ((2 * (v371 >> 17)) & 0xCF1FEFFE) + 2046688614;
  v666 = ((v654 + 995688449) ^ 0x4F68915A ^ v656)
       - v665
       + 1520225706
       - ((2 * (((v654 + 995688449) ^ 0x4F68915A ^ v656) - v665 - 811584172)) & 0x15F930AC);
  v667 = (v662 + 709979830 - ((2 * v662) & 0x54A2DD6C)) ^ 0x2A516EB6;
  v668 = v602 + ((v371 >> 17) ^ 0xE78FF7FF) + ((2 * (v371 >> 17)) & 0xCF1FEFFE) - 1436694511;
  v669 = v602 + ((v371 >> 17) ^ 0xE78FF7FF) + ((2 * (v371 >> 17)) & 0xCF1FEFFE) - 1436694510;
  v670 = v669 + ((v645 - ((2 * v645 + 34086940) & 0x62215FCA) + 1913962483) ^ 0xC5213EBE ^ v656);
  v671 = (v670 ^ 0x59F46BBE) + v645 + ((2 * v670) & 0xB3E8D77C);
  v672 = (v661 ^ v639 ^ 0x2ACFA8D1) - 35007180 - 2 * ((v661 ^ v639 ^ 0x2ACFA8D1) & 0x7DE9D53C ^ (v661 ^ v639) & 8);
  v673 = v667
       + ((v669 + (v656 ^ 0x7431915B)) ^ 0x56840002)
       - ((2 * (v669 + (v656 ^ 0x7431915B))) & 0x52F7FFFA)
       - 1451491330;
  v674 = v561 + v602 + (v673 ^ 0xFFE7CE17) + ((2 * v673) & 0xFFCF9C2E);
  v675 = v669 ^ ((v656 ^ 0x7431915B) - 1779291328 + (~(2 * (v656 ^ 0x7431915B) + 2) | 0xD41BA97F) + 2);
  v676 = (v675 ^ 0x95F22B40) + 1051276281 - 2 * ((v675 ^ 0x95F22B40) & 0x3EA933FF ^ v675 & 6);
  HIDWORD(v371) = v674 + LODWORD(STACK[0x500]);
  LODWORD(v371) = v674 + 2082795837;
  v677 = v619 + ((v371 >> 17) ^ 0xF97B74B8) + ((2 * (v371 >> 17)) & 0xF2F6E970) + 109349704;
  v678 = ((2 * v677) & 0xDFDFE3F6) + (v677 ^ 0xEFEFF1FB);
  v679 = (v671 - ((2 * v671 + 236931234) & 0x1620F9F8) + 1914708301) ^ 0xB107CFC ^ (v678 + 269487621);
  v680 = v679 - 279098050 - ((2 * v679) & 0xDEBA9A7C);
  v681 = ((v664 + 1578363592) ^ 0x2A227B93 ^ v656) - v665 - v678 - 1081071793;
  v682 = v467 + v619 + (v681 ^ 0xED5FEFFD) + ((2 * v681) & 0xDABFDFFA) - 1655892148;
  v683 = ((2 * v682) & 0xED7FF7D6) + (v682 ^ 0x76BFFBEB);
  HIDWORD(v371) = v683 + 5;
  LODWORD(v371) = v683 - 1992293355;
  v684 = v626 + ((v371 >> 4) ^ 0xFEFDBECE) + ((2 * (v371 >> 4)) & 0xFDFB7D9C) + 16924978;
  v685 = ((2 * v684) & 0xFFB9AF9E) + (v684 ^ 0xFFDCD7CF);
  v686 = ((v666 ^ 0x8AFC9856 ^ (v678 + 269487621))
        - 1698397705
        - ((2 * (v666 ^ 0x8AFC9856 ^ (v678 + 269487621))) & 0x358903EE)) ^ 0x9AC481F7 ^ (v685 + 2304049);
  v687 = ((v686 - 589516476 - ((2 * v686) & 0xB9B96288)) ^ 0xDCDCB144) + *(_DWORD *)(v19 - 204);
  v688 = v626 + (v687 ^ 0xE35ABFEF) + ((2 * v687) & 0xC6B57FDE) + 480591889;
  HIDWORD(v371) = ((2 * v688) & 0x39FF7FE8) + (v688 ^ 0x1CFFBFF4);
  LODWORD(v371) = HIDWORD(v371) - 600727808;
  v689 = v627 + ((v371 >> 6) ^ 0xFFABBC7E) + ((2 * (v371 >> 6)) & 0xFF5778FC) + 5522306;
  v690 = ((2 * v689) & 0xBDEEE9BA) + (v689 ^ 0x5EF774DD);
  v691 = v685
       + 2304049
       + (v656 ^ 0x62DE9A66 ^ (v678
                             + 269487621
                             + (v676 ^ 0x3EA933F9)
                             - ((2 * (v678 + 269487621 + (v676 ^ 0x3EA933F9))) & 0x2DDE167A)
                             + 384764733));
  v692 = LODWORD(STACK[0x578])
       + v627
       + (((v672 ^ 0xFDE9D534) + v669) ^ 0x6FBF67F3)
       + ((2 * ((v672 ^ 0xFDE9D534) + v669)) & 0xDF7ECFE6);
  v693 = v678 + 930529168;
  v694 = v692 + v678 + 930529168 + v685 + 1694498685 - 1588551804 + v690 - 4657284;
  v695 = ((2 * v694) & 0x76BFE7E2) + (v694 ^ 0x3B5FF3F1);
  v696 = (v678 - ((2 * v678 + 538975240) & 0x540269B0) - 1173273892) ^ 0xAA0134D8 ^ (v685 + 2304049);
  HIDWORD(v371) = v695 + 15;
  LODWORD(v371) = v695 - 996144113;
  v697 = (v678 + 269487621) & v668;
  v698 = ((v696 + 428759823 - ((2 * v696) & 0x331CB61E)) ^ 0x198E5B0F) + v678 + 269487621;
  v699 = (v691 + 1078443535 - ((2 * v691) & 0x808F7C1E)) ^ 0x4047BE0F ^ (v690 - 1593275613);
  v700 = v699 - ((2 * v699) & 0x2C24AFF0);
  v701 = ((v371 >> 10) ^ 0xFBFFBAFB) + v641 + ((2 * (v371 >> 10)) & 0xF7FF75F6);
  v702 = v701 - ((2 * v701 + 678050470) & 0x623E46FC) - 2058075951;
  *(_DWORD *)(v19 - 184) = LODWORD(STACK[0x584]) - 1726849890;
  v703 = (((v680 ^ 0xEF5D4D3E)
         - v685
         - v690
         - ((2 * ((v680 ^ 0xEF5D4D3E) - v685 - v690) - 1113024168) & 0xC0E2D136)
         + 1061532999) ^ 0xD16E4BE5 ^ v702)
       + v646
       - 1726849890;
  v704 = v641 + (v703 ^ 0x3DAFEFDE) + ((2 * v703) & 0x7B5FDFBC);
  v705 = (v690 - 1593275613) ^ (v685 - ((2 * v685 + 4608096) & 0xCBAB732C) - 436674106);
  HIDWORD(v371) = v704 + 2050471143;
  LODWORD(v371) = v704 - 1422412569;
  v706 = (v702 ^ 0x311F237E)
       + (((v705 ^ 0xE5D5B996) - 354147586 - 2 * ((v705 ^ 0xE5D5B996) & 0x6AE422FF ^ v705 & 1)) ^ 0xEAE422FE);
  v707 = v645 + ((v371 >> 24) ^ 0x7F7DAF7B) + ((2 * (v371 >> 24)) & 0xFEFB5EF6);
  v708 = (v685 + 2304049) ^ 0xACDC102F ^ (v706 - 1394864081 - ((2 * v706) & 0x59B8205E));
  v709 = v707 + 1099325588;
  v710 = *(_DWORD *)(v19 - 176)
       + v647
       + ((v707 + 1099325588 + ((v700 + 370300920) ^ 0x270D7486 ^ v702)) ^ 0xEF7DFFFD)
       + ((2 * (v707 + 1099325588 + ((v700 + 370300920) ^ 0x270D7486 ^ v702))) & 0xDEFBFFFA);
  HIDWORD(v371) = v710 - 1900200904;
  LODWORD(v371) = v710 + 784546872;
  v711 = (((v690 - 1593275613) ^ 0x311F237E ^ v702)
        + 883643879
        - ((2 * ((v690 - 1593275613) ^ 0x311F237E ^ v702)) & 0x6956ABCE)) ^ 0x34AB55E7 ^ (v707 + 1099325588);
  v712 = v711 - ((2 * v711) & 0xEC15902C);
  v713 = v657
       + ((v371 >> 17) ^ 0x33FEEF4F)
       + ((2 * (v371 >> 17)) & 0x67FDDE9E)
       - 53159388
       - ((2 * (v657 + ((v371 >> 17) ^ 0x33FEEF4F) + ((2 * (v371 >> 17)) & 0x67FDDE9E) - 872345423)) & 0x61A792E6);
  v714 = (v697 ^ 0xB5E0A240)
       - v665
       - ((2 * v697) & 0x943EBB7E)
       + v685
       + v690
       - 4657284
       - 1154328852
       + (v702 ^ 0x311F237E);
  v715 = (v698 ^ 0x3EAFD7E7) + ((2 * v698) & 0x7D5FAFCE) - 1051711463 + (v702 ^ 0x311F237E);
  v716 = (v715 ^ 0x5FD63D3C) + ((2 * v715) & 0xBFAC7A78);
  v717 = v707 - 392356928;
  v718 = (v714 ^ 0xB3FF5BBF) + ((2 * v714) & 0x67FEB77E) - (v707 - 392356928) - 216572051;
  v719 = *(_DWORD *)(v19 - 168);
  v720 = v719
       + v657
       + ((v718 + (v713 ^ 0x30D3C973)) ^ 0x6C6F9CF7)
       + ((2 * (v718 + (v713 ^ 0x30D3C973))) & 0xD8DF39EE)
       + 675881473;
  v721 = ((2 * v720) & 0xEFDFFB66) + (v720 ^ 0xF7EFFDB3);
  HIDWORD(v371) = v721 + 13;
  LODWORD(v371) = v721 + 135266893;
  v722 = ((((v712 + 1980418070) ^ 0x89F537E9) + v690 - 1593275613) ^ 0x3ABF32EC)
       + ((2 * (((v712 + 1980418070) ^ 0x89F537E9) + v690 - 1593275613)) & 0x757E65D8)
       - 985608940
       + (v713 ^ 0x30D3C973);
  v723 = ((v371 >> 6) ^ 0x2FEF16BF) + v665 + ((2 * (v371 >> 6)) & 0x5FDE2D7E);
  v724 = (v713 ^ 0x30D3C973) + ((v708 - 696266619 - ((2 * v708) & 0xACFFA10A)) ^ 0xD67FD085);
  v725 = v723 - ((2 * v723 + 14772186) & 0x9F9AF484) + 1346252335;
  v726 = v690
       + v717
       + ((v716 - 1607875900 + (v713 ^ 0x30D3C973)) ^ 0x8080000)
       - ((2 * (v716 - 1607875900 + (v713 ^ 0x30D3C973))) & 0xEFEFFFFE)
       - 236335113
       + (v725 ^ 0x4FCD7A42);
  v727 = v646;
  v728 = v646 + v665 + (v726 ^ 0x79DFFDE6) + ((2 * v726) & 0xF3BFFBCC);
  v729 = ((2 * v722) & 0xE97EBFDE) + (v722 ^ 0xF4BF5FEF) + (v725 ^ 0xB03285BD);
  HIDWORD(v371) = v728 + 1322650826;
  LODWORD(v371) = v728 + 400838858;
  v730 = ((v371 >> 10) ^ 0x77D8BD5D) + v678 + ((2 * (v371 >> 10)) & 0xEFB17ABA);
  v731 = (v724 ^ 0xEFF647FF)
       + ((2 * v724) & 0xDFEC8FFE)
       + (((v725 ^ 0x4FCD7A42) + v709) ^ 0x4B802084)
       - ((2 * ((v725 ^ 0x4FCD7A42) + v709)) & 0x68FFBEF6);
  v732 = v730 - ((2 * v730 + 812556624) & 0xC49E4E7E) - 91850777;
  v733 = v596
       + v693
       + ((v731 - 997615747 + (v732 ^ 0x624F273F)) ^ 0x7A729F77)
       + ((2 * (v731 - 997615747 + (v732 ^ 0x624F273F))) & 0xF4E53EEE);
  HIDWORD(v371) = v733 + 1323051615;
  LODWORD(v371) = v733 - 1076090273;
  v734 = ((v371 >> 24) ^ 0xFFDFB79F) + v685 + ((2 * (v371 >> 24)) & 0xFFBF6F3E);
  v735 = v734 - ((2 * v734 + 8839460) & 0xFF12C714) + 2144130076;
  v736 = (v735 ^ 0x7F89638A) + ((v729 - ((2 * v729 + 377569316) & 0xF64E8BBE) + 107472369) ^ 0x996862E0 ^ v732);
  v737 = v613 + v685 + 1694498685 + (v736 ^ 0xF5EFFFFC) + ((2 * v736) & 0xEBDFFFF8);
  v738 = (((v709 ^ 0xF2134B43) + 1057849704 - ((2 * (v709 ^ 0xF2134B43)) & 0x7E1B02D0)) ^ 0x3F0D8168)
       + (v702 ^ 0x311F237E);
  v739 = (v713 ^ 0xDFF9A5B5) + 1;
  v740 = v739 ^ 0xBBFFDEEF;
  v741 = (2 * v739) & 0x77FFBDDE;
  HIDWORD(v371) = v737 - 613028134;
  LODWORD(v371) = v737 + 784330458;
  v742 = v371 >> 17;
  v743 = (2 * v742) & 0xFBFF7BBE;
  v744 = v742 ^ 0xFDFFBDDF;
  v745 = ((v712 + 1980418070) ^ 0x931A4F67 ^ v713)
       + (v725 & 0x62920D7B ^ 0x797BD7B4)
       + ((2 * v725) & 0x45241AE4 ^ 0x5001084)
       - 1006362614;
  v746 = v745 ^ 0xFCBBBF66;
  v747 = (2 * v745) & 0xF9777ECC;
  v748 = v744 + v690 + v743 + 1238073581 + (~(2 * (v744 + v690 + v743) + 1175558792) | 0xB27A98AF);
  v749 = (((2 * (v748 & 0x43E2CC26 ^ 0x2004802)) & 0x82451800) - (v748 & 0x43E2CC26 ^ 0x2004802) - 1496235713) ^ 0xD4175FD7;
  v750 = v717 + v740 + v741 - 1662425627 + (v732 ^ 0xEC8C93FA);
  v751 = (-1884510688 - (v748 & 0xC0B77311 ^ 0xB15210 | 0x8FACA620) + (v748 & 0xC0B77311 ^ 0xB15210 | 0x705359DF)) ^ 0x746010DF;
  v752 = ((2 * ((v725 ^ 0x282F9832) + 1)) & 0xB7CF17F6)
       + (((v725 ^ 0x282F9832) + 1) ^ 0x5BE78BFB)
       + (v750 ^ 0xF7FBFBED)
       + ((2 * v750) & 0xEFF7F7DA)
       + (((v735 ^ 0x177D9EFC) + 1) ^ 0xE7F2EEB1)
       + ((2 * ((v735 ^ 0x177D9EFC) + 1)) & 0xCFE5DD62);
  v753 = (v725 ^ 0x9DF724A0) + ((v738 - ((2 * v738) & 0xAB12E798) - 712412212) ^ 0x2CE9F5FB ^ v713);
  v754 = v753 - ((2 * v753) & 0xCFB65378) - 405067332;
  v755 = v747 + v746 + (((v732 ^ 0x526F5FF3) + 1) ^ 0xF95FFA1F) + ((2 * ((v732 ^ 0x526F5FF3) + 1)) & 0xF2BFF43E);
  v756 = v755 - ((2 * v755 + 331910390) & 0x50AD700E) + 842727042;
  v757 = (v713 ^ 0x8F7A2BEF ^ v725)
       + 9307141
       + (((v732 ^ 0x6C9475EA) + 1) ^ 0xFF71FBFB)
       + ((2 * ((v732 ^ 0x6C9475EA) + 1)) & 0xFEE3F7F6);
  v758 = (v748 ^ 0x1DB0165D) + 1;
  v759 = (v756 ^ 0x265B2E17 ^ v735) + (v748 & 0x74A4C51 ^ 0xF6440400);
  v760 = v758 ^ 0xFFBACFE7;
  v761 = (2 * v758) & 0xFF759FCE;
  v762 = v759 + ((2 * v748) & 0xE9090A2 ^ 0xF37FFFFF) + 268041217;
  v763 = v762 - 889445699 - ((2 * v762) & 0x95F8457A);
  v764 = (v754 ^ v732 ^ 0x2059AE88 ^ v735) + v760 + v761 + 4534297;
  v765 = (v764 - ((2 * v764) & 0xF8C39650) + 2086783784) ^ v763;
  v766 = (v765 ^ 0x7B0823E0) + 1;
  v767 = ((v752 - ((2 * v752 - 2007821618) & 0xC813100C) + 674435437) ^ 0xE089BA0E ^ v748 & 0x85943E1B)
       + (v766 ^ 0xF9CFE79F);
  v768 = ((2 * ((v763 ^ 0x207847CA) + 1)) & 0xFF8EFFBE)
       + (((v763 ^ 0x207847CA) + 1) ^ 0xFFC77FDF)
       + ((v767 + ((2 * v766) & 0xF39FCF3E) + 103815265) ^ 0xF6EFCCFF)
       + ((2 * (v767 + ((2 * v766) & 0xF39FCF3E) + 103815265)) & 0xEDDF99FE);
  v769 = (v763 ^ 0x876A102F) + 1;
  v770 = ((2 * v757) & 0xEC1FA5D4)
       + (v757 ^ 0x760FD2EA)
       + (((v735 ^ 0xE4B0EBC6) + 1) ^ 0x3F97DF3B)
       + ((2 * ((v735 ^ 0xE4B0EBC6) + 1)) & 0x7F2FBE76)
       + (((v748 ^ 0x2864FFA7) + 1) ^ 0xFF696357)
       + ((2 * ((v748 ^ 0x2864FFA7) + 1)) & 0xFED2C6AE)
       + (v769 ^ 0x3FDBFBED);
  v771 = v768 - ((2 * v768 + 311518788) & 0xFCFBE7FA) - 2017024225;
  v772 = v770
       + ((2 * v769) & 0x7FB7F7DA)
       + (v765 & 0x38902C61 ^ 0x1142242)
       + ((2 * v765) & 0x71200880 ^ 0xFFDFFF7F)
       + (((v771 ^ 0xA211F1D0) + 1) ^ 0xBD77FFFF)
       + ((2 * ((v771 ^ 0xA211F1D0) + 1)) & 0x7AEFFFFE);
  v773 = v772 - ((2 * v772 + 153979116) & 0xA82E852) + 1373124767;
  HIDWORD(v371) = v773 ^ 0x17F36;
  LODWORD(v371) = v773 ^ 0x4DC40000;
  v774 = (v748 ^ 0xA6C2B3A8)
       + (((v763 ^ 0xE6755ABE) + 1) ^ 0x5CF5F7DF)
       + ((2 * ((v763 ^ 0xE6755ABE) + 1)) & 0xB9EBEFBE)
       - 1559623647;
  v775 = v774 - ((2 * v774) & 0x91DEA1DA);
  v776 = (v371 >> 18) - ((2 * (v371 >> 18)) & 0xFA257C8C) - 49103290;
  HIDWORD(v371) = v776 ^ 0x3E46;
  LODWORD(v371) = v776 ^ 0xFD128000;
  v777 = (v725 ^ v732 ^ v735 ^ v763 ^ (1193704822 - (v751 | 0x47267D76) + (v751 | 0xB8D98289)) ^ 0x3339BEF2)
       + (v771 & 0x3F4F15CC ^ 0x174E49CD)
       + ((2 * v771) & 0x2C980B98 ^ 0xD367FC67);
  v778 = (((v735 ^ 0x3FC2ABA4)
         + (v732 ^ 0x624F273F)
         - ((2 * ((v735 ^ 0x3FC2ABA4) + (v732 ^ 0x624F273F))) & 0xDF41B714)
         + 1872812938) ^ 0x206F836D ^ (-1036750382 - (v749 | 0xC23471D2) + (v749 | 0x3DCB8E2D)))
       + (((v765 ^ 0x1F3E290C) + 1) ^ 0x6DDDF3FE)
       + ((2 * ((v765 ^ 0x1F3E290C) + 1)) & 0xDBBBE7FC);
  v779 = ((2 * v765) & 0xFDB727FA ^ 0xF1B724A2)
       + (v765 ^ 0x862009AE)
       + ((v777 - 688084992) ^ 0x794B79FE)
       + ((2 * (v777 - 688084992)) & 0xF296F3FC)
       + ((v371 >> 14) ^ 0xE7EF2FBF)
       + ((2 * (v371 >> 14)) & 0xCFDE5F7E);
  v780 = v773 ^ 0x5417429;
  v781 = v765 ^ 0x31D58E1;
  v782 = (v765 ^ 0x31D58E1)
       + (((v773 ^ 0x5417429) + (v765 ^ 0x829F54E3 ^ v771)) ^ 0x6F51F7B7)
       + ((2 * ((v773 ^ 0x5417429) + (v765 ^ 0x829F54E3 ^ v771))) & 0xDEA3EF6E)
       - 1867642807;
  v783 = v782 - ((2 * v782) & 0x9771C07E);
  v784 = (v763 ^ 0x6632EC23)
       + (v771 & 0x60327114 ^ 0x1F6B9E6D)
       + ((2 * v771) & 0xC024C220 ^ 0xC020C220)
       + (((v773 ^ 0x84AE9C56) + (v735 ^ 0xFB759D20 ^ v748)) ^ 0xDFD2FF5D)
       + ((2 * ((v773 ^ 0x84AE9C56) + (v735 ^ 0xFB759D20 ^ v748))) & 0xBFA5FEBA)
       - 1596911318;
  v785 = ((2 * ((v763 ^ 0xB844FC10) + 1)) & 0x7BFF3B1E)
       + (((v763 ^ 0xB844FC10) + 1) ^ 0x3DFF9D8F)
       + ((v778 - 1843262462) ^ 0xFEDFFE7E)
       + ((2 * (v778 - 1843262462)) & 0xFDBFFCFC)
       + (((v771 ^ 0xA40BC89B) + 1) ^ 0xA3FBEFDE)
       + ((2 * ((v771 ^ 0xA40BC89B) + 1)) & 0x47F7DFBC);
  v786 = v779 - ((2 * v779 + 1070826638) & 0xE8CE015E) + 340837110;
  v787 = (v784 ^ 0xF7FEFFBF) + (v765 & 0x74EF6506 ^ 0x403F4091) + ((2 * v765) & 0x699ACA0C ^ 0xFFE57FFF) + 1;
  v788 = v787 + ((2 * v784) & 0xEFFDFF7E) - 2 * ((v787 + ((2 * v784) & 0xEFFDFF7E) + 131006384) & 0x3F39421F ^ v787 & 1);
  v789 = v771 ^ 0x7E7DF3FD;
  v790 = (v771 ^ 0x7E7DF3FD)
       + (((v786 ^ 0x746700AF) + (v771 ^ 0x84C3782B ^ v773)) ^ 0x3BFFDFFE)
       + ((2 * ((v786 ^ 0x746700AF) + (v771 ^ 0x84C3782B ^ v773))) & 0x77FFBFFC);
  v791 = (v765 ^ 0x3B235F8F ^ (v775 - 923840275))
       + (((v786 ^ 0x422CB883) + 1) ^ 0x793FEB63)
       + ((2 * ((v786 ^ 0x422CB883) + 1)) & 0xF27FD6C6);
  v792 = v773 ^ (v785 - ((2 * v785 + 1044965418) & 0x2E957E64) + 913257287);
  v793 = v786 ^ v792;
  v794 = (v771 ^ 0xB4CD5FB4)
       + (((v786 ^ v792 ^ 0x16787213) + 1) ^ 0x1BFFBDE3)
       + ((2 * ((v786 ^ v792 ^ 0x16787213) + 1)) & 0x37FF7BC6)
       + ((v791 - 2034232163) ^ 0x7D65FFEE)
       + ((2 * (v791 - 2034232163)) & 0xFACBFFDC)
       + 1721385519;
  v795 = ((2 * ((v773 ^ 0x1D9D6B3B) + 1)) & 0x7F91DDF6)
       + (((v773 ^ 0x1D9D6B3B) + 1) ^ 0xBFC8EEFB)
       + (v794 ^ 0x7577BFF7)
       + ((2 * v794) & 0xEAEF7FEE);
  v796 = v795 - ((2 * v795 - 1786863076) & 0xA218E29A);
  v797 = v786 ^ v792 ^ 0x48448877;
  v798 = v797 + ((v790 - 1006624766) ^ 0xBBF31C5B) + ((2 * (v790 - 1006624766)) & 0x77E638B6) + 1141695397;
  v799 = v798 ^ 0x53677FB7;
  v800 = (2 * v798) & 0xA6CEFF6E;
  v801 = (v788 - 2029502002) ^ v792;
  v802 = v801 ^ 0xE8911BB0;
  v803 = (v801 ^ 0xE8911BB0) + (v792 ^ 0x892E068C ^ (v780 - ((2 * v780 + 2147483646) & 0x6A1B1CA8) - 1257402797));
  v804 = v780 + (v803 ^ 0xE0BABFFB) + ((2 * v803) & 0xC1757FF6) + 524632069;
  v805 = v796 + 466338395;
  v806 = (v796 + 466338395) ^ v801;
  v807 = (v801 ^ 0x5FF4E4DC ^ (v797 - ((2 * v797 + 2) & 0x91340126) + 1218052244)) + (v806 ^ 0xEB5FCE33) + 1;
  v808 = *(_DWORD *)(v19 - 216);
  v809 = v808
       + (v763 ^ 0xCAFC22BD)
       + ((v802 + ((v783 - 877076417) ^ 0xBFDFE090 ^ v786)) ^ 0xEFBFEFEF)
       + ((2 * (v802 + ((v783 - 877076417) ^ 0xBFDFE090 ^ v786))) & 0xDF7FDFDE)
       + (((v806 ^ 0xEB5FCE33) + v797) ^ 0xE5885545)
       - ((2 * ((v806 ^ 0xEB5FCE33) + v797)) & 0x34EF5574)
       + 324512783;
  v810 = ((2 * v809) & 0x57FDFDFE) + (v809 ^ 0x2BFEFEFF);
  HIDWORD(v371) = v810 + 1;
  LODWORD(v371) = v810 - 738131711;
  v811 = v781 + ((v371 >> 6) ^ 0x4F5FFF3B) + ((2 * (v371 >> 6)) & 0x9EBFFE76) - 1331691323;
  v812 = ((2 * v811) & 0x7E756F3E) + (v811 ^ 0xBF3AB79F);
  v813 = ((2 * ((v805 ^ 0x3CED583) + 1)) & 0x3E779FBC) + (((v805 ^ 0x3CED583) + 1) ^ 0x9F3BCFDE) + v812;
  v814 = v813 - ((2 * v813 + 1125314822) & 0xA84DD188);
  v815 = (v801 ^ 0xE8911BB0)
       + 1077942449
       + (v797 & (v779 - 1612070330) ^ 0xBFBFDB7F)
       + ((2 * (v797 & (v779 - 1612070330))) & 0x7F7FB6FE)
       + 3024;
  v816 = v812
       + 1086670945
       + ((v802 + v799 + v800 - 1399291831 - ((2 * (v802 + v799 + v800 - 1399291831)) & 0x7DFD7526) + 1056881299) ^ 0x5633FAEF ^ v806 ^ 0x83928E4F);
  v817 = *(_DWORD *)(v19 - 192) + v781 + (v816 ^ 0xFEB8EE7B) + ((2 * v816) & 0xFD71DCF6) - 1590943738;
  v818 = ((2 * v817) & 0xD4BDF2EE) + (v817 ^ 0xEA5EF977);
  HIDWORD(v371) = v818 + 649;
  LODWORD(v371) = v818 + 362874505;
  v819 = (v786 ^ 0x8B98FF50) + (v815 ^ 0x5BDED7DC) + ((2 * v815) & 0xB7BDAFB8);
  v820 = v789 + 33619969 + ((v371 >> 10) ^ 0xFDFEFFFF) + ((2 * (v371 >> 10)) & 0xFBFDFFFE);
  v821 = ((2 * v820) & 0xDFFFFFFF) + (v820 ^ 0x6FFFFFFF);
  v822 = ((v819 - 1541330907) ^ 0xBFFFFFFE)
       + 1073741826
       + ((2 * (v819 - 1541330907)) & 0x7FFFFFFC)
       + (v806 ^ 0xEB5FCE33);
  v823 = (v822 + 1513771676 - ((2 * v822) & 0xB474A538)) ^ 0x5A3A529C ^ (v812 + 1086670945);
  v824 = (v823 - 1320278366 - ((2 * v823) & 0x629C4D44)) ^ 0xB14E26A2 ^ (v821 - 1879048191);
  v825 = v808
       + v789
       + (((v804 ^ 0x7B6EEEFB) + ((2 * v804) & 0xF6DDDDF6) - 2070867706 + (v806 ^ 0x14A031CC)) ^ 0xF8FA7EFF)
       + ((2 * ((v804 ^ 0x7B6EEEFB) + ((2 * v804) & 0xF6DDDDF6) - 2070867706 + (v806 ^ 0x14A031CC))) & 0xF1F4FDFE)
       + v812
       + 2009984384
       - 1650555016
       + v821
       - 103760552;
  HIDWORD(v371) = (v825 ^ 0xFF6F7ECA) + 9470262 + ((2 * v825) & 0xFEDEFD94);
  LODWORD(v371) = HIDWORD(v371);
  v826 = v780 + ((v371 >> 24) ^ 0x3FDFDDBF) + ((2 * (v371 >> 24)) & 0x7FBFBB7E) - 1071635903;
  v827 = ((2 * v826) & 0xEFFBB3FE) + (v826 ^ 0xF7FDD9FF);
  v828 = v801 ^ 0x3CB7F374 ^ (v814 + 1974493511);
  v829 = v827 + 134358529 + ((v824 - 604410028 - ((2 * v824) & 0xB7F2DEA8)) ^ 0xDBF96F54);
  v830 = v596 + v780 + (v829 ^ 0x7F1A7BDF) + ((2 * v829) & 0xFE34F7BE) - 100528790;
  v831 = ((2 * v830) & 0xDFF7EF7C) + (v830 ^ 0xEFFBF7BE);
  HIDWORD(v371) = v831 + 2114;
  LODWORD(v371) = v831 + 268699714;
  v833 = v812 + 1086670945 + (v793 ^ 0x2C8D50A4 ^ (v807 - ((2 * v807) & 0xC993B1A6) + 1690949843));
  v834 = STACK[0x544];
  v835 = STACK[0x59C];
  v836 = (v786 ^ 0x746700AF)
       + ((v371 >> 17) ^ 0x1FBEDFE7)
       + ((2 * (v371 >> 17)) & 0x3F7DBFCE)
       + 1295415795
       - ((2 * ((v786 ^ 0x746700AF) + ((v371 >> 17) ^ 0x1FBEDFE7) + ((2 * (v371 >> 17)) & 0x3F7DBFCE) - 532602855)) & 0xD9EAB3B4);
  *(_DWORD *)(v19 - 252) = v821 - 103760552 + *(_DWORD *)(v19 - 252) - 1775287639;
  v838 = v812 + 2009984384 + *(_DWORD *)(v19 - 256);
  v839 = v727
       + (v786 ^ 0x746700AF)
       + (v833 ^ 0x7AC77F7B)
       + ((2 * v833) & 0xF58EFEF6)
       + ((v821 + v827 + 1068449680 + 1481827954 + (v836 ^ 0x6CF559DA)) ^ 0x3806180)
       - ((2 * (v821 + v827 + 1068449680 + 1481827954 + (v836 ^ 0x6CF559DA))) & 0xF8FF3CFE)
       + 449477539;
  v840 = ((2 * v839) & 0xDBFDFEDE) + (v839 ^ 0xEDFEFF6F);
  *(_DWORD *)(v19 - 244) = (v836 ^ 0x6CF559DA)
                         + (*(_DWORD *)(v19 - 244) ^ 0x41C0D54)
                         + 68947284
                         - ((2 * ((v836 ^ 0x6CF559DA) + (*(_DWORD *)(v19 - 244) ^ 0x41C0D54))) & 0x8381AA8);
  *(_DWORD *)(v19 - 256) = v838 - 923313439;
  HIDWORD(v371) = v840 + 8;
  LODWORD(v371) = v840 - 1087412472;
  v842 = v797 + ((v371 >> 6) ^ 0x6FAF5FF9) + ((2 * (v371 >> 6)) & 0xDF5EBFF2) - 1873764345;
  v832 = ((2 * (v821 - 1879048191 + v828)) & 0xEABB2E7A) + ((v821 - 1879048191 + v828) ^ 0x755D973D);
  v837 = v832 + v827 - ((2 * (v832 + v827) + 625548680) & 0x3FF1385E);
  v843 = v797
       + ((v719 + 1074174721 + ((v837 + 849160947) ^ 0xF30DC5F5 ^ v836)) ^ 0xABBF79CF)
       + ((2 * (v719 + 1074174721 + ((v837 + 849160947) ^ 0xF30DC5F5 ^ v836))) & 0x577EF39E)
       - 937843444
       + ((2 * v842) & 0xFF9FB77A)
       + (v842 ^ 0x7FCFDBBD)
       - 683900960;
  v844 = ((2 * v843) & 0xFFBFFF9E) + (v843 ^ 0x7FDFFFCF);
  HIDWORD(v371) = v844 + 49;
  LODWORD(v371) = v844 - 2145386447;
  v845 = v802 + ((v371 >> 10) ^ 0x4FB5C377) + ((2 * (v371 >> 10)) & 0x9F6B86EE) - 1337312119;
  v846 = v827 + 1068449680 + LODWORD(STACK[0x594]);
  *(_DWORD *)(v19 - 248) = ((2 * v845) & 0xF73DFF4E)
                         + (v845 ^ 0x7B9EFFA7)
                         - 998394885
                         + *(_DWORD *)(v19 - 248)
                         - 1075622818;
  v841 = ((v834 - 1452727987) | (v835 - 577474291))
       + 871709365
       - ((2 * ((v834 - 1452727987) | (v835 - 577474291))) & 0x67EA7532) != 871709365;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v19 - 200)
                                                              + 8
                                                              * (((4 * v841) | (32 * v841)) ^ *(_DWORD *)(v19 - 240)))
                                                  - 8))(v846, (v846 - 934091151));
}

uint64_t sub_1000F2AA8(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  LODWORD(STACK[0x58C]) = v2;
  LODWORD(STACK[0x590]) = v3;
  v8 = *(uint64_t (**)(void))(v7
                           + 8
                           * ((38 * (v6 + ((15038 * (((v5 - 21815) | 0x3514) ^ 0x757E)) ^ 0xDD940479) < 0xFFFFFFF8)) ^ v5));
  LODWORD(STACK[0x598]) = v4;
  LODWORD(STACK[0x594]) = a2;
  return v8();
}

uint64_t sub_1000F2B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;

  v7 = *(unsigned __int8 *)(a4 + (v5 - 577474293));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6 + 8 * v4) - 12))((v7 ^ 0xFFFFFFB7) + ((2 * v7) & 0x6E) + 96);
}

uint64_t sub_1000F2C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v5 + 8 * v4) - 12))((*(unsigned __int8 *)(a4 + 1) ^ 0x37)
                                                                             + ((2 * *(unsigned __int8 *)(a4 + 1)) & 0x6Eu) - 32);
}

uint64_t sub_1000F2D18@<X0>(char a1@<W0>, int a2@<W6>, int a3@<W8>)
{
  unsigned __int8 v3;
  int v4;
  int v5;
  unsigned __int8 v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  LODWORD(STACK[0x59C]) = v7;
  *(_DWORD *)(v11 - 168) = (a1 - 23)
                         + 364850057
                         - (((a3 - 9349) ^ 0x112 ^ ((a3 - 21638) | 0x3001)) & (2 * (a1 - 23)));
  *(_DWORD *)(v11 - 216) = a2;
  *(_DWORD *)(v11 - 232) = (a2 ^ 0x77) - 207035391 - 2 * ((a2 ^ 0x77) & 1);
  *(_DWORD *)(v11 - 204) = (v4 - 64) - 1731088475 - ((2 * (v4 - 64)) & 0x14A);
  *(_DWORD *)(v11 - 176) = (v5 - 11) - 1957206535 - ((2 * (v5 - 11)) & 0x1F2);
  LODWORD(STACK[0x57C]) = (v3 | ((v3 < 0x3Du) << 8)) + 801809895;
  *(_DWORD *)(v11 - 184) = (v6 | ((v6 < 0x13u) << 8)) + 1752893720;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (a3 ^ (19 * ((v9 + v8) < 0xFFFFFFF8)))) - 8))();
}

uint64_t sub_1000F2E50(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);

  v4 = STACK[0x5A0];
  LODWORD(STACK[0x584]) = *(unsigned __int8 *)(STACK[0x5A0] + 1)
                        - ((2 * *(unsigned __int8 *)(STACK[0x5A0] + 1)) & 0xFF9A)
                        + 77;
  *(_DWORD *)(v3 - 240) = (a2 - 150394604) & 0x8F6BFCF;
  v5 = (((2 * *(unsigned __int8 *)(v4 + 7)) & 0xFFA4) + (*(unsigned __int8 *)(v4 + 7) ^ 0xFFFFFFD2)) ^ 0xFFFFFF80;
  v6 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * a2) - 8);
  LODWORD(STACK[0x544]) = 1452727987;
  return v6(v5);
}

#error "1000F7B68: call analysis failed (funcsize=3823)"

#error "1000F7B6C: too big function (funcsize=0)"

uint64_t sub_1001125D8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W6>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, int a20,int a21,int a22,int a23,int a24,uint64_t a25,uint64_t a26,uint64_t a27,unsigned int a28,int a29,int a30,int a31,int a32,int a33,uint64_t a34,int a35,int a36,int a37,int a38,_DWORD *a39,_DWORD *a40,_DWORD *a41,_DWORD *a42,_DWORD *a43,_DWORD *a44,_DWORD *a45,_DWORD *a46,_DWORD *a47,_DWORD *a48,_DWORD *a49,_DWORD *a50,_DWORD *a51,_DWORD *a52,_DWORD *a53,_DWORD *a54)
{
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  int v60;
  int v61;
  int v62;
  int v63;
  unsigned int v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unsigned int v96;
  int v97;
  uint64_t v98;
  unsigned int v99;
  unsigned int v100;
  uint64_t v101;
  unsigned int v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unsigned int v106;
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  uint64_t v113;
  unsigned int v114;
  unsigned int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  uint64_t v122;
  unsigned int v123;
  uint64_t v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unint64_t v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  int v138;
  int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  int v147;
  int v148;
  uint64_t v149;
  unsigned int v150;
  unint64_t v151;
  uint64_t v152;
  unsigned int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  unsigned int v159;
  unint64_t v160;
  int v161;
  unsigned int v162;
  unsigned int v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  int v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  int v183;
  uint64_t v184;
  int v185;
  int v186;
  uint64_t v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  int v191;
  unint64_t v192;
  uint64_t v193;
  unint64_t v194;
  int v195;
  uint64_t v196;
  unsigned int v197;
  unsigned int v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  int v206;
  int v207;
  uint64_t v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  uint64_t v222;
  int v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  int v227;
  unsigned int v228;
  int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  int v238;
  unsigned int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  unsigned int v244;
  int v245;
  int v246;
  int v247;
  unsigned int v248;
  int v249;
  unsigned int v250;
  unsigned int v251;
  unint64_t v252;
  unsigned int v253;
  uint64_t v254;
  int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  int v260;
  int v261;
  int v262;
  unint64_t v263;
  int v264;
  unint64_t v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  uint64_t v273;
  unsigned int v274;
  int v275;
  unsigned int v276;
  unsigned int v277;
  uint64_t v278;
  int v279;
  int v280;
  unsigned int v281;
  unsigned int v282;
  uint64_t v283;
  uint64_t v284;
  unint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  BOOL v290;
  int v291;
  int v293;
  uint64_t v294;
  int v295;
  uint64_t v296;
  int v297;
  uint64_t v298;
  unsigned int v299;
  unsigned int v300;
  int v301;
  int v302;
  uint64_t v303;
  int v304;
  unsigned int v305;
  unsigned int v306;
  int v307;
  int v308;
  unsigned int v309;
  int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  int v325;
  unsigned int v326;
  unsigned int v327;
  int v328;
  unsigned int v329;
  int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  unsigned int v342;
  int v343;
  int v344;
  unsigned int v345;
  int v346;
  int v347;
  unsigned int v348;
  int v349;
  int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  int v354;
  unsigned int v355;
  unsigned int v356;
  int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  unsigned int v362;
  int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  int v371;
  unsigned int v372;
  unsigned int v373;
  unsigned int v374;
  unsigned int v375;
  unsigned int v376;
  unsigned int v377;
  int v378;
  int v379;
  int v380;
  unsigned int v381;
  unsigned int v382;
  int v383;
  unsigned int v384;
  unsigned int v385;
  unsigned int v386;
  unsigned int v387;
  unsigned int v388;
  unsigned int v389;
  unsigned int v390;
  int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  int v396;
  unsigned int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  int v403;
  int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  unsigned int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  int v420;
  int v421;
  unsigned int v422;
  unsigned int v423;
  int v424;
  unsigned int v425;
  int v426;
  unsigned int v427;
  int v428;
  unsigned int v429;
  int v430;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  int v443;
  int v444;
  int v445;
  int v446;
  int v447;
  unsigned int v448;
  uint64_t v449;
  int v450;
  unsigned int v451;
  int v452;
  int v453;
  int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  int v460;
  unsigned int v461;
  unsigned int v462;
  int v463;
  int v464;
  int v465;
  int v466;
  unsigned int v467;
  int v468;
  unsigned int v469;
  unsigned int v470;
  int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  unsigned int v477;
  int v478;
  int v479;
  unsigned int v480;
  int v481;
  int v482;
  unsigned int v483;
  int v484;
  unsigned int v485;
  unsigned int v486;
  unsigned int v487;
  unsigned int v488;
  unsigned int v489;
  int v490;
  int v491;
  unsigned int v492;
  unsigned int v493;
  unsigned int v494;
  unsigned int v495;
  unsigned int v496;
  unsigned int v497;
  unsigned int v498;
  unsigned int v499;
  unsigned int v500;
  unsigned int v501;
  unsigned int v502;
  unsigned int v503;
  unsigned int v504;
  unsigned int v505;
  unsigned int v506;
  unsigned int v507;
  unsigned int v508;
  unsigned int v509;
  unsigned int v510;
  int v511;
  unsigned int v512;
  unsigned int v513;
  int v514;
  int v515;
  unsigned int v516;
  unsigned int v517;
  unsigned int v518;
  unsigned int v519;
  unsigned int v520;
  unsigned int v521;
  unsigned int v522;
  int v523;
  unsigned int v524;
  uint64_t v525;
  unsigned int v526;
  int v527;
  int v528;
  unsigned int v529;
  unsigned int v530;
  unsigned int v531;
  int v532;
  unsigned int v533;
  unsigned int v534;
  unsigned int v535;
  int v536;
  unsigned int v537;
  unsigned int v538;
  int v539;
  int v540;
  int v541;
  unsigned int v542;
  unsigned int v543;
  unsigned int v544;
  unsigned int v545;
  unsigned int v546;
  int v547;
  unsigned int v548;
  unsigned int v549;
  unsigned int v550;
  unsigned int v551;
  unsigned int v552;
  int v553;
  unsigned int v554;
  unsigned int v555;
  int v556;
  unsigned int v557;
  unsigned int v558;
  unsigned int v559;
  unsigned int v560;
  unsigned int v561;
  unsigned int v562;
  unsigned int v563;
  unsigned int v564;
  int v565;
  unint64_t v566;
  int v567;
  unsigned int v568;
  unsigned int v569;
  unsigned int v570;
  unsigned int v571;
  unsigned int v572;
  int v573;
  unsigned int v574;
  unsigned int v575;
  unsigned int v576;
  unsigned int v577;
  int v578;
  unsigned int v579;
  int v580;
  unsigned int v581;
  unsigned int v582;
  int v583;
  int v584;
  unsigned int v585;
  unsigned int v586;
  int v587;
  unsigned int v588;
  unsigned int v589;
  unsigned int v590;
  unsigned int v591;
  unsigned int v592;
  unsigned int v593;
  unsigned int v594;
  unsigned int v595;
  unsigned int v596;
  unsigned int v597;
  unsigned int v598;
  int v599;
  int v600;
  unsigned int v601;
  unsigned int v602;
  int v603;
  unsigned int v604;
  unsigned int v605;
  unsigned int v606;
  int v607;
  unsigned int v608;
  unsigned int v609;
  unsigned int v610;
  unsigned int v611;
  unsigned int v612;
  unsigned int v613;
  int v614;
  unsigned int v615;
  unsigned int v616;
  int v617;
  int v618;
  unsigned int v619;
  unsigned int v620;
  int v621;
  unsigned int v622;
  int v623;
  unsigned int v624;
  unsigned int v625;
  unsigned int v626;
  int v627;
  unsigned int v628;
  int v629;
  int v630;
  int v631;
  unsigned int v632;
  int v633;
  int v634;
  int v635;
  unsigned int v636;
  int v637;
  unsigned int v638;
  int v639;
  unsigned int v640;
  unsigned int v641;
  int v642;
  unsigned int v643;
  uint64_t v644;
  unint64_t v645;
  int v646;
  unsigned int v647;
  unsigned int v648;
  unsigned int v649;
  unsigned int v650;
  int v651;
  uint64_t v652;
  unsigned int v653;
  int v654;

  v69 = *(_DWORD *)(v67 - 204);
  v70 = (v69 - 1460723824) & 0x5710F2FD;
  LODWORD(STACK[0x3C8]) = v70;
  v71 = v60 - ((2 * v60) & 0x126) + v70 + 1573964967;
  v72 = a5
      + a4
      - 2113731358
      - 12420 * ((((a5 + a4 - 2113731358) * (unint64_t)v66) >> 32) >> 13);
  v73 = (a2 ^ 8) - 525355839 - (((a2 ^ 8) << (((v69 - 95) & 0x9B) + 102)) & 0x182);
  v74 = (((v71 ^ 0x5DD101E8) * v62) & 0x3BFFDF2) + (((v71 ^ 0x5DD101E8) * v63) ^ 0xCFDFFEF9) + 824026678;
  v75 = v74 - 12420 * (((v74 * (unint64_t)v66) >> 32) >> 13);
  v76 = (((a3 ^ (v68 + 3191)) * v62) & 0x7CBFD22C) + (((a3 ^ (v68 + 3191)) * v63) ^ 0xFE5FE916) + 43891737;
  v77 = v76 - 12420 * (((v76 * (unint64_t)v66) >> 32) >> 13);
  v78 = ((v61 ^ 8) + 22426293 - ((2 * v61) & 0x16A)) ^ 0x1563DCE;
  v79 = (((a6 ^ v54) * v62) & 0x33F6F9C) + (((a6 ^ v54) * v63) ^ 0xFB9FB7CE) + 90041697;
  v80 = v79 - 12420 * (((v79 * (unint64_t)v66) >> 32) >> 13);
  v81 = (((LODWORD(STACK[0x458]) ^ 0xC1E4D9B3) * v62) & 0x6F6F794)
      + (((LODWORD(STACK[0x458]) ^ 0xC1E4D9B3) * v63) ^ 0x5F7B7BCA)
      - 1585305243;
  v82 = v81 - 12420 * (((v81 * (unint64_t)v66) >> 32) >> 13);
  v83 = (((a1 ^ 0x87091FD4) * v62) & 0x3FD7FFC) + (((a1 ^ 0x87091FD4) * v63) ^ 0x3BFEBFFE) - 989928143;
  v84 = v83 - 12420 * (((v83 * (unint64_t)v66) >> 32) >> 13);
  v85 = *(unsigned __int8 *)(v59 + LODWORD(STACK[0x448])) ^ 8;
  v86 = *(_QWORD *)(v67 - 176);
  v87 = v86 + 8464;
  v88 = (v56 ^ v64 ^ 0x2B7FFD87FEFE7EBDLL) + v86 + 8464 + ((2 * (v56 ^ v64)) & 0x1FDFCFD7ALL);
  v89 = (((v55 ^ 0x3157F0A7) * v62) & 0x77FFDEB6) + (((v55 ^ 0x3157F0A7) * v63) ^ 0xBBFFEF5B) + 1157477844;
  v90 = v89 - 12420 * (((v89 * (unint64_t)v66) >> 32) >> 13);
  v91 = ((v78 * v62) & 0x3F5AB7E) + ((v78 * v63) ^ 0x49FAD5BF) - 1224552592;
  v92 = v65;
  v93 = *(_DWORD *)(v65 + 4 * v75) ^ v64;
  *(_QWORD *)(v67 - 240) = (v93 ^ 0xBF7FAFD7BB97FFF7) + v86 + 8464 + ((2 * v93) & 0x1772FFFEELL);
  v94 = *(_DWORD *)(v65 + 4 * (v91 - 12420 * (((v91 * (unint64_t)v66) >> 32) >> 13))) ^ v64;
  v95 = (v94 ^ 0xF7BDF7DD67BBF977) + ((2 * (_DWORD)v94) & 0xCF77F2EE) + v86 + 8464;
  LODWORD(v94) = (((v58 ^ 0xB8420363) * v62) & 0x3D7ED5E) + (((v58 ^ 0xB8420363) * v63) ^ 0x27EBF6AF) - 653152640;
  v96 = v94 - 12420 * (((v94 * (unint64_t)v66) >> 32) >> 13);
  v97 = LODWORD(STACK[0x478]) ^ 0x528097E;
  v98 = *(_DWORD *)(v65 + 4 * v77) ^ v64;
  STACK[0x478] = (v98 ^ 0xFFBFE7FFEF7B7FABLL) + v86 + 8464 + ((2 * v98) & 0x1DEF6FF56);
  v99 = ((16178 * (v73 ^ 0xE0AFB8BA)) & 0x2FF7F68) + (((v73 ^ 0xE0AFB8BA) * v63) ^ 0x7B7FBFB4) - 2055346821;
  v100 = v99 - 12420 * (((v99 * (unint64_t)v66) >> 32) >> 13);
  v101 = *(_DWORD *)(v65 + 4 * v82) ^ v64;
  v102 = ((16178 * v97) & 0x62BBD9D0) + ((v97 * v63) ^ 0xB15DECE8) + 1392433840;
  v103 = v102 - 12420 * (((v102 * (unint64_t)v66) >> 32) >> 13);
  v104 = *(_DWORD *)(v65 + 4 * v80) ^ v64;
  v105 = (v104 ^ 0x7F0E7BFFE197FBFBLL) + v86 + 8464 + ((2 * v104) & 0x1C32FF7F6);
  v106 = (v85 - 442215262 - ((2 * v85) & 0x1B2) + 1591) ^ 0xE5A454A2;
  v107 = ((16178 * v106) & 0x32DFE5E) + ((v106 * v63) ^ 0x7B96FF2F) - 2056870400;
  LODWORD(v104) = v107 - 12420 * (((v107 * (unint64_t)v66) >> 32) >> 13);
  v108 = *(_DWORD *)(v65 + 4 * v72) ^ v64;
  v109 = *(_DWORD *)(v65 + 4 * v100) ^ v64;
  v110 = ((16178 * (LODWORD(STACK[0x468]) ^ 0xBCCC9E83)) & 0xBFBFFD9A)
       + (((LODWORD(STACK[0x468]) ^ 0xBCCC9E83) * v63) ^ 0x5FDFFECD)
       - 1533255221;
  v111 = v110 - 12420 * (((v110 * (unint64_t)v66) >> 32) >> 13);
  v112 = LODWORD(STACK[0x498]) ^ 0xFB;
  v113 = *(_DWORD *)(v65 + 4 * LODWORD(STACK[0x450])) ^ v64;
  STACK[0x498] = (v113 ^ 0x2FF75FCDF3FD7D7FLL) + v86 + 8464 + ((2 * v113) & 0x1E7FAFAFELL);
  v114 = ((16178 * v112) & 0x3BD286) + ((v112 * v63) ^ 0xBF9DE943) + 1151288661;
  v115 = v114 - 12420 * (((177055013 * (unint64_t)v114) >> 32) >> 9);
  LODWORD(v109) = *(unsigned __int8 *)((v109 ^ 0x76FE7FEF27DBE9FELL)
                                     + ((2 * (_DWORD)v109) & 0x4FB7D3FC)
                                     + v86
                                     + 8464
                                     - 0x76FE7FEF27DBE9FELL);
  v116 = *(_DWORD *)(v65 + 4 * v104) ^ v64;
  STACK[0x468] = (v116 ^ 0x475BC1FDADFBFE9CLL) + v86 + 8464 + ((2 * v116) & 0x15BF7FD38);
  v117 = *(_DWORD *)(v65 + 4 * v84) ^ v64;
  v118 = (v117 ^ 0x7DFACD17F75A4FDFLL) + v86 + 8464 + ((2 * v117) & 0x1EEB49FBELL);
  v119 = 8089 * (((2 * (v109 ^ 0x44444444)) & 0xDE) + (v109 ^ 0x694F2A2B)) + 2112420417;
  v120 = v119 - 12420 * (((v119 * (unint64_t)v66) >> 32) >> 13);
  LODWORD(v117) = ((16178 * (LODWORD(STACK[0x490]) ^ 0xA94F9433)) & 0xD9BEC39C)
                + ((8089 * (LODWORD(STACK[0x490]) ^ 0xA94F9433)) ^ 0x6CDF61CE)
                - 1749248054;
  v121 = 8089 * (((2 * (v57 ^ 0x40)) & 0xFFFFFFE7) + (v57 ^ 0x7B73B5B7)) + 963366493;
  LODWORD(v109) = v121 - 12420 * (((v121 * (unint64_t)v66) >> 32) >> 13);
  LODWORD(v108) = *(unsigned __int8 *)((v108 ^ 0x1DECFAF9FAEE7AAFLL)
                                     + v86
                                     + 8464
                                     + ((2 * v108) & 0x1F5DCF55ELL)
                                     - 0x1DECFAF9FAEE7AAFLL);
  v122 = *(_DWORD *)(v65 + 4 * v90) ^ v64;
  v123 = ((2 * (*(unsigned __int8 *)(v95 + 0x842082298440689) ^ 0x44444444)) & 0x1EC)
       + (*(unsigned __int8 *)(v95 + 0x842082298440689) ^ 0xFFFFFFB2);
  v124 = *(_DWORD *)(v65 + 4 * v96) ^ v64;
  STACK[0x458] = (v124 ^ 0xFBFE977AFBDD776FLL) + v86 + 8464 + ((2 * v124) & 0x1F7BAEEDELL);
  LODWORD(v108) = 8089 * (((2 * (v108 ^ 0x44)) & 0xFFFFFFEF) + (v108 ^ 0xFFDABFB3)) - 1656648967;
  LODWORD(v118) = ((2 * (*(unsigned __int8 *)(v118 - 0x7DFACD17F75A4FDFLL) ^ 0x40)) & 0xD6)
                + (*(unsigned __int8 *)(v118 - 0x7DFACD17F75A4FDFLL) ^ 0xCE6B6F2F);
  v125 = ((16178 * (LODWORD(STACK[0x488]) ^ 0x5F)) & 0x2DF75A)
       + ((8089 * (LODWORD(STACK[0x488]) ^ 0x5F)) ^ 0x7ED6FBAD)
       - 2050687509;
  v126 = v125 - 12420 * (((177055013 * (unint64_t)v125) >> 32) >> 9);
  v127 = ((16178 * (LODWORD(STACK[0x470]) ^ 0xBED95843)) & 0xFEFBFDEA)
       + ((8089 * (LODWORD(STACK[0x470]) ^ 0xBED95843)) ^ 0xFF7DFEF5)
       + 83780003;
  v128 = (((16178 * (LODWORD(STACK[0x4C0]) ^ 0x13C25B33)) & 0x9DFE5BDC)
        + ((8089 * (LODWORD(STACK[0x4C0]) ^ 0x13C25B33)) ^ 0x4EFF2DEE)
        - 1252157014)
       % 0x3084;
  v129 = (8089 * v123 + 75340946) % 0x3084;
  LODWORD(STACK[0x4C0]) = (8089
                         * (((2 * (*(unsigned __int8 *)(v88 - 0x2B7FFD87FEFE7EBDLL) ^ 0x44)) & 0x1EA)
                          + (*(unsigned __int8 *)(v88 - 0x2B7FFD87FEFE7EBDLL) ^ 0x7FFDFFB1u))
                         - 1013963989)
                        % 0x3084;
  LODWORD(v88) = (8089 * (int)v118 - 1551261019) % 0x3084u;
  v130 = ((16178 * (LODWORD(STACK[0x480]) ^ 0x8B)) & 0x2FFFFE)
       + ((8089 * (LODWORD(STACK[0x480]) ^ 0x8B)) ^ 0x7F37FFFF)
       - 2063257959;
  HIDWORD(v131) = *(_DWORD *)(v86
                            + 4
                            * (*(_DWORD *)(v92
                                         + 4
                                         * (v108
                                          - 12420
                                          * (((v108 * (unint64_t)v66) >> 32) >> 13))) ^ 0xBA465C4u)) ^ *a53;
  LODWORD(v131) = HIDWORD(v131);
  LODWORD(v108) = (v131 >> 6) - ((2 * (v131 >> 6)) & 0x55971614) - 1429501174;
  HIDWORD(v131) = v108 ^ 0x2CB8B0A;
  LODWORD(v131) = v108 ^ 0xAAAAAAAA;
  LODWORD(v122) = *(unsigned __int8 *)((v122 ^ 0xB1BDB9FBAF5DEFB7)
                                     + v86
                                     + 8464
                                     + ((2 * v122) & 0x15EBBDF6ELL)
                                     + 0x4E42460450A21049);
  LODWORD(v95) = *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * v111) ^ 0xBA465C4u)) ^ *a51 ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * v115) ^ 0xBA465C4u)) ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * (v117 - 12420 * (((v117 * (unint64_t)v66) >> 32) >> 13))) ^ 0xBA465C4u)) ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * v103) ^ 0xBA465C4u));
  LODWORD(v117) = ((2 * (*(unsigned __int8 *)(v105 - 0x7F0E7BFFE197FBFBLL) ^ 0x44444444)) & 0xFC)
                + (*(unsigned __int8 *)(v105 - 0x7F0E7BFFE197FBFBLL) ^ 0x96FBB93A);
  LODWORD(v118) = LODWORD(STACK[0x4BC]) ^ 0x8E7FD8DF;
  LODWORD(STACK[0x4BC]) = (((16178 * (LODWORD(STACK[0x4B0]) ^ 0x52794B33)) & 0x67D2FDEC)
                         + ((8089 * (LODWORD(STACK[0x4B0]) ^ 0x52794B33)) ^ 0xF3E97EF6)
                         + 275990690)
                        % 0x3084;
  LODWORD(v101) = *(unsigned __int8 *)((v101 ^ 0xFEB3FFFEFD567F9ELL)
                                     + v86
                                     + 8464
                                     + ((2 * v101) & 0x1FAACFF3CLL)
                                     + 0x14C000102A98062);
  LODWORD(v105) = ((2 * (v101 ^ 0x44444444)) & 0x1FC) + (v101 ^ 0x37BFAFBA);
  LODWORD(v101) = ((16178 * v118) & a24) + ((8089 * v118) ^ 0xB73FEEFF) + 1295806873;
  LODWORD(v118) = (8089 * (int)v117 + 1280643146) % 0x3084u;
  LODWORD(v117) = 8089 * v105 + 2092697802;
  LODWORD(v105) = ((16178 * (LODWORD(STACK[0x4AC]) ^ 0xA3)) & 0x3779F6)
                + ((8089 * (LODWORD(STACK[0x4AC]) ^ 0xA3)) ^ 0xFD3BBCFB)
                + 117535133;
  v132 = v105 - 12420 * (((177055013 * (unint64_t)v105) >> 32) >> 9);
  LODWORD(v98) = ((2 * (*(unsigned __int8 *)(STACK[0x478] + 0x40180010848055) ^ 0x44)) & 0xFFFFFF9F)
               + (*(unsigned __int8 *)(STACK[0x478] + 0x40180010848055) ^ 0xFFFDDB8B);
  LODWORD(v105) = 2 * ((LODWORD(STACK[0x460]) ^ 0x44) & 0x7F) + (LODWORD(STACK[0x460]) ^ 0x1DFFFD3B);
  LODWORD(STACK[0x490]) = *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * v109) ^ 0xBA465C4u)) ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * v120) ^ 0xBA465C4u)) ^ ((v131 >> 26) - ((2 * (v131 >> 26)) & 0x109204FA) + 139002493) ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * v129) ^ 0xBA465C4u));
  v133 = (((16178 * (LODWORD(STACK[0x4A8]) ^ 0xDB457F7)) & 0xF7BECFCE)
        + ((8089 * (LODWORD(STACK[0x4A8]) ^ 0xDB457F7)) ^ 0xFBDF67E7)
        + 146575793)
       % 0x3084;
  v134 = ((2 * (*(unsigned __int8 *)(STACK[0x458] + 0x401688504228891) ^ 0xFFFFFFCF)) & 0xE8)
       + (*(unsigned __int8 *)(STACK[0x458] + 0x401688504228891) ^ 0xE3EEF30);
  LODWORD(v109) = *(_DWORD *)(v86
                            + 4
                            * (*(_DWORD *)(v92
                                         + 4
                                         * (v127 - 12420 * (((v127 * (unint64_t)v66) >> 32) >> 13))) ^ 0xBA465C4u)) ^ *a52 ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * v128) ^ 0xBA465C4u)) ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * (v130 - 12420 * (((177055013 * (unint64_t)v130) >> 32) >> 9))) ^ 0xBA465C4u)) ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * v126) ^ 0xBA465C4u));
  v135 = (8089 * (int)v98 + 1208375265) % 0x3084u;
  LODWORD(v118) = *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * v118) ^ 0xBA465C4u)) ^ *a49;
  LODWORD(v98) = *(unsigned __int8 *)(*(_QWORD *)(v67 - 240) + 0x4080502844680009);
  LODWORD(v93) = ((2 * (v98 ^ 0x40)) & 0x1B2) + (v98 ^ 0xEBFA9E9D);
  v136 = (8089
        * (((2 * (*(unsigned __int8 *)(STACK[0x468] - 0x475BC1FDADFBFE9CLL) ^ 0xFFFFFFC7)) & 0xF8)
         + (*(unsigned __int8 *)(STACK[0x468] - 0x475BC1FDADFBFE9CLL) ^ 0xDC96FB38))
        - 437540740)
       % 0x3084;
  *(_DWORD *)(v67 - 240) = ((v95 >> 8) & 0xD8 ^ 0x82044209) + ((v95 >> 8) & 0x27);
  LODWORD(v98) = *(_DWORD *)(v92
                           + 4
                           * ((((16178 * (LODWORD(STACK[0x4A4]) ^ 0x55)) & a23)
                             + ((8089 * (LODWORD(STACK[0x4A4]) ^ 0x55)) ^ 0xFBB7EBFD)
                             + 142951067)
                            % 0x3084));
  HIDWORD(v131) = v98 ^ 0x5DD24B8;
  LODWORD(v131) = v98 ^ 0xA0000000;
  LODWORD(v98) = (v131 >> 27) - 1585628480 - ((2 * (v131 >> 27)) & 0x42FA75B8) + 28;
  HIDWORD(v131) = v98 ^ 0x1C;
  LODWORD(v131) = v98 ^ 0xA17D3AC0;
  v137 = *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * v88) ^ 0xBA465C4u)) ^ *a54 ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * ((8089 * (((2 * (v122 ^ 0x44)) & 0xFFFFFFDF) + (v122 ^ 0xB36AEFAB)) - 695924287) % 0x3084)) ^ 0xBA465C4u)) ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * LODWORD(STACK[0x4C0])) ^ 0xBA465C4u)) ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * (v117 % 0x3084)) ^ 0xBA465C4u));
  LODWORD(v108) = 8089
                * (((2 * (*(unsigned __int8 *)(STACK[0x498] - 0x2FF75FCDF3FD7D7FLL) ^ 0x44)) & 0xFFFFFFBF)
                 + (*(unsigned __int8 *)(STACK[0x498] - 0x2FF75FCDF3FD7D7FLL) ^ 0xB6DB639B))
                + 709209937;
  v138 = v118 ^ *(_DWORD *)(v86
                          + 4 * (*(_DWORD *)(v92 + 4 * ((8089 * (int)v105 + 382434993) % 0x3084u)) ^ 0xBA465C4u)) ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * v136) ^ 0xBA465C4u)) ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * v135) ^ 0xBA465C4u));
  LODWORD(v113) = *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * LODWORD(STACK[0x4BC])) ^ 0xBA465C4u)) ^ *a50 ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * v132) ^ 0xBA465C4u)) ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * (v101 % 0x3084)) ^ 0xBA465C4u)) ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * v133) ^ 0xBA465C4u));
  LODWORD(v122) = (8089 * (int)v93 - 1571319577) % 0x3084u;
  LODWORD(v101) = (8089 * (((2 * (*(_DWORD *)(v67 - 216) ^ 0x44)) & 0xFFFFFFEF) + (*(_DWORD *)(v67 - 216) ^ 0xB2BEB7B3))
                 + 408493561)
                % 0x3084;
  LODWORD(v93) = (147715963 - (BYTE1(v109) ^ 0xE2 | 0x8CDF77B) + (BYTE1(v109) ^ 0xE2 | 0xF7320884)) ^ 0xF6334A84;
  LODWORD(v88) = *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * ((8089 * v134 - 509540796) % 0x3084)) ^ 0xBA465C4u)) ^ *a48;
  LODWORD(v118) = ((BYTE2(v113) ^ 0xC7) + (WORD1(v113) & 0x1D ^ 0x40BB3718) - ((BYTE2(v113) ^ 0xC7) & 0x1D)) ^ 0x503B3F1C;
  v139 = ((2 * v118) | 0xBEC43900) - v118;
  LODWORD(v118) = (((2 * (v113 ^ 0xA1)) | 0xFF9E2C04) - (v113 ^ 0xA1) + 3205630) ^ 0xF7E59683;
  v140 = *(_DWORD *)(v86
                   + 4
                   * (*(_DWORD *)(v92
                                + 4
                                * ((((16178 * (LODWORD(STACK[0x4C8]) ^ 0xB38A0A21)) & 0x397D6FFE)
                                  + ((8089 * (LODWORD(STACK[0x4C8]) ^ 0xB38A0A21)) ^ 0x1CBEB7FF)
                                  - 407000935)
                                 % 0x3084)) ^ 0xBA465C4u)) ^ *a47 ^ *(_DWORD *)(v86
                                                                              + 4
                                                                              * (*(_DWORD *)(v92
                                                                                           + 4
                                                                                           * ((((16178
                                                                                               * (LODWORD(STACK[0x4C4]) ^ 0xDA0C258E)) & 0x6FC7F7FE)
                                                                                             + ((8089
                                                                                               * (LODWORD(STACK[0x4C4]) ^ 0xDA0C258E)) ^ 0xB7E3FBFF)
                                                                                             + 1282984857)
                                                                                            % 0x3084)) ^ 0xBA465C4u)) ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * ((((16178 * (*(_DWORD *)(v67 - 224) ^ 0x1DB2856F)) & 0xFD5DBFFC) + ((8089 * (*(_DWORD *)(v67 - 224) ^ 0x1DB2856F)) ^ 0xFEAEDFFE) + 99424666) % 0x3084)) ^ 0xBA465C4u)) ^ *(_DWORD *)(v86 + 4 * (((v131 >> 5) - ((2 * (v131 >> 5)) & 0xF8A4C5D2) + 2085774057) ^ 0xD22B2395));
  v141 = *(_DWORD *)(v67 - 240) - 1;
  *(_DWORD *)(v67 - 240) = v141;
  LODWORD(v117) = ((16178 * (v141 ^ 0x820451F7)) & 0xF6CFFFFC) + ((8089 * (v141 ^ 0x820451F7)) ^ 0xFB67FFFE) + 93693233;
  LODWORD(v124) = ((2 * (v95 ^ 0x26A21A62)) | 0xDBA50C5E)
                - (v95 ^ 0x26A21A62)
                - 1842513455;
  *(_DWORD *)(v67 - 216) = v124;
  v142 = v88 ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * v122) ^ 0xBA465C4u)) ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * (v108 % 0x3084)) ^ 0xBA465C4u)) ^ *(_DWORD *)(v86 + 4 * (*(_DWORD *)(v92 + 4 * v101) ^ 0xBA465C4u));
  LODWORD(STACK[0x4BC]) = BYTE2(v95);
  LODWORD(v105) = (((16178 * (BYTE2(v95) ^ 0x1065)) & 0x6FF6FF4)
                 + ((8089 * (BYTE2(v95) ^ 0x1065)) ^ 0xFB7FB7FA)
                 + 92138805)
                % 0x3084;
  LODWORD(STACK[0x4A4]) = BYTE3(v95);
  v143 = (((16178 * (BYTE3(v95) ^ 0x113B)) & 0x577AE4C) + ((8089 * (BYTE3(v95) ^ 0x113B)) ^ 0xDEBBD726) + 574737929)
       % 0x3084;
  LODWORD(v88) = (((16178 * (v124 ^ 0x4B708E76)) & 0xFFEFEF6A)
                - 2130335376
                + ((8089 * (v124 ^ 0x4B708E76)) ^ 0x7FF7F7B5)
                + 1034)
               % 0x3084;
  v144 = ((2 * (BYTE2(v109) ^ 0x503892DE)) | 0xCDD00A68) - (BYTE2(v109) ^ 0x503892DE);
  v145 = (v109 & 0xA0) + (v109 ^ 0xFFFFFFA8) + (v109 | 0x4D7F665F);
  LODWORD(v122) = ((2 * v118) & 0x50D9E952) - v118 - 1751970986;
  LODWORD(STACK[0x4C0]) = v122;
  LODWORD(v86) = (BYTE1(v140) ^ 0xB2EC296D)
               + ((v140 >> 8) & 0xEF ^ 0x8109082)
               - ((BYTE1(v140) ^ 0xB2EC296D) & 0x300829EF);
  LODWORD(STACK[0x4B0]) = v86;
  LODWORD(v101) = (((16178 * (v122 ^ 0x9FB9996E)) & 0xBFFFF766)
                 + ((8089 * (v122 ^ 0x9FB9996E)) ^ 0xDFFFFBB3)
                 + 553494908)
                % 0x3084;
  LODWORD(v109) = BYTE3(v109);
  LODWORD(STACK[0x4A8]) = v109;
  LODWORD(v122) = ((16178 * (v109 ^ 0x117A)) & 0x737E9EE) + ((8089 * (v109 ^ 0x117A)) ^ 0xCF9BF4F7) + 828485688;
  LODWORD(v98) = STACK[0x490];
  LODWORD(v109) = BYTE2(LODWORD(STACK[0x490])) ^ 0xD6;
  LODWORD(STACK[0x410]) = ((v109 - ((2 * v109) & 0x1A) - 1275476979) & 0x5AB ^ 0x5A412028)
                        + ((v109 - ((2 * v109) & 0x1A) - 1275476979) & 0x254 ^ 0x81101211);
  *(_DWORD *)(v67 - 224) = v139 + 547218304;
  LODWORD(STACK[0x438]) = (((16178 * ((v139 + 547218304) ^ 0xCFE20442)) & 0xFFB7EFF8)
                         + ((8089 * ((v139 + 547218304) ^ 0xCFE20442)) ^ 0xFFDBF7FC)
                         + 18984243)
                        % 0x3084;
  LODWORD(v109) = (((2 * (v140 ^ 0xCD)) & 0xFFFFFFFB) - (v140 ^ 0xCD) + 1637986050) ^ 0xA3A1AF93;
  LODWORD(STACK[0x4C4]) = v144 + 421001932;
  v146 = ((16178 * ((v144 + 421001932) ^ 0xB6D08716)) & 0x5DFF7CEC)
       + ((8089 * ((v144 + 421001932) ^ 0xB6D08716)) ^ 0xAEFFBE76)
       + 1375594169;
  v147 = v86 ^ 0x8AF483C7;
  v148 = (8089 * (v86 ^ 0x8AF483C7)) ^ 0x6FFFEECB;
  STACK[0x408] = (*(unsigned int *)(v92 + 4 * v105) ^ 0x73F51DB7529D1A8FLL)
               + ((2 * (*(_DWORD *)(v92 + 4 * v105) ^ 0x6D52ED60)) & 0x7F9FEFDE)
               + v87;
  v149 = *(_DWORD *)(v92 + 4 * (v117 % 0x3084)) ^ 0x6D52ED60u;
  STACK[0x470] = (v149 ^ 0xDE6FFDFEBFDEEFDBLL) + v87 + ((2 * v149) & 0x17FBDDFB6);
  LODWORD(v95) = v138;
  LODWORD(STACK[0x448]) = (v138 ^ 0x484128A7)
                        + (v138 & 0x4C ^ 0x24A68348)
                        - ((v138 ^ 0x484128A7) & 0x841284C);
  LODWORD(v86) = v137;
  LODWORD(v149) = (BYTE1(v137) ^ 0x5D) - 929462568 - 2 * ((BYTE1(v137) ^ 0x5D) & 0x7F);
  v150 = (((16178 * v147) & 0xDFFFDD96) - 1862421200 + v148 + 308) % 0x3084;
  LODWORD(v118) = (v93 | 0xE73BF81C) - (v93 | 0x18C407E3) + 415500259;
  LODWORD(STACK[0x4C8]) = v118;
  LODWORD(v93) = ((16178 * (v118 ^ 0xE63AA982)) & 0xFCDB556E) + ((8089 * (v118 ^ 0xE63AA982)) ^ 0xFE6DAAB7) + 42990200;
  v151 = (*(unsigned int *)(v92 + 4 * v88) ^ 0xF37FBFF786AABA8ELL)
       + v87
       + ((2 * (*(_DWORD *)(v92 + 4 * v88) ^ 0x6D52ED60u)) & 0x1D7F0AFDCLL);
  LODWORD(v88) = ((2 * (BYTE1(v113) ^ 0x10902B4)) | 0x6C356042) - (BYTE1(v113) ^ 0x10902B4) - 907718689;
  LODWORD(STACK[0x480]) = v88;
  LODWORD(v108) = ((16178 * (v88 ^ 0x3713A128)) & 0xF7F3759E) + ((8089 * (v88 ^ 0x3713A128)) ^ 0xFBF9BACF) + 84142688;
  LODWORD(v88) = (1624431299 - (BYTE2(v140) ^ 0xFD | 0x60D2DAC3) + (BYTE2(v140) ^ 0xFD | 0x9F2D253C)) ^ 0xA5293938;
  v152 = *(_DWORD *)(v92 + 4 * (v93 % 0x3084)) ^ 0x6D52ED60u;
  STACK[0x440] = (v152 ^ 0x8E7FFAEFB07BEDDFLL) + v87 + ((2 * v152) & 0x160F7DBBELL);
  LODWORD(STACK[0x488]) = v145 + 1;
  v153 = ((16178 * ((v145 + 1) ^ 0x4D7F74AB)) & 0xDF7DB5F2)
       + ((8089 * ((v145 + 1) ^ 0x4D7F74AB)) ^ 0xEFBEDAF9)
       + 289327670;
  v154 = *(_DWORD *)(v92 + 4 * v143) ^ 0x6D52ED60u;
  STACK[0x450] = (v154 ^ 0x2FAFAF7CF2FAF035) + v87 + ((2 * v154) & 0x1E5F5E06ALL);
  LODWORD(v154) = (((2 * (BYTE2(v86) ^ 0x9F)) | 0x7DA16640) - (BYTE2(v86) ^ 0x9F) + 1093618912) ^ 0x51ECF1C;
  v155 = *(_DWORD *)(v92 + 4 * (v108 % 0x3084)) ^ 0x6D52ED60u;
  STACK[0x460] = (v155 ^ 0xF3EFF8D1ECEBE077) + v87 + ((2 * v155) & 0x1D9D7C0EELL);
  LODWORD(STACK[0x418]) = (((16178 * (BYTE3(v98) ^ 0x1106)) & 0x6EFEFBE)
                         + ((8089 * (BYTE3(v98) ^ 0x1106)) ^ 0x2B77F7DF)
                         - 712659632)
                        % 0x3084u;
  LODWORD(v155) = ((v142 ^ 0x10) - ((2 * (v142 ^ 0x10)) & 0xFFFFFFEF) + 2015455479) ^ 0x2B3DF046;
  LODWORD(STACK[0x400]) = ((2 * v155) | 0x8B6E7474) - v155;
  STACK[0x458] = (*(unsigned int *)(v92 + 4 * (v122 % 0x3084)) ^ 0x957FC7FB862F1C9DLL)
               + v87
               + ((2 * (*(_DWORD *)(v92 + 4 * (v122 % 0x3084)) ^ 0x6D52ED60u)) & 0x1D6FBE3FALL);
  LODWORD(v113) = BYTE3(v113);
  LODWORD(STACK[0x498]) = v113;
  LODWORD(v155) = ((16178 * (v113 ^ 0x1169)) & 0x575D7C6) + ((8089 * (v113 ^ 0x1169)) ^ 0x1EBAEBE3) - 498943668;
  LODWORD(v113) = ((((*(unsigned __int8 *)(v151 + 0xC8040081407A812) ^ 0x47)
                   - ((2 * (*(unsigned __int8 *)(v151 + 0xC8040081407A812) ^ 0x47)) & 0x14E)) << 8)
                 + 419931904) ^ 0x1907A700;
  LODWORD(STACK[0x430]) = v113 + 825228828 - ((2 * v113) & 0x625FFC00);
  LODWORD(STACK[0x428]) = (((16178 * (((_DWORD)v149 + 3751) ^ 0xC89986D8)) & 0xF9FF3FFE)
                         + 66975998
                         + ((8089 * (((_DWORD)v149 + 3751) ^ 0xC89986D8)) ^ 0xFCFF9FFF)
                         + 3122)
                        % 0x3084;
  LODWORD(v122) = ((2 * v109) | 0xCBB74B70) - v109 - 1708893624;
  LODWORD(STACK[0x4AC]) = v122;
  v156 = *(_DWORD *)(v92 + 4 * (v155 % 0x3084)) ^ 0x6D52ED60u;
  STACK[0x468] = (v156 ^ 0x7FECFF36CFBE67DFLL) + v87 + ((2 * v156) & 0x19F7CCFBELL);
  STACK[0x3F8] = (*(unsigned int *)(v92 + 4 * (v146 % 0x3084)) ^ 0x27E7E87BB2BD934FLL)
               + v87
               + ((2 * (*(_DWORD *)(v92 + 4 * (v146 % 0x3084)) ^ 0x6D52ED60u)) & 0x1BFDEFC5ELL);
  LODWORD(v113) = ((v98 & 0xC3) + 2024695356 - (v98 & 0x3C)) ^ 0x78AE74E8;
  v157 = (*(unsigned int *)(v92 + 4 * v150) ^ 0x65B3E37F32D590DBLL)
       + ((2 * (*(_DWORD *)(v92 + 4 * v150) ^ 0x6D52ED60)) & 0xBF0EFB76)
       + v87;
  STACK[0x420] = (*(unsigned int *)(v92 + 4 * v101) ^ 0xF75BBFEFB08FA41DLL)
               + v87
               + ((2 * (*(_DWORD *)(v92 + 4 * v101) ^ 0x6D52ED60u)) & 0x1BBBA92FALL);
  LODWORD(v149) = v88 - ((2 * v88) & 0x5014BBCE) - 401973785;
  LODWORD(STACK[0x478]) = v149;
  LODWORD(v101) = (((16178 * (v149 ^ 0xD20E51E5)) & 0x6AF235FE)
                 + ((8089 * (v149 ^ 0xD20E51E5)) ^ 0xB5791AFF)
                 + 1266977328)
                % 0x3084;
  LODWORD(v156) = (BYTE1(v98) ^ 0xB84005F6)
                + ((v98 >> 8) & 0x7B ^ 0x40895809)
                - ((BYTE1(v98) ^ 0xB84005F6) & 0xB040047B);
  v158 = (*(unsigned int *)(v92 + 4 * (v153 % 0x3084)) ^ 0xBF7FFFFB9E7D329ELL)
       + v87
       + ((2 * (*(_DWORD *)(v92 + 4 * (v153 % 0x3084)) ^ 0x6D52ED60u)) & 0x1E65FBFFCLL);
  LODWORD(STACK[0x3F0]) = v142;
  LODWORD(v149) = (((2 * v154) & 0xE2FB9688) - v154 + 243414203) ^ 0xB54C5813;
  v159 = (((16178 * (_DWORD)v113) & 0x7EE977C) - 1056548495 + ((8089 * (_DWORD)v113) ^ 0x3FF74BBEu)) % 0x3084;
  LODWORD(v152) = (((2 * (v86 ^ 0x18C0093)) & 0x11800C2)
                 - (v86 ^ 0x18C0093)
                 + 962652574) ^ 0x38ECFBA4;
  LODWORD(v151) = (((16178 * ((LODWORD(STACK[0x410]) - 1) ^ 0xDB5126A1)) & 0x65A7FFE)
                 + ((8089 * ((LODWORD(STACK[0x410]) - 1) ^ 0xDB5126A1)) ^ 0x732D3FFF)
                 - 1915722448)
                % 0x3084;
  LODWORD(v98) = ((16178 * (BYTE3(v86) ^ 0x110E)) & 0x6AAF97E)
               + ((8089 * (BYTE3(v86) ^ 0x110E)) ^ 0xFF557CBF)
               + 27797616;
  LODWORD(STACK[0x490]) = HIBYTE(v140);
  LODWORD(v124) = (((16178 * (HIBYTE(v140) ^ 0x11D1)) & 0x7F6EDFE)
                 + ((8089 * (HIBYTE(v140) ^ 0x11D1)) ^ 0x4BFB76FF)
                 - 1258148304)
                % 0x3084u;
  v160 = (*(unsigned int *)(v92 + 4 * LODWORD(STACK[0x438])) ^ 0xCFDB7FACDE8D331ALL)
       + v87
       + ((2 * (*(_DWORD *)(v92 + 4 * LODWORD(STACK[0x438])) ^ 0x6D52ED60u)) & 0x167BFBCF4);
  v161 = *(unsigned __int8 *)(STACK[0x408] - 0x73F51DB73FCFF7EFLL);
  LODWORD(v113) = (((v142 >> 8) & 0x21 | ~BYTE1(v142)) - (~(v142 >> 8) & 0x21) + 956667136) ^ 0x3055112B;
  LODWORD(STACK[0x3E8]) = v113 - ((2 * v113) & 0x2000A0);
  LODWORD(v113) = ((((v161 ^ 0x47) - ((2 * (v161 ^ 0x47)) & 0x8A)) << 8) - 992590592) ^ 0xC4D64500;
  LODWORD(v109) = v113 + 1478186675 - ((2 * v113) & 0x3036AC00);
  v162 = v95;
  v163 = (((16178 * (v156 ^ 0x48894A75)) & 0x7FF769A)
        + ((8089 * (v156 ^ 0x48894A75)) ^ 0xFFFFBB4D)
        + 16640482)
       % 0x3084;
  v164 = (*(unsigned int *)(v92 + 4 * v151) ^ 0x4BE9F4EF96FE3A1CLL)
       + v87
       + ((2 * (*(_DWORD *)(v92 + 4 * v151) ^ 0x6D52ED60u)) & 0x1F759AEF8);
  v165 = (*(unsigned int *)(v92 + 4 * v159) ^ 0x369ED6EE922F2799)
       + v87
       + ((2 * (*(_DWORD *)(v92 + 4 * v159) ^ 0x6D52ED60u)) & 0x1FEFB95F2);
  LODWORD(v156) = *(_DWORD *)(v92
                            + 4
                            * ((((16178 * (_DWORD)v152) & 0x7FEFF6DC)
                              + 17147312
                              + ((8089 * (_DWORD)v152) ^ 0xFFF7FB6E)
                              + 1041)
                             % 0x3084));
  LODWORD(v152) = *(_DWORD *)(v92
                            + 4
                            * ((((16178 * (_DWORD)v149) & 0x25C7FFFA) + ((8089 * (_DWORD)v149) ^ 0x12E3FFFDu) - 300309198)
                             % 0x3084));
  STACK[0x3D0] = (v156 ^ 0xDED3EF599BA55697)
               + v87
               + ((2 * (v156 ^ 0x6D52ED60)) & 0x1EDEF77EELL);
  v166 = (*(unsigned int *)(v92 + 4 * (v98 % 0x3084)) ^ 0xAFFBFCE9178C521ELL)
       + ((2 * (*(_DWORD *)(v92 + 4 * (v98 % 0x3084)) ^ 0x6D52ED60)) & 0xF5BD7EFC)
       + v87;
  STACK[0x438] = (*(unsigned int *)(v92 + 4 * v124) ^ 0xB31FE7DCB43C469FLL)
               + v87
               + ((2 * (*(_DWORD *)(v92 + 4 * v124) ^ 0x6D52ED60u)) & 0x1B2DD57FELL);
  LODWORD(v98) = (-142471879 - (BYTE2(v162) ^ 0xE0 | 0xF7820D39) + (BYTE2(v162) ^ 0xE0 | 0x87DF2C6)) ^ 0x87DE22D;
  LODWORD(v124) = (((16178 * (_DWORD)v98) & 0x27DB8DF6) + ((8089 * (_DWORD)v98) ^ 0x13EDC6FBu) - 317727180) % 0x3084;
  LODWORD(v98) = (1701022232 - (BYTE1(v95) ^ 0x29 | 0x65638A18) + (BYTE1(v95) ^ 0x29 | 0x9A9C75E7)) ^ 0x9A9C6634;
  LODWORD(v88) = *(unsigned __int8 *)(v157 - 0x65B3E37F5F877DBBLL);
  LODWORD(v157) = (((16178 * (_DWORD)v98) & 0xE2DEB8BE) + ((8089 * (_DWORD)v98) ^ 0xF16F5C5F) + 260982992) % 0x3084;
  LODWORD(v98) = ((((v88 ^ 0x47) - ((2 * (v88 ^ 0x47)) & 0xF6)) << 8) + 1372355328) ^ 0x51CC7B00;
  LODWORD(STACK[0x410]) = v98 - 1378826534 - ((2 * v98) & 0x5BA18C00);
  v167 = (*(unsigned int *)(v92 + 4 * v101) ^ 0xEFFF27FEBA8C08A2)
       + v87
       + ((2 * (*(_DWORD *)(v92 + 4 * v101) ^ 0x6D52ED60u)) & 0x1AFBDCB84);
  LODWORD(v98) = ((((*(unsigned __int8 *)(STACK[0x440] + 0x718005104F841221) ^ 0x47)
                  - ((2 * *(unsigned __int8 *)(STACK[0x440] + 0x718005104F841221)) & 0x100)) << 8)
                + 14385152) ^ 0xDB8000;
  LODWORD(STACK[0x3E4]) = v98 - 225488130 - ((2 * v98) & 0x651EA400);
  LODWORD(v88) = (*(unsigned __int8 *)(v165 - 0x369ED6EEFF7DCAF9) ^ 0x47)
               - 1188731934
               - ((2 * (*(unsigned __int8 *)(v165 - 0x369ED6EEFF7DCAF9) ^ 0x47)) & 0x1C4);
  LODWORD(STACK[0x408]) = (((16178 * ((LODWORD(STACK[0x400]) + 977847750) ^ 0x96ABB032)) & 0xFC6EEEDE)
                         + ((8089 * ((LODWORD(STACK[0x400]) + 977847750) ^ 0x96ABB032)) ^ 0xFE37776F)
                         + 46542272)
                        % 0x3084;
  LODWORD(v98) = (1591069287 - (BYTE2(v142) ^ 0x1109111 | 0x5ED5CA67) + (BYTE2(v142) ^ 0x1109111 | 0xA12A3598)) ^ 0xA03AB482;
  LODWORD(STACK[0x440]) = (((16178 * (_DWORD)v98) & 0x71D67EF8) + ((8089 * (_DWORD)v98) ^ 0x38EB3F7Cu) - 938318413)
                        % 0x3084;
  v168 = (*(unsigned int *)(v92 + 4 * LODWORD(STACK[0x418])) ^ 0xA6FC7AFA82DD1AD5)
       + v87
       + ((2 * (*(_DWORD *)(v92 + 4 * LODWORD(STACK[0x418])) ^ 0x6D52ED60u)) & 0x1DF1FEF6ALL);
  LODWORD(v98) = ((16178 * (LODWORD(STACK[0x448]) ^ 0x64A69142)) & 0x3D5068DA)
               + ((8089 * (LODWORD(STACK[0x448]) ^ 0x64A69142)) ^ 0xFEA8346D)
               + 39153858;
  v169 = *(_DWORD *)(v92
                   + 4
                   * ((((16178 * (v122 ^ 0xA7DBB7B2)) & 0xFFFFDAFE)
                     + 16627632
                     + ((8089 * (v122 ^ 0xA7DBB7B2)) ^ 0xFFFFED7F))
                    % 0x3084)) ^ 0x6D52ED60u;
  STACK[0x448] = (v169 ^ 0xFF7F7FFD5DFB5EDBLL) + ((2 * (_DWORD)v169) & 0xBBF6BDB6) + v87;
  LODWORD(STACK[0x418]) = (*(unsigned __int8 *)(v166 + 0x5004031685214082) ^ 0x47)
                        + 1837224986
                        - ((2 * (*(unsigned __int8 *)(v166 + 0x5004031685214082) ^ 0x47)) & 0x34);
  LODWORD(v166) = ((*(unsigned __int8 *)(v164 - 0x4BE9F4EFFBACD77CLL) ^ 0x47)
                 + 530615866
                 - ((2 * (*(unsigned __int8 *)(v164 - 0x4BE9F4EFFBACD77CLL) ^ 0x47)) & 0x74)) ^ 0x1FA08E3A | v109 ^ 0x581B56B3;
  LODWORD(v95) = v166 - ((2 * v166) & 0x6F2C41A2);
  LODWORD(STACK[0x400]) = ((*(unsigned __int8 *)(v160 + 0x302480534C202186) ^ 0x47) << 8)
                        - 1003852110
                        + (~((*(unsigned __int8 *)(v160 + 0x302480534C202186) ^ 0x47) << 9) | 0xFFFF23FF);
  LODWORD(v166) = *(unsigned __int8 *)(STACK[0x3F8] - 0x27E7E87BDFEF7E2FLL) ^ 0x47;
  LODWORD(STACK[0x3F8]) = ((_DWORD)v166 << 8) - 1629558344 - (((_DWORD)v166 << 9) & 0x1D200);
  v170 = (*(unsigned int *)(v92 + 4 * v163) ^ 0x7F77D55B92773692)
       + v87
       + ((2 * (*(_DWORD *)(v92 + 4 * v163) ^ 0x6D52ED60u)) & 0x1FE4BB7E4);
  LODWORD(v166) = ((((*(unsigned __int8 *)(v158 + 0x408000040CD02002) ^ 0x47)
                   - ((2 * (*(unsigned __int8 *)(v158 + 0x408000040CD02002) ^ 0x47)) & 0x22222222)) << 8)
                 - 1479798528) ^ 0xA7CC1100;
  v171 = v166 - 1518629124 + (~(2 * v166) | 0xB508E3FF);
  v172 = (*(unsigned int *)(v92 + 4 * (v98 % 0x3084)) ^ 0x37FD59FF922630AFLL)
       + v87
       + ((2 * (*(_DWORD *)(v92 + 4 * (v98 % 0x3084)) ^ 0x6D52ED60u)) & 0x1FEE9BB9ELL);
  v173 = (*(unsigned int *)(v92 + 4 * v157) ^ 0xF6BF8E3D34A51396)
       + ((2 * (*(_DWORD *)(v92 + 4 * v157) ^ 0x6D52ED60)) & 0xB3EFFDEC)
       + v87;
  LODWORD(v166) = *(unsigned __int8 *)((v152 ^ 0x676DF6BF9AA5189FLL)
                                     + v87
                                     + ((2 * (v152 ^ 0x6D52ED60)) & 0x1EFEFEBFELL)
                                     - 0x676DF6BFF7F7F5FFLL) ^ 0x47;
  LODWORD(STACK[0x3CC]) = v166 + 1965599646 - ((2 * v166) & 0x13C);
  LODWORD(v166) = *(unsigned __int8 *)(STACK[0x450] - 0x2FAFAF7CF2FAF035) ^ 0x47;
  LODWORD(v166) = ((((_DWORD)v166 - ((2 * (_DWORD)v166) & 0x18A)) << 8) + 1582220544) ^ 0x5E4EC500;
  LODWORD(v98) = v166 - 1067606762 - ((2 * v166) & 0xBB3A00);
  v174 = (*(unsigned int *)(v92 + 4 * LODWORD(STACK[0x428])) ^ 0x9FFF35FD1229751DLL)
       + ((2 * (*(_DWORD *)(v92 + 4 * LODWORD(STACK[0x428])) ^ 0x6D52ED60)) & 0xFEF730FA)
       + v87;
  LODWORD(v109) = (v88 ^ 0xB92563E2 | LODWORD(STACK[0x430]) ^ 0x312FFE1C)
                - ((2 * (v88 ^ 0xB92563E2 | LODWORD(STACK[0x430]) ^ 0x312FFE1C)) & 0x6A0F27A);
  LODWORD(v166) = *(unsigned __int8 *)(STACK[0x420] + 0x8A440102222B683) ^ 0x47;
  LODWORD(v166) = ((((_DWORD)v166 - ((2 * (_DWORD)v166) & 0x44444444)) << 8) - 1843125760) ^ 0x92242200;
  LODWORD(STACK[0x420]) = v166 - 832697290 - ((2 * v166) & 0x1CBC1800);
  LODWORD(v88) = (((16178 * (HIBYTE(v162) ^ 0x110E)) & 0x7F87AFC)
                + ((8089 * (HIBYTE(v162) ^ 0x110E)) ^ 0x6FFC3D7E)
                - 1862178895)
               % 0x3084u;
  LODWORD(v168) = (*(unsigned __int8 *)(v168 + 0x590385051070084BLL) ^ 0x47)
                + 1195562666
                - ((2 * (*(unsigned __int8 *)(v168 + 0x590385051070084BLL) ^ 0x47)) & 0x55555555);
  LODWORD(v166) = ((*(unsigned __int8 *)(STACK[0x3D0] + 0x212C10A609084409) ^ 0x47)
                 + 87647896
                 - ((2 * *(unsigned __int8 *)(STACK[0x3D0] + 0x212C10A609084409)) & 0x130)) ^ 0x5396698 | (v171 + 1) ^ 0xA57B8EFC;
  LODWORD(STACK[0x450]) = v166 - ((2 * v166) & 0x6046F7C2);
  LODWORD(v166) = ((16178 * ((LODWORD(STACK[0x3E8]) - 1765978032) ^ 0x9FEDC75F)) & 0xDF68776E)
                + ((8089 * ((LODWORD(STACK[0x3E8]) - 1765978032) ^ 0x9FEDC75F)) ^ 0x6FB43BB7)
                - 1857459848;
  LODWORD(v149) = ((16178 * (HIBYTE(LODWORD(STACK[0x3F0])) ^ 0x110E)) & 0x139BE3E)
                + ((8089 * (HIBYTE(LODWORD(STACK[0x3F0])) ^ 0x110E)) ^ 0x5C9CDF1F)
                - 1537161712;
  v175 = *(_DWORD *)(v92 + 4 * v124) ^ 0x6D52ED60u;
  v176 = (v175 ^ 0x5F9DABDDBFE7F1FFLL) + v87 + ((2 * v175) & 0x17FCFE3FELL);
  LODWORD(v175) = *(unsigned __int8 *)(STACK[0x458] + 0x6A80380414820E03) ^ 0x47;
  LODWORD(v175) = ((((_DWORD)v175 - ((2 * (_DWORD)v175) & 0xBE)) << 8) - 803250432) ^ 0xD01F5F00;
  LODWORD(v157) = v175 - 1997869359 - ((2 * v175) & 0x11D5DC00);
  LODWORD(v175) = (*(unsigned __int8 *)(v172 - 0x37FD59FFFF74DDCFLL) ^ 0x47)
                - 1757818164
                - ((2 * (*(unsigned __int8 *)(v172 - 0x37FD59FFFF74DDCFLL) ^ 0x47)) & 0x99999999);
  LODWORD(v172) = *(unsigned __int8 *)(STACK[0x460] + 0xC10072E13141F89) ^ 0x47;
  LODWORD(v172) = ((((_DWORD)v172 - ((2 * (_DWORD)v172) & 0x14C)) << 8) + 496215552) ^ 0x1D93A600;
  LODWORD(v160) = (*(unsigned __int8 *)(v176 - 0x5F9DABDDBFE7F1FFLL) ^ 0x47)
                + 1924217643
                - ((2 * (*(unsigned __int8 *)(v176 - 0x5F9DABDDBFE7F1FFLL) ^ 0x47)) & 0x56);
  LODWORD(v167) = ((((*(unsigned __int8 *)(v167 + 0x1000D80128211A3ELL) ^ 0x47)
                   + 15888213
                   - ((2 * (*(unsigned __int8 *)(v167 + 0x1000D80128211A3ELL) ^ 0x47)) & 0x9C)) << 8)
                 - 1792) ^ 0xF26F4E00;
  LODWORD(STACK[0x428]) = v167 - 552443122 - ((2 * v167) & 0x3E24C600);
  v177 = *(_DWORD *)(v92 + 4 * (v166 % 0x3084)) ^ 0x6D52ED60u;
  LODWORD(v168) = (v168 ^ 0x4742D6AA | v98 ^ 0xC05D9D16) - ((2 * (v168 ^ 0x4742D6AA | v98 ^ 0xC05D9D16)) & 0x3D32DF42);
  LODWORD(v98) = ((*(unsigned __int8 *)(v174 + 0x6000CA0280846783) ^ 0x47)
                + 351220810
                - ((2 * (*(unsigned __int8 *)(v174 + 0x6000CA0280846783) ^ 0x47)) & 0x94)) ^ 0x14EF344A | LODWORD(STACK[0x3E4]) ^ 0xF28F52FE;
  LODWORD(STACK[0x430]) = v98 - ((2 * v98) & 0xEB9826C);
  LODWORD(v98) = (v95 + 932585681) ^ 0x37960B9E;
  LODWORD(v169) = (26305 * v98) ^ 0xBFFFEFFA;
  LODWORD(v174) = (52610 * v98) & 0x7FFFDFF4;
  LODWORD(v98) = *(unsigned __int8 *)(STACK[0x470] + 0x2190020140211025) ^ 0x47;
  LODWORD(v98) = ((((_DWORD)v98 - ((2 * (_DWORD)v98) & 0xFFFFFF87)) << 8) + 1488569088) ^ 0x58B9C300;
  LODWORD(v152) = ((*(unsigned __int8 *)(v173 + 0x94071C2A608010ALL) ^ 0x47)
                 + 1007889832
                 - ((2 * *(unsigned __int8 *)(v173 + 0x94071C2A608010ALL)) & 0x150)) ^ 0x3C132DA8 | (v172 - 252416954 - ((2 * v172) & 0x61E8D800)) ^ 0xF0F46C46;
  LODWORD(v164) = *(unsigned __int8 *)(v170 - 0x7F77D55BFF25DBF2);
  LODWORD(STACK[0x470]) = v152 - ((2 * v152) & 0x154B9404);
  LODWORD(v98) = ((v164 ^ 0x47) - 2072413613 - ((2 * (v164 ^ 0x47)) & 0xA6)) ^ 0x84797A53 | (v98
                                                                                           - 246928949
                                                                                           - ((2 * v98) & 0x62905200)) ^ 0xF14829CB;
  LODWORD(v177) = *(unsigned __int8 *)((v177 ^ 0xEFFEB7EFFFA6F3FDLL)
                                     + v87
                                     + ((2 * v177) & 0x1FF4DE7FALL)
                                     + 0x1001481000590C03) ^ 0x47;
  LODWORD(v177) = (v177 - 890773735 - ((2 * v177) & 0x32)) ^ 0xCAE7DF19 | LODWORD(STACK[0x410]) ^ 0xADD0C6DA;
  LODWORD(STACK[0x460]) = v177 - ((2 * v177) & 0x3159B118);
  LODWORD(v176) = (((52610 * (((_DWORD)v168 - 560369759) ^ 0xDE9944EE)) & 0xFBB927FA)
                 + ((26305 * (((_DWORD)v168 - 560369759) ^ 0xDE9944EE)) ^ 0xFDDC93FD)
                 + 62969993)
                % 0x10C80;
  LODWORD(v174) = ((int)v174 + (int)v169 + 1100840076) % 0x10C80u;
  v178 = (*(unsigned int *)(v92
                          + 4
                          * (v149
                           - 12420 * (((177055013 * (unint64_t)v149) >> 32) >> 9))) ^ 0x5BDDBD57C0A1229DLL)
       + v87
       + ((2
         * (*(_DWORD *)(v92
                      + 4
                      * (v149
                       - 12420 * (((177055013 * (unint64_t)v149) >> 32) >> 9))) ^ 0x6D52ED60u)) & 0x15BE79FFALL);
  v179 = (*(unsigned int *)(v92 + 4 * v88) ^ 0x56D35BEF56EF224ELL)
       + ((2 * (*(_DWORD *)(v92 + 4 * v88) ^ 0x6D52ED60)) & 0x777B9E5C)
       + v87;
  v180 = (2 * (*(_DWORD *)(v92 + 4 * LODWORD(STACK[0x408])) ^ 0x6D52ED60u)) & 0x1ABDF3FF6;
  v181 = (*(unsigned int *)(v92 + 4 * LODWORD(STACK[0x408])) ^ 0xF77D9FBDB8BD729BLL) + v87;
  STACK[0x3D8] = v87;
  v182 = v181 + v180;
  LODWORD(v180) = LODWORD(STACK[0x3CC]) ^ 0x7528AB9E | LODWORD(STACK[0x3F8]) ^ 0x9EDEE9B8;
  LODWORD(v181) = v180 - ((2 * v180) & 0x51B76682);
  LODWORD(v180) = v160 ^ 0x72B13B2B | (LODWORD(STACK[0x400]) + 1) ^ 0xC42A6EB2;
  v183 = v180 + 1983864363 - 2 * (v180 & 0x763F5E3B ^ v160 & 0x10);
  v184 = *(_QWORD *)(v67 - 168);
  v185 = *(unsigned __int8 *)(v184
                            + (((52610 * (((_DWORD)v109 - 2091878083) ^ 0x83505272)) & 0xB6FEADDE)
                             + ((26305 * (((_DWORD)v109 - 2091878083) ^ 0x83505272)) ^ 0xDB7F56EF)
                             + 639505815)
                            % 0x10C80);
  LODWORD(v172) = (v98 - ((2 * v98) & 0x5969C098) + 750051404) ^ 0x2CB4CB03;
  LODWORD(STACK[0x458]) = (v185 ^ 8) + 1585492005 - ((2 * v185) & 0x4A);
  LODWORD(v180) = (LODWORD(STACK[0x418]) ^ 0x6D81D41A | v157 ^ 0x88EAEED1)
                - ((2 * (LODWORD(STACK[0x418]) ^ 0x6D81D41A | v157 ^ 0x88EAEED1)) & 0x4F1356CA);
  LODWORD(v109) = (v175 ^ 0x9739D2CC | LODWORD(STACK[0x420]) ^ 0xCE5E0C36)
                - ((2 * (v175 ^ 0x9739D2CC | LODWORD(STACK[0x420]) ^ 0xCE5E0C36)) & 0x6E10FE9C);
  LODWORD(v88) = *(unsigned __int8 *)(STACK[0x468] - 0x7FECFF36CFBE67DFLL) ^ 0x47;
  LODWORD(v88) = ((((_DWORD)v88 + (~(2 * (_DWORD)v88) | 0xFFFEF7)) << 8) + 1403225344) ^ 0x53A38400;
  LODWORD(v175) = *(unsigned __int8 *)(STACK[0x438] + 0x4CE0182326915401) ^ 0x47;
  LODWORD(v175) = ((((_DWORD)v175 - ((2 * (_DWORD)v175) & 0xD4)) << 8) + 160262656) ^ 0x98D6A00;
  v186 = v175 + 358479579 - ((2 * v175) & 0x2ABBEC00);
  v187 = v184;
  LODWORD(v175) = (*(unsigned __int8 *)(v184 + v176) ^ 8)
                + 146535029
                - ((2 * *(unsigned __int8 *)(v184 + v176)) & 0xEA);
  LODWORD(v184) = (((52610 * (_DWORD)v172) & 0x7DDF67F2) + ((26305 * (_DWORD)v172) ^ 0xBEEFB3F9) + 1118681229) % 0x10C80;
  LODWORD(v172) = *(unsigned __int8 *)(STACK[0x448] + 0x808002A204A125) ^ 0x47;
  LODWORD(v172) = ((((_DWORD)v172 - ((2 * (_DWORD)v172) & 0x178)) << 8) - 2051359744) ^ 0x85BABC00;
  LODWORD(v176) = v172 - 2052179432 - ((2 * v172) & 0xB5C7400);
  LODWORD(v172) = (((52610 * (((_DWORD)v180 + 663333733) ^ 0x2789802A)) & 0xEB8F7EFC)
                 + ((26305 * (((_DWORD)v180 + 663333733) ^ 0x2789802A)) ^ 0x75C7BF7E)
                 - 1948930808)
                % 0x10C80;
  LODWORD(v179) = ((*(unsigned __int8 *)(v179 - 0x56D35BEF3BBDCF2ELL) ^ 0x47)
                 + 1389631314
                 - ((2 * (*(unsigned __int8 *)(v179 - 0x56D35BEF3BBDCF2ELL) ^ 0x47)) & 0xA4)) ^ 0x52D41752 | (v88 - 2073721234 - ((2 * v88) & 0x4B0C00)) ^ 0x8465866E;
  LODWORD(v154) = v179 - ((2 * v179) & 0x18C6CD52);
  LODWORD(v180) = (((52610 * ((LODWORD(STACK[0x450]) + 807631841) ^ 0x302350AE)) & 0xF5A6CFAA)
                 + ((26305 * ((LODWORD(STACK[0x450]) + 807631841) ^ 0x302350AE)) ^ 0xFAD367D5)
                 + 113902769)
                % 0x10C80;
  LODWORD(v179) = *(unsigned __int8 *)((*(unsigned int *)(v92 + 4 * LODWORD(STACK[0x440])) ^ 0xEF7FF7BF936D2ABBLL)
                                     + v87
                                     + ((2 * (*(_DWORD *)(v92 + 4 * LODWORD(STACK[0x440])) ^ 0x6D52ED60u)) & 0x1FC7F8FB6)
                                     + 0x1080084001C03825) ^ 0x47;
  LODWORD(v179) = (v179 - 1626825391 - ((2 * v179) & 0xA2)) ^ 0x9F089D51 | LODWORD(STACK[0x428]) ^ 0xDF12630E;
  LODWORD(v88) = v179 - ((2 * v179) & 0x521DCCEC);
  LODWORD(v179) = ((*(unsigned __int8 *)(v182 + 0x88260422A106005) ^ 0x47)
                 - 1618509535
                 + (~(2 * (*(unsigned __int8 *)(v182 + 0x88260422A106005) ^ 0x47)) | 0xFFFFFFBD)
                 + 1) ^ 0x9F878121 | v176 ^ 0x85AE3A18;
  LODWORD(v173) = (((52610 * (v183 ^ 0x763F7564)) & 0x83F7A7FA)
                 + ((26305 * (v183 ^ 0x763F7564)) ^ 0xC1FBD3FD)
                 + 1067554953)
                % 0x10C80;
  v188 = (((52610 * ((LODWORD(STACK[0x430]) - 950222538) ^ 0xC75CEA79)) & 0xD11EBF7E)
        + ((26305 * ((LODWORD(STACK[0x430]) - 950222538) ^ 0xC75CEA79)) ^ 0x688F5FBF)
        - 1727132473)
       % 0x10C80;
  LODWORD(v164) = ((*(unsigned __int8 *)(v178 - 0x5BDDBD57ADF3CFFDLL) ^ 0x47)
                 + 420745012
                 - ((2 * (*(unsigned __int8 *)(v178 - 0x5BDDBD57ADF3CFFDLL) ^ 0x47)) & 0x68)) ^ 0x19140F34 | v186 ^ 0x155DF6DB;
  LODWORD(v105) = (*(unsigned __int8 *)(v187 + v172) ^ 8)
                - 1801828746
                - ((2 * *(unsigned __int8 *)(v187 + v172)) & 0xEC);
  LODWORD(v179) = (v179 - ((2 * v179) & 0x6B4B11AE) + 900040919) ^ 0x35A5A398;
  LODWORD(v167) = (((52610 * (_DWORD)v179) & 0xBBFFEDE8) + ((26305 * (_DWORD)v179) ^ 0x5DFFF6F4) - 1549961838) % 0x10C80;
  LODWORD(v179) = *(unsigned __int8 *)(v187
                                     + (((52610 * (((_DWORD)v181 - 1461996735) ^ 0xA8DB980E)) & 0x7CCEFFAE)
                                      + ((26305 * (((_DWORD)v181 - 1461996735) ^ 0xA8DB980E)) ^ 0xBE677FD7)
                                      + 1127607471)
                                     % 0x10C80);
  LODWORD(v181) = *(unsigned __int8 *)(v187 + v184) ^ 8;
  LODWORD(v172) = v181 - 1990372174 - ((2 * v181) & 0x192);
  LODWORD(v181) = (v179 ^ 8) - 1715067319 - ((2 * (v179 ^ 8)) & 0x92);
  LODWORD(v184) = ((*(unsigned __int8 *)(v187 + v174) ^ 8)
                 + 1389752416
                 - ((2 * *(unsigned __int8 *)(v187 + v174)) & 0xC0)) ^ 0x52D5FC1B;
  LODWORD(v179) = (v164 + 1323941654 + (~(2 * v164) | 0xE22C81D5)) ^ 0x4EE9945A;
  v189 = (((52610 * (_DWORD)v179) & 0x59FB7EFE) + ((26305 * (_DWORD)v179) ^ 0x2CFDBF7Fu) - 727732985) % 0x10C80;
  LODWORD(v179) = ((16178 * (v175 ^ 0x8BBFF0E)) & 0x33FFFFE) + ((8089 * (v175 ^ 0x8BBFF0E)) ^ 0x5B9FFFFF) - 1520589520;
  LODWORD(v164) = *(unsigned __int8 *)(v187
                                     + (((52610 * (((_DWORD)v109 + 1997045582) ^ 0x77085401)) & 0xB7F2F3F2)
                                      + ((26305 * (((_DWORD)v109 + 1997045582) ^ 0x77085401)) ^ 0x5BF979F9)
                                      - 1515982195)
                                     % 0x10C80);
  LODWORD(v182) = (v164 ^ 8) - 1862897372 - ((2 * v164) & 0x48);
  LODWORD(STACK[0x450]) = (*(unsigned __int8 *)(v187 + v173) ^ 8)
                        - 2112962434
                        - ((2 * *(unsigned __int8 *)(v187 + v173)) & 0xA);
  v190 = *(unsigned __int8 *)(v187 + v189) ^ 8;
  LODWORD(v175) = (((52610 * ((LODWORD(STACK[0x460]) - 659761012) ^ 0xD8ACF3C3)) & 0xD7CEDFDE)
                 + ((26305 * ((LODWORD(STACK[0x460]) - 659761012) ^ 0xD8ACF3C3)) ^ 0xEBE76FEF)
                 + 364248215)
                % 0x10C80;
  LODWORD(v164) = (((52610 * (((_DWORD)v154 - 865900887) ^ 0xCC634DE6)) & 0x59D77EA8)
                 + ((26305 * (((_DWORD)v154 - 865900887) ^ 0xCC634DE6)) ^ 0x2CEBBF54)
                 - 726553294)
                % 0x10C80;
  v191 = (*(unsigned __int8 *)(v187 + v188) ^ 8) + 1605281031 - 2 * (*(_BYTE *)(v187 + v188) & 7);
  LODWORD(v154) = v105 ^ 0x949A4B0D;
  LODWORD(v105) = ((16178 * v184) & 0x7BE7FEE) + ((8089 * v184) ^ 0xCFDF3FF7) + 824075576;
  LODWORD(v176) = (((16178 * (((_DWORD)v172 + 1815) ^ 0x895D54B2)) & 0x3EFBEFA)
                 + ((8089 * (((_DWORD)v172 + 1815) ^ 0x895D54B2)) ^ 0x1FF7DF7D)
                 - 519715406)
                % 0x3084;
  LODWORD(v109) = ((16178 * (LODWORD(STACK[0x458]) ^ 0x5E80BE5E)) & 0x5DD9F76)
                + ((8089 * (LODWORD(STACK[0x458]) ^ 0x5E80BE5E)) ^ 0xFEEECFBB)
                + 34526580;
  LODWORD(v95) = (((52610 * ((LODWORD(STACK[0x470]) - 1968846334) ^ 0x8AA5E14D)) & 0xBBFBB1BC)
                + ((26305 * ((LODWORD(STACK[0x470]) - 1968846334) ^ 0x8AA5E14D)) ^ 0x5DFDD8DE)
                - 1549823064)
               % 0x10C80;
  LODWORD(v172) = (*(unsigned __int8 *)(v187 + v180) ^ 8)
                + 527119869
                + (~(2 * *(unsigned __int8 *)(v187 + v180)) | 0xFFFFFEF3);
  LODWORD(v180) = *(unsigned __int8 *)(v187 + v167);
  v192 = STACK[0x3D8];
  STACK[0x468] = (*(unsigned int *)(v92 + 4 * v176) ^ 0xFC59FFF3829D7ED7)
               + STACK[0x3D8]
               + ((2 * (*(_DWORD *)(v92 + 4 * v176) ^ 0x6D52ED60u)) & 0x1DF9F276ELL);
  STACK[0x458] = (*(unsigned int *)(v92 + 4 * (v105 % 0x3084)) ^ 0xFEE4FFEE92C91C6ALL)
               + v192
               + ((2 * (*(_DWORD *)(v92 + 4 * (v105 % 0x3084)) ^ 0x6D52ED60u)) & 0x1FF37E214);
  v193 = *(_DWORD *)(v92 + 4 * (v179 % 0x3084)) ^ 0x6D52ED60u;
  v194 = (v193 ^ 0xDEFFF7BF4FF9E3D7) + ((2 * (_DWORD)v193) & 0x9FF3C7AE) + v192;
  LODWORD(v193) = *(unsigned __int8 *)(v187 + v175) ^ 8;
  v195 = v193 - 816688917 - ((2 * v193) & 0x1D6);
  LODWORD(v193) = *(unsigned __int8 *)(v187
                                     + (((52610 * (((_DWORD)v88 + 688842358) ^ 0x290ECD39)) & 0x77BFDB1A)
                                      + ((26305 * (((_DWORD)v88 + 688842358) ^ 0x290ECD39)) ^ 0xBBDFED8D)
                                      + 1170046713)
                                     % 0x10C80);
  LODWORD(v175) = (v193 ^ 8) - 20744536 - ((2 * v193) & 0x1A6);
  LODWORD(v176) = (*(unsigned __int8 *)(v187 + v95) ^ 8)
                + 231286649
                - ((2 * *(unsigned __int8 *)(v187 + v95)) & 4);
  LODWORD(v167) = (((16178 * (v191 ^ 0x5FAEAA7C)) & 0x17B77FE)
                 + ((8089 * (v191 ^ 0x5FAEAA7C)) ^ 0x4ABDBBFFu)
                 - 1237325520)
                % 0x3084;
  LODWORD(v88) = (((16178 * (_DWORD)v154) & 0x3B59FF6) + ((8089 * (_DWORD)v154) ^ 0x4BDACFFBu) - 1256008396) % 0x3084;
  LODWORD(v193) = ((16178 * ((v172 + 1418) ^ 0x1F6B35FD)) & 0x2DBD5D0)
                + ((8089 * ((v172 + 1418) ^ 0x1F6B35FD)) ^ 0x576DEAE8)
                - 1450198457;
  LODWORD(v187) = *(unsigned __int8 *)(v187 + v164) ^ 8;
  LODWORD(v87) = v187 + 1444323411 - ((2 * v187) & 0x50);
  LODWORD(v172) = (((16178 * (((_DWORD)v176 + 137) ^ 0xDC92779)) & 0x1FBBFFA)
                 + ((8089 * (((_DWORD)v176 + 137) ^ 0xDC92779)) ^ 0xFAFDDFFD)
                 + 100648242)
                % 0x3084;
  LODWORD(v187) = *(unsigned __int8 *)(v194 + 0x21000840B0061C29);
  HIDWORD(v131) = ~(_DWORD)v187;
  LODWORD(v131) = (v187 ^ 0x40) << 24;
  LODWORD(v194) = v195 ^ 0xCF525F90;
  LODWORD(v187) = (v131 >> 27) + (~(2 * (v131 >> 27)) | 0x45) + 94;
  HIDWORD(v131) = v187 ^ 0x1D;
  LODWORD(v131) = (v187 ^ 0x40) << 24;
  LODWORD(v176) = (8089 * (v195 ^ 0xCF525F90)) ^ 0x6FFFEFFF;
  v196 = *(_DWORD *)(v92 + 4 * (v109 % 0x3084)) ^ 0x6D52ED60u;
  STACK[0x470] = (v196 ^ 0xBBB7CF6BFFFFF3C7) + v192 + ((2 * v196) & 0x1FFFFE78ELL);
  LODWORD(v154) = (((16178 * (v181 ^ 0x99C62A32)) & 0x3DFF7F0)
                 + ((8089 * (v181 ^ 0x99C62A32)) ^ 0x3DEFFBF8)
                 - 1022514889)
                % 0x3084;
  v197 = (((16178 * (v182 ^ 0x90F67F5F)) & 0x218E7FC)
        + ((8089 * (v182 ^ 0x90F67F5F)) ^ 0xB50C73FE)
        + 1274097969)
       % 0x3084;
  LODWORD(v180) = ((v180 ^ 8) + 1022710303 - ((2 * v180) & 0xC8) + 2629) ^ 0x3CF5521F;
  LODWORD(v180) = ((16178 * v180) & 0x3B5FFE6) + ((8089 * v180) ^ 0xCFDAFFF3) + 824354108;
  v198 = (((16178 * (((_DWORD)v87 + 3285) ^ 0x5616A053)) & 0x3BECF7C)
        + ((8089 * (((_DWORD)v87 + 3285) ^ 0x5616A053)) ^ 0x7FDF67BEu)
        - 2128724623)
       % 0x3084;
  LODWORD(v182) = (((16178 * (_DWORD)v194) & 0x7FFDFFE) - 1862421200 + v176) % 0x3084;
  LODWORD(v194) = (((16178 * (((_DWORD)v175 + 1067) ^ 0xFEC376A8)) & 0x37FEF5E)
                 + ((8089 * (((_DWORD)v175 + 1067) ^ 0xFEC376A8)) ^ 0xFFBFF7AF)
                 + 20819328)
                % 0x3084;
  LODWORD(v181) = (((16178 * ((LODWORD(STACK[0x450]) + 2951) ^ 0x820EC07E)) & 0x3FDF8FE)
                 + ((8089 * ((LODWORD(STACK[0x450]) + 2951) ^ 0x820EC07E)) ^ 0xCFFEFC7F)
                 + 821995696)
                % 0x3084;
  v199 = *(_DWORD *)(v92 + 4 * (v193 % 0x3084)) ^ 0x6D52ED60u;
  v200 = (*(unsigned int *)(v92 + 4 * v172) ^ 0x47FBBFFE82A93291)
       + v192
       + ((2 * (*(_DWORD *)(v92 + 4 * v172) ^ 0x6D52ED60u)) & 0x1DFF7BFE2);
  LODWORD(STACK[0x478]) = (((16178 * (LODWORD(STACK[0x478]) ^ 0xD20E41EC)) & 0xEFF3EFFE)
                         + ((8089 * (LODWORD(STACK[0x478]) ^ 0xD20E41EC)) ^ 0x77F9F7FF)
                         - 1931398247)
                        % 0x3084;
  LODWORD(STACK[0x460]) = (((16178 * (LODWORD(STACK[0x480]) ^ 0x3713B221)) & 0xF93F97EC)
                         + ((8089 * (LODWORD(STACK[0x480]) ^ 0x3713B221)) ^ 0xFC9FCBF6)
                         + 140179618)
                        % 0x3084;
  LODWORD(v164) = (v190 + 1615385119 - 2 * (v190 & 0x1F)) ^ 0x6048DF64;
  STACK[0x480] = (*(unsigned int *)(v92 + 4 * v167) ^ 0xFB9EECFB92BC2E92)
               + v192
               + ((2 * (*(_DWORD *)(v92 + 4 * v167) ^ 0x6D52ED60u)) & 0x1FFDD87E4);
  v201 = (*(unsigned int *)(v92 + 4 * v88) ^ 0x67E53C17D3AD1253)
       + v192
       + ((2 * (*(_DWORD *)(v92 + 4 * v88) ^ 0x6D52ED60u)) & 0x17DFFFE66);
  LODWORD(v172) = ((16178 * (LODWORD(STACK[0x4A4]) ^ 0x32)) & 0x3DE89E)
                + ((8089 * (LODWORD(STACK[0x4A4]) ^ 0x32)) ^ 0x77FEF44F)
                - 1933795767;
  LODWORD(STACK[0x4A4]) = v172 - 12420 * (((177055013 * (unint64_t)v172) >> 32) >> 9);
  v202 = v192;
  v203 = (*(unsigned int *)(v92 + 4 * v197) ^ 0xFA3EFAE7576D12FFLL)
       + ((2 * (*(_DWORD *)(v92 + 4 * v197) ^ 0x6D52ED60)) & 0x747FFF3E)
       + v192;
  v204 = (*(unsigned int *)(v92 + 4 * v198) ^ 0x7BFFC7FBD02D06BDLL)
       + v192
       + ((2 * (*(_DWORD *)(v92 + 4 * v198) ^ 0x6D52ED60u)) & 0x17AFFD7BALL);
  v205 = (*(unsigned int *)(v92 + 4 * v154) ^ 0x57F7561AB2251699)
       + v192
       + ((2 * (*(_DWORD *)(v92 + 4 * v154) ^ 0x6D52ED60u)) & 0x1BEEFF7F2);
  v206 = LODWORD(STACK[0x488]) ^ 0x4D7F66A2;
  LODWORD(v199) = *(unsigned __int8 *)((v199 ^ 0x5B7FC5EDCBB3FDF7)
                                     + v192
                                     + ((2 * v199) & 0x19767FBEELL)
                                     - 0x5B7FC5EDCBB3FDF7);
  v207 = ((2 * (v199 ^ 4)) & 0xFFFFFF7F) + (v199 ^ 0xFE7EC7FB);
  v208 = (*(unsigned int *)(v92 + 4 * (v180 % 0x3084)) ^ 0x7BFFF7FA926C1693)
       + v192
       + ((2 * (*(_DWORD *)(v92 + 4 * (v180 % 0x3084)) ^ 0x6D52ED60u)) & 0x1FE7DF7E6);
  LODWORD(v176) = ((2
                  * (*(unsigned __int8 *)((*(unsigned int *)(v92 + 4 * v194) ^ 0x5BD7CFFC9AE98EDALL)
                                        + v192
                                        + ((2 * (*(_DWORD *)(v92 + 4 * v194) ^ 0x6D52ED60u)) & 0x1EF76C774)
                                        - 0x5BD7CFFCF7BB63BALL) ^ 0x44)) & 0xBE)
                + (*(unsigned __int8 *)((*(unsigned int *)(v92 + 4 * v194) ^ 0x5BD7CFFC9AE98EDALL)
                                      + v192
                                      + ((2 * (*(_DWORD *)(v92 + 4 * v194) ^ 0x6D52ED60u)) & 0x1EF76C774)
                                      - 0x5BD7CFFCF7BB63BALL) ^ 0x3EFFFE1B);
  LODWORD(STACK[0x488]) = (8089
                         * (((2 * (((v131 >> 29) - ((2 * (v131 >> 29)) & 0x52) + 41) ^ 0x2A)) & 0x16E)
                          + (((v131 >> 29) - ((2 * (v131 >> 29)) & 0x52) + 41) ^ 0xFEDACF9D))
                         + 885933369)
                        % 0x3084;
  LODWORD(v180) = ((2 * (*(unsigned __int8 *)(v200 - 0x47FBBFFEEFFBDFF1) ^ 0x40)) & 0xD6)
                + (*(unsigned __int8 *)(v200 - 0x47FBBFFEEFFBDFF1) ^ 0xE6BC7A2F);
  v209 = (*(unsigned int *)(v92 + 4 * v182) ^ 0xEDFFEE3B92AC0240)
       + v192
       + ((2 * (*(_DWORD *)(v92 + 4 * v182) ^ 0x6D52ED60u)) & 0x1FFFDDE40);
  LODWORD(STACK[0x450]) = (((16178 * v206) & 0xB945DBFC) + ((8089 * v206) ^ 0x5CA2EDFE) - 1468567654) % 0x3084;
  LODWORD(STACK[0x448]) = (8089 * (int)v180 + 1266853285) % 0x3084u;
  LODWORD(v180) = LODWORD(STACK[0x4A8]) ^ 0x73;
  LODWORD(STACK[0x4A8]) = (8089 * (int)v176 + 1578017745) % 0x3084u;
  v210 = *(_DWORD *)(v92 + 4 * v181) ^ 0x6D52ED60u;
  v211 = *(_DWORD *)(v92
                   + 4
                   * ((((16178 * (_DWORD)v164) & 0x1CDFFAA) + ((8089 * (_DWORD)v164) ^ 0x3CE6FFD5u) - 1005148838)
                    % 0x3084)) ^ 0x6D52ED60u;
  v212 = (v211 ^ 0x6DFFFDB2FBBF5FDDLL) + v192 + ((2 * v211) & 0x1F77EBFBALL);
  LODWORD(v154) = (8089
                 * (((2 * (*(unsigned __int8 *)(v201 - 0x67E53C17BEFFFF33) ^ 0x44)) & 0xFFFFFFEF)
                  + (*(unsigned __int8 *)(v201 - 0x67E53C17BEFFFF33) ^ 0x7DB7CFB3))
                 - 1615765767)
                % 0x3084;
  v213 = ((16178 * (LODWORD(STACK[0x4BC]) ^ 0x6C)) & 0x37FC58)
       + ((8089 * (LODWORD(STACK[0x4BC]) ^ 0x6C)) ^ 0xBEFBFE2C)
       + 1172254060;
  v214 = (((16178 * (_DWORD)v180) & 0x3FDDFE) + ((8089 * (_DWORD)v180) ^ 0x3DFFEEFFu) - 960781415) % 0x3084;
  v215 = ((2 * (*(unsigned __int8 *)(v203 + 0x5C10518C5C00061) ^ 0xFFFFFFC7)) & 0xF8)
       + (*(unsigned __int8 *)(v203 + 0x5C10518C5C00061) ^ 0x27FBDC38);
  LODWORD(v182) = (8089
                 * (((2 * (*(unsigned __int8 *)(STACK[0x458] + 0x11B001100640EF6) ^ 4)) & 0xFFFFFF7F)
                  + (*(unsigned __int8 *)(STACK[0x458] + 0x11B001100640EF6) ^ 0xB7FD6AFB))
                 + 1585004145)
                % 0x3084;
  v216 = (((16178 * (LODWORD(STACK[0x4B0]) ^ 0x8AF490CE)) & 0xFBBFBA9A)
        + ((8089 * (LODWORD(STACK[0x4B0]) ^ 0x8AF490CE)) ^ 0x7DDFDD4D)
        - 2028279989)
       % 0x3084;
  LODWORD(v209) = 8089
                * (((2 * *(unsigned __int8 *)(v209 + 0x120011C4000110E0)) & 0x166)
                 + (*(unsigned __int8 *)(v209 + 0x120011C4000110E0) ^ 0x7FAD5EF7))
                - 1209696611;
  v217 = (((16178 * (LODWORD(STACK[0x4C0]) ^ 0x9FB98B67)) & 0x60B7BF42)
        + ((8089 * (LODWORD(STACK[0x4C0]) ^ 0x9FB98B67)) ^ 0xB05BDFA1)
        + 1421770231)
       % 0x3084;
  *(_DWORD *)(v67 - 240) = (((16178 * (*(_DWORD *)(v67 - 240) ^ 0x820442FE)) & 0xFF58FFEE)
                          + ((8089 * (*(_DWORD *)(v67 - 240) ^ 0x820442FE)) ^ 0xFFAC7FF7)
                          + 89015457)
                         % 0x3084;
  LODWORD(v210) = *(unsigned __int8 *)((v210 ^ 0x3D7FF73A7FFEF7BFLL)
                                     + ((2 * (_DWORD)v210) & 0xFFFDEF7E)
                                     + v192
                                     - 0x3D7FF73A7FFEF7BFLL);
  v220 = (8089
        * (((2 * (*(unsigned __int8 *)(v204 - 0x7BFFC7FBBD7FEBDDLL) ^ 0x44444444)) & 0x1F8)
         + (*(unsigned __int8 *)(v204 - 0x7BFFC7FBBD7FEBDDLL) ^ 0x5F79FBB8u))
        + 793801980)
       % 0x3084;
  v221 = (8089
        * (((2 * (*(unsigned __int8 *)(v205 - 0x57F7561ADF77FBF9) ^ 0x44)) & 0xDDDDDDDD)
         + (*(unsigned __int8 *)(v205 - 0x57F7561ADF77FBF9) ^ 0x7DDF3FAA))
        - 1045420966)
       % 0x3084;
  v222 = *(_QWORD *)(v67 - 176);
  LODWORD(v182) = *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * v182) ^ 0xBA465C4u)) ^ *a44 ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * v154) ^ 0xBA465C4u));
  LODWORD(v209) = *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * (v209 % 0x3084)) ^ 0xBA465C4u));
  LODWORD(v176) = 144352418 - (v209 & 0x40000 ^ 0x83041110 | 0x6CFBAEE3);
  v223 = (v182 ^ 0x401F0A3)
       - (v176 & 0x40000)
       + 1188537566
       - 2 * (((v182 ^ 0x401F0A3) - (v176 & 0x40000)) & 0x46D7A4DF ^ (v182 ^ 0x401F0A3) & 1);
  LODWORD(v157) = (v176 & 0x40000 & v182) - 1508104600 - 2 * (v176 & 0x40000 & v182);
  v224 = v182 ^ 0x5A4CB0D2 ^ v176;
  v226 = (8089 * (((2 * (v210 ^ 0x44444444)) & 0x1AE) + (v210 ^ 0xB7EDFE93)) + 1170330649)
       % 0x3084;
  v227 = (1161365565 - (v209 & 0xFFFBFFFF ^ 0x86428165 | 0x4539083D) + (v209 & 0xFFFBFFFF ^ 0x86428165 | 0xBAC6F7C2)) ^ 0xB885E646;
  if ((_DWORD)v157 == -1508104600)
    v223 = v224;
  v228 = (((16178 * (LODWORD(STACK[0x4C8]) ^ 0xE63ABA8B)) & 0x7FDFD5D0)
        + ((8089 * (LODWORD(STACK[0x4C8]) ^ 0xE63ABA8B)) ^ 0x3FEFEAE8)
        - 989144656)
       % 0x3084;
  v229 = *(_DWORD *)(v67 - 192);
  v230 = *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * v214) ^ 0xBA465C4u)) ^ v229 ^ *a43 ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * (v213 - 12420 * (((177055013 * (unint64_t)v213) >> 32) >> 9))) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * v216) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * v217) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * ((8089 * v215 - 1612672132) % 0x3084)) ^ 0xBA465C4u)) ^ (((2 * v227) | 0x34D039C0) - v227 - 443030752) ^ v223;
  v231 = (8089
        * ((*(unsigned __int8 *)(v212 - 0x6DFFFDB2FBBF5FDDLL) ^ 0x3EFFFEBB)
         + 2 * (*(unsigned __int8 *)(v212 - 0x6DFFFDB2FBBF5FDDLL) ^ 0x44u))
        + 1574652721)
       % 0x3084;
  v232 = (((16178 * (*(_DWORD *)(v67 - 224) ^ 0xCFE2144B)) & 0x376F9E76)
        + ((8089 * (*(_DWORD *)(v67 - 224) ^ 0xCFE2144B)) ^ 0x9BB7CF3B)
        + 1763925085)
       % 0x3084;
  v233 = *a46 ^ *a45 ^ v229 ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * LODWORD(STACK[0x4A4])) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * LODWORD(STACK[0x460])) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * LODWORD(STACK[0x448])) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * LODWORD(STACK[0x478])) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * LODWORD(STACK[0x4A8])) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * LODWORD(STACK[0x450])) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * ((8089 * v207 - 1859855503) % 0x3084u)) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * LODWORD(STACK[0x488])) ^ 0xBA465C4u));
  v234 = (((16178 * (*(_DWORD *)(v67 - 216) ^ 0x4B709C7F)) & 0x62EFFCDC)
        + ((8089 * (*(_DWORD *)(v67 - 216) ^ 0x4B709C7F)) ^ 0x3177FE6Eu)
        - 744333526)
       % 0x3084;
  v225 = (8089
        * (((2 * (*(unsigned __int8 *)(v208 - 0x7BFFF7FAFF3EFBF3) ^ 0x40)) & 0x1D4)
         + (*(unsigned __int8 *)(v208 - 0x7BFFF7FAFF3EFBF3) ^ 0x79BB7AAEu))
        - 1876192834)
       % 0x3084;
  v218 = ((16178 * (LODWORD(STACK[0x498]) ^ 0x60)) & 0x1FEBFC)
       + ((8089 * (LODWORD(STACK[0x498]) ^ 0x60)) ^ 0xF7CFF5FE)
       + 216767642;
  v219 = v218 - 12420 * (((177055013 * (unint64_t)v218) >> 32) >> 9);
  v235 = *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * *(unsigned int *)(v67 - 240)) ^ 0xBA465C4u)) ^ v229 ^ *a42 ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * ((((16178 * (LODWORD(STACK[0x4C4]) ^ 0xB6D0971F)) & 0x5BB6DFF8) + ((8089 * (LODWORD(STACK[0x4C4]) ^ 0xB6D0971F)) ^ 0x2DDB6FFC) - 687883364) % 0x3084)) ^ 0xBA465C4u)) ^ *a41 ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * v219) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * v220) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * v221) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * ((((16178 * (LODWORD(STACK[0x4AC]) ^ 0xA7DBA5BB)) & 0xA78F3D6E) + ((8089 * (LODWORD(STACK[0x4AC]) ^ 0xA7DBA5BB)) ^ 0x53C79EB7) - 1319977247) % 0x3084)) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * ((8089 * (((2 * (*(unsigned __int8 *)(STACK[0x468] + 0x3A6000C10306C49) ^ 0xFFFFFFCF)) & 0xA8) + (*(unsigned __int8 *)(STACK[0x468] + 0x3A6000C10306C49) ^ 0xBCF9FF10)) - 844759196) % 0x3084)) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * v225) ^ 0xBA465C4u));
  v236 = LODWORD(STACK[0x554]) + ((v233 >> 8) ^ 0x37) + ((v233 >> 7) & 0x1FFFFFA ^ 0xFFFFFF90) + 3;
  v237 = *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * v228) ^ 0xBA465C4u)) ^ v229 ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * ((((16178 * (LODWORD(STACK[0x490]) ^ 0xD8)) & 0x1DFFD8) - 1932747837 + ((8089 * (LODWORD(STACK[0x490]) ^ 0xD8)) ^ 0x77EEFFECu) - 2327) % 0x3084)) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * v226) ^ 0xBA465C4u)) ^ *a40 ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * v231) ^ 0xBA465C4u)) ^ *a39 ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * v234) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * v232) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * ((8089 * (((2 * (*(unsigned __int8 *)(STACK[0x480] + 0x461130400113C0ELL) ^ 0x44444444)) & 0xFA) + (*(unsigned __int8 *)(STACK[0x480] + 0x461130400113C0ELL) ^ 0x742DFF39u)) + 59568099) % 0x3084)) ^ 0xBA465C4u)) ^ *(_DWORD *)(v222 + 4 * (*(_DWORD *)(v92 + 4 * ((8089 * (2 * ((*(_BYTE *)(STACK[0x470] + 0x4448309400000C39) ^ 0x44) & 0x7F) + (*(unsigned __int8 *)(STACK[0x470] + 0x4448309400000C39) ^ 0x79F91C3Bu)) - 188418895) % 0x3084)) ^ 0xBA465C4u));
  v238 = ((LOBYTE(STACK[0x568]) ^ HIBYTE(v235)) ^ 0xE5)
       - 705025863
       - ((2 * (LODWORD(STACK[0x568]) ^ HIBYTE(v235) ^ 0xE5)) & 0x166);
  v239 = 2 * ((((v233 >> 8) ^ 0xFFFFFFCA) & STACK[0x554]) - ((2 * (((v233 >> 8) ^ 0xFFFFFFCA) & STACK[0x554])) & 0x5C))
       - 36;
  v240 = (v239 ^ 0x55) + ((2 * v236) & 0x56) + (v236 ^ 0xAB) + ((2 * v239) & 0xEC ^ 0x57) - 51;
  v241 = v240 - 1737684550 - ((2 * v240) & 0x174);
  v242 = (LOBYTE(STACK[0x548]) ^ 0xF7 ^ v230)
       - 1991979919
       - ((2 * (LODWORD(STACK[0x548]) ^ 0xF7 ^ v230)) & 0xF6);
  v243 = (LOBYTE(STACK[0x550]) ^ 0x61 ^ v233)
       + 1762113978
       - ((2 * (LODWORD(STACK[0x550]) ^ 0x61 ^ v233)) & 0x160);
  v244 = (((LOBYTE(STACK[0x56C]) ^ HIBYTE(v230)) ^ 0xE7)
        - 1068126686
        - ((2 * (LODWORD(STACK[0x56C]) ^ HIBYTE(v230) ^ 0xE7)) & 0x44)) ^ 0xC055AF28;
  v245 = (LOBYTE(STACK[0x54C]) ^ 0x56 ^ v235)
       - 2067911645
       - ((2 * (LODWORD(STACK[0x54C]) ^ 0x56 ^ v235)) & 0x46);
  v246 = ((LOBYTE(STACK[0x55C]) ^ BYTE1(v237)) ^ 0x7A)
       + 1006879785
       - ((2 * (LODWORD(STACK[0x55C]) ^ (v237 >> 8) ^ 0x7A)) & 0x52);
  v247 = ((2 * (LODWORD(STACK[0x560]) ^ HIWORD(v230) ^ 0x70)) & 0xF8)
       + ((LOBYTE(STACK[0x560]) ^ BYTE2(v230)) ^ 0x3ADFEC0C);
  v248 = ((16178 * v244) & 0x7DED8A) + ((8089 * v244) ^ 0x6F3EF6C5) - 1849774486;
  v249 = (((LOBYTE(STACK[0x558]) ^ BYTE1(v230)) ^ 0x4C)
        + 869285949
        - ((2 * (LODWORD(STACK[0x558]) ^ (v230 >> 8) ^ 0x4C)) & 0x7A)) ^ 0x33D04337;
  *(_DWORD *)(v67 - 192) = ((LOBYTE(STACK[0x574]) ^ HIBYTE(v233)) ^ 0xA9)
                         + 1066340434
                         - ((2 * (LODWORD(STACK[0x574]) ^ HIBYTE(v233))) & 0xA4);
  v250 = v245 ^ 0x84BE2E29;
  v251 = *(_DWORD *)(v92 + 4 * ((((16178 * v249) & 0x1DFD9E5C) + ((8089 * v249) ^ 0x5EFECF2Eu) - 1577134591) % 0x3084));
  v252 = (v251 ^ 0xBED7FB9E92A10E9DLL) + v202 + ((2 * (v251 ^ 0x6D52ED60)) & 0x1FFE7C7FALL);
  v253 = (((16178 * ((v243 + 502) ^ 0x6907B9BA)) & 0x1FF6FFC)
        + ((8089 * ((v243 + 502) ^ 0x6907B9BA)) ^ 0xFAFFB7FE)
        + 100527409)
       % 0x3084;
  v254 = (*(unsigned int *)(v92 + 4 * (v248 % 0x3084)) ^ 0x72FBDF879A2D2A9BLL)
       + v202
       + ((2 * (*(_DWORD *)(v92 + 4 * (v248 % 0x3084)) ^ 0x6D52ED60u)) & 0x1EEFF8FF6);
  v255 = ((((*(unsigned __int8 *)(v252 + 0x41280461000C1C03) ^ 0x47)
          - ((2 * (*(unsigned __int8 *)(v252 + 0x41280461000C1C03) ^ 0x47)) & 0x162)) << 8)
        + 1703653632) ^ 0x658BB100;
  v256 = (((16178 * ((v238 + 250) ^ 0xD5FA28B9)) & 0x3FDCEEC)
        - 520179908
        + ((8089 * ((v238 + 250) ^ 0xD5FA28B9)) ^ 0x1FFEE776)
        + 3709)
       % 0x3084;
  v257 = v241 ^ 0x986D0AB0;
  v258 = (((16178 * v250) & 0x17CAFCC) + ((8089 * v250) ^ 0x3EBE57E6) - 1036038839) % 0x3084;
  v259 = (((16178 * ((v242 + 522) ^ 0x8944CC71)) & 0xFFEB2E)
        + ((8089 * ((v242 + 522) ^ 0x8944CC71)) ^ 0x73FFF597)
        - 1929531496)
       % 0x3084;
  v260 = ((((*(unsigned __int8 *)(v254 - 0x72FBDF87F77FC7FBLL) ^ 0x47)
          - ((2 * (*(unsigned __int8 *)(v254 - 0x72FBDF87F77FC7FBLL) ^ 0x47)) & 0x9C)) << 24)
        + 1308622848) ^ 0x4E000000;
  v261 = v260 - 1445027657 - ((2 * v260) & 0x52000000);
  v262 = (LOBYTE(STACK[0x564]) ^ 0xB3 ^ v237)
       + 1525631478
       - ((2 * (LODWORD(STACK[0x564]) ^ 0xB3 ^ v237)) & 0x1F8);
  v263 = (*(unsigned int *)(v92 + 4 * v253) ^ 0xDBBBBFF9122512AFLL)
       + ((2 * (*(_DWORD *)(v92 + 4 * v253) ^ 0x6D52ED60)) & 0xFEEFFF9E)
       + v202;
  v264 = ((LOBYTE(STACK[0x570]) ^ BYTE1(v235)) ^ 0xC9)
       + 199853486
       - ((2 * (LODWORD(STACK[0x570]) ^ (v235 >> 8) ^ 0xC9)) & 0x15C);
  v265 = (*(unsigned int *)(v92 + 4 * ((8089 * v247 - 1283044589) % 0x3084u)) ^ 0xBD8BAFF6A2AB1AB3)
       + v202
       + ((2 * (*(_DWORD *)(v92 + 4 * ((8089 * v247 - 1283044589) % 0x3084u)) ^ 0x6D52ED60u)) & 0x19FF3EFA6);
  v266 = ((16178 * v257) & 0x379AD7E) + ((8089 * v257) ^ 0xF5BCD6BF) + 188796528;
  v267 = (8089
        * (((LODWORD(STACK[0x578]) ^ BYTE2(v235)) ^ 0x7BE7EFD4)
         + 2 * ((LODWORD(STACK[0x578]) ^ BYTE2(v235)) ^ 0x2Bu))
        - 582003512)
       % 0x3084;
  v268 = v261 ^ 0xA9DEA0B7 | (v255 + 1727365713 - ((2 * v255) & 0x4DEB0400)) ^ 0x66F58251;
  LODWORD(v252) = (((16178 * (v246 ^ 0x3C03C723)) & 0x1FDEBE6) - 520179908 + ((8089 * (v246 ^ 0x3C03C723)) ^ 0x1FFEF5F3u))
                % 0x3084;
  v269 = (8089
        * (((LODWORD(STACK[0x57C]) ^ BYTE2(v233)) ^ 0x3FFDFB8A)
         + 2 * ((LODWORD(STACK[0x57C]) ^ BYTE2(v233)) ^ 0x75u))
        + 11413704)
       % 0x3084;
  v270 = (((LOBYTE(STACK[0x588]) ^ HIBYTE(v237)) ^ 0xF3)
        - 1026461649
        - ((2 * (LODWORD(STACK[0x588]) ^ HIBYTE(v237) ^ 0xF3)) & 0x5E)) ^ 0xC2D17125;
  v271 = ((((*(unsigned __int8 *)(v265 + 0x427450093006082DLL) ^ 0x47)
          - ((2 * (*(unsigned __int8 *)(v265 + 0x427450093006082DLL) ^ 0x47)) & 0x12)) << 16)
        - 16187392) ^ 0xFF090000;
  LODWORD(v254) = v271 + 474422859 - ((2 * v271) & 0x388E0000);
  v272 = (((16178 * v270) & 0x39FCFF6) + ((8089 * v270) ^ 0x5DCFE7FB) - 1557283532) % 0x3084;
  v273 = (*(unsigned int *)(v92 + 4 * v258) ^ 0x76FAE67E0EE92227)
       + ((2 * (*(_DWORD *)(v92 + 4 * v258) ^ 0x6D52ED60)) & 0xC7779E8E)
       + v202;
  v274 = (((16178 * (v264 ^ 0xBE986A4)) & 0x13FD7DE) + ((8089 * (v264 ^ 0xBE986A4)) ^ 0xBB9FEBEF) + 1163770176) % 0x3084;
  v275 = *(unsigned __int8 *)((*(unsigned int *)(v92 + 4 * v259) ^ 0x7DEDFF6F10A952BBLL)
                            + v202
                            + ((2 * (*(_DWORD *)(v92 + 4 * v259) ^ 0x6D52ED60u)) & 0xFBF77FB6)
                            - 0x7DEDFF6F7DFBBFDBLL) ^ 0x47;
  v276 = (v268 - 1917634128 - ((2 * v268) & 0x1B667360)) ^ 0x8DB339B0 | (v275 + 1896335158 - ((2 * v275) & 0x6C)) ^ 0x7107C736;
  v277 = v276 - 272340444 - ((2 * v276) & 0xDF88D448);
  v278 = (*(unsigned int *)(v92 + 4 * v267) ^ 0x3A5F78FBF27F159CLL)
       + v202
       + ((2 * (*(_DWORD *)(v92 + 4 * v267) ^ 0x6D52ED60u)) & 0x13E5BF1F8);
  v279 = (v277 ^ 0xEFC46A24 | v254 ^ 0x1C471E4B) - ((2 * (v277 ^ 0xEFC46A24 | v254 ^ 0x1C471E4B)) & 0x91488B0E);
  v280 = *(unsigned __int8 *)((*(unsigned int *)(v92 + 4 * v256) ^ 0x273DF7D3122D54F1)
                            + ((2 * (*(_DWORD *)(v92 + 4 * v256) ^ 0x6D52ED60)) & 0xFEFF7322)
                            + v202
                            - 0x273DF7D37F7FB991) ^ 0x47;
  v281 = (((v280 - ((2 * v280) & 0xFFFFFFDF)) << 24) + 1862270976) ^ 0x6F000000;
  v282 = v281 + 2034835608 - ((2 * v281) & 0xF2000000);
  v283 = *(_DWORD *)(v92
                   + 4
                   * ((((16178 * ((v262 + 518) ^ 0x5AEF49F6)) & 0x1DFFF5E)
                     + ((8089 * ((v262 + 518) ^ 0x5AEF49F6)) ^ 0x3CEFFFAFu)
                     - 1005738624)
                    % 0x3084)) ^ 0x6D52ED60u;
  v284 = (v283 ^ 0x3F7F9BDFF5F63955) + v202 + ((2 * v283) & 0x1EBEC72AALL);
  v285 = (*(unsigned int *)(v92 + 4 * v252) ^ 0xE7AFDEF711E4279FLL)
       + ((2 * (*(_DWORD *)(v92 + 4 * v252) ^ 0x6D52ED60)) & 0xF96D95FE)
       + v202;
  v286 = *(_DWORD *)(v92 + 4 * (v266 % 0x3084)) ^ 0x6D52ED60u;
  v287 = (v286 ^ 0x3DF6639F9FFB8BF5) + v202 + ((2 * v286) & 0x13FF717EALL);
  LODWORD(v286) = a31 ^ LODWORD(STACK[0x584]) ^ (v279 - 928758393);
  v288 = *(_DWORD *)(v92 + 4 * v269) ^ 0x6D52ED60u;
  v289 = (v288 ^ 0x2D1BEEFFED7BFE7ALL) + v202 + ((2 * v288) & 0x1DAF7FCF4);
  v290 = ((v286 ^ 0x8E800000) & a36)
       + 698273842
       - ((2 * ((v286 ^ 0x8E800000) & a36)) & 0x53000000) == 698273842;
  v291 = (v286 ^ 0x8EDA0D64) - 1925583199;
  if (!v290)
    a37 = a35;
  v293 = v291 + a37 - ((2 * (v291 + a37)) & 0x6A16FDD4);
  v294 = *(_DWORD *)(v92
                   + 4
                   * ((((16178 * (*(_DWORD *)(v67 - 192) ^ 0x3F8F1158)) & 0x77C93FC)
                     + ((8089 * (*(_DWORD *)(v67 - 192) ^ 0x3F8F1158)) ^ 0xFFBE49FE)
                     + 20929329)
                    % 0x3084)) ^ 0x6D52ED60u;
  v295 = ((((*(unsigned __int8 *)(v289 - 0x2D1BEEFFED7BFE7ALL) ^ 0x47)
          - ((2 * (*(unsigned __int8 *)(v289 - 0x2D1BEEFFED7BFE7ALL) ^ 0x47)) & 0x5C)) << 16)
        + 1865285632) ^ 0x6F2E0000;
  v296 = *(_DWORD *)(v92
                   + 4
                   * ((8089
                     * (((2 * (LODWORD(STACK[0x580]) ^ HIWORD(v237) ^ 0xF4)) & 0x6C)
                      + ((LOBYTE(STACK[0x580]) ^ BYTE2(v237)) ^ 0xFBBEFBC2))
                     + 1802369001)
                    % 0x3084)) ^ 0x6D52ED60u;
  v297 = (*(unsigned __int8 *)(v285 + 0x1850210883493501) ^ 0x47)
       - ((2 * (*(unsigned __int8 *)(v285 + 0x1850210883493501) ^ 0x47)) & 0x118);
  v298 = *(_DWORD *)(v92 + 4 * v272) ^ 0x6D52ED60u;
  LODWORD(v298) = *(unsigned __int8 *)((v298 ^ 0xF73EABDFD2FDBFFFLL)
                                     + v202
                                     + ((2 * v298) & 0x1A5FB7FFELL)
                                     + 0x8C154202D024001) ^ 0x47;
  LODWORD(v298) = ((((_DWORD)v298 - 2 * (v298 & 3)) << 24) - 2097152000) ^ 0x83000000;
  v299 = (v295 - 560136684 - ((2 * v295) & 0x3D380000)) ^ 0xDE9CFE14 | ((*(unsigned __int8 *)(v263 + 0x2444400680880031) ^ 0x47)
                                                                      - 263403897
                                                                      - ((2
                                                                        * (*(unsigned __int8 *)(v263
                                                                                              + 0x2444400680880031) ^ 0x47)) & 0xFFFFFF0F)) ^ 0xF04CC687;
  v300 = v299 - 599040656 - ((2 * v299) & 0xB896BAE0);
  v301 = *(unsigned __int8 *)((v294 ^ 0xBF7FEFFBFEF5FB59) + v202 + ((2 * v294) & 0x1FDEBF6B2) + 0x40801004010A04A7) ^ 0x47;
  v302 = (((v301 - ((2 * v301) & 0xA)) << 24) + 83886080) ^ 0x5000000;
  v303 = *(_DWORD *)(v92 + 4 * v274) ^ 0x6D52ED60u;
  v304 = ((((*(unsigned __int8 *)(v287 - 0x3DF6639F9FFB8BF5) ^ 0x47)
          - ((2 * (*(unsigned __int8 *)(v287 - 0x3DF6639F9FFB8BF5) ^ 0x47)) & 0x18C)) << 8)
        + 192660992) ^ 0xB7BC600;
  v305 = v300 ^ 0xDC4B5D70 | (v304 - 368504312 - ((2 * v304) & 0x54122400)) ^ 0xEA091208;
  v306 = (v305 - 1547693779 - ((2 * v305) & 0x4780225A)) ^ 0xA3C0112D | (v302 + 1984370243 - ((2 * v302) & 0xEC000000)) ^ 0x76471643;
  LODWORD(v296) = *(unsigned __int8 *)((v296 ^ 0x76F5E7DFB7FFCC5DLL)
                                     + v202
                                     + ((2 * v296) & 0x16FFF98BALL)
                                     - 0x76F5E7DFB7FFCC5DLL) ^ 0x47;
  LODWORD(v296) = ((((_DWORD)v296 - ((2 * (_DWORD)v296) & 0x17C)) << 16) + 264110080) ^ 0xFBE0000;
  v307 = v296 - 758375229 - ((2 * v296) & 0x25980000);
  v308 = v282 ^ 0x79492098 | ((*(unsigned __int8 *)(v273 - 0x76FAE67E63BBCF47) ^ 0x47)
                            + 2034289456
                            - ((2 * *(unsigned __int8 *)(v273 - 0x76FAE67E63BBCF47)) & 0x60)) ^ 0x7940CB30;
  v309 = ((((*(unsigned __int8 *)(v278 - 0x3A5F78FB9F2DF8FCLL) ^ 0x47)
          - ((2 * (*(unsigned __int8 *)(v278 - 0x3A5F78FB9F2DF8FCLL) ^ 0x47)) & 0x1CA)) << 16)
        - 1947926528) ^ 0x8BE50000;
  LODWORD(v296) = ((((v297 << 8) + 330861568) ^ 0x13B88C00)
                 - 1561505461
                 - ((2 * (((v297 << 8) + 330861568) ^ 0x13B88C00)) & 0x45DAA200)) ^ 0xA2ED514B | ((*(unsigned __int8 *)(v284 - 0x3F7F9BDFF5F63955) ^ 0x47)
                                                                                                + 1856329499
                                                                                                - ((2
                                                                                                  * (*(unsigned __int8 *)(v284 - 0x3F7F9BDFF5F63955) ^ 0x47)) & 0x36)) ^ 0x6EA5571B;
  v310 = v296 + 432934716 - ((2 * v296) & 0x339C1E78);
  v311 = *(unsigned __int8 *)((v303 ^ 0x97BF5FEEFF7F1BE5) + v202 + ((2 * v303) & 0x1FEFE37CALL) + 0x6840A0110080E41BLL);
  LODWORD(v296) = (v293 - 1257537814) ^ a38;
  v312 = (v308 - 1288494947 - ((2 * v308) & 0x6666413A)) ^ 0xB333209D | (v309 + 1302594502 - ((2 * v309) & 0x1B480000)) ^ 0x4DA403C6;
  v313 = ((((v311 ^ 0x47) - ((2 * v311) & 0x160)) << 8) - 362696704) ^ 0xEA61B000;
  LODWORD(v303) = LODWORD(STACK[0x594]) ^ LODWORD(STACK[0x368]) ^ (v306 - ((2 * v306) & 0x924351D8) + 1226942700);
  v314 = (v313 + 1414582281 - ((2 * v313) & 0x28A1A000)) ^ 0x5450D009 | (v312 + 2003505033 - ((2 * v312) & 0xEED61F12)) ^ 0x776B0F89;
  LODWORD(v298) = ((v307 ^ 0xD2CC1CC3 | v310 ^ 0x19CE0F3C)
                 + 508553791
                 - ((2 * (v307 ^ 0xD2CC1CC3 | v310 ^ 0x19CE0F3C)) & 0x3C9FD47E)) ^ 0x1E4FEA3F | (v298
                                                                                               - 748489577
                                                                                               - ((2 * v298) & 0xA6000000)) ^ 0xD362F497;
  v315 = LODWORD(STACK[0x58C]) ^ LODWORD(STACK[0x35C]) ^ (v298 - ((2 * v298) & 0x26F3F2C2) + 326760801);
  LODWORD(v298) = (1517629547 - (BYTE2(v296) ^ 0xDD | 0x5A75306B) + (BYTE2(v296) ^ 0xDD | 0xA58ACF94)) ^ 0xB5844F84;
  v316 = 356017414 - (v298 | 0x15386506) + (v298 | 0xEAC79AF9);
  v317 = LODWORD(STACK[0x590]) ^ LODWORD(STACK[0x364]) ^ (v314 - ((2 * v314) & 0x16EC31C) + 12018062);
  v318 = (HIWORD(v315) & 0xF7 ^ 0x9AC84678) - (HIWORD(v315) & 8);
  v319 = (v318 & 0x880002C3 ^ 0x20220143) + (v318 ^ 0x8BDC428C) - ((v318 ^ 0x8BDC428C) & 0x10000C3);
  v320 = ((2 * (v296 ^ 0x60030A9F)) | 0x2850F470) - (v296 ^ 0x60030A9F);
  LOWORD(v318) = (v303 & 0xBA ^ 0x5D93) + (v303 & 0x45) - 1;
  v321 = ((v318 & 0x548 ^ 0x5B7C9041) + 0x7FFFFFFF) | v318 & 0xB7 ^ 0x84000811;
  LODWORD(v298) = (((2 * (BYTE2(v303) ^ 0x8A)) & 0x17C) - (BYTE2(v303) ^ 0x8A) + 1825293121) ^ 0x6CC9F369;
  v322 = ((16178 * (BYTE3(v303) ^ 0x51)) & 0x3CBBD6) + ((8089 * (BYTE3(v303) ^ 0x51)) ^ 0x7CFE5DEB) - 2028563497;
  v323 = v322 - 12420 * (((177055013 * (unint64_t)v322) >> 32) >> 9);
  v324 = (((v296 >> 8) & 0x4B ^ 0x20A) + ((v296 >> 8) & 0xB4 ^ 0x11) - 1) ^ 0x222;
  v325 = (BYTE1(v317) ^ 0x50) - ((2 * (BYTE1(v317) ^ 0x50)) & 0xDC) + 1382653294;
  LODWORD(v294) = (v317 ^ 0x33) + (v317 & 0xEB ^ 0xBC8) - ((v317 ^ 0x33) & 0xEB);
  v326 = -985301648 - (BYTE2(v317) ^ 0x280C21A3 | 0xC5457D70) + (BYTE2(v317) ^ 0x280C21A3 | 0x3ABA828F);
  LODWORD(v303) = (((v303 >> 8) & 3) + (BYTE1(v303) ^ 0xFFFFFF97) + (BYTE1(v303) | 0x68E600FC) + 1) ^ 0x68E600AC;
  v327 = BYTE3(v296) ^ 0x11;
  LODWORD(v298) = (v298 - ((2 * v298) & 0xD936) + 1215622299) ^ 0x4876DC8F;
  LODWORD(v296) = (((16178 * (_DWORD)v298) & 0xDBFDA344) + ((8089 * (_DWORD)v298) ^ 0xEDFED1A2) + 396069563) % 0x3084;
  LODWORD(v298) = ((BYTE1(v315) ^ 0xF9) + ((v315 >> 8) & 0xCF ^ 0x2CB06B06) - ((BYTE1(v315) ^ 0xF9) & 0xFFFFFFCF)) ^ 0xA4D083DE;
  v328 = HIBYTE(v317) ^ 0x3D;
  v329 = (8089 * v328) ^ 0xF4FFFFFB;
  v330 = (16178 * v328) & 0x3FFFF6;
  v331 = ((16178 * v327) & 0x1677D4) + ((8089 * v327) ^ 0x77AB3BEA) - 1939229224;
  v332 = ((v325 & 0x504916CC ^ 0xD020280) + (v325 ^ 0xD27D9C6F) - ((v325 ^ 0xD27D9C6F) & 0x801006CC)) ^ 0x5D4F177C;
  v333 = ((v315 ^ 0xE9) - 488286652 - ((2 * (v315 ^ 0xE9)) & 0x172) + 117) ^ 0xE2E55644;
  v334 = (((16178 * (v319 ^ 0xB8360799)) & 0xDDFDB7FE) + ((8089 * (v319 ^ 0xB8360799)) ^ 0xEEFEDBFF) + 379289694)
       % 0x3084;
  v335 = ((16178 * (v294 ^ 0xBF2)) & 0x39AEFF6) + ((8089 * (v294 ^ 0xBF2)) ^ 0xE1CD77FB) + 604820472;
  v336 = *(_DWORD *)(v92 + 4 * v323) ^ LODWORD(STACK[0x360]) ^ *(_DWORD *)(v92
                                                                           + 4
                                                                           * ((((16178 * v332) & 0x17DFF7DE)
                                                                             + ((8089 * v332) ^ 0xBEFFBEF)
                                                                             - 194048445)
                                                                            % 0x3084)) ^ *(_DWORD *)(v92 + 4 * ((((16178 * v333) & 0xFFE7DFAE) + ((8089 * v333) ^ 0xFFF3EFD7) + 98982940) % 0x3084)) ^ *(_DWORD *)(v92 + 4 * ((((16178 * (v316 ^ 0xFAC91A79)) & 0xE9DDBDF4) + ((8089 * (v316 ^ 0xFAC91A79)) ^ 0x74EEDEFA) - 1867809437) % 0x3084));
  LODWORD(v298) = (v298 - ((2 * v298) & 0x10C056E0) + 191245168) ^ 0x8306C3F2;
  v337 = (((16178 * (_DWORD)v298) & 0xFCFFFFAA) + ((8089 * (_DWORD)v298) ^ 0x7E7FFFD5) - 2116089251) % 0x3084;
  LODWORD(v298) = ((16178 * (HIBYTE(v315) ^ 0xBB)) & 0x17FE78)
                + ((8089 * (HIBYTE(v315) ^ 0xBB)) ^ 0x3B2BFF3C)
                - 924257658;
  v338 = ((v336 >> 8) & 0x79 ^ 0x6C041C49) + ((v336 >> 8) & 0x86 ^ 0x800085);
  v339 = *(_DWORD *)(v92 + 4 * v334) ^ LODWORD(STACK[0x354]) ^ *(_DWORD *)(v92
                                                                           + 4 * ((v330 + v329 + 253030855) % 0x3084)) ^ *(_DWORD *)(v92 + 4 * ((((16178 * (_DWORD)v303) & 0xB7E9BFC6) + ((8089 * (_DWORD)v303) ^ 0xDBF4DFE3) + 610937423) % 0x3084)) ^ *(_DWORD *)(v92 + 4 * ((((16178 * ((v320 + 1809286600) ^ 0xF42B7070)) & 0xFF6AFCF8) + ((8089 * ((v320 + 1809286600) ^ 0xF42B7070)) ^ 0x7FB57E7C) - 2044408457) % 0x3084));
  v340 = *(_DWORD *)(v92
                   + 4
                   * ((((16178 * (v326 ^ 0x12B6A30F)) & 0xB5FFFCDE)
                     + ((8089 * (v326 ^ 0x12B6A30F)) ^ 0x5AFFFE6F)
                     - 1432723986)
                    % 0x3084)) ^ LODWORD(STACK[0x358]) ^ *(_DWORD *)(v92
                                                                   + 4
                                                                   * ((((16178 * (v321 ^ 0xDF7C9D50)) & 0x7BBEE7BA)
                                                                     + ((8089 * (v321 ^ 0xDF7C9D50)) ^ 0x7DDF73DD)
                                                                     - 2013603818)
                                                                    % 0x3084)) ^ *(_DWORD *)(v92 + 4 * v337) ^ *(_DWORD *)(v92 + 4 * (v331 - 12420 * (((177055013 * (unint64_t)v331) >> 32) >> 9)));
  v341 = ((v336 & 0xED ^ 0x80C33A6D) + (v336 & 0x12 ^ 3) - 1) ^ 0x81CB3A6D;
  v342 = ((2 * v341) & 0x100828) - v341;
  v343 = (v340 & 0x8D ^ 0x18C) + (v340 & 0x72 ^ 0x31);
  LODWORD(v294) = -1773149963 - (BYTE2(v339) ^ 0x8100129E | 0x964FE0F5) + (BYTE2(v339) ^ 0x8100129E | 0x69B01F0A);
  v344 = (BYTE1(v340) ^ 0x40A24E8) - ((2 * (BYTE1(v340) ^ 0x40A24E8)) & 0x8144894);
  v345 = -1326598595 - (BYTE1(v339) ^ 0x488481E5 | 0xB0EDB63D) + (BYTE1(v339) ^ 0x488481E5 | 0x4F1249C2);
  LODWORD(v303) = ((v339 & 2) + (v339 ^ 0xFFFFFF17) + (v339 | 0x1E664FFD) + 1) ^ 0x96B6C79D;
  v346 = HIBYTE(v336) ^ 0x11;
  v347 = HIBYTE(v340) ^ 0xF9;
  v348 = (((2 * (BYTE2(v340) ^ 0xD01889E0)) | 0x687AF76) - (BYTE2(v340) ^ 0xD01889E0) + 2092705861) ^ 0x535B5EAD;
  v349 = (BYTE2(v336) ^ 0x6F) + (HIWORD(v336) & 0x72 ^ 0x39FF6710) - ((BYTE2(v336) ^ 0x6F) & 0x72);
  v350 = (v349 & 0x16AF ^ 0xFCC808F) + (v349 & 0x2950 ^ 0x40002101);
  v351 = *(_DWORD *)(v92 + 4 * ((((16178 * v324) & 0xFB6B7E) + ((8089 * v324) ^ 0x9FFDB5BF) + 1616991347) % 0x3084)) ^ LODWORD(STACK[0x350]) ^ *(_DWORD *)(v92 + 4 * v296) ^ *(_DWORD *)(v92 + 4 * (v335 % 0x3084)) ^ *(_DWORD *)(v92 + 4 * (v298 - 12420 * (((177055013 * (unint64_t)v298) >> 32) >> 9)));
  v352 = ((16178 * (HIBYTE(v339) ^ 0xB3)) & 0x1656FE) + ((8089 * (HIBYTE(v339) ^ 0xB3)) ^ 0xDA6B2B7F) + 698992195;
  v353 = ((16178 * ((v343 - 1) ^ 0x184)) & 0x6D9D7C) + ((8089 * ((v343 - 1) ^ 0x184)) ^ 0xDF36CEBE) + 648248629;
  v354 = ((HIWORD(v351) & 0x86 ^ 0xAFBD881) + (HIWORD(v351) & 0x79) - 1) ^ 0x66DB9F87;
  v355 = v354 - ((2 * v354) & 0x90408288);
  v356 = ((16178 * v347) & 0x3FFEFE) + ((8089 * v347) ^ 0xDB7FFF7F) + 680849987;
  v357 = ((v351 & 0x1A ^ 0x100B) + (v351 & 0xE5) - 1) ^ 0x105C;
  v358 = *(_DWORD *)(v92 + 4 * (v353 - 12420 * (((177055013 * (unint64_t)v353) >> 32) >> 9))) ^ LODWORD(STACK[0x348]) ^ *(_DWORD *)(v92 + 4 * (v352 - 12420 * (((177055013 * (unint64_t)v352) >> 32) >> 9))) ^ *(_DWORD *)(v92 + 4 * ((((16178 * ((v338 - 1) ^ 0x6C841C7B)) & 0x1FFFB97E) + ((8089 * ((v338 - 1) ^ 0x6C841C7B)) ^ 0xFFFDCBFu) - 262197901) % 0x3084)) ^ *(_DWORD *)(v92 + 4 * ((((16178 * ((v355 - 634625724) ^ 0xB60C2624)) & 0xD7FEBD70) + ((8089 * ((v355 - 634625724) ^ 0xB60C2624)) ^ 0xEBFF5EB8) + 429587877) % 0x3084));
  v359 = *(_DWORD *)(v92
                   + 4
                   * ((((16178 * (v294 ^ 0xE8B00D8A)) & 0xF27FFBEC)
                     + ((8089 * (v294 ^ 0xE8B00D8A)) ^ 0x793FFDF6)
                     - 1940234649)
                    % 0x3084)) ^ LODWORD(STACK[0x34C]) ^ *(_DWORD *)(v92
                                                                   + 4
                                                                   * ((((16178 * (BYTE1(v351) ^ 0xE8)) & 0x3FFDF4)
                                                                     + ((8089 * (BYTE1(v351) ^ 0xE8)) ^ 0x9EFFFEFA)
                                                                     + 1633618744)
                                                                    % 0x3084)) ^ *(_DWORD *)(v92
                                                                                           + 4
                                                                                           * (v356
                                                                                            - 12420
                                                                                            * (((177055013 * (unint64_t)v356) >> 32) >> 9))) ^ *(_DWORD *)(v92 + 4 * ((((16178 * ((v342 + 2072427499) ^ 0x7A8EBBBB)) & 0xBFEF89FA) + ((8089 * ((v342 + 2072427499) ^ 0x7A8EBBBB)) ^ 0xDFF7C4FD) + 635602678) % 0x3084));
  LODWORD(v296) = (v344 + 1290794826) ^ 0x48E5D34F;
  v360 = ((16178 * (HIBYTE(v351) ^ 0xB3)) & 0x37FF16) + ((8089 * (HIBYTE(v351) ^ 0xB3)) ^ 0xBCBBFF8B) + 1197011511;
  v361 = v360 - 12420 * (((177055013 * (unint64_t)v360) >> 32) >> 9);
  v362 = (((16178 * (_DWORD)v296) & 0xFF9BE7AE) + ((8089 * (_DWORD)v296) ^ 0xFFCDF3D7) + 9508443) % 0x3084;
  LODWORD(v296) = *(_DWORD *)(v92
                            + 4
                            * ((((16178 * v346) & 0x3FFE3C) + ((8089 * v346) ^ 0x7ADFFF1Eu) - 1993018716) % 0x3084)) ^ LODWORD(STACK[0x340]) ^ *(_DWORD *)(v92 + 4 * ((((16178 * v348) & 0xF827FCDA) + ((8089 * v348) ^ 0xFC13FE6D) + 159800816) % 0x3084)) ^ *(_DWORD *)(v92 + 4 * ((((16178 * v357) & 0x6FFFEFA) + ((8089 * v357) ^ 0x7F7FFF7Du) - 2040902538) % 0x3084)) ^ *(_DWORD *)(v92 + 4 * ((((16178 * (v345 ^ 0x796C882)) & 0xB9D3DFB6) + ((8089 * (v345 ^ 0x796C882)) ^ 0xDCE9EFDB) + 594877015) % 0x3084));
  v363 = (((2 * (BYTE2(v296) ^ 0x8E)) & 0xB6) - (BYTE2(v296) ^ 0x8E) + 379317668) ^ 0x61AFCA4;
  v364 = (((v359 >> 8) & 0xD1 ^ 0xB29B51D1) - ((v359 >> 8) & 0xD1) + (BYTE1(v359) ^ 0xA)) ^ 0xAB1FC347;
  v365 = *(_DWORD *)(v92
                   + 4
                   * ((((16178 * ((v350 - 1) ^ 0x4FCC86AA)) & 0x2D9CFAFE)
                     + ((8089 * ((v350 - 1) ^ 0x4FCC86AA)) ^ 0x76CE7D7Fu)
                     - 1899241762)
                    % 0x3084)) ^ LODWORD(STACK[0x344]) ^ *(_DWORD *)(v92
                                                                   + 4
                                                                   * ((((16178
                                                                       * ((((2 * (_DWORD)v303) | 0x88A208F0)
                                                                         - (_DWORD)v303
                                                                         - 1146160248) ^ 0xCC818CFA)) & 0xFFEF7F3E)
                                                                     + ((8089
                                                                       * ((((2 * (_DWORD)v303) | 0x88A208F0)
                                                                         - (_DWORD)v303
                                                                         - 1146160248) ^ 0xCC818CFA)) ^ 0x7FF7BF9F)
                                                                     - 2048750508)
                                                                    % 0x3084)) ^ *(_DWORD *)(v92 + 4 * v362) ^ *(_DWORD *)(v92 + 4 * v361);
  LODWORD(v298) = ((2 * (v358 ^ 0xD7)) & 0x88888888) - (v358 ^ 0xD7) - 294389061;
  v366 = ((16178 * (BYTE2(v358) ^ 0xC7)) & 0x377B58) + ((8089 * (BYTE2(v358) ^ 0xC7)) ^ 0xED9BBDAC) + 402562737;
  LODWORD(v303) = ((BYTE2(v359) ^ 0xFFFFFFB9) + 645643050 + ((2 * BYTE2(v359)) | 0xB30889AE)) ^ 0xD8A46CF7;
  LODWORD(v303) = (v303 - ((2 * v303) & 0x24011A8) - 337033004) ^ 0xEAC96099;
  v367 = ((v365 ^ 0x22) + (v365 & 0x8B ^ 0xFA54EA89) - ((v365 ^ 0x22) & 0x8B)) ^ 0x925EAD28;
  v368 = ((2 * v367) & 0x9004858A) - v367;
  v369 = (2119540325 - (v364 | 0x7E559E65) + (v364 | 0x81AA619A)) ^ 0x982EF39A;
  v370 = (((16178 * (_DWORD)v303) & 0xEEFC656E) + ((8089 * (_DWORD)v303) ^ 0x777E32B7) - 1910756954) % 0x3084;
  LODWORD(v303) = ((16178 * (BYTE1(v358) ^ 0x51)) & 0x2ADFDE) + ((8089 * (BYTE1(v358) ^ 0x51)) ^ 0xEFF56FEF) + 275356227;
  v371 = HIBYTE(v358) ^ 0x72;
  LODWORD(v298) = ((v298 & 0xA1049D4 ^ 0x10080184) + (v298 ^ 0xCE304E7B) - ((v298 ^ 0xCE304E7B) & 0x2043B1D4)) ^ 0x1A184DD4;
  v372 = (((16178 * (_DWORD)v298) & 0x7BDF762E) + ((8089 * (_DWORD)v298) ^ 0xBDEFBB17) + 1206554844) % 0x3084;
  LODWORD(v298) = ((16178 * (HIBYTE(v365) ^ 0x3D)) & 0x3BBCFC)
                + ((8089 * (HIBYTE(v365) ^ 0x3D)) ^ 0x5F3DDE7E)
                - 1529408700;
  v373 = v298 - 12420 * (((177055013 * (unint64_t)v298) >> 32) >> 9);
  LODWORD(v298) = ((BYTE1(v365) ^ 0xE2) + ((v365 >> 8) & 0x52 ^ 0xD3EAB610) - ((BYTE1(v365) ^ 0xE2) & 0x52)) ^ 0xF2EAB414;
  LODWORD(v298) = (-1019896542 - (v298 | 0xC3359D22) + (v298 | 0x3CCA62DD)) ^ 0x1DCA60FD;
  v374 = ((16178 * v371) & 0x2FF6BA) + ((8089 * v371) ^ 0x9FB7FB5D) + 1683813989;
  LODWORD(v294) = ((16178 * (BYTE3(v296) ^ 0x38)) & 0x153FFC) + ((8089 * (BYTE3(v296) ^ 0x38)) ^ 0xDF2A9FFE) + 619336132;
  v375 = 409146828 - (BYTE2(v365) ^ 0x82100239 | 0x186315CC) + (BYTE2(v365) ^ 0x82100239 | 0xE79CEA33);
  v376 = ((16178 * (v359 ^ 0xA1)) & 0x1FD5FE)
       + ((8089 * (v359 ^ 0xA1)) ^ 0x196FEAFF)
       - 328572684;
  v377 = ((16178 * (BYTE1(v296) ^ 0x19)) & 0x3FFEFA) + ((8089 * (BYTE1(v296) ^ 0x19)) ^ 0xF55FFF7D) + 184486581;
  LODWORD(v296) = ((16178 * (v296 ^ 0x25)) & 0x39EEAE)
                + ((8089 * (v296 ^ 0x25)) ^ 0x577CF757)
                - 1369615204;
  v378 = (v363 - ((2 * v363) & 0x2002070C) + 1479773062) ^ 0x48B29A27;
  LODWORD(v294) = *(_DWORD *)(v92 + 4 * v370) ^ LODWORD(STACK[0x33C]) ^ *(_DWORD *)(v92
                                                                                    + 4
                                                                                    * (v294
                                                                                     - 12420
                                                                                     * (((177055013 * (unint64_t)v294) >> 32) >> 9))) ^ *(_DWORD *)(v92 + 4 * (v303 % 0x3084)) ^ *(_DWORD *)(v92 + 4 * ((((16178 * ((v368 - 1271134918) ^ 0xDC364272)) & 0x7779EFBA) + ((8089 * ((v368 - 1271134918) ^ 0xDC364272)) ^ 0x3BBCF7DD) - 904047594) % 0x3084));
  LODWORD(v303) = *(_DWORD *)(v92 + 4 * v373) ^ LODWORD(STACK[0x338]) ^ *(_DWORD *)(v92 + 4 * v372);
  v379 = *(_DWORD *)(v92 + 4 * (v366 % 0x3084));
  v380 = *(_DWORD *)(v92
                   + 4
                   * (v296
                    - 12420 * (((177055013 * (unint64_t)v296) >> 32) >> 9)));
  LODWORD(v296) = v303 ^ *(_DWORD *)(v92
                                   + 4
                                   * ((((16178 * v378) & 0xB9FF5F66) + ((8089 * v378) ^ 0xDCFFAFB3) + 681225386) % 0x3084)) ^ *(_DWORD *)(v92 + 4 * ((((16178 * v369) & 0x7AFFFF9E) + ((8089 * v369) ^ 0x3D7FFFCF) - 1025570205) % 0x3084));
  v381 = a22 ^ *(_DWORD *)(v92 + 4 * (v377 % 0x3084)) ^ *(_DWORD *)(v92
                                                                    + 4
                                                                    * (v374
                                                                     - 12420
                                                                     * (((177055013
                                                                                      * (unint64_t)v374) >> 32) >> 9))) ^ *(_DWORD *)(v92 + 4 * (v376 - 12420 * (((177055013 * (unint64_t)v376) >> 32) >> 9))) ^ *(_DWORD *)(v92 + 4 * ((((16178 * (v375 ^ 0x658CE893)) & 0xF1D7DDC6) + ((8089 * (v375 ^ 0x658CE893)) ^ 0x78EBEEE3) - 1934725766) % 0x3084));
  v382 = v379 ^ LODWORD(STACK[0x36C]) ^ v380 ^ *(_DWORD *)(v92
                                                         + 4
                                                         * ((((16178 * (HIBYTE(v359) ^ 0x6C)) & 0x3FDFBA)
                                                           + ((8089 * (HIBYTE(v359) ^ 0x6C)) ^ 0xDEFFEFDD)
                                                           + 622133733)
                                                          % 0x3084)) ^ *(_DWORD *)(v92
                                                                                 + 4
                                                                                 * ((((16178 * (_DWORD)v298) & 0x1D7A5DFE)
                                                                                   + ((8089 * (_DWORD)v298) ^ 0x8EBD2EFF)
                                                                                   + 1906432819)
                                                                                  % 0x3084));
  LODWORD(v298) = (((v294 >> 8) & 0x26 ^ 0x1F268D21) + ((v294 >> 8) & 0xD9) - 1) ^ 0x99;
  LODWORD(v298) = ((v298 & 0x4BC ^ 0xC92200BD) + (v298 & 0x143) - 1) ^ 0xC92205BC;
  v383 = ((v294 ^ 0x349440FC)
        + (v294 & 0x33 ^ 0x1282403)
        - ((v294 ^ 0x349440FC) & 0x14840033)) ^ 0x21386417;
  v384 = (((16178 * (_DWORD)v298) & 0x97FF37DA) + ((8089 * (_DWORD)v298) ^ 0x4BFF9BED) - 1268814267) % 0x3084;
  LODWORD(v303) = (877303999 - (BYTE2(v381) ^ 0xA0820291 | 0x344A98BF) + (BYTE2(v381) ^ 0xA0820291 | 0xCBB56740)) ^ 0x6B376556;
  LODWORD(v298) = (((2 * (BYTE1(v296) ^ 0xDC)) | 0x3B7C1906) - (BYTE1(v296) ^ 0xDC) + 1648489341) ^ 0x9DBE0C92;
  v385 = ((16178 * (HIBYTE(v381) ^ 0x4B)) & 0x3CFFEE) + ((8089 * (HIBYTE(v381) ^ 0x4B)) ^ 0x6FFE7FF7) - 1810468405;
  v386 = (((16178 * (_DWORD)v298) & 0x6775FBFE) + ((8089 * (_DWORD)v298) ^ 0x33BAFDFFu) - 861664205) % 0x3084;
  v387 = (((16178 * (BYTE1(v381) ^ 0x21)) & 0x3F3BAC) + ((8089 * (BYTE1(v381) ^ 0x21)) ^ 0x3DDF9DD6u) - 1031836580)
       % 0x3084;
  LODWORD(v298) = BYTE3(v294) ^ 4;
  v388 = ((WORD1(v296) & 0x47 ^ 0xF007) + (WORD1(v296) & 0xB8 ^ 0x81) - 1) ^ 0xF06B;
  LODWORD(v294) = ((BYTE2(v294) & 0x38 ^ 0x211) - (WORD1(v294) | 0x338) + 1022) & 0x3FF ^ 0x277;
  LODWORD(v294) = ((16178 * v294) & 0xF3FBFE) + ((8089 * v294) ^ 0x7979FDFF) - 1944035746;
  v389 = BYTE3(v296) ^ 0xDB;
  v390 = (((v382 >> 8) & 0xDA ^ 0x78B7D0D9) + ((v382 >> 8) & 0x25) - 1) ^ 0xF9B553B6;
  LODWORD(v298) = ((16178 * v298) & 0x3FFFA2) + ((8089 * v298) ^ 0xF59FFFD1) + 242545137;
  v391 = (((2 * (BYTE2(v382) ^ 0xA8)) | 0x6E800E) - (BYTE2(v382) ^ 0xA8) + 1875427321) & 0x1FFFFFFF ^ 0x103740D6;
  v392 = (v390 - ((2 * v390) & 0x201090A) + 1538892933) ^ 0xDABB27A6;
  LODWORD(v296) = ((16178 * (v296 ^ 0x2F)) & 0x2DBEEE)
                + ((8089 * (v296 ^ 0x2F)) ^ 0x6FF6DF77)
                - 1780257668;
  v393 = ((16178 * (HIBYTE(v382) ^ 0xC5)) & 0xF7D96) + ((8089 * (HIBYTE(v382) ^ 0xC5)) ^ 0x7BA7BECB) - 2006109449;
  v394 = ((16178 * v389) & 0x35FFBE) + ((8089 * v389) ^ 0x377AFFDF) - 862326301;
  v395 = ((16178 * (v381 ^ 0x5A)) & 0x23EFBC)
       + ((8089 * (v381 ^ 0x5A)) ^ 0x7791F7DE)
       - 1907862507;
  v396 = ((v382 ^ 0x9C) - ((2 * (v382 ^ 0x9C)) & 0xBA) - 121031075) ^ 0x38ED3654;
  v397 = v396 - ((2 * v396) & 0x80080022);
  v398 = a21 ^ *(_DWORD *)(v92
                         + 4
                         * ((((16178 * (_DWORD)v303) & 0xFFE7EEF4) + ((8089 * (_DWORD)v303) ^ 0xFFF3F77A) + 94790883)
                          % 0x3084)) ^ *(_DWORD *)(v92
                                                 + 4
                                                 * ((((16178 * v383) & 0x19F77E8)
                                                   + ((8089 * v383) ^ 0x7FCFBBF4u)
                                                   - 2046128129)
                                                  % 0x3084)) ^ *(_DWORD *)(v92 + 4 * v386) ^ *(_DWORD *)(v92 + 4 * (v393 - 12420 * (((177055013 * (unint64_t)v393) >> 32) >> 9)));
  LODWORD(v303) = *(_DWORD *)(v92
                            + 4
                            * (v294
                             - 12420 * (((177055013 * (unint64_t)v294) >> 32) >> 9))) ^ LODWORD(STACK[0x32C]) ^ *(_DWORD *)(v92 + 4 * (v394 - 12420 * (((177055013 * (unint64_t)v394) >> 32) >> 9)));
  LODWORD(v294) = *(_DWORD *)(v92 + 4 * v384);
  v399 = v303 ^ *(_DWORD *)(v92
                          + 4 * (v395 - 12420 * (((177055013 * (unint64_t)v395) >> 32) >> 9))) ^ *(_DWORD *)(v92 + 4 * ((((16178 * v392) & 0xFFDFEE98) - 2140204738 + ((8089 * v392) ^ 0x7FEFF74C) + 424) % 0x3084));
  v400 = *(_DWORD *)(v92
                   + 4
                   * (v296
                    - 12420 * (((177055013 * (unint64_t)v296) >> 32) >> 9))) ^ LODWORD(STACK[0x334]) ^ *(_DWORD *)(v92 + 4 * (v298 - 12420 * (((177055013 * (unint64_t)v298) >> 32) >> 9))) ^ *(_DWORD *)(v92 + 4 * v387) ^ *(_DWORD *)(v92 + 4 * ((((16178 * v391) & 0x7FBDDEFC) + ((8089 * v391) ^ 0x7FDEEF7Eu) - 2051314465) % 0x3084));
  v401 = *(_DWORD *)(v92 + 4 * (v385 - 12420 * (((177055013 * (unint64_t)v385) >> 32) >> 9))) ^ LODWORD(STACK[0x330]) ^ *(_DWORD *)(v92 + 4 * ((((16178 * v388) & 0x7FFFDB7A) + ((8089 * v388) ^ 0xBFFFEDBD) + 1167748768) % 0x3084)) ^ v294 ^ *(_DWORD *)(v92 + 4 * ((((16178 * ((v397 + 1142695953) ^ 0x84382841)) & 0x8FFC7BF4) + ((8089 * ((v397 + 1142695953) ^ 0x84382841)) ^ 0x47FE3DFA) - 1109651975) % 0x3084));
  LODWORD(v296) = (((2 * (BYTE1(v400) ^ 0x3E)) | 0xECC624C) - (BYTE1(v400) ^ 0x3E) + 2023345882) ^ 0x81E424E4;
  LODWORD(v303) = -470650597 - (v296 | 0xE3F2711B) + (v296 | 0x1C0D8EE4);
  v402 = -820130991
       - (v399 ^ 0x23438549 | 0xCF1DCB51)
       + (v399 ^ 0x23438549 | 0x30E234AE);
  LODWORD(v296) = (((v399 >> 8) & 0xBF ^ 0x58AFA1C1) - ((v399 >> 8) & 0x40)) ^ 0x4ABDB1E9;
  v403 = 1575836804 - (v296 | 0x5DED5C84) + (v296 | 0xA212A37B);
  LODWORD(v296) = HIBYTE(v399) ^ 0xE2;
  v404 = (48395533 - (BYTE2(v399) ^ 0x31 | 0x2E2750D) + (BYTE2(v399) ^ 0x31 | 0x3D1D8AF2)) ^ 0x3D1D8AA5;
  v405 = ((16178 * (BYTE1(v398) ^ 0x84)) & 0x16BEF6) + ((8089 * (BYTE1(v398) ^ 0x84)) ^ 0xFFEB5F7B) + 7580343;
  v406 = ((16178 * (HIBYTE(v401) ^ 0xF6)) & 0x1738E) + ((8089 * (HIBYTE(v401) ^ 0xF6)) ^ 0x70E0B9C7) - 1825294341;
  LODWORD(v294) = (((16178 * (v303 ^ 0x1A8F9BF5)) & 0xEED97D78)
                 + ((8089 * (v303 ^ 0x1A8F9BF5)) ^ 0x776CBEBC)
                 - 1997386890)
                % 0x3084;
  LODWORD(v298) = (((2 * (v398 ^ 0x59)) | 0xBFE7BBAC) - (v398 ^ 0x59) - 1609817558) ^ 0x5FF3DD1E;
  v407 = (((16178 * (_DWORD)v298) & 0xF66EFFFE) + ((8089 * (_DWORD)v298) ^ 0x7B377FFF) - 1969042444) % 0x3084;
  LODWORD(v298) = ((BYTE1(v401) ^ 0x1F) + 663249527 - ((2 * (BYTE1(v401) ^ 0x1F)) & 0x14A) + 46) ^ 0x27886277;
  LODWORD(v303) = (((16178 * (_DWORD)v298) & 0xEF2C6F7E) + ((8089 * (_DWORD)v298) ^ 0x779637BF) - 2000104845) % 0x3084;
  v408 = (((16178 * (HIBYTE(v398) ^ 0x10)) & 0x3FDEFE) + ((8089 * (HIBYTE(v398) ^ 0x10)) ^ 0x75FFEF7F) - 1911225789)
       % 0x3084u;
  v409 = (((16178 * (HIBYTE(v400) ^ 0x73)) & 0x3FDE2A) + ((8089 * (HIBYTE(v400) ^ 0x73)) ^ 0x7FFFEF15) - 2078997843)
       % 0x3084u;
  LODWORD(v298) = (((2 * (v400 ^ 0x13)) | 0xF6E2AE9E) - (v400 ^ 0x13) + 76458161) ^ 0xFB7157DE;
  v410 = (1564122610 - (BYTE2(v401) ^ 0x91 | 0x5D3A9DF2) + (BYTE2(v401) ^ 0x91 | 0xA2C5620D)) ^ 0xA2C562E7;
  v411 = (BYTE2(v400) ^ 0x32 | 0xA9546226) - (BYTE2(v400) ^ 0x32 | 0x56AB9DD9) + 1454087641;
  v412 = ((2 * (v401 ^ 0xEC)) | 0xB5200C04) - (v401 ^ 0xEC) + 628095486;
  v413 = ((v412 & 0x4DCC787A ^ 0x5487062) + (v412 ^ 0xDA948E99) - ((v412 ^ 0xDA948E99) & 0x4DCC787A)) ^ 0x4DC8F07A;
  v414 = ((2 * (BYTE2(v398) ^ 0xFA02C220)) | 0xD8446192) - (BYTE2(v398) ^ 0xFA02C220) - 1814180041;
  v415 = ((v411 & 0x44211E ^ 0x5022011D) + (v411 & 0xA91042E1) - 1) ^ 0xF97663D6;
  v416 = (((16178 * v415) & 0xFD7E7BFE) + ((8089 * v415) ^ 0x7EBF3DFF) - 2032460194) % 0x3084;
  v417 = ((v414 & 0x400A001 ^ 0x30401) + (v414 & 0x922053FE ^ 0xB22042C7) - 1) ^ 0x2403B420;
  v418 = *(_DWORD *)(v92 + 4 * v303) ^ LODWORD(STACK[0x324]) ^ *(_DWORD *)(v92 + 4 * v409) ^ *(_DWORD *)(v92 + 4 * ((((16178 * (v402 ^ 0x13A1B1AD)) & 0xFED753FE) + ((8089 * (v402 ^ 0x13A1B1AD)) ^ 0x7F6BA9FF) - 2039569932) % 0x3084)) ^ *(_DWORD *)(v92 + 4 * ((((16178 * v417) & 0xEB7DFF3E) + ((8089 * v417) ^ 0x75BEFF9F) - 1881449282) % 0x3084));
  v419 = *(_DWORD *)(v92
                   + 4
                   * ((((16178 * (v403 ^ 0xB000B33D)) & 0xBFDFF7F6)
                     + ((8089 * (v403 ^ 0xB000B33D)) ^ 0xDFEFFBFB)
                     + 544149047)
                    % 0x3084)) ^ LODWORD(STACK[0x31C]) ^ *(_DWORD *)(v92 + 4 * v408) ^ *(_DWORD *)(v92 + 4 * ((((16178 * (_DWORD)v298) & 0x5BF579EC) + ((8089 * (_DWORD)v298) ^ 0x2DFABCF6u) - 673214723) % 0x3084)) ^ *(_DWORD *)(v92 + 4 * ((((16178 * v410) & 0xDDFB4EC6) + ((8089 * v410) ^ 0x6EFDA763) - 1768114950) % 0x3084));
  v420 = *(_DWORD *)(v92 + 4 * (v405 % 0x3084));
  v421 = *(_DWORD *)(v92 + 4 * v294);
  LODWORD(v294) = v420 ^ LODWORD(STACK[0x328]) ^ *(_DWORD *)(v92 + 4 * v416) ^ *(_DWORD *)(v92
                                                                                           + 4
                                                                                           * ((((16178 * (_DWORD)v296) & 0x3DAFD8)
                                                                                             + ((8089 * (_DWORD)v296) ^ 0xD9FED7EC)
                                                                                             + 706091478)
                                                                                            % 0x3084)) ^ *(_DWORD *)(v92 + 4 * ((((16178 * v413) & 0xFFB6F1BC) + ((8089 * v413) ^ 0x7FDB78DE) - 2046897387) % 0x3084));
  LODWORD(v298) = (-1612105612 - (BYTE1(v418) ^ 0xC43618 | 0x9FE93874) + (BYTE1(v418) ^ 0xC43618 | 0x6016C78B)) ^ 0x60D2F1AE;
  v422 = (((16178 * (_DWORD)v298) & 0x72F949FA) + ((8089 * (_DWORD)v298) ^ 0x397CA4FDu) - 958241483) % 0x3084;
  v423 = *(_DWORD *)(v92 + 4 * (v406 - 12420 * (((177055013 * (unint64_t)v406) >> 32) >> 9))) ^ LODWORD(STACK[0x318]) ^ *(_DWORD *)(v92 + 4 * ((((16178 * v404) & 0x3EFAFFEE) + ((8089 * v404) ^ 0x9F7D7FF7) + 1713167462) % 0x3084)) ^ v421 ^ *(_DWORD *)(v92 + 4 * v407);
  LODWORD(v303) = ((v419 & 0xDD ^ 0x8E8E86AB) - (v419 & 0x22)) ^ 0x46CEC763;
  LODWORD(v298) = (((2 * (v423 ^ 0x64)) & 0x42) - (v423 ^ 0x64) + 5086) ^ 0x138D;
  v424 = ((BYTE2(v418) ^ 0x40000059) + (HIWORD(v418) & 0xFA ^ 0x11BBC7A2) - ((BYTE2(v418) ^ 0x40000059) & 0x400000FA)) ^ 0x11BBC7FA;
  LODWORD(v296) = (v303 - ((2 * v303) & 0x808000E8) + 1206104180) ^ 0x8FA3F1EE;
  LOWORD(v410) = (v294 ^ 0x31) - ((2 * (v294 ^ 0x31)) & 0x14C) + 1446;
  v425 = (v410 & 0x168 ^ 0x4E410029) + (v410 & 0x697 ^ 0xB10A2A14);
  v426 = HIBYTE(v419) ^ 0x65;
  LODWORD(v303) = ((16178 * (HIBYTE(v418) ^ 0xD8)) & 0x3FDF2E)
                + ((8089 * (HIBYTE(v418) ^ 0xD8)) ^ 0x77FFEF97)
                - 1944780245;
  v427 = (((16178 * (_DWORD)v298) & 0x6FFBA76) + ((8089 * (_DWORD)v298) ^ 0x7F7FDD3Bu) - 2040893768) % 0x3084;
  LODWORD(v298) = ((BYTE2(v294) ^ 0xE0) - ((2 * (BYTE2(v294) ^ 0xE0)) & 0x178) + 184532412) ^ 0x4A6EC8E6;
  v428 = ((2 * v298) & 0x81020042) - v298;
  LODWORD(v298) = ((16178 * (BYTE3(v294) ^ 0x13)) & 0x39AEFA)
                + ((8089 * (BYTE3(v294) ^ 0x13)) ^ 0x7F1CD77D)
                - 2064115131;
  v429 = v298 - 12420 * (((177055013 * (unint64_t)v298) >> 32) >> 9);
  v430 = (((v423 >> 8) & 0x61) + ((v423 >> 8) & 0x9E ^ 0x2D8EFC87) - 1) ^ 0x2D8EFCF4;
  LODWORD(v298) = (BYTE1(v294) ^ 0xFFFFFFCC) - 1764664502 + ((2 * BYTE1(v294)) | 0xD25D496E);
  LODWORD(v294) = ((v298 & 0x602003E9 ^ 0x10001349) + (v298 & 0x20416 ^ 0x2000413) - 1) ^ 0x722213AB;
  v431 = ((16178 * (BYTE2(v419) ^ 0xA5)) & 0x34FB9E) + ((8089 * (BYTE2(v419) ^ 0xA5)) ^ 0xEFDA7DCF) + 364895886;
  v432 = v431 - 12420 * (((177055013 * (unint64_t)v431) >> 32) >> 9);
  v433 = (((v419 >> 8) & 0x2E ^ 0xACFD7B0F) + ((v419 >> 8) & 0xD1) - 1) ^ 0xCFF73DE;
  v434 = ((2 * v433) | 0xA408A310) - v433;
  v435 = ((16178 * v424) & 0x1FFFFD3A) + ((8089 * v424) ^ 0x8FFFFE9D) + 1973050816;
  v436 = ((16178 * v426) & 0x1FFFDE) + ((8089 * v426) ^ 0xF9EFFFEF) + 170193363;
  v437 = ((16178 * ((v434 - 1376014728) ^ 0xF2065989)) & 0xDFFBCFF6)
       + ((8089 * ((v434 - 1376014728) ^ 0xF2065989)) ^ 0x6FFDE7FB)
       - 1872682441;
  v438 = ((16178 * (HIBYTE(v423) ^ 0x5C)) & 0x26B5EA) + ((8089 * (HIBYTE(v423) ^ 0x5C)) ^ 0x7FD35AF5) - 2076076339;
  v439 = *(_DWORD *)(v92 + 4 * ((((16178 * v430) & 0xBCF5EC6E) + ((8089 * v430) ^ 0x5E7AF637) - 1578888197) % 0x3084)) ^ *(_DWORD *)(v92 + 4 * (v303 - 12420 * (((177055013 * (unint64_t)v303) >> 32) >> 9))) ^ *(_DWORD *)(v92 + 4 * v432) ^ *(_DWORD *)(v92 + 4 * ((((16178 * ((v425 - 1) ^ 0xFF4B2F6A)) & 0xEFF0BE) + ((8089 * ((v425 - 1) ^ 0xFF4B2F6A)) ^ 0xAE77F85F) + 1466061716) % 0x3084));
  LODWORD(STACK[0x58C]) = v439;
  v440 = ((v418 ^ 0xB5) + (v418 & 9 ^ 0x2508) - ((v418 ^ 0xB5) & 9)) ^ 0x25C3;
  v441 = *(_DWORD *)(v92 + 4 * v427) ^ *(_DWORD *)(v92 + 4 * v429) ^ *(_DWORD *)(v92 + 4 * (v435 % 0x3084));
  v442 = *(_DWORD *)(v92 + 4 * v422);
  LODWORD(v296) = *(_DWORD *)(v92
                            + 4
                            * ((((16178 * (_DWORD)v296) & 0xFFEDA7F4) + ((8089 * (_DWORD)v296) ^ 0xFFF6D3FA) + 98793465)
                             % 0x3084));
  LODWORD(v303) = *(_DWORD *)(v92
                            + 4
                            * ((((16178 * ((v428 - 2091450402) ^ 0xC3C78ADF)) & 0xAFB7FFCC)
                              + ((8089 * ((v428 - 2091450402) ^ 0xC3C78ADF)) ^ 0xD7DBFFE6)
                              + 767450231)
                             % 0x3084));
  v443 = *(_DWORD *)(v92 + 4 * (v438 - 12420 * (((177055013 * (unint64_t)v438) >> 32) >> 9)));
  v444 = *(_DWORD *)(v92
                   + 4
                   * ((((16178 * (_DWORD)v294) & 0xEDFFFDFE) + ((8089 * (_DWORD)v294) ^ 0xF6FFFEFF) + 157223731) % 0x3084));
  LODWORD(v294) = v441 ^ 0x86D41FF3 ^ *(_DWORD *)(v92 + 4 * (v437 % 0x3084));
  LODWORD(STACK[0x574]) = v294;
  v445 = v439 ^ LODWORD(STACK[0x320]);
  v446 = *(_DWORD *)(v92
                   + 4
                   * ((((16178 * (BYTE2(v423) ^ 0x2F)) & 0x2FF3FE)
                     + ((8089 * (BYTE2(v423) ^ 0x2F)) ^ 0x6777F9FFu)
                     - 1641913762)
                    % 0x3084));
  v447 = *(_DWORD *)(v92 + 4 * (v436 - 12420 * (((177055013 * (unint64_t)v436) >> 32) >> 9)));
  LODWORD(v298) = v296 ^ v442;
  LOBYTE(v437) = v445 ^ 0x41;
  v448 = v445;
  LODWORD(STACK[0x570]) = v445;
  LODWORD(v296) = *(_DWORD *)(v92
                            + 4 * ((((16178 * v440) & 0xFFDEFE) + ((8089 * v440) ^ 0xF97FEF7F) + 207248500) % 0x3084));
  v449 = v92;
  v450 = v298 ^ v443 ^ v303;
  LODWORD(STACK[0x56C]) = v450;
  v451 = v450 ^ LODWORD(STACK[0x314]);
  v452 = v446 ^ v447 ^ v296 ^ v444;
  LODWORD(STACK[0x588]) = v452;
  LODWORD(v296) = (((unsigned __int16)(v445 ^ 0x7741) >> 8) ^ 0xFFFFFFAB)
                + 1004301611
                + ((2 * ((unsigned __int16)(v445 ^ 0x7741) >> 8)) | 0x884725AC);
  v453 = ((v445 ^ 0x69CC7741u) >> 16) ^ 0x8D;
  v454 = v453 - ((2 * v453) & 0x1C4);
  v455 = (1519523190
        - (((unsigned __int16)(v451 ^ 0xA233) >> 8) ^ 0xEF | 0x5A921576)
        + (((unsigned __int16)(v451 ^ 0xA233) >> 8) ^ 0xEF | 0xA56DEA89)) ^ 0xE5EBAACD;
  v456 = ((2 * v455) | 0xCE7C51FC) - v455;
  v457 = a33 ^ v452;
  v458 = ((2 * (BYTE1(v457) ^ 0xEB)) | 0x9B10B8C4) - (BYTE1(v457) ^ 0xEB) - 1300782178;
  v459 = ((v458 & 0x9286A9E8 ^ 0x9000A168) + (v458 ^ 0x3EE5882) - ((v458 ^ 0x3EE5882) & 0x9286A9E8)) ^ 0xDCE0ADF8;
  LODWORD(STACK[0x580]) = 8089 * v459;
  LODWORD(STACK[0x57C]) = 16178 * v459;
  LODWORD(v303) = (((16178 * ((v454 + 4578) ^ 0x1184)) & 0xFFF4AFE8)
                 + ((8089 * ((v454 + 4578) ^ 0x1184)) ^ 0x7FFA57F4)
                 - 2053110679)
                % 0x3084;
  v460 = ((2 * (v451 ^ 0xE6)) & 0x1A6) - (v451 ^ 0xE6) + 544352812;
  v461 = ((v460 & 0x20500105 ^ 0x96810101) + (v460 ^ 0x2052D60C) - ((v460 ^ 0x2052D60C) & 0xC505)) ^ 0xB6F139C5;
  LODWORD(v294) = v294 ^ LODWORD(STACK[0x310]);
  v462 = BYTE3(v294) ^ 0xF1;
  LODWORD(STACK[0x54C]) = 8089 * v462;
  LODWORD(STACK[0x550]) = 16178 * v462;
  v463 = ((v294 & 0x16) + (v294 ^ 0xFFFFFF36) + (v294 | 0xD977A0E9) + 1) ^ 0xDA13B021;
  v464 = v463 - ((2 * v463) & 0x56978DA0);
  v465 = ((v451 ^ 0x9A54A233) >> 16) ^ 0xDF;
  LODWORD(v298) = ((v437 ^ 0xE1) - 1509534940 - ((2 * (v437 ^ 0xE1)) & 0x48)) ^ 0xA60653A1;
  v466 = (((a33 ^ v452) ^ 0xF7) - ((2 * ((a33 ^ v452) ^ 0xF7)) & 0x194) + 2250) ^ 0x8CD;
  LODWORD(STACK[0x568]) = 8089 * v466;
  LODWORD(STACK[0x564]) = 16178 * v466;
  v467 = (((16178 * (_DWORD)v298) & 0xC1F7397E) + ((8089 * (_DWORD)v298) ^ 0xE0FB9CBF) + 618573620) % 0x3084;
  LODWORD(v298) = (-748041902 - (BYTE2(v294) ^ 6 | 0xD369C952) + (BYTE2(v294) ^ 6 | 0x2C9636AD)) ^ 0x8D1DB2F3;
  v468 = -1714700117 - (v298 | 0x99CBC0AB) + (v298 | 0x66343F54);
  LODWORD(v298) = (v456 - 1732126974) ^ 0x27B868ED;
  LODWORD(STACK[0x554]) = 8089 * v298;
  LODWORD(STACK[0x558]) = 16178 * v298;
  v469 = (v464 - 1421097264) ^ 0xA82FD6C1;
  LODWORD(STACK[0x560]) = 8089 * v469;
  LODWORD(STACK[0x55C]) = 16178 * v469;
  v470 = (((16178 * v469) & 0xFBFFE36E) + ((8089 * v469) ^ 0xFDFFF1B7) + 131750460) % 0x3084;
  LODWORD(v294) = (((2 * (BYTE1(v294) ^ 0x42)) & 0x1D4) - (BYTE1(v294) ^ 0x42) + 324254485) & 0x10000FFF ^ 0x10000B31;
  v471 = *(_DWORD *)(v449 + 4 * ((((16178 * v459) & 0xF7B7FBEE) + ((8089 * v459) ^ 0x7BDBFDF7) - 2071786437) % 0x3084)) ^ *(_DWORD *)(v449 + 4 * ((((16178 * v462) & 0x3FF1FA) + ((8089 * v462) ^ 0xFFDFF8FD) + 70580421) % 0x3084)) ^ *(_DWORD *)(v449 + 4 * v303);
  LODWORD(v303) = HIBYTE(v448) ^ 0xA5;
  LODWORD(STACK[0x548]) = 8089 * v303;
  LODWORD(STACK[0x4C8]) = 16178 * v303;
  LODWORD(v303) = ((16178 * v303) & 0x2DFABE) + ((8089 * v303) ^ 0xFDB6FD5F) + 106820707;
  LODWORD(STACK[0x4C4]) = 8089 * v294;
  LODWORD(STACK[0x4BC]) = 16178 * v294;
  v472 = ((16178 * (HIBYTE(v451) ^ 0xB0)) & 0x3B3FDC) + ((8089 * (HIBYTE(v451) ^ 0xB0)) ^ 0xFF7D9FEE) + 77025748;
  v473 = (((2 * (BYTE2(v457) ^ 0x6C)) | 0xC3E6ED9E) - (BYTE2(v457) ^ 0x6C) + 504138033) ^ 0xE1F3767F;
  LODWORD(STACK[0x4AC]) = 8089 * v473;
  LODWORD(STACK[0x490]) = 16178 * v473;
  v457 >>= 24;
  LODWORD(STACK[0x488]) = 8089 * v457;
  LODWORD(STACK[0x480]) = 16178 * v457;
  v474 = ((16178 * v457) & 0x3FFED6) + ((8089 * v457) ^ 0xB93FFF6B) + 1255469655;
  v475 = v474 - 12420 * (((177055013 * (unint64_t)v474) >> 32) >> 9);
  LODWORD(v296) = *(_DWORD *)(v92
                            + 4
                            * ((((16178 * v466) & 0x5FEFFB9E) + ((8089 * v466) ^ 0x6FF7FDCFu) - 1780330972) % 0x3084)) ^ *(_DWORD *)(v92 + 4 * ((((16178 * (v296 ^ 0xC423929C)) & 0xFCDFAE) + ((8089 * (v296 ^ 0xC423929C)) ^ 0x27FE6FD7) - 664757669) % 0x3084));
  v476 = *(_DWORD *)(v449 + 4 * v470) ^ *(_DWORD *)(v67 - 256) ^ *(_DWORD *)(v449
                                                                             + 4
                                                                             * (v303
                                                                              - 12420
                                                                              * (((177055013
                                                                                               * (unint64_t)v303) >> 32) >> 9))) ^ *(_DWORD *)(v449 + 4 * ((((16178 * v473) & 0xAFBF8D64) + ((8089 * v473) ^ 0x57DFC6B2) - 1380280917) % 0x3084)) ^ *(_DWORD *)(v449 + 4 * ((((16178 * (_DWORD)v298) & 0xFF6DDFB2) + 11014682 + ((8089 * (_DWORD)v298) ^ 0xFFB6EFD9) + 2111) % 0x3084));
  LODWORD(v298) = *(_DWORD *)(v92
                            + 4
                            * ((((16178 * v461) & 0x73FFFFEE) + ((8089 * v461) ^ 0x39FFFFF7) - 874886148) % 0x3084)) ^ LODWORD(STACK[0x2E8]);
  LODWORD(STACK[0x4A8]) = v298;
  v477 = v298 ^ v471;
  LODWORD(v298) = (((v298 ^ v471) & 0xE7 ^ 0x62520EC1) + ((v298 ^ v471) & 0x18 ^ 0x5014111) - 1) ^ 0x21584CCA;
  v478 = ((2 * v298) & 0x880215B8) - v298;
  v479 = *(_DWORD *)(v92 + 4 * ((((16178 * v465) & 0x1FFEBC) + ((8089 * v465) ^ 0xFBEFFF5E) + 162159871) % 0x3084));
  LODWORD(STACK[0x4B0]) = v479;
  v480 = *(_DWORD *)(v449 + 4 * v467) ^ *(_DWORD *)(v67 - 248) ^ v479 ^ *(_DWORD *)(v449
                                                                                    + 4
                                                                                    * ((((16178 * (_DWORD)v294) & 0x7AFEBFBE)
                                                                                      + ((8089 * (_DWORD)v294) ^ 0x7D7F5FDFu)
                                                                                      - 2099271085)
                                                                                     % 0x3084)) ^ *(_DWORD *)(v449 + 4 * v475);
  LODWORD(v298) = *(_DWORD *)(v92
                            + 4
                            * ((((16178 * (v468 ^ 0xC7BFBB75)) & 0xD7AB7FBE)
                              + ((8089 * (v468 ^ 0xC7BFBB75)) ^ 0xEBD5BFDF)
                              + 432315518)
                             % 0x3084));
  v481 = *(_DWORD *)(v92 + 4 * (v472 - 12420 * (((177055013 * (unint64_t)v472) >> 32) >> 9)));
  LODWORD(STACK[0x4A4]) = v481;
  v482 = v298 ^ LODWORD(STACK[0x2EC]);
  LODWORD(STACK[0x498]) = v482;
  v483 = v482 ^ v296 ^ v481;
  LODWORD(v298) = ((v483 & 0x70 ^ 0xD285009F) - (v483 & 0x8F)) ^ 0xF7A42B8F;
  v484 = v298 - ((2 * v298) & 0x40005712);
  LODWORD(v298) = (591627593 - (BYTE2(v480) ^ 0x31013D) + ((2 * (BYTE2(v480) ^ 0x31013D)) & 0x6000AC) + 96) ^ 0x23728499;
  v485 = (((16178 * (_DWORD)v298) & 0x7FF7B36C) + ((8089 * (_DWORD)v298) ^ 0x3FFBD9B6u) - 979467609) % 0x3084;
  LODWORD(v298) = ((BYTE1(v476) ^ 0x3A10980) - ((2 * (BYTE1(v476) ^ 0x3A10980)) & 0x242026A) - 1321897163) ^ 0xB2947A35;
  v486 = (((16178 * (_DWORD)v298) & 0xDFE7D5FC) + ((8089 * (_DWORD)v298) ^ 0x6FF3EAFE) - 1872027852) % 0x3084;
  LODWORD(v298) = (544814597 - (BYTE1(v477) ^ 0x69 | 0x20793605) + (BYTE1(v477) ^ 0x69 | 0xDF86C9FA)) ^ 0x8E965890;
  LODWORD(v296) = 35986933 - (v298 | 0x2251DF5) + (v298 | 0xFDDAE20A);
  LODWORD(v298) = (((2 * (v480 ^ 0xDC)) | 0xD06E086A) - (v480 ^ 0xDC) + 399047627) ^ 0x41350423;
  v487 = ((16178 * (HIBYTE(v476) ^ 0x7F)) & 0x3D59E2) + ((8089 * (HIBYTE(v476) ^ 0x7F)) ^ 0xDFDEACF1) + 607536337;
  v488 = v487 - 12420 * (((177055013 * (unint64_t)v487) >> 32) >> 9);
  v489 = (((16178 * (v296 ^ 0xACCA730A)) & 0x5B6FF3A4)
        + ((8089 * (v296 ^ 0xACCA730A)) ^ 0xADB7F9D2)
        + 1386680416)
       % 0x3084;
  LODWORD(v296) = ((BYTE1(v480) ^ 0x60) + ((v480 >> 8) & 0xA4 ^ 0x68207B84) - ((BYTE1(v480) ^ 0x60) & 0xA4)) ^ 0xABE96FAC;
  v490 = 2014274178 - (v296 | 0x780F6282) + (v296 | 0x87F09D7D);
  LODWORD(v296) = ((16178 * (HIBYTE(v477) ^ 0x32)) & 0xFFFFA) + ((8089 * (HIBYTE(v477) ^ 0x32)) ^ 0xFFE7FFFD) + 70054341;
  LODWORD(v303) = (-1919120546 - (BYTE2(v483) ^ 0xD9 | 0x8D9C8B5E) + (BYTE2(v483) ^ 0xD9 | 0x726374A1)) ^ 0xB2E57169;
  v491 = ((2 * v303) & 0x5FB4AAA0) - v303;
  LODWORD(v298) = (((2 * v298) | 0xB80F9CA) - v298 - 96500965) ^ 0xACC27CED;
  LODWORD(v303) = (((16178 * (_DWORD)v298) & 0xFDEBFB1E) + ((8089 * (_DWORD)v298) ^ 0xFEF5FD8F) + 115625572) % 0x3084;
  v492 = -2087629167 - (BYTE2(v477) ^ 0x5D | 0x83914E91) + (BYTE2(v477) ^ 0x5D | 0x7C6EB16E);
  LODWORD(v298) = ((16178 * (BYTE2(v476) ^ 0x48)) & 0x3597FE) + ((8089 * (BYTE2(v476) ^ 0x48)) ^ 0xE7BACBFF) + 501190750;
  v493 = ((16178 * (v490 ^ 0x4439897A)) & 0xFD3771BE) + ((8089 * (v490 ^ 0x4439897A)) ^ 0x7E9BB8DF) - 2117906093;
  v494 = (515146642 - (v476 ^ 0xD9 | 0x1EB48392) + (v476 ^ 0xD9 | 0xE14B7C6D)) ^ 0x63836C65;
  v495 = ((16178 * (HIBYTE(v480) ^ 0xF2)) & 0xE9EDE) + ((8089 * (HIBYTE(v480) ^ 0xF2)) ^ 0x77A74F6F) - 1938972077;
  v496 = v495 - 12420 * (((177055013 * (unint64_t)v495) >> 32) >> 9);
  v497 = ((16178 * (HIBYTE(v483) ^ 0x6F)) & 0x153FFA) + ((8089 * (HIBYTE(v483) ^ 0x6F)) ^ 0xFCEA9FFD) + 120213957;
  v498 = *(_DWORD *)(v92 + 4 * v489) ^ LODWORD(STACK[0x5A0]) ^ *(_DWORD *)(v92
                                                                           + 4
                                                                           * ((((16178
                                                                               * ((v491 + 1344645807) ^ 0x90A3AFAC)) & 0x49FF73B6)
                                                                             + ((8089
                                                                               * ((v491 + 1344645807) ^ 0x90A3AFAC)) ^ 0xA4FFB9DB)
                                                                             + 1620746882)
                                                                            % 0x3084)) ^ *(_DWORD *)(v92 + 4 * v496) ^ *(_DWORD *)(v92 + 4 * ((((16178 * ((((2 * v494) & 0x4D2834B4) - v494 - 647240283) ^ 0x5BA3F565)) & 0x6FFFFFFC) + ((8089 * ((((2 * v494) & 0x4D2834B4) - v494 - 647240283) ^ 0x5BA3F565)) ^ 0x37FFFFFE) - 841331723) % 0x3084));
  v499 = ((16178 * ((v478 + 177886499) ^ 0x4C9156F2)) & 0xD69277BC)
       + ((8089 * ((v478 + 177886499) ^ 0x4C9156F2)) ^ 0xEB493BDE)
       + 445714453;
  v500 = *(_DWORD *)(v92
                   + 4
                   * (v298
                    - 12420 * (((177055013 * (unint64_t)v298) >> 32) >> 9))) ^ LODWORD(STACK[0x59C]) ^ *(_DWORD *)(v92 + 4 * (v296 - 12420 * (((177055013 * (unint64_t)v296) >> 32) >> 9))) ^ *(_DWORD *)(v92 + 4 * ((((16178 * ((v484 + 1749592969) ^ 0x4D698023)) & 0xF83FF5EE) + ((8089 * ((v484 + 1749592969) ^ 0x4D698023)) ^ 0xFC1FFAF7) + 163205372) % 0x3084)) ^ *(_DWORD *)(v92 + 4 * (v493 % 0x3084));
  LODWORD(v298) = (390288308 - (BYTE1(v483) ^ 0xA8 | 0x174353B4) + (BYTE1(v483) ^ 0xA8 | 0xE8BCAC4B)) ^ 0xE8BCAC8B;
  LODWORD(v303) = *(_DWORD *)(v92 + 4 * v486) ^ LODWORD(STACK[0x5A8]) ^ *(_DWORD *)(v92
                                                                                    + 4
                                                                                    * (v497
                                                                                     - 12420
                                                                                     * (((177055013 * (unint64_t)v497) >> 32) >> 9))) ^ *(_DWORD *)(v92 + 4 * v303) ^ *(_DWORD *)(v92 + 4 * ((((16178 * (v492 ^ 0x7C6EB1B1)) & 0xF7ECDF64) + ((8089 * (v492 ^ 0x7C6EB1B1)) ^ 0xFBF66FB2) + 161737899) % 0x3084));
  v501 = *(_DWORD *)(v92 + 4 * v485) ^ *(_DWORD *)(v67 - 252) ^ *(_DWORD *)(v92 + 4 * v488) ^ *(_DWORD *)(v92 + 4 * ((((16178 * (_DWORD)v298) & 0xFDDF8FF6) + ((8089 * (_DWORD)v298) ^ 0xFEEFC7FB) + 24068663) % 0x3084)) ^ *(_DWORD *)(v92 + 4 * (v499 % 0x3084));
  LOWORD(v484) = (v500 ^ 0x9A) + (v500 & 0xCD ^ 0x2C45) - ((v500 ^ 0x9A) & 0xCD);
  v502 = (v484 & 0x246 ^ 0x91090003) + (v484 & 0x5B9);
  v503 = (1143171908 - (BYTE1(v498) ^ 0x4A6159FB | 0x44236B44) + (BYTE1(v498) ^ 0x4A6159FB | 0xBBDC94BB)) ^ 0xF1BDCDAB;
  v504 = (((16178 * v503) & 0x14FAABB6) + ((8089 * v503) ^ 0x8A7D55DB) + 1977726039) % 0x3084;
  v505 = ((16178 * (HIBYTE(v501) ^ 0xF0)) & 0x120F44) + ((8089 * (HIBYTE(v501) ^ 0xF0)) ^ 0xFE6907A2) + 95152672;
  v506 = v505 - 12420 * (((177055013 * (unint64_t)v505) >> 32) >> 9);
  v507 = ((16178 * (BYTE2(v303) ^ 0x3D)) & 0x377FFA) + ((8089 * (BYTE2(v303) ^ 0x3D)) ^ 0xEFDBBFFD) + 364813408;
  v508 = v507 - 12420 * (((177055013 * (unint64_t)v507) >> 32) >> 9);
  v509 = ((BYTE1(v303) ^ 0x33) - ((v303 >> 7) & 0x198) + 4556) ^ 0x11F6;
  v510 = ((16178 * (BYTE3(v303) ^ 0x37)) & 0x277FBA) + ((8089 * (BYTE3(v303) ^ 0x37)) ^ 0xDB73BFDD) + 681652709;
  v511 = (((2 * (BYTE2(v500) ^ 0x72)) & 0x196) - (BYTE2(v500) ^ 0x72) + 1076) ^ 0x428;
  LODWORD(v298) = ((BYTE2(v501) ^ 0x29) + (HIWORD(v501) & 0x70 ^ 0x450) - ((BYTE2(v501) ^ 0x29) & 0x70)) ^ 0x433;
  v512 = ((16178 * (v498 ^ 0x9B)) & 0x36DDE8)
       + ((8089 * (v498 ^ 0x9B)) ^ 0x7BDB6EF4)
       - 1979785985;
  LODWORD(v303) = ((16178 * (v303 ^ 0x93)) & 0x337FFE)
                + ((8089 * (v303 ^ 0x93)) ^ 0xDE19BFFF)
                + 666930164;
  v513 = v303 - 12420 * (((177055013 * (unint64_t)v303) >> 32) >> 9);
  LODWORD(v303) = HIBYTE(v498) ^ 0xAF;
  v514 = (8089 * v303) ^ 0x7FFF9FED;
  v515 = (16178 * v303) & 0x3F3FDA;
  LODWORD(v303) = ((16178 * (BYTE1(v501) ^ 0x19)) & 0x3FB3FC) + ((8089 * (BYTE1(v501) ^ 0x19)) ^ 0xEF3FD9FE) + 287256628;
  v516 = (((2 * (BYTE1(v500) ^ 0x76)) | 0x9E8E8384) - (BYTE1(v500) ^ 0x76) - 1330069954) ^ 0x4F474167;
  v517 = ((16178 * (HIBYTE(v500) ^ 0xDB)) & 0xD764E) + ((8089 * (HIBYTE(v500) ^ 0xDB)) ^ 0x4A66BB27) - 1179765093;
  v518 = ((v501 ^ 0xAC) + (v501 & 0x5A ^ 0xF3194752) - ((v501 ^ 0xAC) & 0x5A)) ^ 0xB13D875C;
  v519 = v515 + v514 - 2078977579;
  v520 = (((2 * v518) & 0x8001BC74) - v518 + 862396869) ^ 0x7143E1DC;
  v521 = *(_DWORD *)(v449 + 4 * v504) ^ *(_DWORD *)(v67 - 232) ^ *(_DWORD *)(v449
                                                                             + 4
                                                                             * ((((16178 * (_DWORD)v298) & 0xF5BFD6)
                                                                               + ((8089 * (_DWORD)v298) ^ 0xF77ADFEB)
                                                                               + 236944498)
                                                                              % 0x3084)) ^ *(_DWORD *)(v449 + 4 * v513) ^ *(_DWORD *)(v449 + 4 * (v517 - 12420 * (((177055013 * (unint64_t)v517) >> 32) >> 9)));
  v522 = *(_DWORD *)(v449 + 4 * ((((16178 * v511) & 0x1FDBF52) + ((8089 * v511) ^ 0xDBFEDFA9) + 698055860) % 0x3084)) ^ *(_DWORD *)(v67 - 228) ^ *(_DWORD *)(v449 + 4 * (v510 - 12420 * (((177055013 * (unint64_t)v510) >> 32) >> 9))) ^ *(_DWORD *)(v449 + 4 * (v512 - 12420 * (((177055013 * (unint64_t)v512) >> 32) >> 9))) ^ *(_DWORD *)(v449 + 4 * (v303 - 12420 * (((22131877 * (unint64_t)v303) >> 32) >> 6)));
  LODWORD(v298) = (406816245
                 - (v522 ^ 0xE456B4F1 | 0x183F85F5)
                 + (v522 ^ 0xE456B4F1 | 0xE7C07A0A)) ^ 0x386D7C2;
  v523 = v298 - ((2 * v298) & 0x39954620);
  v524 = LODWORD(STACK[0x598]) ^ *(_DWORD *)(v449 + 4 * v508) ^ *(_DWORD *)(v449
                                                                            + 4
                                                                            * ((((16178 * v516) & 0xDDBF5D5E)
                                                                              + ((8089 * v516) ^ 0x6EDFAEAF)
                                                                              - 1853924477)
                                                                             % 0x3084)) ^ *(_DWORD *)(v449 + 4 * (v519 % 0x3084)) ^ *(_DWORD *)(v449 + 4 * ((((16178 * v520) & 0xFFFDF5F4) + ((8089 * v520) ^ 0xFFFEFAFA) + 98259193) % 0x3084));
  v525 = v92;
  v526 = *(_DWORD *)(v449 + 4 * v506) ^ *(_DWORD *)(v67 - 244) ^ *(_DWORD *)(v449
                                                                             + 4
                                                                             * ((((16178 * (BYTE2(v498) ^ 0x8E)) & 0x37F7EA)
                                                                               + ((8089 * (BYTE2(v498) ^ 0x8E)) ^ 0x7FFBFBF5u)
                                                                               - 2053218200)
                                                                              % 0x3084)) ^ *(_DWORD *)(v449 + 4 * ((((16178 * v509) & 0xEDFD677E) + ((8089 * v509) ^ 0x76FEB3BF) - 1990175117) % 0x3084)) ^ *(_DWORD *)(v449 + 4 * ((((16178 * ((v502 - 1) ^ 0x91090426)) & 0xBF66B276) + ((8089 * ((v502 - 1) ^ 0x91090426)) ^ 0x5FB3593B) - 1507396936) % 0x3084));
  v527 = ((2 * (v524 ^ 0xA9)) & 0xD6) - (v524 ^ 0xA9) - 1734394988;
  LODWORD(v296) = ((16178 * (HIBYTE(v524) ^ 0x51)) & 0x2B7FBC)
                + ((8089 * (HIBYTE(v524) ^ 0x51)) ^ 0xF7F5BFDE)
                + 226804813;
  *(_DWORD *)(v67 - 216) = v296
                         - 12420 * (((177055013 * (unint64_t)v296) >> 32) >> 9);
  LODWORD(v296) = ((v521 ^ 0x1BE49A0A) >> 16) ^ 0xDF;
  LODWORD(v296) = ((16178 * v296) & 0x3A7B16) + ((8089 * v296) ^ 0x7FBD3D8B) - 2138966923;
  *(_DWORD *)(v67 - 192) = v296 - 12420 * (((22131877 * (unint64_t)v296) >> 32) >> 6);
  LODWORD(v296) = ((((unsigned __int16)(v522 ^ 0xF97) >> 8) ^ 0x19)
                 + (((v522 ^ 0x118D0F97) >> 8) & 0x99 ^ 0x9713D480)
                 - ((((unsigned __int16)(v522 ^ 0xF97) >> 8) ^ 0x19) & 0x99999999)) ^ 0x9B93D4A5;
  v528 = ((2 * v296) | 0xC44E11FC) - v296;
  LODWORD(v296) = (1715490640 - (BYTE2(v524) ^ 0x4B | 0x66404F50) + (BYTE2(v524) ^ 0x4B | 0x99BFB0AF)) ^ 0x9896306A;
  v529 = (-411609596
        - (v526 ^ 0x1128B873 | 0xE7775604)
        + (v526 ^ 0x1128B873 | 0x1888A9FB)) ^ 0x9A011EA;
  *(_DWORD *)(v67 - 240) = (((16178 * v529) & 0xF1F777DC) + ((8089 * v529) ^ 0xF8FBBBEE) + 175766746) % 0x3084;
  LODWORD(v298) = (((2 * (((unsigned __int16)(v526 ^ 0xC18A) >> 8) ^ 0x3A)) | 0x1DCC5D5E)
                 - (((unsigned __int16)(v526 ^ 0xC18A) >> 8) ^ 0x3A)
                 + 1897517393) ^ 0x8EE62E6C;
  *(_DWORD *)(v67 - 224) = (((16178 * (_DWORD)v298) & 0xDA597F5C) + ((8089 * (_DWORD)v298) ^ 0xED2CBFAE) + 403551566)
                         % 0x3084;
  LODWORD(v298) = ((((unsigned __int16)(v521 ^ 0x9A0A) >> 8) ^ 0x18843433)
                 - ((2 * (((unsigned __int16)(v521 ^ 0x9A0A) >> 8) ^ 0x18843433)) & 0x8281E)
                 - 1069787377) ^ 0xD8B86321;
  LODWORD(STACK[0x594]) = (((16178 * (_DWORD)v298) & 0xFDCF9FBE) + ((8089 * (_DWORD)v298) ^ 0x7EE7CFDF) - 2041404131)
                        % 0x3084;
  LODWORD(v298) = ((v522 ^ 0x118D0F97) >> 16) ^ 0xFC;
  LODWORD(v298) = (((((2 * v298) | 0x7686A1C) - v298 - 62141710) & 0x340754 ^ 0x18014051)
                 + ((((2 * v298) | 0x7686A1C) - v298 - 62141710) & 0x38030AB)
                 - 1) ^ 0x1BB57557;
  LODWORD(STACK[0x590]) = (((16178 * (_DWORD)v298) & 0xCBF05FFE) + ((8089 * (_DWORD)v298) ^ 0xE5F82FFF) + 440861185)
                        % 0x3084;
  LODWORD(v298) = (LODWORD(STACK[0x58C]) ^ 0xAB5D368B) + (LODWORD(STACK[0x588]) ^ 0x54A2C974) + 1;
  v530 = (-2073231964 - (v521 ^ 0xBE | 0x846CFDA4) + (v521 ^ 0xBE | 0x7B93025B)) ^ 0x7B9302CC;
  v531 = ((v527 & 0x180F132D ^ 0x2660C028) + (v527 ^ 0x189F3B95) - ((v527 ^ 0x189F3B95) & 0x32D)) ^ 0xBE6FD3B5;
  LODWORD(STACK[0x58C]) = (((16178 * v531) & 0xDB7F3FEE) + ((8089 * v531) ^ 0x6DBF9FF7) - 1783228207) % 0x3084;
  v532 = ((v526 ^ 0x365FC18A) >> 16) ^ 0x6B;
  v533 = ((16178 * v532) & 0x2EFF6E) + ((8089 * v532) ^ 0x4F777FB7) - 1329089975;
  LODWORD(STACK[0x584]) = v533 - 12420 * (((11065939 * (unint64_t)v533) >> 32) >> 5);
  LODWORD(STACK[0x578]) = (((16178 * ((v523 - 590699760) ^ 0xDCDABA49)) & 0x2FF4BFFE)
                         + ((8089 * ((v523 - 590699760) ^ 0xDCDABA49)) ^ 0x97FA5FFF)
                         + 1803245769)
                        % 0x3084;
  v534 = ((16178 * (HIBYTE(v522) ^ 0x3C)) & 0x3D7BEA) + ((8089 * (HIBYTE(v522) ^ 0x3C)) ^ 0x7CFEBDF5) - 2005154250;
  LODWORD(STACK[0x588]) = v534 - 12420 * (((177055013 * (unint64_t)v534) >> 32) >> 9);
  v535 = (((16178 * ((v528 + 500758274) ^ 0xEEA708FF)) & 0xFEFF7BFE)
        - 2051361027
        + ((8089 * ((v528 + 500758274) ^ 0xEEA708FF)) ^ 0x7F7FBDFF))
       % 0x3084;
  LODWORD(v303) = (((16178 * (HIBYTE(v526) ^ 0xB3)) & 0x2B7E9E)
                 + ((8089 * (HIBYTE(v526) ^ 0xB3)) ^ 0xDD95BF4F)
                 + 669304028)
                % 0x3084;
  v536 = (-98834484 - (v296 | 0xFA1BE7CC) + (v296 | 0x5E41833)) ^ 0x4CD9833;
  v537 = (((16178 * v536) & 0xBDB6EBF6) + ((8089 * v536) ^ 0xDEDB75FB) + 560184325) % 0x3084;
  v538 = LODWORD(STACK[0x570]) ^ 0xF569F89A;
  LODWORD(v296) = ((16178 * (HIBYTE(v521) ^ 0x49)) & 0x3CFDFA)
                + ((8089 * (HIBYTE(v521) ^ 0x49)) ^ 0xFA7E7EFD)
                + 184288558;
  LODWORD(STACK[0x570]) = v296 - 12420 * (((177055013 * (unint64_t)v296) >> 32) >> 9);
  LODWORD(v296) = BYTE1(v538) ^ 0x91;
  v539 = (8089 * v296) ^ 0xFFFBFF79;
  v540 = (16178 * v296) & 0x37FEF2;
  LODWORD(v298) = ((((2 * v298) & 0xFD1645FE)
                  + (v298 ^ 0xFE8B22FF)
                  - ((2 * (((2 * v298) & 0xFD1645FE) + (v298 ^ 0xFE8B22FF)) + 1785745026) & 0x62EB6C4E)
                  - 424813208) ^ 0x757B0DDF)
                + 460331215;
  LODWORD(v298) = (LODWORD(STACK[0x56C]) ^ 0x54A2C974) + (v298 ^ 0x7EBDFD75) + ((2 * v298) & 0xFD7BFAEA) - 2126380405;
  LODWORD(v296) = v298 - ((2 * v298) & 0x2957B9EA);
  LODWORD(v298) = ((BYTE1(v524) ^ 0x7D) - ((2 * (BYTE1(v524) ^ 0x7D)) & 0xA4) + 20306) ^ 0x4F19;
  LODWORD(STACK[0x4C0]) = (((16178 * (_DWORD)v298) & 0xEFDCEF64) + ((8089 * (_DWORD)v298) ^ 0x77EE77B2) - 1924399798)
                        % 0x3084;
  LODWORD(v298) = LODWORD(STACK[0x54C]) ^ 0xEFFBFF67;
  v541 = STACK[0x550] & 0x37FECE;
  v542 = (-1485208676 - (BYTE2(v538) ^ 0x1138005B | 0xA779839C) + (BYTE2(v538) ^ 0x1138005B | 0x58867C63)) ^ 0x49BE7C76;
  LODWORD(STACK[0x56C]) = *(_DWORD *)(v92 + 4 * v303) ^ *(_DWORD *)(v92 + 4 * v535) ^ *(_DWORD *)(v92 + 4 * ((((16178 * v530) & 0xEFDFFDFC) + 193001930 + ((8089 * v530) ^ 0xF7EFFEFE) + 311296) % 0x3084)) ^ 0xFF5A174D ^ *(_DWORD *)(v92 + 4 * v537);
  v543 = ((v538 & 0xE7 ^ 0xE9170E26) + (v538 & 0x18 ^ 0x11) - 1) ^ 0xEB020EA9;
  v544 = (STACK[0x480] & a20) + (LODWORD(STACK[0x488]) ^ 0x96EBBDDF) + 1831416803;
  v545 = v544 - 12420 * (((177055013 * (unint64_t)v544) >> 32) >> 9);
  v546 = (v541 + (int)v298 + 337179227) % 0x3084u;
  v547 = (v296 - 1800676107) ^ LODWORD(STACK[0x574]);
  v548 = (STACK[0x4C8] & 0x3D65DA) + (LODWORD(STACK[0x548]) ^ 0xBDFEB2ED) + 1175862997;
  LODWORD(v294) = *(_DWORD *)(v449 + 4 * v545) ^ *(_DWORD *)(v67 - 248) ^ LODWORD(STACK[0x4B0]) ^ *(_DWORD *)(v449 + 4 * (((STACK[0x4BC] & 0x7FDFF1E8) - 2140204738 + (LODWORD(STACK[0x4C4]) ^ 0x7FEFF8F4u)) % 0x3084)) ^ *(_DWORD *)(v449 + 4 * ((((16178 * ((((2 * v543) & 0xA135C) - v543 - 1411762607) ^ 0xA9CF3671)) & 0xC48145FA) + ((8089 * ((((2 * v543) & 0xA135C) - v543 - 1411762607) ^ 0xA9CF3671)) ^ 0x6240A2FD) - 1550210826) % 0x3084));
  v549 = LODWORD(STACK[0x4A8]) ^ *(_DWORD *)(v449
                                           + 4
                                           * ((((16178 * v542) & 0x67CEF7CE) + ((8089 * v542) ^ 0x33E77BE7) - 776806282)
                                            % 0x3084)) ^ *(_DWORD *)(v449 + 4 * v546) ^ *(_DWORD *)(v449 + 4 * (((STACK[0x57C] & 0xF7DFEF7E) + (LODWORD(STACK[0x580]) ^ 0xFBEFF7BF) + 74388083) % 0x3084));
  v550 = 2049165031 - (BYTE2(v294) ^ 0xB0007F2 | 0x7A23C6E7) + (BYTE2(v294) ^ 0xB0007F2 | 0x85DC3918);
  LODWORD(v296) = LODWORD(STACK[0x498]) ^ LODWORD(STACK[0x4A4]) ^ *(_DWORD *)(v449
                                                                            + 4 * ((v540 + v539 + 6490809) % 0x3084u)) ^ *(_DWORD *)(v449 + 4 * (((STACK[0x564] & 0x56AFCD4E) + (LODWORD(STACK[0x568]) ^ 0x2B57E6A7u) - 628988596) % 0x3084));
  v551 = ((16178 * (BYTE3(v296) ^ 0x6F)) & 0x3E76FE) + ((8089 * (BYTE3(v296) ^ 0x6F)) ^ 0xE0FF3B7F) + 588625475;
  v552 = *(_DWORD *)(v525
                   + 4 * (((STACK[0x490] & 0x7A072FFE) + (LODWORD(STACK[0x4AC]) ^ 0xBD0397FF) + 1217840222) % 0x3084)) ^ *(_DWORD *)(v67 - 256) ^ *(_DWORD *)(v525 + 4 * (v548 - 12420 * (((177055013 * (unint64_t)v548) >> 32) >> 9))) ^ *(_DWORD *)(v525 + 4 * (((STACK[0x55C] & 0xFCFAFFDC) + (LODWORD(STACK[0x560]) ^ 0xFE7D7FEE) + 123522053) % 0x3084)) ^ *(_DWORD *)(v525 + 4 * (((STACK[0x558] & 0xBCF6F7FE) + (LODWORD(STACK[0x554]) ^ 0x5E7B7BFF) - 1578922445) % 0x3084));
  v553 = (BYTE2(v549) ^ 0x420443C8) - ((2 * (BYTE2(v549) ^ 0x420443C8)) & 0x40882EA);
  LODWORD(v298) = ((WORD1(v296) & 0x27 ^ 0x196D0925) + (WORD1(v296) & 0xD8 ^ 0x411) - 1) ^ 0x196D0D27;
  v554 = ((16178 * (v294 ^ 0xC2)) & 0x29CE6E)
       + ((8089 * (v294 ^ 0xC2)) ^ 0x14D4E737)
       - 251304772;
  v555 = v554 - 12420 * (((177055013 * (unint64_t)v554) >> 32) >> 9);
  v556 = ((v549 ^ 0x41) - ((2 * v549) & 0x54) + 2858) ^ 0xBA1;
  v557 = ((16178 * (BYTE1(v296) ^ 0x68)) & 0x17EE7E) + ((8089 * (BYTE1(v296) ^ 0x68)) ^ 0xFD8BF73F) + 47387379;
  v558 = v557 - 12420 * (((22131877 * (unint64_t)v557) >> 32) >> 6);
  v559 = (528084238 - (BYTE1(v294) ^ 0x483B11E7 | 0x1F79ED0E) + (BYTE1(v294) ^ 0x483B11E7 | 0xE08612F1)) ^ 0xA8BD0379;
  v560 = (((16178 * v559) & 0xDB5FDEEA) + ((8089 * v559) ^ 0xEDAFEF75) + 313465533) % 0x3084;
  v561 = ((16178 * (BYTE3(v294) ^ 0xF2)) & 0x3F77FE) + ((8089 * (BYTE3(v294) ^ 0xF2)) ^ 0x5EDFBBFF) - 1523239485;
  LODWORD(v294) = (7896646 - (BYTE1(v549) ^ 0x4120207 | 0x787E46) + (BYTE1(v549) ^ 0x4120207 | 0xFF8781B9)) ^ 0xFB9583BD;
  v562 = (((16178 * (_DWORD)v294) & 0xD7FFE2FA) + ((8089 * (_DWORD)v294) ^ 0x6BFFF17D) - 1805707083) % 0x3084;
  LODWORD(v294) = ((16178 * (v552 ^ 0x11)) & 0x1DBEF4)
                + ((8089 * (v552 ^ 0x11)) ^ 0x77CEDF7A)
                - 1911853959;
  LODWORD(v449) = v294 - 12420 * (((177055013 * (unint64_t)v294) >> 32) >> 9);
  v550 ^= 0x8EDC3EE7;
  LODWORD(v294) = (8089 * v550) ^ 0xDB7F5DDF;
  v563 = (16178 * v550) & 0xB6FEBBBE;
  v564 = ((2 * (BYTE2(v552) ^ 0x8640081C)) | 0xDA206A02) - (BYTE2(v552) ^ 0x8640081C);
  v565 = *(_DWORD *)(v92 + 4 * v560);
  HIDWORD(v566) = v565 ^ 0x5DD24B8;
  LODWORD(v566) = v565 ^ 0xA0000000;
  v567 = (v566 >> 28) - 1874664448 - ((2 * (v566 >> 28)) & 0x2085CEA6) + 851;
  HIDWORD(v566) = v567 ^ 0x353;
  LODWORD(v566) = v567 ^ 0x9042E400;
  v568 = *(_DWORD *)(v525 + 4 * (v561 - 12420 * (((177055013 * (unint64_t)v561) >> 32) >> 9))) ^ LODWORD(STACK[0x5A0]) ^ *(_DWORD *)(v525 + 4 * v449) ^ *(_DWORD *)(v525 + 4 * ((((16178 * (_DWORD)v298) & 0xB7E2DCFE) + ((8089 * (_DWORD)v298) ^ 0x5BF16E7F) - 1448546850) % 0x3084)) ^ *(_DWORD *)(v525 + 4 * v562);
  v569 = ((BYTE1(v552) ^ 0x99) + ((v552 >> 8) & 0x17 ^ 0xEED7B206) - ((BYTE1(v552) ^ 0x99) & 0x17)) ^ 0xEED7B20E;
  LODWORD(v298) = ((16178 * (HIBYTE(v552) ^ 0x7F)) & 0x3D75DE)
                + ((8089 * (HIBYTE(v552) ^ 0x7F)) ^ 0x5DFEBAEF)
                - 1508493613;
  v570 = v298 - 12420 * (((177055013 * (unint64_t)v298) >> 32) >> 9);
  LODWORD(v298) = ((16178 * (HIBYTE(v549) ^ 0x32)) & 0x2FB3A4)
                + ((8089 * (HIBYTE(v549) ^ 0x32)) ^ 0xD9F7D9D2)
                + 706549744;
  v571 = v298 - 12420 * (((177055013 * (unint64_t)v298) >> 32) >> 9);
  LODWORD(v294) = (v563 + v294 + 706412158) % 0x3084;
  LODWORD(v298) = (v566 >> 10) - ((2 * (v566 >> 10)) & 0x99E4EC22) - 856525295;
  HIDWORD(v566) = v298 ^ 0xF27611;
  LODWORD(v566) = v298 ^ 0xCC000000;
  v572 = (((16178 * ((v564 - 1829778689) ^ 0xEB503D55)) & 0x5FE6FF66)
        + ((8089 * ((v564 - 1829778689) ^ 0xEB503D55)) ^ 0x2FF37FB3)
        - 710484822)
       % 0x3084;
  LODWORD(v298) = ((16178 * ((v553 - 1161370251) ^ 0xF8C2A63F)) & 0xFDCFFAF2)
                + ((8089 * ((v553 - 1161370251) ^ 0xF8C2A63F)) ^ 0xFEE7FD79)
                + 112352996;
  v573 = *(_DWORD *)(v525 + 4 * v558) ^ *(_DWORD *)(v67 - 252) ^ *(_DWORD *)(v525 + 4 * v570) ^ *(_DWORD *)(v525 + 4 * v294);
  LODWORD(v296) = ((((v296 & 0xDD ^ 0x42CC9391) & 0x2000422 | v296 & 0x22) ^ 0x202822)
                 + ((v296 & 0xDD ^ 0x42CC9391 | v296 & 0x22) ^ 0x6B04451D)
                 - (((v296 & 0xDD ^ 0x42CC9391 | v296 & 0x22) ^ 0x6B04451D) & 0x29804422)) ^ 0x268BA14;
  LODWORD(v294) = *(_DWORD *)(v92
                            + 4
                            * ((((16178 * (_DWORD)v296) & 0x6EFBEDEE) + ((8089 * (_DWORD)v296) ^ 0xB77DF6F7) + 1314673916)
                             % 0x3084));
  LODWORD(v296) = v573 ^ *(_DWORD *)(v92
                                   + 4
                                   * ((((16178 * v556) & 0x9BFFFFDE) + ((8089 * v556) ^ 0xCDFFFFEF) + 937053188) % 0x3084));
  v574 = *(_DWORD *)(v525 + 4 * v572) ^ LODWORD(STACK[0x59C]) ^ *(_DWORD *)(v525 + 4 * v571) ^ v294 ^ ((v566 >> 26) - ((2 * (v566 >> 26)) & 0xC0B2F6B0) - 531006632);
  v575 = (-586429516 - (BYTE2(v296) ^ 0xB9 | 0xDD0BCBB4) + (BYTE2(v296) ^ 0xB9 | 0x22F4344B)) ^ 0x207CF44A;
  v576 = *(_DWORD *)(v525 + 4 * (v551 - 12420 * (((177055013 * (unint64_t)v551) >> 32) >> 9))) ^ LODWORD(STACK[0x5A8]) ^ *(_DWORD *)(v525 + 4 * v555) ^ *(_DWORD *)(v525 + 4 * ((((16178 * v569) & 0xD9E7F742) + ((8089 * v569) ^ 0xECF3FBA1) + 325783185) % 0x3084)) ^ *(_DWORD *)(v525 + 4 * (v298 % 0x3084));
  LODWORD(v298) = (((v296 >> 8) & 0xF9 ^ 0x7C9) + ((v296 >> 8) & 6 ^ 3) - 1) ^ 0x7D2;
  v577 = (((16178 * (_DWORD)v298) & 0x33D3FD6) + ((8089 * (_DWORD)v298) ^ 0x5F9E9FEBu) - 1598002617) % 0x3084;
  LODWORD(v298) = ((unsigned __int16)(*(_WORD *)(v525 + 4 * v572) ^ LOWORD(STACK[0x59C]) ^ *(_WORD *)(v525 + 4 * v571) ^ v294 ^ ((v566 >> 26) - ((2 * (v566 >> 26)) & 0xF6B0) + 31576)) >> 8) ^ 0x6029C086;
  LODWORD(v294) = ((2 * v298) & 0x404101A6) - v298;
  LODWORD(v298) = (((2 * (BYTE1(v576) ^ 0x92)) | 0xDF179FDE) - (BYTE1(v576) ^ 0x92) - 1871433711) ^ 0x6EBF6FFC;
  v578 = ((2 * v298) | 0x4C6D7D92) - v298;
  LODWORD(v298) = ((16178 * (BYTE1(v568) ^ 0xEB)) & 0x27DE76) + ((8089 * (BYTE1(v568) ^ 0xEB)) ^ 0x37D3EF3B) - 930407689;
  v579 = v298 - 12420 * (((22131877 * (unint64_t)v298) >> 32) >> 6);
  v580 = (((2 * v575) & 0x2F72B854) - v575 + 675718101) ^ 0x2ACE6307;
  v581 = (((16178 * v580) & 0xA7B3BFFE) + ((8089 * v580) ^ 0x53D9DFFF) - 1312785314) % 0x3084;
  LODWORD(v298) = (567380902 - (BYTE2(v568) ^ 0xCC1BE51B | 0x21D18BA6) + (BYTE2(v568) ^ 0xCC1BE51B | 0xDE2E7459)) ^ 0x123591CC;
  v582 = (((16178 * (_DWORD)v298) & 0x779F7BFE) + ((8089 * (_DWORD)v298) ^ 0xBBCFBDFF) + 1238015582) % 0x3084;
  LODWORD(v298) = ((BYTE2(v576) ^ 0x77) + (HIWORD(v576) & 0x2E ^ 0x7665E708) - ((BYTE2(v576) ^ 0x77) & 0x2E)) ^ 0x1B5D622A;
  v583 = ((2 * v298) & 0xCA21406E) - v298;
  LODWORD(v298) = ((v574 ^ 0x9B)
                 + (v574 & 0x8F ^ 0x6A938104)
                 - ((v574 ^ 0x9B) & 0xFFFFFF8F)) ^ 0x50724E8E;
  v584 = ((2 * v298) | 0xDEBD6FEE) - v298;
  LODWORD(v298) = ((16178 * (HIBYTE(v568) ^ 0xAF)) & 0x1C77AC)
                + ((8089 * (HIBYTE(v568) ^ 0xAF)) ^ 0xFFCE3BD6)
                + 71742956;
  v585 = v298 - 12420 * (((177055013 * (unint64_t)v298) >> 32) >> 9);
  LODWORD(v298) = HIBYTE(v574) ^ 0x9E;
  v586 = (((2 * (v296 ^ 0xA02628F4)) & 0x40484180) - (v296 ^ 0xA02628F4) - 1650815169) ^ 0x3DBCA778;
  LODWORD(v449) = (((16178 * v586) & 0x7769EF4A) + ((8089 * v586) ^ 0x3BB4F7A5) - 903523250) % 0x3084;
  v587 = (BYTE2(v574) ^ 0x108C8F2) - ((2 * (BYTE2(v574) ^ 0x108C8F2)) & 0x1081CE);
  v588 = ((16178 * ((v578 + 1506361655) ^ 0xA7021E41)) & 0xDFD95FC2)
       + ((8089 * ((v578 + 1506361655) ^ 0xA7021E41)) ^ 0x6FECAFE1)
       - 1871553967;
  v589 = (((16178 * ((v583 + 141303752) ^ 0x65549A86)) & 0x82AF7FBE)
        + ((8089 * ((v583 + 141303752) ^ 0x65549A86)) ^ 0x4157BFDF)
        - 1002267522)
       % 0x3084;
  v590 = ((v576 & 0x6E ^ 0xA4FC3423) + (v576 & 0x91) - 1) ^ 0xA4FC34B1;
  v591 = ((16178 * (HIBYTE(v576) ^ 0x37)) & 0x37DE7E) + ((8089 * (HIBYTE(v576) ^ 0x37)) ^ 0x75BBEF3F) - 1906769277;
  v592 = ((16178 * ((v294 + 1163489836) ^ 0x2570B226)) & 0xDD5ED7BE)
       + ((8089 * ((v294 + 1163489836) ^ 0x2570B226)) ^ 0x6EAF6BDF)
       - 1850761645;
  LODWORD(v294) = ((16178 * v590) & 0x7FD7766C) + ((8089 * v590) ^ 0x3FEBBB36) - 974221123;
  v593 = (v568 ^ 6) - ((2 * (v568 ^ 6)) & 0xFFFFFF8F);
  LODWORD(v298) = ((16178 * v298) & 0x27FFBC) + ((8089 * v298) ^ 0x1CD3FFDE) - 415174172;
  v594 = LODWORD(STACK[0x598]) ^ *(_DWORD *)(v525 + 4 * v585) ^ *(_DWORD *)(v525 + 4 * v449) ^ *(_DWORD *)(v525 + 4 * v589) ^ *(_DWORD *)(v525 + 4 * (v592 % 0x3084));
  v595 = *(_DWORD *)(v525 + 4 * v582) ^ *(_DWORD *)(v67 - 244) ^ *(_DWORD *)(v525 + 4 * (v588 % 0x3084)) ^ *(_DWORD *)(v525 + 4 * ((((16178 * (BYTE3(v296) ^ 0xF0)) & 0x3EBB7C) + ((8089 * (BYTE3(v296) ^ 0xF0)) ^ 0x7DDF5DBE) - 2043309052) % 0x3084u)) ^ *(_DWORD *)(v525 + 4 * ((((16178 * ((v584 + 279005193) ^ 0xD5BF78FE)) & 0xF6F9DFB4) + 173890094 + ((8089 * ((v584 + 279005193) ^ 0xD5BF78FE)) ^ 0xFB7CEFDA) + 491) % 0x3084));
  v596 = *(_DWORD *)(v525 + 4 * v579) ^ *(_DWORD *)(v67 - 232) ^ *(_DWORD *)(v525 + 4
                                                                                    * (v294 % 0x3084)) ^ *(_DWORD *)(v525 + 4 * v581) ^ *(_DWORD *)(v525 + 4 * (v298 - 12420 * (((177055013 * (unint64_t)v298) >> 32) >> 9)));
  v597 = *(_DWORD *)(v525 + 4 * v577) ^ *(_DWORD *)(v67 - 228) ^ *(_DWORD *)(v525
                                                                             + 4
                                                                             * (v591
                                                                              - 12420
                                                                              * (((177055013
                                                                                               * (unint64_t)v591) >> 32) >> 9))) ^ *(_DWORD *)(v525 + 4 * ((((16178 * ((v593 + 3271) ^ 0xC5A)) & 0xEEFFFEFE) + ((8089 * ((v593 + 3271) ^ 0xC5A)) ^ 0x777FFF7F) - 1906684812) % 0x3084)) ^ *(_DWORD *)(v525 + 4 * ((((16178 * ((v587 + 419063527) ^ 0x19F2AEFF)) & 0x3BFFFD94) + ((8089 * ((v587 + 419063527) ^ 0x19F2AEFF)) ^ 0x1DFFFECAu) - 409313901) % 0x3084));
  v598 = ((16178 * (HIBYTE(v594) ^ 0x51)) & 0x3EBF76) + ((8089 * (HIBYTE(v594) ^ 0x51)) ^ 0xFBFF5FBB) + 159065200;
  LODWORD(v298) = (888632454 - (BYTE1(v594) ^ 0x3B) + ((2 * (BYTE1(v594) ^ 0x3B)) & 0xF2)) ^ 0x34F7748B;
  LODWORD(v296) = (((16178 * (_DWORD)v298) & 0x1D34F9E) + ((8089 * (_DWORD)v298) ^ 0xFFE9A7CF) + 89181485) % 0x3084;
  BYTE2(v577) = BYTE2(v597) ^ 0x8D;
  v599 = (((2 * (((unsigned __int16)(v597 ^ 0xF97) >> 8) ^ 0x6A)) & 0x17C)
        - (((unsigned __int16)(v597 ^ 0xF97) >> 8) ^ 0x6A)
        + 1345) ^ 0x50F;
  LODWORD(v294) = v595 ^ 0x365FC18A;
  LODWORD(v298) = ((2 * (v595 ^ 0xD6)) | 0x1AAF8E3A) - (v595 ^ 0xD6);
  v600 = ((v596 ^ 0x1BE49A0A) >> 16) ^ 0xA;
  v601 = (((2 * v600) | 0xFA26893A) - v600 + 49068899) ^ 0xDF368608;
  v602 = ((2 * v601) & 0x787CDF34) - v601;
  v603 = (59226093
        - (((unsigned __int16)(v596 ^ 0x9A0A) >> 8) ^ 0x5C | 0x387B7ED)
        + (((unsigned __int16)(v596 ^ 0x9A0A) >> 8) ^ 0x5C | 0x7C784812)) ^ 0x7C784853;
  v604 = ((16178 * (HIBYTE(v595) ^ 0xB3)) & 0x1CFD5C) + ((8089 * (HIBYTE(v595) ^ 0xB3)) ^ 0x68EE7EAE) - 1668545155;
  v605 = (((v597 ^ 0x118D0F97) & 0x62 ^ 0xA989B23) + ((v597 ^ 0x118D0F97) & 0x9D) - 1) ^ 0xDB99D9E4;
  v606 = ((16178 * (BYTE2(v294) ^ 0x6B)) & 0x1CEFBC) + ((8089 * (BYTE2(v294) ^ 0x6B)) ^ 0xFBAE77DE) + 76593698;
  v607 = HIBYTE(v596) ^ 0x49;
  v608 = ((v596 ^ 1) - ((2 * (v596 ^ 1)) & 0xFFFFFF3F) + 671) ^ 0x2B7;
  v609 = (((16178 * v608) & 0xEE7BFBA6) + ((8089 * v608) ^ 0xF73DFDD3) + 204978933) % 0x3084;
  v610 = ((16178 * (BYTE2(v594) ^ 0x8E)) & 0x35FEDE) + ((8089 * (BYTE2(v594) ^ 0x8E)) ^ 0x6F7AFF6F) - 1866190191;
  v611 = ((16178 * v607) & 0x37FF9A) + ((8089 * v607) ^ 0xCFFBFFCD) + 897483870;
  LODWORD(v449) = (((16178 * v599) & 0x1F3FF5A) + ((8089 * v599) ^ 0x77F9FFADu) - 1925155505) % 0x3084;
  v612 = (1612300578 - (v605 | 0x6019C122) + (v605 | 0x9FE63EDD)) ^ 0x4EE77CEC;
  v613 = (((16178 * v612) & 0xE37FE7FC) + ((8089 * v612) ^ 0x71BFF3FE) - 1850358582) % 0x3084;
  v614 = 1309107324 - (BYTE1(v294) ^ 5) + 2 * ((BYTE1(v294) ^ 5) & 0x7F);
  v615 = ((v594 & 0x47 ^ 0xB3FA8A42) + (v594 & 0xB8 ^ 0x19) - 1) ^ 0x31CE2A4F;
  LODWORD(v294) = ((2 * v615) & 0x10844) - v615;
  v616 = ((16178 * ((v602 - 1010724763) ^ 0xE1E45225)) & 0x7F7FEEFE)
       + ((8089 * ((v602 - 1010724763) ^ 0xE1E45225)) ^ 0x3FBFF77F)
       - 1065403775;
  v617 = HIBYTE(v597) ^ 0x3C;
  v618 = v547 ^ *(_DWORD *)(v525 + 4 * v609) ^ *(_DWORD *)(v525
                                                           + 4
                                                           * (v604
                                                            - 12420
                                                            * (((177055013 * (unint64_t)v604) >> 32) >> 9))) ^ *(_DWORD *)(v525 + 4 * (v610 % 0x3084)) ^ *(_DWORD *)(v525 + 4 * v449);
  v619 = ((16178 * v617) & 0x3F8676) + ((8089 * v617) ^ 0xDDFFC33B) + 662356208;
  v620 = v619 - 12420 * (((177055013 * (unint64_t)v619) >> 32) >> 9);
  v621 = a30 ^ *(_DWORD *)(v525
                         + 4 * (v611 - 12420 * (((177055013 * (unint64_t)v611) >> 32) >> 9))) ^ *(_DWORD *)(v525 + 4 * v296) ^ *(_DWORD *)(v525 + 4 * (v606 - 12420 * (((11065939 * (unint64_t)v606) >> 32) >> 5))) ^ *(_DWORD *)(v525 + 4 * v613);
  LODWORD(v298) = v547 ^ 0x7C140A17 ^ LODWORD(STACK[0x2E4]) ^ *(_DWORD *)(v525
                                                                        + 4
                                                                        * (v598
                                                                         - 12420
                                                                         * (((177055013
                                                                                          * (unint64_t)v598) >> 32) >> 9))) ^ *(_DWORD *)(v525 + 4 * ((((16178 * (BYTE2(v577) ^ 0xF5)) & 0x3FDDDC) + ((8089 * (BYTE2(v577) ^ 0xF5)) ^ 0x97FFEEEE) + 1748976402) % 0x3084)) ^ *(_DWORD *)(v525 + 4 * ((((16178 * v603) & 0xFBBFFEBE) + ((8089 * v603) ^ 0xFDDFFF5F) + 123368861) % 0x3084)) ^ *(_DWORD *)(v525 + 4 * ((((16178 * (((_DWORD)v298 + 1655191779) & 0x1FFFFFFF ^ 0x1D57C7A9)) & 0x5DFD8376) + ((8089 * (((_DWORD)v298 + 1655191779) & 0x1FFFFFFF ^ 0x1D57C7A9)) ^ 0xEEFEC1BB) + 343340813) % 0x3084));
  LODWORD(v296) = v547 ^ 0x7C140A17 ^ a32 ^ *(_DWORD *)(v525 + 4 * (v616 % 0x3084)) ^ *(_DWORD *)(v525 + 4 * v620) ^ *(_DWORD *)(v525 + 4 * ((((16178 * (((_DWORD)v294 - 403213347) ^ 0x65C3D3F8)) & 0xFFFC9FF8) + ((8089 * (((_DWORD)v294 - 403213347) ^ 0x65C3D3F8)) ^ 0xFFFE4FFC) + 58157260) % 0x3084)) ^ *(_DWORD *)(v525 + 4 * ((((16178 * ((v614 + 4) ^ 0x4E07647C)) & 0xF7EFEE) + ((8089 * ((v614 + 4) ^ 0x4E07647C)) ^ 0xDA7BF7F7) + 717126917) % 0x3084));
  v622 = (LODWORD(STACK[0x2E4]) ^ *(_DWORD *)(v525 + 4 * *(unsigned int *)(v67 - 240)) ^ *(_DWORD *)(v525 + 4 * *(unsigned int *)(v67 - 216)) ^ *(_DWORD *)(v525 + 4 * LODWORD(STACK[0x594])) ^ *(_DWORD *)(v525 + 4 * LODWORD(STACK[0x590])) ^ 0x594D0E0A)
       + ((-423956990 * (v621 ^ 0x4112009D)) & 0xF3B9A7F2)
       + ((1935505153 * (v621 ^ 0x4112009D)) ^ 0x79DCD3F9)
       - 2044515321;
  v623 = v618 ^ 0x5C52CFF0;
  v624 = a30 ^ *(_DWORD *)(v525 + 4 * LODWORD(STACK[0x584])) ^ *(_DWORD *)(v525 + 4 * LODWORD(STACK[0x570])) ^ *(_DWORD *)(v525 + 4 * LODWORD(STACK[0x578])) ^ *(_DWORD *)(v525 + 4 * LODWORD(STACK[0x4C0])) ^ LODWORD(STACK[0x56C]) ^ 0xFD93A08C ^ v618 ^ 0x5C52CFF0;
  v625 = ((-1935505153 * (v547 ^ 0x1F8978AC ^ v624)) ^ 0x1E6FF9FF)
       + ((423956990 * (v547 ^ 0x1F8978AC ^ v624)) & 0x3CDFF3FE)
       + (v622 ^ 0xFFFF1F4F);
  v626 = v625
       + ((2 * v622) & 0xFFFE3E9E)
       - 2 * ((v625 + ((2 * v622) & 0xFFFE3E9E) + 1636886194) & 0x66513A9B ^ v625 & 1)
       + 1206001996;
  v627 = (a32 ^ *(_DWORD *)(v525 + 4 * *(unsigned int *)(v67 - 192)) ^ *(_DWORD *)(v525
                                                                                   + 4 * *(unsigned int *)(v67 - 224)) ^ *(_DWORD *)(v525 + 4 * LODWORD(STACK[0x588])) ^ 0xBB0D87CB ^ *(_DWORD *)(v525 + 4 * LODWORD(STACK[0x58C])))
       + ((967176202 * (v547 ^ 0xBDCEF019 ^ v298)) & 0xAFAFB7E2)
       + ((483588101 * (v547 ^ 0xBDCEF019 ^ v298)) ^ 0xD7D7DBF1)
       + 673719311;
  v628 = ((2 * v627) & 0xCFFF6F6E)
       + (v627 ^ 0xE7FFB7B7)
       + ((1180307446 * (v626 ^ 0xFEC6CE9E)) & 0x7CBFDEF4)
       + ((-483588101 * (v626 ^ 0xFEC6CE9E)) ^ 0x3E5FEF7A);
  v629 = v628 - ((2 * v628 + 859877790) & 0x52A57ED0) - 2097997769;
  LODWORD(v303) = a29 ^ LODWORD(STACK[0x56C]) ^ (1992582169 * (v547 ^ 0xA0D0B52 ^ v296 ^ 0xE3134BEB)
                                               - ((1837680690 * (v547 ^ 0xA0D0B52 ^ v296 ^ 0xE3134BEB)) & 0x71998AE0)
                                               + 952943984) ^ (1992582169 * (v629 ^ 0x8755720D)
                                                             - ((-309802958 * (v629 ^ 0x8755720D)) & 0xAF418632)
                                                             - 677330151);
  v630 = v621 ^ v547 ^ 0x7C140A17;
  v631 = v296 ^ 0xE3134BEB ^ v624 ^ v629;
  v632 = v626 ^ (-161556435 * (v630 ^ 0x1C9F9E15) - ((750628954 * (v630 ^ 0x1C9F9E15)) & 0x31D34796) + 417965003) ^ (-161556435 * (v547 ^ 0xB348956C ^ v631) - ((1824370778 * (v547 ^ 0xB348956C ^ v631)) & 0x60E76B0E) + 812889479);
  v633 = v547 ^ 0x2FAB3BBA ^ v632;
  LODWORD(v294) = v298 ^ 0x44391371;
  v634 = (234680102 * (v298 ^ 0x44391371)) & 0x3FEFED92;
  LODWORD(v298) = a19 ^ v623;
  v635 = (v547 ^ 0x7C140A17 ^ a19 ^ v623 ^ v629 ^ 0xBB3E9CA5 ^ v303)
       + ((1912803546 * v633) & 0xFF57FDFA)
       + ((-1191081875 * v633) ^ 0x7FABFEFD)
       - 2141978365;
  v636 = (v631 ^ 0xD2288200) + ((982148906 * v633) & 0xFEDFEB56) + ((-1656409195 * v633) ^ 0xFF6FF5AB) + 9439829;
  v637 = ((1191081875 * v294) ^ 0x1FF7F6C9) + v634 + (v635 ^ 0xFF8EFD7D) + ((2 * v635) & 0xFF1DFAFA);
  v638 = v637 - 869141824 + (~(2 * v637 - 1057876108) | 0x288E31F5);
  v639 = ((1656409195 * v294) ^ 0xEEBFFFF7)
       + ((-982148906 * v294) & 0xDD7FFFEE)
       + (v636 ^ 0x7BFED49F)
       + ((2 * v636) & 0xF7FDA93E);
  v640 = v639 - ((2 * v639 + 713184980) & 0x5CCDE46A) + 1135091103;
  LODWORD(v303) = ((261288934 * (v547 ^ 0x4F67DA09)) & 0x7F8B77D8)
                + ((130644467 * (v547 ^ 0x4F67DA09)) ^ 0x3FC5BBEC)
                - 1069923308
                + (v303 ^ 0x32C320E);
  LODWORD(v296) = ((2 * v303) & 0xEBFBDE6E)
                + (v303 ^ 0xF5FDEF37)
                + ((-261288934 * (v296 ^ 0x63C6B0D0 ^ v638)) & 0xCBDFAFDE)
                + ((-130644467 * (v296 ^ 0x63C6B0D0 ^ v638)) ^ 0xE5EFD7EF);
  LODWORD(v296) = v296 + 76508857 - ((2 * v296 + 1210347956) & 0xC0FA4EFE) - 3680;
  LODWORD(v298) = v298 ^ v630;
  v641 = (BYTE1(v296) ^ 0xB | 0xADFB712) - (BYTE1(v296) ^ 0xB | 0xF52048ED) - 182433555;
  v642 = ((v641 & 0xDD987A ^ 0x55000848) + (v641 ^ 0x2AFFF632) - ((v641 ^ 0x2AFFF632) & 0x55FDD87A)) ^ 0x75DD9910;
  v643 = v298 ^ v632 ^ v640 ^ v296;
  v644 = *(_QWORD *)(v67 - 168);
  *(_BYTE *)(((LODWORD(STACK[0x4CC]) + 539400382 - ((2 * LODWORD(STACK[0x4CC])) & 0x404D317Cu)) ^ 0x7CF67F7AFFD167E1)
           + a34
           + ((2 * ((LODWORD(STACK[0x4CC]) + 539400382 - ((2 * LODWORD(STACK[0x4CC])) & 0x404D317C)) ^ 0x202698BEu)) & 0x1BFEFFEBELL)
           - 0x7CF67F7ADFF7FF5FLL) = *(_BYTE *)(v644
                                              + (((52610 * (HIBYTE(v640) ^ 0x222)) & 0x3BE7EFC)
                                               + ((26305 * (HIBYTE(v640) ^ 0x222)) ^ 0x37DF3F7E)
                                               - 937377662)
                                              % 0x10C80u) ^ 0xB8;
  LODWORD(v298) = (2002509494 - (BYTE2(v638) ^ 0x8A89F4AA | 0x775BDEB6) + (BYTE2(v638) ^ 0x8A89F4AA | 0x88A42149)) ^ 0x22DD549;
  v645 = STACK[0x538];
  *(_BYTE *)(a34 + v645) = *(_BYTE *)(v644
                                    + (((52610 * (BYTE3(v296) ^ 0x14)) & 0x72BB62)
                                     + ((26305 * (BYTE3(v296) ^ 0x14)) ^ 0xFB395DB1)
                                     + 93594703)
                                    % 0x10C80) ^ 0xA7;
  *(_BYTE *)(((LODWORD(STACK[0x4F8]) + 135989757 + ((2 * (STACK[0x4F8] & 0x81B09FD ^ LODWORD(STACK[0x4E8]))) ^ 7u) + 2) ^ 0x79FD938E06E57707)
           + ((2
             * ((LODWORD(STACK[0x4F8]) + 135989757 + ((2 * (STACK[0x4F8] & 0x81B09FD ^ LODWORD(STACK[0x4E8]))) ^ 7) + 2) ^ 0x81B09FE)) & 0x1DFCFDF2)
           + a34
           - 0x79FD938E0EFE7EF9) = *(_BYTE *)(v644
                                              + (((52610 * v642) & 0x3DFE37DE)
                                               + ((26305 * v642) ^ 0x1EFF1BEFu)
                                               + 1244767139)
                                              % 0x10C80) ^ 0xE5;
  *(_BYTE *)(a34 + STACK[0x4F0]) = *(_BYTE *)(v644
                                            + (((52610 * (HIBYTE(v643) ^ 0x295)) & 0x3C7F15C)
                                             + ((26305 * (HIBYTE(v643) ^ 0x295)) ^ 0xFDE3F8AE)
                                             + 35391314)
                                            % 0x10C80) ^ 0x12;
  v646 = (((2 * (v640 ^ 0xB8)) | 0x4D20D2C6) - (v640 ^ 0xB8) - 646998371) ^ 0xDB05B51;
  *(_BYTE *)(a34 + STACK[0x4D8]) = *(_BYTE *)(v644
                                            + (((52610 * (_DWORD)v298) & 0xFFB765DE)
                                             + ((26305 * (_DWORD)v298) ^ 0x7FDBB2EF)
                                             - 2124797163)
                                            % 0x10C80) ^ 0xAE;
  v647 = (((2 * v646) & 0x3C901DEA) - v646 - 1581780726) ^ 0x8A97C2C1;
  v648 = ((2 * (v638 ^ 0xBBB1AB7)) | 0xB2852736) - (v638 ^ 0xBBB1AB7) - 1497535387;
  *(_BYTE *)(a34 + STACK[0x518]) = *(_BYTE *)(v644
                                            + (((52610 * (v643 ^ 0x157)) & 0x1EFDFBE)
                                             - 2146959326
                                             + ((26305 * (v643 ^ 0x157)) ^ 0x7FF7EFDFu)
                                             + 4095)
                                            % 0x10C80) ^ 0xED;
  LODWORD(v303) = ((v648 & 0x9B032339 ^ 0x9010201) + (v648 ^ 0xD2DAF57A) - ((v648 ^ 0xD2DAF57A) & 0x9B032339)) ^ 0x1B205F21;
  *(_BYTE *)(a34 + STACK[0x4E0]) = *(_BYTE *)(v644
                                            + (((52610 * v647) & 0xB53E3AF2) + ((26305 * v647) ^ 0xDA9F1D79) + 627106439)
                                            % 0x10C80) ^ 0xB4;
  *(_BYTE *)(a34 + STACK[0x510]) = *(_BYTE *)(v644
                                            + (((52610 * (_DWORD)v303) & 0xFFB97CF6)
                                             + ((26305 * (_DWORD)v303) ^ 0xFFDCBE7B)
                                             + 9044613)
                                            % 0x10C80) ^ 0xD4;
  v649 = (-1369657077 - (BYTE2(v640) ^ 0x22 | 0xAE5CB10B) + (BYTE2(v640) ^ 0x22 | 0x51A34EF4)) ^ 0x51A34E62;
  *(_BYTE *)(a34 + STACK[0x508]) = *(_BYTE *)(v644
                                            + (((52610 * (BYTE1(v638) ^ 0x41)) & 0xDC2D6A)
                                             + ((26305 * (BYTE1(v638) ^ 0x41)) ^ 0x17EE16B5u)
                                             + 1363323101)
                                            % 0x10C80) ^ 0x4B;
  LOBYTE(v303) = *(_BYTE *)(v644 + (((52610 * v649) & 0xF7F68EFE) + ((26305 * v649) ^ 0x7BFB477F) - 2059757947)
                                 % 0x10C80);
  v650 = LODWORD(STACK[0x524]) - 2150178 - ((2 * LODWORD(STACK[0x524])) & 0xFFBE61BC);
  *(_BYTE *)(a34 + STACK[0x4D0]) = v303 ^ 0x56;
  LODWORD(v298) = (((v640 >> 8) & 1) + 67153919 + ((v640 >> 8) & 0xFE ^ 0x5A9640EB)) ^ 0x5E96F01D;
  v651 = ((v296 & 0xE6 ^ 0xD1765467) + (v296 & 0x19) - 1) ^ 0xD17655FC;
  *(_BYTE *)(a34 + STACK[0x500]) = *(_BYTE *)(v644
                                            + (((52610 * (_DWORD)v298) & 0x1BFDF25E)
                                             + ((26305 * (_DWORD)v298) ^ 0x6DFEF92Fu)
                                             - 80624029)
                                            % 0x10C80) ^ 0xAF;
  v652 = LODWORD(STACK[0x528]);
  *(_BYTE *)((v650 ^ 0x376FDFEF94468B2DLL) + ((2 * (v650 ^ 0xFFDF30DE)) & 0xD73377E6) + a34 - 0x376FDFEF6B99BBF3) = *(_BYTE *)(v644 + (((52610 * (HIBYTE(v638) ^ 0x52)) & 0x7FF57E) + ((26305 * (HIBYTE(v638) ^ 0x52)) ^ 0xB23FFABF) + 1317898049) % 0x10C80) ^ 0x33;
  *(_BYTE *)((((_DWORD)v652 + 223025286 - ((2 * (_DWORD)v652) & 0x1A96310Cu)) ^ 0x7777FEFFC3B9B769)
           + a34
           + ((2 * (((_DWORD)v652 + 223025286 - ((2 * (_DWORD)v652) & 0x1A96310C)) ^ 0xD4B1886u)) & 0x19DE55FDELL)
           - 0x7777FEFFCEF2AFEFLL) = *(_BYTE *)(v644
                                              + (((52610 * v651) & 0xFFFFB562) + ((26305 * v651) ^ 0xFFFFDAB1) + 9551)
                                              % 0x10C80) ^ 0xC6;
  LODWORD(v298) = (((v296 >> 15) & 0x14) + 825108847 + (BYTE2(v296) ^ 0xFFFFFFCE) + 135) ^ 0x312E296F;
  LODWORD(v303) = LODWORD(STACK[0x52C]) - 675842944 - ((2 * LODWORD(STACK[0x52C])) & 0xAF6EE900);
  v653 = ((((v643 ^ 0xC4A3EE46) >> 8) & 0xEC) + 1314149651 - (((v643 ^ 0xC4A3EE46) >> 8) & 0x13)) ^ 0x4E545515;
  *(_BYTE *)(a34 + STACK[0x530]) = *(_BYTE *)(v644
                                            + (((52610 * (_DWORD)v298) & 0xDFDAFF6)
                                             + ((26305 * (_DWORD)v298) ^ 0x7EFED7FBu)
                                             - 2110323191)
                                            % 0x10C80);
  LOBYTE(v298) = *(_BYTE *)(v644 + (((52610 * v653) & 0xFB3E56) + ((26305 * v653) ^ 0xF7FD9F2B) + 1899176039) % 0x10C80) ^ 0x3B;
  v654 = ((v643 ^ 0xC4A3EE46) >> 16) ^ 0x1246208E;
  *(_BYTE *)((v303 ^ 0xBFF77FEF0000533BLL)
           + a34
           + ((2 * (v303 ^ 0xD7B77480)) & 0x1AF6E4F76)
           + 0x400880102848D845) = v298;
  LODWORD(v298) = (v654 + (((v643 ^ 0xC4A3EE46) >> 16) & 0x44 ^ 0x60280740) - (v654 & 0x10420044)) ^ 0x622C2714;
  *(_BYTE *)(((LODWORD(STACK[0x544]) + 330348564 + ((2 * LODWORD(STACK[0x544])) & 0x27617020 ^ 0xFFFFFFF7) + 1) ^ 0xFBBFF79FE5C5476ALL)
           + a34
           + ((2
             * ((LODWORD(STACK[0x544]) + 330348564 + ((2 * LODWORD(STACK[0x544])) & 0x27617020 ^ 0xFFFFFFF7) + 1) ^ 0x13B0B814)) & 0x1ECEBFEFCLL)
           + 0x4400860098A0082) = *(_BYTE *)(v644
                                             + (((52610 * (_DWORD)v298) & 0x37CF5BD6)
                                              + ((26305 * (_DWORD)v298) ^ 0x7BE7ADEBu)
                                              - 2058473447)
                                             % 0x10C80) ^ 0x31;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 200) + 8 * (*(_DWORD *)(v67 - 204) ^ (232 * ((((_DWORD)v645 + 173890094 - ((2 * (_DWORD)v645 + 32) & 0x14BAB45C) + 16) ^ 0xA5D5A2Eu) >= a28)))))(16465494, 0x19DE55FDELL, 11, 4292817118, a34, 4160593707, v652, v645, a7, a8, a9);
}

uint64_t sub_100120848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;

  v10 = STACK[0x378];
  LODWORD(STACK[0x548]) = LODWORD(STACK[0x378]) ^ LODWORD(STACK[0x39C]);
  LODWORD(STACK[0x550]) = v10 ^ LODWORD(STACK[0x3C4]);
  LODWORD(STACK[0x564]) = v10 ^ LODWORD(STACK[0x388]);
  LODWORD(STACK[0x54C]) = v10 ^ LODWORD(STACK[0x3AC]);
  v11 = STACK[0x380];
  LODWORD(STACK[0x57C]) = LODWORD(STACK[0x380]) ^ LODWORD(STACK[0x3B8]);
  LODWORD(STACK[0x560]) = v11 ^ LODWORD(STACK[0x3B4]);
  LODWORD(STACK[0x580]) = v11 ^ LODWORD(STACK[0x390]);
  LODWORD(STACK[0x578]) = v11 ^ LODWORD(STACK[0x398]);
  v12 = STACK[0x37C];
  LODWORD(STACK[0x554]) = LODWORD(STACK[0x37C]) ^ LODWORD(STACK[0x3BC]);
  LODWORD(STACK[0x558]) = v12 ^ LODWORD(STACK[0x3A0]);
  LODWORD(STACK[0x55C]) = v12 ^ LODWORD(STACK[0x3A8]);
  LODWORD(STACK[0x570]) = v12 ^ LODWORD(STACK[0x38C]);
  v13 = STACK[0x384];
  LODWORD(STACK[0x574]) = LODWORD(STACK[0x384]) ^ LODWORD(STACK[0x3C0]);
  LODWORD(STACK[0x588]) = v13 ^ LODWORD(STACK[0x394]);
  LODWORD(STACK[0x56C]) = v13 ^ LODWORD(STACK[0x3B0]);
  LODWORD(STACK[0x568]) = v13 ^ LODWORD(STACK[0x3A4]);
  v14 = STACK[0x3C8];
  LODWORD(STACK[0x594]) = v7 ^ 0x84970D28;
  LODWORD(STACK[0x58C]) = v6 ^ 0xFFA7BB05;
  LODWORD(STACK[0x584]) = v8 ^ 0x5068262C;
  LODWORD(STACK[0x590]) = v5 ^ 0x65ABB88A;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v9 + 8 * v14)
                                                                                                - (v14
                                                                                                 + 1455)
                                                                                                + 18067))(a1, a2, a3, a4, a5, STACK[0x370]);
}

uint64_t sub_10012097C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, char a12, __int16 a13, char a14, __int16 a15, char a16, __int16 a17, char a18, __int16 a19, char a20,__int16 a21,char a22,__int16 a23,char a24,__int16 a25,char a26,__int16 a27,char a28,__int16 a29,char a30,__int16 a31,char a32,__int16 a33,char a34,__int16 a35,char a36,__int16 a37,char a38,__int16 a39,char a40,uint64_t a41,_BYTE *a42,int a43)
{
  uint64_t v43;
  char v45;
  char v46;

  a42[12] = a12 - ((2 * a12) & 0x10) + 8;
  a42[3] = a16 + (~(2 * a16) | 0xEF) + 9;
  a42[10] = a14 - ((2 * a14) & 0x10) + 8;
  a42[4] = a10 - ((2 * a10) & 0x10) + 8;
  a42[15] = a20 - ((2 * a20) & 0x10) + 8;
  a42[13] = a18 - ((2 * a18) & 0x10) + 8;
  a42[9] = a24 - ((2 * a24) & 0x10) + 8;
  v45 = ((2 * (a26 ^ 0x4D)) & 0xA) - ((a26 ^ 0x4D) & 0x1D) + 56;
  a42[7] = a22 - ((2 * a22) & 0x10) + 8;
  v46 = ((2 * (a26 ^ 0x7D)) & 0x48) - ((a26 ^ 0x7D) & 0xA4) - 48;
  a42[2] = a28 - ((2 * a28) & 0x10) + 8;
  a42[8] = a30 + (~(2 * a30) | 0xEF) + 9;
  a42[6] = a32 - ((2 * a32) & 0x10) + 8;
  a42[1] = a34 - ((2 * a34) & 0x10) + 8;
  a42[11] = a38 - ((2 * a38) & 0x10) + 8;
  *a42 = (a26 ^ 0x4D) & 0x66 ^ v45 ^ 0xAD ^ (v46 & 0x60 ^ (a26 ^ 0x7D) & 0x20 | v46 & 0x9F);
  a42[5] = a36 - ((2 * a36) & 0x10) + 8;
  a42[14] = a40 - ((2 * a40) & 0x10) + 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v43 + 8 * a43) - 12))();
}

void sub_100120B74()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 32) = v0;
}

void sub_100120BB4(_DWORD *a1)
{
  unsigned int v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  _QWORD v7[2];
  int v8;

  v1 = *a1 ^ (1699881553
            * ((-652407994 - (a1 | 0xD91D0B46) + (a1 | 0x26E2F4B9)) ^ 0x86C96C0D));
  v2 = (v1 - 5431) | 0x1810;
  v3 = (char *)*(&off_10112C750 + (int)(v1 ^ 0x127B)) - 1637917615;
  v4 = 842727511
     * (((unint64_t)&v7[0xB11B182342CC09DLL] - 2 * ((unint64_t)v7 & 0x588D8C11A16604EELL) + 6) ^ 0xF9602708966463B3);
  v5 = (v2 ^ 0xFFFFFFFFFFFFE7EDLL) + *(_QWORD *)&v3[8 * v1] - v4;
  v7[0] = &v6;
  v7[1] = v5;
  v8 = v1 - 588284951 + v4;
  ((void (*)(_QWORD *))((char *)*(&off_10112C750 + (int)(v1 - 1907)) - 1213656063))(v7);
  __asm { BR              X11 }
}

uint64_t sub_100120D6C@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * a1) - 4))();
}

uint64_t sub_100120DAC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((17611 * (v1 == 19)) ^ a1)) - 4))();
}

uint64_t sub_100120E40()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ (56 * (v0 + 1 == v2 + 119)))) - 4))();
}

void sub_100120F54()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 4) = v1;
}

void sub_100120F94(uint64_t a1)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v2 = ((*(_QWORD *)(a1 + 32) - 0x5A201045F8712230) ^ 0x7DB5DC365F77B737)
     - 0x7DB5DC35DCDF3F5DLL
     + ((2 * (*(_QWORD *)(a1 + 32) - 0x5A201045F8712230)) & 0xFB6BB86CBEEF6E6ELL);
  v3 = ((*(_QWORD *)(a1 + 8) - 0x2688F2B3E985310CLL) ^ 0xFB6EFE759A7F7F5FLL)
     + 0x491018AE818F87BLL
     + ((2 * (*(_QWORD *)(a1 + 8) - 0x2688F2B3E985310CLL)) & 0xF6DDFCEB34FEFEBELL);
  v4 = v2 < 0x829877DA;
  v5 = v2 > v3;
  if (v4 != v3 < 0x829877DA)
    v5 = v4;
  v1 = *(_DWORD *)a1 ^ (1130658149 * (((a1 | 0x1360264A) - a1 + (a1 & 0xEC9FD9B5)) ^ 0xDE5C9F87));
  __asm { BR              X12 }
}

uint64_t sub_100121190()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((19297
                                          * ((((((v0 + 1772452945) & 0x965A3DE9) - 6019) ^ ((v2 & 0x73FFEFFE ^ 0x315DA498)
                                                                                          + (v1 ^ 0x655125B3)
                                                                                          + 2130557940 == 956150771)) & 1) == 0)) ^ (v0 - 21054)))
                            - 12))();
}

uint64_t sub_100121224(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  _BOOL4 v8;

  v8 = a4 + a3 + 1174407169 < (((a7 - 3321) | 0x50) ^ ((a7 - 15681) | 0x8306) ^ 0xB396u);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((v8 | (4 * v8)) ^ a7)) - 4))();
}

uint64_t sub_1001212C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * (a8 ^ (41809 * (v9 >> 4 == 195035008))))
                                                                                                - (a8 + 21102)
                                                                                                + 33594))(a1, a2, a3, a4, a5, a6, v8);
}

uint64_t sub_100121304(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _BOOL4 v21;

  v13 = v8 - 0x2688F2B3E985310CLL + (((a8 + 20520) | 0x246) ^ 0x46008B46u) + a4 + a3;
  v14 = (a4 + a3) & 0xF;
  v15 = v11 + v14 - v13;
  v16 = (v9 | v14) - v13;
  v17 = (v10 | v14) - v13;
  v21 = (unint64_t)(a6 - (v8 - 0x2688F2B3E985310CLL) - 0x5A201045F8712230) > 0xF
     && v15 > 0xF
     && v16 > 0xF
     && v17 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((28701 * v21) ^ a8)) - 12))();
}

uint64_t sub_1001213A8(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;

  v10 = a8 - 2432;
  v11 = ((a8 + 38338491) | 0x4044944) ^ 0x64D79DE;
  *(_QWORD *)(v8 - 256) = (3529 * v11);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((43 * (((a1 < 0x10) ^ (-55 * v11)) & 1)) ^ v10))
                            - 12))();
}

uint64_t sub_10012140C(__n128 a1)
{
  int v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  __n128 v5;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;

  v5.n128_u64[0] = ((_BYTE)v1 + 10) & 0xF;
  v5.n128_u64[1] = ((_BYTE)v1 + ((v3 - 22) | 0x2C) + 28) & 0xF;
  v6.n128_u64[0] = ((_BYTE)v1 + 8) & 0xF;
  v6.n128_u64[1] = ((_BYTE)v1 + 7) & 0xF;
  v7.n128_u64[0] = ((_BYTE)v1 + 6) & 0xF;
  v7.n128_u64[1] = ((_BYTE)v1 + 5) & 0xF;
  v8.n128_u64[0] = ((_BYTE)v1 + 4) & 0xF;
  v8.n128_u64[1] = ((_BYTE)v1 + 3) & 0xF;
  v9.n128_u64[0] = ((_BYTE)v1 + 2) & 0xF;
  v9.n128_u64[1] = ((_BYTE)v1 + 1) & 0xF;
  v10.n128_u64[0] = v1 & 0xF;
  v10.n128_u64[1] = ((_BYTE)v1 - 1) & 0xF;
  v11.n128_u64[0] = ((_BYTE)v1 + 14) & 0xF;
  v11.n128_u64[1] = (v1 + 13) & 0xF;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(*(_QWORD *)(v4 - 248) + 8 * (int)(v3 ^ v2 ^ (20995 * (v3 < 0x57CE9CAC))))
                                                                                                 - 8))(a1, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_100121558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, double a9, __n128 a10, __n128 a11, __n128 a12, __n128 a13, __n128 a14, __n128 a15, __n128 a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  int8x16_t v27;
  int8x16_t v28;
  int8x16_t v29;
  int8x16_t v30;
  uint64_t v31;
  int8x16_t v32;
  int8x16_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int8x16_t v39;

  v31 = (v23 + a7);
  v32 = vrev64q_s8(*(int8x16_t *)(v20 + v31));
  v33 = vextq_s8(v32, v32, 8uLL);
  v34 = *(_QWORD *)(v26 - 248);
  v35 = ((_BYTE)v23 + (_BYTE)a7) & 0xF;
  v36 = v21;
  v37.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a10 - 1), v27).u64[0];
  v37.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a13.n128_u64, v27).u64[0];
  v38 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v16 + v35 - 15), *(int8x16_t *)(v18 + v35 - 15)), *(int8x16_t *)(v17 + v35 - 15)));
  v39 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v38, v38, 8uLL), vaddq_s8(vaddq_s8(v33, vornq_s8(v28, v33)), vaddq_s8(vorrq_s8(v33, v28), v29))), vmulq_s8(v37, v30)));
  *(int8x16_t *)(v22 + v31) = vextq_s8(v39, v39, 8uLL);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v34 + 8 * (((v19 != a7) * v25) ^ a8))
                                                                                               - 8))(a1, a2, a3, a4, a5, a6, (a7 + v24));
}

uint64_t sub_1001215F8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7 + 8 * ((121 * ((((v6 - 21255) ^ (a1 == a6)) & 1) == 0)) ^ v6)))();
}

uint64_t sub_100121640(char a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = (v1 - 11288) | 0x3410u;
  v5 = *(_QWORD *)(v3 + 8 * ((6016 * ((a1 & 8) == (((v1 + 3559) | 0x146) ^ 0x8346))) ^ (v1 - 19649)));
  *(_QWORD *)(v2 - 256) = v4;
  return ((uint64_t (*)(void))(v5 - (v4 ^ 0x7C1D)))();
}

uint64_t sub_1001216A4(__n128 a1, __n128 a2, double a3, __n128 a4)
{
  uint64_t v4;
  uint64_t v5;

  a1.n128_u16[0] = 4369;
  a1.n128_u8[2] = 17;
  a1.n128_u8[3] = 17;
  a1.n128_u8[4] = 17;
  a1.n128_u8[5] = 17;
  a1.n128_u8[6] = 17;
  a1.n128_u8[7] = 17;
  a2.n128_u16[0] = -30070;
  a2.n128_u8[2] = -118;
  a2.n128_u8[3] = -118;
  a2.n128_u8[4] = -118;
  a2.n128_u8[5] = -118;
  a2.n128_u8[6] = -118;
  a2.n128_u8[7] = -118;
  a4.n128_u16[0] = -17991;
  a4.n128_u8[2] = -71;
  a4.n128_u8[3] = -71;
  a4.n128_u8[4] = -71;
  a4.n128_u8[5] = -71;
  a4.n128_u8[6] = -71;
  a4.n128_u8[7] = -71;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128))(*(_QWORD *)(v5 + 8 * (int)*(_QWORD *)(v4 - 256))
                                                                 - 12))(a1, a2, (__n128)xmmword_100DF7490, a4);
}

uint64_t sub_100121724(int8x8_t a1, int8x8_t a2, int8x16_t a3, int8x8_t a4, uint64_t a5, char a6, char a7, char a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,uint64_t a52,uint64_t a53)
{
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  int8x8_t v63;
  uint64_t v64;
  int8x16x4_t v66;

  v62 = (a9 + a10 + 8);
  v66.val[0].i64[0] = ((_BYTE)a9 + (_BYTE)a10 + 8) & 0xF;
  v66.val[0].i64[1] = (v60 + (_BYTE)a10 + 8) & 0xF;
  v63 = vrev64_s8(*(int8x8_t *)(a53 + v62));
  v64 = *(_QWORD *)(v61 - 248);
  v66.val[1].i64[0] = (v59 + (_BYTE)a10 + 8) & 0xF;
  v66.val[1].i64[1] = (v58 + (_BYTE)a10 + 8) & 0xF;
  v66.val[2].i64[0] = (v56 + (_BYTE)a10 + a6 + 8) & 0xF;
  v66.val[2].i64[1] = (v57 + (_BYTE)a10 + 8) & 0xF;
  v66.val[3].i64[0] = (a8 + (_BYTE)a10 + 8) & 0xF;
  v66.val[3].i64[1] = (a7 + (_BYTE)a10 + 8) & 0xF;
  *(int8x8_t *)(a52 + v62) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v53 + (v62 & 0xF) - 7), *(int8x8_t *)(v55 + (v62 & 0xF) - 7)), *(int8x8_t *)(v54 + (v62 & 0xF) - 7))), vadd_s8(vadd_s8(v63, vorn_s8(a1, v63)), vadd_s8(vorr_s8(v63, a1), a2))), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v66, a3), a4)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v64 + 8 * (int)((404 * (a51 == a10)) ^ *(_QWORD *)(v61 - 256))) - 12))();
}

uint64_t sub_10012184C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46,int a47)
{
  uint64_t v47;

  return ((uint64_t (*)(void))(*(_QWORD *)(v47
                                        + 8 * (int)((((a2 + 256329511) & 0xF0B8ADFE ^ 0x242E) * (a47 == a46)) ^ a2))
                            - 12))();
}

uint64_t sub_1001218AC()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(v1 + 8 * (v0 - 2023)))((v0 - 3885), v0 ^ 0xFFFF7CB9, 3338816524, 4294967225, 3910);
}

uint64_t sub_1001218D8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, char a4@<W3>, int a5@<W4>, int a6@<W6>, uint64_t a7@<X8>)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = (a6 + a3);
  *(_BYTE *)(a7 + v13) = *(_BYTE *)(v9 + (v13 & 0xF)) ^ *(_BYTE *)(v11 + (v13 & 0xF)) ^ *(_BYTE *)(v10 + (v13 & 0xF)) ^ ((v13 & 0xF) * a4) ^ (*(_BYTE *)(v7 + v13) + (*(_BYTE *)(v7 + v13) | 0x11) + (~*(_BYTE *)(v7 + v13) | 0x11) - 118);
  return (*(uint64_t (**)(void))(v12 + 8 * (((a2 + a6 != v8) * a5) ^ a1)))();
}

uint64_t sub_100121940()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((((((v0 + 1042555576) & 0xC1DB7FFF) + 2826) ^ 0x718D)
                                               * ((v1 ^ 0x390125B1) + 1976865704 + (v2 & 0xCB5FEFFA ^ 0x895DA498) != 1535413157)) | (v0 - 21054)))
                            - 12))();
}

uint64_t sub_1001219CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  unsigned int v9;
  int v10;
  _BOOL4 v11;

  v8 = v3 < v2;
  *(_BYTE *)(a1 + (v5 - 2048630808)) = *(_BYTE *)(*(_QWORD *)(v6 + 8 * (v4 ^ 0x215E))
                                                              + (((_BYTE)v5 - 24) & 0xF)
                                                              - 868657002) ^ (*(_BYTE *)(v1
                                                                                         + (v5 - 2048630808))
                                                                              - 102) ^ (-43 * ((v5 - 24) & 0xF)) ^ *(_BYTE *)(*(_QWORD *)(v6 + 8 * (v4 ^ 0x31FC)) + (((_BYTE)v5 - 24) & 0xF) - 268587074) ^ *(_BYTE *)(*(_QWORD *)(v6 + 8 * (v4 - 10035)) + (((_BYTE)v5 - 24) & 0xF) - 2031695621);
  v9 = ((4863 * (v4 ^ 0x310A)) ^ 0xE168CE70) + v5;
  v10 = v8 ^ (v9 < v2);
  v11 = v9 < v3;
  if (!v10)
    v8 = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((16517 * v8) ^ v4)) - 12))();
}

uint64_t sub_100121AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int8x16_t v11;

  v11.i64[0] = 0xC0C0C0C0C0C0C0C0;
  v11.i64[1] = 0xC0C0C0C0C0C0C0C0;
  *(int8x16_t *)(v9 - 240) = veorq_s8(vaddq_s8(*(int8x16_t *)(*(_QWORD *)(v8 + 24) - 0xE15AEC048CB6DACLL), v11), (int8x16_t)xmmword_100DF7620);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((((a8 ^ 0xAAD4) - 35666) * (v9 != 240)) ^ a8))
                            - (a8 + 27636)
                            + 37358))();
}

uint64_t sub_100121B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v25;
  uint64_t v26;
  uint64_t v27;

  return ((uint64_t (*)(void))(*(_QWORD *)(v27 + 8 * ((v26 - 0x7D2446CFDE4804F7 != a25 + 0x5C52C67C3832C9FDLL) | v25))
                            - ((v25 - 8639) ^ 0x6D6FLL)))();
}

uint64_t sub_100121B8C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v1 - 144) = *(_BYTE *)(v1 - 240);
  *(_QWORD *)(v1 - 143) = *(_QWORD *)(v1 - 239);
  *(_DWORD *)(v1 - 135) = *(_DWORD *)(v1 - 231);
  *(_WORD *)(v1 - 131) = *(_WORD *)(v1 - 227);
  *(_BYTE *)(v1 - 129) = *(_BYTE *)(v1 - 225);
  v3 = *(_QWORD *)(v1 - 232);
  *(_QWORD *)(v1 - 160) = *(_QWORD *)(v1 - 240);
  *(_QWORD *)(v1 - 152) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 - 32802) | 0x8023))
                            - ((9337 * (((v0 - 32802) | 0x8023) ^ 0x8F28u)) ^ 0x6D6FLL)))();
}

uint64_t sub_100121C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                                         + 8
                                                                                         * (((v4 != 0x2688F2B3E985310CLL)
                                                                                           * (v5 ^ 0x6D76)) ^ v5))
                                                                             - 8))(a1, a2, a3, a4, v5 ^ 0xFC99u);
}

uint64_t sub_100121C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26)
{
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  _BOOL4 v31;

  v29 = 3242 * (v26 ^ 0x6D68);
  v31 = a26 != v27
     && (((_BYTE)a26 + 4) & 0xF) == 2 * ((((v29 + 27636) ^ 0xCB5B) - 23207) & a26 ^ ((_BYTE)a26 + 4) & 0xE);
  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * ((25335 * v31) ^ v29)) - 4))();
}

uint64_t sub_100121CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                                         + 8
                                                                                         * ((28
                                                                                           * (((v4 == 0x714366FC42152B4CLL) ^ ((v5 ^ 0x63) - 1)) & 1)) ^ v5))
                                                                             - 12))(a1, a2, a3, a4, (v5 ^ 0x363u) + 14376);
}

uint64_t sub_100121D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26)
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v30 = *(_QWORD *)(v28 + 8 * (v26 - 19877)) - 472846167;
  v31 = (((*(unsigned __int8 *)(v27 - 0x714366FC42152B4CLL) ^ 0x2E) - 39) ^ 0xFFFFFFDE)
      + ((2 * ((*(unsigned __int8 *)(v27 - 0x714366FC42152B4CLL) ^ 0x2E) - 39)) & 0xFFFFFFBC)
      + *(unsigned __int8 *)(*(_QWORD *)(v28 + 8 * (v26 ^ 0x573E))
                           - 2032967238
                           + (*(unsigned __int8 *)(v27 - 0x714366FC42152B4CLL) ^ 0x2BLL));
  v32 = (v31 - ((2 * v31 + 30) & 0x6C) + 5) ^ 0x3C;
  v33 = (((v32 - 2 * (v32 & 0x3F)) << 24) - 1090519040) ^ 0xBF000000;
  v34 = *(unsigned __int8 *)(*(_QWORD *)(v28 + 8 * (v26 ^ 0x5111))
                           - 136229199
                           + (*(unsigned __int8 *)(v27 - 0x714366FC42152B4ALL) ^ 0xBELL));
  v35 = (v34 - 2 * ((v34 + 76) & 0x7B ^ v34 & 2) - 59) ^ 0x9A;
  v36 = (v33 - ((2 * v33) & 0x78000000) + 1018118823) ^ 0x3CAF42A7 | ((v35 << 8)
                                                                    - ((v35 << 9) & 0x15C00)
                                                                    + 488091173) ^ 0x1D17AE25;
  v37 = v36 - ((2 * v36) & 0xA9944116);
  v38 = *(_QWORD *)(v28 + 8 * (v26 - 18258)) - 1984698698;
  v39 = *(unsigned __int8 *)(v30 + (*(unsigned __int8 *)(v27 - 0x714366FC42152B4BLL) ^ 0x2FLL)) ^ 0xCD;
  v40 = (((v39 - ((2 * v39) & 0x152)) << 16) + 1068040192) ^ 0x3FA90000;
  v41 = (v40 - ((2 * v40) & 0x738E0000) - 1178112082) ^ 0xB9C76FAE | (v37 - 724950901) ^ 0xD4CA208B;
  v42 = v41 - ((2 * v41) & 0x3780FE6C);
  v43 = ((((2 * *(_BYTE *)(v38 + (*(unsigned __int8 *)(v27 - 0x714366FC42152B49) ^ 0x71))) ^ 0xB)
        + ((4 * *(_BYTE *)(v38 + (*(unsigned __int8 *)(v27 - 0x714366FC42152B49) ^ 0x71))) & 0xF7)
        + 5) & 0x18)
      + (*(unsigned __int8 *)(v38 + (*(unsigned __int8 *)(v27 - 0x714366FC42152B49) ^ 0x71)) ^ 0xFFFFFFC6);
  v44 = (v43 ^ 0x5B) + ((2 * v43) & 0xB6) - 91;
  v45 = (v44 - ((2 * v44) & 0x138) - 1371354980) ^ 0xAE42C89C | (v42 - 1681883338) ^ 0x9BC07F36;
  HIDWORD(v53) = a26 - 1938633692;
  LODWORD(v53) = 5601 * (v26 ^ 0x59CC) - 23880;
  HIDWORD(v52) = -1778384896;
  LODWORD(v52) = 5601 * (v26 ^ 0x59CC) - 30464;
  HIDWORD(v51) = 5601 * (v26 ^ 0x59CC) - 31643;
  LODWORD(v51) = 5601 * (v26 ^ 0x59CC) - 31244;
  HIDWORD(v50) = 5601 * (v26 ^ 0x59CC) - 31798;
  LODWORD(v50) = 5601 * (v26 ^ 0x59CC) - 30423;
  HIDWORD(v49) = 5601 * (v26 ^ 0x59CC) - 29728;
  LODWORD(v49) = (5601 * (v26 ^ 0x59CC)) ^ 0x8B5E;
  HIDWORD(v48) = (5601 * (v26 ^ 0x59CC)) ^ 0x8AEC;
  LODWORD(v48) = 5601 * (v26 ^ 0x59CC) - 32185;
  HIDWORD(v47) = 5601 * (v26 ^ 0x59CC) - 29146;
  LODWORD(v47) = (5601 * (v26 ^ 0x59CC)) ^ 0x87A2;
  HIDWORD(a12) = 5601 * (v26 ^ 0x59CC) - 31010;
  HIDWORD(a24) = 5601 * (v26 ^ 0x59CC);
  HIDWORD(a9) = HIDWORD(a24) - 10620;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 + 8 * v26) - 4))(v45 - ((2 * v45) & 0x44B8489E) + 576463951, 4294967205, 13, 101, 100, 85, 4294967178, v30, a9, a10, a11, a12, v47, v48, v49, v50, v51, v52, v53,
           v38,
           *(_QWORD *)(v28 + 8 * (v26 ^ 0x573E)) - 2032967238,
           v30,
           *(_QWORD *)(v28 + 8 * (v26 ^ 0x5111)) - 136229199,
           a24);
}

uint64_t sub_10012284C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  unsigned int v25;
  uint64_t v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v38;
  unsigned int v39;
  int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  uint64_t v63;
  int v64;
  unsigned int v65;
  int v66;
  int v67;
  uint64_t v68;
  int v69;
  unsigned int v70;
  int v71;
  int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  int v80;
  uint64_t v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  unint64_t v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  char *v101;
  int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  char *v106;
  int v107;
  unint64_t v108;
  int v109;
  char *v110;
  char *v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  int v122;
  int v123;
  unsigned int v124;
  int v125;
  int v126;
  int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  int v154;
  int v155;
  int v156;
  unsigned int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  unint64_t v163;
  int v164;
  int v165;
  int v166;
  int v167;
  unsigned int v168;
  int v169;
  int v170;
  int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  int v179;
  int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  int v191;
  int v192;
  unsigned int v193;
  int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  int v207;
  unint64_t v208;
  unsigned int v209;
  int v210;
  unsigned int v211;
  int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  int v222;
  unint64_t v223;
  int v224;
  unsigned int v225;
  int v226;
  int v227;
  unsigned int v228;
  int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  int v235;
  unsigned int v236;
  unsigned int v237;
  int v238;
  unsigned int v239;
  int v240;
  int v241;
  unsigned int v242;
  int v243;
  unsigned int v244;
  int v245;
  unsigned int v246;
  unsigned int v247;
  int v248;
  int v249;
  unsigned int v250;
  int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  int v255;
  unsigned int v256;
  int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  int v265;
  int v266;
  unsigned int v267;
  int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  int v272;
  int v273;
  int v274;
  unsigned int v275;
  int v276;
  unsigned int v277;
  int v278;
  int v279;
  unsigned int v280;
  int v281;
  unsigned int v282;
  unsigned int v283;
  int v284;
  unsigned int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  int v296;
  unsigned int v297;
  int v298;
  int v299;
  unsigned int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  unsigned int v323;
  int v324;
  int v325;
  unsigned int v326;
  int v327;
  int v328;
  int v329;
  unsigned int v330;
  int v331;
  unsigned int v332;
  unsigned int v333;
  int v334;
  int v335;
  unsigned int v336;
  unsigned int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  int v348;
  unsigned int v349;
  int v350;
  int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  int v355;
  unsigned int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  int v360;
  int v361;
  unsigned int v362;
  unsigned int v363;
  int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  unsigned int v372;
  char *v373;
  int v374;
  unsigned int v375;
  char *v376;
  int v377;
  unsigned int v378;
  int v379;
  int v380;
  int v381;
  int v382;
  unsigned int v383;
  unsigned int v384;
  char *v385;
  char *v386;
  uint64_t v387;
  unsigned int v388;
  BOOL v389;
  int v390;
  unsigned int v391;
  int v392;
  int v393;
  int v394;
  int v395;
  int v396;
  int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  int v405;
  unsigned int v406;
  char *v407;
  unsigned int v408;
  int v409;
  unsigned int v410;
  int v411;
  uint64_t v412;
  char *v413;
  int v414;
  unsigned int v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  char *v419;
  char *v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  int v432;
  unsigned int v433;
  unint64_t v434;
  int v435;
  unsigned int v436;
  unsigned int v437;
  int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  int v442;
  unsigned int v443;
  unsigned int v444;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  unint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  unsigned int v461;
  unsigned int v462;
  uint64_t v463;
  uint64_t v464;

  *(_DWORD *)(v26 - 256) = 0;
  v446 = (HIDWORD(a17) + 3756);
  v459 = (((v25 & 0xFFFFFFF5 ^ 0xF7E41AFA)
         + 1529915205
         + ((2 * ((v25 & 0xFFFFFFF5 ^ 0xF7E41AFA) & 0x5B30A745 ^ (v25 | v446 ^ 0x7FFF6E0C))) ^ 0x17)
         + 10) ^ 0x7BFFFAAFA58E1C29)
       + a1
       + ((2
         * (((v25 & 0xFFFFFFF5 ^ 0xF7E41AFA)
           + 1529915205
           + ((2 * ((v25 & 0xFFFFFFF5 ^ 0xF7E41AFA) & 0x5B30A745 ^ (v25 | v446 ^ 0x7FFF6E0C))) ^ 0x17)
           + 10) ^ 0x5B30A74E)) & 0x1FD7D76CELL);
  v27 = *(unsigned __int8 *)(a16 + (*(unsigned __int8 *)(v459 - 0x7BFFFAAFFEBEBB67) ^ 0x64));
  v28 = v25 & 0xFFFFFFF8 ^ 0xF7E41AFF;
  LODWORD(v451) = 2 * v28;
  HIDWORD(v451) = v28;
  v29 = (v27 - ((2 * v27 - 104) & 0xD4) - 74) ^ 4;
  v30 = (((v29 - ((2 * v29) & 0x7C)) << 8) + 1231568384) ^ 0x49683E00;
  v464 = v25 ^ 0xF7E41AFA;
  v455 = (v25 ^ 0xDFBFCFEF0CFBE967) + ((2 * v464) & 0x1F63FE73ALL) + a1;
  v463 = (((v25 & 0xFFFFFFF6 ^ 0xF7E41AFB)
         + 278937237
         + ((2 * (v25 & 0xFFFFFFF6 ^ 0xF7E41AFB)) & 0x21407D28 ^ 0xFFFFFFFD)
         + 1) ^ 0x7EEDFE5FEDDE04C2)
       + a1
       + ((2
         * (((v25 & 0xFFFFFFF6 ^ 0xF7E41AFB)
           + 278937237
           + ((2 * (v25 & 0xFFFFFFF6 ^ 0xF7E41AFB)) & 0x21407D28 ^ 0xFFFFFFFD)
           + 1) ^ 0x10A03E95)) & 0x1FAFC74AELL);
  v31 = (*(unsigned __int8 *)(a13
                            + (*(unsigned __int8 *)(((v28 - 401167308 - ((2 * v28) & 0xD02D5870)) ^ 0xDBFBFFB913E957ABLL)
                                                  + a1
                                                  + ((2 * ((v28 - 401167308 - ((2 * v28) & 0xD02D5870)) ^ 0xE816AC3C)) & 0x1F7FFF72ELL)
                                                  + 0x2404004604000469) ^ 0xDDLL)) ^ 0xFFFFFFCA)
      + 12;
  v32 = v31 ^ 0xDB;
  v33 = (2 * v31) & 0xB6;
  v34 = 2 * (((*(unsigned __int8 *)(v455 + 0x2040301004E00C63) ^ 0x47) - 39) & 0x3F)
      + (((*(unsigned __int8 *)(v455 + 0x2040301004E00C63) ^ 0x47) - 39) ^ 0x3F)
      + *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(v455 + 0x2040301004E00C63) ^ 0x42));
  v35 = v34 - ((2 * v34 - 36) & 0xE8) + 98;
  v36 = *(unsigned __int8 *)(a15 + (*(unsigned __int8 *)(v463 - 0x7EEDFE5FFD7E3A57) ^ 0xFALL)) ^ 0xC5;
  v38 = (((v36 - ((2 * v36) & 0x1B4)) << 16) + 1440350208) ^ 0x55DA0000;
  v39 = (v38 - 1449437429 - ((2 * v38) & 0x53360000)) ^ 0xA99B570B | (v30 - 269497095 + (~(2 * v30) | 0xA02067FF) + 1) ^ 0xEFEFCCF9;
  v40 = v39 + 566840548 - ((2 * v39) & 0x439299C8);
  v458 = (((v25 & 0xFFFFFFF9 ^ 0xF7E41AFE)
         + 1469633222
         + ((2 * (v25 & 0xFFFFFFF9 ^ 0xF7E41AFE)) & 0xAF31A580 ^ 0xFFFFFFF3)
         + 1) ^ 0x5EAE7BFBAA3739F8)
       + a1
       + ((2
         * (((v25 & 0xFFFFFFF9 ^ 0xF7E41AFE)
           + 1469633222
           + ((2 * (v25 & 0xFFFFFFF9 ^ 0xF7E41AFE)) & 0xAF31A580 ^ 0xFFFFFFF3)
           + 1) ^ 0x5798D2C6)) & 0x1FB5FD67CLL);
  v41 = *(unsigned __int8 *)(v458 - 0x5EAE7BFBFDAFEB3ELL);
  v42 = ((((v35 ^ 0x26) - ((2 * (v35 ^ 0x26)) & 0xAAAAAAAA)) << 24) + 1426063360) ^ 0x55000000;
  v43 = v41 ^ 0xAF9AED73;
  v44 = (2 * v41) & 0xE6;
  v45 = (v41 ^ 0xFFFFFFC3) & 0x7D ^ 0xFFFFFFDA ^ (((2 * (v41 ^ 0xFFFFFFC3)) | 0xFFFFFFB2)
                                                - ((v41 ^ 0xFFFFFFC3) & 0xFFFFFFFE)
                                                - 89);
  v46 = 2 * (v45 - ((2 * v45) & 0xC)) + 646473228;
  v47 = v43 + v44 + (v46 ^ 0x2F0CF69F) + 1189118590 + ((2 * v46) & 0x4C10DED8 ^ 0xB3EF33E7);
  v48 = *(unsigned __int8 *)(a16 + ((v47 - 0x40F5DB74E952C1E4 - ((2 * v47) & 0x2D5A7C38)) ^ 0xBF0A248B16AD3EB7));
  v49 = (v48 - ((2 * v48 + 24) & 0x12) - 43) ^ 0x7F;
  v50 = (((v49 - ((2 * v49) & 0x84)) << 8) - 532069888) ^ 0xE0494200;
  v460 = (((v25 & 0xFFFFFFFA ^ 0xF7E41AFF) - 1442956957 - ((2 * (v25 & 0xFFFFFFFA ^ 0xF7E41AFF)) & 0x53FC72C6)) ^ 0x77EF75BD56438F8ALL)
       + a1
       + ((2
         * (((v25 & 0xFFFFFFFA ^ 0xF7E41AFF) - 1442956957 - ((2 * (v25 & 0xFFFFFFFA ^ 0xF7E41AFF)) & 0x53FC72C6)) ^ 0xA9FE3963)) & 0x1FF7B6DD2);
  v51 = v25 & 0xFFFFFFF0 ^ 0xF7E41AFF;
  LODWORD(v453) = 2 * v51;
  HIDWORD(v453) = v51;
  v52 = v51 + 730720644 + ((2 * v51) & 0x571BD300 ^ 0xFFFFFFF7) + 1;
  v53 = v25 & 0xFFFFFFFE ^ 0xF7E41AFB;
  LODWORD(v450) = 2 * v53;
  HIDWORD(v450) = v53;
  v54 = (v50 - 849474974 - ((2 * v50) & 0x1ABC1400)) ^ 0xCD5E0A62 | ((v32 + v33 + 37)
                                                                   - 1347472776
                                                                   - ((2 * (v32 + v33 + 37)) & 0xF0)) ^ 0xAFAF3278;
  v55 = *(unsigned __int8 *)(a15 + (*(unsigned __int8 *)(v460 - 0x77EF75BDFFBDB6E9) ^ 0xC3)) ^ 0xA2;
  v56 = (((v55 - ((2 * v55) & 0x1B4)) << 16) + 1289355264) ^ 0x4CDA0000;
  v57 = (v54 - 419437871 - ((2 * v54) & 0x4DFFC5A2)) ^ 0xE6FFE2D1 | (v56 - 1380999847 - ((2 * v56) & 0x5B5E0000)) ^ 0xADAF9D59;
  v58 = v57 - 821440881 - ((2 * v57) & 0x1E139D1E);
  v59 = *(unsigned __int8 *)(a15
                           + (*(unsigned __int8 *)(((v53 + 298140191 - ((2 * v53) & 0x238A843E)) ^ 0x7D69D6B5FE32BFC2)
                                                 + a1
                                                 + ((2 * ((v53 + 298140191 - ((2 * v53) & 0x238A843E)) ^ 0x11C5421F)) & 0x1DFEFFBBALL)
                                                 - 0x7D69D6B5EFF7FDDDLL) ^ 0xAFLL)) ^ 0x83;
  v60 = (((v59 - ((2 * v59) & 0x52)) << 16) + 271122432) ^ 0x10290000;
  v61 = (v60 + 1620969062 - ((2 * v60) & 0x413C0000)) ^ 0x609E0666 | (v42 - 885161232 - (HIDWORD(a11) & (2 * v42))) ^ 0xCB3D82F0;
  v461 = v25 & 0xFFFFFFFB ^ 0xF7E41AFE;
  v462 = v25 & 0xFFFFFFF4 ^ 0xF7E41AFB;
  v62 = *(unsigned __int8 *)(a13
                           + (*(unsigned __int8 *)((v52 ^ 0x7FBBF7FCD450D72BLL)
                                                 + a1
                                                 + ((2 * (v52 ^ 0x2B8DE984)) & 0x1FFBA7D5ELL)
                                                 - 0x7FBBF7FCFFDD3EAFLL) ^ 0xCCLL));
  v63 = *(unsigned __int8 *)(((v461 + 1118873991 - ((2 * v461) & 0x8561530E)) ^ 0x7BEFF37F2D4D5239)
                           + ((2 * ((v461 + 1118873991 - ((2 * v461) & 0x8561530E)) ^ 0x42B0A987)) & 0xDFFBF77C)
                           + a1
                           - 0x7BEFF37F6FFDFBBELL);
  LODWORD(v447) = v63 ^ 0xFFFFFFD1;
  HIDWORD(v447) = ((2 * ((v63 ^ 0xFFFFFFD1) - 39)) & 0xFFFFFFEF) + (((v63 ^ 0xFFFFFFD1) - 39) ^ 0x77);
  LODWORD(v63) = HIDWORD(v447) + *(unsigned __int8 *)(a14 + (v63 ^ 0xD4));
  v452 = (((v25 & 0xFFFFFFF7 ^ 0xF7E41AFA) - 380966444 - ((2 * (v25 & 0xFFFFFFF7 ^ 0xF7E41AFA)) & 0xD295D3A8)) ^ 0xEEE5FBF572186F3BLL)
       + a1
       + ((2
         * (((v25 & 0xFFFFFFF7 ^ 0xF7E41AFA) - 380966444 - ((2 * (v25 & 0xFFFFFFF7 ^ 0xF7E41AFA)) & 0xD295D3A8)) ^ 0xE94AE9D4)) & 0x136A50DDELL);
  LODWORD(v63) = (v63 - ((2 * (_BYTE)v63 + 4) & 6) + 57) ^ 0xDC;
  LODWORD(v63) = ((((_DWORD)v63 - ((2 * (_DWORD)v63) & 0xFFFFFF9F)) << 24) - 822083584) ^ 0xCF000000;
  v64 = (v63 + 1866996828 - ((2 * v63) & 0xDE000000)) ^ 0x6F481C5C | v58 ^ 0xCF09CE8F;
  LODWORD(v63) = v64 - ((2 * v64) & 0x3D20AD1C);
  v65 = (*(unsigned __int8 *)(a13
                            + (*(unsigned __int8 *)(((v462 + 346544737 + ((2 * v462) & 0x294FB4C0 ^ 0xFFFFFFFD) + 1) ^ 0x527F3FF64918359DLL)
                                                  + ((2
                                                    * ((v462 + 346544737 + ((2 * v462) & 0x294FB4C0 ^ 0xFFFFFFFD) + 1) ^ 0x14A7DA61)) & 0xBB7FDFF8)
                                                  + a1
                                                  - 0x527F3FF65DBFEFFCLL) ^ 0xCBLL)) ^ 0xFFFFFFCA)
      + 12;
  v66 = (v65 ^ 0xED) + ((2 * v65) & 0xDA) + 19;
  v67 = (v66 + 186714153 - ((2 * v66) & 0x52)) ^ 0xB210829 | v40 ^ 0x21C94CE4;
  v68 = *(unsigned __int8 *)(v452 + 0x111A040A64AD7911);
  v69 = (v68 ^ 0xFFFFFFF9) + (~(2 * (v68 ^ 0xFFFFFFF9) + 50) | 0xFFFFFFB9);
  LODWORD(v68) = *(unsigned __int8 *)(a14 + (v68 ^ 0xFC)) - 83;
  v70 = (v69 + 125) ^ 0xFFFFFFA3;
  v71 = (v70 & v68) - ((2 * (v70 & v68)) & 0x68);
  v72 = (((v70 ^ v68) + (~(2 * (v70 ^ v68)) | 0x11) + 120) ^ 0x77)
      + ((2 * v71 - 24) ^ 0x47)
      + ((2 * (2 * v71 - 24)) & 0x5C ^ 0x50)
      + 81;
  v73 = (v72 + (~(2 * v72) | 0xA3) + 47) ^ 0x5B;
  v74 = (((v73 - ((2 * v73) & 0xF0)) << 24) - 0x8000000) ^ 0xF8000000;
  v75 = (v74 + 1436801399 - ((2 * v74) & 0xAA000000)) ^ 0x55A3D977 | (v67 + 559229540 - ((2 * v67) & 0x42AA54C8)) ^ 0x21552A64;
  v76 = v75 - ((2 * v75) & 0xFA30E0DE);
  v77 = v25 & 0xFFFFFFF2 ^ 0xF7E41AFF;
  LODWORD(v454) = 2 * v77;
  HIDWORD(v454) = v77;
  v78 = v25 & 0xFFFFFFF3 ^ 0xF7E41AFE;
  LODWORD(v457) = 2 * v78;
  HIDWORD(v457) = v78;
  v79 = *(unsigned __int8 *)(a15
                           + (*(unsigned __int8 *)(((v77 + 1161861749 + ((2 * v77) & 0x8A8134E0 ^ 0xFFFFFFF5) + 1) ^ 0x97DDD7A3B6AB458FLL)
                                                 + a1
                                                 + ((2
                                                   * ((v77 + 1161861749 + ((2 * v77) & 0x8A8134E0 ^ 0xFFFFFFF5) + 1) ^ 0x45409A75)) & 0x1E7D7BFF4)
                                                 + 0x6822285C0C142006) ^ 0x9CLL)) ^ 0x2C;
  v80 = (((v79 - ((2 * v79) & 0xF6)) << 16) + 1618673664) ^ 0x607B0000;
  v449 = (((v25 & 0xFFFFFFFC ^ 0xF7E41AFB) + 1096659355 - ((2 * (v25 & 0xFFFFFFFC ^ 0xF7E41AFB)) & 0x82BB6336)) ^ 0x5E3F6FFA3E465C25)
       + ((2
         * (((v25 & 0xFFFFFFFC ^ 0xF7E41AFB) + 1096659355 - ((2 * (v25 & 0xFFFFFFFC ^ 0xF7E41AFB)) & 0x82BB6336)) ^ 0x415DB19B)) & 0xFE37DB7C)
       + a1;
  v81 = *(unsigned __int8 *)(((v78 + 1731569249 - ((2 * v78) & 0xCE6B4CC2)) ^ 0x1EFFFEBB9AE0DBF6)
                           + a1
                           + ((2 * ((v78 + 1731569249 - ((2 * v78) & 0xCE6B4CC2)) ^ 0x6735A661)) & 0x1FBAAFB2ELL)
                           - 0x1EFFFEBBFDD57D97);
  LODWORD(v81) = (v81 ^ 0x7D) + *(unsigned __int8 *)(a14 + (v81 ^ 0x78));
  v82 = v25 & 0xFFFFFFF1 ^ 0xF7E41AFE;
  LODWORD(v448) = v82;
  HIDWORD(v448) = 2 * v82;
  v83 = (v62 ^ 0xC6) + ((4 * v62) & 0x10) + ((((2 * v62) ^ 0x10) + 16) & 0x18 ^ 0x5E) - 78;
  v84 = (v80 + 114326541 - ((2 * v80) & 0xDA00000)) ^ 0x6D07C0D | (v83 - 984206782 - ((2 * v83) & 0x84)) ^ 0xC5563242;
  LODWORD(v81) = (v81 - ((2 * v81 + 12) & 0xC6) - 23) ^ 0x11;
  LODWORD(v81) = ((((_DWORD)v81 - ((2 * (_DWORD)v81) & 0xFFFFFFDF)) << 24) - 285212672) ^ 0xEF000000;
  LODWORD(v81) = (v81 + 1863720639 - ((2 * v81) & 0xDE000000)) ^ 0x6F161EBF | (v84
                                                                             + 1370294093
                                                                             - ((2 * v84) & 0xA35A0E9A)) ^ 0x51AD074D;
  v85 = v81 + 1100850007 - ((2 * v81) & 0x833B46AE);
  LODWORD(v81) = *(unsigned __int8 *)(a16
                                    + (*(unsigned __int8 *)(((v82 + 734909738 - ((2 * v82) & 0x579BAA54)) ^ 0x73F29BFDF4328811)
                                                          + a1
                                                          + ((2
                                                            * ((v82 + 734909738 - ((2 * v82) & 0x579BAA54)) ^ 0x2BCDD52A)) & 0x1BFFEBA76)
                                                          - 0x73F29BFDDFFF5D3BLL) ^ 0x98));
  v86 = v25 & 0xFFFFFFFD ^ 0xF7E41AFA;
  LODWORD(v456) = 2 * v86;
  HIDWORD(v456) = v86;
  v87 = v86 + 238831682 + ((2 * v86) & 0x1C789080 ^ 0xFFFFFFFB);
  v88 = (((((v81 - ((2 * v81 - 104) & 0xC4) - 82) ^ 0x37)
         - ((2 * (((_DWORD)v81 - ((2 * (_DWORD)v81 - 104) & 0xC4) - 82) ^ 0x37)) & 0xD8)) << 8)
       - 799249408) ^ 0xD05C6C00;
  v89 = v88 - 325907268 - ((2 * v88) & 0x59261800);
  v90 = ((v87 + 1) ^ 0xF5EF7B73F145B6ACLL) + a1 + ((2 * ((v87 + 1) ^ 0xE3C4842)) & 0x1FEF3FDDCLL);
  v91 = (*(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(v449 - 0x5E3F6FFA7F1BEDBELL) ^ 0xB5)) ^ 0xFFFFFFCA) + 12;
  v92 = (v91 ^ 0xDA) + ((2 * v91) & 0xB4) + 38;
  v93 = (v92 + 99427312 - ((2 * v92) & 0x1E0)) ^ 0x5ED23F0 | (v61 - 303857444 - ((2 * v61) & 0xDBC701B8)) ^ 0xEDE380DC;
  LODWORD(v90) = *(unsigned __int8 *)(a16 + (*(unsigned __int8 *)(v90 + 0xA10848C00860112) ^ 0xDBLL));
  v94 = v90 - ((2 * v90 - 104) & 0x86);
  LODWORD(v90) = (v76 + 2098753647) ^ a23;
  v95 = (v85 ^ 0x419DA357 | v89 ^ 0xEC930CBC) - ((2 * (v85 ^ 0x419DA357 | v89 ^ 0xEC930CBC)) & 0x3B805E92);
  v96 = (((((v94 + 15) ^ 0x57) - ((2 * ((v94 + 15) ^ 0x57)) & 0x10A)) << 8) + 1252820224) ^ 0x4AAC8500;
  v97 = (v96 + 1317656416 - ((2 * v96) & 0x1D13AE00)) ^ 0x4E89D760 | (v93 - 1592519877 - ((2 * v93) & 0x42282676)) ^ 0xA114133B;
  v98 = (v97 - ((2 * v97) & 0x77EF8D26) - 1141389677) ^ a25;
  v99 = (v63 + 512775822) ^ HIDWORD(a23);
  v100 = (v95 + 499134281) ^ HIDWORD(a25);
  v101 = (char *)*(&off_10112C750 + (int)a11) - 1401652570;
  v102 = *(_DWORD *)&v101[4 * (HIBYTE(v98) ^ 0x47)];
  v103 = (HIWORD(v99) & 0x81 ^ 0x10367381) - (HIWORD(v99) & 0x81) + (BYTE2(v99) ^ 0x4A);
  LODWORD(v63) = (v103 & 0x18B ^ 0x2A41088A) + (v103 & 0x674 ^ 0x100041);
  v104 = (16
        * ((v102 ^ 0x72961D1B) * (v102 ^ 0x72961D1B) - ((2 * (v102 ^ 0x72961D1B) * (v102 ^ 0x72961D1B)) & 0xF0EC6D2))
        - 126470512) ^ 0xF8763690;
  v105 = ((v100 ^ 0xC6) + (v100 & 0x25 ^ 0xC6E48521) - ((v100 ^ 0xC6) & 0x25)) ^ 0xBE64852D;
  v106 = (char *)*(&off_10112C750 + (int)a10) - 727657422;
  v107 = *(_DWORD *)&v106[4 * ((v105 - ((2 * v105) & 0xA0000444) + 1410103842) ^ 0x2C8C7AA5)];
  HIDWORD(v108) = v107 ^ 0xAC2EFF;
  LODWORD(v108) = ~v107;
  v109 = *(_DWORD *)&v101[4 * (HIBYTE(v99) ^ 0x82)];
  v110 = (char *)*(&off_10112C750 + SHIDWORD(a9)) - 1664084706;
  v111 = (char *)*(&off_10112C750 + SHIDWORD(a10)) - 820639263;
  LODWORD(v63) = *(_DWORD *)&v111[4 * (((_DWORD)v63 - 1) ^ 0x2A510BE0)] ^ v102 ^ *(_DWORD *)&v110[4
                                                                                                * (BYTE1(v90) ^ 0x66)] ^ ((v108 >> 31) - ((2 * (v108 >> 31)) & 0x23280E2A) + 294913813) ^ (v104 - ((2 * v104) & 0x10C5BA80) - 2006786741);
  v112 = (16
        * ((v109 ^ 0x72961D1B) * (v109 ^ 0x72961D1B) - ((2 * (v109 ^ 0x72961D1B) * (v109 ^ 0x72961D1B)) & 0x73425CC))
        - 1180619168) ^ 0xB9A12E60;
  v113 = ((v98 ^ 0xBC) - ((2 * (v98 ^ 0xBC)) & 0xFFFFFF87) - 825639485) ^ 0xD6E9FF93;
  v114 = v109 ^ *(_DWORD *)&v111[4 * (BYTE2(v90) ^ 0xE9)] ^ *(_DWORD *)&v110[4
                                                                           * ((((2 * (BYTE1(v100) ^ 0x40D2C059)) | 0x7E43598A)
                                                                             - (BYTE1(v100) ^ 0x40D2C059)
                                                                             + 1088312123) ^ 0xFFF36C8E)] ^ 0xD73B4319 ^ (v112 - ((2 * v112) & 0x6E80C160) - 1220517704);
  v115 = (((2 * (v114 & 0xB5935B5B ^ 0x81035352)) | 0x6367C3C4) - (v114 & 0xB5935B5B ^ 0x81035352) - 833872354) ^ 0x31A16FAE;
  v116 = (v115 - ((2 * v115) & 0x72D18166) + 963166387) ^ 0xB9E944A7 | v114 & 0x4A6CA4A4 ^ 0x4264A080;
  v117 = *(_DWORD *)&v106[4 * ((((2 * v113) & 0x20008E02) - v113 + 1298213118) ^ 0x55416AC3)];
  HIDWORD(v108) = v117 ^ 0xAC2EFF;
  LODWORD(v108) = ~v117;
  v118 = (((2 * (BYTE1(v98) ^ 0x3F)) | 0x94E2EF62) - (BYTE1(v98) ^ 0x3F) - 1248950193) ^ 0x1A397731;
  v119 = ((2 * v118) & 0xE9AFBA02) - v118;
  v120 = (v116 - ((2 * v116) & 0xEA09155E) - 184251729) ^ ((v108 >> 31) - ((2 * (v108 >> 31)) & 0x8AF7A4C6) + 1165742691);
  v121 = *(_DWORD *)&v101[4 * (BYTE3(v90) ^ 0x4C)];
  v122 = (16
        * ((v121 ^ 0x72961D1B) * (v121 ^ 0x72961D1B) - ((2 * (v121 ^ 0x72961D1B) * (v121 ^ 0x72961D1B)) & 0xA3F8E86))
        + 1375499312) ^ 0x51FC7430;
  v123 = *(_DWORD *)&v106[4
                        * ((((2 * (v99 ^ 0x8CBB883D)) & 0x113000A0)
                          - (v99 ^ 0x8CBB883D)
                          - 719065425) ^ 0x599866F4)];
  HIDWORD(v108) = v123 ^ 0xAC2EFF;
  LODWORD(v108) = ~v123;
  v124 = *(_DWORD *)&v110[4 * ((v119 + 187179774) ^ 0x5B6022D3)] ^ v121 ^ *(_DWORD *)&v111[4
                                                                                         * ((((2
                                                                                             * (BYTE2(v100) ^ 0x9609B)) | 0xBF02AE6)
                                                                                           - (BYTE2(v100) ^ 0x9609B)
                                                                                           + 2047339149) ^ 0x85F17507)] ^ (v122 - ((2 * v122) & 0xA54DD20) - 2060816750) ^ ((v108 >> 31) - ((2 * (v108 >> 31)) & 0xCB11E366) + 1703473587);
  v125 = *(_DWORD *)&v101[4 * (HIBYTE(v100) ^ 0x39)];
  v126 = (16
        * ((v125 ^ 0x72961D1B) * (v125 ^ 0x72961D1B) - ((2 * (v125 ^ 0x72961D1B) * (v125 ^ 0x72961D1B)) & 0xC7DB52E))
        + 1676519792) ^ 0x63EDA970;
  v127 = (BYTE1(v99) ^ 0x4D) + ((v99 >> 8) & 0x60 ^ 0x6E749220) - ((BYTE1(v99) ^ 0x4D) & 0x60);
  LODWORD(v90) = ((2 * (v90 ^ 0xA5)) | 0x8ED47478) - (v90 ^ 0xA5) - 1198144060;
  LODWORD(v90) = *(_DWORD *)&v106[4
                                * (((v90 & 0x410A2585 ^ 0x8018481) + (v90 & 0x6601A7A ^ 0x4601A33) - 1) ^ 0x4B0BA4EC)];
  HIDWORD(v108) = v90 ^ 0xAC2EFF;
  LODWORD(v108) = ~(_DWORD)v90;
  v128 = *(_DWORD *)&v111[4 * (BYTE2(v98) ^ 0x9E)] ^ v125 ^ ((v108 >> 31) - ((2 * (v108 >> 31)) & 0xFE2989C4) - 15416094) ^ (v126 - ((2 * v126) & 0x15AF7B20) - 1965572709) ^ *(_DWORD *)&v110[4 * (((v127 & 0x200410F4 ^ 0x10080CD4) + (v127 ^ 0x6FC67021) - ((v127 ^ 0x6FC67021) & 0xA280F4)) ^ 0x311C7E16)];
  v129 = *(_DWORD *)&v101[4 * (BYTE3(v63) ^ 0x2B)];
  LODWORD(v90) = (16
                * ((v129 ^ 0x72961D1B) * (v129 ^ 0x72961D1B)
                 - ((2 * (v129 ^ 0x72961D1B) * (v129 ^ 0x72961D1B)) & 0x7EAFD86))
                + 1062726704) ^ 0x3F57EC30;
  v130 = (1979641247 - (BYTE1(v124) ^ 0x4E | 0x75FEED9F) + (BYTE1(v124) ^ 0x4E | 0x8A011260)) ^ 0x9AB153F2;
  v131 = *(_DWORD *)&v106[4 * (v128 ^ 0x97)];
  HIDWORD(v108) = v131 ^ 0xAC2EFF;
  LODWORD(v108) = ~v131;
  v132 = *(_DWORD *)&v111[4
                        * ((-85526675 - (BYTE2(v120) ^ 0x4167 | 0xFAE6F76D) + (BYTE2(v120) ^ 0x4167 | 0x5190892)) ^ 0x5194994)] ^ v129 ^ *(_DWORD *)&v110[4 * ((((2 * v130) | 0x9193298C) - v130 + 926313274) ^ 0xD879D5BE)] ^ ((v108 >> 31) - ((2 * (v108 >> 31)) & 0x33838222) + 432128273) ^ (v90 - ((2 * v90) & 0x145A900) + 10671236);
  v133 = *(_DWORD *)&v101[4 * (HIBYTE(v120) ^ 0x53)];
  v134 = (16
        * ((v133 ^ 0x72961D1B) * (v133 ^ 0x72961D1B) - ((2 * (v133 ^ 0x72961D1B) * (v133 ^ 0x72961D1B)) & 0x1FEA7E6))
        - 1879752912) ^ 0x8FF53F30;
  v135 = ((BYTE2(v124) ^ 0xC2) + (HIWORD(v124) & 0x75 ^ 0xBF458A35) - ((BYTE2(v124) ^ 0xC2) & 0x75)) ^ 0x3EC58A45;
  v136 = (((v128 >> 7) & 0x142) + 2021946207 + (BYTE1(v128) ^ 0xFFFFFFEF)) ^ 0x7884803E;
  v137 = *(_DWORD *)&v106[4
                        * ((554260112 - (v63 ^ 0x2D) + ((2 * (v63 ^ 0x2D)) & 0xDE)) ^ 0x210956E6)];
  HIDWORD(v108) = v137 ^ 0xAC2EFF;
  LODWORD(v108) = ~v137;
  v138 = *(_DWORD *)&v101[4 * (HIBYTE(v124) ^ 0x93)];
  v139 = *(_DWORD *)&v111[4 * ((-661469691 - (v135 | 0xD892C605) + (v135 | 0x276D39FA)) ^ 0xA6ED3993)] ^ *(_DWORD *)&v110[4 * ((((2 * v136) | 0xDD98719C) - v136 - 1858877646) ^ 0x6ECCCB3E)] ^ ((v108 >> 31) - ((2 * (v108 >> 31)) & 0x40300C3A) + 538445341) ^ v133 ^ (v134 - ((2 * v134) & 0x28C58980) + 342017216);
  v140 = (((2 * (BYTE1(v63) ^ 0x5D)) | 0x8D3402C4) - (BYTE1(v63) ^ 0x5D) + 962985630) ^ 0xC6CE63E2;
  v141 = (16
        * ((v138 ^ 0x72961D1B) * (v138 ^ 0x72961D1B) - ((2 * (v138 ^ 0x72961D1B) * (v138 ^ 0x72961D1B)) & 0x2FEE2E))
        - 2122354320) ^ 0x817F7170;
  v142 = ((2 * (BYTE2(v128) ^ 0xB3)) | 0xDF816CB4) - (BYTE2(v128) ^ 0xB3) + 272583078;
  v143 = *(_DWORD *)&v101[4 * (HIBYTE(v128) ^ 0xEC)];
  v144 = *(_DWORD *)&v106[4
                        * (((v120 ^ 0x2A0081D8)
                          + (v120 & 0x4D ^ 0xD4965405)
                          - ((v120 ^ 0x2A0081D8) & 0x2A00814D)) ^ 0xD496540F)];
  HIDWORD(v108) = v144 ^ 0xAC2EFF;
  LODWORD(v108) = ~v144;
  v145 = 16
       * ((v143 ^ 0x72961D1B) * (v143 ^ 0x72961D1B) - ((2 * (v143 ^ 0x72961D1B) * (v143 ^ 0x72961D1B)) & 0xD408300))
       - 368830464;
  v146 = *(_DWORD *)&v110[4 * ((((2 * v140) | 0x4DD3E188) - v140 - 652865732) ^ 0x26BD9220)] ^ v138 ^ *(_DWORD *)&v111[4 * (((v142 & 0x2C03A04 ^ 0x161805) + (v142 & 0xED0085FB) - 1) ^ 0xEFD6AE84)] ^ (v141 - ((2 * v141) & 0x752CC000) - 1164550130) ^ ((v108 >> 31) - ((2 * (v108 >> 31)) & 0xDD43BA3A) + 1856101661);
  v147 = (((2 * (BYTE2(v63) ^ 0x7A)) | 0x327C1220) - (BYTE2(v63) ^ 0x7A) - 423495952) ^ 0x112A0A80;
  v148 = v143 ^ *(_DWORD *)&v111[4 * ((((2 * v147) & 0x2B74FB68) - v147 - 364543413) ^ 0xE25181C4)] ^ 0xA293DEA6 ^ ((v145 ^ 0xEA041800) - 2 * ((v145 ^ 0xEA041800) & 0x5D53C850 ^ v145 & 0x10) - 581711807);
  v149 = (v148 & 0x410010C6 ^ 0x500D0085) + (v148 & 0x82820501) - 1;
  v150 = ((v149 & 0x83890443 ^ 0xC206628) + (v149 ^ 0xC39D90D7) - ((v149 ^ 0xC39D90D7) & 0x93808443)) ^ 0xF3B66B9 | ((v148 & 0x3C7DEA38 ^ 0x59C63) - 1) & 0x3C7DEA38 ^ 0x2C050200;
  v151 = ((2 * (v124 ^ 0xE93D624D)) & 0x101A057C) - (v124 ^ 0xE93D624D) + 1643178049;
  v152 = *(_DWORD *)&v106[4
                        * (((v151 ^ 0x8ACDDF83) + (v151 & 0x88440381) - ((v151 ^ 0x8ACDDF83) & 0xA0764381) + 624041984) ^ 0xAF763696)];
  HIDWORD(v108) = v152 ^ 0xAC2EFF;
  LODWORD(v108) = ~v152;
  v153 = ((v108 >> 31) - ((2 * (v108 >> 31)) & 0xEC84287A) + 1984042045) ^ *(_DWORD *)&v110[4 * (BYTE1(v120) ^ 0xF0)] ^ (v150 - ((2 * v150) & 0xB11AA976) - 661826373);
  if ((v153 & 2) != 0)
    v154 = 2;
  else
    v154 = 254;
  v155 = v154 + (v153 ^ 0xAD3577B);
  v156 = *(_DWORD *)&v101[4 * (HIBYTE(v132) ^ 0x50)];
  v157 = (((2 * (BYTE2(v139) ^ 0x3E)) & 0x146) - (BYTE2(v139) ^ 0x3E) - 389796260) ^ 0xE8E2AC5C;
  v158 = (16
        * ((v156 ^ 0x72961D1B) * (v156 ^ 0x72961D1B) - ((2 * (v156 ^ 0x72961D1B) * (v156 ^ 0x72961D1B)) & 0x1A8B3E4))
        + 222666528) ^ 0xD459F20;
  v159 = ((2 * (BYTE1(v146) ^ 0x2C)) | 0x33DEADBA) - (BYTE1(v146) ^ 0x2C) - 435115741;
  v160 = (v155 ^ 0xCF) + ((2 * v155) & 0x9E) + 49;
  v161 = *(_DWORD *)&v106[4 * ((v160 - 1244049839 - ((2 * v160) & 0x14C) + 85) ^ 0xB5D94E51)];
  v162 = *(_DWORD *)&v111[4 * ((((2 * v157) | 0x2DC36128) - v157 - 383889556) ^ 0x16C732C0)] ^ v156 ^ *(_DWORD *)&v110[4 * (((v159 & 0x108801EA ^ 0xA4102929) + (v159 & 0x9675615) - 1) ^ 0xBDFF7FFE)] ^ (v158 - ((2 * v158) & 0x594ECEC0) - 1398315161);
  HIDWORD(v163) = v161 ^ 0xAC2EFF;
  LODWORD(v163) = ~v161;
  v164 = (v163 >> 31) - ((2 * (v163 >> 31)) & 0x6EB58296);
  HIDWORD(v163) = v162 ^ 0x46BD00E;
  LODWORD(v163) = v162 ^ 0xC0000000;
  v165 = (v163 >> 28) - ((2 * (v163 >> 28)) & 0x9A3B8E50) - 853686488;
  v164 -= 1218789045;
  HIDWORD(v163) = v164 ^ 0x75AC14B;
  LODWORD(v163) = v164 ^ 0xBFFFFFFF;
  v166 = *(_DWORD *)&v101[4 * (HIBYTE(v139) ^ 0xEB)];
  v167 = v165 & 0xD27A38CD ^ ((v163 >> 28) - ((2 * (v163 >> 28)) & 0x87DA397C) - 1007870786);
  HIDWORD(v163) = v166 ^ 0x61D1B;
  LODWORD(v163) = v166 ^ 0x72900000;
  v168 = v167 ^ ((v165 & 0x2C014532 ^ 0x9853612D | v165 & 0x1848200) - 1);
  v169 = (v163 >> 20) - ((2 * (v163 >> 20)) & 0x3D05901A);
  v170 = (v166 ^ 0x72961D1B) * (v166 ^ 0x72961D1B)
       - ((2 * (v166 ^ 0x72961D1B) * (v166 ^ 0x72961D1B)) & 0x4DCA6E8A)
       + 652556101;
  v171 = ((v170 << 16) ^ 0x37450000) - 1723487670 - ((2 * ((v170 << 16) ^ 0x37450000)) & 0x328A0000);
  v172 = ((32 * v170) & 0xFFAFD760 ^ 0xDCA6C020) + ((16 * v170) ^ 0x91849FEF);
  HIDWORD(v163) = v168 ^ 1;
  LODWORD(v163) = v168 ^ 0x26C02DD0;
  v173 = (v163 >> 4) - ((2 * (v163 >> 4)) & 0x522E4E1A);
  v174 = (((v172 + 2626625) >> 20) + 1974715609 - (((v172 + 2626625) >> 19) & 0x9B2)) ^ 0x75B3C4D9 | v171 ^ 0x9945AA4A;
  v175 = (v174 - ((2 * v174) & 0x829453F6) - 1052104197) ^ (v169 + 511887373);
  HIDWORD(v163) = v175 ^ 0xD1D;
  LODWORD(v163) = v175 ^ 0x5AB32000;
  v176 = ((BYTE2(v146) ^ 0x247A79A7) + (HIWORD(v146) & 0xB8 ^ 0x818618) - ((BYTE2(v146) ^ 0x247A79A7) & 0x202871B8)) ^ 0xBE7BAF50;
  v177 = (((v163 >> 12) - ((2 * (v163 >> 12)) & 0x67E9786E) - 1275806665) ^ 0x82B31474) + 1;
  v178 = (v166 ^ ((v166 ^ 0x8D69E2E4) - ((2 * (v166 ^ 0x8D69E2E4) + 2) & 0xA32FF1C6) - 778569500) ^ 0x5912D6A6 ^ ((v177 ^ 0x3FE9F3DD) + v172 + ((2 * v177) & 0x7FD3E7BA) - 2 * (((v177 ^ 0x3FE9F3DD) + v172 + ((2 * v177) & 0x7FD3E7BA) + 1077813348) & 0x7A13335F ^ ((v177 ^ 0x3FE9F3DD) + v172) & 1) - 1169075262))
       + v172
       + 2626625;
  v179 = ((v153 >> 8) & 0xFB ^ 0x8E0217D) - ((v153 >> 8) & 4);
  v180 = *(_DWORD *)&v106[4
                        * (((v132 ^ 0x5413909B)
                          + (v132 & 0x65 ^ 0x20246A64)
                          - ((v132 ^ 0x5413909B) & 0x10108065)) ^ 0x64277A7A)];
  HIDWORD(v163) = v180 ^ 0xAC2EFF;
  LODWORD(v163) = ~v180;
  v181 = *(_DWORD *)&v101[4
                        * (HIBYTE(v146) ^ ((HIBYTE(v146) ^ 0xFFFFFFD1)
                                         - ((2 * (HIBYTE(v146) ^ 0xFFFFFFD1) + 388) & 0xFF688B86)
                                         - 4962683) ^ ((HIBYTE(v146) ^ 0xFFFFFF10)
                                                     - ((2 * (HIBYTE(v146) ^ 0xFFFFFF10) + 2) & 0x147A00C2)
                                                     - 1975713694) ^ 0x7589454D)
                        + 772];
  v182 = (((((v153 >> 15) & 0xBA ^ 0xA2) + (BYTE2(v153) ^ 0xE) + 35) ^ 0x5FEF7DFF)
        + 2 * (((v153 >> 15) & 0xBA ^ 0xA2) + (BYTE2(v153) ^ 0xE) + 35)
        - 1609530879)
       % 0x67;
  v183 = (16
        * ((v181 ^ 0x72961D1B) * (v181 ^ 0x72961D1B) - ((2 * (v181 ^ 0x72961D1B) * (v181 ^ 0x72961D1B)) & 0x9CE6E52))
        - 831294832) ^ 0xCE737290;
  v184 = ((v153 >> 15) & 0x17FBA ^ 0x15A2)
       + (HIWORD(v153) ^ 0x59FEB50E)
       + (v182 ^ 0xFFFFFF08)
       - ((2 * (_BYTE)v182) & 0xEE)
       + 27;
  v185 = *(_DWORD *)&v110[4
                        * (((v179 & 0x820011F ^ 0x19815) + (v179 ^ 0x5A6623AA) - ((v179 ^ 0x5A6623AA) & 0x1202001F)) ^ 0x48A59B1F)] ^ ((v163 >> 31) - ((2 * (v163 >> 31)) & 0x84FED0CC) - 1031837594) ^ *(_DWORD *)&v111[4 * ((v176 - ((2 * v176) & 0x34350808) - 564493308) ^ 0x64F2A542)] ^ (v178 - ((2 * v178) & 0x4CC737EE) - 1503421449);
  v186 = ((v139 ^ 0x95) - ((2 * (v139 ^ 0x95)) & 0xA8) + 660768596) ^ 0x374AE710;
  LOWORD(v178) = (BYTE1(v132) ^ 0xB3) - ((2 * (BYTE1(v132) ^ 0xB3)) & 0xD2) + 16489;
  v187 = *(_DWORD *)&v106[4 * ((747190538 - (v186 | 0x2C89390A) + (v186 | 0xD376C6F5)) ^ 0xC35EA6E0)];
  HIDWORD(v163) = v187 ^ 0xAC2EFF;
  LODWORD(v163) = ~v187;
  v188 = *(_DWORD *)&v111[4
                        * ((((2 * v182) & 0xDE)
                          + (v182 ^ 0xF7FFFEEF)
                          + ((2 * v184) & 0x1F8)
                          + (v184 ^ 0xEAAFDFFC)
                          - ((2
                            * (((2 * v182) & 0xDE)
                             + (v182 ^ 0xF7FFFEEF)
                             + ((2 * v184) & 0x1F8)
                             + (v184 ^ 0xEAAFDFFC))
                            + 983581226) & 0xE2E5B638)
                          - 1899824079) ^ 0x7172DB41)] ^ v181 ^ *(_DWORD *)&v110[4
                                                                               * (((v178 & 0x12B8 ^ 0xB00E9211)
                                                                                 + (v178 & 0x6D47)
                                                                                 - 1) ^ 0xB00ED20C)] ^ ((v163 >> 31) + 1259212716 + (~(2 * (v163 >> 31)) | 0x69E3E0A9)) ^ (v183 - ((2 * v183) & 0xB865C780) + 1546838979);
  v189 = ((BYTE1(v139) ^ 0x36) - ((2 * (BYTE1(v139) ^ 0x36)) & 0x156) - 1438451285) ^ 0xFAC2E8E3;
  v190 = *(_DWORD *)&v101[4 * (HIBYTE(v153) ^ 0xCB)];
  v191 = (16
        * ((v190 ^ 0x72961D1B) * (v190 ^ 0x72961D1B) - ((2 * (v190 ^ 0x72961D1B) * (v190 ^ 0x72961D1B)) & 0x82F1A20))
        + 1098436864) ^ 0x4178D100;
  v192 = (((2 * (BYTE2(v132) ^ 0x63)) & 0x13C) - (BYTE2(v132) ^ 0x63) + 2038199649) ^ 0x793E6721;
  v193 = (((2 * (v146 ^ 0x75)) & 0x166) - (v146 ^ 0x75) + 1663179596) ^ 0xCF200B24;
  v194 = *(_DWORD *)&v106[4 * ((((2 * v193) | 0xB26BE294) - v193 + 650776246) ^ 0x7537E191)];
  HIDWORD(v163) = v194 ^ 0xAC2EFF;
  LODWORD(v163) = ~v194;
  v195 = *(_DWORD *)&v110[4 * ((v189 - ((2 * v189) & 0x200029BC) + 359765214) ^ 0x45F185BB)] ^ v190 ^ *(_DWORD *)&v111[4 * ((((2 * v192) & 0x8406CA) - v192 + 195687578) ^ 0xBEBE64C)] ^ (v191 - ((2 * v191) & 0xFC835660) - 29250765) ^ ((v163 >> 31) - ((2 * (v163 >> 31)) & 0xF2F5B3A0) + 2038094288);
  v196 = v173 - 1458100467;
  v197 = ((v196 >> 23) & 0x16E ^ 0x124) + (HIBYTE(v196) ^ 0xA9AFFF2D);
  v198 = ((v188 >> 7) & 0xEFFBDE ^ 0xA42B92) + ((v188 >> 8) ^ 0xDCA5EA26);
  v199 = (2 * v197 - ((4 * v197 + 36) & 0xB0) + 490) & 0x182;
  v200 = *(_DWORD *)&v101[4 * v197 - 0x13F0AFBD8 + 4 * (v199 ^ 0xA612C101) + 4 * ((2 * v199) ^ 0xFFFFFDFF)];
  v201 = (16
        * ((v200 ^ 0x72961D1B) * (v200 ^ 0x72961D1B) - ((2 * (v200 ^ 0x72961D1B) * (v200 ^ 0x72961D1B)) & 0x9C370BE))
        + 1310426608) ^ 0x4E1B85F0;
  v202 = v201 - ((2 * v201) & 0x7FE41340);
  v203 = (((2 * (v198 + 17)) & 0x15E)
        + ((((v188 >> 7) & 0xDE ^ 0x92) + (BYTE1(v188) ^ 0x26) + 17) ^ 0xFFBFFFAF)
        + 4194385)
       % 0xE1;
  v204 = ((2 * v203) & 0xD2) + (v203 ^ 0xFFF4FF69);
  v205 = (v203 ^ 0xA0801411) - ((2 * (_WORD)v203) & 0x1DC) + 13;
  if (v204 != -721047)
    v205 = 30;
  v206 = (v198 + v205 - 13) + 164268570 - ((2 * (v198 + v205 + 243)) & 0x134);
  v207 = *(_DWORD *)&v106[4
                        * (((v195 & 0x24)
                          + (v195 ^ 0xF5)
                          - ((v195 ^ 0xF5) & 0x24)
                          + 5888) ^ 0x174F)];
  HIDWORD(v208) = v207 ^ 0xAC2EFF;
  LODWORD(v208) = ~v207;
  v209 = *(_DWORD *)&v111[4 * (((HIWORD(v185) & 0xE9 ^ 0x1CA9) + (HIWORD(v185) & 0x16 ^ 0x13) - 1) ^ 0x1C33)] ^ v200 ^ *(_DWORD *)&v110[4 * ((v206 + 128) ^ 0x9CA8A1A)] ^ ((v208 >> 31) - ((2 * (v208 >> 31)) & 0x31BA5942) - 1730335583) ^ (v202 + 1072826788);
  v210 = 2 * (v195 >> 8);
  v211 = (((unsigned __int16)v210 ^ 0xB268) - ((2 * ((unsigned __int16)v210 ^ 0xB268)) & 0xC8) + 100) & 0x100;
  v212 = *(_DWORD *)&v101[4 * (HIBYTE(v185) ^ 0xBE)];
  v213 = (BYTE1(v195) ^ 0xFACDBDCD)
       + (v210 & 0x1F2 ^ 0x60)
       + 1559312492
       + ((v211 & 0xFFFFFDFF | (((v211 >> 8) & 1) << 9)) ^ 0xA8410A1B);
  v214 = (16
        * ((v212 ^ 0x72961D1B) * (v212 ^ 0x72961D1B) - ((2 * (v212 ^ 0x72961D1B) * (v212 ^ 0x72961D1B)) & 0x9E83BC4))
        - 817766880) ^ 0xCF41DE20;
  v215 = v214 - ((2 * v214) & 0x83CDDBA0);
  v216 = *(_DWORD *)&v110[4 * v213];
  v217 = ((2 * (v216 & 2 ^ 0x84002007)) | 0x6F2E2052) - (v216 & 2 ^ 0x84002007);
  v218 = v216 ^ 0x734D566D;
  if (v217 == -349290409)
    v219 = 2;
  else
    v219 = -2;
  v220 = v219 + v218 - ((2 * (v219 + v218)) & 0xF3B0691C);
  v221 = (((2 * ((v173 + 13) ^ 0x99)) | 0xF235B56E) - ((v173 + 13) ^ 0x99) + 115680585) ^ 0xFB184A23;
  v222 = *(_DWORD *)&v106[4 * ((v221 - ((2 * v221) & 0x59C5BD24) - 320676206) ^ 0xEEE04E07)];
  HIDWORD(v223) = v222 ^ 0xAC2EFF;
  LODWORD(v223) = ~v222;
  v224 = *(_DWORD *)&v101[4 * (HIBYTE(v188) ^ 0x13)];
  v225 = *(_DWORD *)&v111[4 * (BYTE2(v188) ^ 0x17)] ^ ((v223 >> 31) - ((2 * (v223 >> 31)) & 0xEBE048D6) - 168811413) ^ v212 ^ (v220 + 2044212366) ^ (v215 - 1041830435);
  v226 = (16
        * ((v224 ^ 0x72961D1B) * (v224 ^ 0x72961D1B) - ((2 * (v224 ^ 0x72961D1B) * (v224 ^ 0x72961D1B)) & 0xAB42BF4))
        + 1436639136) ^ 0x55A15FA0;
  v227 = *(_DWORD *)&v111[4
                        * ((273534236 - (BYTE2(v195) ^ 0xA9 | 0x104DCD1C) + (BYTE2(v195) ^ 0xA9 | 0xEFB232E3)) ^ 0xEFB232CE)] ^ v224;
  v228 = v226 - ((2 * v226) & 0xA381A420) + 1371591194;
  v229 = ((2 * (v228 & 0x25031F00 ^ 0x4011000)) | 0x2FB1BDC2) - (v228 & 0x25031F00 ^ 0x4011000);
  v230 = (((2 * (v227 & 0x25031F03 ^ 0x24021702)) & 0x42042806) - (v227 & 0x25031F03 ^ 0x24021702) - 1776219340) ^ 0xD8A11330;
  v231 = ((v227 & 0x40B0E010 ^ 0x400E111 | v227 & 0x9A4C00EC) - 1) ^ 0x4584E3B8;
  v232 = (((2 * (v228 & 0xDAFCE0F0 ^ 0x5880E040)) & 0xB0B941C0) - (v228 & 0xDAFCE0F0 ^ 0x5880E040) - 2086645475) ^ 0xEB580482;
  v233 = (v231 - ((2 * v231) & 0x12A14438) + 223592222) ^ 0x8C44E7F6 ^ (((2 * v232) | 0xE1D75F96) - v232 + 252989493) | (v230 - ((2 * v230) & 0x250F7816) - 1836598165) ^ 0x6ADE638F ^ (v229 + 1747394847) & 0xFFFFFFFC;
  v234 = *(_DWORD *)&v106[4
                        * ((((2 * (v185 ^ 0x8140C7)) & 0x1020042)
                          - (v185 ^ 0x8140C7)
                          - 2005120034) ^ 0x88FD0B75)];
  HIDWORD(v223) = v234 ^ 0xAC2EFF;
  LODWORD(v223) = ~v234;
  v235 = *(_DWORD *)&v101[4 * (HIBYTE(v195) ^ 0xE0)];
  v236 = ((v223 >> 31) - ((2 * (v223 >> 31)) & 0x9CBEAC20) - 832612848) ^ *(_DWORD *)&v110[4
                                                                                         * ((-1292791346
                                                                                           - (BYTE1(v196) ^ 0x2F1AB447 | 0xB2F191CE)
                                                                                           + (BYTE1(v196) ^ 0x2F1AB447 | 0x4D0E6E31)) ^ 0x6214DA39)] ^ (v233 - ((2 * v233) & 0x5C56ADCA) + 774592229);
  v237 = (((2 * (BYTE2(v196) ^ 0xCE)) & 0xA0) - (BYTE2(v196) ^ 0xCE) - 1945030481) ^ 0x8C3310BE;
  v238 = 16
       * ((v235 ^ 0x72961D1B) * (v235 ^ 0x72961D1B) - ((2 * (v235 ^ 0x72961D1B) * (v235 ^ 0x72961D1B)) & 0xECA6078));
  v239 = v235 ^ (((v238 + 1985151936) ^ 0x765303C0)
               - 2 * (((v238 + 1985151936) ^ 0x765303C0) & 0x48790EB0 ^ ((_BYTE)v238 + 64) & 0x10)
               - 931590489) ^ 0x98BB82E1 ^ *(_DWORD *)&v111[4
                                                          * ((((2 * v237) | 0xFEE1A5BA) - v237 + 9383203) ^ 0xFF52F2DA)];
  v240 = *(_DWORD *)&v110[4
                        * (((BYTE1(v185) ^ 0x4309EAF6) - ((2 * (BYTE1(v185) ^ 0x4309EAF6)) & 0x8601D5B0) + 1529281496) ^ 0x182F1187)] ^ 0x380E3B2F;
  v241 = (v239 & v240) - ((2 * (v239 & v240)) & 0x3ECD13E2);
  v242 = ((2 * (v239 + v240)) & 0xE65FD77A)
       + ((v239 + v240) ^ 0xF32FEBBD)
       + ((2 * v241 - 1093856286) ^ 0x2ECF77F3)
       + ((2 * (2 * v241 - 1093856286)) & 0xDFFB37DC ^ 0xA265D83B);
  v243 = *(_DWORD *)&v106[4
                        * (((v188 ^ 0x8C8C406F)
                          - ((2 * (v188 ^ 0x8C8C406F)) & 0x91080D0)
                          + 1957351016) ^ 0xF8268E29)];
  HIDWORD(v223) = v243 ^ 0xAC2EFF;
  LODWORD(v223) = ~v243;
  v244 = (v242 - ((2 * v242 - 107257754) & 0x8ACB2942) + 1110656212) ^ ((v223 >> 31)
                                                                      - ((2 * (v223 >> 31)) & 0xC1ED21D4)
                                                                      + 1626771690);
  v245 = *(_DWORD *)&v101[4 * (HIBYTE(v209) ^ 0x60)];
  v246 = (16
        * ((v245 ^ 0x72961D1B) * (v245 ^ 0x72961D1B) - ((2 * (v245 ^ 0x72961D1B) * (v245 ^ 0x72961D1B)) & 0x3A0B55A))
        - 1660572976) ^ 0x9D05AAD0;
  v247 = v246 - ((2 * v246) & 0xFE0AB5E0);
  v248 = ((v244 ^ 0x18) - ((2 * (v244 ^ 0x18)) & 0x156) + 1002900139) ^ 0x7B8B9AAB;
  v249 = *(_DWORD *)&v106[4 * ((v248 - ((2 * v248) & 0x9802F4) - 1303614086) ^ 0xF200FDC5)];
  HIDWORD(v223) = v249 ^ 0xAC2EFF;
  LODWORD(v223) = ~v249;
  v250 = (BYTE2(v236) ^ 0xB3796418) + 1283890065 + ((v236 >> 15) & 0xDE ^ 0xCE);
  v251 = v250 - 224 * ((613566757 * (unint64_t)(v250 >> 5)) >> 32);
  v252 = (HIWORD(v236) ^ 0x1A77) + (v251 ^ 0x9A942035) - ((2 * v251) & 0x194) + 1701568459;
  v253 = ((2 * v251) & 0x1F6)
       + (v251 ^ 0xEF7677FB)
       + ((2 * ((v252 ^ 0x7F) + 2 * v252 + 129)) & 0x1EC)
       + (((v252 ^ 0x7F) + 2 * v252 - 127) ^ 0xEFFCFBF6);
  v254 = v253 - ((2 * v253 + 18421790) & 0x26DCFE08);
  v255 = *(_DWORD *)&v101[4 * (HIBYTE(v225) ^ 7)];
  v256 = *(_DWORD *)&v111[4 * (((BYTE2(v225) ^ 0x55) - ((v225 >> 15) & 0x154) + 1194) ^ 0x4DC)] ^ v245 ^ *(_DWORD *)&v110[4 * ((((2 * (BYTE1(v236) ^ 0x2C)) | 0xAD7545AA) - (BYTE1(v236) ^ 0x2C) + 692411691) ^ 0xD6BAA2FC)] ^ (v247 + 2131057402) ^ ((v223 >> 31) - ((2 * (v223 >> 31)) & 0xBAA7324E) - 581723865);
  v257 = (16
        * ((v255 ^ 0x72961D1B) * (v255 ^ 0x72961D1B) - ((2 * (v255 ^ 0x72961D1B) * (v255 ^ 0x72961D1B)) & 0x72D4D0A))
        + 963274832) ^ 0x396A6850;
  LOWORD(v252) = (BYTE1(v244) ^ 0xFD) - ((2 * (BYTE1(v244) ^ 0xFD)) & 0x16A) + 30389;
  v258 = (v252 & 0x387 ^ 0x121A9F02) + (v252 & 0x78 ^ 0x81804009) - 1;
  v259 = ((v258 ^ 0x3004) & (v258 ^ 0x939ADD46)) - ((2 * ((v258 ^ 0x3004) & (v258 ^ 0x939ADD46))) & 0x389E754C);
  v260 = (((v258 ^ 0xD8D9B004) + (v258 ^ 0x939ADD46)) ^ 0xEEE1B3FD)
       + ((2 * ((v258 ^ 0xD8D9B004) + (v258 ^ 0x939ADD46))) & 0xDDC367FA)
       + ((2 * v259 - 1197574836) ^ 0x710E3D99)
       + ((2 * (2 * v259 - 1197574836)) & 0x6CDF6E54 ^ 0x9FE395EF)
       + 1;
  v261 = *(_DWORD *)&v106[4 * (v209 ^ 0x28)];
  HIDWORD(v223) = v261 ^ 0xAC2EFF;
  LODWORD(v223) = ~v261;
  v262 = *(_DWORD *)&v111[4 * ((v254 + 872090387) ^ 0x136E7F59)] ^ v255 ^ *(_DWORD *)&v110[4 * (BYTE1(v244) ^ 0x84)] ^ ((v223 >> 31) - ((2 * (v223 >> 31)) & 0x7785866E) - 1144863945) ^ (v257 - ((2 * v257) & 0x333876A0) - 1717814443) ^ (v260 - ((2 * v260 - 1893988772) & 0x86D041B0) + 183903238);
  v263 = *(_DWORD *)&v101[4 * (HIBYTE(v236) ^ 0xDB)];
  v264 = (16
        * ((v263 ^ 0x72961D1B) * (v263 ^ 0x72961D1B) - ((2 * (v263 ^ 0x72961D1B) * (v263 ^ 0x72961D1B)) & 0xC4CCF80))
        - 496600064) ^ 0xE2667C00;
  v265 = ((v225 ^ 0xC0) - ((2 * (v225 ^ 0xC0)) & 0xBE) + 862071391) ^ 0x214A274E;
  v266 = *(_DWORD *)&v106[4 * ((((2 * v265) | 0xD5EE9E08) - v265 + 352891132) ^ 0xF8DF423C)];
  HIDWORD(v223) = v266 ^ 0xAC2EFF;
  LODWORD(v223) = ~v266;
  v267 = (((2 * (BYTE2(v244) ^ 0x7D)) & 0xC0) - (BYTE2(v244) ^ 0x7D) + 795616159) ^ 0xA7B6601D;
  v268 = *(_DWORD *)&v101[4 * (HIBYTE(v244) ^ 0x97)];
  v269 = *(_DWORD *)&v111[4 * ((-1790864241 - (v267 | 0x9541948F) + (v267 | 0x6ABE6B70)) ^ 0xE26428E4)] ^ v263 ^ *(_DWORD *)&v110[4 * (BYTE1(v209) ^ 0x4E)] ^ (v264 - ((2 * v264) & 0xBD8EDF60) + 1590128573) ^ ((v223 >> 31) - ((2 * (v223 >> 31)) & 0x392849E0) + 479470832);
  v270 = (16
        * ((v268 ^ 0x72961D1B) * (v268 ^ 0x72961D1B) - ((2 * (v268 ^ 0x72961D1B) * (v268 ^ 0x72961D1B)) & 0x4625978))
        + 588434368) ^ 0x2312CBC0;
  v271 = v225 >> 8;
  v272 = (v225 >> 8) & 0x45 ^ 0x4A84C544;
  v273 = ((v236 ^ 0xA) - ((2 * (v236 ^ 0xA)) & 0x5E) - 739762129) ^ 0x516422BF;
  v274 = *(_DWORD *)&v106[4 * ((2056745837 - (v273 | 0x7A97736D) + (v273 | 0x85688C92)) ^ 0x7E48E36)];
  HIDWORD(v223) = v274 ^ 0xAC2EFF;
  LODWORD(v223) = ~v274;
  v275 = *(_DWORD *)&v111[4 * (BYTE2(v209) ^ 0x9A)] ^ *(_DWORD *)&v110[4
                                                                     * ((v272 + (v271 & 0xBA ^ 0x91) - 1) ^ 0x4A84C52B)] ^ v268 ^ ((v223 >> 31) - ((2 * (v223 >> 31)) & 0xEA3D2CFA) + 1964938877) ^ (v270 - ((2 * v270) & 0x184042E0) - 1944051332);
  v276 = *(_DWORD *)&v101[4 * (HIBYTE(v256) ^ 0x59)];
  v277 = (16
        * ((v276 ^ 0x72961D1B) * (v276 ^ 0x72961D1B) - ((2 * (v276 ^ 0x72961D1B) * (v276 ^ 0x72961D1B)) & 0xFF21EB0))
        - 7277184) ^ 0xFF90F580;
  v278 = ((v275 ^ 0xDA) - ((2 * (v275 ^ 0xDA)) & 0xC) + 669402374) ^ 0x375E215A;
  v279 = *(_DWORD *)&v106[4 * ((394430309 - (v278 | 0x17828765) + (v278 | 0xE87D789A)) ^ 0xF8C51C6E)];
  HIDWORD(v223) = v279 ^ 0xAC2EFF;
  LODWORD(v223) = ~v279;
  v280 = *(_DWORD *)&v111[4 * (BYTE2(v262) ^ 0xD1)] ^ v276 ^ *(_DWORD *)&v110[4 * (BYTE1(v269) ^ 0xB4)] ^ ((v223 >> 31) - ((2 * (v223 >> 31)) & 0x2273E5E4) - 1858473230) ^ (v277 - ((2 * v277) & 0x4B7ADA20) - 1514312419);
  v281 = *(_DWORD *)&v101[4 * (HIBYTE(v262) ^ 0x3E)];
  v282 = (16
        * ((v281 ^ 0x72961D1B) * (v281 ^ 0x72961D1B) - ((2 * (v281 ^ 0x72961D1B) * (v281 ^ 0x72961D1B)) & 0x1FA0774))
        - 1882178656) ^ 0x8FD03BA0;
  v283 = (((2 * (BYTE1(v275) ^ 0x7B)) | 0xFA7CDE70) - (BYTE1(v275) ^ 0x7B) - 2101243704) ^ 0x693FFCBB;
  LOWORD(v272) = (v256 ^ 0xAA) + (v256 & 0x5D ^ 0xC355) - ((v256 ^ 0xAA) & 0x5D);
  v284 = *(_DWORD *)&v106[4 * (((v272 & 0x41FF ^ 0x1581C0C3) + (v272 & 0x3E00 ^ 0x2541201) - 1) ^ 0x17D59159)];
  HIDWORD(v223) = v284 ^ 0xAC2EFF;
  LODWORD(v223) = ~v284;
  v285 = *(_DWORD *)&v111[4 * (BYTE2(v269) ^ 0x7C)] ^ v281 ^ *(_DWORD *)&v110[4
                                                                            * ((((2 * v283) & 0x1BC7A760)
                                                                              - v283
                                                                              - 233034673) ^ 0xE61DBFB0)] ^ ((v223 >> 31) - ((2 * (v223 >> 31)) & 0x8D53B306) - 961947261) ^ (v282 - ((2 * v282) & 0x776858E0) - 1145820046);
  v286 = *(_DWORD *)&v101[4 * (HIBYTE(v269) ^ 0xEB)];
  v287 = ((2 * (BYTE2(v275) ^ 0x74)) & 0x1D4) - (BYTE2(v275) ^ 0x74) + 1737697557;
  v288 = (16
        * ((v286 ^ 0x72961D1B) * (v286 ^ 0x72961D1B) - ((2 * (v286 ^ 0x72961D1B) * (v286 ^ 0x72961D1B)) & 0x56F8EB2))
        + 729576848) ^ 0x2B7C7590;
  v289 = *(_DWORD *)&v111[4
                        * (((v287 & 0x2000541 ^ 0x80008540) + (v287 ^ 0x431B3805) - ((v287 ^ 0x431B3805) & 0x4801541)) ^ 0xA2088417)] ^ v286 ^ (v288 - ((2 * v288) & 0xF629E60) + 129060661);
  v290 = *(_DWORD *)&v110[4 * (BYTE1(v256) ^ 0xE1)];
  v291 = (v290 ^ 0xDBC16AE1 ^ v289) + 1;
  v289 ^= 0x5773C373u;
  v292 = v289 + (v291 ^ 0xBBFB7EFB) + ((2 * v291) & 0x77F6FDF6) + 1141145861;
  v293 = (v290 ^ ((v290 ^ 0x8CB2A992) - ((2 * (v290 ^ 0x8CB2A992) + 2) & 0xA27BABB0) - 784476711) ^ 0xAD37B15F ^ (v292 - ((2 * v292) & 0x1E8E65D4) + 256324330))
       + v289;
  v294 = *(_DWORD *)&v106[4 * (v262 ^ 0x83)];
  HIDWORD(v223) = v294 ^ 0xAC2EFF;
  LODWORD(v223) = ~v294;
  v295 = (v293 - ((2 * v293) & 0x71CB46AC) - 1192909994) ^ ((v223 >> 31) - ((2 * (v223 >> 31)) & 0xC19463E8) + 1623863796);
  v296 = *(_DWORD *)&v101[4 * (HIBYTE(v275) ^ 0x5C)];
  v297 = (16
        * ((v296 ^ 0x72961D1B) * (v296 ^ 0x72961D1B) - ((2 * (v296 ^ 0x72961D1B) * (v296 ^ 0x72961D1B)) & 0x8489A06))
        - 1035677648) ^ 0xC244D030;
  v298 = *(_DWORD *)&v106[4 * (v269 ^ 0xCE)];
  HIDWORD(v223) = v298 ^ 0xAC2EFF;
  LODWORD(v223) = ~v298;
  v299 = ((BYTE1(v262) ^ 0x9C) - ((v262 >> 7) & 4) - 1098239230) ^ 0x308E9747;
  v300 = *(_DWORD *)&v111[4 * (BYTE2(v256) ^ 0x45)] ^ v296 ^ ((v223 >> 31)
                                                            - ((2 * (v223 >> 31)) & 0xB20B7110)
                                                            - 653936504) ^ *(_DWORD *)&v110[4
                                                                                          * ((v299
                                                                                            - ((2 * v299) & 0x4015946)
                                                                                            - 232018781) ^ 0x7C2F08C1)] ^ (v297 - ((2 * v297) & 0x8B8405A0) - 977141035);
  v301 = *(_DWORD *)&v101[4 * HIBYTE(v280)];
  v302 = 16
       * ((v301 ^ 0x72961D1B) * (v301 ^ 0x72961D1B) - ((2 * (v301 ^ 0x72961D1B) * (v301 ^ 0x72961D1B)) & 0xAB3AEF4))
       + 1436383136;
  v303 = *(_DWORD *)&v106[4
                        * ((((2 * (v300 ^ 0x26)) | 0xA217AC28)
                          - (v300 ^ 0x26)
                          + 787753452) ^ 0xD10BD6E3)];
  v304 = *(_DWORD *)&v101[4 * (HIBYTE(v285) ^ 0x8B)];
  HIDWORD(v223) = v303 ^ 0xAC2EFF;
  LODWORD(v223) = ~v303;
  v305 = ((BYTE2(v295) ^ 0x9C) - ((2 * (BYTE2(v295) ^ 0x9C)) & 0x142) + 217552289) ^ 0x8E360A33;
  v306 = 1290510529 - (v305 | 0x4CEBA0C1) + (v305 | 0xB3145F3E);
  v307 = *(_DWORD *)&v110[4
                        * ((((2 * (BYTE1(v295) ^ 0x2B)) | 0xE9E66F18) - (BYTE1(v295) ^ 0x2B) + 185387124) ^ 0xF4F33796)] ^ v301 ^ *(_DWORD *)&v111[4 * (BYTE2(v285) ^ 0x4F)] ^ ((v223 >> 31) - ((2 * (v223 >> 31)) & 0x3ECA3D14) + 526720650) ^ ((v302 ^ 0x559D77A0) - 2 * ((v302 ^ 0x559D77A0) & 0x340BB210 ^ v302 & 0x10) - 1274301943);
  v308 = (16
        * ((v304 ^ 0x72961D1B) * (v304 ^ 0x72961D1B) - ((2 * (v304 ^ 0x72961D1B) * (v304 ^ 0x72961D1B)) & 0x3B7551E))
        + 498772208) ^ 0x1DBAA8F0;
  v309 = *(_DWORD *)&v106[4 * (v280 ^ 0x9D)];
  HIDWORD(v223) = v309 ^ 0xAC2EFF;
  LODWORD(v223) = ~v309;
  v310 = v304 ^ *(_DWORD *)&v110[4
                               * (((BYTE1(v300) ^ 0xA98680F9)
                                 + ((v300 >> 8) & 0xF3 ^ 0x44106902)
                                 - ((BYTE1(v300) ^ 0xA98680F9) & 0x200080F3)) ^ 0xCD966901)] ^ ((v223 >> 31)
                                                                                              - ((2 * (v223 >> 31)) & 0x17D84418)
                                                                                              + 200024588) ^ (v308 - ((2 * v308) & 0x1400DD20) + 167800465);
  v311 = *(_DWORD *)&v101[4 * (HIBYTE(v295) ^ 0xF2)];
  v312 = *(_DWORD *)&v111[4 * (v306 ^ 0x31D5C0FA)] ^ v310;
  v313 = (16
        * ((v311 ^ 0x72961D1B) * (v311 ^ 0x72961D1B) - ((2 * (v311 ^ 0x72961D1B) * (v311 ^ 0x72961D1B)) & 0x6E4A9CA))
        - 1222291888) ^ 0xB7254E50;
  v314 = ((BYTE1(v280) ^ 0x1E) + ((v280 >> 8) & 0x86 ^ 0x96DE2880) - ((BYTE1(v280) ^ 0x1E) & 0x86)) ^ 0x96F84886;
  v315 = *(_DWORD *)&v106[4 * (v285 ^ 0x8D)];
  v316 = ((4 * v315) & 0xADFFBAD8 ^ 0xB0BAD8) + ((2 * v315) ^ 0x57A78093);
  v317 = v316 - 1459608941;
  v318 = (((v316 - 1459608941) & 0xFFFFFFFE | (v315 >> 31)) ^ 0x88A2003)
       + v316
       + ((2 * ((v316 - 1459608941) & 0xFFFFFFFE | (v315 >> 31))) & 0xEEEBBFFA ^ 0xFFFFFFFD);
  v319 = (((v315 >> 31) | 0xAEFCA61C) ^ ((int)v315 >> 31) ^ 0x1EF87389 ^ (v318
                                                                        - ((2 * v318 + 1089209636) & 0x9FF654D6)
                                                                        - 261018371))
       + v317;
  v320 = *(_DWORD *)&v111[4
                        * ((((2 * (BYTE2(v300) ^ 0x8840593)) | 0x7C604174) - (BYTE2(v300) ^ 0x8840593) + 1104142150) ^ 0xB6B4259F)] ^ *(_DWORD *)&v110[4 * ((((2 * v314) & 0x484D86) - v314 + 944490812) ^ 0x386DA935)] ^ v311 ^ (v319 - ((2 * v319) & 0xC8B18D2C) - 463944042) ^ (v313 - ((2 * v313) & 0x1DE580C0) + 250789995);
  v321 = *(_DWORD *)&v101[4 * (HIBYTE(v300) ^ 0xE6)];
  v322 = (16
        * ((v321 ^ 0x72961D1B) * (v321 ^ 0x72961D1B) - ((2 * (v321 ^ 0x72961D1B) * (v321 ^ 0x72961D1B)) & 0xAE6AAC6))
        - 684370384) ^ 0xD7355630;
  v323 = (((2 * (v295 ^ 2)) | 0x3402CD78) - (v295 ^ 2) + 1711184196) ^ 0x9A08679C;
  v324 = ((2 * (BYTE1(v285) ^ 0x89)) | 0x35835E5A) - (BYTE1(v285) ^ 0x89) - 448900909;
  v325 = *(_DWORD *)&v106[4 * ((-2045208421 - (v323 | 0x8618989B) + (v323 | 0x79E76764)) ^ 0x79EE6645)];
  HIDWORD(v223) = v325 ^ 0xAC2EFF;
  LODWORD(v223) = ~v325;
  v326 = *(_DWORD *)&v111[4 * (BYTE2(v280) ^ 0x65)] ^ v321 ^ *(_DWORD *)&v110[4
                                                                            * (((v324 & 0x61171989 ^ 0xA1161080)
                                                                              + (v324 ^ 0x5AC12F4D)
                                                                              - ((v324 ^ 0x5AC12F4D) & 0x61171989)) ^ 0xA117996B)] ^ (v322 - ((2 * v322) & 0xF2746E80) - 113625278) ^ ((v223 >> 31) - ((2 * (v223 >> 31)) & 0x970BDE22) - 880414959);
  v327 = *(_DWORD *)&v101[4 * (HIBYTE(v307) ^ 0x5F)];
  v328 = (16
        * ((v327 ^ 0x72961D1B) * (v327 ^ 0x72961D1B) - ((2 * (v327 ^ 0x72961D1B) * (v327 ^ 0x72961D1B)) & 0x70702A0))
        + 943199488) ^ 0x38381500;
  v329 = *(_DWORD *)&v106[4
                        * ((((2 * (v326 ^ 0xD11CB3A8)) & 0x2200006A)
                          - (v326 ^ 0xD11CB3A8)
                          - 1470252086) & 0x68000FFF ^ 0x68000860)];
  HIDWORD(v223) = v329 ^ 0xAC2EFF;
  LODWORD(v223) = ~v329;
  v330 = *(_DWORD *)&v111[4
                        * ((2066105834
                          - (BYTE2(v312) ^ 0x840001B8 | 0x7B2645EA)
                          + (BYTE2(v312) ^ 0x840001B8 | 0x84D9BA15)) ^ 0xD9BB62)] ^ v327 ^ *(_DWORD *)&v110[4 * (BYTE1(v320) ^ 0xE7)] ^ (v328 - ((2 * v328) & 0x584AD680) + 740649806) ^ ((v223 >> 31) - ((2 * (v223 >> 31)) & 0x72570F2A) - 1188329579);
  v331 = *(_DWORD *)&v101[4 * (HIBYTE(v312) ^ 0x55)];
  v332 = (16
        * ((v331 ^ 0x72961D1B) * (v331 ^ 0x72961D1B) - ((2 * (v331 ^ 0x72961D1B) * (v331 ^ 0x72961D1B)) & 0xA3220C6))
        - 779024848) ^ 0xD1910630;
  v333 = ((BYTE2(v320) ^ 0xCF) + (HIWORD(v320) & 0xA8 ^ 0xD6770A20) - ((BYTE2(v320) ^ 0xCF) & 0xA8)) ^ 0x96E78E98;
  v334 = *(_DWORD *)&v101[4 * (HIBYTE(v320) ^ 0xE1)];
  v335 = *(_DWORD *)&v106[4
                        * (((v307 ^ 0x21)
                          + (v307 & 0x32 ^ 0x212)
                          - ((v307 ^ 0x21) & 0x32)) ^ 0x2CE)];
  HIDWORD(v223) = v335 ^ 0xAC2EFF;
  LODWORD(v223) = ~v335;
  v336 = *(_DWORD *)&v111[4 * ((-1994138885 - (v333 | 0x8923DAFB) + (v333 | 0x76DC2504)) ^ 0x364CA10F)] ^ v331 ^ *(_DWORD *)&v110[4 * ((2025431375 - (BYTE1(v326) ^ 0x86 | 0x78B9A14F) + (BYTE1(v326) ^ 0x86 | 0x87465EB0)) ^ 0x87465EC6)] ^ ((v223 >> 31) - ((2 * (v223 >> 31)) & 0x6F57026C) - 1213497034) ^ (v332 - ((2 * v332) & 0x4AEE1BC0) - 1518924307);
  v337 = (16
        * ((v334 ^ 0x72961D1B) * (v334 ^ 0x72961D1B) - ((2 * (v334 ^ 0x72961D1B) * (v334 ^ 0x72961D1B)) & 0x271EA90))
        - 1819323264) ^ 0x938F5480;
  v338 = ((HIWORD(v326) & 0x95 ^ 0x1247C385) + (HIWORD(v326) & 0x6A ^ 0x2B) - 1) ^ 0x13D543D1;
  LOWORD(v333) = (BYTE1(v307) ^ 0x18) - ((2 * (BYTE1(v307) ^ 0x18)) & 0xFFF3) + 1785;
  v339 = *(_DWORD *)&v106[4 * (v312 ^ 0xCA)];
  HIDWORD(v223) = v339 ^ 0xAC2EFF;
  LODWORD(v223) = ~v339;
  v340 = *(_DWORD *)&v101[4 * (HIBYTE(v326) ^ 0x95)];
  v341 = (16
        * ((v340 ^ 0x72961D1B) * (v340 ^ 0x72961D1B) - ((2 * (v340 ^ 0x72961D1B) * (v340 ^ 0x72961D1B)) & 0xD032210))
        + 1746473088) ^ 0x68191080;
  v342 = *(_DWORD *)&v111[4 * ((-370294436 - (v338 | 0xE9EDC15C) + (v338 | 0x16123EA3)) ^ 0x1780BE5A)] ^ v334 ^ *(_DWORD *)&v110[4 * (((v333 & 0x309 ^ 0x1BAA8901) + (v333 & 0xF6 ^ 0x20C1) - 1) ^ 0x1BAAABEA)] ^ ((v223 >> 31) - ((2 * (v223 >> 31)) & 0x2ADC2C74) + 359536186) ^ (v337 - ((2 * v337) & 0x669DA460) - 1286680009);
  v343 = (((v312 >> 8) & 0x30) + (BYTE1(v312) ^ 0xFFFFFFFB) + (BYTE1(v312) | 0x5E93DACF) + 1) ^ 0x5DB93E91;
  v344 = *(_DWORD *)&v106[4 * (v320 ^ 0x55)];
  HIDWORD(v223) = v344 ^ 0xAC2EFF;
  LODWORD(v223) = ~v344;
  v345 = *(_DWORD *)&v111[4 * (BYTE2(v307) ^ 8)] ^ v340 ^ *(_DWORD *)&v110[4
                                                                         * ((((2 * v343) & 0x5EC9A8A) - v343 + 2097787578) ^ 0x7E23564C)] ^ ((v223 >> 31) - ((2 * (v223 >> 31)) & 0xDDE602C2) + 1861419361) ^ (v341 - ((2 * v341) & 0xC9DEC5E0) + 1693410037);
  v346 = *(_DWORD *)&v101[4 * (HIBYTE(v330) ^ 0x4C)];
  v347 = (16
        * ((v346 ^ 0x72961D1B) * (v346 ^ 0x72961D1B) - ((2 * (v346 ^ 0x72961D1B) * (v346 ^ 0x72961D1B)) & 0x7AB8924))
        - 1118025440) ^ 0xBD5C4920;
  v348 = ((BYTE2(v336) ^ 0xB1) + (HIWORD(v336) & 0x9C ^ 0x178DB50C) - ((BYTE2(v336) ^ 0xB1) & 0x9C)) ^ 0x336A58AC;
  v349 = (((2 * (v345 ^ 0xB7)) & 0x3C) - (v345 ^ 0xB7) + 1516380129) ^ 0xDA233FC0;
  v350 = *(_DWORD *)&v106[4 * ((((2 * v349) | 0x9C49F838) - v349 - 1311046684) ^ 0xCE65DCB8)];
  HIDWORD(v223) = v350 ^ 0xAC2EFF;
  LODWORD(v223) = ~v350;
  v351 = *(_DWORD *)&v101[4 * (HIBYTE(v336) ^ 0xC9)];
  v352 = (16
        * ((v351 ^ 0x72961D1B) * (v351 ^ 0x72961D1B) - ((2 * (v351 ^ 0x72961D1B) * (v351 ^ 0x72961D1B)) & 0x5D53E96))
        - 1364593488) ^ 0xAEA9F4B0;
  v353 = *(_DWORD *)&v111[4 * ((((2 * v348) & 0x8A8940) - v348 - 1380799649) ^ 0x895546B3)] ^ v346 ^ *(_DWORD *)&v110[4 * ((((2 * (BYTE1(v342) ^ 0xB31205F)) | 0x90560788) - (BYTE1(v342) ^ 0xB31205F) - 1210778564) ^ 0x431A2347)] ^ (v347 - ((2 * v347) & 0xC77D9A60) + 1673448754) ^ ((v223 >> 31) - ((2 * (v223 >> 31)) & 0x5FC40DE6) + 803342067);
  v354 = (BYTE2(v342) ^ 0xE2 | 0xD12B0321) - (BYTE2(v342) ^ 0xE2 | 0x2ED4FCDE) + 785710302;
  v355 = *(_DWORD *)&v106[4
                        * ((((2 * (v330 ^ 0xAE)) | 0xA0E2EEDC)
                          - (v330 ^ 0xAE)
                          - 1349613422) ^ 0x50717766)];
  HIDWORD(v223) = v355 ^ 0xAC2EFF;
  LODWORD(v223) = ~v355;
  v356 = *(_DWORD *)&v111[4 * (((v354 & 0x28050C ^ 0x2408180D) + (v354 & 0xD10302F3) - 1) ^ 0xF5231B17)] ^ v351 ^ *(_DWORD *)&v110[4 * ((((2 * (BYTE1(v345) ^ 0xC0C5A878)) & 0x810B01DA) - (BYTE1(v345) ^ 0xC0C5A878) - 1468519406) ^ 0x68BD8441)] ^ (v352 - ((2 * v352) & 0x68E44620) - 1267588335) ^ ((v223 >> 31) - ((2 * (v223 >> 31)) & 0x3E48CCAE) - 1625004457);
  v357 = ((BYTE2(v345) ^ 0x2E) - 1321133309 - 2 * ((BYTE2(v345) ^ 0x2E) & 3)) ^ 0xB1411BE6;
  v358 = *(_DWORD *)&v101[4 * (HIBYTE(v342) ^ 0x20)];
  v359 = (16
        * ((v358 ^ 0x72961D1B) * (v358 ^ 0x72961D1B) - ((2 * (v358 ^ 0x72961D1B) * (v358 ^ 0x72961D1B)) & 0xCCD3F82))
        - 429261808) ^ 0xE669FC10;
  v360 = *(_DWORD *)&v101[4 * (HIBYTE(v345) ^ 0x7D)];
  v361 = *(_DWORD *)&v106[4 * (v336 ^ 0x84)];
  HIDWORD(v223) = v361 ^ 0xAC2EFF;
  LODWORD(v223) = ~v361;
  v362 = ((v336 >> 8) & 0x7D ^ 0xAE1B1CF6) - ((v336 >> 8) & 0x82);
  v363 = (v362 & 0x1214A1 ^ 0x184C0A0) + (v362 ^ 0xD4733E53) - ((v362 ^ 0xD4733E53) & 0x526002A1);
  v364 = (v360 ^ 0x72961D1B) * (v360 ^ 0x72961D1B) - ((2 * (v360 ^ 0x72961D1B) * (v360 ^ 0x72961D1B)) & 0xA509F88);
  v365 = *(_DWORD *)&v111[4 * v357] ^ v358 ^ *(_DWORD *)&v110[4
                                                            * (((BYTE1(v330) ^ 0x61125465)
                                                              - ((2 * (BYTE1(v330) ^ 0x61125465)) & 0x248020)
                                                              + 106424848) ^ 0x6745BE80)] ^ ((v223 >> 31)
                                                                                           - ((2 * (v223 >> 31)) & 0x35BF4E5A)
                                                                                           - 1696618707) ^ (v359 - ((2 * v359) & 0xAD857480) - 691881406);
  v366 = (782442116 - (BYTE2(v330) ^ 0xEE | 0x2EA31E84) + (BYTE2(v330) ^ 0xEE | 0xD15CE17B)) ^ 0x65DCF8EB;
  v367 = *(_DWORD *)&v106[4
                        * (((v342 ^ 0x1501C883)
                          - ((2 * (v342 ^ 0x1501C883)) & 0x2802119E)
                          + 1947412687) ^ 0x6112E0C3)];
  HIDWORD(v223) = v367 ^ 0xAC2EFF;
  LODWORD(v223) = ~v367;
  v368 = *(_DWORD *)&v110[4 * (v363 ^ 0x299EF409)] ^ v360 ^ *(_DWORD *)&v111[4
                                                                           * ((((2 * v366) | 0x8FE187D6)
                                                                             - v366
                                                                             + 940522517) ^ 0x7370DA1E)] ^ ((v223 >> 31) - ((2 * (v223 >> 31)) & 0xBFB6217C) - 539291458) ^ (((16 * v364 + 1384447040) ^ 0x5284FC40) - ((2 * ((16 * v364 + 1384447040) ^ 0x5284FC40)) & 0xC96FAE40) - 457713876);
  v369 = (((2 * (BYTE1(v365) ^ 0x25)) | 0xE0E477B8) - (BYTE1(v365) ^ 0x25) + 260949028) ^ 0x924336FF;
  v370 = -520161846 - (v369 | 0xE0FEF5CA) + (v369 | 0x1F010A35);
  v371 = (((2 * v368) ^ 0xC91A24DC) - ((2 * ((2 * v368) ^ 0xC91A24DC)) & 0x68) + 116) & 0x42;
  v372 = (v368 ^ 0xCFFDFD89)
       + ((2 * v368) & 0x1CE ^ 0xCC)
       + (v371 ^ 0x2002149)
       + ((2 * v371) ^ 0xFFFFFF7F);
  v373 = (char *)*(&off_10112C750 + (int)a9) - 277989987;
  v374 = *(_DWORD *)&v373[4 * (HIBYTE(v356) ^ 0xD0)];
  v375 = v374 - ((2 * v374 - 249399484) & 0xDBFBF888);
  v376 = (char *)*(&off_10112C750 + SHIDWORD(a8)) - 1553067066;
  v377 = *(_DWORD *)&v376[4
                        * (((BYTE2(v365) ^ 0x201D10C1)
                          + (HIWORD(v365) & 0xB6 ^ 0xD762C636)
                          - ((BYTE2(v365) ^ 0x201D10C1) & 0xD00B6)) ^ 0xF772D614)];
  v378 = v377 - ((2 * v377 + 221914254) & 0x4B0BEA1E) - 333248682;
  v379 = ((BYTE1(v368) ^ 9) - ((v368 >> 7) & 0x1C4) + 693862626) & 0x2008FFFF;
  v380 = v379 ^ 0x200880F9;
  v379 ^= 0xB9C3A36C;
  v381 = v380 + v379;
  v382 = (v380 & v379) - ((2 * (v380 & v379)) & 0x400171A2);
  v383 = (v381 ^ 0x6DDB9FFF)
       + ((2 * v381) & 0xD3B73FFE)
       + ((2 * v382 + 1170567586) ^ 0x4FC571B7)
       + ((2 * (2 * v382 + 1170567586)) & 0xEBFFFFD4 ^ 0x74751CBB)
       + 1;
  v384 = ((v353 & 0x9E ^ 0xB1FBE293) + (v353 & 0x61) - 1) ^ 0x31FAF07F;
  v385 = (char *)*(&off_10112C750 + (int)a8) - 504601322;
  v375 -= 426821658;
  v386 = (char *)*(&off_10112C750 + SHIDWORD(a7)) - 2057862718;
  v387 = v375 ^ *(_DWORD *)&v385[4
                               * ((-1890937858
                                 - (BYTE1(v368) ^ 0x101500DA | 0x8F4A93FE)
                                 + (BYTE1(v368) ^ 0x101500DA | 0x70B56C01)) ^ 0x60A06C86)] ^ *(_DWORD *)&v386[4 * ((189133389 - (v384 | 0xB45F24D) + (v384 | 0xF4BA0DB2)) ^ 0x74BB1F4D)] ^ (v375 >> 3) ^ (v375 >> 5) ^ v378 ^ (856359233 - ((v378 >> 4) & 0x2257315 ^ 0xD710244E | 0x330B0141) + ((v378 >> 4) & 0x2257315 ^ 0xD710244E | 0xCCF4FEBE)) ^ (v383 + 406561761 + (~(2 * v383 + 273203160) | 0xDFD17817));
  LOBYTE(v377) = (BYTE4(v447) - 119) | (((v447 + 95) ^ 0xD7) + ((2 * (v447 + 95)) & 0xAE) + 41);
  v388 = (BYTE2(v368) ^ 0xB6 | 0xBA8324A5) - (BYTE2(v368) ^ 0xB6 | 0x457CDB5A) + 1165810522;
  v389 = (v377 - ((2 * v377) & 0x90)) == 0;
  v390 = ((v388 & 0x10010088) + (v388 ^ 0x7E07789F) - ((v388 ^ 0x7E07789F) & 0x14658888) + 6324224) ^ 0x2105AADB;
  if (v389)
    v390 = v387 ^ 0xBD31066F;
  v391 = (v356 ^ 0x84) + (v356 & 0xF7 ^ 0x4073) - ((v356 ^ 0x84) & 0xFFFFFFF7);
  v392 = *(_DWORD *)&v373[4 * (HIBYTE(v353) ^ 0x3A)];
  v393 = *(_DWORD *)&v373[4 * (HIBYTE(v365) ^ 0x67)];
  v394 = *(_DWORD *)&v373[4 * (HIBYTE(v368) ^ 0x31)];
  v395 = (((2 * (BYTE2(v353) ^ 0x4BFBE666)) & 0x7F3482C) - (BYTE2(v353) ^ 0x4BFBE666) + 2013414377) ^ 0x1629837E;
  v396 = *(_DWORD *)&v376[4
                        * (((BYTE2(v356) ^ 0xA006044E) - ((2 * (BYTE2(v356) ^ 0xA006044E)) & 0x40040104) - 1230273918) ^ 0x16AD860B)];
  v397 = *(_DWORD *)&v376[4 * (v390 ^ 0xF1E47E0D)];
  v398 = *(_DWORD *)&v376[4 * ((v395 - ((2 * v395) & 0x62B0DA4) - 2095741230) ^ 0xA6C5A048)];
  v399 = (BYTE1(v356) ^ 0x2C) - ((2 * (BYTE1(v356) ^ 0x2C)) & 0x1DA) + 2004247789;
  v400 = *(_DWORD *)&v385[4 * (v370 ^ 0x7D300784)];
  v401 = *(_DWORD *)&v385[4 * (BYTE1(v353) ^ 0xF8)];
  v402 = *(_DWORD *)&v385[4
                        * (((v399 & 0x20702618 ^ 0x881210) + (v399 ^ 0x757165CF) - ((v399 ^ 0x757165CF) & 0x20618)) ^ 0x22FD3799)];
  v403 = *(_DWORD *)&v386[4 * v372 + 3087500488];
  v404 = *(_DWORD *)&v386[4 * (v391 ^ 0x40CC)];
  v405 = *(_DWORD *)&v386[4 * (v365 ^ 0x61)];
  v406 = (-2071304629 - (v387 ^ 0x7E | 0x848A664B) + (v387 ^ 0x7E | 0x7B7599B4)) ^ 0x9277DD94;
  v407 = (char *)*(&off_10112C750 + (int)a7) - 1899588543;
  v408 = v407[(338961550 - (v406 | 0x1434248E) + (v406 | 0xEBCBDB71)) ^ 0x2C99F89];
  *(_BYTE *)(((HIDWORD(v451) + 396188099 - (v451 & 0x2F3AB390)) ^ 0xFFFFE7EDC8637622)
           + a1
           + ((2 * ((HIDWORD(v451) + 396188099 - (v451 & 0x2F3AB390)) ^ 0x179D59CD)) & 0x1BFFC5FDELL)
           + 0x18122001D011) = v408 ^ (v408 >> 3) ^ (v408 >> 2) ^ 1;
  v409 = v392 - ((2 * v392 - 249399484) & 0xEBD6E88C);
  v410 = v396 - ((2 * v396 + 221914254) & 0x20192C84) - 693524343;
  v411 = ((v410 >> 4) & 0x2257315 ^ 0x2201315)
       + ((v410 >> 4) & 0x2203111 ^ 0x190028E0)
       - (((v410 >> 4) & 0x2257315 ^ 0x2201315) & 0x2203111);
  v412 = (v409 - 293818392) ^ v400 ^ ((v409 - 293818392) >> 3) ^ ((v409 - 293818392) >> 5) ^ v410 ^ v403 ^ ((v411 & 0x98A2859 ^ 0x31820008) + (v411 & 0x675D7A6 ^ 0x704181) - 1);
  v413 = (char *)*(&off_10112C750 + SHIDWORD(a6)) - 949191102;
  *(_BYTE *)(((v53 - 1674668538 - (v450 & 0x385D2C0C)) ^ 0xF9F3659F2EC5CB39)
           + a1
           + ((2 * ((v53 - 1674668538 - (v450 & 0x385D2C0C)) ^ 0x9C2E9606)) & 0x165D6BA7ELL)
           + 0x60C9A604D14A2C1) = v413[BYTE2(v412) ^ 0x3ELL] ^ 0xA4 ^ (((16 * v413[BYTE2(v412) ^ 0x3ELL]) ^ 0x40)
                                                                       * (v413[BYTE2(v412) ^ 0x3ELL] ^ 4)
                                                                       - 121);
  v414 = v393 - 2 * ((v393 + 412171170) & 0x1B38A05F ^ v393 & 1);
  v415 = v397 - ((2 * v397 - 1925569394) & 0xCFB5F7C2) - 1367863768;
  v416 = (((v415 >> 4) & 0x2257315 ^ 0x2257014)
        + ((v415 >> 4) & 0x13310 ^ 0xE8C88F60)
        - (((v415 >> 4) & 0x2257315 ^ 0x2257014) & 0x13310)) ^ 0xE889FF70;
  v417 = v404 ^ v401 ^ (v414 - 1815487488) ^ v415 ^ ((v414 - 1815487488) >> 3) ^ ((v414 - 1815487488) >> 5) ^ (((2 * v416) & 0x9A8AA2) - v416 - 1172129116);
  v418 = ((BYTE1(v417) ^ 0x66) - ((2 * (BYTE1(v417) ^ 0x66)) & 0x1AA) + 1208562645) ^ 0x888391AC;
  v419 = (char *)*(&off_10112C750 + (int)a6) - 1503016502;
  *(_BYTE *)(v459 - 0x7BFFFAAFFEBEBB67) = v419[(v418 - ((2 * v418) & 0x1142A06) - 1091955453) ^ 0x7E60B7B0] ^ ((BYTE1(v417) ^ 0xA) - ((2 * (BYTE1(v417) ^ 0xA) - 98) & 0xE7) - 62) ^ 0x4E;
  v420 = (char *)*(&off_10112C750 + SHIDWORD(a5)) - 285610870;
  *(_BYTE *)(v455 + 0x2040301004E00C63) = BYTE3(v412) ^ 0x31 ^ v420[BYTE3(v412) ^ 0xALL];
  v421 = v398 - ((2 * v398 - 1925569394) & 0xDE66FF80) + 902861319;
  v422 = ((v421 >> 4) & 0x2257315 ^ 0x257111 | 0xD4711E1F)
       - ((v421 >> 4) & 0x2257315 ^ 0x257111 | 0x2B8EE1E0)
       + 730784224;
  v423 = v421 ^ 0xEF337FC0;
  v424 = (v421 ^ 0xEF337FC0) + (v421 ^ 0xC6B9DC25 ^ v422) + 1;
  v425 = (v422 ^ ((v422 ^ 0x298AA3E5) - ((2 * (v422 ^ 0x298AA3E5) + 2) & 0xCC0603A0) - 436010543) ^ (v424 - ((2 * v424) & 0x423069D4) - 1592249110) ^ 0x916E6920)
       + v423;
  v426 = v405 ^ v402 ^ (v394 - ((2 * v394 + 1898084164) & 0x4DE83FE2) - 1618650221) ^ ((v394
                                                                                      - ((2 * v394 + 1898084164) & 0x4DE83FE2u)
                                                                                      - 1618650221) >> 3) ^ ((v394 - ((2 * v394 + 1898084164) & 0x4DE83FE2u) - 1618650221) >> 5) ^ (v425 - ((2 * v425) & 0x91284D08) - 929814908);
  *(_BYTE *)((((_DWORD)v448 - 1610679867 - (HIDWORD(v448) & 0x3FFDF3A2u)) ^ 0x6FF33FFBD8210666)
           + ((2 * (((_DWORD)v448 - 1610679867 - (HIDWORD(v448) & 0x3FFDF3A2)) ^ 0x9FFEF9DD)) & 0x8FBFFF76)
           + a1
           - 0x6FF33FFB47DFFFBBLL) = v419[((BYTE1(v426) ^ 0xFFFFFFFE) + 2102499856 + ((v426 >> 7) & 0x1E0)) ^ 0x7D519A38] ^ ((BYTE1(v426) ^ 0x90) - ((2 * (BYTE1(v426) ^ 0x90) + 30) & 0x48) + 115) ^ 0x3D;
  v427 = (735717818 - (~BYTE1(v387) | 0x2BDA29BA) + (~BYTE1(v387) | 0xD425D645)) ^ 0xF623CE45;
  v428 = ((v387 >> 7) & 0x1FFFFE6 ^ 0xFFFFFFE4) + ((v387 >> 8) ^ 1);
  *(_BYTE *)(v458 - 0x5EAE7BFBFDAFEB3ELL) = v419[(v427 - ((2 * v427) & 0x3E307E08) - 552059132) ^ 0xFD1E27AFLL] ^ (v428 - ((2 * v428 - 72) & 0xF4) + 86) ^ 0xA1;
  LOWORD(v428) = (v426 ^ 0x87) + (v426 & 0xAD ^ 0x2E28) - ((v426 ^ 0x87) & 0xAD);
  v429 = v407[((v428 & 0x117 ^ 0x85107012) + (v428 & 0x2E8 ^ 0x902A1) - 1) ^ 0x8519700ALL];
  *(_BYTE *)(((HIDWORD(v453) + 1049704693 - (v453 & 0x7D2271EA)) ^ 0xA77D7F39446A544ELL)
           + ((2 * ((HIDWORD(v453) + 1049704693 - (v453 & 0x7D2271EA)) ^ 0x3E9138F5)) & 0xF5F6D976)
           + a1
           + 0x588280C685049345) = v429 ^ (v429 >> 3) ^ (v429 >> 2) ^ 0xEB;
  v430 = (1360094491 - (v412 ^ 0x69 | 0x5111651B) + (v412 ^ 0x69 | 0xAEEE9AE4)) ^ 0xE6EF1A24;
  v431 = v407[(v430 - ((2 * v430) & 0xF4CB31AE) + 2053478615) ^ 0x32641804];
  *(_BYTE *)(v449 - 0x5E3F6FFA7F1BEDBELL) = v431 ^ (v431 >> 2) ^ (v431 >> 3) ^ 0xD9;
  *(_BYTE *)(v452 + 0x111A040A64AD7911) = HIBYTE(v417) ^ 0x46 ^ v420[HIBYTE(v417) ^ 0x42];
  v432 = v413[((BYTE2(v387) ^ 0xFFFFFFED) - 680923386 + ((2 * BYTE2(v387)) | 0x512C21F6)) ^ 0x289610C3];
  v433 = (v432 ^ 0xFFFFFF94) * (v432 ^ 0xFFFFFF94) - ((2 * (v432 ^ 0xFFFFFF94) * (v432 ^ 0xFFFFFF94)) & 0xFFFFFF8F);
  HIDWORD(v434) = v432 ^ 0x11;
  LODWORD(v434) = v432 << 24;
  v435 = (v434 >> 31) + (~(2 * (v434 >> 31)) | 0xFFFFFFBB) + 35;
  v436 = 32 * ~(v433 + 79) - ((((v433 + 79) & 1) == 0) << 6) - 89;
  v437 = ((v436 ^ 0xFFFFFFA7) & 0xFFFFFFFE | ((v433 + 87) >> 3) & 1) + (v436 >> 6 << 7) + 72;
  HIDWORD(v434) = v437 ^ ~v435;
  LODWORD(v434) = (v437 ^ v435 ^ 0x94) << 24;
  v438 = v434 >> 25;
  LOBYTE(v437) = (2 * v438) & 0xA6;
  LOBYTE(v438) = v438 - 45;
  LOBYTE(v437) = v438 - v437;
  LOBYTE(v438) = (v437 & 0x8F ^ 0x84) + (v438 & 1 ^ 0x51) - (v438 & 1);
  LOBYTE(v438) = (((v438 ^ 0xAF) + (v438 | 0x57) + (v438 & 0xA8) + 1) ^ 0xA5) & (((v437 & 0x70 ^ 0xDF)
                                                                                + ((2 * (v437 & 0x70)) ^ 0x59)
                                                                                - 12) ^ 0xF3);
  *(_BYTE *)(v460 - 0x77EF75BDFFBDB6E9) = (v438 - ((2 * v438) & 0xB6) + 91) ^ 0x5B;
  v439 = (((v426 >> 15) & 0x112) + (BYTE2(v426) ^ 0xFFFFFFDF) + 41997943) ^ 0x1284E072;
  LOBYTE(v439) = v413[(((2 * v439) & 0x694A) - v439 - 1704621222) ^ 0x8A61BD65];
  *(_BYTE *)(((HIDWORD(v454) + 429491560 + (v454 & 0x33330AC0 ^ 0xFFFFFFEF) + 1) ^ 0x55FFEA7DE77E78D7)
           + a1
           + ((2 * ((HIDWORD(v454) + 429491560 + (v454 & 0x33330AC0 ^ 0xFFFFFFEF) + 1) ^ 0x19998568)) & 0x1FDCFFB7ELL)
           - 0x55FFEA7DFEE7FDBFLL) = v439 ^ 0x72 ^ ((16 * (v439 ^ 0x94) * (v439 ^ 0x94)) | 1);
  v440 = ((2 * ((v426 >> 19) & 0xE0 ^ 0x67F0ECB8)) & 0x87C0C130) - ((v426 >> 19) & 0xE0 ^ 0x67F0ECB8) - 1273852060;
  v441 = ((v440 & 0x1C22DC0 ^ 0x60AC0405) + (v440 & 0x92005230 ^ 0x90005231) - 2) ^ 0x636E35E4 | (v426 >> 27);
  v442 = v441 - ((2 * v441) & 0x18) + 12;
  HIDWORD(v434) = v442 ^ 7;
  LODWORD(v434) = (v442 ^ 0xFFFFFFBF) << 24;
  *(_BYTE *)(((v78 - 1854941465 + (v457 & 0x22DFADC6 ^ 0xFFFFFFF7) + 1) ^ 0x2362EFDE6E12298CLL)
           + a1
           + ((2 * ((v78 - 1854941465 + (v457 & 0x22DFADC6 ^ 0xFFFFFFF7) + 1) ^ 0x916FD6E7)) & 0x1FEFBFED6)
           - 0x2362EFDEFF7DFF6BLL) = v420[((v434 >> 29) + (~(2 * (v434 >> 29)) | 0x51) + 88) ^ 0x75] ^ ((v434 >> 29) + (~(2 * (v434 >> 29)) | 0x51) + 88) ^ 0xF1;
  v443 = (((v412 >> 8) & 0xE7 ^ 0xBDBD4A2) + ((v412 >> 8) & 0x18 ^ 9) - 1) ^ 0x1FDB446F;
  *(_BYTE *)(((HIDWORD(v456) + 951847267 + (v456 & 0x717812C2 ^ 0xFFFFFFFB) + 1) ^ 0xE5F74FC5CE45F48CLL)
           + a1
           + ((2 * ((HIDWORD(v456) + 951847267 + (v456 & 0x717812C2 ^ 0xFFFFFFFB) + 1) ^ 0x38BC0963)) & 0x1EDF3FBDELL)
           + 0x1A08B03A09060211) = ((BYTE1(v412) ^ 0xEF) - ((2 * (BYTE1(v412) ^ 0xEF) + 30) & 0x44) + 113) ^ v419[(((2 * v443) | 0x270417A8) - v443 - 327289812) ^ 0x7829B58] ^ 0xE0;
  LOBYTE(v443) = v413[((BYTE2(v417) ^ 0xFFFFFFD5) - 1888713021 + ((2 * BYTE2(v417)) | 0xE126F27C)) ^ 0x709379EELL];
  LOBYTE(v437) = (16 * ((v443 ^ 0x94) * (v443 ^ 0x94) - ((2 * (v443 ^ 0x94) * (v443 ^ 0x94)) & 8)) - 64) ^ 0xC0;
  *(_BYTE *)(v463 - 0x7EEDFE5FFD7E3A57) = v443 ^ (v437 - ((2 * v437) & 0xA0) - 34) ^ 0x30;
  *(_BYTE *)(((v461 - 631143782 + (~(2 * v461) | 0x4B3CFACB) + 1) ^ 0xABE3FB7E97B6FBE5)
           + ((2 * ((v461 - 631143782 + (~(2 * v461) | 0x4B3CFACB) + 1) ^ 0xDA61829A)) & 0x9BAEF2FE)
           + a1
           + 0x541C0481B2288681) = BYTE3(v387) ^ 0xD3 ^ v420[BYTE3(v387) ^ 0x61];
  v444 = v407[((v417 ^ 0x82) - ((2 * v417) & 0xF8) + 1148) ^ 0x42BLL];
  *(_BYTE *)(((v462 + 805260079 + ((2 * v462) & 0x5FFE9648 ^ 0xFFFFFFE9) + 1) ^ 0x7FBEFFFB62008676)
           + ((2 * ((v462 + 805260079 + ((2 * v462) & 0x5FFE9648 ^ 0xFFFFFFE9) + 1) ^ 0x2FFF4B2F)) & 0x9BFF9AB2)
           + a1
           - 0x7FBEFFFB4DFFCD59) = v444 ^ (v444 >> 2) ^ (v444 >> 3) ^ 0x56;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v26 - 248) + 8 * (int)((22105 * ((((_DWORD)v464 - 136045814 - 2 * (((_DWORD)v464 + 16) & 0x77E41AFF ^ v25 & 5)) ^ 0xF7E41AFA) < HIDWORD(a12))) ^ a12)) - 4))(35664145, v387, a1, v413, v446, v412, v407, v419, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           v446,
           v447,
           v448,
           a23,
           v449,
           a25,
           v450,
           v451,
           v452,
           v453,
           v454,
           v455,
           v456,
           v457);
}

uint64_t sub_100128878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8 * SHIDWORD(a9)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_1001288C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26)
{
  uint64_t v26;

  return ((uint64_t (*)(void))(*(_QWORD *)(v26
                                        + 8
                                        * (a5 ^ (1019
                                               * (((2 * (a26 - ((a10 + 1585608950) & 0xAB0A246A) - 503849383)) & 0xBEAEFFAA ^ 0xAA0A242A)
                                                + ((a26 - ((a10 + 1585608950) & 0xAB0A246A) - 503849383) ^ 0x8AD26DE0)
                                                + 1039072256 != 491158485))))
                            - 8))();
}

uint64_t sub_100128998(int a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((a4 - 25696 + ((a4 + 1822525611) & 0x935EDB76))
                                     * ((a1 + v4 + 547913771) > 7)) ^ a4)))();
}

uint64_t sub_100128A3C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8
                                                      + 8
                                                      * (((((a6 + 9457) | 0x42) ^ 0xB049)
                                                        * ((a2 + a8 - 16) > 0xFFFFFFEF)) ^ a6))
                                          - ((a6 - 16111) ^ 0x1F20)))(a1);
}

uint64_t sub_100128A8C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, unint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _BOOL4 v36;
  int v38;
  int v40;

  v26 = (a1 + v24 + a2);
  v27 = v26 + a21 - 0x2688F2B3E985310CLL + 1;
  v28 = ((_BYTE)a1 + (_BYTE)v24 + (_BYTE)a2) & 0xF;
  v29 = v21 + v28 - v26;
  v30 = v21 + v28 + 1;
  v31 = v22 + v28 - v26;
  v32 = v22 + v28 + 1;
  v33 = v23 + v28 + 1 - v26;
  v34 = v28 + 9 * (a3 ^ 0x11B2u) + v23 - 33604;
  v36 = a4 < v30 && v29 < v27;
  v38 = a4 < v32 && v31 < v27 || v36;
  if (v33 >= v27 || a4 >= v34)
    v40 = v38;
  else
    v40 = 1;
  return (*(uint64_t (**)(void))(v25 + 8 * (((v40 ^ 1) * ((3443 * (a3 ^ 0x1F22)) ^ 0x50D8)) ^ a3)))();
}

uint64_t sub_100128B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)(v9 - 256) = a8 + 12590;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v10
                                                                                + 8
                                                                                * ((11
                                                                                  * (v8 >= ((a8 - 20642) | 0x8B04u)
                                                                                         - 35588)) ^ a8))
                                                                    - 4))(a1, a2, a3, 0);
}

uint64_t sub_100128B94(__n128 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, int a6)
{
  uint64_t v6;
  __n128 v7;
  __n128 v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;

  v7.n128_u64[0] = (a4 + 8) & 0xF;
  v7.n128_u64[1] = (a4 + 7) & 0xF;
  v8.n128_u64[0] = (a4 + 6) & 0xF;
  v8.n128_u64[1] = (a4 + 5) & 0xF;
  v9.n128_u64[0] = (a4 + 4) & 0xF;
  v9.n128_u64[1] = (a4 + 3) & 0xF;
  v10.n128_u64[0] = 0x3737373737373737;
  v10.n128_u64[1] = 0x3737373737373737;
  v11.n128_u64[0] = 0x6262626262626262;
  v11.n128_u64[1] = 0x6262626262626262;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(*(_QWORD *)(v6 - 248) + 8 * a6)
                                                                                         - 12))(a1, v7, v8, v9, (__n128)xmmword_100DF7480, v10, v11);
}

uint64_t sub_100128C94(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, int a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v27;
  int8x16_t v29;
  int8x16_t v30;
  int8x16_t v31;

  v27 = ((_BYTE)v19 + (_BYTE)a15) & 0xF;
  v29.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v29.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v23, a5).u64[0];
  v30 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v18 + (v19 + a15)), *(int8x16_t *)(v15 + v27 - 15)), veorq_s8(*(int8x16_t *)(v16 + v27 - 15), *(int8x16_t *)(v27 + v17 - 14))));
  v31 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v30, v30, 8uLL), a7), vmulq_s8(v29, a6)));
  *(int8x16_t *)(v18 + (v19 + a15)) = vextq_s8(v31, v31, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v22 + 8 * (((v20 == 0) * v21) ^ a12)) - 12))();
}

uint64_t sub_100128D1C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (a8 ^ (47 * (v8 == a4)))) - (((a8 - 37687) | 0x4020u) ^ 0x50BELL)))();
}

uint64_t sub_100128D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v8 = 4156 * (((v5 - 20146) | 0x8146) ^ 0x834E);
  *(_DWORD *)(v6 - 256) = v8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                                         + 8
                                                                                         * ((3745
                                                                                           * ((v4 & 8) == v8 - 33248)) ^ v5))
                                                                             - 4))(a1, a2, a3, a4, (a3 - a4));
}

uint64_t sub_100128DAC(double a1, __n128 a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;

  a2.n128_u16[0] = 14135;
  a2.n128_u8[2] = 55;
  a2.n128_u8[3] = 55;
  a2.n128_u8[4] = 55;
  a2.n128_u8[5] = 55;
  a2.n128_u8[6] = 55;
  a2.n128_u8[7] = 55;
  a3.n128_u16[0] = 25186;
  a3.n128_u8[2] = 98;
  a3.n128_u8[3] = 98;
  a3.n128_u8[4] = 98;
  a3.n128_u8[5] = 98;
  a3.n128_u8[6] = 98;
  a3.n128_u8[7] = 98;
  return ((uint64_t (*)(__n128, __n128, __n128))(*(_QWORD *)(v4 + 8 * *(int *)(v3 - 256)) - 8))((__n128)xmmword_100DF7490, a2, a3);
}

uint64_t sub_100128E40(int8x16_t a1, int8x8_t a2, int8x8_t a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int8x16x4_t v66;

  v63 = (a5 + a7 + 8);
  v66.val[0].i64[0] = ((_BYTE)a5 + (_BYTE)a7 + 8) & 0xF;
  v66.val[0].i64[1] = (v60 + (_BYTE)a7 + 8) & 0xF;
  v64 = *(_QWORD *)(v62 - 248);
  v66.val[1].i64[0] = (v59 + (_BYTE)a7 + 8) & 0xF;
  v66.val[1].i64[1] = (v58 + (_BYTE)a7 + 8) & 0xF;
  v66.val[2].i64[0] = (v57 + (_BYTE)a7 + 8) & 0xF;
  v66.val[2].i64[1] = (v56 + (_BYTE)a7 + 8) & 0xF;
  v66.val[3].i64[0] = (a10 + (_BYTE)a7 + 8) & 0xF;
  v66.val[3].i64[1] = (v55 + (_BYTE)a7 + v61 + 8) & 0xF;
  *(int8x8_t *)(v54 + v63) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v54 + v63), *(int8x8_t *)(v51 + (v63 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v52 + (v63 & 0xF) - 7), *(int8x8_t *)((v63 & 0xF) + v53 - 6)))), a3), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v66, a1), a2)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v64 + 8 * ((31 * (a51 == a7)) ^ *(_DWORD *)(v62 - 256))) - 8))();
}

uint64_t sub_100128F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,unsigned int a46,int a47,int a48)
{
  uint64_t v48;

  return (*(uint64_t (**)(void))(v48 + 8 * (((a46 ^ 0x9C62 ^ (a46 + 25634) ^ 0x8A68) * (a48 == a47)) ^ a46)))();
}

uint64_t sub_100128F88()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (v0 - 235)) - 8))(98, 5033);
}

uint64_t sub_100128FAC@<X0>(char a1@<W0>, int a2@<W1>, int a3@<W4>, uint64_t a4@<X8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v12 = (a3 + v9);
  *(_BYTE *)(a4 + v12) ^= *(_BYTE *)(v5 + (v12 & 0xF)) ^ *(_BYTE *)(v6 + (v12 & 0xF)) ^ *(_BYTE *)((v12 & 0xF) + v7 + 1) ^ ((v12 & 0xF) * v10) ^ a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((a3 - 1 == v4) * a2) ^ v8)) - 8))();
}

void sub_100129008()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 724875930)
    v1 = 2134650450;
  else
    v1 = 2134608426;
  *(_DWORD *)(v2 + 16) = v1;
}

void sub_10012906C(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_100129130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v46;
  _BYTE v47[8];
  _BYTE v48[8];
  _BYTE v49[8];
  char v50;

  v49[0] = *(_BYTE *)(v10 - 0x2688F2B3E98530FFLL);
  v50 = *(_BYTE *)(v10 - 0x2688F2B3E985310BLL);
  *(_BYTE *)(v10 - 0x2688F2B3E985310BLL) = *(_BYTE *)(v10 - 0x2688F2B3E98530D6);
  v12 = *(_BYTE *)(v10 - 0x2688F2B3E98530F4);
  *(_BYTE *)(v10 - 0x2688F2B3E98530F4) = *(_BYTE *)(v10 - 0x2688F2B3E985310ALL);
  v13 = *(_BYTE *)(v10 - 0x2688F2B3E98530FBLL);
  v14 = *(_BYTE *)(v10 - 0x2688F2B3E9853107);
  v15 = *(_BYTE *)(v10 - 0x2688F2B3E98530FALL);
  v48[0] = *(_BYTE *)(v10 - 0x2688F2B3E9853105);
  v16 = *(_BYTE *)(v10 - 0x2688F2B3E9853103);
  v46 = *(_BYTE *)(v10 - 0x2688F2B3E98530FDLL);
  v47[0] = *(_BYTE *)(v10 - 0x2688F2B3E98530F6);
  *(_BYTE *)(v10 - 0x2688F2B3E98530FFLL) = *(_BYTE *)(v10 - 0x2688F2B3E98530EELL);
  v17 = *(_BYTE *)(v10 - 0x2688F2B3E98530FELL);
  *(_BYTE *)(v10 - 0x2688F2B3E98530FDLL) = *(_BYTE *)(v10 - 0x2688F2B3E98530DBLL);
  *(_BYTE *)(v10 - 0x2688F2B3E98530FELL) = *(_BYTE *)(v10 - 0x2688F2B3E98530FCLL);
  *(_BYTE *)(v10 - 0x2688F2B3E98530FBLL) = *(_BYTE *)(v10 - 0x2688F2B3E98530F8);
  *(_BYTE *)(v10 - 0x2688F2B3E98530FALL) = *(_BYTE *)(v10 - 0x2688F2B3E98530E4);
  *(_BYTE *)(v10 - 0x2688F2B3E9853105) = *(_BYTE *)(v10 - 0x2688F2B3E98530F9);
  *(_BYTE *)(v10 - 0x2688F2B3E98530F8) = *(_BYTE *)(v10 - 0x2688F2B3E98530D7);
  *(_BYTE *)(v10 - 0x2688F2B3E98530F6) = *(_BYTE *)(v10 - 0x2688F2B3E98530DDLL);
  v18 = *(_BYTE *)(v10 - 0x2688F2B3E98530F4);
  *(_BYTE *)(v10 - 0x2688F2B3E98530F4) = *(_BYTE *)(v10 - 0x2688F2B3E98530E6);
  *(_BYTE *)(v10 - 0x2688F2B3E9853103) = *(_BYTE *)(v10 - 0x2688F2B3E98530F3);
  *(_BYTE *)(v10 - 0x2688F2B3E9853107) = *(_BYTE *)(v10 - 0x2688F2B3E98530F2);
  v19 = v11;
  v20 = *(_BYTE *)(v10 - 0x2688F2B3E985310BLL);
  *(_BYTE *)(v10 - 0x2688F2B3E985310BLL) = *(_BYTE *)(v10 - 0x2688F2B3E98530F0);
  *(_BYTE *)(v10 - 0x2688F2B3E98530FCLL) = *(_BYTE *)(v10 - 0x2688F2B3E98530EFLL);
  *(_BYTE *)(v10 - 0x2688F2B3E98530EELL) = *(_BYTE *)(v10 - 0x2688F2B3E98530E8);
  v21 = *(_BYTE *)(v10 - 0x2688F2B3E98530EDLL);
  *(_BYTE *)(v10 - 0x2688F2B3E98530EDLL) = *(_BYTE *)(v10 - 0x2688F2B3E98530EALL);
  *(_BYTE *)(v10 - 0x2688F2B3E98530EFLL) = *(_BYTE *)(v10 - 0x2688F2B3E98530F5);
  v22 = *(_BYTE *)(v10 - 0x2688F2B3E98530ECLL);
  *(_BYTE *)(v10 - 0x2688F2B3E98530ECLL) = v14;
  v23 = *(_BYTE *)(v10 - 0x2688F2B3E9853106);
  *(_BYTE *)(v10 - 0x2688F2B3E9853106) = v15;
  v24 = *(_BYTE *)(v10 - 0x2688F2B3E98530ECLL);
  *(_BYTE *)(v10 - 0x2688F2B3E98530ECLL) = *(_BYTE *)(v10 - 0x2688F2B3E9853106);
  *(_BYTE *)(v10 - 0x2688F2B3E9853106) = v24;
  v25 = *(_BYTE *)(v10 - 0x2688F2B3E98530EBLL);
  *(_BYTE *)(v10 - 0x2688F2B3E98530EBLL) = v21;
  *(_BYTE *)(v10 - 0x2688F2B3E98530F5) = *(_BYTE *)(v10 - 0x2688F2B3E98530F1);
  *(_BYTE *)(v10 - 0x2688F2B3E98530EALL) = v22;
  v26 = *(_BYTE *)(v10 - 0x2688F2B3E985310CLL);
  *(_BYTE *)(v10 - 0x2688F2B3E98530F2) = v17;
  *(_BYTE *)(v10 - 0x2688F2B3E98530F0) = *(_BYTE *)(v10 - 0x2688F2B3E98530E9);
  *(_BYTE *)(v10 - 0x2688F2B3E98530E8) = *(_BYTE *)(v10 - 0x2688F2B3E98530E3);
  v27 = *(_BYTE *)(v10 - 0x2688F2B3E98530F7);
  *(_BYTE *)(v10 - 0x2688F2B3E98530F7) = v26;
  *(_BYTE *)(v10 - 0x2688F2B3E985310CLL) = v49[0];
  *(_BYTE *)(v10 - 0x2688F2B3E985310ALL) = v12;
  *(_BYTE *)(v10 - 0x2688F2B3E98530E6) = v25;
  v28 = *(_BYTE *)(v10 - 0x2688F2B3E9853109);
  *(_BYTE *)(v10 - 0x2688F2B3E9853109) = v13;
  *(_BYTE *)(v10 - 0x2688F2B3E98530F1) = v18;
  *(_BYTE *)(v10 - 0x2688F2B3E98530F9) = *(_BYTE *)(v10 - 0x2688F2B3E98530E5);
  v29 = *(_BYTE *)(v10 - 0x2688F2B3E9853108);
  *(_BYTE *)(v10 - 0x2688F2B3E98530E4) = *(_BYTE *)(v10 - 0x2688F2B3E985310ALL);
  v30 = *(_BYTE *)(v10 - 0x2688F2B3E98530E2);
  *(_BYTE *)(v10 - 0x2688F2B3E98530E2) = v29;
  *(_BYTE *)(v10 - 0x2688F2B3E985310ALL) = v23;
  v31 = *(_BYTE *)(v10 - 0x2688F2B3E98530E1);
  *(_BYTE *)(v10 - 0x2688F2B3E98530E1) = v16;
  *(_BYTE *)(v10 - 0x2688F2B3E98530E3) = *(_BYTE *)(v10 - 0x2688F2B3E985310CLL);
  *(_BYTE *)(v10 - 0x2688F2B3E985310CLL) = v27;
  v32 = *(_BYTE *)(v10 - 0x2688F2B3E98530E2);
  *(_BYTE *)(v10 - 0x2688F2B3E98530E2) = *(_BYTE *)(v10 - 0x2688F2B3E98530DALL);
  v33 = *(_BYTE *)(v10 - 0x2688F2B3E9853100);
  v34 = *(unsigned __int8 *)(v10 - 0x2688F2B3E98530E1);
  *(_BYTE *)(v10 - 0x2688F2B3E98530E1) = v46;
  v35 = *(_BYTE *)(v10 - 0x2688F2B3E98530E0);
  *(_BYTE *)(v10 - 0x2688F2B3E98530E0) = v33;
  *(_BYTE *)(v10 - 0x2688F2B3E98530E5) = v34;
  v36 = *(_BYTE *)(v10 - 0x2688F2B3E98530E0);
  v37 = *(unsigned __int8 *)(v10 - 0x2688F2B3E9853109);
  *(_BYTE *)(v10 - 0x2688F2B3E98530E0) = v37;
  *(_BYTE *)(v10 - 0x2688F2B3E9853100) = v35;
  *(_BYTE *)(v10 - 0x2688F2B3E9853109) = v36;
  v38 = *(_BYTE *)(v10 - 0x2688F2B3E9853100);
  *(_BYTE *)(v10 - 0x2688F2B3E9853100) = *(_BYTE *)(v10 - 0x2688F2B3E98530DFLL);
  *(_BYTE *)(v10 - 0x2688F2B3E98530DFLL) = *(_BYTE *)(v10 - 0x2688F2B3E98530DELL);
  *(_BYTE *)(v10 - 0x2688F2B3E98530DDLL) = v31;
  *(_BYTE *)(v10 - 0x2688F2B3E9853108) = v30;
  *(_BYTE *)(v10 - 0x2688F2B3E98530DBLL) = v48[0];
  *(_BYTE *)(v10 - 0x2688F2B3E98530F3) = *(_BYTE *)(v10 - 0x2688F2B3E9853101);
  v39 = *(_BYTE *)(v10 - 0x2688F2B3E98530DBLL);
  *(_BYTE *)(v10 - 0x2688F2B3E98530DBLL) = *(_BYTE *)(v10 - 0x2688F2B3E9853108);
  *(_BYTE *)(v10 - 0x2688F2B3E9853108) = v39;
  *(_BYTE *)(v10 - 0x2688F2B3E98530DALL) = v20;
  v40 = *(_BYTE *)(v10 - 0x2688F2B3E9853102);
  *(_BYTE *)(v10 - 0x2688F2B3E98530E9) = v32;
  *(_BYTE *)(v10 - 0x2688F2B3E98530DELL) = *(_BYTE *)(v10 - 0x2688F2B3E98530D9);
  v41 = *(_BYTE *)(v10 - 0x2688F2B3E98530D8);
  *(_BYTE *)(v10 - 0x2688F2B3E98530D8) = v40;
  v42 = *(_BYTE *)(v10 - 0x2688F2B3E98530D8);
  *(_BYTE *)(v10 - 0x2688F2B3E98530D8) = v38;
  *(_BYTE *)(v10 - 0x2688F2B3E9853102) = v41;
  *(_BYTE *)(v10 - 0x2688F2B3E98530D7) = v28;
  *(_BYTE *)(v10 - 0x2688F2B3E98530D9) = v42;
  v43 = *(_BYTE *)(v10 - 0x2688F2B3E98530D7);
  *(_BYTE *)(v10 - 0x2688F2B3E98530D7) = *(_BYTE *)(v10 - 0x2688F2B3E9853102);
  *(_BYTE *)(v10 - 0x2688F2B3E98530D6) = v50;
  *(_BYTE *)(v10 - 0x2688F2B3E9853101) = v47[0];
  *(_BYTE *)(v10 - 0x2688F2B3E9853102) = v43;
  v44 = *(_BYTE *)(v10 - 0x2688F2B3E98530D6);
  *(_BYTE *)(v10 - 0x2688F2B3E98530D6) = *(_BYTE *)(v10 - 0x2688F2B3E9853101);
  *(_BYTE *)(v10 - 0x2688F2B3E9853101) = v44;
  return ((uint64_t (*)(unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v19 + 8 * (v9 - 527176392)) - 8))(0xD9770D4C167ACF26, 0xD9770D4C167ACF25, 0xD9770D4C167ACF17, 0xD9770D4C167ACF29, v37, 0xD9770D4C167ACF0DLL, v34, 0xD9770D4C167ACF23, a9);
}

uint64_t sub_100129700()
{
  int v0;
  char *v1;
  uint64_t v2;
  __int16 v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v3 = *(_WORD *)(v1 + 53);
  v1[54] = v1[11];
  v1[53] = v1[10];
  *((_WORD *)v1 + 5) = v3;
  v4 = v1[52];
  v1[52] = v1[51];
  v1[51] = v1[46];
  v5 = v1[50];
  v6 = v1[35];
  LOBYTE(v3) = v1[49];
  v1[49] = v1[4];
  v1[4] = v3;
  LOBYTE(v3) = v1[47];
  v1[47] = v1[25];
  v1[46] = v1[45];
  v1[45] = v1[12];
  v1[12] = v4;
  v7 = v1[44];
  v1[44] = v1[3];
  v1[3] = v7;
  v8 = v1[43];
  v1[43] = v1[39];
  v9 = v1[42];
  v1[42] = v6;
  v1[50] = v9;
  v10 = *v1;
  *v1 = v1[41];
  v11 = v1[2];
  v1[2] = v1[40];
  v1[39] = v1[19];
  v12 = v1[38];
  v13 = v1[27];
  v14 = v1[36];
  v15 = v1[21];
  v1[35] = v1[28];
  v16 = v1[34];
  v17 = v1[26];
  v18 = v1[33];
  v19 = v1[23];
  v20 = v1[32];
  v21 = v1[6];
  v22 = v1[31];
  v23 = v1[29];
  v1[36] = v1[30];
  v1[29] = v1[16];
  v1[28] = v1[1];
  v1[27] = v19;
  v1[33] = v12;
  v1[26] = v1[5];
  v1[25] = v1[9];
  v1[38] = v1[24];
  v1[23] = v23;
  v1[31] = v18;
  v24 = v1[47];
  v1[47] = v1[22];
  v1[21] = v10;
  v1[41] = v14;
  v25 = v1[53];
  v1[53] = v1[20];
  v1[19] = v1[7];
  v1[40] = v1[18];
  v1[20] = v1[17];
  v1[16] = v1[14];
  v26 = v1[49];
  v1[49] = v1[15];
  v1[14] = v17;
  v1[34] = v22;
  v1[30] = v1[13];
  v27 = v1[12];
  v1[12] = v1[44];
  v1[44] = v27;
  v28 = v1[11];
  v1[11] = v24;
  v1[22] = v28;
  v29 = v1[10];
  v1[10] = v1[52];
  v1[52] = v29;
  v1[9] = v1[43];
  v1[43] = v3;
  v1[7] = v26;
  v1[15] = v8;
  v1[6] = v11;
  v1[18] = v20;
  v1[5] = v21;
  v1[32] = v16;
  LOBYTE(v3) = v1[4];
  v1[4] = v1[42];
  v1[42] = v3;
  LOBYTE(v3) = v1[3];
  v1[3] = v25;
  v1[17] = v3;
  LOBYTE(v3) = v1[2];
  v1[2] = v13;
  v1[24] = v3;
  v1[1] = v1[54];
  v1[54] = v5;
  v30 = *v1;
  *v1 = v15;
  v1[13] = v30;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 - 527176362)) - 8))();
}

uint64_t sub_10012992C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)(v28 - 192) = v27 - 0x51DBD54DB9871621;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 + 8 * (v26 - 527171509)) - ((v26 - 527174776) ^ 0x1BE6)))(a1, a2, a3, a4, a5, a6, a7, a8, 1621542550, a10, v27 - 0x51DBD54DB987160DLL, v27 - 0x51DBD54DB9871621, v27, a14, a15, a16, v27 - 0x51DBD54DB987161FLL, a18, v27 - 0x51DBD54DB98715FBLL,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1001299EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  uint64_t v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * (int)((((((v10 + 1905350478) ^ 0x71916A3C) + 16369) ^ (v10 + 1905350478) & 0x8E6E9BEE)
                                               * (a10 + 1 == a9)) ^ v10))
                            - 8))();
}

uint64_t sub_100129A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * a9) - ((a9 - 952) ^ 0x1832)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, v16, a12, a13, a14, a15, a16);
}

uint64_t sub_100129A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  int v21;
  __int16 v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;

  v25 = ((((2 * v23) | 0x2A669490) - v23 - 355682888) ^ 0x3B9995DB) * v18;
  *(_QWORD *)(v24 - 112) = v19;
  *(_WORD *)(v24 - 116) = v22 - v25;
  *(_DWORD *)(v24 - 104) = (v21 + 1753) ^ v25;
  *(_WORD *)(v24 - 120) = v25 + 31316;
  v26 = v20(v24 - 120);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a18 + 8 * v21) - 4))(v26);
}

uint64_t sub_100129B34@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, _WORD *a5, uint64_t a6, int a7, int a8, uint64_t a9, _WORD *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  int v18;
  __int16 v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  int v30;

  v23 = a4 + 6 * a9;
  v24 = a1 + (unsigned __int16)(*a5 - 18366) + (unsigned __int16)(*(_WORD *)(v23 + 2 * a17) - 18366);
  *(_QWORD *)(v22 - 152) = *(_QWORD *)(v17 + 8 * v21) - 8;
  *(_WORD *)(v22 - 144) = 26991;
  *(_DWORD *)(v22 - 140) = v24 - ((2 * v24) & 0x335D8) - 979526932;
  *(_WORD *)(v22 - 136) = -7191;
  *(_DWORD *)(v22 - 116) = (v21 + 1315645717) ^ (1130658149 * (v18 ^ 0xCD3CB9CD));
  *(_QWORD *)(v22 - 112) = v22 - 152;
  v25 = ((uint64_t (*)(uint64_t))((char *)*(&off_10112C750 + (v21 ^ 0x1A58)) - 1513180619))(v22 - 120);
  v26 = a8
      + (unsigned __int16)(*(_WORD *)(v22 - 120) + v19)
      + (unsigned __int16)(*a5 + ((947 * (v21 ^ 0x1684) - 19634) & 0x3C36 ^ 0xA074))
      - 1721613148;
  LOWORD(v26) = v26 % 0x7FFF - ((2 * (v26 % 0x7FFF)) & 0x2BC2) + 5601;
  *(_WORD *)(a13 + 6 * a9 + 2 * a17) = v26;
  v27 = ((unsigned __int16)v26 ^ 0x15E1) + (unsigned __int16)(*(_WORD *)(v23 + 2 * a17) - 18366);
  v28 = v27 - 0x7FFF * ((131077 * (unint64_t)v27) >> 32);
  LOWORD(v28) = (v28 ^ 0x4FFE) + ((2 * v28) & 0x9FFC);
  *(_WORD *)(v23 + 2 * a17) = v28 - 2112;
  v29 = (unsigned __int16)(v28 - 20478) + (unsigned __int16)(*a10 + v19);
  v30 = v29 - 0x7FFF * ((131077 * (unint64_t)v29) >> 32);
  *a10 = (v30 ^ 0xFBFF) + 28670 + ((2 * v30) & 0xF7FF);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a12 + 8 * ((v21 + 1356) ^ (53 * (v20 != 2)))) - 4))(v25);
}

uint64_t sub_100129D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * ((15 * (v9 == 0)) ^ v8)))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_100129E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  __int16 v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  *(_DWORD *)(v25 - 104) = (v24 + 12683) ^ (((-2 - ((~v23 | 0x6E79B82D) + (v23 | 0x918647D2))) ^ 0x40D367BE) * v18);
  *(_QWORD *)(v25 - 112) = v19;
  *(_WORD *)(v25 - 120) = ((-2 - ((~(_WORD)v23 | 0xB82D) + (v23 | 0x47D2))) ^ 0x67BE) * v18 + 31314;
  *(_WORD *)(v25 - 116) = v22 - ((-2 - ((~(_WORD)v23 | 0xB82D) + (v23 | 0x47D2))) ^ 0x67BE) * v18;
  v26 = v20(v25 - 120);
  return (*(uint64_t (**)(uint64_t))(a18 + 8 * (v24 ^ (23306 * (v21 == 1)))))(v26);
}

uint64_t sub_100129F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  int v21;
  __int16 v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_WORD *)(v25 - 116) = v22 - ((2 * (v23 & 0xECA0) - v23 + 4952) ^ 0xCCCB) * v18;
  *(_DWORD *)(v25 - 104) = (v21 + 1681) ^ (((2 * (v23 & 0x20D3ECA0) - v23 - 550759592) ^ 0xF186CCCB) * v18);
  *(_QWORD *)(v25 - 112) = v19;
  *(_WORD *)(v25 - 120) = ((2 * (v23 & 0xECA0) - v23 + 4952) ^ 0xCCCB) * v18 + 31315;
  v26 = v20(v25 - 120);
  return (*(uint64_t (**)(uint64_t))(a18
                                            + 8 * ((101 * (v24 == (v21 - 72) + 2124839989)) ^ v21)))(v26);
}

uint64_t sub_100129FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * v7)
                                                                                       - 3 * (v7 ^ 0x456Eu)
                                                                                       + 5771))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10012A020@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 - 120) = v2;
  *(_DWORD *)(v4 - 112) = -527167770
                        - (((v4 - 120) & 0x3CAF6E5C | ~((v4 - 120) | 0x3CAF6E5C)) ^ 0x7329ACE0) * a1
                        + v1
                        + 2634;
  v6 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (v1 - 527178004)) - 2075647718))(v4 - 120);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * (v1 - 527176392)) - 8))(v6);
}

uint64_t sub_10012A0AC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 0x1F2E5EEA21E74892) = 0x7FBE3FBF6E6F6EACLL;
  *(_QWORD *)(v1 - 0x1F2E5EEA21E7488ALL) = 0x94677D71ECAE723;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 - 527176377)) - 8))();
}

uint64_t sub_10012A110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);

  a19 = 0;
  v25 = ((uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t *))(*(_QWORD *)(v23 + 8 * (v21 - 527181554))
                                                                    - 1788821702))(v22, *(_QWORD *)(*(_QWORD *)(v23 + 8 * (v21 - 527180675)) - 954268759), *(_QWORD *)(*(_QWORD *)(v23 + 8 * (v21 ^ (v20 + 1941))) - 678117267), &a19);
  v26 = *(uint64_t (**)(uint64_t))(v24 + 8 * ((31 * (a19 == 0)) ^ (v21 - 527160538)));
  a20 = a19;
  return v26(v25);
}

uint64_t sub_10012A1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v20;
  uint64_t (*v21)(uint64_t);
  int v22;
  uint64_t v23;
  uint64_t v24;

  v24 = v21(a20);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * (v20 + v22 + 7)))(v24);
}

uint64_t sub_10012A1C8()
{
  uint64_t (*v0)(uint64_t);
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = v0(v3);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v1 - 527176392)) - 8))(v4);
}

uint64_t sub_10012A1E8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 0x15A921B9A26939B7) = 0x5A828A820113025ALL;
  *(_WORD *)(v1 - 0x15A921B9A26939AFLL) = -29302;
  *(_QWORD *)(v1 - 0x15A921B9A26939ABLL) = 0x1B9B1AD11B9B1AD1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 - 527176355)) - 8))();
}

uint64_t sub_10012A264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  uint64_t v14;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 + 8 * (v13 - 527167770)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_10012A2B4@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (v1 ^ (32
                                               * (*(_BYTE *)((v3 | ((unint64_t)(v3 < a1) << 32)) + v4 + v2) == 0))))
                            - 4))();
}

uint64_t sub_10012A2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v30 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v21 + 8 * (v19 - 3973)) - 1414861515))(*(_QWORD *)(*(_QWORD *)(v21 + 8 * (v19 - 2997)) - 121748635), v20, ((v19 + 485976143) ^ 0x39B558Bu) + v18 + 2042974981, 0);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a18 + 8 * ((10213 * (v30 != 0)) ^ v19)) - ((v19 + 485976143) & 0xE30897BF) + 5541))(v30, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_10012A384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = v20;
  ((void (*)(uint64_t *, _QWORD, uint64_t (*)(uint64_t), uint64_t))(*(_QWORD *)(v22
                                                                                                + 8 * (v21 - 3644))
                                                                                    - 1205524771))(&a19, 0, sub_100DC7870, a20);
  v24 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v22 + 8 * (v21 ^ 0x100B)) - 585896634))(a19);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23 + 8 * v21)
                                          - (((v21 + 339741303) | 0xB2C0842u) ^ 0x1F6C286ELL)))(v24);
}

uint64_t sub_10012A404()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v1 - 527176392) ^ (14804 * (v2 != 0x349AC684D04E7A8ELL))))
                            - ((2767 * (v1 ^ v0)) ^ 0x1596)))();
}

uint64_t sub_10012A454@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 0x349AC684D04E7A8ELL) = 0xB6504231E4C5EC1;
  *(_QWORD *)(v1 - 0x349AC684D04E7A86) = 0x7F3C2E527F3C2E52;
  *(_QWORD *)(v1 - 0x349AC684D04E7A7ELL) = 0x7F3C2E527F3C2E52;
  *(_QWORD *)(v1 - 0x349AC684D04E7A76) = 0xDE4B1340EAA47B7;
  *(_QWORD *)(v1 - 0x349AC684D04E7A6ELL) = 0x310535392C7D1D19;
  *(_QWORD *)(v1 - 0x349AC684D04E7A66) = 0;
  return ((uint64_t (*)(void))(527181934 - ((a1 + 54530692) | 0x1C2C0044u) + *(_QWORD *)(v2 + 8 * a1) - 16))();
}

uint64_t sub_10012A540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v12;
  uint64_t v13;
  uint64_t v14;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 + 8 * ((89 * (*(_QWORD *)(v13 + 120) == 0)) ^ (v12 - 527164845))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_10012A578@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v11;
  int v12;
  uint64_t v13;

  v12 = a1 + v11 + 2964;
  v13 = sub_100DD0758();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a11 + 8 * v12) - 4))(v13);
}

uint64_t sub_10012A598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  uint64_t v17;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * (v16 - 527150971)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_10012A654()
{
  int v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 + v1) = (v2 ^ v3) * (v2 + 17);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((v1 != 0) ^ v0)) - 4))();
}

uint64_t sub_10012A684@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = (v1 - a1 - 15);
  v4 = sub_100DD0758();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * v1) - (v3 ^ 0x1F6C286E)))(v4);
}

uint64_t sub_10012A6B4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (((v0 - 527181447) * (v1 == 0x27C762BBAA905855)) ^ (v0 - 527153038)))
                            - 12))();
}

uint64_t sub_10012A6F8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 - 0x27C762BBAA905855) = 0x2714985249CD5C9;
  *(_QWORD *)(v2 - 0x27C762BBAA905845) = 0x2714985249CD5C9;
  *(_QWORD *)(v2 - 0x27C762BBAA90583DLL) = 0x2714985249CD5C9;
  *(_QWORD *)(v2 - 0x27C762BBAA90584DLL) = 0;
  *(_QWORD *)(v2 - 0x27C762BBAA905831) = 0x42169B4320DF35AALL;
  *(_QWORD *)(v2 - 0x27C762BBAA905829) = 0x754367E7796A22DALL;
  *(_QWORD *)(v2 - 0x27C762BBAA905821) = 0x489407387F3C2E52;
  *(_QWORD *)(v2 - 0x27C762BBAA905819) = 0x799BFCD770E7AD68;
  *(_DWORD *)(v2 - 0x27C762BBAA905811) = 1598499450;
  return ((uint64_t (*)(void))(527181934 - (a1 - v1) + *(_QWORD *)(v3 + 8 * a1) - 20))();
}

uint64_t sub_10012A824()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 - 527146498) ^ (159 * (v1 == 0x4AB2ABB0D3E137CELL))))
                            - ((v0 - 647604847) & 0x72DF30F)
                            + 28931))();
}

uint64_t sub_10012A880@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 0x4AB2ABB0D3E137CELL) = 0x6D4D2D517F3C2E52;
  *(_DWORD *)(v1 - 0x4AB2ABB0D3E137C6) = -422204240;
  *(_QWORD *)(v1 - 0x4AB2ABB0D3E1378ELL) = 0x3497807223D51E12;
  *(_QWORD *)(v1 - 0x4AB2ABB0D3E137C2) = 0x7F3C2E525F8D8E1FLL;
  *(_QWORD *)(v1 - 0x4AB2ABB0D3E137BALL) = 0x7F3C2E527F3C2E52;
  *(_QWORD *)(v1 - 0x4AB2ABB0D3E137AELL) = 0x2714985249CD5C9;
  *(_QWORD *)(v1 - 0x4AB2ABB0D3E137A6) = 0x7F3C2E527F3C2E52;
  *(_QWORD *)(v1 - 0x4AB2ABB0D3E1379ELL) = 0x7F3C2E527F3C2E52;
  *(_QWORD *)(v1 - 0x4AB2ABB0D3E13796) = 0;
  return ((uint64_t (*)(void))(527181934 - ((a1 - 536999313) & 0x3F6DACEF) + *(_QWORD *)(v2 + 8 * a1) - 20))();
}

uint64_t sub_10012A9C0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 0x2AC504215E31C2B1) = 0x7D3EA33E73E73E7DLL;
  *(_DWORD *)(v1 - 0x2AC504215E31C2A9) = -677696861;
  *(_WORD *)(v1 - 0x2AC504215E31C2A5) = -25693;
  *(_BYTE *)(v1 - 0x2AC504215E31C2A3) = 125;
  *(_QWORD *)(v1 - 0x2AC504215E31C2A1) = 0xD22C13D0D22C13DLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 - 527176355)) - 8))();
}

uint64_t sub_10012AA70()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 0x7107BF5FC9315FF0) = 0x66A55DA53B5F5866;
  *(_DWORD *)(v1 - 0x7107BF5FC9315FE8) = -1318167203;
  *(_WORD *)(v1 - 0x7107BF5FC9315FE4) = -23203;
  *(_BYTE *)(v1 - 0x7107BF5FC9315FE2) = 102;
  *(_QWORD *)(v1 - 0x7107BF5FC9315FE0) = 0xA3A220E0A3A220ELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 - 527176377)) - 8))();
}

uint64_t sub_10012AB20()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 0x62AB4A17290199BLL) = 0xB404AF043F842CB4;
  *(_DWORD *)(v1 - 0x62AB4A172901993) = 1156471727;
  *(_WORD *)(v1 - 0x62AB4A17290198FLL) = -23377;
  *(_BYTE *)(v1 - 0x62AB4A17290198DLL) = -76;
  *(_QWORD *)(v1 - 0x62AB4A17290198BLL) = 0x3B6A1FF73B6A1FF7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 - 527176392)) - 8))();
}

uint64_t sub_10012ABCC()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;

  *v1 = 0xA899CE99F48C99A8;
  v1[1] = 0x85A86CCEF66CACCELL;
  v1[2] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 - 527176355)) - 8))();
}

uint64_t sub_10012AC10()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 0x13EE293CE1F130D4) = 0x7F3C2E527F3C2E52;
  *(_OWORD *)(v1 - 0x13EE293CE1F130CCLL) = 0u;
  *(_QWORD *)(v1 - 0x13EE293CE1F130BCLL) = 0x7F3C2E5200000000;
  *(_QWORD *)(v1 - 0x13EE293CE1F130B4) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 - 527176392)) - 8))();
}

uint64_t sub_10012AC94()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 0x245E42AA8C152018) = 0;
  *(_QWORD *)(v1 - 0x245E42AA8C152010) = 2134650450;
  *(_DWORD *)(v1 - 0x245E42AA8C152008) = 2134650450;
  *(_OWORD *)(v1 - 0x245E42AA8C152004) = 0u;
  *(_QWORD *)(v1 - 0x245E42AA8C151FF4) = 0x7F3C2E5200000000;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 - 527176377)) - 8))();
}

uint64_t sub_10012AD28()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((v0 - 527176377) ^ 0x9E19) * (v1 != 0x9D2D319FCCEF8F1)) ^ (v0 - 527176392)))
                            - 8))();
}

uint64_t sub_10012AD6C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 - 0x9D2D319FCCEF8F1) = -1260077761;
  *(_QWORD *)(v1 - 0x9D2D319FCCEF8E9) = 0x2714985249CD5C9;
  *(_QWORD *)(v1 - 0x9D2D319FCCEF8E1) = 0x7F4C46096A475A01;
  *(_QWORD *)(v1 - 0x9D2D319FCCEF8D9) = 0x7F3C2E5205FDB0DALL;
  *(_QWORD *)(v1 - 0x9D2D319FCCEF8D1) = 0x7F3C2E527F3C2E52;
  *(_DWORD *)(v1 - 0x9D2D319FCCEF8C9) = 1111142046;
  *(_QWORD *)(v1 - 0x9D2D319FCCEF8C1) = 0;
  *(_QWORD *)(v1 - 0x9D2D319FCCEF8B9) = 0x327897587F3C2E52;
  *(_QWORD *)(v1 - 0x9D2D319FCCEF8B1) = 0;
  *(_QWORD *)(v1 - 0x9D2D319FCCEF8A9) = 0x5BEB991B9E2FD515;
  *(_DWORD *)(v1 - 0x9D2D319FCCEF8A1) = 0;
  *(_QWORD *)(v1 - 0x9D2D319FCCEF899) = 0;
  *(_QWORD *)(v1 - 0x9D2D319FCCEF891) = 0x7F3C2E52511961F7;
  *(_DWORD *)(v1 - 0x9D2D319FCCEF889) = 2134650450;
  *(_QWORD *)(v1 - 0x9D2D319FCCEF881) = 0x59FFBA80824C42A8;
  *(_QWORD *)(v1 - 0x9D2D319FCCEF879) = 0x51F3A99D453931BCLL;
  *(_BYTE *)(v1 - 0x9D2D319FCCEF871) = 0;
  *(_QWORD *)(v1 - 0x9D2D319FCCEF86DLL) = 382654413;
  *(_QWORD *)(v1 - 0x9D2D319FCCEF861) = 0;
  *(_DWORD *)(v1 - 0x9D2D319FCCEF859) = 2134650450;
  return ((uint64_t (*)(void))(527181934 - (a1 ^ 0x1F6C3DCBu) + *(_QWORD *)(v2 + 8 * a1) - 16))();
}

uint64_t sub_10012AFD8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 0x6F7634AB0303F6B6) = 0x7F3C2E527F3C2E52;
  *(_DWORD *)(v1 - 0x6F7634AB0303F6AELL) = 2134650450;
  *(_QWORD *)(v1 - 0x6F7634AB0303F6BELL) = 0;
  *(_QWORD *)(v1 - 0x6F7634AB0303F6AALL) = 0x7F3C2E5262A87DF7;
  *(_OWORD *)(v1 - 0x6F7634AB0303F6A2) = 0u;
  *(_DWORD *)(v1 - 0x6F7634AB0303F692) = 0;
  *(_DWORD *)(v1 - 0x6F7634AB0303F686) = 322012025;
  *(_BYTE *)(v1 - 0x6F7634AB0303F682) = 57;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 - 527176377)) - 8))();
}

uint64_t sub_10012B0CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,unint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  uint64_t v32;
  uint64_t v33;

  *(_DWORD *)(v32 - 0x1E4A3F557B55436CLL) = 428147679;
  *(_DWORD *)(v32 - 0x1E4A3F557B5543A8) = -641582715;
  *(_QWORD *)(v32 - 0x1E4A3F557B554374) = 0x2B439C375903604CLL;
  a31 = v32 - 0x1E4A3F557B5543A4;
  a28 = 16;
  a29 = ((2 * (_QWORD)&a26) & 0xEE3FF9AA7E7F77F0)
      + ((unint64_t)&a26 ^ 0x771FFCD53F3F806BLL ^ (v31 - 527166673))
      - 0x3401409001042052;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 + 8 * (v31 - 527166628)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_10012B1EC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  int v4;
  char v5;
  int v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(v1 + v2) = (v3 ^ v5) * (v3 + 17);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v6 & ~(v4 ^ (v2 == 0))) * v7) ^ a1)) - 12))();
}

uint64_t sub_10012B228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v22;
  uint64_t v23;
  uint64_t v24;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8 * v22) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, v23 - 0x1E4A3F557B554394,
           a20,
           a21,
           a22);
}

uint64_t sub_10012B2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  int v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  *(_BYTE *)(a19 + v24) = ((a23 - 32) ^ v25) * (a23 - 15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 + 8 * ((1008 * (v24 == v26)) ^ v23)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_10012B2F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * a9))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_10012B39C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v1 + v2) = (v3 ^ v4) * (v3 + 17);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v2 == 0) * v5) ^ a1)))();
}

uint64_t sub_10012B3CC()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(v0 ^ 0x274667B8 ^ ((((v0 - 303712738) | 0xA400044) ^ 0x1F6C164D)
                                                                 * (v0 < 0x15AD46BB))))
                            - 8))();
}

uint64_t sub_10012B424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33)
{
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  a26 = *(_QWORD *)(v35 + 8 * (v33 - 527178245)) - 12;
  v36 = *(_QWORD *)(v35 + 8 * ((v33 - 527178245) ^ 0x15D0));
  a33 = v34 - 0x62459293C9DDA466;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))(v36 - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, ((unint64_t)&a32 ^ 0xE3FDFDDDFDFBEFF6)+ 0x5FFB6B731366347ELL+ ((2 * (_QWORD)&a32) & 0xC7FBFBBBFBF7DFE0), v34 - 0x62459293C9DDA466,
           a18,
           a19,
           a20,
           a21,
           a22,
           ((2 * (_QWORD)&a25) & 0xFFF29FF2FF6662A0)
         + ((unint64_t)&a25 ^ 0x7FF94FF97FB33157)
         + ((v33 - 527175506) ^ 0xF7EFF9FFECFDE6F8),
           ((unint64_t)&a32 ^ 0xE3FDFDDDFDFBEFF6)
         + 0x5FFB6B731366347ELL
         + ((2 * (_QWORD)&a32) & 0xC7FBFBBBFBF7DFE0),
           a25);
}

uint64_t sub_10012B56C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v27;
  int v28;
  char v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;

  v35 = *a9;
  *(_QWORD *)(v32 - 192) = a27;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * ((((((v27 ^ v28) * v29) ^ (v35 == v30)) & 1) * ((v27 ^ v28) + v31)) ^ v27)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_10012B5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v34;
  uint64_t v35;

  return (*(uint64_t (**)(void))(v35
                              + 8
                              * ((((*(_DWORD *)(a34 - 0x1D9ED3A3C2955AE0) & 1) != (v34 ^ 0x2381))
                                * (((v34 - 898247811) & 0x358A3FDF) + 34785)) ^ v34)))();
}

uint64_t sub_10012B604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v34;
  uint64_t v35;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(v35 + 8 * ((1988 * (*(_DWORD *)(a34 - 0x1D9ED3A3C2955AE8) != 2134650450)) ^ v34 ^ 0x5859)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, *(_QWORD *)(a34 - 0x1D9ED3A3C2955AF4) - 0x6CA6F0EE111A2BB6,
           a20,
           a21,
           (*(_DWORD *)(a34 - 0x1D9ED3A3C2955AE8) - 2134650450),
           a23);
}

uint64_t sub_10012B690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 + 8 * (int)((a9 + 84071317) & 0xDB916FFE)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21);
}

uint64_t sub_10012B6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  char v27;
  int v28;
  char v29;
  int v30;
  int v31;
  uint64_t v32;

  *(_BYTE *)(a19 + a27 - 1) = ((v27 - 67) ^ v29) * (v27 - 50);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 + 8 * (((a27 == 1) * (v28 ^ v31 ^ v30)) ^ v28)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

uint64_t sub_10012B710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8 * (a9 - 527150222)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21);
}

uint64_t sub_10012B72C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;

  v29 = v27 + a1;
  v30 = (v27 + a1 + 1252) | 0x3086;
  v31 = a1 - 527172837;
  v32 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v28 + 8 * (a1 - 527177125)) - 1241094771))(*(unsigned int *)(*(_QWORD *)(v28 + 8 * (v29 + 2052)) - 390279242), *a24 - 0x6CA6F0EE111A2BB6, *(_DWORD *)(a27 - 0x1D9ED3A3C2955AECLL) + (v30 ^ 0x80C3E770));
  return (*(uint64_t (**)(uint64_t))(a11 + 8 * v31))(v32);
}

uint64_t sub_10012B7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v34;
  uint64_t v35;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 + 8 * v34) - (v34 - 79) + 13955))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a34 - 0x1D9ED3A3C2955AF4,
           a21,
           a22);
}

uint64_t sub_10012B820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  int v30;
  unsigned int v31;
  uint64_t v32;

  *(_BYTE *)(v25 + v27 - 1) = ((v26 - 116) ^ v28) * (v26 - 99);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 + 8 * (((v27 - 1 != (a9 ^ v31 ^ v29)) * v30) ^ a9)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_10012B868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  uint64_t v19;

  v19 = sub_100DD0758();
  return (*(uint64_t (**)(uint64_t))(a18 + 8 * v18))(v19);
}

uint64_t sub_10012B89C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 192))();
}

uint64_t sub_10012B8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  int v19;
  uint64_t v20;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8 * ((v19 + v18 + 3347) ^ 0x1536)) - ((v19 + v18 + 1696) | 0x1100u) + 6416))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_10012B8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;

  v27 = *(_DWORD *)(v24 - 0x61EB587DDF0B8AA3);
  v28 = v27 - 440910327;
  if (v27 - 440910327 < 0)
    v28 = 440910327 - v27;
  *(_DWORD *)(v25 - 176) = v27;
  *(_DWORD *)(v25 - 172) = v28;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 + 8 * (((v27 == 440910327) * ((2 * v23) ^ 0x3ED850E5)) | (v23 - 527175206))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_10012B960@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_DWORD *a24)
{
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;

  *a24 = v24 + 1;
  *(_DWORD *)(*(_QWORD *)(v26 - 0x61EB587DDF0B8A9FLL) - 0x422FC655C6243089) = a1 - 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v27 + 8 * (v25 ^ 0x3ED84552))
                            - (((v25 ^ 0x3ED84552u) + 527176392) ^ 0x1F6C286ELL)))();
}

uint64_t sub_10012B9CC()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)v0) - (v0 ^ 0x15CBLL)))();
}

void sub_10012BE14(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v5;

  if (*(_QWORD *)(a1 + 32))
    v2 = *(_QWORD *)(a1 + 48) == 0xDDC5B3FCA89D511;
  else
    v2 = 1;
  v5 = !v2 && *(_QWORD *)(a1 + 24) != 0x6CA6F0EE111A2BB6 && *(_QWORD *)(a1 + 8) != 0x17AB7F1E49884B2;
  v1 = *(_DWORD *)a1 - 668045089 * (((a1 | 0x38C4F9B) - (a1 | 0xFC73B064) - 59527068) ^ 0x4E453F90);
  __asm { BR              X11 }
}

uint64_t sub_10012BF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v54;
  int v55;
  uint64_t v56;
  int v57;
  _BOOL4 v59;
  uint64_t (*v60)(void);

  v57 = *(_DWORD *)(a54 + 16) ^ v55;
  v59 = (((_BYTE)v57 + 3) & 0xF) == 0 && v57 != 656603597;
  v60 = *(uint64_t (**)(void))(v56
                            + 8
                            * (int)((v59
                                   * (((v54 + 1212767125) & 0xB7B67DE5 ^ 0xFFFFB7D8) + ((v54 - 1799595015) & 0x6B433612))) ^ v54));
  LODWORD(STACK[0x2C0]) = -42899;
  return v60();
}

uint64_t sub_10012BFAC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  char *v28;
  unint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  int v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  char *v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  int v49;
  char *v50;
  int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  int v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  int v75;
  unsigned int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  unint64_t v88;
  char *v89;
  char *v90;
  unint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  unint64_t v96;
  unsigned __int8 *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t (*v131)(uint64_t);
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  char *v149;
  unsigned int v150;
  int v151;
  unsigned int v152;
  int v153;
  int v154;
  unsigned int v155;
  int v156;
  int v157;
  unsigned int v158;
  char *v159;
  int v160;
  int v161;
  unsigned int v162;
  int v163;
  __int16 v164;
  int v165;
  int v166;
  int v167;
  int v168;
  unsigned __int8 v169;
  int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  int v176;
  unsigned __int8 v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  int v183;
  int v184;

  v5 = *(unsigned __int8 *)(a1 - 0x17AB7F1E49884A6);
  LODWORD(STACK[0x398]) = v5;
  STACK[0x3A8] = v4;
  v6 = 18 * (v1 ^ 0x7E80);
  v7 = *(unsigned __int8 *)(a1 - 0x17AB7F1E49884ACLL) ^ 0xF7;
  v8 = *(unsigned __int8 *)(a1 - 0x17AB7F1E49884A3);
  v9 = v1;
  v10 = *(unsigned __int8 *)(a1 - 0x17AB7F1E49884A5) ^ 0xF7;
  LODWORD(STACK[0x3A0]) = v2;
  LODWORD(STACK[0x3FC]) = v6;
  STACK[0x2A8] = v3;
  v11 = *(unsigned __int8 *)(a1 - 0x17AB7F1E49884ADLL);
  STACK[0x360] = v11;
  v12 = v10 << (v6 + 6);
  v13 = v11 ^ 0xF7;
  v14 = (unint64_t)(v5 ^ 0xF7u) << 8;
  v15 = ((v8 ^ 0xF7) << 16) | ((*(unsigned __int8 *)(a1 - 0x17AB7F1E49884AALL) ^ 0xF7) << 24);
  v16 = *(unsigned __int8 *)(a1 - 0x17AB7F1E49884A7);
  v17 = *(unsigned __int8 *)(a1 - 106599790746830000) ^ 0xF7;
  v18 = *(unsigned __int8 *)(a1 - 0x17AB7F1E49884B1);
  LODWORD(STACK[0x368]) = v18;
  v19 = v14 | (v7 << 16) | v13 | v12;
  STACK[0x2E8] = v19;
  v20 = v15 | v17 | ((*(unsigned __int8 *)(a1 - 0x17AB7F1E49884B2) ^ 0xF7) << 8);
  LOBYTE(v7) = v18 ^ 0xF7;
  v21 = *(unsigned __int8 *)(a1 - 0x17AB7F1E49884A9);
  STACK[0x330] = v21;
  v22 = *(unsigned __int8 *)(a1 - 0x17AB7F1E49884AFLL);
  STACK[0x358] = v22;
  v23 = ((v16 ^ 0xF7) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v7 << 24);
  LODWORD(v14) = (*(unsigned __int8 *)(a1 - 0x17AB7F1E49884AELL) ^ 0xF7) << 24;
  v24 = *(unsigned __int8 *)(a1 - 0x17AB7F1E49884A4) ^ 0xF7;
  LODWORD(v7) = v21 ^ 0xF7 | ((*(unsigned __int8 *)(a1 - 0x17AB7F1E49884ABLL) ^ 0xF7) << 8);
  v25 = *(unsigned __int8 *)(a1 - 0x17AB7F1E49884A8);
  v26 = v23 | (v24 << 8) | v22 ^ 0xF7;
  STACK[0x2F8] = v26;
  v27 = (v14 | ((v25 ^ 0xF7) << 16) | v7) ^ 0x1B5C1308;
  STACK[0x348] = BYTE2(v27);
  v28 = (char *)*(&off_10112C750 + v9 - 28475) - 1040140122;
  LODWORD(v7) = *(_DWORD *)&v28[4 * (BYTE2(v27) ^ 0x88)];
  HIDWORD(v29) = v7 ^ 0x2A9;
  LODWORD(v29) = v7 ^ 0xDE0B5000;
  LODWORD(v7) = v29 >> 11;
  STACK[0x308] = HIBYTE(v27);
  LODWORD(STACK[0x3F0]) = BYTE1(v27);
  v30 = (char *)*(&off_10112C750 + v9 - 27758) - 1502765703;
  v31 = (char *)*(&off_10112C750 + v9 - 29549) - 95581542;
  LODWORD(v17) = *(_DWORD *)&v31[4 * (v21 ^ 0xF3)];
  HIDWORD(v29) = v17 ^ 0xF73F68;
  LODWORD(v29) = v17 ^ 0x73000000;
  v32 = (char *)*(&off_10112C750 + v9 - 29064) - 2097749163;
  LODWORD(v12) = *(_DWORD *)&v32[4 * (HIBYTE(v27) ^ 0x2D)] ^ 0x284A2A22;
  LODWORD(v17) = v7 ^ v19 ^ (*(_DWORD *)&v30[4 * (BYTE1(v27) ^ 0x10)] + 1244705966) ^ (8 * v7 * v7) ^ (v29 >> 24) ^ (2 * (v29 >> 24)) ^ (32 * (v29 >> 24)) ^ v12 ^ (8 * v12 + 20962776);
  v33 = (char *)*(&off_10112C750 + (v9 ^ 0x6FF1)) - 1889684034;
  STACK[0x2D8] = v20;
  LODWORD(STACK[0x280]) = v17 ^ v20;
  v34 = v17;
  LODWORD(STACK[0x26C]) = v17;
  v35 = v17 ^ v20 ^ v26 ^ v27;
  v36 = v17 ^ v20 ^ v26;
  v37 = v9;
  v38 = (uint64_t)*(&off_10112C750 + (v9 ^ 0x6F39));
  LODWORD(v12) = v35 ^ 0x5F1B4A8D;
  LODWORD(STACK[0x2C0]) = v35;
  LODWORD(v17) = v35 ^ 0x83;
  v39 = *(_DWORD *)&v33[4 * ((v35 ^ 0x83) - ((2 * (v35 ^ 0x83)) & 0x52) + 41)];
  v40 = v38 - 597332362;
  v41 = (char *)*(&off_10112C750 + v9 - 29553) - 48074210;
  HIDWORD(v29) = v39;
  LODWORD(v29) = v39;
  LODWORD(STACK[0x2C8]) = BYTE2(v12);
  v42 = *(_DWORD *)(v38 - 597332362 + 4 * (BYTE2(v12) ^ 0xB4u)) + 1095211976;
  LODWORD(STACK[0x284]) = BYTE1(v12);
  v43 = *(_DWORD *)&v30[4 * (BYTE1(v12) ^ 0x10)] + 1244705966;
  LODWORD(STACK[0x28C]) = BYTE3(v12);
  LODWORD(v38) = v42 ^ (v42 >> 5) ^ (v42 >> 2) ^ v43 ^ *(_DWORD *)&v41[4 * (BYTE3(v12) ^ 0x4C)] ^ BYTE3(v12) ^ (v17 ^ ((v29 >> 18) >> 14) | ((v29 >> 18) << 18));
  LODWORD(STACK[0x27C]) = v36;
  v44 = v38 ^ v20 ^ v36;
  LODWORD(STACK[0x24C]) = v44;
  LODWORD(v26) = v38 ^ v20;
  LODWORD(STACK[0x3D4]) = v38 ^ v20;
  v45 = v44 ^ v12;
  LODWORD(STACK[0x25C]) = v45;
  LODWORD(STACK[0x290]) = v45;
  LODWORD(v12) = *(_DWORD *)&v31[4 * (v45 ^ 0x22)];
  HIDWORD(v29) = v12 ^ 0xF73F68;
  LODWORD(v29) = v12 ^ 0x73000000;
  v46 = v45 ^ 0x5F9F9D2E;
  v47 = ((v45 ^ 0x5F9F9D2Eu) >> 16);
  LODWORD(STACK[0x264]) = v47;
  v48 = *(_DWORD *)(v40 + 4 * (v47 ^ 0xB4u)) + 1095211976;
  LODWORD(STACK[0x260]) = BYTE1(v46);
  LODWORD(v20) = *(_DWORD *)&v30[4 * (BYTE1(v46) ^ 0x10)] + 1244705966;
  LODWORD(STACK[0x268]) = HIBYTE(v46);
  v49 = *(_DWORD *)&v32[4 * (HIBYTE(v46) ^ 0x2D)] ^ 0x284A2A22;
  v178 = v38 ^ v34;
  v165 = v48 ^ (v48 >> 5) ^ (v48 >> 2) ^ v20 ^ v49 ^ (v29 >> 24) ^ (2 * (v29 >> 24)) ^ (32 * (v29 >> 24)) ^ (8 * v49 + 20962776) ^ v38 ^ v34;
  v173 = v165 ^ v36;
  LODWORD(v12) = v165 ^ v36 ^ 0x60DD05B6;
  LOBYTE(v38) = v12 ^ v46;
  LODWORD(STACK[0x270]) = v12;
  LODWORD(v21) = v12 ^ v46 ^ 0x58958D66;
  v50 = (char *)*(&off_10112C750 + (v37 ^ 0x6D0F)) - 1533759650;
  LODWORD(v12) = *(_DWORD *)(v40
                           + 4 * ((BYTE2(v21) ^ 0x25) - ((2 * (BYTE2(v21) ^ 0x25)) & 0x22) - 111))
               + 1095211976;
  v51 = *(_DWORD *)&v32[4 * (BYTE3(v21) ^ 0x2D)] ^ 0x284A2A22;
  LODWORD(v38) = v12 ^ (v12 >> 2) ^ *(_DWORD *)&v50[4 * (BYTE1(v21) ^ 0x78)] ^ (v12 >> 5) ^ *(_DWORD *)&v33[4 * (v38 ^ 0x41)] ^ v51 ^ (8 * v51 + 20962776) ^ v21;
  LODWORD(STACK[0x298]) = v38 ^ v26;
  LODWORD(v12) = v38 ^ v26 ^ 0xC7E5820D;
  v170 = v12 ^ v165 ^ v36 ^ 0x60DD05B6;
  LODWORD(v21) = v170 ^ 0xA7BE1C51 ^ v21;
  LODWORD(STACK[0x3E8]) = v170 ^ 0xA7BE1C51;
  v164 = v21;
  v52 = *(_DWORD *)&v31[4 * (v21 ^ 0x8B)];
  HIDWORD(v29) = v52 ^ 0xF73F68;
  LODWORD(v29) = v52 ^ 0x73000000;
  LODWORD(v20) = v21 ^ 0x342DF187;
  v166 = ((v21 ^ 0x342DF187) >> 16);
  v53 = *(_DWORD *)(v40 + 4 * (v166 ^ 0xB4u)) + 1095211976;
  v54 = v53 ^ *(_DWORD *)&v50[4 * (((unsigned __int16)(v21 ^ 0xC282) >> 8) ^ 0x4B)] ^ (v53 >> 2) ^ (v53 >> 5);
  LODWORD(v21) = (v21 ^ 0x342DF187) >> 24;
  LODWORD(STACK[0x294]) = v21;
  v55 = *(_DWORD *)&v32[4 * (v21 ^ 0x2D)] ^ 0x284A2A22;
  v169 = BYTE1(v38) ^ BYTE1(v165);
  v180 = v54 ^ v55 ^ (v29 >> 24) ^ (2 * (v29 >> 24)) ^ (32 * (v29 >> 24)) ^ (8 * v55 + 20962776) ^ v38 ^ v165;
  LODWORD(STACK[0x3B8]) = v180 ^ 0x7F27C151;
  v176 = v180 ^ 0x7F27C151 ^ v12;
  LODWORD(STACK[0x3D8]) = v176 ^ 0x2DE4C734;
  v171 = v176 ^ 0x2DE4C734 ^ v170 ^ 0xA7BE1C51;
  LODWORD(v12) = v20 ^ v171 ^ 0x7B992B97;
  LODWORD(STACK[0x29C]) = BYTE2(v12);
  v56 = *(_DWORD *)&v28[4 * (BYTE2(v12) ^ 0x88)];
  HIDWORD(v29) = v56 ^ 0x2A9;
  LODWORD(v29) = v56 ^ 0xDE0B5000;
  v57 = v29 >> 11;
  v58 = (v20 ^ v171);
  LODWORD(STACK[0x278]) = v58;
  LODWORD(v38) = *(_DWORD *)&v31[4 * (v58 ^ 0x9B)];
  HIDWORD(v29) = v38 ^ 0xF73F68;
  LODWORD(v29) = v38 ^ 0x73000000;
  LODWORD(STACK[0x254]) = BYTE1(v12);
  v59 = *(_DWORD *)&v50[4 * (BYTE1(v12) ^ 0x78)];
  LODWORD(STACK[0x2A0]) = BYTE3(v12);
  LODWORD(v38) = v57 ^ v59 ^ *(_DWORD *)&v41[4 * (BYTE3(v12) ^ 0x4C)] ^ (8 * v57 * v57) ^ (v29 >> 24) ^ (2 * (v29 >> 24)) ^ (32 * (v29 >> 24)) ^ v180 ^ 0x7F27C151;
  LODWORD(STACK[0x2CC]) = v38;
  LODWORD(v23) = BYTE3(v12) ^ v38;
  LODWORD(STACK[0x2E4]) = v23;
  v182 = v23 ^ v176 ^ 0x2DE4C734;
  LODWORD(v21) = v182 ^ 0xA601099 ^ v171 ^ 0xB8C2435C;
  LODWORD(STACK[0x3B4]) = v21;
  LOBYTE(v38) = v21 ^ v12;
  LODWORD(v21) = v21 ^ v12 ^ 0xC35B68CB;
  LODWORD(STACK[0x220]) = BYTE2(v21);
  LODWORD(v40) = *(_DWORD *)(v40 + 4 * (BYTE2(v21) ^ 0xB4u)) + 1095211976;
  LODWORD(STACK[0x230]) = BYTE1(v21);
  v181 = v38;
  v175 = BYTE3(v21);
  LODWORD(v12) = *(_DWORD *)&v32[4 * (BYTE3(v21) ^ 0x2D)] ^ 0x284A2A22;
  LODWORD(v38) = v40 ^ *(_DWORD *)&v50[4 * (BYTE1(v21) ^ 0x78)] ^ (v40 >> 2) ^ (v40 >> 5) ^ *(_DWORD *)&v33[4 * (v38 ^ 0xEC)] ^ v12 ^ (8 * v12 + 20962776) ^ v23;
  LODWORD(STACK[0x3CC]) = v38;
  v179 = v21;
  LODWORD(v26) = v38 ^ v21;
  v60 = v26 ^ v171 ^ 0xB8C2435C;
  LODWORD(STACK[0x3E0]) = v60 ^ 0x782DD119;
  LODWORD(v38) = v60 ^ 0x782DD119 ^ v21;
  LODWORD(v12) = v38 ^ 0xC0C54645;
  LODWORD(v21) = ((v38 ^ 0xC0C54645) >> 16);
  LODWORD(STACK[0x2D0]) = v21;
  LODWORD(v17) = *(_DWORD *)&v28[4 * (v21 ^ 0x88)];
  HIDWORD(v29) = v17 ^ 0x2A9;
  LODWORD(v29) = v17 ^ 0xDE0B5000;
  LODWORD(v21) = (v38 ^ 0xC0C54645) >> 24;
  LODWORD(STACK[0x2C4]) = v21;
  v61 = *(_DWORD *)&v32[4 * (v21 ^ 0x2D)];
  LODWORD(v23) = ((unsigned __int16)(v38 ^ 0x4645) >> 8);
  LODWORD(STACK[0x200]) = v23;
  LODWORD(v20) = *(_DWORD *)&v30[4 * (v23 ^ 0x10)] + 1244705966;
  LODWORD(STACK[0x288]) = v38;
  LODWORD(v38) = *(_DWORD *)&v33[4 * (v38 ^ 0x62)] ^ v20 ^ v61 ^ 0x284A2A22 ^ (8
                                                                                              * (((2 * (v61 ^ 0x284A2A22)) & 0x4FF776)
                                                                                               + (v61 ^ 0x86DD199)));
  LODWORD(STACK[0x228]) = v26;
  LODWORD(v20) = v38 ^ v26 ^ (v29 >> 11) ^ 0xF5312AAD ^ (8 * (v29 >> 11) * (v29 >> 11));
  LODWORD(v21) = v20 ^ v12;
  LODWORD(STACK[0x3C8]) = v26 ^ v182 ^ 0xA601099;
  v62 = v21 ^ v26 ^ v182 ^ 0xA601099;
  v177 = v20 ^ v12;
  v63 = v62 ^ 0xDF91810F ^ v60 ^ 0xAA04B849;
  LODWORD(v12) = v63 ^ v12;
  LODWORD(v26) = v12 ^ 0xC92F6BC7;
  LODWORD(v17) = *(_DWORD *)&v28[4 * (((v12 ^ 0xC92F6BC7) >> 16) ^ 0x88)];
  HIDWORD(v29) = v17 ^ 0x2A9;
  LODWORD(v29) = v17 ^ 0xDE0B5000;
  LODWORD(v17) = v29 >> 11;
  v64 = *(_DWORD *)&v50[4
                      * ((((unsigned __int16)(v12 ^ 0x6BC7) >> 8) ^ 0xFC)
                                        - ((2 * (((unsigned __int16)(v12 ^ 0x6BC7) >> 8) ^ 0xFC)) & 8)
                                        - 124)];
  LODWORD(v12) = *(_DWORD *)&v31[4 * (v12 ^ 0xCB)];
  HIDWORD(v29) = v12 ^ 0xF73F68;
  LODWORD(v29) = v12 ^ 0x73000000;
  LODWORD(STACK[0x304]) = BYTE3(v26);
  LODWORD(v31) = *(_DWORD *)&v32[4 * (BYTE3(v26) ^ 0x2D)] ^ 0x284A2A22;
  v65 = v17 ^ v64 ^ (8 * v17 * v17) ^ v31 ^ (v29 >> 24) ^ (2 * (v29 >> 24)) ^ (32 * (v29 >> 24)) ^ (8 * (_DWORD)v31 + 20962776) ^ v21;
  LODWORD(v21) = v65 ^ 0x2BBA9D69 ^ ((v60 ^ 0xAA04B849) - 2 * ((v60 ^ 0xAA04B849) & 0x2BBA9D7F ^ v60 & 0x16) + 733650281);
  LOBYTE(v38) = v26 ^ v21;
  v66 = v21;
  LODWORD(v21) = v26 ^ v21 ^ 0xD624D374;
  LODWORD(STACK[0x274]) = v21;
  LODWORD(v28) = *(_DWORD *)&v28[4 * (BYTE2(v21) ^ 0x88)];
  HIDWORD(v29) = v28 ^ 0x2A9;
  LODWORD(v29) = v28 ^ 0xDE0B5000;
  LODWORD(v24) = v38;
  LODWORD(v28) = ((v62 ^ 0xDF91810F) - ((2 * (v62 ^ 0xDF91810F)) & 0x57753AD2) + 733650281) ^ v65 ^ 0x2BBA9D69;
  LODWORD(v38) = (v29 >> 11) ^ *(_DWORD *)&v33[4 * (v38 ^ 0x53)] ^ *(_DWORD *)&v41[4 * (BYTE3(v21) ^ 0x4C)] ^ (*(_DWORD *)&v30[4 * (BYTE1(v21) ^ 0x10)] + 1244705966) ^ (8 * (v29 >> 11) * (v29 >> 11)) ^ v21 ^ BYTE3(v21);
  LODWORD(STACK[0x238]) = v38 - ((2 * v38) & 0x57753AD2) + 733650281;
  LODWORD(STACK[0x250]) = v38 ^ v62 ^ 0xDF91810F;
  v67 = (char *)*(&off_10112C750 + (v37 ^ 0x7D67)) - 1176053242;
  v68 = (char *)*(&off_10112C750 + (v37 ^ 0x7A71)) - 29528002;
  LODWORD(v38) = *(_DWORD *)&v68[4 * (HIBYTE(v65) ^ 0x83)];
  HIDWORD(v29) = v38 ^ 0x8E;
  LODWORD(v29) = v38 ^ 0x2AFF1200;
  LODWORD(STACK[0x390]) = v29 >> 8;
  LODWORD(STACK[0x388]) = *(_DWORD *)&v67[4 * (v65 ^ 0x51)]
                        + (v65 ^ 0xFFFFFF41)
                        + 1053826100;
  v69 = (char *)*(&off_10112C750 + (v37 ^ 0x716F)) - 1249476866;
  v159 = (char *)*(&off_10112C750 + v37 - 30505) - 1626231082;
  LODWORD(v38) = (((v62 ^ 0xF) - ((2 * (v62 ^ 0xF)) & 0xD2) + 105) ^ v65 ^ 0x69) ^ 0x66;
  LODWORD(STACK[0x380]) = *(_DWORD *)&v67[4 * (v38 - ((2 * v38) & 0xDF) - 17)] + 1053826099 - v38;
  v70 = (char *)*(&off_10112C750 + (v37 ^ 0x71C9)) - 351664410;
  LODWORD(v38) = *(_DWORD *)&v68[4 * ((v28 >> 24) ^ 0xBD)];
  HIDWORD(v29) = v38 ^ 0x8E;
  LODWORD(v29) = v38 ^ 0x2AFF1200;
  LODWORD(STACK[0x378]) = v29 >> 8;
  v71 = (char *)*(&off_10112C750 + v37 - 27524) - 1060719151;
  LODWORD(STACK[0x370]) = *(_DWORD *)&v70[4 * (BYTE2(v28) ^ 0x18)] + (BYTE2(v28) ^ 0x761570EB) - 1241725333;
  LODWORD(STACK[0x3C0]) = v37;
  v72 = (char *)*(&off_10112C750 + v37 - 30047) - 1697111478;
  LODWORD(STACK[0x3D0]) = v66;
  LODWORD(v28) = *(_DWORD *)&v72[4
                               * (((unsigned __int16)(v65 ^ 0x9D69 ^ ((v60 ^ 0xB849)
                                                                                     - 2
                                                                                     * ((v60 ^ 0xB849) & 0x9D7F ^ v60 & 0x16)
                                                                                     - 25239)) >> 8) ^ 0x4B)];
  v73 = v72;
  HIDWORD(v29) = v28 ^ 0xA92;
  LODWORD(v29) = v28 ^ 0xF0F8C000;
  LODWORD(STACK[0x258]) = v29 >> 14;
  v74 = (char *)*(&off_10112C750 + v37 - 31758) - 1240073959;
  LODWORD(STACK[0x240]) = *(_DWORD *)&v74[4 * (((v66 ^ 0xD624D374) >> 24) ^ 0x5C)]
                        + (((v66 ^ 0xD624D374) >> 24) ^ 0xFFFFFF91)
                        - 1019087295;
  LODWORD(STACK[0x218]) = *(_DWORD *)&v67[4 * (v24 ^ 0x94)] + (v24 ^ 0xFFFFFF84) + 1053826100;
  LODWORD(STACK[0x210]) = *(_DWORD *)&v70[4 * (BYTE2(v21) ^ 0x4E)] + (BYTE2(v21) ^ 0x761570BD) - 1241725333;
  LODWORD(STACK[0x208]) = *(_DWORD *)&v74[4 * (BYTE3(v21) ^ 0xC7)] + (BYTE3(v21) ^ 0xFFFFFF0A) - 1019087295;
  v174 = (BYTE2(v20) ^ 0x761570DE) - 1241725333 + *(_DWORD *)&v70[4 * (BYTE2(v20) ^ 0x2D)];
  LODWORD(v24) = *(_DWORD *)&v68[4 * (BYTE3(v20) ^ 0x23)];
  HIDWORD(v29) = v24 ^ 0x8E;
  LODWORD(v29) = v24 ^ 0x2AFF1200;
  v172 = v29 >> 8;
  LODWORD(v72) = *(_DWORD *)&v72[4 * (((unsigned __int16)(v62 ^ 0x2AA3) >> 8) ^ 0x79)];
  HIDWORD(v29) = v72 ^ 0xA92;
  LODWORD(v29) = v72 ^ 0xF0F8C000;
  LODWORD(STACK[0x350]) = v29 >> 14;
  LODWORD(STACK[0x340]) = (((v62 ^ 0x452C5DDu) >> 16) ^ 0x761570E2)
                        - 1241725333
                        + *(_DWORD *)&v70[4 * (((v62 ^ 0x452C5DDu) >> 16) ^ 0x11)];
  LODWORD(v24) = *(_DWORD *)&v73[4 * (BYTE1(v63) ^ 0x99)];
  LODWORD(STACK[0x338]) = (((v62 ^ 0x452C5DDu) >> 24) ^ 0xFFFFFF79)
                        - 1019087295
                        + *(_DWORD *)&v74[4 * (((v62 ^ 0x452C5DDu) >> 24) ^ 0xB4)];
  HIDWORD(v29) = v24 ^ 0xA92;
  LODWORD(v29) = v24 ^ 0xF0F8C000;
  LODWORD(STACK[0x328]) = v29 >> 14;
  LODWORD(STACK[0x320]) = (v62 ^ 0xF ^ v60 ^ 0x49 ^ 0xFFFFFF90)
                        + 1053826100
                        + *(_DWORD *)&v67[4 * (v62 ^ 0xF ^ v60 ^ 0x49 ^ 0x80)];
  LODWORD(v72) = *(_DWORD *)&v73[4 * ((BYTE1(v26) - ((v26 >> 7) & 0xEA) + 117) ^ 0x71)];
  LODWORD(STACK[0x310]) = (HIBYTE(v63) ^ 0xFFFFFF06) - 1019087295 + *(_DWORD *)&v74[4 * (HIBYTE(v63) ^ 0xCB)];
  HIDWORD(v29) = v72 ^ 0xA92;
  LODWORD(v29) = v72 ^ 0xF0F8C000;
  LODWORD(STACK[0x318]) = v29 >> 14;
  LODWORD(v72) = *(_DWORD *)&v68[4 * (LODWORD(STACK[0x304]) ^ 0x60)];
  HIDWORD(v29) = v72 ^ 0x8E;
  LODWORD(v29) = v72 ^ 0x2AFF1200;
  LODWORD(STACK[0x304]) = v29 >> 8;
  LODWORD(v24) = *(_DWORD *)&v68[4 * (HIBYTE(LODWORD(STACK[0x3CC])) ^ 0xB)];
  LODWORD(STACK[0x204]) = (BYTE2(LODWORD(STACK[0x3CC])) ^ 0x761570B9)
                        - 1241725333
                        + *(_DWORD *)&v70[4 * (BYTE2(LODWORD(STACK[0x3CC])) ^ 0x4A)];
  HIDWORD(v29) = v24 ^ 0x8E;
  LODWORD(v29) = v24 ^ 0x2AFF1200;
  LODWORD(STACK[0x2A4]) = v29 >> 8;
  LODWORD(v23) = STACK[0x3C8];
  LODWORD(v72) = *(_DWORD *)&v68[4 * (HIBYTE(LODWORD(STACK[0x3C8])) ^ 0xE9)];
  HIDWORD(v29) = v72 ^ 0x8E;
  LODWORD(v29) = v72 ^ 0x2AFF1200;
  v168 = v29 >> 8;
  LODWORD(v72) = *(_DWORD *)&v73[4 * (BYTE1(LODWORD(STACK[0x3E0])) ^ 0x73)];
  HIDWORD(v29) = v72 ^ 0xA92;
  LODWORD(v29) = v72 ^ 0xF0F8C000;
  LODWORD(STACK[0x2F0]) = v29 >> 14;
  LODWORD(v24) = *(_DWORD *)&v73[4 * (LODWORD(STACK[0x200]) ^ 0x6C)];
  v167 = (BYTE2(v23) ^ 0x761570B6) - 1241725333 + *(_DWORD *)&v70[4 * (BYTE2(v23) ^ 0x45)];
  HIDWORD(v29) = v24 ^ 0xA92;
  LODWORD(v29) = v24 ^ 0xF0F8C000;
  LODWORD(v31) = v29 >> 14;
  LODWORD(STACK[0x200]) = (((v60 ^ 0xB8E8975C) >> 24) ^ 0xFFFFFF3D)
                        - 1019087295
                        + *(_DWORD *)&v74[4 * (((v60 ^ 0xB8E8975C) >> 24) ^ 0xF0)];
  LODWORD(v72) = *(_DWORD *)&v68[4 * (LODWORD(STACK[0x2C4]) ^ 0x48)];
  HIDWORD(v29) = v72 ^ 0xE;
  LODWORD(v29) = v72 ^ 0x2AFF1280;
  v184 = v29 >> 7;
  LODWORD(v40) = ((LODWORD(STACK[0x2D0]) ^ 0x7615707E) - 1241725333 + *(_DWORD *)&v70[4 * (LODWORD(STACK[0x2D0]) ^ 0x8D)]) ^ ((LODWORD(STACK[0x288]) ^ 0xFFFFFFF8) + 1053826100 + *(_DWORD *)&v67[4 * (LODWORD(STACK[0x288]) ^ 0xE8)]);
  LODWORD(STACK[0x288]) = (_DWORD)v31;
  v183 = v40 ^ (4 * (_DWORD)v31) & 0x3D7298B8;
  LODWORD(v23) = STACK[0x2CC];
  LODWORD(v40) = *(_DWORD *)&v68[4 * (HIBYTE(LODWORD(STACK[0x2CC])) ^ 0x3C)];
  HIDWORD(v29) = v40 ^ 0x8E;
  LODWORD(v29) = v40 ^ 0x2AFF1200;
  LODWORD(STACK[0x2E4]) = v29 >> 8;
  LODWORD(v40) = *(_DWORD *)&v73[4 * (BYTE1(v182) ^ 0xCB)];
  HIDWORD(v29) = v40 ^ 0xA92;
  LODWORD(v29) = v40 ^ 0xF0F8C000;
  LODWORD(STACK[0x2D0]) = v29 >> 14;
  LODWORD(v12) = *(_DWORD *)&v68[4 * (HIBYTE(v182) ^ 0x3D)];
  HIDWORD(v29) = v12 ^ 0x8E;
  LODWORD(v29) = v12 ^ 0x2AFF1200;
  LODWORD(STACK[0x2CC]) = v29 >> 8;
  LODWORD(STACK[0x2C4]) = (BYTE2(v23) ^ 0x76157005) - 1241725333 + *(_DWORD *)&v70[4 * (BYTE2(v23) ^ 0xF6)];
  LODWORD(v40) = *(_DWORD *)&v68[4 * (v175 ^ 0x5D)];
  HIDWORD(v29) = v40 ^ 0x8E;
  LODWORD(v29) = v40 ^ 0x2AFF1200;
  v163 = v29 >> 8;
  v162 = (LODWORD(STACK[0x3B8]) ^ 0xFFFFFF5B)
       + 1053826100
       + *(_DWORD *)&v67[4 * (LODWORD(STACK[0x3B8]) ^ 0x4B)];
  LODWORD(v40) = *(_DWORD *)&v73[4 * (BYTE1(LODWORD(STACK[0x3B8])) ^ 0x8A)];
  HIDWORD(v29) = v40 ^ 0xA92;
  LODWORD(v29) = v40 ^ 0xF0F8C000;
  v161 = v29 >> 14;
  LODWORD(v40) = *(_DWORD *)&v68[4 * (HIBYTE(v180) ^ 0xF5)];
  HIDWORD(v29) = v40 ^ 0x8E;
  LODWORD(v29) = v40 ^ 0x2AFF1200;
  v160 = v29 >> 8;
  LODWORD(v12) = *(_DWORD *)&v68[4 * (LODWORD(STACK[0x2A0]) ^ 0xCC)];
  HIDWORD(v29) = v12 ^ 0x8E;
  LODWORD(v29) = v12 ^ 0x2AFF1200;
  LODWORD(STACK[0x2A0]) = v29 >> 8;
  LODWORD(v40) = *(_DWORD *)&v73[4 * (v169 ^ 0x58)];
  HIDWORD(v29) = v40 ^ 0xA92;
  LODWORD(v29) = v40 ^ 0xF0F8C000;
  LODWORD(STACK[0x29C]) = v29 >> 14;
  LODWORD(v12) = *(_DWORD *)&v68[4
                               * ((((LODWORD(STACK[0x298]) ^ 0x52C30665)
                                  - ((2 * (LODWORD(STACK[0x298]) ^ 0x52C30665)) & 0xBC41C9B0)
                                  + 1579214040) >> 24) ^ 0xFC)];
  HIDWORD(v29) = v12 ^ 0x8E;
  LODWORD(v29) = v12 ^ 0x2AFF1200;
  LODWORD(STACK[0x298]) = v29 >> 8;
  v152 = LODWORD(STACK[0x3E8]) ^ 0x2C;
  LODWORD(v12) = *(_DWORD *)&v73[4 * (HIBYTE(v164) ^ 0x43)];
  HIDWORD(v29) = v12 ^ 0xA92;
  LODWORD(v29) = v12 ^ 0xF0F8C000;
  v155 = (v164 ^ 0xFFFFFF71) + 1053826100 + *(_DWORD *)&v67[4 * (v164 ^ 0x61)];
  v156 = v29 >> 14;
  LODWORD(v12) = *(_DWORD *)&v68[4 * (LODWORD(STACK[0x294]) ^ 0x13)];
  HIDWORD(v29) = v12 ^ 0x8E;
  LODWORD(v29) = v12 ^ 0x2AFF1200;
  v154 = v29 >> 8;
  LODWORD(v72) = *(_DWORD *)&v73[4 * (BYTE1(v165) ^ 0xC)];
  HIDWORD(v29) = v72 ^ 0xA92;
  LODWORD(v29) = v72 ^ 0xF0F8C000;
  LODWORD(STACK[0x294]) = v29 >> 14;
  v75 = STACK[0x3D4];
  LODWORD(v12) = *(_DWORD *)&v73[4 * (((unsigned __int16)(v165 ^ LODWORD(STACK[0x3D4])) >> 8) ^ 0xD4)];
  HIDWORD(v29) = v12 ^ 0xA92;
  LODWORD(v29) = v12 ^ 0xF0F8C000;
  LODWORD(v12) = v29 >> 14;
  LODWORD(v17) = v165 ^ LODWORD(STACK[0x3D4]) ^ 0x67D715FE;
  v76 = (BYTE3(v17) ^ 0xFFFFFF18) - 1019087295 + *(_DWORD *)&v74[4 * (BYTE3(v17) ^ 0xD5)];
  LODWORD(v40) = (BYTE2(v17) - ((v17 >> 15) & 0x174) + 1748680122) ^ *(_DWORD *)&v159[4 * (BYTE2(v17) ^ 0xD4)] ^ (((v165 ^ v75) ^ 0xFFFFFF2B) + 1053826100 + *(_DWORD *)&v67[4 * ((v165 ^ v75) ^ 0x3B)]) ^ v12 ^ 0x5EA22401;
  LODWORD(v72) = (4 * v12) & 0x3D7298B8;
  LODWORD(v12) = *(_DWORD *)&v68[4 * (HIBYTE(v173) ^ 0x20)];
  HIDWORD(v29) = v12 ^ 0x8E;
  LODWORD(v29) = v12 ^ 0x2AFF1200;
  v151 = v29 >> 8;
  v146 = (v40 ^ v72) + v76 - 2 * ((v40 ^ v72) & v76);
  LODWORD(v40) = *(_DWORD *)&v73[4 * (BYTE1(v178) ^ 0x67)];
  HIDWORD(v29) = v40 ^ 0xA92;
  LODWORD(v29) = v40 ^ 0xF0F8C000;
  v148 = v29 >> 14;
  LODWORD(v72) = *(_DWORD *)&v68[4 * (HIBYTE(v178) ^ 0xF)];
  HIDWORD(v29) = v72 ^ 0x8E;
  LODWORD(v29) = v72 ^ 0x2AFF1200;
  v147 = v29 >> 8;
  v150 = LODWORD(STACK[0x3D4]) ^ 0x2A;
  v145 = (BYTE2(v75) ^ 0x761570C0) - 1241725333 + *(_DWORD *)&v70[4 * (BYTE2(v75) ^ 0x33)];
  LODWORD(v72) = *(_DWORD *)&v68[4 * (HIBYTE(LODWORD(STACK[0x3D4])) ^ 0x50)];
  HIDWORD(v29) = v72 ^ 0x8E;
  LODWORD(v29) = v72 ^ 0x2AFF1200;
  v144 = v29 >> 8;
  v149 = v70;
  v77 = *(_DWORD *)&v68[4 * (HIBYTE(LODWORD(STACK[0x24C])) ^ 0x61)];
  HIDWORD(v29) = v77 ^ 0x8E;
  LODWORD(v29) = v77 ^ 0x2AFF1200;
  LODWORD(STACK[0x290]) = (*(_DWORD *)&v69[4 * (BYTE1(LODWORD(STACK[0x24C])) ^ 0xC3)] - 501127205) ^ ((LODWORD(STACK[0x24C]) ^ 0xFFFFFFA5) + 1053826100 + *(_DWORD *)&v67[4 * (LODWORD(STACK[0x24C]) ^ 0xB5)]) ^ ((BYTE2(LODWORD(STACK[0x24C])) ^ 0x76157015) - 1241725333 + *(_DWORD *)&v70[4 * (BYTE2(LODWORD(STACK[0x24C])) ^ 0xE6)]) ^ (v29 >> 8) ^ (4 * (v29 >> 8));
  v158 = LODWORD(STACK[0x260]) ^ 0x49;
  v78 = STACK[0x280];
  LODWORD(v12) = LODWORD(STACK[0x280]);
  LODWORD(v32) = *(_DWORD *)&v67[4 * (v12 ^ 0xB2)];
  LODWORD(STACK[0x264]) = *(_DWORD *)&v159[4 * (((v66 ^ 0xD624D374) >> 16) ^ 0x51)];
  LODWORD(v26) = LODWORD(STACK[0x220]) - ((v179 >> 15) & 0x174);
  v140 = *(_DWORD *)&v159[4 * (LODWORD(STACK[0x220]) ^ 0x3A)];
  v79 = BYTE2(LODWORD(STACK[0x3B8]));
  LODWORD(v17) = v79 - ((LODWORD(STACK[0x3B8]) >> 15) & 0x174);
  v141 = *(_DWORD *)&v159[4 * (v79 ^ 0x41)];
  LODWORD(STACK[0x268]) = *(_DWORD *)&v159[4 * (v166 ^ 0x96)];
  LODWORD(v70) = STACK[0x270];
  LODWORD(v31) = BYTE2(LODWORD(STACK[0x270]));
  v80 = (_DWORD)v31 - ((LODWORD(STACK[0x270]) >> 15) & 0x174);
  LODWORD(STACK[0x260]) = *(_DWORD *)&v159[4 * (v31 ^ 0xFC)];
  LODWORD(STACK[0x3B8]) = (v12 ^ 0xFFFFFFA2) + 1053826100 + (_DWORD)v32;
  v142 = *(_DWORD *)&v159[4 * (BYTE2(v178) ^ 0x59)];
  LODWORD(v72) = ((v78 ^ 0xD5FA09BB) >> 16);
  LODWORD(STACK[0x24C]) = *(_DWORD *)&v159[4 * (v72 ^ 0x95)];
  LODWORD(STACK[0x25C]) = ((v66 ^ 0xD624D374) >> 16)
                        - (((v66 ^ 0xD624D374) >> 15) & 0x174)
                        + 1748680122;
  v138 = v26 + 1748680122;
  v139 = v17 + 1748680122;
  v143 = v80 + 1748680122;
  LODWORD(STACK[0x220]) = (_DWORD)v72 - (((v78 ^ 0xD5FA09BB) >> 15) & 0x174) + 1748680122;
  LODWORD(v30) = *(_DWORD *)&v69[4 * (BYTE1(v21) ^ 0xCE)];
  LODWORD(v24) = *(_DWORD *)&v69[4 * (BYTE1(v20) ^ 0xB0)];
  LODWORD(v31) = *(_DWORD *)&v69[4 * (BYTE1(LODWORD(STACK[0x3CC])) ^ 0xB)];
  LODWORD(v21) = STACK[0x3C8];
  LODWORD(v17) = *(_DWORD *)&v69[4 * ~(LODWORD(STACK[0x3C8]) >> 8)];
  v81 = *(_DWORD *)&v69[4 * (LODWORD(STACK[0x230]) ^ 0x87)];
  LODWORD(STACK[0x3CC]) = (((v78 ^ 0xD5FA09BB) >> 24) ^ 0xFFFFFF4E)
                        - 1019087295
                        + *(_DWORD *)&v74[4 * (((v78 ^ 0xD5FA09BB) >> 24) ^ 0x83)];
  LODWORD(v23) = STACK[0x27C];
  v82 = *(_DWORD *)&v69[4 * (BYTE1(LODWORD(STACK[0x3E8])) ^ 0xF4)];
  LODWORD(v20) = *(_DWORD *)&v69[4 * (BYTE1(v70) ^ 0xDE)];
  LODWORD(v26) = *(_DWORD *)&v69[4 * (BYTE1(LODWORD(STACK[0x3D4])) ^ 0x38)];
  v83 = *(_DWORD *)&v69[4 * v158];
  v84 = *(_DWORD *)&v69[4 * (BYTE1(v78) ^ 0x50)];
  LODWORD(v28) = *(_DWORD *)&v69[4 * (BYTE1(LODWORD(STACK[0x27C])) ^ 0xDA)];
  LODWORD(STACK[0x26C]) = (_DWORD)v30 - 501127205;
  v157 = (_DWORD)v31 - 501127205;
  LODWORD(STACK[0x230]) = v17 - 501127205;
  v135 = v81 - 501127205;
  LODWORD(STACK[0x3D8]) = v82 - 501127205;
  LODWORD(STACK[0x254]) = v20 - 501127205;
  LODWORD(STACK[0x3E8]) = v83 - 501127205;
  LODWORD(STACK[0x3D4]) = v84 - 501127205;
  LODWORD(STACK[0x3B4]) = (_DWORD)v28 - 501127205;
  LODWORD(v40) = *(_DWORD *)&v68[4 * (BYTE3(v23) ^ 0xC8)];
  HIDWORD(v29) = v40 ^ 0x8E;
  LODWORD(v29) = v40 ^ 0x2AFF1200;
  v133 = v29 >> 8;
  LODWORD(v30) = *(_DWORD *)&v73[4 * (LODWORD(STACK[0x284]) ^ 0xD)];
  v85 = *(_DWORD *)&v71[4 * (LODWORD(STACK[0x3D0]) ^ 0xA9)];
  LOBYTE(v65) = v23;
  LODWORD(STACK[0x284]) = (BYTE2(v23) ^ 0x7615709B) - 1241725333 + *(_DWORD *)&v149[4 * (BYTE2(v23) ^ 0x68)];
  LODWORD(v69) = *(_DWORD *)&v71[4 * (v70 ^ 0x31)];
  LODWORD(v23) = *(_DWORD *)&v71[4 * (v178 ^ 0x9C)];
  LODWORD(v72) = *(_DWORD *)&v71[4 * v150];
  LODWORD(v28) = *(_DWORD *)&v71[4 * (v65 ^ 0xAD)];
  LODWORD(v70) = *(_DWORD *)&v71[4 * (LODWORD(STACK[0x2C0]) ^ 0x67)];
  HIDWORD(v29) = v30 ^ 0xA92;
  LODWORD(v29) = v30 ^ 0xF0F8C000;
  v137 = v85 - 1779633197;
  v86 = *(_DWORD *)&v71[4 * (v177 ^ 0xC5)] - 1779633197;
  v153 = *(_DWORD *)&v71[4 * (LODWORD(STACK[0x228]) ^ 0x80)] - 1779633197;
  v134 = *(_DWORD *)&v71[4 * (v21 ^ 0x73)] - 1779633197;
  v87 = *(_DWORD *)&v71[4 * (v181 ^ 0x56)] - 1779633197;
  LODWORD(STACK[0x2C0]) = *(_DWORD *)&v71[4 * v152] - 1779633197;
  LODWORD(STACK[0x228]) = (_DWORD)v69 - 1779633197;
  v136 = v23 - 1779633197;
  LODWORD(v69) = (_DWORD)v72 - 1779633197;
  LODWORD(STACK[0x3C8]) = (_DWORD)v28 - 1779633197;
  v88 = STACK[0x2E8] ^ 0x5469ECEE;
  LODWORD(v31) = STACK[0x3C0];
  v89 = (char *)*(&off_10112C750 + LODWORD(STACK[0x3C0]) - 27321) - 787361690;
  v90 = (char *)*(&off_10112C750 + (LODWORD(STACK[0x3C0]) ^ 0x6F98)) - 1393270475;
  LODWORD(STACK[0x2C8]) = (4 * (v29 >> 14)) & 0x3D7298B8 ^ ((_DWORD)v70 - 1779633197) ^ ((LODWORD(STACK[0x2C8]) ^ 0x7615704A)
                                                                                       - 1241725333
                                                                                       + *(_DWORD *)&v149[4 * (LODWORD(STACK[0x2C8]) ^ 0xB9)]);
  v91 = STACK[0x2D8] ^ 0xAC4E360C;
  LODWORD(STACK[0x3E0]) = *(_DWORD *)((char *)*(&off_10112C750 + (int)v31 - 31099)
                                    + ((4 * (v91 >> 24)) ^ 0x3A8)
                                    - 2087585050);
  v92 = (char *)*(&off_10112C750 + (int)(v31 ^ 0x7F93)) - 444135846;
  LODWORD(STACK[0x2D8]) = *(_DWORD *)&v92[4 * (STACK[0x360] ^ 0x47)]
                        + ((v88 - 466196563) ^ v88);
  LODWORD(STACK[0x360]) = (v91 >> 24) + ((v91 >> 24) ^ 0xEB007E15);
  v93 = (char *)*(&off_10112C750 + (int)v31 - 28497) - 1852591618;
  v94 = (char *)*(&off_10112C750 + (int)v31 - 31712) - 712666451;
  v95 = (char *)*(&off_10112C750 + (int)(v31 ^ 0x729A)) - 1959292815;
  v96 = STACK[0x2F8] ^ 0xDF3F2733;
  LODWORD(v32) = *(_DWORD *)&v89[4 * (LODWORD(STACK[0x368]) ^ 0x91)] ^ BYTE1(v96) ^ *(_DWORD *)&v94[4 * (BYTE1(v96) ^ 0x5B)] ^ (*(_DWORD *)&v92[4 * (STACK[0x358] ^ 0x9A)] + (((LOBYTE(STACK[0x2F8]) ^ 0x33) - 466196563) ^ LOBYTE(STACK[0x2F8]) ^ 0x33)) ^ (*(_DWORD *)&v90[4 * BYTE2(v96)] - ((2 * *(_DWORD *)&v90[4 * BYTE2(v96)]) & 0x30F39D54) - 1736847702);
  LOBYTE(v72) = (STACK[0x308] ^ 0x57) - ((2 * (STACK[0x308] ^ 0x57)) & 0x72);
  LODWORD(v90) = *(_DWORD *)&v90[4 * (STACK[0x348] ^ 0x1D)];
  LODWORD(STACK[0x280]) = *(_DWORD *)&v92[4 * (STACK[0x330] ^ 0x36)]
                        + (((STACK[0x330] ^ 0x68) - 466196563) ^ STACK[0x330] ^ 0x68);
  LODWORD(STACK[0x330]) = BYTE1(v91);
  LODWORD(STACK[0x358]) = *(_DWORD *)&v94[4 * (BYTE1(v91) ^ 0x5B)];
  LODWORD(STACK[0x368]) = *(_DWORD *)&v94[4 * (LODWORD(STACK[0x3F0]) ^ 0xCC)];
  LODWORD(STACK[0x348]) = *(_DWORD *)&v93[4 * BYTE2(v91)];
  LODWORD(STACK[0x308]) = *(_DWORD *)&v89[4 * ((_BYTE)v72 - 71)];
  LODWORD(STACK[0x2F8]) = (_DWORD)v90 - ((2 * (_DWORD)v90) & 0x30F39D54) - 1736847702;
  LODWORD(STACK[0x2E8]) = *(_DWORD *)&v95[4 * v91];
  LODWORD(v72) = (v24 - 501127205) ^ v86 ^ v172 ^ (4 * v172) ^ v174;
  LODWORD(v24) = v138 ^ v87 ^ v135 ^ v140 ^ v163 ^ (4 * v163) ^ 0xD354B549;
  LODWORD(v31) = v139 ^ v141 ^ v162 ^ v160 ^ v161 ^ (4 * v161) & 0x3D7298B8 ^ (4 * v160) ^ 0x24EA8FF5;
  LODWORD(v17) = ((v166 ^ 0x4F)
                + 1587684364
                - ((2 * (v166 ^ 0x4F)) & 0x18)
                + 1748680123
                + ((2
                  * (((v166 ^ 0x4F) + 1587684364 - ((2 * (v166 ^ 0x4F)) & 0x18)) & 0x5BF ^ (((v166 ^ 0x4F) + 1587684364) | 0x7FFFFFFA))) ^ 0x9044400B)) ^ v155 ^ LODWORD(STACK[0x268]) ^ v156 ^ (4 * v156) & 0x3D7298B8 ^ v154 ^ (4 * v154) ^ 0x95B6456C;
  LODWORD(v91) = LODWORD(STACK[0x26C]) ^ LODWORD(STACK[0x218]) ^ LODWORD(STACK[0x208]) ^ LODWORD(STACK[0x210]);
  LODWORD(STACK[0x27C]) = (_DWORD)v72;
  LODWORD(STACK[0x278]) = v146 ^ 0xB77B8FFF;
  LODWORD(STACK[0x274]) = v24;
  LODWORD(STACK[0x268]) = v91;
  LODWORD(STACK[0x270]) = (_DWORD)v31;
  LODWORD(STACK[0x26C]) = v17;
  LODWORD(v90) = (v72 ^ 0x6BDA8DBF)
               + (v146 ^ 0xB77B8FFF)
               + v24
               + 1346911352
               + (_DWORD)v31
               - (v91 ^ 0x8EA20EEE)
               - v17;
  LODWORD(v89) = ((2 * (_DWORD)v90) & 0xEB010914) + (v90 ^ 0xF580848A);
  LODWORD(v72) = (v26 - 501127205) ^ v69 ^ v145 ^ v144 ^ (4 * v144);
  LODWORD(v12) = LODWORD(STACK[0x230]) ^ v134 ^ v167 ^ v168 ^ (4 * v168) ^ 0x657F1341;
  LODWORD(v24) = ((BYTE2(v178) ^ 0x7E) - ((2 * (HIWORD(v178) ^ 0xD57E)) & 0x174) + 1748680122) ^ v136 ^ v142 ^ v148 ^ v147 ^ (4 * v148) & 0x3D7298B8 ^ (4 * v147) ^ 0x5A34528D;
  LODWORD(v17) = v137 ^ LODWORD(STACK[0x264]) ^ LODWORD(STACK[0x258]) ^ LODWORD(STACK[0x240]) ^ (4
                                                                                               * LODWORD(STACK[0x258])) & 0x3D7298B8 ^ LODWORD(STACK[0x25C]) ^ 0x4F67B94C;
  LODWORD(v91) = LODWORD(STACK[0x254]) ^ v143 ^ LODWORD(STACK[0x260]) ^ LODWORD(STACK[0x228]) ^ v151 ^ (4 * v151);
  LODWORD(STACK[0x264]) = (_DWORD)v72;
  LODWORD(STACK[0x260]) = v12;
  LODWORD(STACK[0x254]) = v91;
  LODWORD(STACK[0x258]) = v17;
  LODWORD(STACK[0x25C]) = v24;
  LODWORD(v90) = v12 + (v72 ^ 0xC6735DD5) + (v91 ^ 0xE7853992) - v17 - v24;
  LODWORD(v12) = LODWORD(STACK[0x3C8]) ^ LODWORD(STACK[0x3B4]) ^ LODWORD(STACK[0x284]) ^ v133 ^ (4 * v133);
  LODWORD(v72) = LODWORD(STACK[0x3D4]) ^ LODWORD(STACK[0x220]) ^ LODWORD(STACK[0x3B8]) ^ LODWORD(STACK[0x24C]) ^ LODWORD(STACK[0x3CC]);
  LODWORD(STACK[0x24C]) = (_DWORD)v72;
  LODWORD(STACK[0x250]) = v12;
  LODWORD(STACK[0x284]) = (_DWORD)v32;
  LODWORD(STACK[0x28C]) = (_DWORD)v90
                        + (v72 ^ 0xBBA0ED63)
                        + (v12 ^ 0xEFF6F081)
                        + (_DWORD)v89
                        + (v32 ^ 0x7127A966)
                        - 2025095342;
  v97 = (unsigned __int8 *)STACK[0x3A8];
  v98 = *(unsigned __int8 *)(STACK[0x3A8] + 4);
  v99 = *(unsigned __int8 *)(STACK[0x3A8] + 9);
  v100 = *(unsigned __int8 *)(STACK[0x3A8] + 7);
  v101 = *(unsigned __int8 *)(STACK[0x3A8] + 13);
  v102 = *(unsigned __int8 *)(STACK[0x3A8] + 12);
  STACK[0x3B8] = v102;
  LODWORD(v24) = v102 ^ 8;
  LODWORD(STACK[0x3D4]) = ((v101 | v98 & 0x11111111 ^ 0x207C6FEF) ^ (v100 ^ 8 | 0x20184493) | ((v102 ^ 8) - 545058578)) ^ (-850739312 * (v102 ^ 8));
  v103 = *v97;
  v104 = v97[10];
  v105 = v97[8];
  STACK[0x398] = v105;
  v106 = v97[14];
  LODWORD(STACK[0x3CC]) = v106 ^ 8 | 0x48681756 | ((v100 ^ 0x17) - (v103 ^ 8) + 57) & (v105 ^ 8) & 0x78 ^ ((v99 ^ 8) - 1494597845) ^ ((v104 ^ 8) + 125326331);
  v107 = v97[11];
  v108 = v97[1];
  LODWORD(STACK[0x3D0]) = ((v104 ^ 8) + 1634729179) ^ (v107 ^ 8 | 0x8101E023) & (v108 ^ 0xD323E147);
  v109 = v104 ^ 0xF4;
  v110 = v97[3];
  LODWORD(v72) = (496064485 * (v105 ^ 8)) | ((1532101040 * (v110 ^ 8) + 715512268) * (v98 ^ 0x4D7781DE));
  LODWORD(v92) = STACK[0x3C0];
  v111 = (char *)*(&off_10112C750 + (LODWORD(STACK[0x3C0]) ^ 0x73A3)) - 612574134;
  LODWORD(v109) = *(_DWORD *)&v111[4 * v109];
  HIDWORD(v29) = v109 ^ 0x1890A;
  LODWORD(v29) = v109 ^ 0x237E0000;
  LODWORD(v93) = v29 >> 17;
  v112 = v97[15];
  LODWORD(STACK[0x3C8]) = ((_DWORD)v72 - v24 + 522626822) | ((v112 ^ 8) - 1295892261);
  v113 = (uint64_t)*(&off_10112C750 + (int)(v92 ^ 0x701A));
  STACK[0x228] = v98 ^ 0xE9;
  LODWORD(v98) = (_DWORD)v92;
  v114 = v113 - 1693556239;
  v115 = (char *)*(&off_10112C750 + (int)v92 - 29968) - 2098510371;
  v116 = v99 ^ 0xA3;
  v117 = (char *)*(&off_10112C750 + (int)v92 - 32111) - 805648294;
  v118 = (char *)*(&off_10112C750 + (int)v92 - 31161) - 277479578;
  LODWORD(v99) = *(_DWORD *)&v111[4 * (v106 ^ 0xB8)];
  HIDWORD(v29) = v99 ^ 0x1890A;
  LODWORD(v29) = v99 ^ 0x237E0000;
  LODWORD(v109) = v29 >> 17;
  v119 = v108 ^ 0x72;
  v120 = (unint64_t)*(&off_10112C750 + (int)(v92 ^ 0x79BF)) - 605204050;
  v121 = v101 ^ 0x6B;
  v122 = (char *)*(&off_10112C750 + (int)(v92 ^ 0x7565)) - 779991606;
  v123 = (unint64_t)*(&off_10112C750 + (int)(v98 ^ 0x747F)) - 908033042;
  v124 = v103 ^ 0x87;
  v125 = v97[5] ^ 0xD1;
  v126 = v97[6] ^ 0x84;
  STACK[0x240] = (unint64_t)v111;
  LODWORD(v126) = *(_DWORD *)&v111[4 * v126];
  HIDWORD(v29) = v126 ^ 0x1890A;
  LODWORD(v29) = v126 ^ 0x237E0000;
  LODWORD(v126) = v29 >> 17;
  v127 = STACK[0x3B8] ^ 0xC3;
  STACK[0x218] = v120;
  LODWORD(v120) = *(_DWORD *)(v120 + 4 * v119);
  v128 = v97[2] ^ 3;
  STACK[0x210] = (unint64_t)v122;
  LODWORD(STACK[0x3B4]) = (v120 - 238229685) ^ *(_DWORD *)&v122[4 * v128] ^ *(_DWORD *)(v114 + 4 * v124) ^ *(_DWORD *)&v118[4 * (v110 ^ 0x20)] ^ ((v110 ^ 0x3D) + (v110 ^ 0xD9F83E16)) ^ 0xF360A716;
  LODWORD(v120) = v109 ^ (v109 >> 6) ^ (v109 >> 2) ^ (*(_DWORD *)&v117[4 * v121] - 111596652) ^ (2 * (*(_DWORD *)&v117[4 * v121] - 111596652)) ^ (16 * (*(_DWORD *)&v117[4 * v121] - 111596652));
  STACK[0x208] = v123;
  HIDWORD(v29) = *(_DWORD *)(v123 + 4 * (v112 ^ 0xC9));
  LODWORD(v29) = HIDWORD(v29);
  LODWORD(STACK[0x3B8]) = v120 ^ (v29 >> 25) ^ ((v29 >> 25) >> 2) ^ ((v29 >> 25) >> 6) ^ *(_DWORD *)&v115[4 * v127] ^ 0x79A0D503;
  v129 = STACK[0x398] ^ 0x54;
  STACK[0x230] = (unint64_t)v115;
  LODWORD(STACK[0x3A8]) = v93 ^ (v93 >> 2) ^ (v93 >> 6) ^ *(_DWORD *)&v115[4 * v129] ^ (*(_DWORD *)&v117[4 * v116] - 111596652) ^ (2 * (*(_DWORD *)&v117[4 * v116] - 111596652)) ^ (16 * (*(_DWORD *)&v117[4 * v116] - 111596652)) ^ *(_DWORD *)&v118[4 * (v107 ^ 0x98)] ^ ((v107 ^ 0x85) + (v107 ^ 0xD9F83EAE)) ^ 0x1D861310;
  STACK[0x238] = v114;
  LODWORD(v120) = ((v100 ^ 0xD9F83E09) + (v100 ^ 0x22)) ^ *(_DWORD *)(v114 + 4 * STACK[0x228]);
  STACK[0x220] = (unint64_t)v118;
  LODWORD(v123) = v120 ^ *(_DWORD *)&v118[4 * (v100 ^ 0x3F)];
  STACK[0x228] = (unint64_t)v117;
  LODWORD(STACK[0x398]) = v123 ^ (*(_DWORD *)&v117[4 * v125] - 111596652) ^ (2 * (*(_DWORD *)&v117[4 * v125] - 111596652)) ^ (16 * (*(_DWORD *)&v117[4 * v125] - 111596652)) ^ v126 ^ (v126 >> 2) ^ (v126 >> 6) ^ 0xD11DF4DE;
  LODWORD(STACK[0x204]) ^= v153 ^ v157 ^ (4 * LODWORD(STACK[0x2A4]));
  HIDWORD(v29) = v184;
  LODWORD(v29) = v184;
  LODWORD(STACK[0x200]) = (v29 >> 1) ^ (4 * (v29 >> 1)) ^ v183 ^ 0x600211D0;
  v130 = (char *)*(&off_10112C750 + (int)v98 - 32048) - 1017017859;
  v131 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x2A8] + 8 * (int)v98) - 12);
  STACK[0x3F0] = (unint64_t)*(&off_10112C750 + (int)(v98 ^ 0x79DD)) - 2035250862;
  STACK[0x3E8] = (unint64_t)v130;
  return v131(1904457349);
}

uint64_t sub_10012F400@<X0>(int a1@<W0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  int a64;
  int a65;
  int a66;
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  unsigned int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int a83;
  uint64_t v83;
  int v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  char v88;
  int v89;
  unint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unsigned __int8 v97;
  unint64_t v98;
  char v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  char v103;
  unint64_t v104;
  unint64_t v105;
  unsigned __int8 v106;
  unsigned int v107;
  unint64_t v108;
  unint64_t v109;
  char v110;
  unint64_t v111;
  char v112;
  int v113;
  unsigned __int8 v114;
  unint64_t v115;
  unsigned int v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  int v126;
  unint64_t v127;
  char *v128;
  char *v129;
  unsigned __int8 v130;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unsigned __int8 v137;
  unsigned __int8 v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  int v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unsigned __int8 v150;
  unint64_t v151;
  unint64_t v152;
  int v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  int v159;
  unint64_t v160;
  unint64_t v161;
  int v162;
  char *v163;
  unint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  unsigned int v169;
  int v170;
  char *v171;
  unsigned int v172;
  int v173;
  char *v174;
  unsigned int v175;
  char *v176;
  int v177;
  int v178;
  unsigned int v179;
  int v180;
  int v181;
  int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  int v186;
  int v187;
  unsigned int v188;
  int v189;
  int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  int v202;
  unsigned int v203;
  int v204;
  unsigned int v205;
  unint64_t v206;
  int v207;
  int v208;
  unsigned int v209;
  int v210;
  int v211;
  int v213;
  unsigned int v214;
  int v215;
  int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  unsigned int v220;
  int v221;
  int v222;
  int v223;
  unsigned int v224;
  int v225;
  unsigned int v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  unsigned int v230;
  char *v231;
  int v232;
  unsigned int v233;
  unsigned __int8 v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  unsigned int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  int v256;
  unsigned int v257;
  int v258;
  unsigned int v259;
  int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  int v264;
  int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  char *v272;
  int v273;
  char *v274;
  char *v275;
  int v276;
  int v277;
  char *v278;
  int v279;
  unsigned int v280;
  char *v281;
  char v282;
  int v283;
  int v284;
  char *v285;
  unint64_t v286;
  unsigned int v287;
  char *v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  char *v292;
  char *v293;
  char *v294;
  char *v295;
  char *v296;
  int v297;
  int v298;
  char *v299;
  unsigned int v300;
  char *v301;
  unsigned int v302;
  char *v303;
  unint64_t v304;
  unint64_t v305;
  unsigned int v306;
  unint64_t v307;
  char *v308;
  char *v309;
  char v310;
  char *v311;
  int v312;
  _DWORD *v313;
  _QWORD *v314;
  unint64_t v315;
  unint64_t v316;
  int v317;
  unint64_t v318;
  unint64_t v319;
  unint64_t v320;
  unsigned int v321;
  unint64_t v322;
  unint64_t v323;
  unint64_t v324;
  unint64_t v325;
  unint64_t v326;
  unint64_t v327;
  unint64_t v328;
  char *v329;
  char *v330;
  char *v331;
  int v332;
  int v333;
  unint64_t v334;
  unint64_t v335;
  int v336;
  unint64_t v337;
  unint64_t v338;
  unint64_t v339;
  unint64_t v340;
  unint64_t v341;
  unint64_t v342;
  unint64_t v343;
  unint64_t v344;
  unint64_t v345;
  unint64_t v346;
  unint64_t v347;
  unint64_t v348;
  unint64_t v349;
  unint64_t v350;
  unint64_t v351;
  unint64_t v352;

  LODWORD(STACK[0x2C0]) = 0;
  v84 = STACK[0x3FC];
  v85 = a1 & 0xFFFFFFF9 ^ 0x7183B687;
  STACK[0x3A0] = v85;
  v86 = STACK[0x2B8];
  v87 = STACK[0x2B8] + v85;
  v88 = *(_BYTE *)(v87 - 0x6CA6F0EE111A2BB6);
  v89 = *(_DWORD *)(v83 + (int)(a2 & 0x91FF5B7C));
  LODWORD(STACK[0x304]) = (v84 + 1149290379) & 0xBB7F7FE3;
  v90 = -8231943
      * (((-8231943 * ((v87 ^ v89) & 0x7FFFFFFF)) >> (((v84 - 117) & 0xE3) - 113)) ^ (-8231943
                                                                                                  * ((v87 ^ v89) & 0x7FFFFFFF)));
  v91 = (char *)*(&off_10112C750 + v84 - 11530) - 1207557594;
  v92 = (char *)*(&off_10112C750 + (v84 ^ 0x38BF)) - 1726583007;
  v93 = (char *)*(&off_10112C750 + v84 - 11369) - 1509114971;
  LODWORD(v90) = *(_DWORD *)(STACK[0x240]
                           + 4
                           * (v88 ^ v91[v90 >> 24] ^ v92[(v90 >> 24) + 1] ^ v93[(v90 >> 24) + 2] ^ v90 ^ (-21 * BYTE3(v90)) ^ 0x12));
  HIDWORD(v94) = v90 ^ 0x1890A;
  LODWORD(v94) = v90 ^ 0x237E0000;
  LODWORD(STACK[0x338]) = v94 >> 17;
  v95 = a1 & 0xFFFFFFFE ^ 0x7183B685;
  STACK[0x368] = v95;
  v96 = -8231943
      * ((-8231943 * ((((_DWORD)v86 + (_DWORD)v95) ^ v89) & 0x7FFFFFFF)) ^ ((-8231943
                                                                           * ((((_DWORD)v86 + (_DWORD)v95) ^ v89) & 0x7FFFFFFFu)) >> 16));
  v97 = *(_BYTE *)(v86 + v95 - 0x6CA6F0EE111A2BB6) ^ v91[v96 >> 24] ^ v92[(v96 >> 24) + 1] ^ v93[(v96 >> 24) + 2] ^ v96 ^ (-21 * BYTE3(v96)) ^ 0x43;
  v98 = a1 & 0xFFFFFFFD ^ 0x7183B687;
  STACK[0x388] = v98;
  LODWORD(v87) = v86 + v98;
  v99 = *(_BYTE *)(v86 + v98 - 0x6CA6F0EE111A2BB6);
  v100 = *(unsigned int *)STACK[0x3F0];
  STACK[0x340] = v100;
  v101 = *(_QWORD *)STACK[0x3E8];
  STACK[0x348] = v101;
  LODWORD(v98) = *(_DWORD *)(v101 + (int)(v100 & 0x91FF5B7C));
  v102 = -8231943
       * ((-8231943 * ((v98 ^ v87) & 0x7FFFFFFF)) ^ ((-8231943
                                                                                * ((v98 ^ v87) & 0x7FFFFFFF)) >> 16));
  v103 = v99 ^ v91[v102 >> 24] ^ v92[(v102 >> 24) + 1] ^ v93[(v102 >> 24) + 2];
  v104 = a1 & 0xFFFFFFF1 ^ 0x7183B68F;
  STACK[0x350] = v104;
  v105 = -8231943
       * ((-8231943 * ((v98 ^ ((_DWORD)v86 + (_DWORD)v104)) & 0x7FFFFFFF)) ^ ((-8231943
                                                                                           * ((v98 ^ ((_DWORD)v86 + (_DWORD)v104)) & 0x7FFFFFFF)) >> 16));
  v106 = v103 ^ v102 ^ (-21 * BYTE3(v102)) ^ 0x64;
  LODWORD(v102) = *(unsigned __int8 *)(v86 + v104 - 0x6CA6F0EE111A2BB6) ^ v91[v105 >> 24] ^ v92[(v105 >> 24) + 1] ^ v105;
  v107 = v93[(v105 >> 24) + 2] ^ (-21
                                                 * ((-8231943
                                                   * ((-8231943
                                                     * ((v98 ^ ((_DWORD)v86 + (_DWORD)v104)) & 0x7FFFFFFF)) ^ ((-8231943 * ((v98 ^ ((_DWORD)v86 + (_DWORD)v104)) & 0x7FFFFFFF)) >> 16))) >> 24)) ^ 0x39;
  v108 = a1 & 0xFFFFFFFC ^ 0x7183B687;
  STACK[0x3C0] = v108;
  v109 = v86 + v108;
  v110 = *(_BYTE *)(v109 - 0x6CA6F0EE111A2BB6);
  v111 = -8231943
       * ((-8231943 * ((v98 ^ v109) & 0x7FFFFFFF)) ^ ((-8231943
                                                                                 * ((v98 ^ v109) & 0x7FFFFFFF)) >> 16));
  v112 = v91[v111 >> 24];
  STACK[0x3D8] = v102 ^ v107;
  LOBYTE(v102) = v92[(v111 >> 24) + 1] ^ v93[(v111 >> 24) + 2];
  v113 = ((-21 * BYTE3(v111)) ^ v111 ^ v110 ^ v112 ^ v102);
  v114 = v112 ^ v110 ^ v102 ^ v111 ^ (-21 * BYTE3(v111));
  v115 = a1 & 0xFFFFFFF0 ^ 0x7183B68F;
  STACK[0x380] = v115;
  v116 = (v113 ^ 0xD9F83EE6) + (v114 ^ 0xCD);
  v117 = -8231943
       * ((-8231943 * ((v98 ^ ((_DWORD)v86 + (_DWORD)v115)) & 0x7FFFFFFF)) ^ ((-8231943
                                                                                           * ((v98 ^ ((_DWORD)v86 + (_DWORD)v115)) & 0x7FFFFFFF)) >> 16));
  LODWORD(STACK[0x308]) = *(unsigned __int8 *)(v86 + v115 - 0x6CA6F0EE111A2BB6) ^ v91[v117 >> 24] ^ v92[(v117 >> 24) + 1] ^ v117 ^ v93[(v117 >> 24) + 2] ^ (-21 * (v117 >> 24));
  v118 = a1 & 0xFFFFFFFB ^ 0x7183B685;
  STACK[0x390] = v118;
  v119 = v86 + v118;
  LOBYTE(v111) = *(_BYTE *)(v119 - 0x6CA6F0EE111A2BB6);
  v120 = -8231943
       * ((-8231943 * ((v98 ^ v119) & 0x7FFFFFFF)) ^ ((-8231943
                                                                                 * ((v98 ^ v119) & 0x7FFFFFFF)) >> 16));
  LOBYTE(v111) = v120 ^ v111;
  v120 >>= 24;
  LOBYTE(v111) = v111 ^ (-21 * v120) ^ v91[v120];
  LOBYTE(v120) = v92[v120 + 1] ^ v93[v120 + 2];
  v121 = a1 & 0xFFFFFFFA ^ 0x7183B685;
  STACK[0x378] = v121;
  LOBYTE(v113) = *(_BYTE *)(v86 + v121 - 0x6CA6F0EE111A2BB6);
  v122 = -8231943
       * ((-8231943 * ((v98 ^ ((_DWORD)v86 + (_DWORD)v121)) & 0x7FFFFFFF)) ^ ((-8231943
                                                                                           * ((v98 ^ ((_DWORD)v86 + (_DWORD)v121)) & 0x7FFFFFFF)) >> 16));
  LOBYTE(v121) = v111 ^ v120;
  LOBYTE(v122) = v113 ^ v91[v122 >> 24] ^ v92[(v122 >> 24) + 1] ^ v93[(v122 >> 24) + 2] ^ v122 ^ (-21 * BYTE3(v122)) ^ 0xDE;
  v123 = a1 & 0xFFFFFFF4 ^ 0x7183B68F;
  STACK[0x320] = v123;
  v124 = v86 + v123;
  LOBYTE(v111) = *(_BYTE *)(v124 - 0x6CA6F0EE111A2BB6);
  v125 = -8231943
       * ((-8231943 * ((v98 ^ v124) & 0x7FFFFFFF)) ^ ((-8231943
                                                                                 * ((v98 ^ v124) & 0x7FFFFFFF)) >> 16));
  v126 = v84;
  LODWORD(STACK[0x3FC]) = v84;
  v127 = (unint64_t)*(&off_10112C750 + v84 - 12019) - 1305366291;
  v128 = (char *)*(&off_10112C750 + v84 - 12420) - 300852642;
  v129 = (char *)*(&off_10112C750 + (v126 ^ 0x32FF)) - 2146778911;
  v130 = v111 ^ v125 ^ *(_BYTE *)(v127 + (v125 >> 24)) ^ v128[(v125 >> 24) + 1] ^ (-21 * BYTE3(v125)) ^ v129[v125 >> 24] ^ 0xA4;
  v132 = a1 & 0xFFFFFFF6 ^ 0x7183B68D;
  STACK[0x328] = v132;
  v133 = v86 + v132;
  LOBYTE(v111) = *(_BYTE *)(v133 - 0x6CA6F0EE111A2BB6);
  v134 = -8231943
       * ((-8231943 * ((v98 ^ v133) & 0x7FFFFFFF)) ^ ((-8231943
                                                                                 * ((v98 ^ v133) & 0x7FFFFFFF)) >> 16));
  LOBYTE(v111) = v134 ^ v111;
  v134 >>= 24;
  LOBYTE(v111) = v111 ^ (-21 * v134) ^ *(_BYTE *)(v127 + v134);
  LOBYTE(v134) = v128[v134 + 1] ^ v129[v134];
  v135 = a1 & 0xFFFFFFF2 ^ 0x7183B68D;
  STACK[0x318] = v135;
  v136 = -8231943
       * ((-8231943 * ((v98 ^ ((_DWORD)v86 + (_DWORD)v135)) & 0x7FFFFFFF)) ^ ((-8231943
                                                                                           * ((v98 ^ ((_DWORD)v86 + (_DWORD)v135)) & 0x7FFFFFFF)) >> 16));
  v137 = v111 ^ v134;
  v138 = *(_BYTE *)(v86 + v135 - 0x6CA6F0EE111A2BB6) ^ *(_BYTE *)(v127 + (v136 >> 24)) ^ v128[(v136 >> 24) + 1] ^ v129[v136 >> 24] ^ (-7 * ((-7 * (v98 ^ (v86 + v135))) ^ ((-8231943 * ((v98 ^ ((_DWORD)v86 + (_DWORD)v135)) & 0x7FFFFFFF)) >> 16))) ^ (-21 * ((-8231943 * ((-8231943 * ((v98 ^ ((_DWORD)v86 + (_DWORD)v135)) & 0x7FFFFFFF)) ^ ((-8231943 * ((v98 ^ ((_DWORD)v86 + (_DWORD)v135)) & 0x7FFFFFFF)) >> 16))) >> 24)) ^ 0xBA;
  v139 = a1 ^ 0x7183B685u;
  STACK[0x3E0] = v139;
  v140 = v86 + v139;
  LOBYTE(v136) = *(_BYTE *)(v140 - 0x6CA6F0EE111A2BB6);
  v141 = -8231943
       * ((-8231943 * ((v98 ^ v140) & 0x7FFFFFFF)) ^ ((-8231943
                                                                                 * ((v98 ^ v140) & 0x7FFFFFFF)) >> 16));
  LOBYTE(v141) = v136 ^ *(_BYTE *)(v127 + (v141 >> 24)) ^ v128[(v141 >> 24) + 1] ^ v141 ^ v129[v141 >> 24] ^ (-21 * BYTE3(v141)) ^ 0xAB;
  v142 = STACK[0x228];
  LODWORD(v136) = *(_DWORD *)(STACK[0x228] + 4 * v97) - 111596652;
  v143 = STACK[0x210];
  v144 = STACK[0x220];
  v145 = STACK[0x238];
  v146 = v136 ^ (16 * v136) ^ (2 * v136) ^ *(_DWORD *)(STACK[0x210] + 4 * v106) ^ *(_DWORD *)(STACK[0x220]
                                                                                              + 4 * (v114 ^ 0xD0u)) ^ v116 ^ *(_DWORD *)(STACK[0x238] + 4 * v141);
  v147 = a1 & 0xFFFFFFF8 ^ 0x7183B687;
  STACK[0x370] = v147;
  v148 = v86 + v147;
  v149 = (unint64_t)(-8231943
                          * ((-8231943 * ((v98 ^ v148) & 0x7FFFFFFF)) ^ ((-8231943 * ((v98 ^ v148) & 0x7FFFFFFF)) >> 16))) >> 24;
  v150 = (-7 * ((-7 * (v98 ^ v148)) ^ ((-8231943 * ((v98 ^ v148) & 0x7FFFFFFF)) >> 16))) ^ (-21 * ((-8231943 * ((-8231943 * ((v98 ^ v148) & 0x7FFFFFFF)) ^ ((-8231943 * ((v98 ^ v148) & 0x7FFFFFFF)) >> 16))) >> 24));
  LOBYTE(v148) = *(_BYTE *)(v148 - 0x6CA6F0EE111A2BB6) ^ *(_BYTE *)(v127 + v149) ^ v128[v149 + 1] ^ v129[v149];
  v151 = STACK[0x230];
  LODWORD(v122) = *(_DWORD *)(v142 + 4 * v122) - 111596652;
  LODWORD(v121) = LODWORD(STACK[0x338]) ^ (LODWORD(STACK[0x338]) >> 6) ^ (LODWORD(STACK[0x338]) >> 2) ^ *(_DWORD *)(STACK[0x230] + 4 * (v121 ^ 0xEDu)) ^ v122 ^ (2 * v122) ^ (16 * v122);
  LODWORD(v148) = *(_DWORD *)(v144 + 4 * (v148 ^ v150 ^ 0xD0)) ^ ((v150 ^ 0xCD ^ v148 ^ 0xD9F83E2B)
                                                                                   + (v150 ^ 0xCD ^ v148));
  v152 = a1 & 0xFFFFFFF5 ^ 0x7183B68F;
  STACK[0x330] = v152;
  v153 = v121 ^ v148;
  v154 = -8231943
       * ((-8231943 * ((v98 ^ ((_DWORD)v86 + (_DWORD)v152)) & 0x7FFFFFFF)) ^ ((-8231943
                                                                                           * ((v98 ^ ((_DWORD)v86 + (_DWORD)v152)) & 0x7FFFFFFF)) >> 16));
  v155 = v154 >> 24;
  LOBYTE(v154) = *(_BYTE *)(v86 + v152 - 0x6CA6F0EE111A2BB6) ^ *(_BYTE *)(v127 + (v154 >> 24)) ^ v128[(v154 >> 24) + 1] ^ v154;
  LOBYTE(v155) = v129[v155] ^ (-21 * v155) ^ 0x98;
  LODWORD(STACK[0x360]) = a1;
  LODWORD(STACK[0x358]) = 1904457357;
  v156 = a1 & 0xFFFFFFF7 ^ 0x7183B68D;
  STACK[0x338] = v156;
  LOBYTE(v154) = v154 ^ v155;
  v157 = (unint64_t)(-8231943
                          * ((-8231943 * ((v98 ^ ((_DWORD)v86 + (_DWORD)v156)) & 0x7FFFFFFF)) ^ ((-8231943 * ((v98 ^ ((_DWORD)v86 + (_DWORD)v156)) & 0x7FFFFFFF)) >> 16))) >> 24;
  v158 = STACK[0x208];
  HIDWORD(v94) = *(_DWORD *)(STACK[0x208] + 4 * v130);
  LODWORD(v94) = HIDWORD(v94);
  v159 = (v94 >> 25) ^ ((v94 >> 25) >> 6) ^ ((v94 >> 25) >> 2) ^ (*(_DWORD *)(STACK[0x218] + 4 * (v137 ^ 0xEu))
                                                                                            - 238229685) ^ *(_DWORD *)(v143 + 4 * v154) ^ *(_DWORD *)(v151 + 4 * (((-7 * ((-7 * (v98 ^ (v86 + (a1 & 0xF7 ^ 0x8D)))) ^ ((-8231943 * ((v98 ^ ((_DWORD)v86 + (a1 & 0xFFFFFFF7 ^ 0x7183B68D))) & 0x7FFFFFFF)) >> 16))) ^ *(_BYTE *)(v86 + v156 - 0x6CA6F0EE111A2BB6) ^ (-21 * ((-8231943 * ((-8231943 * ((v98 ^ ((_DWORD)v86 + (_DWORD)v156)) & 0x7FFFFFFF)) ^ ((-8231943 * ((v98 ^ ((_DWORD)v86 + (_DWORD)v156)) & 0x7FFFFFFF)) >> 16))) >> 24)) ^ *(_BYTE *)(v127 + v157) ^ v128[v157 + 1] ^ v129[v157]) ^ 0x3Cu));
  v160 = a1 & 0xFFFFFFF3 ^ 0x7183B68D;
  STACK[0x310] = v160;
  v161 = -8231943
       * ((-8231943 * ((v98 ^ ((_DWORD)v86 + (_DWORD)v160)) & 0x7FFFFFFF)) ^ ((-8231943
                                                                                           * ((v98 ^ ((_DWORD)v86 + (_DWORD)v160)) & 0x7FFFFFFF)) >> 16));
  STACK[0x2F8] = (unint64_t)v128;
  LOBYTE(v157) = v128[(v161 >> 24) + 1];
  STACK[0x2E8] = (unint64_t)v129;
  LOBYTE(v157) = v157 ^ v129[v161 >> 24];
  STACK[0x2D0] = v86 + v160;
  LODWORD(v156) = *(unsigned __int8 *)(v86 + v160 - 0x6CA6F0EE111A2BB6);
  STACK[0x2F0] = v127;
  LOBYTE(v111) = *(_BYTE *)(v127 + (v161 >> 24));
  LODWORD(STACK[0x2CC]) = v156;
  LOBYTE(v161) = v156 ^ v111 ^ v157 ^ v161 ^ (-21 * BYTE3(v161)) ^ 0xCE;
  HIDWORD(v94) = *(_DWORD *)(v158 + 4 * (LODWORD(STACK[0x308]) ^ 0xCCu));
  LODWORD(v94) = HIDWORD(v94);
  LODWORD(v157) = *(_DWORD *)(v142 + 4 * v138) - 111596652;
  LODWORD(v127) = (v94 >> 25) ^ *(_DWORD *)(v143 + 4 * STACK[0x3D8]) ^ ((v94 >> 25) >> 2) ^ ((v94 >> 25) >> 6) ^ v157 ^ (2 * v157) ^ (16 * v157) ^ *(_DWORD *)(v145 + 4 * v161);
  LODWORD(STACK[0x308]) = v146;
  LODWORD(v122) = a77 ^ v146;
  v162 = STACK[0x3FC];
  v163 = (char *)*(&off_10112C750 + (LODWORD(STACK[0x3FC]) ^ 0x3273)) - 484022291;
  LODWORD(v161) = a73 ^ (-1195758708
                       - ((BYTE3(v122) - 2008629179) ^ BYTE3(v122))
                       + *(_DWORD *)&v163[4 * (BYTE3(v122) ^ 0xBD)]);
  v164 = (unint64_t)*(&off_10112C750 + (LODWORD(STACK[0x3FC]) ^ 0x365D)) - 2067006019;
  STACK[0x3D8] = v164;
  LODWORD(STACK[0x2D8]) = v159;
  LODWORD(v158) = a75 ^ v159;
  LODWORD(v161) = (v161 - 1879078997 - ((2 * v161) & 0x1FFF0F56)) ^ *(_DWORD *)(v164
                                                                              + 4
                                                                              * ((unsigned __int16)(a75 ^ v159) >> 8));
  LODWORD(v160) = v161 + 595431922 - ((2 * v161) & 0x46FB23E4);
  v165 = (uint64_t)*(&off_10112C750 + v162 - 12334);
  LODWORD(STACK[0x2E4]) = v153;
  LODWORD(STACK[0x2C4]) = v153 ^ 0x75E68A37;
  LODWORD(v164) = a76 ^ v153 ^ 0x75E68A37 ^ 0x2AED2F3;
  v166 = (char *)*(&off_10112C750 + (v162 ^ 0x3834)) - 660081466;
  LODWORD(v111) = v164 + 55515475 + *(_DWORD *)&v166[4 * ((a76 ^ v153 ^ 0x37) ^ 0xB)];
  v167 = v165 - 248518454;
  LODWORD(v151) = (BYTE3(v164) ^ 0x3A3F107) - 722489331 + *(_DWORD *)(v165 - 248518454 + 4 * (BYTE3(v164) ^ 0x65));
  v168 = (char *)*(&off_10112C750 + (v162 ^ 0x310E)) - 1806606702;
  LODWORD(STACK[0x2C8]) = v127;
  v169 = a74 ^ v127;
  v170 = v111 ^ *(_DWORD *)&v168[4 * ((a74 ^ v127) >> 16)] ^ v160;
  v171 = (char *)*(&off_10112C750 + (v162 ^ 0x3AD2)) - 1776884370;
  v172 = *(_DWORD *)(v165 - 248518454 + 4 * (BYTE3(v158) ^ 0x65)) + (BYTE3(v158) ^ 0x3A3F107);
  v173 = v172 - 127057409 - ((2 * v172 + 702504986) & 0x46FB23E4);
  v174 = (char *)*(&off_10112C750 + (v162 ^ 0x3CF5)) - 2064722395;
  v175 = *(_DWORD *)&v174[4 * BYTE2(v122)] ^ 0xCA8426B0;
  LODWORD(v151) = a72 ^ v175 ^ v151 ^ (v175 >> 1) ^ (v175 >> 4);
  v176 = (char *)*(&off_10112C750 + v162 - 12134) - 476401406;
  LODWORD(v111) = v151 ^ ((BYTE1(v169) ^ 0x5C84D6A0) - 339769217 + *(_DWORD *)&v171[4 * (BYTE1(v169) ^ 0xBA)]) ^ (*(_DWORD *)&v176[4 * v158] - 432172924);
  v177 = (HIBYTE(v169) ^ 0x3A3F107) - 722489331 + *(_DWORD *)(v165 - 248518454 + 4 * (HIBYTE(v169) ^ 0x65));
  v178 = *(_DWORD *)&v168[4 * BYTE2(v164)] ^ LODWORD(STACK[0x258]) ^ ((BYTE1(v122) ^ 0x5C84D6A0)
                                                                    - 339769217
                                                                    + *(_DWORD *)&v171[4 * (BYTE1(v122) ^ 0xBA)]) ^ v173 ^ (*(_DWORD *)&v176[4 * (a74 ^ v127)] - 432172924);
  LODWORD(v158) = *(_DWORD *)&v174[4 * BYTE2(v158)] ^ 0xCA8426B0;
  v179 = LODWORD(STACK[0x268]) ^ v158 ^ (v158 >> 4) ^ (v158 >> 1) ^ (*(_DWORD *)&v176[4 * v122]
                                                                                               - 432172924) ^ ((BYTE1(v164) ^ 0x5C84D6A0) - 339769217 + *(_DWORD *)&v171[4 * (BYTE1(v164) ^ 0xBA)]) ^ 0x34EBF0C4 ^ v177;
  LODWORD(v164) = *(_DWORD *)(v165 - 248518454 + 4 * (((v170 ^ 0x6415C9Bu) >> 24) ^ 0x65))
                + (((v170 ^ 0x6415C9Bu) >> 24) ^ 0x3A3F107);
  v180 = v164 - 127057409 - ((2 * v164 + 702504986) & 0x46FB23E4);
  LODWORD(v164) = *(_DWORD *)&v171[4 * (((unsigned __int16)(v178 ^ 0xA744) >> 8) ^ 0xBA)]
                + (((unsigned __int16)(v178 ^ 0xA744) >> 8) ^ 0x5C84D6A0)
                - 339769217;
  v181 = (v178 ^ 0x44) + 55515475 + *(_DWORD *)&v166[4 * (v178 ^ 0xBC)];
  LODWORD(v122) = a71 ^ (-1195758708
                       - ((((v178 ^ 0xD9C3A744) >> 24) - 2008629179) ^ ((v178 ^ 0xD9C3A744) >> 24))
                       + *(_DWORD *)&v163[4 * (((v178 ^ 0xD9C3A744) >> 24) ^ 0xBD)]);
  LODWORD(v144) = a70 ^ (-1195758708
                       - ((HIBYTE(v179) - 2008629179) ^ HIBYTE(v179))
                       + *(_DWORD *)&v163[4 * (HIBYTE(v179) ^ 0xBD)]);
  v182 = (v144 + 595431922 - ((2 * v144) & 0x46FB23E4)) ^ *(_DWORD *)&v168[4 * (BYTE2(v178) ^ 0x8D)];
  LODWORD(v144) = *(_DWORD *)&v174[4 * (BYTE2(v111) ^ 0x90)];
  LODWORD(v122) = v144 ^ *(_DWORD *)(STACK[0x3D8] + 4 * ((unsigned __int16)(v170 ^ 0x5C9B) >> 8)) ^ ((v144 ^ 0xCA8426B0) >> 1) ^ ((v144 ^ 0xCA8426B0) >> 4) ^ (*(_DWORD *)&v176[4 * v179] - 432172924) ^ (v122 - 1879078997 - ((2 * v122) & 0x1FFF0F56)) ^ 0xE19168E4;
  LODWORD(v145) = v182 - 1879078997 - ((2 * v182) & 0x1FFF0F56);
  v183 = *(_DWORD *)&v174[4 * ((v170 ^ 0x6415C9Bu) >> 16)] ^ 0xCA8426B0;
  v184 = a69 ^ v183 ^ (-1195758708
                     - ((((v111 ^ 0x8710FC51) >> 24) - 2008629179) ^ ((v111 ^ 0x8710FC51) >> 24))
                     + *(_DWORD *)&v163[4 * (((v111 ^ 0x8710FC51) >> 24) ^ 0xBD)]) ^ (v183 >> 1) ^ (v183 >> 4) ^ (*(_DWORD *)&v171[4 * (BYTE1(v179) ^ 0xBA)] + (BYTE1(v179) ^ 0x5C84D6A0) - 339769217) ^ v181 ^ 0x84F3314A;
  LODWORD(v158) = a68 ^ ((v170 ^ 0x9B) + 55515475 + *(_DWORD *)&v166[4 * (v170 ^ 0x63)]) ^ *(_DWORD *)(STACK[0x3D8] + 4 * (BYTE1(v111) ^ 0x41u)) ^ v145;
  LODWORD(v111) = LODWORD(STACK[0x27C]) ^ *(_DWORD *)&v168[4 * BYTE2(v179)] ^ ((v111 ^ 0x51)
                                                                             + 55515475
                                                                             + *(_DWORD *)&v166[4
                                                                                              * (v111 ^ 0xA9)]) ^ v164 ^ v180 ^ 0x4F94CEA6;
  LODWORD(v145) = *(_DWORD *)&v174[4 * ((v158 ^ 0x1D283AC2) >> 16)] ^ 0xCA8426B0;
  v185 = LODWORD(STACK[0x204]) ^ (-1195758708
                                - ((BYTE3(v111) - 2008629179) ^ BYTE3(v111))
                                + *(_DWORD *)&v163[4 * (BYTE3(v111) ^ 0xBD)]) ^ v145 ^ (v145 >> 1) ^ (v145 >> 4);
  LODWORD(v145) = *(_DWORD *)(v165 - 248518454 + 4 * (HIBYTE(v184) ^ 0x65)) + (HIBYTE(v184) ^ 0x3A3F107);
  v186 = *(_DWORD *)(STACK[0x3D8] + 4 * BYTE1(v122)) ^ LODWORD(STACK[0x2A4]) ^ (*(_DWORD *)&v176[4
                                                                                                 * v184]
                                                                                - 432172924) ^ (v185
                                                                                              - 1879078997
                                                                                              - ((2 * v185) & 0x1FFF0F56));
  v187 = *(_DWORD *)&v168[4 * BYTE2(v111)] ^ LODWORD(STACK[0x260]) ^ (*(_DWORD *)&v176[4 * v122]
                                                                    - 432172924) ^ (*(_DWORD *)&v171[4 * (((unsigned __int16)(v158 ^ 0x3AC2) >> 8) ^ 0xBA)]
                                                                                  + (((unsigned __int16)(v158 ^ 0x3AC2) >> 8) ^ 0x5C84D6A0)
                                                                                  - 339769217) ^ (v145
                                                                                                - 127057409
                                                                                                - ((2 * v145 + 702504986) & 0x46FB23E4));
  LODWORD(v145) = a67 ^ (-1195758708
                       - ((BYTE3(v122) - 2008629179) ^ BYTE3(v122))
                       + *(_DWORD *)&v163[4 * (BYTE3(v122) ^ 0xBD)]);
  v188 = (((v158 ^ 0x1D283AC2) >> 24) ^ 0x3A3F107)
       - 722489331
       + *(_DWORD *)(v165 - 248518454 + 4 * (((v158 ^ 0x1D283AC2) >> 24) ^ 0x65));
  LODWORD(v164) = (v158 ^ 0xC2) + 55515475 + *(_DWORD *)&v166[4 * (v158 ^ 0x3A)];
  LODWORD(v158) = ((LODWORD(STACK[0x200]) ^ v188) + 595431922 - ((2 * (LODWORD(STACK[0x200]) ^ v188)) & 0x46FB23E4)) ^ *(_DWORD *)&v168[4 * BYTE2(v122)];
  LODWORD(v122) = *(_DWORD *)&v168[4 * BYTE2(v184)] ^ LODWORD(STACK[0x28C]) ^ ((BYTE1(v111) ^ 0x5C84D6A0)
                                                                             - 339769217
                                                                             + *(_DWORD *)&v171[4 * (BYTE1(v111) ^ 0xBA)]) ^ v164 ^ (v145 + 595431922 - ((2 * v145) & 0x46FB23E4));
  v189 = *(_DWORD *)(STACK[0x3D8] + 4 * BYTE1(v184)) ^ LODWORD(STACK[0x288]) ^ (*(_DWORD *)&v176[4
                                                                                                 * v111]
                                                                                - 432172924) ^ (v158
                                                                                              - 1879078997
                                                                                              - ((2 * v158) & 0x1FFF0F56));
  LODWORD(v111) = *(_DWORD *)&v174[4 * ((v189 ^ 0x2239E332u) >> 16)] ^ 0xCA8426B0;
  LODWORD(v164) = (-1195758708
                 - ((((v186 ^ 0x1B48D20Cu) >> 24) - 2008629179) ^ ((v186 ^ 0x1B48D20Cu) >> 24))
                 + *(_DWORD *)&v163[4 * (((v186 ^ 0x1B48D20Cu) >> 24) ^ 0xBD)]) ^ (v111 >> 1) ^ (v111 >> 4);
  LODWORD(v151) = v164 - 1879078997 - ((2 * v164) & 0x1FFF0F56);
  v190 = v187 ^ 0x1D403691;
  LODWORD(v142) = (v187 ^ 0x91) + 55515475 + *(_DWORD *)&v166[4 * (v187 ^ 0x69)];
  LODWORD(v164) = (((v187 ^ 0x1D403691u) >> 24) ^ 0x3A3F107)
                - 722489331
                + *(_DWORD *)(v165 - 248518454 + 4 * (((v187 ^ 0x1D403691u) >> 24) ^ 0x65));
  v191 = *(_DWORD *)&v171[4 * (((unsigned __int16)(v189 ^ 0xE332) >> 8) ^ 0xBA)]
       + (((unsigned __int16)(v189 ^ 0xE332) >> 8) ^ 0x5C84D6A0)
       - 339769217;
  v192 = *(_DWORD *)&v174[4 * BYTE2(v190)] ^ 0xCA8426B0;
  LODWORD(v144) = v192 ^ a83 ^ (v192 >> 1) ^ (v192 >> 4) ^ (-1195758708
                                                          - ((((2
                                                              * (((v122 ^ 0x1EC824B0) >> 24) - 1046392040)) & 0x81428A5A)
                                                            + ((((v122 ^ 0x1EC824B0) >> 24) - 1046392040) ^ 0xC6A56D2D)) ^ ((v122 ^ 0x1EC824B0) >> 24))
                                                          + *(_DWORD *)&v163[4
                                                                           * (((v122 ^ 0x1EC824B0) >> 24) ^ 0xBD)]);
  v193 = *(_DWORD *)(STACK[0x3D8] + 4 * ((unsigned __int16)(v186 ^ 0xD20C) >> 8)) ^ 0xF9A53904;
  v194 = v144 & v193;
  LODWORD(v144) = v144 + v193;
  v195 = *(_DWORD *)&v166[4 * (v189 ^ 0xCA)];
  v196 = ((v195 - 1220569005) ^ (v189 ^ 0x32 | 0x4C0F8100))
       + 2 * ((v195 + 926914643) & (v189 ^ 0x32 | 0x4C0F8100));
  v197 = *(_DWORD *)&v163[4 * (((v189 ^ 0x2239E332u) >> 24) ^ 0xBD)]
       - 1195758708
       - ((((v189 ^ 0x2239E332u) >> 24) - 2008629179) ^ ((v189 ^ 0x2239E332u) >> 24));
  v198 = (v144 - 2 * v194) ^ v196;
  v199 = a66 ^ *(_DWORD *)(STACK[0x3D8] + 4 * (BYTE1(v122) ^ 0x99u)) ^ v142 ^ v111 ^ 0xFD966D1E ^ v151;
  LODWORD(v145) = (v197 + 595431922 - ((2 * v197) & 0x46FB23E4)) ^ *(_DWORD *)&v168[4
                                                                                  * (((v122 ^ 0x1EC824B0) >> 16) ^ 0x4E)];
  LODWORD(v158) = *(_DWORD *)&v174[4 * ((v186 ^ 0x1B48D20Cu) >> 16)] ^ 0xCA8426B0;
  v200 = a65 ^ v164 ^ v158 ^ (v158 >> 1) ^ (v158 >> 4) ^ (*(_DWORD *)&v176[4 * (v122 ^ 3)]
                                                                                    - 432172924) ^ v191 ^ 0x499BACFC;
  v201 = *(_DWORD *)(STACK[0x3D8] + 4 * BYTE1(v190)) ^ LODWORD(STACK[0x274]) ^ (*(_DWORD *)&v176[4
                                                                                                 * (v186 ^ 0xBF)]
                                                                                - 432172924) ^ (v145
                                                                                              - 1879078997
                                                                                              - ((2 * v145) & 0x1FFF0F56));
  v202 = -1195758708 - ((HIBYTE(v199) - 2008629179) ^ HIBYTE(v199)) + *(_DWORD *)&v163[4 * (HIBYTE(v199) ^ 0xBD)];
  v203 = v201 ^ 0xC4419531;
  v204 = (v202 + 595431922 - ((2 * v202) & 0x46FB23E4)) ^ *(_DWORD *)&v168[4
                                                                         * ((v201 ^ 0xC4419531) >> 16)];
  v205 = v198 ^ 0xB5C8058C;
  v206 = STACK[0x3D8];
  v207 = *(_DWORD *)(STACK[0x3D8] + 4 * ((unsigned __int16)(v198 ^ 0x58C) >> 8)) ^ LODWORD(STACK[0x270]) ^ (*(_DWORD *)&v176[4 * v200] - 432172924) ^ (v204 - 1879078997 - ((2 * v204) & 0x1FFF0F56));
  v208 = (v198 ^ 0x8C)
       + 55515475
       + *(_DWORD *)&v166[4 * (((v144 - 2 * v194) ^ v196) ^ 0x74)];
  v209 = *(_DWORD *)&v174[4 * BYTE2(v199)] ^ 0xCA8426B0;
  LODWORD(v144) = ((HIBYTE(v205) ^ 0x9D467842) + ((v198 >> 23) & 0x84) - 352303101) ^ HIBYTE(v205);
  v210 = a64 ^ (*(_DWORD *)(v165 - 248518454 + 4 * (HIBYTE(v200) ^ 0x65)) + (HIBYTE(v200) ^ 0x3A3F107) - 722489331) ^ v209 ^ (v209 >> 1) ^ (v209 >> 4) ^ v208 ^ (*(_DWORD *)&v171[4 * (BYTE1(v203) ^ 0xBA)] + (BYTE1(v203) ^ 0x5C84D6A0) - 339769217);
  v211 = *(_DWORD *)&v163[4 * (HIBYTE(v205) ^ 0xBD)] - v144 - 1195758708;
  if ((v211 & a53) == 0)
    a50 = a53;
  v213 = v203 + 55515475 + *(_DWORD *)&v166[4 * (v201 ^ 0xC9)];
  v214 = *(_DWORD *)&v174[4 * BYTE2(v205)] ^ 0xCA8426B0;
  v215 = a52 ^ v214 ^ ((HIBYTE(v203) ^ 0x3A3F107) - 722489331 + *(_DWORD *)(v167 + 4 * (HIBYTE(v203) ^ 0x65))) ^ (v214 >> 1) ^ (v214 >> 4);
  v216 = v215 - 1879078997 - ((2 * v215) & 0x1FFF0F56);
  v217 = a63 ^ *(_DWORD *)&v168[4 * BYTE2(v200)] ^ ((BYTE1(v199) ^ 0x5C84D6A0)
                                                  - 339769217
                                                  + *(_DWORD *)&v171[4 * (BYTE1(v199) ^ 0xBA)]) ^ v213 ^ (a50 + v211) ^ 0x5248549B;
  v218 = *(_DWORD *)(v206 + 4 * BYTE1(v200)) ^ LODWORD(STACK[0x2A0]) ^ (*(_DWORD *)&v176[4 * v199]
                                                                        - 432172924) ^ v216;
  v219 = *(_DWORD *)&v174[4 * (BYTE2(v218) ^ 0x8A)] ^ 0xCA8426B0;
  v220 = a82 ^ ((((v207 ^ 0x95DF0B83) >> 24) ^ 0x3A3F107)
              - 722489331
              + *(_DWORD *)(v167 + 4 * (((v207 ^ 0x95DF0B83) >> 24) ^ 0x65))) ^ v219 ^ (v219 >> 1) ^ (v219 >> 4);
  v221 = v220 - 1879078997 - ((2 * v220) & 0x1FFF0F56);
  v222 = v210 ^ 0x797384A9;
  v223 = (v210 ^ 0xA9) + 55515475 + *(_DWORD *)&v166[4 * (v210 ^ 0x51)];
  v224 = a55 ^ (-1195758708
              - ((((v210 ^ 0x797384A9u) >> 24) - 2008629179) ^ ((v210 ^ 0x797384A9u) >> 24))
              + *(_DWORD *)&v163[4 * (((v210 ^ 0x797384A9u) >> 24) ^ 0xBD)]);
  v225 = *(_DWORD *)&v168[4 * ((v207 ^ 0x95DF0B83) >> 16)] ^ LODWORD(STACK[0x298]) ^ (*(_DWORD *)&v176[4 * v217] - 432172924) ^ (v224 + 595431922 - ((2 * v224) & 0x46FB23E4)) ^ (*(_DWORD *)&v171[4 * (((unsigned __int16)(v218 ^ 0xA53C) >> 8) ^ 0xBA)] + (((unsigned __int16)(v218 ^ 0xA53C) >> 8) ^ 0x5C84D6A0) - 339769217);
  v226 = *(_DWORD *)&v163[4 * (((v218 ^ 0xD30AA53C) >> 24) ^ 0xBD)]
       - 1195758708
       - ((((v218 ^ 0xD30AA53C) >> 24) - 2008629179) ^ ((v218 ^ 0xD30AA53C) >> 24));
  v227 = LODWORD(STACK[0x29C]) ^ *(_DWORD *)(v206 + 4 * BYTE1(v217)) ^ v223 ^ 0xF10363DD ^ v221;
  v228 = (BYTE1(v222) ^ 0x5C84D6A0) - 339769217 + *(_DWORD *)&v171[4 * (BYTE1(v222) ^ 0xBA)];
  v229 = *(_DWORD *)&v174[4 * BYTE2(v222)] ^ 0xCA8426B0;
  v230 = a62 ^ (-1195758708 - ((HIBYTE(v217) - 2008629179) ^ HIBYTE(v217)) + *(_DWORD *)&v163[4 * (HIBYTE(v217) ^ 0xBD)]) ^ v229 ^ (v229 >> 1) ^ (v229 >> 4) ^ ((((unsigned __int16)(v207 ^ 0xB83) >> 8) ^ 0x5C84D6A0) - 339769217 + *(_DWORD *)&v171[4 * (((unsigned __int16)(v207 ^ 0xB83) >> 8) ^ 0xBA)]) ^ 0x8C15C6DA ^ (*(_DWORD *)&v176[4 * (v218 ^ 0x8F)] - 432172924);
  v231 = v166;
  v232 = *(_DWORD *)&v168[4 * BYTE2(v217)] ^ LODWORD(STACK[0x26C]) ^ v228 ^ ((v207 ^ 0x83)
                                                                           + 55515475
                                                                           + *(_DWORD *)&v166[4
                                                                                            * (v207 ^ 0x7B)]) ^ (v226 + 595431922 - ((2 * v226) & 0x46FB23E4));
  v233 = v232 ^ 0x70E6E984;
  v234 = (v232 ^ 0x84 | 0x22) ^ (v232 | 0xDD);
  v235 = a81 ^ ((HIBYTE(v227) ^ 0x3A3F107) - 722489331 + *(_DWORD *)(v167 + 4 * (HIBYTE(v227) ^ 0x65)));
  v236 = (v235 - 1879078997 - ((2 * v235) & 0x1FFF0F56)) ^ *(_DWORD *)(v206 + 4 * BYTE1(v230));
  v237 = v236 + 595431922 - ((2 * v236) & 0x46FB23E4);
  v238 = v225 ^ 0x2A9BD4D1;
  v239 = *(_DWORD *)&v168[4 * (BYTE2(v232) ^ 0xA8)] ^ LODWORD(STACK[0x294]) ^ ((v225 ^ 0xD1)
                                                                             + 55515475
                                                                             + *(_DWORD *)&v166[4
                                                                                              * (v225 ^ 0x29)]) ^ v237;
  v240 = (*(_DWORD *)&v171[4 * (BYTE1(v233) ^ 0xBA)] + (BYTE1(v233) ^ 0x5C84D6A0) - 339769217) ^ ((((v225 ^ 0x2A9BD4D1u) >> 24) ^ 0x3A3F107)
                                                                                                - 722489331
                                                                                                + *(_DWORD *)(v167 + 4 * (((v225 ^ 0x2A9BD4D1u) >> 24) ^ 0x65)));
  v241 = *(_DWORD *)&v163[4 * (HIBYTE(v230) ^ 0xBD)] - ((HIBYTE(v230) - 2008629179) ^ HIBYTE(v230));
  v242 = *(_DWORD *)&v168[4 * BYTE2(v227)] ^ LODWORD(STACK[0x278]) ^ (*(_DWORD *)&v176[4 * v230]
                                                                    - 432172924) ^ (v240
                                                                                  + 595431922
                                                                                  - ((2 * v240) & 0x46FB23E4));
  v243 = (v241 - 600326786 - ((2 * v241 + 1903449880) & 0x46FB23E4)) ^ *(_DWORD *)&v168[4 * BYTE2(v238)];
  v244 = (BYTE1(v238) ^ 0x5C84D6A0) - 339769217 + *(_DWORD *)&v171[4 * (BYTE1(v238) ^ 0xBA)];
  v245 = LODWORD(STACK[0x254]) ^ *(_DWORD *)(v206 + 4 * BYTE1(v227)) ^ (*(_DWORD *)&v176[4 * (v234 ^ 0x4C)] - 432172924) ^ (v243 - 1879078997 - ((2 * v243) & 0x1FFF0F56)) ^ 0x662DBFBB;
  v246 = *(_DWORD *)&v174[4 * BYTE2(v230)] ^ 0xCA8426B0;
  v247 = a61 ^ v246 ^ (-1195758708
                     - ((HIBYTE(v233) - 2008629179) ^ HIBYTE(v233))
                     + *(_DWORD *)&v163[4 * (HIBYTE(v233) ^ 0xBD)]) ^ (v246 >> 1) ^ (v246 >> 4) ^ v244 ^ (*(_DWORD *)&v176[4 * v227] - 432172924) ^ 0xA0215D14;
  v248 = v239 ^ 0xFEA3EDA1;
  v249 = v242 ^ 0xDA9A7DAA;
  v250 = *(_DWORD *)&v174[4 * BYTE2(v247)] ^ 0xCA8426B0;
  v251 = (-1195758708 - ((HIBYTE(v248) - 2008629179) ^ HIBYTE(v248)) + *(_DWORD *)&v163[4 * (HIBYTE(v248) ^ 0xBD)]) ^ LODWORD(STACK[0x25C]) ^ v250 ^ (v250 >> 1) ^ (v250 >> 4) ^ ((v242 ^ 0xAA) + 55515475 + *(_DWORD *)&v166[4 * (v242 ^ 0x52)]) ^ (*(_DWORD *)&v171[4 * (BYTE1(v245) ^ 0xBA)] + (BYTE1(v245) ^ 0x5C84D6A0) - 339769217);
  v252 = *(_DWORD *)(v167 + 4 * (HIBYTE(v245) ^ 0x65)) + (HIBYTE(v245) ^ 0x3A3F107) - 722489331;
  v253 = *(_DWORD *)&v174[4 * ((v239 ^ 0xFEA3EDA1) >> 16)] ^ 0xCA8426B0;
  v254 = LODWORD(STACK[0x264]) ^ ((HIBYTE(v249) ^ 0x3A3F107)
                                - 722489331
                                + *(_DWORD *)(v167 + 4 * (HIBYTE(v249) ^ 0x65))) ^ v253 ^ (v253 >> 1) ^ (v253 >> 4) ^ (*(_DWORD *)&v176[4 * v245] - 432172924) ^ (*(_DWORD *)&v171[4 * (BYTE1(v247) ^ 0xBA)] + (BYTE1(v247) ^ 0x5C84D6A0) - 339769217) ^ 0x91C8B8EE;
  v255 = *(_DWORD *)&v174[4 * BYTE2(v249)] ^ v252 & 0xFFFFFFFE ^ ((*(_DWORD *)&v174[4 * BYTE2(v249)] ^ 0xCA8426B0) >> 1) ^ ((*(_DWORD *)&v174[4 * BYTE2(v249)] ^ 0xCA8426B0) >> 4) ^ (*(_DWORD *)&v176[4 * v247] - 432172924);
  v256 = v252 & 1;
  if ((v256 & STACK[0x290]) != 0)
    v256 = -v256;
  v257 = v255 ^ (v256 + a54) ^ ((BYTE1(v248) ^ 0x5C84D6A0) - 339769217 + *(_DWORD *)&v171[4 * (BYTE1(v248) ^ 0xBA)]);
  v258 = v248 + 55515475 + *(_DWORD *)&v166[4 * (v239 ^ 0x59)];
  v259 = *(_DWORD *)&v174[4 * BYTE2(v245)] ^ 0xCA8426B0;
  v260 = a60 ^ v259 ^ ((HIBYTE(v247) ^ 0x3A3F107) - 722489331 + *(_DWORD *)(v167 + 4 * (HIBYTE(v247) ^ 0x65))) ^ (v259 >> 1) ^ (v259 >> 4) ^ v258 ^ ((BYTE1(v249) ^ 0x5C84D6A0) - 339769217 + *(_DWORD *)&v171[4 * (BYTE1(v249) ^ 0xBA)]);
  v261 = *(_DWORD *)&v174[4 * ((v260 ^ 0xF4CD9AF6) >> 16)] ^ 0xCA8426B0;
  v262 = a80 ^ v261 ^ ((((v251 ^ 0xF786A633) >> 24) ^ 0x3A3F107)
                     - 722489331
                     + *(_DWORD *)(v167 + 4 * (((v251 ^ 0xF786A633) >> 24) ^ 0x65))) ^ (v261 >> 1) ^ (v261 >> 4);
  v263 = *(_DWORD *)&v174[4 * ((v251 ^ 0xF786A633) >> 16)] ^ 0xCA8426B0;
  v264 = ((HIBYTE(v254) ^ 0x3A3F107) - 722489331 + *(_DWORD *)(v167 + 4 * (HIBYTE(v254) ^ 0x65))) ^ (v263 >> 1) ^ (v263 >> 4);
  v257 ^= 0xB7529F8E;
  v265 = *(_DWORD *)&v163[4 * (HIBYTE(v257) ^ 0xBD)] - ((HIBYTE(v257) - 2008629179) ^ HIBYTE(v257));
  v266 = *(_DWORD *)&v168[4 * BYTE2(v257)] ^ a51 ^ ((((v260 ^ 0xF4CD9AF6) >> 24) ^ 0x3A3F107)
                                                  - 722489331
                                                  + *(_DWORD *)(v167 + 4 * (((v260 ^ 0xF4CD9AF6) >> 24) ^ 0x65)));
  v267 = LODWORD(STACK[0x24C]) ^ *(_DWORD *)(STACK[0x3D8]
                                           + 4 * ((unsigned __int16)(v260 ^ 0x9AF6) >> 8)) ^ (*(_DWORD *)&v176[4 * v257] - 432172924) ^ v263 ^ 0x35AE9F93 ^ (v264 - 1879078997 - ((2 * v264) & 0x1FFF0F56));
  v268 = *(_DWORD *)(STACK[0x3D8] + 4 * BYTE1(v257)) ^ (*(_DWORD *)&v176[4 * v254] - 432172924) ^ 0x5E369BD9 ^ (v262 - 1879078997 - ((2 * v262) & 0x1FFF0F56));
  v269 = a59 ^ *(_DWORD *)(STACK[0x3D8] + 4 * BYTE1(v254)) ^ ((v251 ^ 0x33)
                                                              + 55515475
                                                              + *(_DWORD *)&v166[4 * (v251 ^ 0xCB)]) ^ (v266 - 1879078997 - ((2 * v266) & 0x1FFF0F56)) ^ 0xD6A217CF;
  v270 = STACK[0x3FC];
  v271 = LODWORD(STACK[0x250]) ^ *(_DWORD *)&v168[4 * BYTE2(v254)] ^ ((v260 ^ 0xF6)
                                                                    + 55515475
                                                                    + *(_DWORD *)&v231[4 * (v260 ^ 0xE)]) ^ (v265 - 600326786 - ((2 * v265 + 1903449880) & 0x46FB23E4)) ^ ((((unsigned __int16)(v251 ^ 0xA633) >> 8) ^ 0x5C84D6A0) - 339769217 + *(_DWORD *)&v171[4 * (((unsigned __int16)(v251 ^ 0xA633) >> 8) ^ 0xBA)]) ^ 0xC701FAB7;
  v272 = (char *)*(&off_10112C750 + LODWORD(STACK[0x3FC]) - 13455) - 1430103287;
  v273 = *(_DWORD *)&v272[4 * HIBYTE(v268)];
  LODWORD(v272) = *(_DWORD *)&v272[4 * HIBYTE(v271)];
  v274 = (char *)*(&off_10112C750 + (LODWORD(STACK[0x3FC]) ^ 0x30DC)) - 1953955554;
  LODWORD(STACK[0x3D8]) = v268;
  v275 = (char *)*(&off_10112C750 + v270 - 9725) - 1707275591;
  v276 = BYTE1(v271);
  v277 = *(_DWORD *)&v275[4 * (BYTE1(v271) ^ 0x73)];
  v278 = (char *)*(&off_10112C750 + (v270 ^ 0x308B)) - 787612491;
  v279 = *(_DWORD *)&v278[4 * (HIBYTE(v267) ^ 0x5C)];
  v280 = HIBYTE(v269);
  LODWORD(v278) = *(_DWORD *)&v278[4 * (HIBYTE(v269) ^ 0x5C)];
  v281 = (char *)*(&off_10112C750 + v270 - 10687) - 2092922311;
  v282 = BYTE2(v269);
  v283 = *(_DWORD *)&v281[4 * (BYTE2(v269) ^ 0x1E)];
  v284 = BYTE2(v271);
  LODWORD(v281) = *(_DWORD *)&v281[4 * (BYTE2(v271) ^ 0x1E)];
  v285 = (char *)*(&off_10112C750 + v270 - 11957) - 967988111;
  HIDWORD(v286) = *(_DWORD *)&v285[4 * BYTE1(v269)];
  LODWORD(v286) = HIDWORD(v286);
  v287 = a58 ^ a57 ^ LODWORD(STACK[0x398]) ^ HIBYTE(v267) ^ BYTE2(v268) ^ v279 ^ (v286 >> 5) ^ *(_DWORD *)&v274[4 * (BYTE2(v268) ^ 0xE8)] ^ ((v286 >> 5) >> 4) ^ ((v286 >> 5) >> 7) ^ *(_DWORD *)((char *)*(&off_10112C750 + v270 - 12932) + 4 * v271 - 662365090);
  v288 = (char *)*(&off_10112C750 + v270 - 9049) - 1146080107;
  v289 = a79 ^ LODWORD(STACK[0x3B4]) ^ v283 ^ (-1512364115 * v273) ^ v277 ^ ((-1512364115 * v273) >> 2) & 0x1A01A75B ^ (v276 + 1805066019) ^ (*(_DWORD *)&v288[4 * v267] + 2053932981);
  v290 = LODWORD(STACK[0x3A8]) ^ LODWORD(STACK[0x284]) ^ BYTE2(v267) ^ (BYTE1(v268) + 1805066019) ^ (-1512364115 * (_DWORD)v272) ^ *(_DWORD *)&v274[4 * (BYTE2(v267) ^ 0xE8)] ^ ((-1512364115 * (_DWORD)v272) >> 2) & 0x1A01A75B ^ *(_DWORD *)&v275[4 * (BYTE1(v268) ^ 0x73)] ^ (*(_DWORD *)&v288[4 * v269] + 2053932981);
  HIDWORD(v286) = *(_DWORD *)&v285[4 * BYTE1(v267)];
  LODWORD(v286) = HIDWORD(v286);
  v291 = a56 ^ LODWORD(STACK[0x280]) ^ LODWORD(STACK[0x3B8]) ^ v280 ^ v284 ^ v278 ^ v281 ^ (v286 >> 5) ^ ((v286 >> 5) >> 4) ^ ((v286 >> 5) >> 7) ^ (*(_DWORD *)&v288[4 * LODWORD(STACK[0x3D8])] + 2053932981);
  v292 = (char *)*(&off_10112C750 + (v270 ^ 0x3EBF)) + ((v289 ^ v282) ^ 0xDELL);
  v293 = (char *)*(&off_10112C750 + (v270 ^ 0x247F)) - 243440799;
  LODWORD(STACK[0x3D8]) = v293[BYTE1(v287) ^ 0x58];
  v294 = (char *)*(&off_10112C750 + v270 - 13065) + (HIBYTE(v291) ^ 0x91);
  LODWORD(v293) = (v289 ^ v282) ^ 0xC5 ^ *(v292 - 663636703) | (((v293[BYTE1(v289) ^ 0x54] ^ ((v293[BYTE1(v289) ^ 0x54] ^ 0xAD) >> 4) ^ ((v293[BYTE1(v289) ^ 0x54] ^ 0xAD) >> 3)) ^ 0x62) << 8);
  v295 = (char *)*(&off_10112C750 + v270 - 11459) - 1513941827;
  LOBYTE(v267) = v295[BYTE2(v290) ^ 0x61];
  LOBYTE(v284) = v295[BYTE2(v291) ^ 0xBDLL];
  v296 = (char *)*(&off_10112C750 + (v270 ^ 0x2675)) - 1607434075;
  v297 = v296[HIBYTE(v290) ^ 0xA4];
  LODWORD(STACK[0x3B8]) = v296[HIBYTE(v287) ^ 0xABLL];
  v298 = v296[HIBYTE(v289) ^ 0xF9];
  v299 = (char *)*(&off_10112C750 + v270 - 9423) - 2072853687;
  LOBYTE(v288) = v299[BYTE1(v290) ^ 0x85];
  LOBYTE(v296) = v299[BYTE1(v291) ^ 0x18];
  v300 = v293 | (((v298 + 109) ^ 0x11111111) << 24);
  v301 = (char *)*(&off_10112C750 + v270 - 10303) - 211175239;
  LODWORD(STACK[0x3B4]) = v301[BYTE2(v287) ^ 0x6CLL];
  LOBYTE(v293) = v301[BYTE2(v289) ^ 0xCLL] + 11;
  v302 = v300 & 0xFF00FFFF | (((v293 ^ ((v293 & 0xF0) >> 4)) ^ 0xB8) << 16);
  v303 = (char *)*(&off_10112C750 + (v270 ^ 0x37D4)) - 1688980186;
  LOBYTE(v290) = v303[v290 ^ 0x32];
  LOBYTE(v291) = v303[v291 ^ 0x60];
  LOBYTE(v289) = v303[v287 ^ 0xF2];
  v304 = STACK[0x2B0];
  v305 = STACK[0x2B0] + STACK[0x3E0];
  v306 = -8231943 * ((*(_DWORD *)(STACK[0x348] + (STACK[0x340] & 0x1C753D78)) ^ v305) & 0x7FFFFFFF);
  v307 = -8231943 * (v306 ^ HIWORD(v306));
  v308 = (char *)*(&off_10112C750 + v270 - 10810) - 1168942762;
  v309 = (char *)*(&off_10112C750 + (v270 ^ 0x3FE6)) - 1863006534;
  v310 = v309[v307 >> 24] ^ v308[v307 >> 24];
  v311 = (char *)*(&off_10112C750 + v270 - 10321) - 1071134067;
  LOBYTE(v299) = v311[v307 >> 24] ^ v307 ^ (-95 * BYTE3(v307));
  v312 = *(v294 - 693359035);
  LODWORD(v285) = STACK[0x3D4];
  LOBYTE(v307) = v302 ^ LODWORD(STACK[0x3D4]);
  *(_BYTE *)(v305 - 0xDDC5B3FCA89D511) = v310 ^ ((v302 ^ LODWORD(STACK[0x3D4])) >> 24) ^ v299;
  LODWORD(v305) = ((v312 ^ ((v312 ^ 0x37) >> 5) ^ ((v312 ^ 0x37) >> 1) ^ 0x50) << 24) | (((v284 ^ (16 * v284)) ^ 5) << 16) | (((35 * (_BYTE)v296) ^ 0xE7) << 8) | ((4 * (v291 ^ 0xCD)) | 0x48) ^ v291 ^ 0xCD;
  v313 = (_DWORD *)STACK[0x3F0];
  v314 = (_QWORD *)STACK[0x3E8];
  v315 = v304 + STACK[0x350];
  LODWORD(v296) = -8231943
                * ((*(_DWORD *)(*(_QWORD *)STACK[0x3E8] + (*(_DWORD *)STACK[0x3F0] & 0x1C753D78)) ^ v315) & 0x7FFFFFFF);
  v316 = -8231943 * (v296 ^ (v296 >> 16));
  v317 = v305 ^ LODWORD(STACK[0x3C8]);
  *(_BYTE *)(v315 - 0xDDC5B3FCA89D511) = v308[v316 >> 24] ^ ((unsigned __int16)(v305 ^ LODWORD(STACK[0x3C8])) >> 8) ^ v309[v316 >> 24] ^ v311[v316 >> 24] ^ v316 ^ (-95 * BYTE3(v316));
  v318 = v304 + STACK[0x368];
  LODWORD(v316) = -8231943 * ((*(_DWORD *)(*v314 + (*v313 & 0x1C753D78)) ^ v318) & 0x7FFFFFFF);
  v319 = -8231943 * (v316 ^ WORD1(v316));
  *(_BYTE *)(v318 - 0xDDC5B3FCA89D511) = v308[v319 >> 24] ^ ((v302 ^ v285) >> 16) ^ v309[v319 >> 24] ^ v311[v319 >> 24] ^ v319 ^ (-95 * BYTE3(v319));
  LODWORD(v319) = (((v267 ^ (16 * v267)) ^ 0x31) << 16) | (((v297 + 109) ^ 0x10) << 24) | ((4 * (v290 ^ 0xCD)) | 0x48) ^ v290 ^ 0xCD | (((35 * (_BYTE)v288) ^ 0xDC) << 8);
  v320 = v304 + STACK[0x320];
  v321 = -8231943 * ((*(_DWORD *)(*v314 + (*v313 & 0x1C753D78)) ^ v320) & 0x7FFFFFFF);
  v322 = -8231943 * (v321 ^ HIWORD(v321));
  LOBYTE(v288) = v308[v322 >> 24] ^ v309[v322 >> 24] ^ v311[v322 >> 24] ^ v322 ^ (-95 * BYTE3(v322));
  LODWORD(v322) = v319 ^ LODWORD(STACK[0x3D0]);
  *(_BYTE *)(v320 - 0xDDC5B3FCA89D511) = v319 ^ LODWORD(STACK[0x3D0]) ^ v288 ^ 0x30;
  v323 = v304 + STACK[0x318];
  LODWORD(v319) = -8231943 * ((*(_DWORD *)(*v314 + (*v313 & 0x1C753D78)) ^ v323) & 0x7FFFFFFF);
  v324 = -8231943 * (v319 ^ WORD1(v319));
  *(_BYTE *)(v323 - 0xDDC5B3FCA89D511) = v308[v324 >> 24] ^ BYTE2(v317) ^ v309[v324 >> 24] ^ v311[v324 >> 24] ^ v324 ^ (-95 * BYTE3(v324));
  v325 = v304 + STACK[0x328];
  LODWORD(v324) = -8231943 * ((*(_DWORD *)(*v314 + (*v313 & 0x1C753D78)) ^ v325) & 0x7FFFFFFF);
  v326 = -8231943 * (v324 ^ WORD1(v324));
  *(_BYTE *)(v325 - 0xDDC5B3FCA89D511) = v308[v326 >> 24] ^ BYTE2(v322) ^ v309[v326 >> 24] ^ v311[v326 >> 24] ^ v326 ^ (-95 * BYTE3(v326));
  v327 = v304 + STACK[0x388];
  LODWORD(v326) = -8231943 * ((*(_DWORD *)(*v314 + (*v313 & 0x1C753D78)) ^ v327) & 0x7FFFFFFF);
  v328 = -8231943 * (v326 ^ WORD1(v326));
  v329 = (char *)*(&off_10112C750 + (v270 ^ 0x38A2)) - 1225342594;
  v330 = (char *)*(&off_10112C750 + (v270 ^ 0x397D)) - 809463139;
  v331 = (char *)*(&off_10112C750 + v270 - 11931) - 203043947;
  *(_BYTE *)(v327 - 0xDDC5B3FCA89D511) = v331[v328 >> 24] ^ ((unsigned __int16)(v302 ^ (unsigned __int16)v285) >> 8) ^ v329[(v328 >> 24) + 1] ^ v330[(v328 >> 24) + 1] ^ v328 ^ (31 * BYTE3(v328));
  v332 = LODWORD(STACK[0x3D8]) - ((2 * LODWORD(STACK[0x3D8])) & 0x5A) - 83;
  LODWORD(v327) = (v332 >> 4) ^ ((LOBYTE(STACK[0x3D8])
                                                                  - ((2 * LOBYTE(STACK[0x3D8])) & 0x5A)
                                                                  - 83) >> 3);
  v333 = ((((LODWORD(STACK[0x3B4]) + 11) ^ (((LODWORD(STACK[0x3B4]) + 11) & 0xF0) >> 4)) ^ 0x50) << 16) | (((v327 + v332 - 2 * (v327 & v332)) ^ 0x51) << 8) | (((LODWORD(STACK[0x3B8]) + 109) ^ 0x82) << 24) | v289 ^ 0xB4 ^ (4 * (_BYTE)v289) & 0xB4;
  v334 = v304 + STACK[0x3A0];
  LODWORD(v328) = -8231943 * ((*(_DWORD *)(*v314 + (*v313 & 0x1C753D78)) ^ v334) & 0x7FFFFFFF);
  v335 = -8231943 * (v328 ^ WORD1(v328));
  v336 = v333 ^ LODWORD(STACK[0x3CC]);
  *(_BYTE *)(v334 - 0xDDC5B3FCA89D511) = v331[v335 >> 24] ^ BYTE1(v336) ^ v329[(v335 >> 24) + 1] ^ v330[(v335 >> 24) + 1] ^ v335 ^ (31 * BYTE3(v335));
  v337 = v304 + STACK[0x310];
  LODWORD(v335) = -8231943 * ((*(_DWORD *)(*v314 + (*v313 & 0x1C753D78)) ^ v337) & 0x7FFFFFFF);
  v338 = -8231943 * (v335 ^ WORD1(v335));
  *(_BYTE *)(v337 - 0xDDC5B3FCA89D511) = v331[v338 >> 24] ^ HIBYTE(v317) ^ v329[(v338 >> 24) + 1] ^ v330[(v338 >> 24) + 1] ^ v338 ^ (31 * BYTE3(v338));
  v339 = v304 + STACK[0x380];
  LODWORD(v338) = -8231943 * ((*(_DWORD *)(*v314 + (*v313 & 0x1C753D78)) ^ v339) & 0x7FFFFFFF);
  v340 = -8231943 * (v338 ^ WORD1(v338));
  *(_BYTE *)(v339 - 0xDDC5B3FCA89D511) = v317 ^ v331[v340 >> 24] ^ v329[(v340 >> 24) + 1] ^ v330[(v340 >> 24) + 1] ^ v340 ^ (31 * BYTE3(v340)) ^ 0xC3;
  v341 = v304 + STACK[0x330];
  LODWORD(v340) = -8231943 * ((*(_DWORD *)(*v314 + (*v313 & 0x1C753D78)) ^ v341) & 0x7FFFFFFF);
  v342 = -8231943 * (v340 ^ WORD1(v340));
  *(_BYTE *)(v341 - 0xDDC5B3FCA89D511) = v331[v342 >> 24] ^ BYTE1(v322) ^ v329[(v342 >> 24) + 1] ^ v330[(v342 >> 24) + 1] ^ v342 ^ (31 * BYTE3(v342));
  v343 = v304 + STACK[0x378];
  LODWORD(v342) = -8231943 * ((*(_DWORD *)(*v314 + (*v313 & 0x1C753D78)) ^ v343) & 0x7FFFFFFF);
  v344 = -8231943 * (v342 ^ WORD1(v342));
  *(_BYTE *)(v343 - 0xDDC5B3FCA89D511) = v331[v344 >> 24] ^ BYTE2(v336) ^ v329[(v344 >> 24) + 1] ^ v330[(v344 >> 24) + 1] ^ v344 ^ (31 * BYTE3(v344));
  v345 = v304 + STACK[0x390];
  LODWORD(v343) = -8231943 * ((*(_DWORD *)(*v314 + (*v313 & 0x1C753D78)) ^ v345) & 0x7FFFFFFF);
  v346 = -8231943 * (v343 ^ WORD1(v343));
  *(_BYTE *)(v345 - 0xDDC5B3FCA89D511) = v331[v346 >> 24] ^ HIBYTE(v336) ^ v329[(v346 >> 24) + 1] ^ v330[(v346 >> 24) + 1] ^ v346 ^ (31 * BYTE3(v346));
  v347 = v304 + STACK[0x338];
  LODWORD(v346) = -8231943 * ((*(_DWORD *)(*v314 + (*v313 & 0x1C753D78)) ^ v347) & 0x7FFFFFFF);
  v348 = -8231943 * (v346 ^ WORD1(v346));
  *(_BYTE *)(v347 - 0xDDC5B3FCA89D511) = v331[v348 >> 24] ^ BYTE3(v322) ^ v329[(v348 >> 24) + 1] ^ v330[(v348 >> 24) + 1] ^ v348 ^ (31 * BYTE3(v348));
  v349 = v304 + STACK[0x3C0];
  LODWORD(v322) = -8231943 * ((*(_DWORD *)(*v314 + (*v313 & 0x1C753D78)) ^ v349) & 0x7FFFFFFF);
  v350 = -8231943 * (v322 ^ WORD1(v322));
  *(_BYTE *)(v349 - 0xDDC5B3FCA89D511) = v331[v350 >> 24] ^ v329[(v350 >> 24) + 1] ^ v330[(v350 >> 24) + 1] ^ v350 ^ (31 * BYTE3(v350)) ^ v307;
  v351 = v304 + STACK[0x370];
  LODWORD(v307) = -8231943 * ((*(_DWORD *)(*v314 + (*v313 & 0x1C753D78)) ^ v351) & 0x7FFFFFFF);
  v352 = -8231943 * (v307 ^ WORD1(v307));
  *(_BYTE *)(v351 - 0xDDC5B3FCA89D511) = v331[v352 >> 24] ^ v329[(v352 >> 24) + 1] ^ v330[(v352 >> 24) + 1] ^ v352 ^ (31 * BYTE3(v352)) ^ v336;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2A8]
                                        + 8
                                        * (v270 | (4
                                                 * (((STACK[0x3E0]
                                                    + 1904457365
                                                    - 2
                                                    * ((STACK[0x3E0] + 16) & STACK[0x358] ^ STACK[0x360] & 8)) ^ 0x7183B685) < a78))))
                            - 4))();
}

uint64_t sub_100132190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,unint64_t a55)
{
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unint64_t v62;

  v57 = STACK[0x304];
  v58 = (LODWORD(STACK[0x304]) - 26993) | 0x2202;
  v59 = (a7 - 1310355330 + (a5 & 0x4F5172BE ^ 0xB3AE9FF1)) ^ v56;
  LODWORD(STACK[0x3FC]) = v58;
  v60 = a7 + ((v59 + 1906040103) ^ v58 ^ 0xAC434384) * (a8 & 0x95D5C1DC);
  LODWORD(STACK[0x3D0]) = v60;
  LODWORD(STACK[0x3C8]) = a8 ^ v59 ^ 0xFEBA4530 ^ v60 & 0xE39D4EB5;
  LODWORD(STACK[0x3D4]) = v59;
  v61 = -8231943 * ((*(_DWORD *)(*(_QWORD *)STACK[0x3E8] + (*(int *)STACK[0x3F0] & a55)) ^ STACK[0x2D0]) & 0x7FFFFFFF);
  v62 = -8231943 * (v61 ^ HIWORD(v61));
  LODWORD(v62) = (*(_BYTE *)(STACK[0x2F0] + (v62 >> 24)) ^ LOBYTE(STACK[0x2CC]) ^ *(_BYTE *)((v62 >> 24) + STACK[0x2F8] + 1) ^ *(_BYTE *)(STACK[0x2E8] + (v62 >> 24)) ^ v62 ^ (-21 * BYTE3(v62)));
  LODWORD(v62) = v62 & (LODWORD(STACK[0x2E4]) ^ 0xC8) ^ (v62 | LODWORD(STACK[0x2C4]));
  LODWORD(STACK[0x3CC]) = a5 + (v59 & 0xF16C3CFE ^ 0x6EBFEB3D) + 1;
  LODWORD(STACK[0x3A8]) = LODWORD(STACK[0x2D8]) ^ 0x8F7CD24C;
  LODWORD(STACK[0x3B8]) = LODWORD(STACK[0x2C8]) ^ 0xEA6FE857;
  LODWORD(STACK[0x398]) = v62 ^ 0xB3BAA54;
  LODWORD(STACK[0x3B4]) = LODWORD(STACK[0x308]) ^ 0xB83AA8EF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v55 + 8 * v57) - 12))();
}

void sub_100132344()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 40) = (v1 ^ 0xEE7FF8F7) + 2073755613 + ((2 * v1) & 0xDCFEB0CA);
}

void sub_100132398(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  if (*(_QWORD *)(a1 + 8))
    v2 = *(_QWORD *)(a1 + 24) == 0;
  else
    v2 = 1;
  v3 = v2;
  v1 = *(_DWORD *)(a1 + 16) ^ (879478891 * ((2 * (a1 & 0x13BE07F1) - a1 - 331220978) ^ 0x5C38C54D));
  __asm { BR              X8 }
}

uint64_t sub_100132460(uint64_t a1)
{
  uint64_t v1;
  int v2;
  _BYTE *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  unint64_t v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  unsigned int v49;
  int v50;
  int v51;
  int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  int v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  uint64_t v124;
  int v125;
  unsigned int v126;
  uint64_t v127;
  uint64_t v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  BOOL v150;
  int v151;
  int v152;
  unsigned int v153;
  int v154;
  int v155;
  unsigned int v156;
  int v157;
  int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  int v170;
  unsigned int v171;
  int v172;
  int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  unint64_t v177;
  int v178;
  int v179;
  int v180;
  unsigned int v181;
  int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  unsigned int v195;
  unsigned int v196;
  int v197;
  int v198;
  unsigned int v199;
  int v200;
  unsigned int v201;
  int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  int v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  int v230;
  int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  uint64_t v236;
  unint64_t v237;
  int v238;
  unsigned int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  int v244;
  unsigned int v245;
  unsigned int v246;
  int v247;
  unsigned int v248;
  unsigned int v249;
  int v250;
  __int16 v251;
  __int16 v252;
  int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  int v274;
  int v275;
  unsigned int v276;
  int v277;
  char *v278;
  char *v279;
  char *v280;
  int v281;
  unsigned int v282;
  int v283;
  char *v284;
  int v285;
  unsigned int v286;
  unsigned int v287;
  int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  int v292;
  int v293;
  int v294;
  unsigned int v295;
  unsigned int v296;
  int v297;
  unsigned int v298;
  int v299;
  unint64_t v300;
  int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  uint64_t v309;
  char *v310;
  unsigned int v311;
  uint64_t v312;
  char *v313;
  char *v314;
  char *v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  int v320;
  unsigned int v321;
  uint64_t v322;
  char v323;
  char v324;
  unsigned int v325;
  int v327;
  int v328;
  int v329;
  _BYTE *v330;
  uint64_t v331;

  v331 = v1;
  v6 = v2;
  v7 = *(_QWORD *)(v5 + 8 * (v2 ^ 0x40AF)) - 1258369366;
  v8 = *(_BYTE *)(v7 + (v4[10] ^ 0xABLL)) ^ v4[10];
  v330 = v3;
  v9 = *(_QWORD *)(v5 + 8 * (int)(v2 & 0xB0769F4C)) - 930644894;
  v10 = ((((v8 ^ 0x99) - ((v2 - 20137) & (2 * (v8 ^ 0x99)))) << 8) - 1841536512) ^ 0x923C6200;
  v11 = v10 - ((2 * v10) & 0x62EBF600);
  v12 = v6;
  v13 = v5;
  v14 = *(_QWORD *)(v5 + 8 * (v6 ^ 0x436F)) - 594027926;
  v15 = *(unsigned __int8 *)(v14 + (v4[7] ^ 2));
  v16 = v4[4];
  v17 = ((v16 & 0xED ^ 0xFFFFFFCC) - ((2 * (v16 & 0xED ^ 0xFFFFFFCC)) & 0xFFFFFF98) - 34) ^ 0xFFFFFFD6;
  v18 = ((((v4[12] ^ 0xA7 ^ *(unsigned __int8 *)(v9 + (v4[12] ^ 0x28)))
         - ((2 * (v4[12] ^ 0xA7 ^ *(unsigned __int8 *)(v9 + (v4[12] ^ 0x28)))) & 0xD6)) << 24)
       + 1795162112) ^ 0x6B000000;
  HIDWORD(v19) = ~v15;
  LODWORD(v19) = (v15 ^ 0xF0) << 24;
  v20 = ((~(~v15 >> 4) | 0xFFFFFFF3)
       + ((~v15 & 0xE0u) >> 5)
       + (((((((8 * v15) ^ 0xFFFFFFE0) + ~(2 * ((8 * v15) ^ 0xFFFFFFE0 ^ (8 * v15) & 8)) + 113) ^ v15) & 0xFFFFFF80) - 52) & 0xFFFFFF80)
       - 41) ^ ((v19 >> 25) - ((2 * (v19 >> 25)) & 0xFFFFFF92) + 73);
  v21 = 2
      * (((((2 * v17) | 0x60) - v17 - 48) ^ 0xB5)
       - ((2 * ((((2 * v17) | 0x60) - v17 - 48) ^ 0xB5)) & 0x170))
      + 538811248;
  HIDWORD(v19) = v20 ^ 0x75;
  LODWORD(v19) = v20 << 24;
  v327 = (v19 >> 31) - 16 * ((v19 >> 31) >> 3) + 120;
  v328 = ((2 * v21) & 0x400B2FD8 ^ 0x400B26C0) + (v21 ^ 0x4F9A6C9D);
  v22 = v16 ^ 0x34 ^ *(unsigned __int8 *)(v9 + (v16 ^ 0x66FFE5AB) + ((2 * (v16 ^ 0x40)) & 0x1D4u) - v328 + 143135472);
  v23 = (((v22 - ((2 * v22) & 0x5E)) << 24) - 1358954496) ^ 0xAF000000;
  v24 = ((v327 ^ 0x78) - ((2 * (v327 ^ 0x78)) & 0x158) - 549505108) ^ 0xDF3F37AC | (v23 - ((2 * v23) & 0xC7FFFFFF) + 1661730528) ^ 0x630BFEE0;
  v25 = v24 - ((2 * v24) & 0xF726A91C);
  v26 = *(unsigned __int8 *)(v7 + (v4[6] ^ 0xFLL)) ^ v4[6];
  v27 = *(_QWORD *)(v13 + 8 * (v12 ^ 0x4982)) - 735278307;
  v28 = ((((v26 ^ 0x7C) - ((2 * (v26 ^ 0x7C)) & 0xEC)) << 8) - 1402243584) ^ 0xAC6B7600;
  LOBYTE(v16) = *(_BYTE *)(v27 + (v4[13] ^ 0x44)) ^ v4[13];
  v29 = ((v16 & 0x80) - 100) ^ 0x25 ^ ((v16 & 0x7F ^ 0x11) - ((2 * (v16 & 0x7F ^ 0x11)) & 0x33333333) - 103);
  v30 = (((v29 - ((2 * v29) & 0x36)) << 16) + 1830486016) ^ 0x6D1B0000;
  v31 = v4[1] ^ 0x46 ^ *(unsigned __int8 *)(v27 + (v4[1] ^ 0x59));
  v32 = (((v31 - ((2 * v31) & 0xB6)) << 16) + 1817903104) ^ 0x6C5B0000;
  v33 = v32 - ((2 * v32) & 0x17E40000);
  v34 = (v30 - ((2 * v30) & 0x1FC80000) + 1340394701) ^ 0x4FE4CCCD | (v18 - ((2 * v18) & 0x92000000) + 1239077244) ^ 0x49DAD17C;
  v35 = v4[14] ^ 0xEC ^ *(unsigned __int8 *)(v7 + (v4[14] ^ 0x57));
  v36 = (((v35 - ((2 * v35) & 0xFC)) << 8) - 599622144) ^ 0xDC427E00;
  v37 = (v34 - ((2 * v34) & 0xAD2AFFB6) + 1452638171) ^ 0x56957FDB | (v36 - ((2 * v36) & 0x25A52E00) - 1831692376) ^ 0x92D297A8;
  v38 = v37 - ((2 * v37) & 0x91D537E4);
  v39 = v4[2];
  LODWORD(v7) = *(unsigned __int8 *)(v7 + (v39 ^ 0xDF));
  LODWORD(v39) = v39 ^ ((v39 ^ 7) - ((2 * (v39 ^ 7) - 122) & 0xFFFFFFCA) - 88) ^ ((v39 ^ 0x45)
                                                                                - ((2 * (v39 ^ 0x45) + 2) & 0x58)
                                                                                - 83) ^ 0x73;
  v40 = (v39 - ((2 * v39 + 4) & 0x3A) - 33) ^ v7;
  LODWORD(v7) = ((((v40 ^ 0x20) - ((2 * v40) & 0x1B2)) << 8) - 1556948736) ^ 0xA332D900;
  v41 = *v4 ^ *(unsigned __int8 *)(v9 + (*v4 ^ 0x83)) ^ 0xF8;
  v42 = (((v41 - ((2 * v41) & 0xFFFFFFE7)) << 24) - 218103808) ^ 0xF3000000;
  v43 = v4[5] ^ 0xC1 ^ *(unsigned __int8 *)(v27 + (v4[5] ^ 5));
  v44 = (v42 - ((2 * v42) & 0x38000000) + 474873657) ^ 0x1C4DFF39 | (v33 + 1274186204) ^ 0x4BF289DC;
  v45 = (((v43 - ((2 * v43) & 0xFFFFFF07)) << 16) - 1736245248) ^ 0x98830000;
  v46 = (v45 - ((2 * v45) & 0x3E620000) + 523367258) ^ 0x1F31F35A | (v25 - 74230642) ^ 0xFB93548E;
  v47 = (v46 - ((2 * v46) & 0x57679A4C) - 1414279898) ^ 0xABB3CD26 | (v28 - ((2 * v28) & 0x38EBB400) + 1551227533) ^ 0x5C75DA8D;
  v48 = v4[8];
  LODWORD(v9) = *(unsigned __int8 *)(v9 + (v48 ^ 0x46));
  v49 = v47 - ((2 * v47) & 0x34F28672) + 444154681;
  v50 = (v48 ^ 0x61 ^ v9) + 1;
  LODWORD(v48) = v48 ^ 0xFFFFFFBB;
  v51 = v48 + (v50 ^ 0xFFFFFFDE) + ((2 * v50) & 0xFFFFFFBC) + 34;
  LODWORD(v9) = (v9 ^ ((v9 ^ 0xFFFFFFDA) - ((2 * (v9 ^ 0xFFFFFFDA) + 2) & 0x50) - 87) ^ 0xFFFFFFAA ^ (v51 + (~(2 * v51) | 0xFFFFFFB1) + 40))
              + v48;
  LODWORD(v9) = (v9 ^ 0xBF) + 2 * (v9 & 0x3F) + 65;
  LODWORD(v9) = ((((_DWORD)v9 - ((2 * (_DWORD)v9) & 0x90)) << 24) + 1207959552) ^ 0x48000000;
  v52 = (v9 - ((2 * v9) & 0x10000000) - 2009689343) ^ 0x88369301 | (v11 + 829815757) ^ 0x3175FBCD;
  LODWORD(v48) = v52 - ((2 * v52) & 0x89B92C34);
  v53 = *(unsigned __int8 *)(v14 + (v4[3] ^ 0xB2));
  LODWORD(v9) = v53 ^ (v53 >> 4) ^ ((v53 >> 7) | 0x2A);
  v54 = (v44 - ((2 * v44) & 0x402872B0) - 1609287336) ^ 0xA0143958 | ((v9 ^ 0xD5)
                                                                    - ((2 * (v9 ^ 0xD5)) & 0x8C)
                                                                    + 2092994118) ^ 0x7CC08E46;
  LODWORD(v7) = (v54 - ((2 * v54) & 0x61016000) + 813740032) ^ 0x3080B000 | (v7 - ((2 * v7) & 0x3AB64A00) - 1654971024) ^ 0x9D5B2570;
  v55 = v7 - ((2 * v7) & 0xCAF288F6) + 1702446203;
  LODWORD(v27) = v4[9] ^ 0xA4 ^ *(unsigned __int8 *)(v27 + (v4[9] ^ 0x79));
  v56 = ((((_DWORD)v27 - ((2 * (_DWORD)v27) & 0x28)) << 16) - 787218432) ^ 0xD1140000;
  LODWORD(v27) = *(unsigned __int8 *)(v14 + (v4[11] ^ 0xE2));
  LODWORD(v14) = *(unsigned __int8 *)(v14 + (v4[15] ^ 7));
  v57 = v27 ^ (v27 >> 4) ^ ((v27 >> 7) | 0xFFFFFFC4);
  v58 = (v48 + 1155307034) ^ 0x44DC961A | (v56 - ((2 * v56) & 0x61080000) + 1887725908) ^ 0x70846954;
  v59 = (v58 - ((2 * v58) & 0x1499B59A) - 1974674739) ^ 0x8A4CDACD | ((~(2 * (v57 ^ 0x3B)) | 0xFFFFFFCD)
                                                                    + (v57 ^ 0x3B)
                                                                    - 1638806758) ^ 0x9E51CB19;
  LODWORD(v39) = v59 - ((2 * v59) & 0x6CF98F2A) - 1233336427;
  v60 = (v38 + 1223334898) ^ 0x48EA9BF2 | ((((v14 >> 7) | 0xE) ^ (v14 >> 4))
                                         - 2 * ((((v14 >> 7) | 0xE) ^ (v14 >> 4)) & 7)
                                         - 2019805193) ^ 0x879C37F7;
  LODWORD(v14) = (v60 - ((2 * v60) & 0xE38B1FCA) + 1908772837) ^ ((v14 ^ 0xF1)
                                                                + 955357881
                                                                + (~(2 * (v14 ^ 0xF1)) | 0xFFFFFE8F));
  LODWORD(v27) = (((2 * (BYTE2(v49) ^ 0x3E882735)) | 0xC2C92746) - (BYTE2(v49) ^ 0x3E882735) + 513502301) ^ 0xDDEEA03A;
  v61 = (((2 * HIBYTE(v55)) ^ 0x1DC) + ~(2 * (((2 * HIBYTE(v55)) ^ 0x1DC) & 0xEA ^ (2 * HIBYTE(v55)) & 2)) + 233) & 0x1C6;
  v62 = (HIBYTE(v55) ^ 0x6B6E920D) + (v61 ^ 0xA779D73F) + ((2 * v61) ^ 0x180) + 1485187073;
  v63 = *(_QWORD *)(v13 + 8 * (v12 - 19364)) - 826227323;
  v64 = ((2 * v14) & 0xCC ^ 0x44) + (v14 ^ 0x7FFABFD5);
  v65 = v64 - ((2 * v64 - 1740456252) & 0x881E881C) + 1091609456;
  v66 = *(_QWORD *)(v13 + 8 * (v12 - 16845)) - 142327666;
  v329 = v12;
  v67 = v13;
  v68 = *(_QWORD *)(v13 + 8 * (v12 - 18540)) - 2022803123;
  LODWORD(v13) = ((v14 & 0xC ^ 0xEE2B8C09) + (v14 & 0xF3) - 1) ^ 0xE62B884E;
  v69 = *(_QWORD *)(v67 + 8 * (v12 - 18032)) - 1613783343;
  v70 = *(_DWORD *)(v66 + 4 * (HIBYTE(v55) ^ 0x61)) ^ *(_DWORD *)(v68 + 4 * (v8 ^ 0x49u)) ^ *(_DWORD *)(v69 + 4 * (((v13 | 0x4092DDF6) - (v13 | 0xBF6D2209) - 1083366903) ^ 0x4892D923)) ^ v65 ^ *(_DWORD *)(v63 + 4 * (((BYTE2(v49) ^ 0x548604C7 | 0x95779A03) - (BYTE2(v49) ^ 0x548604C7 | 0x6A8865FC) + 1787323900) ^ 0xC1F19E36)) ^ (((2 * v27) | 0x81704AB6) - v27 - 1085810011) ^ (v62 - ((2 * v62) & 0x100801E4) + 403007730);
  v71 = ((WORD1(v39) & 0x72 ^ 0xEA3E3D13) + (WORD1(v39) & 0x8D) - 1) ^ 0xAE2EBBF7;
  v72 = ((2 * v71) & 0x8200E92) - v71 + 1529538742;
  LODWORD(v13) = (v72 ^ 0x4C4DB0A6) + 1;
  v72 ^= 0x1F3A6ECEu;
  v73 = v72 + (v13 ^ 0xDBFFFFE7) + ((2 * v13) & 0xB7FFFFCE) + 603979801;
  v74 = ((2 * v55) & 0x146 ^ 0x140) + (v55 ^ 0x1DBFEB57);
  v75 = ((v73 - ((2 * v73) & 0x93751B1A) - 910520947) ^ 0x36457273) + v72;
  LODWORD(v48) = (BYTE2(v14) ^ 0x26) - 2 * ((BYTE2(v14) ^ 0x26) & 0x3F) - 801276865;
  v76 = (v48 & 0x80055FA5 ^ 0x2A800380) + (v48 ^ 0x906D7C7D) - ((v48 ^ 0x906D7C7D) & 0x5007A5);
  LODWORD(v9) = *(_DWORD *)(v68 + 4 * (BYTE1(v14) ^ 0xEBu)) ^ *(_DWORD *)(v66 + 4 * (HIBYTE(v49) ^ 0x5F)) ^ *(_DWORD *)(v69 + 4 * (v9 ^ 0x7A)) ^ ((HIBYTE(v49) ^ 0xD0) - 61529494 + ((2 * (HIBYTE(v49) ^ 0xD0) + 454) & 0x30C ^ 0xFF32FBFF)) ^ *(_DWORD *)(v63 + 4 * (((WORD1(v39) & 0x60) + (BYTE2(v39) ^ 0x6D) - ((BYTE2(v39) ^ 0x6D) & 0x60) + 14080) ^ 0x3767)) ^ (v74 - ((2 * v74 + 1555588682) & 0x90305EFE) - 1464524124) ^ (v75 - ((2 * v75) & 0xD44576FE) + 1780661119);
  v77 = ((2 * v49) ^ 0x12C) + (v49 ^ 0xF47EF969);
  v78 = v63;
  v79 = v66;
  v80 = *(_DWORD *)(v66 + 4 * (BYTE3(v39) ^ 0x3C)) ^ *(_DWORD *)(v63
                                                                 + 4
                                                                 * (((WORD1(v14) & 0x27 ^ 0xF26)
                                                                   + (WORD1(v14) & 0xD8 ^ 9)
                                                                   - 1) ^ 0xFBD)) ^ *(_DWORD *)(v68
                                                                                              + 4
                                                                                              * (v40 ^ 0x70u)) ^ *(_DWORD *)(v69 + 4 * (((v19 >> 31) - 16 * ((v19 >> 31) >> 3) + 120) ^ 0xF7u)) ^ v76 ^ ((BYTE3(v39) ^ 0xB3) + 348532103 + ((2 * (BYTE3(v39) ^ 0xB3) + 454) & 0x146 ^ 0xAD72DBFF)) ^ (v77 - ((2 * v77 + 255478162) & 0x18305AA4) + 1941295643);
  v81 = ((2 * v39) & 0x1EE ^ 0x1A8) + (v39 ^ 0xE7CFDA2B);
  v82 = *(_DWORD *)(v66 + 4 * (BYTE3(v14) ^ 0x32)) ^ BYTE2(v55) ^ *(_DWORD *)(v63
                                                                              + 4
                                                                              * ((((2 * (BYTE2(v55) ^ 0x30464060)) | 0xEE5546B4)
                                                                                - (BYTE2(v55) ^ 0x30464060)
                                                                                - 1999283034) ^ 0x476CE3ED)) ^ *(_DWORD *)(v68 + 4 * (v26 ^ 0xABu)) ^ *(_DWORD *)(v69 + 4 * (v57 ^ 0x52u)) ^ ((BYTE3(v14) ^ 0xBD) + 704317924 + ((2 * (BYTE3(v14) ^ 0xBD) + 454) & 0x200 ^ 0xABE7DBFF)) ^ (v81 - 1443020196 + ((2 * v81 + 1954) & 0x7D14 ^ 0x77DFFFFF));
  v83 = ((((v70 ^ 0x19C8D2B2u) >> ((v328 + 19) & 0x18))
        - ((2 * ((v70 ^ 0x19C8D2B2u) >> ((v328 + 19) & 0x18))) & 0xEC6A9772)
        + 1983204281) ^ 0x76354BB9) >> ((v328 + 19) & 0x18 ^ 0x18);
  v84 = v83 - ((2 * v83) & 0xA1BEE77E);
  v85 = ((((v9 ^ 0xEF2661BF) >> (((BYTE3(v14) ^ 0xBD) - 29) & 0x18))
        - ((2 * ((v9 ^ 0xEF2661BF) >> (((BYTE3(v14) ^ 0xBD) - 29) & 0x18))) & 0xE08793F2)
        - 263992839) ^ 0xF043C9F9) >> (((BYTE3(v14) ^ 0xBD) - 29) & 0x18 ^ 0x18);
  LODWORD(v27) = (v84 - 65);
  v86 = (v27 ^ 0x7FBFDD01) + ((1581324416 - 2 * v84) & 0x17C);
  LODWORD(v14) = v86 - 2029964180 + ((2 * v86 + 2634) & 0xE8C ^ 0xE97BDFFF);
  v87 = BYTE2(v9);
  v88 = (v27 ^ 0xC7 | 0xC061B1B) - (v27 ^ 0xC7 | 0xF3F9E4E4) - 201726748;
  LODWORD(v27) = ((v88 & 0xC041CBA ^ 0x4206CB1) + (v88 & 0x20345) - 1) ^ 0x826775C;
  LODWORD(v66) = ((2 * v82) & 0x1C6 ^ 0x186) + (v82 ^ 0x7D4BDB24);
  v89 = (v85 - ((2 * v85) & 0xF0) + 120);
  v90 = ((2 * v89) ^ 0xF0)
      + (v89 ^ 0x3FF77F87)
      - ((2 * (((2 * v89) ^ 0xF0) + (v89 ^ 0x3FF77F87)) + 1458447816) & 0xD6D5E35E)
      + 728892563;
  v91 = ((2 * (v89 ^ 0x8E)) & 0xAE) - (v89 ^ 0x8E) - 2043206744;
  v92 = *(_DWORD *)(v68 + 4 * (BYTE1(v80) ^ 0x11u)) ^ *(_DWORD *)(v63
                                                                  + 4
                                                                  * (((BYTE2(v9) ^ 0x40D30277)
                                                                    + (WORD1(v9) & 0x7F ^ 0x98288C08)
                                                                    - ((BYTE2(v9) ^ 0x40D30277) & 0x4093027F)) ^ 0x98688CD9)) ^ *(_DWORD *)(v69 + 4 * ((((2 * (v82 ^ 0xA2920263)) | 0x499825C0) - (v82 ^ 0xA2920263) + 1530129696) ^ 0x65E1064)) ^ v14 ^ (v66 + 1705539598 + ((2 * v66 + 1482) & 0x6A50 ^ 0xF7CFFFFF)) ^ *(_DWORD *)(v79 + 4 * v27);
  LODWORD(v39) = ((2 * v70) & 0xEA ^ 0x60) + (v70 ^ 0x7F6D77C7);
  LODWORD(v63) = (BYTE2(v82) ^ 0xC1) + (HIWORD(v82) & 0x42 ^ 0x37606902) - ((BYTE2(v82) ^ 0xC1) & 0x42);
  LODWORD(v66) = ((v70 ^ 0x1F75C6DD)
                + (v70 & 0xFD ^ 0x40022820)
                - ((v70 ^ 0x1F75C6DD) & 0xF70C0FD)) ^ 0x404E22F2;
  v93 = *(_DWORD *)(v78 + 4 * ((((2 * (BYTE2(v80) ^ 0xBB)) & 0x104) - (BYTE2(v80) ^ 0xBB) + 1946563965) ^ 0x740635EBu)) ^ *(_DWORD *)(v68 + 4 * (((BYTE1(v82) ^ 0xA2020B7 | 0x4ECBACC1) - (BYTE1(v82) ^ 0xA2020B7 | 0xB134533E) - 1321970882) ^ 0x44EB8CC6)) ^ *(_DWORD *)(v69 + 4 * (((v66 | 0x7880824F) - (v66 | 0x877F7DB0) - 2021687888) ^ 0x68C98E0F)) ^ (v39 + 1190555045 + ((2 * v39 + 3750) & 0xCA2 ^ 0x6FF7FFFF)) ^ (((2 * (BYTE2(v80) ^ 0xC7)) | 0xC516C348) - (BYTE2(v80) ^ 0xC7) + 494181980) ^ v90 ^ *(_DWORD *)(v79 + 4 * (((v91 & 0x20012C9 ^ 0x58000289) + (v91 ^ 0x87909466) - ((v91 ^ 0x87909466) & 0x12192C9)) ^ 0x5A86257E));
  LODWORD(v27) = (v63 & 0xD22 ^ 0xA01123) + (v63 & 0x2DD ^ 0x82406040) - 1;
  LODWORD(v67) = *(_DWORD *)(v78 + 4 * (v27 ^ 0x82E078D1));
  LODWORD(v39) = (BYTE1(v70) ^ 0x97 | 0xDC147A1) - (BYTE1(v70) ^ 0x97 | 0xF23EB85E) - 230770594;
  LODWORD(v27) = (((2 * (v67 & 0xD1387661 ^ 0x114A1028)) | 0x1228604E) - (v67 & 0xD1387661 ^ 0x114A1028) - 152317991) ^ ((v27 & 0x2061 ^ 0x888F40A9) - ((2 * (v27 & 0x2061 ^ 0x888F40A9)) & 0x144190) + 840574158) ^ 0x72C34449 | ((v67 & 0x2EC7899E ^ 0x841089E) - ((2 * (v67 & 0x2EC7899E ^ 0x841089E)) & 0x4400133C) - 1308087809) ^ v27 & 0x19E ^ 0xB64828E1;
  LODWORD(v67) = (~(2 * v9) & 0x7C) + (v9 ^ 0xFFEDB581);
  LODWORD(v14) = ((v9 ^ 0x5F) + (v9 & 0x37 ^ 0xD0216C20) - ((v9 ^ 0x5F) & 0x37)) ^ 0xD8254527;
  LODWORD(v63) = (((2 * (BYTE2(v70) ^ 0x61)) | 0x350A1724) - (BYTE2(v70) ^ 0x61) - 444926866) ^ 0x3E402B33;
  v82 >>= 24;
  v94 = *(_DWORD *)(v68 + 4 * (((v39 & 0x5400F4B ^ 0xB242064A) + (v39 & 0x88140B4 ^ 0x8814001) - 1) ^ 0xB70201B0)) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v80) ^ 6)) ^ ((HIBYTE(v80) ^ 0x89) - ((2 * (HIBYTE(v80) ^ 0x89) - 690149946) & 0x8614279E) + 1048161970) ^ (v27 - ((2 * v27) & 0x7511C58A) - 1165434171) ^ (v67 + 1920572092 + ((2 * v67 + 21268) & 0x6262 ^ 0xF7EFFFFF)) ^ *(_DWORD *)(v69 + 4 * ((((2 * (_DWORD)v14) | 0x29C74346) - (_DWORD)v14 + 1797021277) ^ 0x9CE78873));
  LODWORD(v27) = ((BYTE1(v9) ^ 0xD2) - ((v9 >> 7) & 0x50) + 1035537960) ^ 0x38F10F2A;
  LODWORD(v14) = ((2 * v80) & 0x126 ^ 0x100) + (v80 ^ 0x6FCFFD7F);
  LODWORD(v67) = ((v80 ^ 0x5E) - ((2 * (v80 ^ 0x5E)) & 0x1B4) - 636744742) ^ 0x5A194ED8;
  LODWORD(v9) = *(_DWORD *)(v79 + 4 * (v82 ^ 0xD6)) ^ *(_DWORD *)(v78
                                                                  + 4
                                                                  * ((((2 * (BYTE2(v70) ^ 0x45)) & 0xB6)
                                                                    - (BYTE2(v70) ^ 0x45)
                                                                    + 276713892) ^ 0x107E51DEu)) ^ *(_DWORD *)(v69 + 4 * ((((2 * (_DWORD)v67) & 0x93AA) - (_DWORD)v67 - 1185049046) ^ 0x3948D3BAu)) ^ ((v63 | 0xBD9B7B96) - (v63 | 0x42648469) + 1113883753) ^ (v14 - 1079089313 + ((2 * v14 + 618) & 0xC52 ^ 0x7FFFFFFF)) ^ ((v82 ^ 0x59) - 1757272148 + ((2 * (v82 ^ 0x59) + 454) & 0x190 ^ 0xA97ADFFF)) ^ *(_DWORD *)(v68 + 4 * ((((2 * (_DWORD)v27) | 0xB90005C8) - v27 - 1551893220) ^ 0x59C8034B));
  v95 = (v94 ^ 0xB8B05F61) - 1030444251;
  v96 = ((2 * v94) ^ 0x7160BEC2) - 2 * (((2 * v94) ^ 0x7160BEC2) & 0xCA6B93E ^ (2 * v94) & 8) - 1935230666;
  v97 = (v95 ^ 0xEFB7DF7F)
      + ((2 * v95) & 0xDF6FBEFE)
      + (v96 & 0x8529564A ^ 0x66B01105)
      + ((2 * v96) & 0xA52AC90 ^ 0xF7BFDFFF)
      + 1;
  v98 = v97 - ((2 * v97 + 1534082804) & 0xBE3F06C0) + 215458522;
  v99 = (((HIBYTE(v92) ^ 0xF1) + 1802408675) ^ 0x7A37EAAF)
      - 2050484911
      + ((2 * ((HIBYTE(v92) ^ 0xF1) + 1802408675)) & 0xD44D055E);
  v100 = *(_DWORD *)(v79 + 4 * (HIBYTE(v92) ^ 0x7E)) ^ 0x16B3C92B;
  LODWORD(v14) = (v99 + v100) ^ 0xFFBB75F3;
  LODWORD(v27) = (2 * (v99 + v100)) & 0xFF76EBE6;
  v101 = 2 * ((v99 & v100) - ((2 * (v99 & v100)) & 0x2566C46)) + 39218246;
  v102 = v14 + v27 + (v101 ^ 0x80066AC5) + ((2 * v101) & 0xFB5FF2F8 ^ 0xFFF32F77) + 1;
  LODWORD(v27) = ((2 * v9) & 0x1EE ^ 0x18A) + (v9 ^ 0xFF6A7B32);
  LODWORD(v67) = *(_DWORD *)(v68 + 4 * ((((v98 >> 8) & 0x1C ^ 0xAA0EEE05) + ((v98 >> 8) & 0xE3) - 1) ^ 0xAA0EEE99));
  LODWORD(v66) = ((2 * v67) ^ 0x9B0731F6) - ((2 * ((2 * v67) ^ 0x9B0731F6)) & 0x34CFF894) - 630719413;
  LODWORD(v67) = (((v67 ^ 0x4D8398FB) - 1351830141) ^ 0xDF9EB3FB)
               + ((2 * ((v67 ^ 0x4D8398FB) - 1351830141)) & 0xBF3D67F6)
               + (v66 & 0x5ED96B06 ^ 0xDA415813)
               + ((2 * v66) & 0xBDB2960C ^ 0x4B7D6FFB);
  LODWORD(v67) = *(_DWORD *)(v69
                           + 4
                           * ((((2 * (v9 ^ 0x98)) | 0xE7CFF00C)
                             - (v9 ^ 0x98)
                             - 1944582150) ^ 0x73E7F87B)) ^ *(_DWORD *)(v78
                                                                      + 4
                                                                      * (((BYTE2(v93) ^ 0x132190A4)
                                                                        - ((2 * (BYTE2(v93) ^ 0x132190A4)) & 0x200201B2)
                                                                        + 1417881305) ^ 0x47A2B6ECu)) ^ (v27 - ((2 * v27 - 1721547358) & 0x8838451E) + 571557216) ^ (v102 - ((2 * v102 + 468256532) & 0x152DA67E) - 2004134199) ^ (v67 + 1 - 2 * ((v67 + 543235061) & 0x76C250BB ^ (v67 + 1) & 2) - 1759286099);
  LODWORD(v27) = ((HIWORD(v98) & 7 ^ 0x55AD5003) + (HIWORD(v98) & 0xF8 ^ 0xD9) - 1) ^ 0x15DDC807;
  LODWORD(v14) = (((2 * (BYTE2(v98) ^ 0x5E)) | 0x5834DCA4) - (BYTE2(v98) ^ 0x5E) + 1407553966) ^ 0x291B6E53;
  LODWORD(v66) = ((BYTE1(v9) ^ 0xBC | 0x604E31C8) - (BYTE1(v9) ^ 0xBC | 0x9FB1CE37) - 1615737289) ^ 0x602C99DD;
  v103 = *(_DWORD *)(v78 + 4 * ((((2 * (_DWORD)v14) & 0x86FEEED2) - (_DWORD)v14 + 1015056534) ^ 0xB9818821)) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v93) ^ 0x91)) ^ ((HIBYTE(v93) ^ 0x1E) + 523840201 + ((2 * (HIBYTE(v93) ^ 0x1E) + 454) & 0x3CA ^ 0xB96ADBFF)) ^ ((v27 | 0x16177328) - (v27 | 0xE9E88CD7) - 370635561);
  v104 = *(_DWORD *)(v68 + 4 * ((((2 * (_DWORD)v66) | 0xC6CD3D04) - (_DWORD)v66 + 479814014) ^ 0xE3043690));
  LODWORD(v39) = (v87 ^ v92);
  LODWORD(v66) = ((2 * (v87 ^ v92)) & 0x1F2 ^ 0x140) + (v39 ^ 0x6F8C6D5F);
  v105 = v103 ^ 0x2F179CA2;
  v106 = (v104 ^ 0x32074E25 ^ v103) + (v103 ^ 0x2F179CA2) + 1;
  LODWORD(v14) = ((v87 ^ v92) & 0xB0 ^ 0xB33429B0) - ((v87 ^ v92) & 0xB0) + (v39 ^ 5);
  v107 = (v104 ^ ((v104 ^ 0x1D10D287) - ((2 * (v104 ^ 0x1D10D287) + 2) & 0x98A93C56) - 866869716) ^ 0xA623CD34 ^ (v106 - ((2 * v106) & 0x1130FCCE) - 2003272089))
       + v105;
  v108 = (v66 - 1842162020 + ((2 * v66 + 24990) & 0x4B98 ^ 0xF7FFFFFF)) ^ *(_DWORD *)(v69
                                                                                    + 4
                                                                                    * (((v14 & 0x210420A7 ^ 0xCC00083)
                                                                                      + (v14 ^ 0xB33EA834)
                                                                                      - ((v14 ^ 0xB33EA834) & 0x800A7)) ^ 0x2DC6A1A0)) ^ (v107 - ((2 * v107) & 0x848C4DD2) - 1035589911);
  v109 = (2 * ((BYTE2(v9) ^ 0xA2) & 0xF) - (BYTE2(v9) ^ 0xA2) + 2083988720) ^ 0x3D3E6B28;
  LODWORD(v14) = ((2 * v93) & 0x1DC ^ 0x50) + (v93 ^ 0x1F5D7BC6);
  v110 = *(_DWORD *)(v79 + 4 * (HIBYTE(v98) ^ 0x50)) ^ *(_DWORD *)(v78
                                                                   + 4
                                                                   * ((((2 * v109) | 0x7DAE4CFC) - v109 + 1093196162) ^ 0xFFDE69A7)) ^ *(_DWORD *)(v68 + 4 * (((BYTE1(v92) ^ 0xA6840770) + ((v92 >> 8) & 0x14 ^ 0x5162B804) - ((BYTE1(v92) ^ 0xA6840770) & 0x80800514)) ^ 0x7766BAD9)) ^ *(_DWORD *)(v69 + 4 * (v93 ^ 8u)) ^ ((WORD1(v9) & 0xCB ^ 0xB729C0) + (WORD1(v9) & 0x34 ^ 0x15) - 1) & 0x820BFF ^ (v14 + 1219626869 + ((2 * ((v14 + 8922) & 0x249B ^ (v93 | 0x7FFFFFFE))) ^ 0x10200003)) ^ ((HIBYTE(v98) ^ 0xDF) + 498701516 + ((2 * (HIBYTE(v98) ^ 0xDF) + 454) & 0x3D0 ^ 0xBB6BFFFF));
  v111 = (BYTE2(v92) ^ 0x66 | 0x5EF6B042) - (BYTE2(v92) ^ 0x66 | 0xA1094FBD) - 1593225283;
  LODWORD(v14) = (v111 ^ 0xD816E01) + 1;
  v111 ^= 0x5EF6B069u;
  LODWORD(v27) = v111 + (v14 ^ 0xD6FFF76F) + ((2 * v14) & 0xADFFEEDE) + 687868049;
  v112 = ((v27 - ((2 * v27) & 0x978B5CD2) - 876237207) ^ 0x343A5197) + v111;
  LODWORD(v14) = ((2 * v98) & 0x1AE ^ 0x80) + (v98 ^ 0x5D35EFB7);
  v113 = *(_DWORD *)(v79 + 4 * (BYTE3(v9) ^ 0xD3)) ^ *(_DWORD *)(v78
                                                                 + 4
                                                                 * (((BYTE2(v92) ^ 0x20)
                                                                   - ((2 * (BYTE2(v92) ^ 0x20)) & 0x1D8)
                                                                   + 748) ^ 0x276u)) ^ *(_DWORD *)(v68
                                                                                                 + 4
                                                                                                 * ((((2 * (BYTE1(v93) ^ 0x10090059)) | 0xB4509EB6) - (BYTE1(v93) ^ 0x10090059) + 634892453) ^ 0xCA214F26)) ^ ((BYTE3(v9) ^ 0x5C) + 1621066681 + ((2 * (BYTE3(v9) ^ 0x5C) + 454) & 0x1AA ^ 0x3DBEDFFF)) ^ (v112 - 2117812086 + (~(2 * v112) | 0xFC767EED)) ^ 0x96870542 ^ *(_DWORD *)(v69 + 4 * ((((2 * (v98 ^ 0xFB19B133)) | 0x6AEABA60) - (v98 ^ 0xFB19B133) + 1250599632) ^ 0x4E6CEC43));
  v114 = ((v113 & 0xEAE1C613 ^ 0x7421CB31 | 0x6740DF18) - (v113 & 0xEAE1C613 ^ 0x7421CB31 | 0x98BF20E7) - 1732304665) ^ 0x73E19639 | v113 & 0x151E39EC ^ 0x50A2844;
  v115 = (v14 + 135219659 + ((2 * v14 + 7650) & 0x35B2 ^ 0xEFEFFFFF)) ^ (v114 - ((2 * v114) & 0x45088A6) + 36193363);
  v116 = v67 ^ ((HIWORD(v93) & 0x53) + (HIWORD(v93) & 0xAC ^ 0x45B205) - 1) & 0xFFC00FFF;
  LODWORD(v14) = BYTE3(v67);
  v117 = ((v67 >> 22) & 0x18C) - 2 * BYTE3(v67) - 455;
  LODWORD(v67) = v117 & 0x1C6 ^ 0x4FECEFA7;
  v118 = (2 * v117) & 0x30C;
  v119 = (HIWORD(v108) & 0x68 ^ 0x360B2072 | 0x44E28788) - (HIWORD(v108) & 0x68 ^ 0x360B2072 | 0xBB1D7877) - 1155696521;
  v120 = (v119 & 0x32C90D40 ^ 0x444845) + (v119 ^ 0xBA9BA71A) - ((v119 ^ 0xBA9BA71A) & 0x500D40);
  v121 = (HIWORD(v108) & 5 ^ 0x7D9D9001) + (HIWORD(v108) & 0x92 ^ 0x13) - 1;
  LODWORD(v39) = (v14 ^ 0x6B6E92E3)
               + v118
               + v67
               - 1340927911
               - ((2 * ((v14 ^ 0x6B6E92E3) + v118 + v67 - 1340927911)) & 0x945400B6)
               + 1245339739;
  LODWORD(v67) = (v115 ^ 0x506458C)
               + (v115 & 0x62 ^ 0x9A900262)
               - ((v115 ^ 0x506458C) & 0x60562);
  LODWORD(v9) = (v67 ^ 0x9F9042E3) - ((2 * (v67 ^ 0x9F9042E3) + 137903504) & 0xE75255A) + 1398190453;
  v122 = ((2 * HIBYTE(v108)) ^ 0x17A) - ((2 * ((2 * HIBYTE(v108)) ^ 0x17A)) & 0xCCCCCCCC) + 614;
  v123 = (HIBYTE(v108) ^ 0x6B6E925E) + (v122 & 0x1C6 ^ 0xFE7B7CAB) + ((2 * v122) & 0x188 ^ 0x88) + 25461523;
  LODWORD(v63) = v67 ^ 0x9F9042C3;
  v124 = v79;
  LODWORD(v67) = *(_DWORD *)(v79 + 4 * (HIBYTE(v108) ^ 0x32));
  v125 = (v67 & 0xFFEFFFFF ^ 0x2D6AE057 | 0x9E8B0E88) - (v67 & 0xFFEFFFFF ^ 0x2D6AE057 | 0x6174F177) + 1635053943;
  v126 = (v123 ^ 0xE39CF3DE) + 476253218 + ((2 * v123) & 0xC61927BC);
  LODWORD(v79) = (v126 | ~(_DWORD)v67 & 0x100000) - ((2 * v126) & 0x6B96E66E) - 1244957897;
  LODWORD(v67) = ((BYTE2(v110) ^ 0xBD) + (HIWORD(v110) & 0x43 ^ 0x5EFFFA42) - ((BYTE2(v110) ^ 0xBD) & 0x43)) ^ 0xCA7DF350;
  v127 = v68;
  LODWORD(v14) = *(_DWORD *)(v124 + 4 * (v14 ^ 0x8F)) ^ *(_DWORD *)(v68
                                                                                  + 4
                                                                                  * (((BYTE1(v110) ^ 0xE2)
                                                                                    - ((2 * (BYTE1(v110) ^ 0xE2)) & 0xFFFFFFF7)
                                                                                    + 25595) ^ 0x636A)) ^ *(_DWORD *)(v69 + 4 * v63) ^ v39 ^ v9;
  v128 = v78;
  v129 = *(_DWORD *)(v78
                   + 4
                   * (((BYTE2(v108) ^ 0x84) + (HIWORD(v108) & 0xA7 ^ 0x8FAC7723) - ((BYTE2(v108) ^ 0x84) & 0xA7)) ^ 0x8FAC7734)) ^ v14 ^ ((v121 & 0x3C14154E ^ 0x2200406) + (v121 ^ 0x3C9D9179) - ((v121 ^ 0x3C9D9179) & 0x4100154E)) ^ ((v120 & 0x5377DE68 ^ 0xFEAF6DD7) - ((2 * (v120 & 0x5377DE68 ^ 0xFEAF6DD7)) & 0x26A8BC50) + 315382950);
  v130 = ((2 * v116) & 0x15C ^ 0x40) + (v116 ^ 0x5D7DFECE);
  LODWORD(v63) = *(_DWORD *)(v127 + 4 * (BYTE1(v115) ^ 0xCDu)) ^ *(_DWORD *)(v78
                                                                             + 4
                                                                             * (((v67 | 0xDEF9FD2A)
                                                                               - (v67 | 0x210602D5)
                                                                               + 554042069) ^ 0x4A7BF459)) ^ *(_DWORD *)(v69 + 4 * (v116 ^ 0x40u)) ^ (v130 + 953848744 + ((2 * v130 + 802868) & 0x8E71A ^ 0x6FCFFFFF)) ^ v125 ^ v79;
  v131 = ((BYTE2(v115) ^ 0xCE) + (HIWORD(v115) & 0x2B ^ 0x758B5921) - ((BYTE2(v115) ^ 0xCE) & 0x2B)) ^ 0xFDCA5D0B;
  v132 = ((2 * v131) & 0x800CD4) - v131 - 1121351275;
  v133 = ((BYTE2(v115) ^ 0xB7 | 0x8DDFAD1B) - (BYTE2(v115) ^ 0xB7 | 0x722052E4) + 1914720996) ^ 0xAD5DAF52;
  LODWORD(v39) = (((2 * v133) & 0x2A763A58) - v133 - 356195629) ^ 0xCA46E0A4;
  LODWORD(v66) = ((2 * v108) & 0x1D6 ^ 0x1D2) + (v108 ^ 0x7F87DF02);
  v134 = ((BYTE1(v116) ^ 0x1114C9D8) - ((2 * (BYTE1(v116) ^ 0x1114C9D8)) & 0x2083E2) + 9520625) ^ 0x11858C88;
  v135 = ((v108 ^ 0xDD) + (v108 & 0x3D ^ 0x256DB20) - ((v108 ^ 0xDD) & 0x3D)) ^ 0x22C2ABBC;
  LODWORD(v27) = (((2 * v135) & 0x4120AA38) - v135 + 1483614947) ^ 0x78FA5A76;
  v136 = BYTE2(v116);
  v137 = ((BYTE2(v116) ^ 0xC6 | 0x95056366) - (BYTE2(v116) ^ 0xC6 | 0x6AFA9C99) + 1794808985) ^ 0xB5810936;
  v138 = BYTE1(v108) ^ 0xDA;
  v139 = *(_DWORD *)(v78 + 4 * v39) ^ *(_DWORD *)(v124 + 4 * (HIBYTE(v110) ^ 0x6B)) ^ *(_DWORD *)(v127 + 4 * v134) ^ ((HIBYTE(v110) ^ 0xE4) - 1902666725 + ((2 * (HIBYTE(v110) ^ 0xE4) + 454) & 0x26E ^ 0xB9AFFFFF)) ^ v132 ^ (v66 + 1657659313 + ((2 * v66 + 32186) & 0x341A6 ^ 0xF7CFFFFF)) ^ *(_DWORD *)(v69 + 4 * v27);
  LODWORD(v14) = (((2 * (v110 ^ 0x68)) | 0x1A3911BE) - (v110 ^ 0x68) + 1927509793) ^ 0x8C1C0BDE;
  LODWORD(v27) = ((2 * v110) ^ 0x7A) + (v110 ^ 0xAB75DFC2);
  HIDWORD(v19) = BYTE2(v110) ^ 0xECFBD5 ^ v63;
  LODWORD(v19) = v63 ^ 0xC4000000;
  LODWORD(v67) = (v19 >> 24) - ((2 * (v19 >> 24)) & 0xF5D3D8EC) - 85332874;
  HIDWORD(v19) = v67 ^ 0xBD;
  LODWORD(v19) = v67 ^ 0x18FA0400;
  v140 = (v19 >> 8) - ((2 * (v19 >> 8)) & 0xAC10A670) + 1443386168;
  v141 = *(_DWORD *)(v127 + 4 * v138) ^ *(_DWORD *)(v124 + 4 * (HIBYTE(v115) ^ 0xB9)) ^ *(_DWORD *)(v69 + 4 * (((v14 | 0x3AF2FF2B) - (v14 | 0xC50D00D4) - 989003564) ^ 0x3BF27C5F)) ^ *(_DWORD *)(v78 + 4 * (((v136 ^ 0xD0) - ((2 * (v136 ^ 0xD0)) & 0x24) + 1284861202) ^ 0x4C956D87u)) ^ ((v137 | 0x2EAC9D11) - (v137 | 0xD15362EE) - 783064338) ^ (v27 - ((2 * v27 + 21790098) & 0x1828C2F2) + 1574608962) ^ ((HIBYTE(v115) ^ 0x36) - ((2 * (HIBYTE(v115) ^ 0x36) + 1457333702) & 0x42152314) - 1871091603);
  v142 = ((v141 >> 7) & 0x1BFBBEE ^ 0x13C00EE) + ((v141 >> 8) ^ 0x6B41DD80);
  v143 = ((HIWORD(v139) & 0x70 ^ 0x79B92C41) + (HIWORD(v139) & 0x8F) - 1) ^ 0x7BBD683C;
  v144 = (((2 * (v142 + 9)) & 0x15A) + ((v142 + 9) ^ 0xDABD6CAD) + 625120083) % 0xB3;
  v145 = ((2 * v144) & 0x1FA)
       + (v144 ^ 0x6EAAABFD)
       + ((2 * (v142 + (v144 ^ 0xFFFFFF60) - ((2 * v144) & 0x3E) + 169)) & 0x1DE)
       + ((v142 + (v144 ^ 0x60) - ((2 * v144) & 0x3E) - 87) ^ 0xFBB6EBEF);
  LODWORD(v27) = ((2 * v129) ^ 0x54) + (v129 ^ 0x7F997DD5);
  v146 = (((2 * (v129 ^ 0x7C)) & 0x84) - (v129 ^ 0x7C) + 1420928189) ^ 0x91222CB0;
  v147 = *(_DWORD *)(v78
                   + 4
                   * (((BYTE2(v139) ^ 0xA58D504) - ((2 * (BYTE2(v139) ^ 0xA58D504)) & 0x8020A8) - 975105964) ^ 0xCFB9C562)) ^ *(_DWORD *)(v124 + 4 * (HIBYTE(v140) ^ 0xD9)) ^ *(_DWORD *)(v69 + 4 * ((v146 - ((2 * v146) & 0x83021220) - 907986672) ^ 0xC72B16B)) ^ (((2 * v143) | 0xD4786DE6) - v143 - 1782331123) ^ (v27 - ((2 * v27 - 1727708782) & 0x80304A1A) - 1115781674) ^ ((HIBYTE(v140) ^ 0x56) + 1528189910 + ((2 * (HIBYTE(v140) ^ 0x56) + 454) & 0x1E4 ^ 0x29B2FFFF)) ^ *(_DWORD *)(v127 + 4 * ((v145 - ((2 * v145 + 725405736) & 0x2ECB3CB2) + 755238509) ^ 0x97659E47));
  v148 = ((v147 >> 15) & 0x1BCE2 ^ 0x134E0) + (HIWORD(v147) ^ 0xFD764583);
  v149 = (((2 * (v148 + 143)) & 0x106)
        + ((((v147 >> 15) & 0xE2 ^ 0xE0) + (BYTE2(v147) ^ 0x83) - 113) ^ 0xFF96FF83)
        + 6881405)
       % 0xE5;
  v150 = ((2 * v149) & 0x1BE) + (v149 ^ 0xCCFBFFDF) == -855900193;
  v151 = (((2 * (BYTE2(v140) ^ 0xAF)) & 0x13A) - (BYTE2(v140) ^ 0xAF) - 802986142) ^ 0x1022E766;
  LODWORD(v27) = *(_DWORD *)(v124 + 4 * (HIBYTE(v129) ^ 0xA4)) ^ ((HIBYTE(v129) ^ 0x2B)
                                                                  - 272506200
                                                                  + ((2 * (HIBYTE(v129) ^ 0x2B) + 454) & 0x388 ^ 0xFF7BFBFF)) ^ 0x92E086EF;
  LODWORD(v14) = *(_DWORD *)(v78
                           + 4
                           * ((((2 * (BYTE2(v140) ^ 0x5011809)) | 0x6E295F7A) - (BYTE2(v140) ^ 0x5011809) + 1223381059) ^ 0xB215B74B)) ^ (v151 - ((2 * v151) & 0x343DA) + 125280749) ^ 0x1B7F08C9;
  v152 = (v14 + v27) ^ 0x7FFFEF1F;
  LODWORD(v67) = (2 * (v14 + v27)) & 0xFFFFDE3E;
  LODWORD(v27) = 2 * ((v14 & v27) - ((2 * (v14 & v27)) & 0x1340F3A)) + 20188986;
  LODWORD(v27) = v152 + v67 + (v27 ^ 0xE1180F3B) + ((2 * v27) & 0x3FA7FFFC ^ 0xFDDFE18B) + 1;
  v153 = *(_DWORD *)(v69
                   + 4
                   * ((((2 * (v141 ^ 0x42200008)) & 0x8040019A)
                     - (v141 ^ 0x42200008)
                     + 580339506) ^ 0x60B7473B)) ^ (((2 * v141) & 0x1C8 ^ 0x40)
                                                  + (v141 ^ 0x5E7EEFC5)
                                                  - 1578230127
                                                  + ((2
                                                    * ((((2 * v141) & 0x1C8 ^ 0x40)
                                                      + (v141 ^ 0x5E7EEFC5)
                                                      + 12004) & 0x2FAF ^ (v141 ^ 0x5E7EEFC5 | 0x7FFFFFFC))) ^ 0x8200007)) ^ *(_DWORD *)(v127 + 4 * ((((v139 >> 8) & 0xE3 ^ 0x8346C020) + ((v139 >> 8) & 0x1C ^ 5) - 1) ^ 0x8346C007)) ^ (v27 - ((2 * v27 + 1067983296) & 0xE3DA2F22) - 1849612175);
  LODWORD(v67) = ((2 * HIBYTE(v139)) ^ 0x190) - ((2 * ((2 * HIBYTE(v139)) ^ 0x190)) & 0x1F4) + 762;
  LODWORD(v27) = (HIBYTE(v139) ^ 0x6B6E922B) + (v67 & 0x1C6 ^ 0x7F8FB69D) + ((2 * v67) & 0x8C ^ 0x84) - 2140124767;
  v154 = (((2 * (BYTE2(v141) ^ 0xCE)) & 4) - (BYTE2(v141) ^ 0xCE) + 762087165) ^ 0x2DED87B9;
  LODWORD(v67) = (HIWORD(v141) & 0x82 ^ 0xB0CE3782) - (HIWORD(v141) & 0x82) + (BYTE2(v141) ^ 0x64);
  LODWORD(v63) = (v129 >> 8) & 0xBF ^ 0x45B8089E | (v129 >> 8) & 0x40;
  v155 = (BYTE1(v19) - ((2 * BYTE1(v19)) & 0x70) + 56);
  v156 = ((2 * v140) & 0xBE ^ 0x30) + (v155 ^ 0xFB65BC67);
  v157 = (((2 * (v155 ^ 0x51)) | 0x3B48C4C2) - (v155 ^ 0x51) - 497312353) ^ 0xB843208;
  v141 >>= 24;
  v158 = (v141 ^ 0x9E) - 1159225998 + ((2 * (v141 ^ 0x9E) + 454) & 0x11C ^ 0x692FFBFF);
  v159 = v141 ^ 0x11;
  v160 = *(_DWORD *)(v128
                   + 4
                   * (((v67 & 0x90401FAA ^ 0x42100B08)
                     + (v67 ^ 0x91E3B4A6)
                     - ((v67 ^ 0x91E3B4A6) & 0x20080FAA)) ^ 0xD3759C1D)) ^ *(_DWORD *)(v124 + 4 * (HIBYTE(v139) ^ 0x47)) ^ *(_DWORD *)(v127 + 4 * (((((v129 >> 8) & 0xBF ^ 0x45B8089E) & 0x900A0B ^ 0x8800C202) + (v63 ^ 0x69B18AD) - ((v63 ^ 0x69B18AD) & 0x4321000B)) ^ 0x8892DAAC)) ^ (v154 - ((2 * v154) & 0x10200D4) + 767127658) ^ (v27 - ((2 * v27) & 0x90DD3D62) + 1290796721) ^ (v156 - 1287730710 + ((2 * v156 + 17618) & 0x4F00 ^ 0x7FEFFFFF)) ^ *(_DWORD *)(v69 + 4 * ((v157 - ((2 * v157) & 0x14457406) + 170048003) ^ 0x1C02EA23u));
  LODWORD(v67) = (HIWORD(v129) & 0xB) + (HIWORD(v129) & 0xF4 ^ 0x3AE1E375) - 1;
  v161 = ((v67 & 0x388081C5 ^ 0x1061004) + (v67 ^ 0x7CE8CBE9) - ((v67 ^ 0x7CE8CBE9) & 0x460901C5)) ^ 0x3986B932;
  v162 = ((unsigned __int16)((v19 >> 8)
                                            - ((2 * (v19 >> 8)) & 0xA670)
                                            + 21304) >> 8) ^ 0x7F;
  v163 = (((2 * v162) | 0xDCF01506) - v162 - 1853360771) ^ 0x6AB90A87;
  v164 = (((2 * v163) | 0x19560534) - v163 - 212533914) ^ 0x86A02AC;
  LODWORD(v63) = ((2 * v139) & 0x1FC ^ 0xE4) + (v139 ^ 0xFDEDF78D);
  v165 = v63 - ((2 * v63 - 1671672428) & 0x88207A5E) - 1258363911;
  v166 = (v149 ^ 0x80660076) - ((2 * v149) & 0x112) + 1351203969;
  if (!v150)
    v166 = -789594889;
  v167 = v148 + v166;
  v168 = *(_DWORD *)(v128 + 4 * v161) ^ *(_DWORD *)(v124 + 4 * v159) ^ *(_DWORD *)(v69
                                                                                     + 4
                                                                                     * (((v139 ^ 0x72A8820 | 0xB00B36E4)
                                                                                       - (v139 ^ 0x72A8820 | 0x4FF4C91B)
                                                                                       + 1341442331) ^ 0xB721BE97)) ^ v158 ^ v165 ^ ((BYTE2(v129) ^ 0xD14C41D5) - ((2 * (BYTE2(v129) ^ 0xD14C41D5)) & 0x22000068) - 1088323020) ^ *(_DWORD *)(v127 + 4 * v164);
  v169 = (v167 - 104);
  v170 = v169 - ((2 * (v167 + 733986968)) & 0x1A0) - 1292801328;
  v171 = (v169 - ((2 * v167 + 1467973632) & 0xA) - 1024270843) ^ 0xC2F2DEF2;
  v172 = (~(2 * v168) & 0x15C) + (v168 ^ 0x7EFFDF50);
  v173 = (v168 ^ 0x8D) - ((2 * (v168 ^ 0x8D)) & 0x11111111) + 745010312;
  v174 = v172 + 690444507 + ((2 * v172 + 32308) & 0x63380 ^ 0x67EFFFFF);
  v175 = (((2 * (BYTE1(v160) ^ 0xC)) & 0x1D6) - (BYTE1(v160) ^ 0xC) - 865361900) ^ 0xCCEDA4D8;
  v176 = *(_DWORD *)(v128 + 4 * v171) ^ *(_DWORD *)(v124 + 4 * (HIBYTE(v153) ^ 0xE9)) ^ *(_DWORD *)(v127 + 4 * ((((2 * v175) & 0x10C4564) - v175 + 1600724301) ^ 0x5FEF1939)) ^ v170 ^ ((HIBYTE(v153) ^ 0x66) + 1713806559 + ((2 * (HIBYTE(v153) ^ 0x66) + 454) & 0xFFFFFFF7 ^ 0x2BAFFFFF));
  HIDWORD(v177) = v176 ^ 0x1CAEFF;
  LODWORD(v177) = v176 ^ 0x60000000;
  v178 = (v177 >> 22) - ((2 * (v177 >> 22)) & 0xC90499DA) - 461222675;
  v179 = *(_DWORD *)(v69 + 4 * (((v173 ^ 0xD3984F66) + 1894299354 + ((2 * v173) & 0x824C)) ^ 0x70E8F29B));
  HIDWORD(v177) = v179 ^ 0x247309;
  LODWORD(v177) = v179 ^ 0x3000000;
  v180 = v178 ^ ((v177 >> 22) - ((2 * (v177 >> 22)) & 0x459D7B46) - 1563509341);
  HIDWORD(v177) = v180 ^ 0x12B;
  LODWORD(v177) = v180 ^ 0xFEEC4000;
  v181 = ((v177 >> 10) - ((2 * (v177 >> 10)) & 0x5055560C) + 673884934) ^ v174;
  v182 = ((2 * v153) & 0x178 ^ 0x130) + (v153 ^ 0x476E5526);
  v183 = (((2 * (v153 ^ 0xDF)) & 0x166) - (v153 ^ 0xDF) - 1186009780) ^ 0xA989EC4C;
  v184 = (BYTE1(v168) ^ 0xA) - ((2 * (BYTE1(v168) ^ 0xA)) & 0xC6) - 518583453;
  v185 = *(_DWORD *)(v128
                   + 4
                   * (((BYTE2(v160) ^ 0xC7 | 0x5D21EFD5) - (BYTE2(v160) ^ 0xC7 | 0x22DE102A) + 584978474) ^ 0x5D21EF34u)) ^ *(_DWORD *)(v124 + 4 * (HIBYTE(v147) ^ 0x14)) ^ *(_DWORD *)(v127 + 4 * (((v184 & 0xE010002F ^ 0x1A80600C) + (v184 ^ 0xE0160823) - ((v184 ^ 0xE0160823) & 0x2F)) ^ 0xFB916367)) ^ ((HIBYTE(v147) ^ 0x9B) - 1749912659 + ((2 * (HIBYTE(v147) ^ 0x9B) + 454) & 0x192 ^ 0xAF7AFFFF)) ^ (v182 - 892444849 + ((2 * v182 + 4632) & 0x2C84 ^ 0x77FFFFFF)) ^ *(_DWORD *)(v69 + 4 * ((((2 * v183) & 0x18602DA) - v183 - 617808238) ^ 0xCBEBFFF7));
  v186 = BYTE2(v168);
  v187 = (BYTE2(v168) ^ 0x86 | 0x43B0E0F8) - (BYTE2(v168) ^ 0x86 | 0xBC4F1F07) - 1135665401;
  v188 = ((2 * v147) ^ 0x1C6) + (v147 ^ 0xEFFDDB1C);
  v189 = ((v147 & 0xE ^ 0x5D281805) + (v147 & 0xF1) - 1) ^ 0xE400AC7A;
  v190 = *(_DWORD *)(v128 + 4
                          * (((v187 & 0x1102551 ^ 0x2D492101) + (v187 & 0x42A0DAAE ^ 0xD082C88F) - 1) ^ 0xBE7B09FF)) ^ *(_DWORD *)(v124 + 4 * (HIBYTE(v160) ^ 0x6E)) ^ *(_DWORD *)(v69 + 4 * ((v189 - ((2 * v189) & 0x604040BC) - 223188386) ^ 0x4B9ADEE3)) ^ (v188 - ((2 * v188 + 138184082) & 0x80020D2) + 1929286450) ^ ((HIBYTE(v160) ^ 0xE1) + 884321224 + ((2 * (HIBYTE(v160) ^ 0xE1) + 454) & 0x1C8 ^ 0x6D73DFFF)) ^ *(_DWORD *)(v127 + 4 * (BYTE1(v153) ^ 0x5Bu));
  v191 = ((2 * v160) & 0x1FC ^ 0x74) + (v160 ^ 0xFFD7FEC4);
  v192 = *(_DWORD *)(v128 + 4 * (((HIWORD(v153) & 0x56 ^ 0xF1B10543) + (HIWORD(v153) & 0xA9) - 1) ^ 0xF1B10589)) ^ *(_DWORD *)(v124 + 4 * (HIBYTE(v168) ^ 0x64)) ^ *(_DWORD *)(v127 + 4 * (BYTE1(v147) ^ 0xCu)) ^ *(_DWORD *)(v69 + 4 * (((v160 ^ 0xEA | 0x6C2C23F2) - (v160 ^ 0xEA | 0x93D3DC0D) - 1814832115) ^ 0x6C2C2302)) ^ ((HIBYTE(v168) ^ 0xEB) + 311251446 + ((2 * (HIBYTE(v168) ^ 0xEB) + 454) & 0x224 ^ 0xB9E2DBFF)) ^ (v191 - 474227880 + ((2 * v191 + 540564) & 0x6F771A ^ 0xF7FFFFFF)) ^ ((BYTE2(v153) ^ 0x2020A03C) - ((2 * (BYTE2(v153) ^ 0x2020A03C)) & 0x4098) - 875878324);
  v193 = ((BYTE2(v185) ^ 0xE6) + (HIWORD(v185) & 0x9E ^ 0xAF3F4218) - ((BYTE2(v185) ^ 0xE6) & 0x9E)) ^ 0x273FCA9E;
  v194 = ((v190 >> 8) & 5) + (BYTE1(v190) ^ 0x7F) - ((BYTE1(v190) ^ 0x7F) & 5) - 1549824256;
  v195 = ((2 * v192) & 0xF4 ^ 0xE4) + (v192 ^ 0xEFF6330D);
  v196 = ((v192 ^ 0xC4 | 0x810E5906) - (v192 ^ 0xC4 | 0x7EF1A6F9) + 2129766137) ^ 0x1138519C;
  v197 = (((2 * (BYTE2(v190) ^ 0xFD)) | 0x23F0BE6E) - (BYTE2(v190) ^ 0xFD) + 1845993673) ^ 0x3DF0D63D;
  v198 = *(_DWORD *)(v128 + 4 * ((((2 * v193) | 0xA9AE9288) - v193 + 724088508) ^ 0x5CD7C158)) ^ *(_DWORD *)(v127 + 4 * (((v194 & 0xC38F ^ 0xC153C082) + (v194 & 0x3C70 ^ 0x8200401) - 1) ^ 0xC9734BDD)) ^ *(_DWORD *)(v69 + 4 * (((v196 | 0x52EDD5F) - (v196 | 0xFAD122A0) - 86957408) ^ 0x9518D556)) ^ (v195 + 1501521470 + ((2 * v195 + 22172) & 0x75DE ^ 0x67CFFFFF)) ^ ((BYTE2(v185) ^ 0xD7) - ((2 * (BYTE2(v185) ^ 0xD7)) & 0xD4) + 1386) ^ *(_DWORD *)(v124 + 4 * (HIBYTE(v181) ^ 0xCC)) ^ ((HIBYTE(v181) ^ 0x43) - 953253400 + ((2 * (HIBYTE(v181) ^ 0x43) + 454) & 0x208 ^ 0x69A2FBFF));
  v199 = ((HIWORD(v190) & 0x5C ^ 0x9E761051) - (HIWORD(v190) | 0xFFFFFF5C) - 2) ^ 0x9C56001C;
  v200 = ((2 * v181) & 0x17A ^ 0x40) + (v181 ^ 0x333BFF9F);
  v201 = ((v181 ^ 0xFE | 0x4DE46246) - (v181 ^ 0xFE | 0xB21B9DB9) - 1306812999) ^ 0xC64225E;
  v202 = v190 ^ v186;
  v203 = *(_DWORD *)(v128 + 4 * ((v199 - ((2 * v199) & 0x365C) + 67885870) ^ 0x62BCBD4)) ^ *(_DWORD *)(v127 + 4 * (((BYTE1(v192) ^ 0xF5 | 0xA4B97E8F) - (BYTE1(v192) ^ 0xF5 | 0x5B468170) + 1531347312) ^ 0xA4B97EED)) ^ *(_DWORD *)(v124 + 4 * (HIBYTE(v185) ^ 0xCA)) ^ (((2 * v197) & 0x751514DA) - v197 + 1165325714) ^ ((HIBYTE(v185) ^ 0x45) - 475904027 + ((2 * (HIBYTE(v185) ^ 0x45) + 454) & 0xFFFFFE03 ^ 0x2FBADFFF)) ^ (v200 - 848255201 + ((2 * v200 + 15894) & 0x211026 ^ 0xF7FFFFFF)) ^ *(_DWORD *)(v69 + 4 * ((((2 * v201) | 0xE1532E7C) - v201 + 257321154) ^ 0xB129D7DA));
  v204 = ((((HIWORD(v192) & 2) + (BYTE2(v192) ^ 0x66)) | 0x8E522400) - ((BYTE2(v192) ^ 0x66) & 2)) ^ 0xEE932303;
  v205 = ((BYTE2(v192) ^ 0xD7 | 0x327C90C2) - (BYTE2(v192) ^ 0xD7 | 0xCD836F3D) - 847024323) ^ 0xBBFE934A;
  v206 = (2 * (v185 ^ BYTE2(v160))) & 0x17C ^ 0x6C;
  v207 = (v185 ^ BYTE2(v160));
  v208 = *(_DWORD *)(v128 + 4 * (((v205 | 0x8626712) - (v205 | 0xF79D98ED) - 140666643) ^ 0x81E064E5)) ^ *(_DWORD *)(v124 + 4 * (HIBYTE(v190) ^ 0x5B)) ^ *(_DWORD *)(v69 + 4 * (((v207 ^ 0x10834111 | 0xD45A9476) - (v207 ^ 0x10834111 | 0x2BA56B89) + 732261257) ^ 0xC4D9D571)) ^ ((HIBYTE(v190) ^ 0xD4) + 642966372 + ((2 * (HIBYTE(v190) ^ 0xD4) + 454) & 0x100 ^ 0xAB37DFFF)) ^ ((v204 | 0x5FBDDBC0) - (v204 | 0xA042243F) - 1606278081) ^ (v206 + (v207 ^ 0x3AF54D88) + 883923518 + ((2 * (v206 + (v207 ^ 0x3AF54D88)) + 532) & 0x1266 ^ 0xFFEFFFFF)) ^ *(_DWORD *)(v127 + 4 * (BYTE1(v181) ^ 0x4Eu));
  v209 = ((BYTE1(v185) ^ 0xF0 | 0xF568474F) - (BYTE1(v185) ^ 0xF0 | 0xA97B8B0) + 177715376) ^ 0x34695FC3;
  v210 = ((((HIWORD(v181) & 3) + (BYTE2(v181) ^ 0x6B)) | 0x2E0D3400) - ((BYTE2(v181) ^ 0x6B) & 3)) ^ 0xAB4D1C0B;
  v211 = (2 * v202) & 0xF6 ^ 0xB0;
  v202 = v202;
  v212 = v211 + (v202 ^ 0x7FF2F5A7) - ((2 * (v211 + (v202 ^ 0x7FF2F5A7)) + 21146) & 0x5D44) - 861251601;
  v213 = (v198 & 0x20 ^ 0xF69DE7F7) + 2 * (v198 & 0x20);
  v214 = (((2 * (v202 ^ 0xE5)) | 0x4F44BDBA) - (v202 ^ 0xE5) - 664952541) ^ 0x23A36D9D;
  v215 = *(_DWORD *)(v127 + 4 * ((((2 * v209) | 0x62DDAC90) - v209 + 1318136248) ^ 0x706FCE73)) ^ *(_DWORD *)(v124 + 4 * (HIBYTE(v192) ^ 0xB5)) ^ *(_DWORD *)(v69 + 4 * (((v214 | 0x46AE8CD2) - (v214 | 0xB951732D) - 1185844435) ^ 0x42AFBF8B)) ^ v212 ^ ((HIBYTE(v192) ^ 0x3A) - ((2 * (HIBYTE(v192) ^ 0x3A) + 1457333702) & 0x420D0336) + 210114686) ^ (v210 - ((2 * v210) & 0x2804AE0) - 2091256464) ^ *(_DWORD *)(v128 + 4 * (((HIWORD(v181) & 0xF2 ^ 0x3FE2F403) - (HIWORD(v181) | 0xFFFFFFF2) - 2) ^ 0x3FE2F49B));
  v216 = (1147100743 - v213 - ((982 - 2 * v213) & 0x8C0)) ^ v198 & 0xFFFFFFDF;
  v217 = ((HIWORD(v215) & 0xBE ^ 0x2352D38F) - (HIWORD(v215) | 0xFFFFFFBE) - 2) ^ 0x6B56D3BF;
  v218 = (~(2 * v203) & 0x1E6) + (v203 ^ 0x7BD9DF0C);
  v219 = ((v203 ^ 0x19 | 0xF3A3D176) - (v203 ^ 0x19 | 0xC5C2E89) + 207367817) ^ 0xF3E39132;
  v220 = *(_DWORD *)(v128
                   + 4
                   * (((BYTE2(v215) ^ 0x3B | 0x6ACA4466) - (BYTE2(v215) ^ 0x3B | 0x9535BB99) - 1791640679) ^ 0x6ACA44EC)) ^ *(_DWORD *)(v124 + 4 * (HIBYTE(v208) ^ 0x83)) ^ *(_DWORD *)(v127 + 4 * (((BYTE1(v216) ^ 0xF0) + ((v216 >> 8) & 0x5D ^ 0x270D) - ((BYTE1(v216) ^ 0xF0) & 0x5D)) ^ 0x27B9)) ^ ((HIBYTE(v208) ^ 0xC) - ((2 * (HIBYTE(v208) ^ 0xC) + 1457333702) & 0x505505AE) - 1541766726) ^ (((2 * v217) | 0xFF0C50C4) - v217 - 2139498594) ^ (v218 - 210881725 + ((2 * v218 + 294314) & 0x7E8DA ^ 0xFFEFFFFF)) ^ *(_DWORD *)(v69 + 4 * ((v219 - ((2 * v219) & 0x132D2730) - 1986620520) ^ 0x89D6D31A));
  v221 = v220 ^ 0x4F46CDF6;
  v222 = ((v221 - 129923487) ^ 0x2B7FB36F) - 729789295 + ((2 * (v221 - 129923487)) & 0x56FF66DE);
  v223 = v222 % 0x7BE799F - ((2 * (v222 % 0x7BE799F)) & 0xDCB82A6) + 1323680083;
  if ((v220 ^ 0x4F46CDF6) <= 0x7BE799E)
    v223 = v220 ^ 0x1A30CA5;
  v224 = (BYTE2(v208) ^ 0x1F9D844C) - ((2 * (BYTE2(v208) ^ 0x1F9D844C)) & 0x2822098A) - 1269605179;
  v225 = ((2 * v216) ^ 0x1C4) + (v216 ^ 0xFF59C71D);
  v226 = *(_DWORD *)(v128
                   + 4
                   * (((BYTE2(v208) ^ 0x67) + (HIWORD(v208) & 0xE4 ^ 0xD9B4D780) - ((BYTE2(v208) ^ 0x67) & 0xE4)) ^ 0xD9B4D7D5)) ^ *(_DWORD *)(v124 + 4 * (HIBYTE(v203) ^ 0x4D)) ^ *(_DWORD *)(v127 + 4 * ((((2 * (BYTE1(v215) ^ 0x6082058)) & 0x410407A) - (BYTE1(v215) ^ 0x6082058) + 343072194) ^ 0x127AFD5Au)) ^ ((v224 & 0xE0D3B ^ 0x4F0A503) + (v224 & 0x280012C4 ^ 0x8001285) - 1) ^ ((HIBYTE(v203) ^ 0xC2) - 1789210319 + ((2 * (HIBYTE(v203) ^ 0xC2) + 198) & 0x9A ^ 0xAD27DBFF)) ^ (v225 - ((2 * v225 + 159690130) & 0x8084FC6) - 2128150868) ^ *(_DWORD *)(v69 + 4 * ((571974913 - (v216 ^ 0x56) + ((2 * (v216 ^ 0x56)) & 0xD4) + 148) ^ 0x2217A501u));
  v227 = ((v221 % 0x7BE799F) ^ 0xFBC7BF3C) + 70795460 + ((2 * (v221 % 0x7BE799F)) & 0x78F7E78);
  v228 = (HIBYTE(v226) ^ 0xFFFFFFB6) - 72 * ((HIBYTE(v226) ^ 0xB6u) / 0x48);
  v229 = ((2 * v228) & 0x24) + (v228 ^ 0xF3EFFD92);
  if (v223 != 1323680083)
    LOWORD(v227) = 0;
  v150 = v229 == -202375790;
  v230 = (((2 * (BYTE2(v203) ^ 0x7CAF68BC)) | 0x289DD48A) - (BYTE2(v203) ^ 0x7CAF68BC) + 1806767547) ^ 0x696186D6;
  v231 = ((2 * v215) & 0x176 ^ 0x56) + (v215 ^ 0x37BFFB94);
  v232 = (((2 * (v215 ^ 0x3F)) | 0x523D816C) - (v215 ^ 0x3F) + 1457602378) ^ 0xED8AD130;
  v233 = *(_DWORD *)(v128 + 4 * (((BYTE2(v203) ^ 0x60) - ((2 * (BYTE2(v203) ^ 0x60)) & 0x190) + 712) ^ 0x2D0u)) ^ *(_DWORD *)(v124 + 4 * (HIBYTE(v216) ^ 0x6A)) ^ *(_DWORD *)(v127 + 4 * ((((2 * (BYTE1(v208) ^ 0xA01304A4)) | 0xD47AFC88) - (BYTE1(v208) ^ 0xA01304A4) - 1782414916) ^ 0xCA2E7A08)) ^ *(_DWORD *)(v69 + 4 * ((((2 * v232) & 0x3F8E6C58) - v232 - 533149229) ^ 0xA4ACD865)) ^ (v231 + 221607494 + ((2 * v231 + 1562) & 0x2670 ^ 0x6FCFFFFF)) ^ (v230 - ((2 * v230) & 0xBA388866) + 1562133555) ^ ((HIBYTE(v216) ^ 0xE5) - ((2 * (HIBYTE(v216) ^ 0xE5) - 690149946) & 0x80540270) + 739808283);
  v234 = ((v215 >> 12) & 0xDA000 ^ 0x8A000) + ((HIBYTE(v215) << 11) ^ 0xB9B3873B);
  v235 = *(_DWORD *)(v124 + 4 * (HIBYTE(v215) ^ 0x25));
  v236 = v124;
  HIDWORD(v237) = v235 ^ 0x13C92B;
  LODWORD(v237) = v235 ^ 0x16A00000;
  v238 = (v234 - ((2 * v234 + 1975552064) & 0xC1B09000) - 1682404141) ^ ((v237 >> 21)
                                                                       - ((2 * (v237 >> 21)) & 0xAA1C8336)
                                                                       - 720485989);
  HIDWORD(v237) = v238 ^ 0x5BA;
  LODWORD(v237) = v238 ^ 0xD721A800;
  v239 = ((HIWORD(v216) & 0x51 ^ 0xF69877EE) - (HIWORD(v216) & 0xAE)) ^ 0xF689DEBA;
  v240 = ((2 * v208) & 0xCA ^ 0x48) + (v208 ^ 0x7BFEFDC3);
  v241 = *(_DWORD *)(v127 + 4 * (BYTE1(v203) ^ 1u)) ^ *(_DWORD *)(v69
                                                                  + 4
                                                                  * (((v208 ^ 0x51 | 0x9D911621)
                                                                    - (v208 ^ 0x51 | 0x626EE9DE)
                                                                    + 1651435998) ^ 0x9D9116F6)) ^ *(_DWORD *)(v128 + 4 * (BYTE2(v216) ^ 0x4Au)) ^ (v240 + 775135302 + ((2 * v240 + 17094) & 0x7DC4 ^ 0x67D7FFFF)) ^ (((2 * v239) | 0xFD6FBDC) - v239 - 132873710) ^ ((v237 >> 11) - ((2 * (v237 >> 11)) & 0xAC4F60E2) + 1445441649);
  v242 = HIBYTE(v226) ^ 0xE46BB77D;
  v243 = (-((v226 ^ 0xB0000000) / 0x48000000) - 309581041) ^ 0xED8C2B0F;
  v244 = 72 * v243 - ((144 * v243) & 0x16F90) - 462702645;
  if (v150)
    v242 = v244;
  v245 = *(_DWORD *)(v128 + 4 * (BYTE2(v220) ^ 0xB1u)) ^ *(_DWORD *)(v124 + 4 * (v242 ^ 0xE46BB744)) ^ ((v242 ^ 0xE46BB7CB) - ((2 * (v242 ^ 0xE46BB7CB) + 1457333702) & 0x6A49680A) - 1600960792);
  v246 = ((v245 & 0x2689CF91 ^ 0x26084500 | 0xE35D1E44) - (v245 & 0x2689CF91 ^ 0x26084500 | 0x1CA2E1BB) + 480436667) ^ 0xC7551E54 | ((v245 & 0x1836004A ^ 0x80C4541 | v245 & 0xC1403024) - 1) ^ 0x591A756E;
  v247 = (((2 * (BYTE1(v241) ^ 0x5E)) & 0x55555555) - (BYTE1(v241) ^ 0x5E) - 1816993451) ^ 0x33B0E7F2;
  v248 = ((2 * v233) & 0x1FA ^ 0x18) + (v233 ^ 0xF8FDB7F1);
  v249 = *(_DWORD *)(v69 + 4 * (((v233 & 0xAE ^ 0x4385) + (v233 & 0x51) - 1) ^ 0x43A8)) ^ (((2
                                                                                             * (BYTE2(v220) ^ 0xA646B14E)) | 0x52F863F4)
                                                                                           - (BYTE2(v220) ^ 0xA646B14E)
                                                                                           + 1451478534) ^ (v248 - 1092357776 + ((2 * v248 + 3478) & 0x1548 ^ 0x6FF7FFFF)) ^ *(_DWORD *)(v127 + 4 * ((((2 * v247) & 0x4810) - v247 + 1959435255) ^ 0xD4C89DD4)) ^ (v246 - ((2 * v246) & 0xEEDFDCFA) + 2003824253);
  v250 = ((unsigned __int16)(*(_WORD *)(v69
                                                       + 4 * (((v233 & 0xAE ^ 0x4385) + (v233 & 0x51) - 1) ^ 0x43A8)) ^ (((2 * (BYTE2(v220) ^ 0xB14E)) | 0x63F4) - (BYTE2(v220) ^ 0xB14E) - 12794) ^ (v248 - 3728 + ~((2 * v248 + 3478) & 0x1548)) ^ *(_WORD *)(v127 + 4 * ((((2 * v247) & 0x4810) - v247 + 1959435255) ^ 0xD4C89DD4)) ^ (v246 - ((2 * v246) & 0xDCFA) - 4483)) >> 8);
  v251 = v221 - v227;
  LOWORD(v246) = v251 ^ 0xFFF7;
  v252 = (2 * v251) & 0xFFEE;
  v253 = ((BYTE1(v220) ^ 0xD) - ((2 * (BYTE1(v220) ^ 0xD)) & 0xEA) + 191008373) ^ 0x62A24A74;
  v254 = ((BYTE2(v226) ^ 0x7B | 0xADA1949A) - (BYTE2(v226) ^ 0x7B | 0x525E6B65) + 1381919589) ^ 0x6CA11C87;
  v255 = ((BYTE2(v226) ^ 0xC) + (HIWORD(v226) & 0xED ^ 0x327251E1) - ((BYTE2(v226) ^ 0xC) & 0xED)) ^ 0xA27395ED;
  v256 = *(_DWORD *)(v127 + 4 * (((v253 | 0x2194F364) - (v253 | 0xDE6B0C9B) - 563409765) ^ 0x485437BB)) ^ 0xE2EF2D78;
  v257 = *(_DWORD *)(v124 + 4 * (HIBYTE(v233) ^ 0x45)) ^ ((HIBYTE(v233) ^ 0xCA)
                                                          - 1421778659
                                                          + ((2 * (HIBYTE(v233) ^ 0xCA) + 70) & 0x72 ^ 0xA97AFBFF)) ^ ((v254 | 0x88BCA312) - (v254 | 0x77435CED) + 2000903405) ^ 0xBCD405C7 ^ *(_DWORD *)(v128 + 4 * (((v255 | 0xE7E68029) - (v255 | 0x18197FD6) + 404324310) ^ 0x77E744F4));
  v258 = (v257 + v256) ^ 0xD1FF7FC7;
  v259 = (2 * (v257 + v256)) & 0xA3FEFF8E;
  v260 = ((2 * v241) & 0xE6 ^ 0x24) + (v241 ^ 0xBB7F6E69);
  v261 = 2 * ((v257 & v256) - ((2 * (v257 & v256)) & 0x1C9A06A)) + 29991018;
  v262 = v258 + v259 + (v261 ^ 0xC54CA22B) + ((2 * v261) & 0x76F5FB7C ^ 0xFD6EBFAB) + 1;
  v263 = (((2 * (v241 ^ 0xFD)) | 0x16C3767C) - (v241 ^ 0xFD) - 190954302) ^ 0x1A212BB7;
  v264 = (v260 - 1227904765 + ((2 * v260 + 24746) & 0x715A ^ 0xF7DFFFFF)) ^ *(_DWORD *)(v69
                                                                                      + 4
                                                                                      * ((v263
                                                                                        - ((2 * v263) & 0x9C4BD54)
                                                                                        + 1155686058) ^ 0x55A2CEE4u)) ^ (v262 - ((2 * v262 - 755565584) & 0xFC53224C) + 1738870558);
  LOWORD(v260) = ((2 * (BYTE1(v233) ^ 0xED)) & 0x156) - (BYTE1(v233) ^ 0xED) - 5292;
  v265 = *(_DWORD *)(v127 + 4 * (((v260 & 0x6CA ^ 0x4201B20B) + (v260 & 0x935) - 1) ^ 0x4201B92D));
  v266 = v265 ^ ((v265 ^ 0xB27C6704) - ((2 * (v265 ^ 0xB27C6704) + 2) & 0x27105C04) - 1819791869) ^ ((v265 ^ 0x1D10D287) - ((2 * (v265 ^ 0x1D10D287) + 1591307016) & 0xCD259D5A) - 1778416591) ^ 0x38997854;
  v267 = ((2 * v226) & 0x1F6 ^ 0x1B6) + (v226 ^ 0xFEDF5B20);
  v268 = ((v226 ^ 0xB) - ((2 * (v226 ^ 0xB)) & 0x3A) - 40558563) ^ 0xFF97381F;
  v269 = HIBYTE(v241);
  v270 = (HIBYTE(v241) ^ 0x5F) + 1468743253 + ((2 * (HIBYTE(v241) ^ 0x5F) + 454) & 0x2E2 ^ 0x2FE6FBFF);
  v271 = *(_DWORD *)(v128
                   + 4
                   * ((((2 * (BYTE2(v241) ^ 0x5D)) | 0x147186) - (BYTE2(v241) ^ 0x5D) + 2145765181) & 0x1FFFFF ^ 0x1A38A5u)) ^ *(_DWORD *)(v236 + 4 * (HIBYTE(v220) ^ 0xC0)) ^ *(_DWORD *)(v69 + 4 * ((((2 * v268) | 0x47411038) - v268 - 597723164) ^ 0x21A290EE)) ^ ((HIBYTE(v220) ^ 0x4F) + 1523939560 + ((2 * (HIBYTE(v220) ^ 0x4F) + 6) & 8 ^ 0x2932FBFF)) ^ ((HIWORD(v241) & 0x5B ^ 0x31370049) + (HIWORD(v241) & 0xA4 ^ 0x4000881) - 1) ^ (v267 - ((2 * v267 - 1703311974) & 0x8020642E) + 1041265892) ^ (v266 - ((2 * v266 + 1591307014) & 0xA160EC36) + 1911710);
  v272 = ((BYTE2(v233) ^ 0x38) - ((2 * (BYTE2(v233) ^ 0x38)) & 0xFFFFFFCF) + 1170000615) ^ 0x5538F7A6;
  LOWORD(v263) = (BYTE2(v233) ^ 1) - ((2 * (BYTE2(v233) ^ 1)) & 0x19A) - 21043;
  LOWORD(v246) = v246 + v252 + 9;
  v273 = v246;
  v274 = v246 ^ 0x7ABAFBEE;
  LOWORD(v246) = 2 * v246;
  v275 = ((2 * (BYTE1(v226) ^ 1)) | 0x375433B4) - (BYTE1(v226) ^ 1) + 1683351078;
  v276 = *(_DWORD *)(v236 + 4 * (v269 ^ 0xD0)) ^ *(_DWORD *)(v127
                                                             + 4
                                                             * (((v275 & 0x19201993 ^ 0xF0213001)
                                                               + (v275 & 0x28A026C ^ 0x28C8241)
                                                               - 1) ^ 0xE907ABE0)) ^ *(_DWORD *)(v128
                                                                                               + 4
                                                                                               * (((v263 & 0x6C0 ^ 0xC850C401)
                                                                                                 + (v263 & 0x13F)
                                                                                                 - 1) ^ 0xC850C170)) ^ (v272 - ((2 * v272) & 0x4448) + 1293034020) ^ v270 ^ (v274 + (v246 & 0x1DC) - 685624525 + ((2 * (v274 + (v246 & 0x1DC)) + 1460) & 0x20B0 ^ 0xF7FFFFFF)) ^ *(_DWORD *)(v69 + 4 * ((v273 - (v246 & 0xA2) + 1561197393) ^ 0x5D0DFB71));
  v277 = (((2 * (BYTE2(v249) ^ 0xCD)) & 0xEC) - (BYTE2(v249) ^ 0xCD) - 964116599) ^ 0x4684FC4B;
  v278 = (char *)*(&off_10112C750 + v329 - 15641) - 1557132710;
  v279 = (char *)*(&off_10112C750 + (v329 ^ 0x5F43)) - 393583682;
  v280 = (char *)*(&off_10112C750 + v329 - 16832) - 833597407;
  v281 = ((2 * v276) & 0xFA ^ 0x8A) + (v276 ^ 0x7F9F9F38);
  v282 = v281 - 1632784043 + ((2 * v281 + 117790) & 0x1968A ^ 0xFEDBFFFF);
  v283 = (v276 ^ 0x80) - ((2 * v276) & 0x5E) + 262253615;
  v284 = (char *)*(&off_10112C750 + v329 - 17227) - 974086582;
  v285 = *(_DWORD *)&v279[4 * (HIBYTE(v264) ^ 0x8E)] ^ *(_DWORD *)&v280[4
                                                                      * ((((2 * (BYTE1(v271) ^ 0x73091AEE)) | 0xD9EDBF46)
                                                                        - (BYTE1(v271) ^ 0x73091AEE)
                                                                        - 1828118435) ^ 0x1FFFC5AE)] ^ *(_DWORD *)&v278[4 * ((((2 * v277) | 0x9244523C) - v277 + 920508130) ^ 0x492E6AD3)] ^ v282 ^ ((HIBYTE(v264) ^ 0xD2) - ((2 * (HIBYTE(v264) ^ 0xD2) + 1011050088) & 0x20034986) + 778672119) ^ *(_DWORD *)&v284[4 * (((v283 & 0xF00ADBE ^ 0x704C01B4) + (v283 ^ 0x8F30FC0B) - ((v283 ^ 0x8F30FC0B) & 0x808115BE)) ^ 0x7F5CED5D)];
  v286 = ((((HIWORD(v271) & 0xA8) + (BYTE2(v271) ^ 0xB9)) | 0x98504800) - ((BYTE2(v271) ^ 0xB9) & 0xA8)) ^ 0xC8DA44A9;
  v287 = ((BYTE1(v276) ^ 0x66) - ((2 * (BYTE1(v276) ^ 0x66)) & 0x34) - 1216580326) ^ 0xB77CD552;
  v288 = ((2 * v264) & 0x1CE ^ 0x102) + (v264 ^ 0x7DF7FF7E);
  v289 = *(_DWORD *)&v278[4 * ((((2 * v286) & 0xA11007B2) - v286 - 2108220378) ^ 0xD2DD10C2)] ^ *(_DWORD *)&v279[4 * (HIBYTE(v249) ^ 0xC2)] ^ *(_DWORD *)&v284[4 * (v264 ^ 0x9B)] ^ (v288 + 710014562 + ((2 * v288 + 3476298) & 0x2EE178 ^ 0xEEFFFFFF)) ^ ((HIBYTE(v249) ^ 0x9E) + 158603525 + ((2 * (((HIBYTE(v249) ^ 0x9E) + 820) & 0x5D3 ^ (HIBYTE(v249) ^ 0x9E | 0x7FFFFFFC))) ^ 0x14004007)) ^ *(_DWORD *)&v280[4 * (((v287 | 0xC37945DD) - (v287 | 0x3C86BA22) + 1015462434) ^ 0xC379E5E4)];
  v290 = ((HIWORD(v276) & 0x5A ^ 0x5A7D2313) - (HIWORD(v276) | 0xFFFFFF5A) - 2) ^ 0xEE65637A;
  v291 = (((2 * v290) | 0xB7D0ABE8) - v290 - 1541953012) ^ 0xEFF0157E;
  if ((((BYTE1(v249) ^ 0x66) + ((v249 >> 8) & 0x55 ^ 0xC9A97311) - ((BYTE1(v249) ^ 0x66) & 0x55555555)) ^ BYTE1(v249)) == 0xC9A973A2)
    v291 = 142;
  v292 = ((2 * v249) & 0xBC ^ 4) + (v249 ^ 0x27D77E7D);
  v293 = *(_DWORD *)&v278[4 * v291];
  v294 = *(_DWORD *)&v278[4
                        * ((((2 * (BYTE2(v264) ^ 0xCC)) | 0x11A69CAE) - (BYTE2(v264) ^ 0xCC) + 1462546857) & 0x3FFFFFFF ^ 0x28D34E40)];
  v295 = v293 ^ *(_DWORD *)&v279[4 * (HIBYTE(v271) ^ 0xA)] ^ *(_DWORD *)&v280[4 * (BYTE1(v264) ^ 0xED)] ^ *(_DWORD *)&v284[4 * (((v249 ^ 0xFFFFFF7F) - 1565881986 + ((2 * v249) | 0xBAAAED06)) ^ 0x5D557622)] ^ ((HIBYTE(v271) ^ 0x56) + 661839829 + ((2 * (HIBYTE(v271) ^ 0x56) + 1640) & 0x940 ^ 0xEFFDBFFF)) ^ (v292 + 86778936 + ((2 * v292 + 604) & 0x212 ^ 0xFDDFF7FF));
  v296 = (v250 ^ 0x67 | 0x39FCD6DA) - (v250 ^ 0x67 | 0xC6032925) - 972871387;
  v297 = *(_DWORD *)&v280[4
                        * (((v296 & 0x10388724 ^ 0x11A124) + (v296 ^ 0x79EC56DA) - ((v296 ^ 0x79EC56DA) & 0x40108324)) ^ 0x10292763)];
  v298 = (((2 * (v271 ^ 0x7C)) | 0x41EC6014) - (v271 ^ 0x7C) - 553005066) ^ 0x88D23149;
  v299 = ((2 * v271) & 0x1DE ^ 0xC2) + (v271 ^ 0x7FA5CF9E);
  HIDWORD(v300) = v285 ^ 0x46BF;
  LODWORD(v300) = v285 ^ 0xC2360000;
  v301 = (v300 >> 15) - ((2 * (v300 >> 15)) & 0x8C95E546) - 968166749;
  v302 = *(_DWORD *)&v279[4 * (HIBYTE(v276) ^ 0x48)] ^ v294 ^ v297 ^ *(_DWORD *)&v284[4
                                                                                    * ((((2 * v298) & 0xBD6B9866)
                                                                                      - v298
                                                                                      + 558511052) ^ 0x896E3280)] ^ (v299 + 1432795416 + ((2 * v299 + 826) & 0x6F4 ^ 0xEDDBFFFF)) ^ ((HIBYTE(v276) ^ 0x14) - 1853640360 + ((2 * (HIBYTE(v276) ^ 0x14) + 1640) & 0xC46 ^ 0xDBBC9FFF));
  HIDWORD(v300) = v301 ^ 0xA733;
  LODWORD(v300) = v301 ^ 0xB6CA0000;
  v303 = (v300 >> 17) - ((2 * (v300 >> 17)) & 0xF7C83596) - 68937013;
  v304 = ((((v295 ^ 0x17BE2918) >> (v302 & 8)) - ((2 * ((v295 ^ 0x17BE2918) >> (v302 & 8))) & 0xECCFF054) - 160958422) ^ 0xF667F82A) >> (v302 & 8 ^ 8);
  LOWORD(v304) = v304 - ((2 * v304) & 0xE5EA) - 3339;
  v305 = v304 ^ 0x6B41FD9B;
  LOWORD(v304) = 2 * v304;
  v306 = v304 & 0xDC ^ 0xC9;
  v307 = (((unsigned __int16)v304 ^ 0xE5EA) + ((unsigned __int16)~(2 * (v304 ^ 0xE5EA)) | 0x18B) + 60) & 0x1C0;
  v308 = v305 + v306 - 2 * v307 + v307 + 36135436;
  v309 = v308 - ((2 * v308 + 623723210) & 0xD5265912) + 2099891694;
  v310 = (char *)*(&off_10112C750 + (v329 ^ 0x5D1B)) - 887203210;
  v330[10] = v310[v309 ^ 0xEA932C9BLL] ^ v309 ^ 0x3F;
  v311 = (107 - (((v303 >> 8) & 0x64) + ((v303 >> 8) | 0xFFFFFFFD))) ^ 0x26;
  LOBYTE(v299) = BYTE1(v303) & 0x19 ^ 9 | BYTE1(v303) & 0x80 | 0x44;
  v330[2] = v310[(((2 * (BYTE1(v303) ^ 0xA42202C4)) & 0x48000054) - (BYTE1(v303) ^ 0xA42202C4) - 927590443) ^ 0x6C9415BCLL] ^ (((2 * v311) | 0x78) - v311 - 60) ^ ((((BYTE1(v303) & 0x19 ^ 9) & 0x94 | BYTE1(v303) & 0x80 | 4) ^ 0x12) + (v299 ^ 0xC5) - ((v299 ^ 0xC5) & 0xF0)) ^ 0xD3;
  LODWORD(v309) = (v289 ^ 0xDB) - ((2 * (v289 ^ 0xDB)) & 0x1A8) - 1182790188;
  v312 = ((v309 & 0x5E0 ^ 0x11080) + (v309 ^ 0xB55A8D74) - ((v309 ^ 0xB55A8D74) & 0x49205E0)) ^ 0x8499516;
  v313 = (char *)*(&off_10112C750 + v329 - 20216) - 1444583847;
  v330[7] = v313[v312] ^ v289 ^ 0x2E;
  v314 = (char *)*(&off_10112C750 + v329 - 15500) - 1621153427;
  v330[12] = v314[HIBYTE(v302) ^ 0xEELL] ^ HIBYTE(v302) ^ 0xD7;
  v315 = (char *)*(&off_10112C750 + v329 - 18355) - 461920846;
  v330[1] = v315[((BYTE2(v303) ^ 0x20257 | 0xCD7695DF) - (BYTE2(v303) ^ 0x20257 | 0x32896A20) + 847866400) ^ 0xCD74973ALL] ^ BYTE2(v303) ^ 0x54;
  v330[8] = v314[HIBYTE(v295) ^ 0xFELL] ^ HIBYTE(v295) ^ 0x34;
  v330[14] = v310[((BYTE1(v302) ^ 0x616C5024 | 0xC938DC2A) - (BYTE1(v302) ^ 0x616C5024 | 0x36C723D5) + 919020501) ^ 0xA8548CC9] ^ BYTE1(v302) ^ 0x81;
  *v330 = v314[HIBYTE(v303) ^ 0x62] ^ HIBYTE(v303) ^ 0xBD;
  v330[15] = v313[((v302 ^ 0x74) - ((2 * (v302 ^ 0x74)) & 0x144) - 1137652318) ^ 0xBC30CDCC] ^ v302 ^ 0xCF;
  v316 = ((2 * v303) & 0x8A)
       + (((v300 >> 17) - ((2 * (v300 >> 17)) & 0x96) - 53) ^ 0xFFFFFFE5)
       - 1412688709;
  v317 = ((v316 & 0xA208056A ^ 0x24141) + (v316 & 0x1000295) - 1) ^ 0x5CF5BA7D;
  LOWORD(v303) = (v303 & 0xB3 ^ 0x381) + (v303 & 0x4C ^ 9) + 2047;
  v330[4] = v314[HIBYTE(v289) ^ 0x12] ^ HIBYTE(v289) ^ 0x68;
  LOBYTE(v314) = v313[(v303 & 0x7FF ^ ((v303 & 0x7FF ^ 0xFFFFFC95)
                                     - ((2 * (v303 & 0x7FF ^ 0xFFFFFC95) + 2) & 0xEA0637AC)
                                     - 184345641) ^ 0xEBCB89BA ^ (v317 - ((2 * v317 + 260) & 0x3D91220C) + 516460936))
                    + 129] ^ v303 ^ 5;
  v318 = HIWORD(v302);
  v330[3] = (_BYTE)v314;
  v319 = ((BYTE2(v302) ^ 0xCCA7A4F0) + (HIWORD(v302) & 0x6A ^ 0x3050410A) - ((BYTE2(v302) ^ 0xCCA7A4F0) & 0xCC00846A)) ^ 0xD07727AF;
  v330[13] = v315[(((2 * v319) | 0xA35297F8) - v319 + 777434116) ^ 0x31290D1FLL] ^ v318 ^ 0xD2;
  v330[6] = v310[(((2 * (BYTE1(v289) ^ 0x8200725A)) | 0x47D608D2) - (BYTE1(v289) ^ 0x8200725A) - 602604649) ^ 0xA1EB76C3] ^ BYTE1(v289) ^ 0xB2;
  v320 = BYTE2(v289);
  v321 = (BYTE2(v289) ^ 0x1D) + (HIWORD(v289) & 0xF1 ^ 0x10E0) - ((BYTE2(v289) ^ 0x1D) & 0xFFFFFFF1);
  v322 = (((2 * (v320 ^ 0x23)) & 0xC0) - (v320 ^ 0x23u) + 1183) ^ 0x42ELL;
  v323 = v321 ^ 0x8A;
  if ((v321 & 4) != 0)
    v324 = -4;
  else
    v324 = 4;
  v330[5] = v315[v322] ^ (v324 + v323 - ((2 * (v324 + v323)) & 0xEF) - 9) ^ 0xE5;
  v325 = (HIWORD(v295) & 0x98) + (BYTE2(v295) ^ 0xFFFFFFBA) + (BYTE2(v295) | 0x3A254067) + 1;
  v330[9] = v315[((v325 & 0x5D1D3527 ^ 0x151D1502) + (v325 & 0xA2E2CAD8 ^ 0x22000011) - 1) ^ 0xD38555ALL] ^ BYTE2(v295) ^ 0x7B;
  v330[11] = v313[((v295 & 0x67 ^ 0x66205541) + (v295 & 0x98 ^ 0x900091) - 1) ^ 0x66B055BALL] ^ v295 ^ 0x36;
  return ((uint64_t (*)(uint64_t, _BYTE *))(*(_QWORD *)(v331 + 8 * v329) - 12))(a1, v330);
}

int *sub_1001386D4(int *result)
{
  int v1;
  int v2;
  int v3;

  if ((v2 ^ 0x35CCFFBF) + v1 + ((2 * v2) & 0x6B98B058) == 898133399)
    v3 = 2134650450;
  else
    v3 = 2134608426;
  *result = v3;
  return result;
}

void sub_100138738(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  v1 = 1891100677 * (((a1 | 0xC06B078C) - a1 + (a1 & 0x3F94F873)) ^ 0xAC63261C);
  if (*(_QWORD *)(a1 + 8))
    v2 = (unsigned __int16)(*(_WORD *)(a1 + 16) - v1) == 13067;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X11 }
}

uint64_t sub_10013881C@<X0>(int a1@<W8>)
{
  unsigned int v1;
  unsigned int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = (v1 | ((v1 < v2) << 16)) + 1225269202 == (a1 ^ 0xCACE) + 1225240641;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((8 * v4) | (32 * v4)) ^ a1)) - 4))();
}

void sub_100138870()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

void sub_10013B074(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_10013B20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39)
{
  int v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v44 = v42 + v40 + 1561;
  a38 = 0;
  v45 = ((uint64_t (*)(_QWORD, uint64_t, int *))(*(_QWORD *)(v43 + 8 * (v39 + v40 - 646)) - 2066755218))(*(unsigned int *)(*(_QWORD *)(v43 + 8 * (v39 + v40 - 1435)) - 748997659), a5, &a38);
  a39 = v41 + 716;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a36 + 8 * ((25769 * ((_DWORD)v45 == 0)) ^ v44)))(v45, v46, v47, v48, v49, v50, v51, v52, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_10013B288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  uint64_t v30;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((486 * ((((v29 + 1698817844) ^ (a8 == 0)) & 1) == 0)) ^ (v29 + 1698833503))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_10013B2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v32;
  int v33;
  uint64_t v34;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 + 8 * ((47617 * ((*(_DWORD *)(a8 + 40) & 1) == v33 + (v32 ^ 0x9ABE1B4C) - 3844)) ^ v32)) - (v32 + 8359) + 17013))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_10013B350@<X0>(uint64_t a1@<X4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33,uint64_t a34,_DWORD *a35)
{
  uint64_t v35;

  *a35 = (a33 & 0xFFFFFFFE ^ ((a2 ^ 0x9ABE78E7) + 525865925))
       - 2 * ((a33 & 0xFFFFFFFE ^ ((a2 ^ 0x9ABE78E7) + 525865925)) & 0x3A164E66 ^ a33 & 4)
       - 1172943262;
  return (*(uint64_t (**)(void))(v35 + 8 * (a2 ^ (249 * (a1 != 0x18848332779ED5DFLL)))))();
}

uint64_t sub_10013B3CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  int v8;
  uint64_t v9;

  *(_QWORD *)(a5 - 0x18848332779ED5DFLL) = *a8 - 0x6CA6F0EE111A2BB6;
  return (*(uint64_t (**)(void))(v9 + 8 * (v8 + 1698826203)))();
}

uint64_t sub_10013B410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  uint64_t v30;
  uint64_t v31;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 + 8 * ((v29 + 1698843531) ^ (111 * (v30 == 0xCC5D57065FF31D3)))) - ((v29 + 1698817572) | 0x110u) + 8646))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_10013B474@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v3 - 0xCC5D57065FF31D3) = *(_DWORD *)(a1 + 20);
  return ((uint64_t (*)(void))(v2 - ((a2 - 1743517630) | 0x2AA108Au) + *(_QWORD *)(v4 + 8 * a2)))();
}

uint64_t sub_10013B4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  _BOOL4 v38;

  v38 = a8 != 0x6F7634AB0303F6BELL && v34 != 0xE636907960D9A94;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 + 8 * ((v35 + v33 + 3028) ^ (57257 * v38))) - (v33 ^ 0x6547C560u) + 4294574070))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_10013B570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * ((39 * ((a9 & ~(*(_DWORD *)(a8 - 0x6F7634AB0303F6B6) - 2135043668) | (a9 | ~(*(_DWORD *)(a8 - 0x6F7634AB0303F6B6) - 2135043668)) & (*(_DWORD *)(a8 - 0x6F7634AB0303F6B6) - 2135043668 - a9)) >= 0)) ^ (a9 + 394813 + ((a9 - 1920747519) & 0x7282DF39) - 22314))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_10013B5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((((v5 - 1816615243) & 0x6C46D75B ^ 0x1531) * (a5 == 0x56481F36160250F9)) ^ v5))
                            - 8))();
}

uint64_t sub_10013B66C@<X0>(uint64_t a1@<X7>, uint64_t (*a2)(uint64_t)@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;

  v39 = v34 - 33263;
  v40 = (v34 - 1699907231) | 0x102A04;
  v41 = *v35;
  v42 = *(_DWORD *)(a1 - 0x6F7634AB0303F6A6);
  v43 = *(_QWORD *)(v38 + 8 * v39);
  v44 = 210615973
      * ((((v37 - 176) | 0xC0F8CB2859D47B9FLL) - ((v37 - 176) & 0xC0F8CB2859D47B9FLL)) ^ 0x8F3B2EC6F03BB280);
  v36[414] = a1 - 0x6F7634AB0303F6A2;
  v36[412] = v41;
  v36[415] = a33;
  *(_DWORD *)(v37 - 144) = v44 + 1741050007 + v39;
  *(_DWORD *)(v37 - 124) = 529 * (v39 ^ 0x1555) - v44 + v42 - 763905345;
  v36[417] = v43 ^ v44;
  v36[413] = a34;
  v45 = a2(v37 - 176);
  return (*(uint64_t (**)(uint64_t))(a30
                                            + 8
                                            * ((v40 + 1698821248) ^ v39 ^ (32225 * (*(_DWORD *)(v37 - 128) == 2134650450)))))(v45);
}

uint64_t sub_10013B7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t v37;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * (v36 + 1698830960)) - ((v36 + 344308929) & 0x50BC3FE9) + 14149))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_10013B850@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 | (32 * (a1 < -438994042)))) - (v1 ^ 0x3741)))();
}

uint64_t sub_10013B8A0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (9770 * (a1 == -557748103))))
                            - ((v1 ^ 0x9E65u)
                             - 1698815365)
                            - 4 * (v1 ^ 0x9E65u)
                            + 2596182814))();
}

uint64_t sub_10013B8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;

  v48 = (((v44 - 1444394912) & 0x56177FFF) + 0x245E42AA8C14F72CLL) ^ *(_QWORD *)(a8 - 0x5D69D7CA88F07FA0);
  v49 = *(_QWORD *)(a8 - 0x5D69D7CA88F07F98);
  v50 = v49 - 0x56481F36160250F5;
  LODWORD(v49) = *(_DWORD *)(v49 - 0x56481F36160250F9);
  v51 = *(_QWORD *)(a8 - 0x5D69D7CA88F07F90) ^ 0x790B0DA8163E0D35;
  v52 = 1130658149
      * ((((v47 - 176) | 0x5A855C9A9FE95942) - (v47 - 176) + ((v47 - 176) & 0xA57AA3656016A6B8)) ^ 0x9F18260452D5E08FLL);
  v46[419] = 0x2383F739594A4A94;
  v46[414] = v50;
  v46[415] = v48;
  *(_DWORD *)(v47 - 144) = v52 - 604737639 + v49;
  *(_DWORD *)(v47 - 172) = v52 - 2125713836;
  *(_DWORD *)(v47 - 168) = (v44 - 6902) ^ v52;
  v46[418] = v51 - v52;
  v46[420] = a44;
  v46[417] = a39;
  v53 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v45 + 8 * (v44 - 20161)) - 1540619327))(v47 - 176);
  return (*(uint64_t (**)(uint64_t))(a36 + 8 * v44))(v53);
}

uint64_t sub_10013BA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  int v45;
  int v46;
  uint64_t v47;
  char v48;
  int v49;
  int v51;
  int v52;

  v48 = (v46 + 33) & 0xEE;
  v49 = v46 + 1698844066;
  v51 = v46;
  *(_DWORD *)((uint64_t (*)(void))(*(_QWORD *)(v47 + 8 * (v46 ^ (v45 + 3955))) - 1620132615))() = 0;
  v52 = ((uint64_t (*)(uint64_t, char *))(*(_QWORD *)(v47 + 8 * (v51 + 1698812646)) - 1957259990))(a8 - 0x2C86DCAB8BD0EBD5, &a45);
  return ((uint64_t (*)(void))(*(_QWORD *)(a36
                                        + 8
                                        * ((50 * (((v52 << (v48 + 83)) & 0xF3EFE7A0) + (v52 ^ 0x79F7F3D0) == 2046292944)) | v49))
                            - 8))();
}

uint64_t sub_10013BB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46)
{
  unsigned int v46;
  uint64_t v47;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 + 8 * ((29 * ((((((unsigned __int16)(v46 + 1264) ^ 0xFA1E) & (unsigned __int16)(2 * (a46 & 0xF000 ^ 0x2C42))) - (a46 & 0xF000 ^ 0x2C42)) & 0xFFFE) != 29758)) ^ v46)) - ((v46 + 1471422545) & 0xA84BFE7F) + 21627))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_10013BC00()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((63349 * (((v1 == 0x2FBB52A055EC7EBFLL) ^ (v0 - 32)) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_10013BC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  int v51;
  uint64_t v52;
  uint64_t v53;

  *(_QWORD *)(v52 - 0x2FBB52A055EC7EBFLL) = ((2 * a51) & 0xFFFDBDDBED8ECDFALL)
                                          + 0x5EEFFDFF7FFCFFB4
                                          + (a51 ^ 0xFFFEDEEDF6C726F2 ^ (v51 - 5232));
  return ((uint64_t (*)(void))(*(_QWORD *)(v53 + 8 * v51) - 8))();
}

uint64_t sub_10013BCC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  uint64_t v31;
  uint64_t v32;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 + 8 * (((4 * (((v31 == 0xC2533AAF1CB8BAALL) ^ ((v30 ^ 0x5B) + 1)) & 1)) & 0xDF | (32 * (((v31 == 0xC2533AAF1CB8BAALL) ^ ((v30 ^ 0x5B) + 1)) & 1))) ^ v30)) + 2596158106 - ((v30 + 310376973) | 0x883E0082) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_10013BD34@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  uint64_t v46;
  uint64_t v47;

  *(_QWORD *)(v46 - 0xC2533AAF1CB8BAALL) = (a45 ^ 0x77F9DFEBF69FF7C8)
                                         - 0x90962B283A008
                                         + ((v45 ^ (a1 - 1946) ^ 0xEFF3BFD77781D50ELL) & (2 * a45));
  return (*(uint64_t (**)(void))(v47 + 8 * v45))();
}

uint64_t sub_10013BDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  char v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  BOOL v35;
  char v37;

  if (a8)
    v35 = a5 == 0x12CC603C2EE748DELL;
  else
    v35 = 1;
  v37 = v35 || v32 == 0x136A446F89C4741ALL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((32462 * ((v37 ^ ((v31 ^ (v30 - 70)) + 1)) & 1)) ^ (v33 + v31 + 1561))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_10013BE08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void (*v43)(uint64_t);
  unint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _DWORD *v50;

  v50 = (_DWORD *)(a5 - 0x12CC603C2EE748DELL);
  *(_DWORD *)(a5 - 0x12CC603C2EE748DELL) = 2053081713;
  v40 = *(_QWORD *)(v39 + 8 * v36);
  v41 = v38 - 176;
  v42 = (v38 - 176) | 0xE20F623F5A2082F4;
  *(_DWORD *)(v38 - 160) = v36 - 588285089 + 842727511 * ((((v38 - 176) | 0xA5DF7D0B) - v42 + 1512080116) ^ 0x92DD1A56);
  *(_QWORD *)(v37 + 3296) = a8;
  *(_QWORD *)(v37 + 3304) = v40
                          - 842727511
                          * ((((v38 - 176) | 0x1DF09DC0A5DF7D0BLL) - v42 - 0x1DF09DC0A5DF7D0CLL) ^ 0xBC1D36D992DD1A56)
                          - 12;
  v43 = (void (*)(uint64_t))((char *)*(&off_10112C750 + (v36 ^ 0x1807)) - 1213656063);
  v43(v38 - 176);
  *(_DWORD *)(a21 - 0x136A446F89C47416) = *(_DWORD *)(v38 - 156);
  *v50 += 4;
  v44 = 842727511 * (((~v41 | 0xE92305E7356724A8) + (v41 | 0x16DCFA18CA98DB57)) ^ 0xB7315101FD9ABC0BLL);
  STACK[0xE08] = *(_QWORD *)(a36 + 8 * v36) - v44 + ((v36 - 620795595) & 0xBFBEBB9E) - 2596158122;
  *(_DWORD *)(v38 - 160) = v36 - 588285089 + v44;
  STACK[0xE00] = a22 + 4;
  v43(v38 - 176);
  v45 = *(_DWORD *)(v38 - 156);
  *v50 += 4;
  v46 = *(_QWORD *)(a36 + 8 * (v36 ^ 0x348));
  v47 = 879478891 * ((2 * (v41 & 0x66CC644754718C68) - v41 - 0x66CC644754718C6ALL) ^ 0x1E523EDA1BF74ED5);
  STACK[0xE08] = a21 + 0x25B5995FFDBE92DELL;
  *(_DWORD *)(v38 - 176) = v47 ^ v45 ^ 0xE420C98F;
  *(_DWORD *)(v38 - 160) = v36 - v47 + 1411116793;
  STACK[0xE18] = v46 - v47 - 12;
  v48 = ((uint64_t (*)(uint64_t))((char *)*(&off_10112C750 + (v36 ^ 0x1DD3)) - 1053349067))(v38 - 176);
  return (*(uint64_t (**)(uint64_t))(a36
                                            + 8
                                            * (v36 ^ 0x2F9E ^ (21211 * (*(_DWORD *)(v38 - 156) == v36 + 2134644872)))))(v48);
}

uint64_t sub_10013C0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;

  v46 = *(_QWORD *)(v45 + 8 * v40) - 4;
  v47 = 210615973 * ((v41 - 2 * (v41 & 0x9CC24EC786186482) - 0x633DB13879E79B7ELL) ^ 0xD301AB292FF7AD9DLL);
  *(_DWORD *)(v44 - 152) = (v40 - 153633410) ^ v47;
  *(_DWORD *)(v44 - 168) = v47 ^ 0x6A4637D3;
  *(_QWORD *)(v43 + 3312) = v46 ^ v47;
  *(_QWORD *)(v43 + 3296) = a40;
  v48 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v42 + 8 * (v40 ^ 0x1EC6)) - 1632329551))(v44 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a36
                                                      + 8
                                                      * ((23940
                                                        * (*(_DWORD *)(v44 - 148) == (v40 ^ 0x43FA39B4) + 994181603)) ^ (v40 + 8147)))
                                          - ((v40 - 1698814781) ^ 0x9ABE3A9ALL)))(v48);
}

uint64_t sub_10013C1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_BYTE *a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,_DWORD *a44)
{
  _BYTE *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;

  *(_BYTE *)(v46 - 0x136A446F89C47412) = (*a39 ^ 0xEF) + ((2 * *a39) & 0xDF) + 55;
  ++*a44;
  *(_BYTE *)(v46 - 0x136A446F89C47411) = v44[9] + 62;
  ++*a44;
  *(_BYTE *)(v46 - 0x136A446F89C47410) = v44[10];
  *a44 += (v45 + 1455689263) ^ 0x9ABE3A9F;
  *(_BYTE *)(v46 - 0x136A446F89C4740FLL) = v44[11];
  ++*a44;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 + 8 * (v45 ^ 0x43FA19C1 ^ (24280 * (v45 == 1189898419)))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_10013C2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  char v39;

  *(_QWORD *)(v36 + 160) = &STACK[0x7D46CEFC17F012C7];
  if (a5)
    v38 = v35 == 0x5973816DD4628DC2;
  else
    v38 = 1;
  v39 = v38;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * ((v34 + 1698836884) | (8 * ((v39 ^ (v34 + 121)) & 1)))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_10013C384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  uint64_t v56;
  uint64_t v57;

  *(_DWORD *)(v56 - 0x5973816DD4628DC2) = 473000100;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 + 8 * (v55 - 1295)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           v56 - 0x5973816DD4628DC2,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_10013C3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,_DWORD *a43)
{
  int v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  int v48;

  *(_DWORD *)(a5 + 4 * (v44 + v46 - 1)) = 0;
  v48 = (*a43)++;
  return ((uint64_t (*)(void))(*(_QWORD *)(v47
                                        + 8
                                        * (((((v43 + 1) ^ ((v48 + v44) < 0x14)) & 1) * v45) ^ v43))
                            - 4))();
}

uint64_t sub_10013C420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,_DWORD *a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v56;
  int v57;
  uint64_t v58;

  *a44 = v57;
  HIDWORD(a43) = a2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * (int)(((a9 + (v56 ^ 0x9ABE0DC2) - 1881) * (a8 != 0x13EE293CE1F130D4)) ^ v56)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_10013C474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t v37;
  uint64_t v38;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 - ((v36 - 1161837469) & 0xDFFE3EDE) + *(_QWORD *)(v38 + 8 * ((27130 * (((*(_QWORD *)(a8 - 0x13EE293CE1F130B4) == 0) ^ (v36 - 1)) & 1)) ^ v36)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_10013C4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;

  v43 = (v39 - 1427594718) & 0x5517B7BD;
  v44 = 1130658149 * (((v42 - 176) & 0xAD125EF8 | ~((v42 - 176) | 0xAD125EF8)) ^ 0x9FD118CA);
  *(_QWORD *)(v41 + 3312) = a39;
  *(_DWORD *)(v42 - 168) = v44 - 1377249047;
  *(_DWORD *)(v42 - 176) = (v43 - 853) ^ v44;
  *(_DWORD *)(v42 - 152) = 2101916427 - v44;
  v45 = v40(v42 - 176);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(a36
                                                               + 8
                                                               * ((88
                                                                 * (*(_DWORD *)(v42 - 172)
                                                                  + ((v43 - 1698846366) ^ 0x7970ADD9u) > 0xFFFFFFEA)) ^ v43))
                                                   - 12))(v45, 2134650450);
}

uint64_t sub_10013C5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8992 * (v5 ^ 0x9128))
                                                                              - ((1124 * (v5 ^ 0x9128u) - 14235) ^ 0x2031)))(a1, a2, a3, a4, v4);
}

uint64_t sub_10013C624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  uint64_t v34;
  uint64_t v35;
  _BOOL4 v38;

  v38 = a8 == 0x2C86DCAB8BD0EBF6 || a5 == 0x556F58B8B61AF18 || v34 == 0x540E9BE4FD9FC339;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * ((v33 + 1698841076) | v38)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_10013C6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t v37;
  int v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v38 = v36 + 1698819662;
  v39 = v36;
  v40 = ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * (v36 + 1698810860)) - 1146330910))(a8 - 0x2C86DCAB8BD0EBD5, 272);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a36 + 8 * (int)(((((((_DWORD)v40 << (v39 + 99)) & 0xFFFF5FDE) + (v40 ^ 0x7FFFAFEF) + 20497) >> 31) * ((12391 * (v38 ^ 0x28EE)) ^ 0x8E6)) ^ v38)) - 12))(v40, v41, v42, v43, v44, v45, v46, v47, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_10013C774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v36 = ((uint64_t (*)(void))(*(_QWORD *)(v34 + 8 * (v33 ^ 0x6FD0)) - 1458052402))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * ((61371 * (((2 * (_DWORD)v36) & 0x9DCFAEFE) + (v36 ^ 0xCEE7D77F) == -823666817)) ^ v33)))(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_10013C800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;

  v68 = v59(((((v57 + 37330768) | 0x98843A80) + 1698844836) ^ 0xFFFF74BDLL) & a57);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * ((49322 * (v68 != 0)) ^ v57)))(v68, v60, v61, v62, v63, v64, v65, v66, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_10013C86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v62 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v60 + 8 * (v59 ^ 0x82F7)) - 1651636967))(HIDWORD(a38), a40, *a39);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 + 8 * ((213 * ((v62 ^ 0xA6FBFEE67FBFB7FBLL) - *a39 + ((2 * v62) & 0x4DF7FDCCFF7F6FF6) != 0xA6FBFEE67FBFB7FBLL)) ^ v59)) - 4))(v62, v63, v64, v65, v66, v67, v68, v69, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_10013C8F4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_100DD0758();
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (int)(((v0 - 608324419) & 0xBEFFFA9E) + 1698833968)))(v2);
}

uint64_t sub_10013C934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  BOOL v34;
  int v36;

  if (a8)
    v34 = a5 == 0x18B64F22EE5135C9;
  else
    v34 = 1;
  v36 = v34 || v31 == 0x136A446F89C4741ALL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * ((((v30 + 1698824118) ^ 0x3A2E) * v36) ^ (v32 + v30 + 1523))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_10013C998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  uint64_t v32;
  uint64_t v33;

  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) = 1521135537;
  *(_QWORD *)(v32 - 0x136A446F89C46B02) = a8;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 256;
  *(_QWORD *)(v32 - 0x136A446F89C46AF2) = a8 + 256;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 256;
  *(_QWORD *)(v32 - 0x136A446F89C46AE2) = a8 + 512;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 256;
  *(_QWORD *)(v32 - 0x136A446F89C46AD2) = a8 + 768;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 256;
  *(_QWORD *)(v32 - 0x136A446F89C46AC2) = a8 + 1024;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 256;
  *(_QWORD *)(v32 - 0x136A446F89C46AB2) = a8 + 1280;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 256;
  *(_QWORD *)(v32 - 0x136A446F89C46AA2) = a8 + 1536;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 256;
  *(_QWORD *)(v32 - 0x136A446F89C46A92) = a8 + 1792;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) = v31
                                         + *(_DWORD *)(a5 - 0x18B64F22EE5135C9)
                                         + ((a9 - 1970149954) | 0x102C1A8C)
                                         - 3588;
  *(_QWORD *)(v32 - 0x136A446F89C46A82) = a8 + 2048;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 256;
  *(_QWORD *)(v32 - 0x136A446F89C46A72) = a8 + 2304;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 256;
  *(_QWORD *)(v32 - 0x136A446F89C46A62) = a8 + 2560;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 256;
  *(_QWORD *)(v32 - 0x136A446F89C46A52) = a8 + 2816;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 256;
  *(_QWORD *)(v32 - 0x136A446F89C46A42) = a8 + 3072;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 256;
  *(_QWORD *)(v32 - 0x136A446F89C46A32) = a8 + 3328;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 256;
  *(_QWORD *)(v32 - 0x136A446F89C46A22) = a8 + 3584;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 256;
  *(_QWORD *)(v32 - 0x136A446F89C46A12) = a8 + 3840;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 256;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * a9))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_10013CC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  BOOL v34;
  char v36;

  if (a8)
    v34 = a5 == 0x18B64F22EE5135C9;
  else
    v34 = 1;
  v36 = v34 || v31 == 0x136A446F89C4741ALL;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 + 8 * ((41798 * ((v36 ^ (v30 + 1)) & 1)) ^ (v32 + v30 + 371))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_10013CC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;

  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) = 1521135537;
  *(_QWORD *)(v32 - 0x136A446F89C46AFALL) = a8;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 1024;
  *(_QWORD *)(v32 - 0x136A446F89C46AEALL) = a8 + 1024;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 1024;
  *(_QWORD *)(v32 - 0x136A446F89C46ADALL) = a8 + 2048;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += ((v31 ^ 0x9ABE0F30) - 1698822928) ^ (v30 + 702);
  *(_QWORD *)(v32 - 0x136A446F89C46ACALL) = a8 + 3072;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 1024;
  *(_QWORD *)(v32 - 0x136A446F89C46ABALL) = a8 + 4096;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 1024;
  *(_QWORD *)(v32 - 0x136A446F89C46AAALL) = a8 + 5120;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 1024;
  *(_QWORD *)(v32 - 0x136A446F89C46A9ALL) = a8 + 6144;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 1024;
  *(_QWORD *)(v32 - 0x136A446F89C46A8ALL) = a8 + 7168;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 1024;
  *(_QWORD *)(v32 - 0x136A446F89C46A7ALL) = a8 + 0x2000;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 1024;
  *(_QWORD *)(v32 - 0x136A446F89C46A6ALL) = a8 + 9216;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 1024;
  *(_QWORD *)(v32 - 0x136A446F89C46A5ALL) = a8 + 10240;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 1024;
  *(_QWORD *)(v32 - 0x136A446F89C46A4ALL) = a8 + 11264;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 1024;
  *(_QWORD *)(v32 - 0x136A446F89C46A3ALL) = a8 + 12288;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 1024;
  *(_QWORD *)(v32 - 0x136A446F89C46A2ALL) = a8 + 13312;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 1024;
  *(_QWORD *)(v32 - 0x136A446F89C46A1ALL) = a8 + 14336;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 1024;
  *(_QWORD *)(v32 - 0x136A446F89C46A0ALL) = a8 + 15360;
  *(_DWORD *)(a5 - 0x18B64F22EE5135C9) += 1024;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 + 8 * (int)(v31 ^ 0x9ABE0F30)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_10013CF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  BOOL v34;
  char v36;

  if (a8)
    v34 = a5 == 0x2337C057D94BE21ELL;
  else
    v34 = 1;
  v36 = v34 || v31 == 0x136A446F89C4741ALL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * ((25234 * ((v36 ^ v30 ^ 0x85) & 1)) ^ (v32 + v30 + 1561))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_10013CF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v35;
  uint64_t v36;

  *(_DWORD *)(a5 - 0x2337C057D94BE21ELL) = 622544902;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 + 8 * v35) - (v35 - 11750) + 27693))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_10013CFF8()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((87 * (v0 < (char)(((v1 + 75) | 0x2E) ^ 0x79))) ^ v1))
                            - ((v1 - 11317) | 0xFu)
                            + 16391))();
}

uint64_t sub_10013D058@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((a1 + ((v2 - 1452) | 0x540) + 1392) ^ (v2 - v3 - 371)) * (v1 == 214)) ^ v2))
                            - 4))();
}

uint64_t sub_10013D094()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * v0)
                                                                                                - 8))(144, 404, 4204186112, 191, 3662194179, 3494569404, 1342710205);
}

uint64_t sub_10013D188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,unsigned int a38)
{
  int v38;
  unsigned __int8 *v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  int v53;
  unsigned int v54;
  int v55;
  unint64_t v56;
  int v57;
  uint64_t v58;

  v53 = ((*v39 | ((*v39 < 0x26u) << 8)) - 38) * (a38 - 1788074495);
  v54 = (v53 ^ v42) + v44 + (v43 & (2 * v53));
  v55 = v54 - (((v54 * (unint64_t)v45) >> 32) >> 5) * a1;
  v56 = a38 + 1;
  v57 = ((-1 - ((a38 - 1788074495) >> 4)) ^ 0xFC)
      + ((255 - ((a38 - 1788074495) >> 4)) & a4 ^ a5)
      - (((-1 - ((a38 - 1788074495) >> 4)) ^ 0xFC) & 0xFFFFFFBF);
  v58 = ((v57 & a7 ^ v41) + (v57 ^ a6) - ((v57 ^ a6) & v46)) ^ v47;
  *(_QWORD *)(v40 + (((v58 ^ v48) + (v49 & (2 * v58))) << 7) + 32 * ((v56 >> 2) & 3) + 8 * (v56 & 3) + v50) = a8 + (((_DWORD)a3 + ((v55 - (a2 & (2 * v55))) << 8)) ^ a3);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a36 + 8 * ((((_DWORD)v56 == v51) * v52) ^ v38)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_10013D270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unsigned int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,_DWORD *a43)
{
  uint64_t v43;

  *a43 = 622581766;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * (int)(a35 ^ (a35 - 1496245184) & 0xBEBEFABE ^ 0xAF902385 ^ (31371 * (a35 < 0xD32380D1)))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_10013D2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v60;
  char v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  HIDWORD(a37) = 11;
  v65 = *(_QWORD *)(a8 - 0x5B9245F5122A914ELL);
  *(_QWORD *)(v63 + 232) = a8 - 0x5B9245F5122A914ELL;
  *(_QWORD *)(v63 + 240) = v65;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * (((((v61 + v62 - 1) ^ (v65 == 0)) & 1) * ((44 * (v62 ^ (v60 + 3489))) ^ 0xCD29)) ^ (v62 + 1698817448))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_10013D370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = (a7 - 3450) | 0x410;
  *(_QWORD *)(v7 + 176) = *(_QWORD *)(v8 + 8 * v9);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8 + 8 * ((20339 * ((v9 + 182527720) > 0x98436B58)) ^ ((int)v9 + 13540)))
                                                                                               - 8))(a1, a2, a3, a4, a5, a6, 15 * (v9 ^ 0x38A));
}

uint64_t sub_10013D3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v35;
  int v36;
  uint64_t v37;

  LODWORD(STACK[0x234]) = 751084954;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * (int)(((((v35 - 1741028074) & 0xCD07F6FB) - 13886) * (a8 != 0)) ^ (v36 + v35 + 629))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_10013D470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;
  int v38;
  uint64_t v39;

  LODWORD(STACK[0x234]) = v38;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * (a9 ^ (32597 * (a8 != 0)))) + v37 - ((a9 - 1094760210) & 0xDBFEBAFF)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_10013D4C8@<X0>(_QWORD *a1@<X7>, int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((44284 * (*a1 == 0x6CA6F0EE111A2BB6)) ^ (a2 - 1372)))
                            - ((a2 + 18828) ^ (a2 - 303052997) & 0x1210323Eu ^ 0xB01ALL)))();
}

uint64_t sub_10013D52C@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((*(_QWORD *)(a1 + 8) != 0x7C0ADF1C3D95FE54) * ((a2 - 1698821516) ^ v2)) ^ a2))
                            - 58 * (a2 ^ 0x321Cu)
                            + 32816))();
}

uint64_t sub_10013D588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  int v51;

  v49 = 1130658149 * ((v48 - 176) ^ 0xCD3CB9CD);
  *(_DWORD *)(v48 - 172) = v49 + v44 - 9080;
  *(_DWORD *)(v48 - 168) = 381450761 - v49;
  *(_QWORD *)(v46 + 3312) = a44;
  v50 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v45 + 8 * (v44 ^ 0x8BF3)) - 525180355))(v48 - 176);
  v51 = *(_DWORD *)(v48 - 176);
  LODWORD(STACK[0x264]) = v51;
  LODWORD(STACK[0x234]) = v47;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a36
                                                      + 8
                                                      * (int)(((((-117 * (v44 ^ 0x36) + 1) ^ (v51 == 381450761)) & 1)
                                                             * (((v44 ^ 0x8036) - 1698809196) ^ 0x9ABE3AF0)) ^ v44))
                                          - 8))(v50);
}

uint64_t sub_10013D658()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x9FE5))
                                                                     - (v0 + 1224)
                                                                     + 2602))(385, 1746, 25104, 11219);
}

uint64_t sub_10013D710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  int v46;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))(*(_QWORD *)(a37
                                                                                         + 8
                                                                                         * (((a32 & 0x5934BFDF ^ 0xE38)
                                                                                           * (v46 == 2134650451)) ^ (a36 + 1698835288)))
                                                                             - ((7000 * (a36 ^ 0x9ABE3A9C)) ^ 0x36B8)))(a1, a2, a3, a4, &a46);
}

uint64_t sub_10013D78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v25;
  uint64_t v26;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 + 8 * (v25 ^ 0x9F0E)) - ((v25 + 1201) ^ 0xA3ALL)))(a1, a2, a3, a4, (v25 + 1201), a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_10013D7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((a5 ^ 0x7F43) + a5)) - 12))();
}

uint64_t sub_10013D7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v34;
  int v35;

  LODWORD(a34) = v35;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 + 8 * (int)a6) - 4))(a1, a2, a3, a4, ((v35 - 381450753) ^ 0xBFEEB6FF) + (a6 ^ 0x5F3DDC6A), a6, a7, 3313747746, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_10013D864()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_10013DA44@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,uint64_t a31)
{
  int v31;
  int v32;
  int v33;

  return ((uint64_t (*)(void))(*(_QWORD *)(a31
                                        + 8
                                        * ((((3 * (((a3 + a30 - 2816) | a1) ^ a2)) ^ v31) * (v32 != v33)) ^ (a30 + 1698835280)))
                            - 8))();
}

uint64_t sub_10013DA98(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  int v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v6 ^ a4 ^ ((v6 == -1144316101) * a3)))
                            - ((v5 + v6 + 1279) ^ 0x9ABE3A9ALL)))();
}

uint64_t sub_10013DAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(void))
{
  return a33();
}

uint64_t sub_10013DB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,uint64_t a36)
{
  int v36;

  return ((uint64_t (*)(void))(*(_QWORD *)(a36 + 8 * (v36 + a35 - 342)) - 8))();
}

uint64_t sub_10013DB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unsigned int *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,uint64_t a37)
{
  int v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  BOOL v43;
  int v44;
  int v45;
  int v46;

  v39 = a5 >> ((a25 & 0x6Fu) - 40);
  v40 = *(_DWORD *)(v38 + 4 * ((0x9F824282 % v39) & 0x3FFFFFFC));
  v41 = *a30;
  v42 = *(_DWORD *)(a29 + 4 * v41);
  LODWORD(v39) = (unsigned __int16)~*(_WORD *)(v38 + 4 * (unsigned __int16)(v40 & (v39 - 1))) & (~v40 >> 16);
  v43 = (_DWORD)v39 == 0;
  v44 = v39 + v39 * v42;
  v45 = v43;
  if (v43)
    v46 = *(_DWORD *)(a29 + 4 * v41);
  else
    v46 = 0;
  *(_DWORD *)(a29 + 4 * v41) = (v46 + v44) * v42;
  *a30 = ((int)v41 + 1) % 6u;
  return ((uint64_t (*)(void))(*(_QWORD *)(a37 + 8 * ((231 * v45) ^ (v37 + a36 - 373))) - 8))();
}

uint64_t sub_10013DC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  int v63;
  _BOOL4 v64;

  v60 = 376 * (a8 ^ (v56 + 3839));
  v61 = v58 + v60 + 2055 * (a8 ^ (v56 + 3838)) + 1939912100;
  v62 = (v59 + a30);
  v63 = (v62 < 0x8A5D6A1F) ^ (v61 < 0x8A5D6A1F);
  v64 = v61 < v62;
  if (v63)
    v64 = v62 < 0x8A5D6A1F;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * ((33881 * v64) ^ (v57 + (int)a8 - 373))) - 8))(a1, a2, a3, a4, v60, v62, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_10013DCC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 + 8 * ((int)a5 + 30051)) - 12))(a1, a2, a3, a4, a5, ((_DWORD)a5 - 991119953) & 0x3B1361DE, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_10013DD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;

  LODWORD(STACK[0x264]) = v32 + 1836481953;
  *(_QWORD *)(v33 + 336) = (char *)&STACK[0x268]
                         + (~a8 | 0xEEC6B44E494179BBLL)
                         + (a8 | 0x11394BB1B6BE8644)
                         + ((2 * a8) ^ 0xDD8D689C9282F377)
                         + 1;
  LODWORD(STACK[0x268]) = &STACK[0x268]
                        + (~a8 | 0xEEC6B44E494179BBLL)
                        + (a8 | 0x11394BB1B6BE8644)
                        + ((2 * a8) ^ 0xDD8D689C9282F377)
                        + 405155125;
  LODWORD(STACK[0x27C]) = 387119267;
  STACK[0x280] = 387119267;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * (int)((v32 + 1836481953) ^ 0x8342D7E ^ (31 * (((3864 - (v31 + v32)) | (v31 + v32 - 3864)) >> 31)))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_10013DDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  int v40;
  uint64_t v41;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 + 8 * (v40 + v39 - 931)) - 8))(0x4F5CBE3DE4BF2D58, 20, a39);
}

uint64_t sub_10013DEA4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;
  _BOOL4 v7;

  v7 = ((((v4 ^ a2) & a2) >> (__clz(v4 ^ a2 | 1) ^ 0x1F)) & 1) == 0 || *(_QWORD *)(a3 + 8) == a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((2 * v7) | (32 * v7) | v3)) - 8))();
}

uint64_t sub_10013DF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  LODWORD(STACK[0x27C]) = v35;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39
                                                                                                  + 8 * (a35 + 1698847395)))(a1, a2, a3, a4, v36, v37, v38);
}

uint64_t sub_10013DF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v59;
  int v60;
  uint64_t v61;

  LODWORD(STACK[0x228]) = 5;
  STACK[0x22C] = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * (v60 + v59 + 985)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_10013DFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v60;
  uint64_t v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v67 = LODWORD(STACK[0x228]);
  v68 = ((int)(*(_DWORD *)(*(_QWORD *)(v65 + 8 * (v60 + 2181)) + 4 * v67 + v61) << 31) >> 31) & v64;
  LODWORD(STACK[0x228]) = v67 - 1;
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 8 * ((((int)((v67 - v60) | (v60 - v67)) >= 0) * v63) ^ v62)))((v67 - v60), v64 & 0xFFFFFFFE, v68, v68 & 1, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_10013E04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a69;
  unsigned int v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;

  v73 = *a6;
  v74 = *(_DWORD *)(a7 + 4 * v73);
  v75 = (a69 + LODWORD(STACK[0x264])) ^ LODWORD(STACK[0x264]);
  v76 = v75 + v75 * v74;
  if (v75)
    v77 = 0;
  else
    v77 = *(_DWORD *)(a7 + 4 * v73);
  *(_DWORD *)(a7 + 4 * v73) = (v76 + v77) * v74;
  *a6 = ((int)v73 + 1) % 6u;
  v78 = *(_DWORD *)(a5 - 0x56481F36160250F9);
  v79 = ((2 * *(unsigned __int8 *)(a5 - 0x56481F36160250F5)) & 0xFF7F)
      + ((v69 - 1820) ^ 0xF5FF4782 ^ *(unsigned __int8 *)(a5 - 0x56481F36160250F5));
  *v70 = 17;
  v70[2] ^= 4u;
  v70[4] = (v70[4] | 0x3C) - 2 * ((v70[4] & 1 | 0x76) ^ (v70[4] | 0x7E)) + 8;
  LODWORD(a35) = v78 - 2134650450;
  *(_QWORD *)(v71 + 288) = 1490860001;
  LODWORD(STACK[0x234]) = 86008376;
  LODWORD(STACK[0x238]) = 831247218;
  LODWORD(a34) = v79 + 2025650702 + ((2 * v79 + 25050) & 0x19240 ^ 0xFE67FFFF);
  LODWORD(STACK[0x23C]) = a34;
  LODWORD(STACK[0x24C]) = -219947003;
  LODWORD(STACK[0x250]) = 113860039;
  LODWORD(a32) = -2109695640;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 + 8 * v69) - 4))(86008376, a2, 831247218, 110434, a5, a6, a7, 155352, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           v70 - 1490860000,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a5 - 0x56481F36160250F9,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_10013E220@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, uint64_t a5@<X6>, int a6@<W7>, unsigned int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,uint64_t a32,uint64_t a33,unsigned int a34)
{
  int v34;
  unsigned int v35;
  __int16 v36;
  __int16 v37;
  int v38;
  uint64_t v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  unint64_t v45;
  int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  uint64_t v64;
  unsigned int v65;
  unsigned int v66;
  uint64_t v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  HIDWORD(v45) = a2 ^ 0x51BC;
  LODWORD(v45) = a2 ^ 0x8EC40000;
  v46 = *(unsigned __int8 *)(a20 + a7 % 0x19) ^ 8;
  v47 = (unsigned __int16)(a1 - 30645) - 379443917 - ((2 * (a1 - 30645)) & 0x4A66);
  v48 = ((v46 + 1050513546 - ((2 * v46) & 0x114)) ^ 0x3E9D908A) << ((a1 + 126 - ((2 * (a1 + 75)) & 0x66)) ^ 0x33);
  v49 = ((v45 >> 15) - ((2 * (v45 >> 15)) & 0x71DD38BC) + v38 - 1192351772) ^ v34 ^ (v48 - (a31 & (2 * v48)) - 1054847820);
  v50 = (v49 ^ 0x3D53054) - (v49 ^ 0x3D53054u) / 0xFFF1 * a6;
  v51 = ((((2 * v50) & 0x1B7FE) + (v50 ^ 0xBFDFDBFF)) * a3 + 318346306) % v35;
  v52 = v51 ^ 0x7F6FF8FE;
  v53 = (2 * v51) & 0x3F1FC;
  v54 = (unsigned __int16)(v36 - 6647) | (((unsigned __int16)(v36 - 6647) < 0x2605u) << 16);
  v55 = (v52
       + (((5 * (v41 ^ v44)) ^ 0xC0439084)
        - ((10 * (v41 ^ v44)) & 0x5EF6)
        + ((4 * v47) ^ 0x94D0BCBD)
        + ((8 * v47) & 0xFAF18 ^ 0xFFFED6E7)
        - 3 * (v54 + 2103645120))
       * v40
       + v53
       + 1427136834)
      % v35;
  v56 = (4099
       * ((((v49 ^ 0x3D53054u) / v35) ^ 0xF9FAF7A7)
        + (a4 + ((26 * (v47 ^ 0xE9622533)) & 0x6FF7FE) + ((13 * (v47 ^ 0xE9622533)) ^ 0x7FF7FBFF)) * v40
        + ((2 * ((v49 ^ 0x3D53054u) / v35)) & 0x1EF4E))
       - 681733658)
      % v35;
  v57 = (v56 + 1765337682 - ((2 * v56) & 0x1D4A4)) ^ 0x6938EA52;
  v58 = (((14 * (v47 ^ 0xE9622533)) & 0x1BBCF8) + ((7 * (v47 ^ 0xE9622533)) ^ 0x7CEDDE7C) - 2095963772) % 0x43;
  v59 = (4099
       * ((((v49 ^ 0x3D53054u) % 0xF1FD) ^ 0x7CFFFABF)
        + (((2 * (4 * (v54 + 2103645120) + 175315180)) & 0x1FE6C5F8)
         + ((4 * (v54 + 2103645120) + 175315180) ^ 0xFF362FC)
         + (v58 ^ 0x33DE7EDF)
         + ((2 * v58) & 0xBE))
        * v40
        + ((2 * ((v49 ^ 0x3D53054u) % 0xF1FD)) & 0x1F57E))
       - 2023191099)
      % v35;
  v60 = (v59 - 17080827 - ((2 * v59) & 0x2BC0A)) ^ 0xFEFB5E05;
  v61 = ((v60 << (36 - v54)) - 825471057 - ((2 * (v60 << (36 - v54))) & 0x9D989F5E)) ^ 0xCECC4FAF | ((v60 >> (v54 - 4)) - 903274319 - ((2 * (v60 >> (v54 - 4))) & 0x14524162)) ^ 0xCA2920B1;
  v62 = (v55 - ((2 * v55) & 0x1DDAC) - 1661276458) ^ v49 ^ (v57 * a6 - ((v57 * v42) & 0x6B0D6E00) + 898021120) ^ (v61 - ((2 * v61) & 0x2F942512) - 1748364663);
  v63 = (((unsigned __int16)(v36 - 16376) % 0x13u) ^ 0xCFF7)
      + 12300
      + ((2 * ((unsigned __int16)(v36 - 16376) % 0x13u)) & 0x2E);
  v64 = ((unsigned __int16)v63 - 1228671727 - ((2 * v63) & 0x1EA22)) ^ 0xB6C3F511;
  v65 = (v62 ^ 0x3D637B0Bu) >> ((v63 + 17 - ((2 * v63) & 0x22)) ^ 0x11);
  v66 = (v43 + (((v62 ^ 0x3D637B0Bu) % 0x829) ^ 0x39AFFEF8) + ((2 * ((v62 ^ 0x3D637B0Bu) % 0x829)) & 0x1DF0) - 1081695423)
      % a34;
  v67 = (v66 ^ 0x32FDFFA7) - 269222912 + ((2 * v66) & 0x65FBFF4E);
  v68 = (18351 * (unsigned __int16)(v37 + 18464)) >> 16;
  v69 = (unsigned __int16)(v37 + 18464 - v68) & 0xFFFE;
  v70 = (unsigned __int16)(v37 + 18464 - 25 * ((v68 + (v69 >> 1)) >> 4));
  v71 = *(unsigned __int8 *)(a20 + v70);
  *(_BYTE *)(a20 + v70) = *(_BYTE *)((v67 | ((unint64_t)(v67 < 0x22F1FBA7) << 32)) + v39 - 586283939) ^ v71 ^ (v65 - ((2 * v65) & 0xD6) - 21) ^ 0xEB;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 + 8 * v38) - 8))(a1, 4294957564, v64, 19, v71, v69, a5, 155352, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_10013E850(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;

  v9 = (((v6 + v4 + 3) % 0x11u) ^ 0xEEFDEEFF) + 2 * ((v6 + v4 + 3) % 0x11u) + 371356471;
  v10 = ((a3 + 4) ^ 0x3DE3DD7F) - 1038343551 + ((2 * (a3 + 4)) & 0x7BC7BAFE);
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8
                                                                                + 8
                                                                                * (v7 ^ (201 * (v5 == 1490860296))))
                                                                    - 4))(v9, a2, ((v10 - v10 / 0x13 * a4) ^ 0x1A3F7FFC) + 390878066 + ((2 * (v10 - v10 / 0x13 * a4)) & 0x38), 110434);
}

uint64_t sub_10013E990@<X0>(int a1@<W0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,int a30)
{
  int v30;
  int v31;
  int v32;

  v31 = ((unsigned __int16)(a1 - 25140) ^ 0x3EBB3B9F) + ((2 * (a1 + 40396)) & 0x773E);
  v32 = ((1651611015 - v30 - ((227720076 - 2 * v30) & 0xB7506F82)) ^ 0x5BA837C1) + a30;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(((v32 ^ 0xAFE7FFB9) + 1977565184 + ((2 * v32) & 0x5FCFFF72) < 0x25C73FB9)
                                                     + 8 * ((87 * (a28 != 1305463072)) ^ a2))
                                         - 4))(((2 * ((v31 - 1052457884) % 0x11u - 2 * (((v31 - 1052457884) % 0x11u) & 1) + 15553)) & 0x696E ^ 0x6902)+ (((v31 - 1052457884) % 0x11u - 2 * (((v31 - 1052457884) % 0x11u) & 1) + 15553) ^ 0x4B76));
}

uint64_t sub_10013EE08@<X0>(__int16 a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unsigned int a36)
{
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  int v44;
  char v45;
  int v46;
  unint64_t v47;
  unsigned int v48;
  int v49;
  int v50;
  uint64_t v51;
  int v52;
  int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  uint64_t v59;
  unsigned int v60;
  unsigned int v61;
  int v62;

  HIDWORD(v47) = a3 ^ 0xC451BC;
  LODWORD(v47) = a3 ^ 0x8FFFFFFF;
  v48 = (unsigned __int16)(a1 + ((a6 - 29793) | 0x1F40) - 8578);
  v49 = *(unsigned __int8 *)(a22
                           + (((a9 / 3) ^ 0xB7ADFEC5)
                            + (((v44 - 113860039) % a36) ^ 0xFD9FF65D)
                            + ((2 * (a9 / 3)) & 0x6F5BFD8A)
                            + ((2 * ((v44 - 113860039) % a36)) & 0xFB3FECBA)
                            + 1253182174)
                           % ((int)v40 - 1490860000));
  v50 = (unsigned __int16)(v39 - 16380) - 1228671727 - ((2 * (v39 - 16380)) & 0x1EA22);
  v51 = v50 ^ 0xB6C3F511;
  v52 = (((v49 ^ 8) + 90013783 - ((2 * v49) & 0xAE)) ^ 0x55D8057) << (v50 ^ 0x11);
  v53 = ((v47 >> 25) - ((2 * (v47 >> 25)) & 0x3960791A) + 481311885) ^ v36 ^ (v52 - ((2 * v52) & 0xABA6B510) + 1439914632);
  v54 = (((((v53 ^ 0x337886BB) - (v53 ^ 0x337886BBu) / 0xFFF1 * a8) * v37) & 0x4F7B6FF0)
       + ((((v53 ^ 0x337886BB) - (v53 ^ 0x337886BBu) / 0xFFF1 * a8) * a4) ^ 0x27BDB7F8)
       - 666744824)
      % v38;
  v55 = (v48 | ((v48 < 0x758C) << 16)) + 37657484;
  v56 = ((v54 ^ 0x5FE3BBC5)
       + (((5 * (v42 ^ v46)) ^ 0xE70A1480)
        - ((10 * (v42 ^ v46)) & 0x56FE)
        + ((4 * v50) ^ 0x760CD065)
        + ((8 * v50) & 0x1F9F7B8 ^ 0xFFE65F77)
        - 3 * v55)
       * v41
       + ((2 * v54) & 0x3778A)
       + 2116633548)
      % v38;
  v57 = (v53 ^ 0x337886BBu) / v38;
  v58 = a5 + ((26 * v51) & 0x3F5DE58) + ((13 * v51) ^ 0xF9FAEF2C);
  v59 = (v43 - 260) & (2 * v57);
  v60 = (4099 * ((v57 ^ 0x7A4FFF6F) + v58 * v41 + v59) - 173183109) % v38;
  v61 = ((2 * v60) & 0x3F5EA) + (v60 ^ 0xEDD1FAF5);
  v62 = (v56 - ((2 * v56) & 0xDE36) - 2131071205) ^ v53 ^ (v61 * a8 - ((v61 * v43 + 145844406) & 0xDF16EF0) + 2068933587);
  *(_BYTE *)(a34 + v40) = v45 ^ 0xA5 ^ (((v62 ^ 0x357A5ED8u) >> (v55 - 24))
                                      - ((2 * ((v62 ^ 0x357A5ED8u) >> (v55 - 24))) & 0x5A)
                                      - 83);
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 + 8 * (int)a6) - 8))(-((v61 * v43 + 145844406) & 0xDF16EF0), a2, v51, 19, v59, a6, a7, 155352, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_10013F218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5, uint64_t a6, uint64_t a7, _BYTE *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v53;
  char v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t (*v58)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v39 = (v36 + 1698846869);
  v40 = v36 + 1698846881;
  v37[45] = 0;
  LOBYTE(STACK[0x69F]) = a5[15] ^ 8;
  v41 = a5[14];
  v37[47] = &STACK[0x69F];
  v37[48] = &STACK[0x69E];
  LOBYTE(STACK[0x69E]) = v41 ^ (v36 + 106);
  LOBYTE(STACK[0x69D]) = a5[13] ^ 8;
  v42 = a5[12];
  v37[49] = &STACK[0x69D];
  v37[50] = &STACK[0x69C];
  LOBYTE(STACK[0x69C]) = v42 ^ 8;
  LOBYTE(STACK[0x69B]) = a5[11] ^ 8;
  v43 = a5[10];
  v37[24] = &STACK[0x69B];
  v37[25] = &STACK[0x69A];
  LOBYTE(STACK[0x69A]) = v43 ^ 8;
  LOBYTE(STACK[0x699]) = a5[9] ^ 8;
  v44 = a5[8];
  v37[26] = &STACK[0x699];
  v37[27] = &STACK[0x698];
  LOBYTE(STACK[0x698]) = v44 ^ 8;
  LOBYTE(STACK[0x697]) = a5[7] ^ 8;
  v45 = a5[6];
  v37[29] = &STACK[0x697];
  v37[30] = &STACK[0x696];
  LOBYTE(STACK[0x696]) = v45 ^ 8;
  v46 = a5[5];
  v37[31] = &STACK[0x695];
  LOBYTE(STACK[0x695]) = v46 ^ 8;
  v47 = a5[4];
  v37[20] = &STACK[0x694];
  LOBYTE(STACK[0x694]) = v47 ^ 8;
  LOBYTE(STACK[0x693]) = a5[3] ^ 8;
  LOBYTE(STACK[0x692]) = a5[2] ^ 8;
  LOBYTE(STACK[0x691]) = a5[1] ^ 8;
  LOBYTE(STACK[0x690]) = *a5 ^ 8;
  LOBYTE(STACK[0x67F]) = a8[15] ^ 8;
  LOBYTE(STACK[0x67E]) = a8[14] ^ 8;
  LOBYTE(STACK[0x67D]) = a8[13] ^ 8;
  LOBYTE(STACK[0x67C]) = a8[12] ^ 8;
  LOBYTE(STACK[0x67B]) = a8[11] ^ 8;
  LOBYTE(STACK[0x67A]) = a8[10] ^ 8;
  LOBYTE(STACK[0x679]) = a8[9] ^ 8;
  LOBYTE(STACK[0x678]) = a8[8] ^ 8;
  v48 = a8[7] ^ 8;
  v49 = a8[6] ^ 8;
  v50 = a8[5] ^ 8;
  v51 = a8[4] ^ 8;
  v53 = a8[3] ^ 8;
  v54 = a8[2] ^ 8;
  v55 = a8[1] ^ 8;
  v56 = *a8 ^ 8;
  v57 = v37[45];
  LOBYTE(STACK[0x677]) = v48;
  v58 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * v40);
  LOBYTE(STACK[0x676]) = v49;
  LOBYTE(STACK[0x675]) = v50;
  LOBYTE(STACK[0x674]) = v51;
  LOBYTE(STACK[0x673]) = v53;
  LODWORD(a34) = v39 - 670;
  LOBYTE(STACK[0x672]) = v54;
  LOBYTE(STACK[0x671]) = v55;
  LOBYTE(STACK[0x670]) = v56;
  STACK[0x288] = v57 + 176;
  STACK[0x240] = 263496046;
  return v58(v58, 263496046, a3, a4, v39, 2085559214, &STACK[0x670], ((_DWORD)v39 - 670) ^ 0x6Au, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_10013F4E0@<X0>(uint64_t a1@<X1>, int a2@<W4>, unsigned int a3@<W5>, uint64_t a4@<X6>, int a5@<W7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  unsigned int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;

  v51 = v34 - (a6 & 0xF89E3758);
  v52 = *(unsigned __int8 *)(a4 + (v51 ^ a3));
  v53 = *(unsigned __int8 *)(a4 + (v51 ^ v39));
  v54 = (v41 + ((v52 + a5 - (v40 & (2 * v52))) << 24)) ^ 0xF5000000;
  v55 = (((v53 - ((2 * v53) & 0xFFFFFFF3)) << 16) - 1507328 + v43) ^ v44;
  v56 = (v55 + 1410853126 - (v45 & (2 * v55))) ^ 0x5417E906 | (v54 + 1695103809 - (v42 & (2 * v54))) ^ 0x65093B41;
  v57 = *(unsigned __int8 *)(a4 + (v51 ^ (v39 - 3)));
  v58 = (v48 + ((v57 - (v47 & (2 * v57))) << 8)) ^ v48;
  v59 = (v56 - 43901823 - (v46 & (2 * v56))) ^ 0xFD621C81 | (v58 + 1303983125 - (v49 & (2 * v58))) ^ 0x4DB93415;
  v60 = *(unsigned __int8 *)(a4 + (v51 & 0xFFFFFFFC ^ v39));
  v61 = (v59 + 1661890054 - (v50 & (2 * v59))) ^ 0x630E6E06 | (v60 - 592391818 + (v37 | ~(2 * v60)) + 1) ^ 0xDCB0D176;
  *(_DWORD *)(v35 + 4 * a1) = v61 + 1463282489 - (v36 & (2 * v61));
  return (*(uint64_t (**)(void))(a34 + 8 * (((4 * (v38 != a1)) | (8 * (v38 != a1))) ^ a2)))();
}

uint64_t sub_10013F640(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int *a40)
{
  uint64_t v40;
  int v41;
  int v42;
  int v43;

  v40 = *(_QWORD *)(a36 + 8 * a34);
  STACK[0x240] = a2;
  v42 = *a40;
  v41 = a40[1];
  v43 = a40[3];
  LODWORD(STACK[0x294]) = a40[2];
  LODWORD(STACK[0x27C]) = v41;
  LODWORD(STACK[0x280]) = v43;
  LODWORD(STACK[0x284]) = v42;
  return ((uint64_t (*)(uint64_t))(v40 - 8))(3915);
}

uint64_t sub_10013F718(int a1, int a2, int a3, _DWORD *a4, int a5, uint64_t a6, char a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  int v45;
  int v46;
  uint64_t v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  unint64_t v58;
  uint64_t v59;
  int v60;
  int v61;

  v51 = *(_QWORD *)(v47 + 8 * v45) - 1223309771;
  v52 = *(unsigned __int16 *)(v51 + 2 * (BYTE2(v44) ^ 0x37u)) + v46;
  v53 = (((v52 - ((2 * v52) & 0x7068)) << 16) - 1204551680) ^ 0xB8340000;
  v54 = (v36
       + (((unsigned __int16)(*(_WORD *)(v51 + 2 * (BYTE1(v44) ^ 0xEBu)) + v46)
         - ((2 * (*(unsigned __int16 *)(v51 + 2 * (BYTE1(v44) ^ 0xEBu)) + v46)) & 0x1F64)) << 8)) ^ v36;
  v55 = (unsigned __int16)(*(_WORD *)(v51 + 2 * (v44 ^ 0x39u)) + v46)
      - ((2 * (*(unsigned __int16 *)(v51 + 2 * (v44 ^ 0x39u)) + v46)) & 0xD55C);
  v56 = *(unsigned __int16 *)(v51 + 2 * (HIBYTE(v44) ^ 0x57)) + v46;
  v57 = v38 + (unsigned __int16)v56 - ((2 * v56) & 0x15D5C) + 174;
  HIDWORD(v58) = v57 ^ 0xAE;
  LODWORD(v58) = v57 ^ v38;
  v59 = 4 * v40;
  v60 = a5 ^ *(_DWORD *)(*(_QWORD *)(v47 + 8 * a8) + 4 * ((unint64_t)(v40 - 744416491) >> a7) - 2018737479) ^ (v55 + 1784375982) ^ (v54 - ((2 * v54) & 0xC1720800) - 524745529) ^ (v53 - ((2 * v53) & 0x2C4C0000) + 371600002) ^ ((v58 >> 8) - (v48 & (2 * (v58 >> 8))) + v49) ^ v50;
  *a4 = v60;
  a4[1] = v60 ^ a2 ^ 0x5737EB39;
  v61 = v60 ^ a2 ^ a3;
  *(_DWORD *)(v42 + v59) = v61;
  *(_DWORD *)(v41 + v59) = *(_DWORD *)(v43 + 4 * v40) ^ 0x5737EB39 ^ v61;
  return ((uint64_t (*)(void))(*(_QWORD *)(a36 + 8 * (((v39 == v40) * a1) ^ v37)) - 8))();
}

uint64_t sub_10013F8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned __int8 *a65;
  unsigned int v65;
  unsigned int v66;
  int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;

  v65 = (((*a65 - ((2 * *a65) & 0xFFCF)) << 24) - 419430400) ^ 0xE7000000;
  v66 = (((*(unsigned __int8 *)STACK[0x218] - ((2 * *(unsigned __int8 *)STACK[0x218]) & 0x7C)) << 16) - 1925316608) ^ 0x8D3E0000;
  v67 = (v66 - ((2 * v66) & 0x5BCC0000) + 1843808388) ^ 0x6DE64884 | (v65 - (v65 >> 29 << 30) + 1619303550) ^ 0x60849C7E;
  v68 = (((*(unsigned __int8 *)STACK[0x210] - ((2 * *(unsigned __int8 *)STACK[0x210]) & 0xF2)) << 8) + 1606187264) ^ 0x5FBC7900;
  v69 = (v67 - ((2 * v67) & 0x89D4197C) + 1156189374) ^ 0x44EA0CBE | (v68 - ((2 * v68) & 0x48A2F800) + 1683061782) ^ 0x64517C16;
  v70 = (v69 - ((2 * v69) & 0x9B6EB0DC) + 1303861358) ^ 0x4DB7586E | (*(unsigned __int8 *)STACK[0x208]
                                                                    + 785288196
                                                                    + (~(2 * *(unsigned __int8 *)STACK[0x208]) | 0xFFFFFFF7)
                                                                    + 1) ^ 0x2ECE8C04;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a36 + 8 * a35) - 8))(v70 - ((2 * v70) & 0xE3A964A8) - 237718956);
}

uint64_t sub_10013FE54(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;

  v40 = v39 - (a5 & 0x30C96158);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a36
                                                     + 8
                                                     * (int)(v37 ^ 0x902F46C ^ (997
                                                                              * (((a4 - v37) | (v37 + a6)) >> 31))))
                                         - 4))(((*(_DWORD *)(a3
                                                             + 4
                                                             * ((((v40 ^ (v36 - 2))
                                                                + 275188074
                                                                - ((2 * (v40 ^ (v36 - 2))) & 0x20CE12D4u)) ^ 0x39FDFFFBD685DED5)
                                                              + ((2
                                                                * (((v40 ^ (v36 - 2))
                                                                  + 275188074
                                                                  - ((2 * (v40 ^ (v36 - 2))) & 0x20CE12D4)) ^ 0x1067096Au)) & 0x18DC5AF7ELL))
                                                             + 0x18080010E474A104) ^ v38) >> 24) ^ 0x28);
}

uint64_t sub_1001400A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  unsigned __int8 v36;
  int v37;
  uint64_t v38;
  __int16 v39;
  unsigned int v40;
  int v41;
  unsigned int v42;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a36 + 8 * v37) - 8))((*(_DWORD *)(*(_QWORD *)(v38 + 8 * (v37 - 21914)) - 346837558 + 4 * (((v37 + 1493650365) & 0xAFFAFF9F ^ 0x902AD66) & v41 ^ 0xE0)) ^ *(_DWORD *)(*(_QWORD *)(v38 + 8 * (v37 ^ 0x6A60)) - 1312225966 + 4 * v40)) ^ *(_DWORD *)(*(_QWORD *)(v38 + 8 * (v37 - 22561)) - 1789332111 + 4 * (HIBYTE(v39) ^ 0xEFu)) ^ *(_DWORD *)(*(_QWORD *)(v38 + 8 * (v37 - 21956)) - 921752394 + 4 * (v36 ^ v42)));
}

uint64_t sub_100140240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5, uint64_t a6, uint64_t a7, _BYTE *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, _QWORD, unint64_t *, _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v39 = v36 ^ 0x87268B3D;
  LOBYTE(STACK[0x69F]) = a5[15] ^ 8;
  v40 = a5[14];
  v37[47] = &STACK[0x69F];
  v37[48] = &STACK[0x69E];
  LOBYTE(STACK[0x69E]) = v40 ^ 8;
  LOBYTE(STACK[0x69D]) = a5[13] ^ 8;
  v41 = a5[12];
  v37[49] = &STACK[0x69D];
  v37[50] = &STACK[0x69C];
  LOBYTE(STACK[0x69C]) = v41 ^ 8;
  LOBYTE(STACK[0x69B]) = a5[11] ^ 8;
  v42 = a5[10];
  v37[24] = &STACK[0x69B];
  v37[25] = &STACK[0x69A];
  LOBYTE(STACK[0x69A]) = v42 ^ 8;
  LOBYTE(STACK[0x699]) = v36 ^ 0x3D ^ a5[9] ^ 0xAB;
  v43 = a5[8];
  v37[26] = &STACK[0x699];
  v37[27] = &STACK[0x698];
  LOBYTE(STACK[0x698]) = v43 ^ 8;
  LOBYTE(STACK[0x697]) = a5[7] ^ 8;
  v44 = a5[6];
  v37[29] = &STACK[0x697];
  v37[30] = &STACK[0x696];
  LOBYTE(STACK[0x696]) = v44 ^ 8;
  v45 = a5[5];
  v37[31] = &STACK[0x695];
  LOBYTE(STACK[0x695]) = v45 ^ 8;
  v46 = a5[4];
  v37[20] = &STACK[0x694];
  LOBYTE(STACK[0x694]) = v46 ^ 8;
  LOBYTE(STACK[0x693]) = a5[3] ^ 8;
  LOBYTE(STACK[0x692]) = a5[2] ^ 8;
  LOBYTE(STACK[0x691]) = a5[1] ^ 8;
  LOBYTE(STACK[0x690]) = *a5 ^ 8;
  LOBYTE(STACK[0x67F]) = a8[15] ^ 8;
  LOBYTE(STACK[0x67E]) = a8[14] ^ 8;
  LOBYTE(STACK[0x67D]) = a8[13] ^ 8;
  LOBYTE(STACK[0x67C]) = a8[12] ^ 8;
  v47 = a8[10] ^ 8;
  v48 = a8[9] ^ 8;
  v49 = a8[8] ^ 8;
  v50 = a8[7] ^ 8;
  v51 = a8[6] ^ 8;
  v52 = a8[5] ^ 8;
  v53 = a8[4] ^ 8;
  v54 = a8[3] ^ 8;
  v55 = a8[2] ^ 8;
  v56 = a8[1] ^ 8;
  LOBYTE(STACK[0x67B]) = a8[11] ^ 8;
  v57 = *a8 ^ 8;
  LOBYTE(STACK[0x67A]) = v47;
  v58 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, _QWORD, unint64_t *, _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8 * (v36 + 1698818163)) - 8);
  LOBYTE(STACK[0x679]) = v48;
  LOBYTE(STACK[0x678]) = v49;
  LODWORD(a35) = v39 + 959481946;
  LOBYTE(STACK[0x677]) = v50;
  LOBYTE(STACK[0x676]) = v51;
  LOBYTE(STACK[0x675]) = v52;
  LOBYTE(STACK[0x674]) = v53;
  LOBYTE(STACK[0x673]) = v54;
  LOBYTE(STACK[0x672]) = v55;
  LOBYTE(STACK[0x671]) = v56;
  LOBYTE(STACK[0x670]) = v57;
  STACK[0x288] = 496546207;
  return v58(v39, 492, -496546207, &STACK[0x7C0], 496546208 - v39, (v39 - 410281899), &STACK[0x670], a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_100140518@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _DWORD *a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;

  v51 = v38 - (a8 & a6);
  v52 = *(unsigned __int8 *)(a7 + (v51 ^ v39));
  v53 = *(unsigned __int8 *)(a7 + (v51 ^ (v39 + 1)));
  v54 = (((v52 - ((2 * v52) & 0xFFFFFFE3)) << 24) - 251658240) ^ v40;
  v55 = (((v53 - ((2 * v53) & 0xFFFFFF9F)) << 16) - 983040 + v42) ^ v43;
  v56 = (v55 - 1707300164 - (v44 & (2 * v55))) ^ 0x9A3CAABC | (v54 + 1113104097 - (v41 & (2 * v54))) ^ 0x42589EE1;
  v57 = *(unsigned __int8 *)(a7 + (v51 ^ (v39 + 2)));
  v58 = (v47 + ((v57 - (v46 & (2 * v57))) << 8)) ^ v47;
  v59 = (v56 - 1851580029 - (v45 & (2 * v56))) ^ 0x91A32183 | (v58 + 1349814965 - (v48 & (2 * v58))) ^ 0x50748AB5;
  v60 = *(unsigned __int8 *)(a7 + (v51 ^ (v39 + 3)));
  v61 = (v59 + 556778716 - (v49 & (2 * v59))) ^ 0x212FC4DC | (v60 + 889793014 - (a2 & (2 * v60))) ^ 0x350929F6;
  *a4 = v61 - 844139853 - (v37 & (2 * v61));
  return ((uint64_t (*)(void))(*(_QWORD *)(a36 + 8 * (v50 ^ (((a5 | (a3 - 1 + a1)) >= 0) * v36))) - 8))();
}

uint64_t sub_100140684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unsigned int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int *a40)
{
  int v40;

  STACK[0x288] = -a3;
  v40 = *a40;
  LODWORD(STACK[0x280]) = STACK[0x7CC];
  LODWORD(STACK[0x284]) = v40;
  STACK[0x240] = 919570611;
  return (*(uint64_t (**)(int *, int *, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a36 + 8 * (int)(a35 ^ 0x56C97FA0 ^ (15504 * (a35 < 0x87C930EB)))))(a40 - 919570606, a40 - 919570607, 207855520, ((a35 - 1503279870) & 0x2D17BCD) - 26984, 1559150535, 919570647, ((a35 - 1503279870) & 0x2D17BCD) - 28738, 462, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_1001407A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, int a7@<W6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37)
{
  int v37;
  uint64_t v38;
  int v39;
  unsigned int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  unsigned int v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;

  v51 = *(_QWORD *)(v38 + 8 * a7) + 4 * (BYTE2(v44) ^ 0xAFu);
  v52 = *(_QWORD *)(v38 + 8 * v46) + 4 * ((v44 >> a36) ^ 0x72u);
  v53 = (unsigned __int16)(*(_WORD *)(*(_QWORD *)(v38 + 8 * v47) + 2 * (v44 ^ 0xB3u) - 1817532027)
                         - 1293)
      - ((2
        * (*(unsigned __int16 *)(*(_QWORD *)(v38 + 8 * v47) + 2 * (v44 ^ 0xB3u) - 1817532027) - 1293)) & 0x13D06);
  v54 = *(unsigned __int8 *)(*(_QWORD *)(v38 + 8 * v37) + (HIBYTE(v44) ^ v49) + v50) - 14;
  v55 = v41 ^ *(_DWORD *)(*(_QWORD *)(v38 + 8 * a4) + ((v48 - 919570611) & 0xFFFFFFFFFFFFFFFCLL) - 1402924183) ^ *(_DWORD *)(v51 - 972053759) ^ *(_DWORD *)(v52 - 1153951795) ^ (v54 - (v39 & (2 * v54)) + a3) ^ (v53 + 1833541251) ^ a5;
  v56 = 4 * v48;
  *(_DWORD *)(a2 + v56) = v55;
  LODWORD(v51) = v55 ^ *(_DWORD *)(v42 + 4 * ((v48 - 738107336) + a9));
  *(_DWORD *)(a1 + v56) = v51 ^ 0xCDAF72B3;
  LODWORD(v51) = v51 ^ *(_DWORD *)(v42 + 4 * ((v48 - 738107335) + a9));
  *(_DWORD *)(v45 + v56) = v51;
  *(_DWORD *)(v43 + v56) = *(_DWORD *)(v42 + 4 * ((v48 - 738107334) + a9)) ^ 0xCDAF72B3 ^ v51;
  return (*(uint64_t (**)(void))(a37 + 8 * (((a6 == v48) * a8) ^ v40)))();
}

uint64_t sub_100140918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v59;
  int v60;
  unint64_t v61;
  uint64_t v62;

  v62 = *(_QWORD *)(a36 + 8 * (int)a35);
  STACK[0x240] = v61;
  LODWORD(STACK[0x284]) = v59;
  LODWORD(STACK[0x280]) = v60;
  LODWORD(a33) = a35 ^ 0x2E9C;
  LODWORD(a32) = a35 ^ 0x258A;
  HIDWORD(a31) = a35 ^ 0x2BFB;
  LODWORD(a30) = a35 ^ 0x2BF6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 - 8))(a1, 11254, a3, v62 - 8, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           (a35 + 3573),
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_1001409AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31,int a32,int a33,int a34,int a35,int a36,uint64_t a37,int a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  int v64;
  int v65;
  uint64_t v66;

  v46 = v44
      + 4
      * (((v42 - (v39 & 0x88DCCEEE)) & 0xFFFFFFFE ^ 0x1DCBF16F939B9098)
       + ((2 * (v42 - (v39 & 0x88DCCEEE))) & 0xAFEBEFDC ^ 0x88C8CECELL));
  v47 = *(unsigned int *)(v46 - 0x772FC5BD5FD7DFBCLL);
  v48 = (v40 | 2) - 640324305 + (v41 & 0xB3AADA58 ^ 0xFFFFFFFB);
  v49 = v44
      + 4 * ((v48 & 0xFFFFFFFC ^ 0x33FB57DF300407C9) + ((2 * v48) & 0x1D3A2D5C8 ^ 0x193A2D04CLL));
  v50 = *(unsigned int *)(v49 + 0x3012A08058BA5464);
  v51 = (v40 | 3) - (v41 & 0x318F77B8) + 415742940;
  v52 = v44 + 4 * ((v51 ^ 0x3FDF7AFF07384443) + ((2 * (_DWORD)v51) & 0x3FFFFF3E ^ 0x318F7738));
  v53 = *(unsigned int *)(v52 + 0x82140380000184);
  v54 = (char *)*(&off_10112C750 + a36) - 1047250598;
  v55 = (char *)*(&off_10112C750 + a34) - 2077170134;
  v56 = (char *)*(&off_10112C750 + a33) - 649917351;
  v57 = (char *)*(&off_10112C750 + a30) - 243691602;
  v58 = *(_DWORD *)&v54[(v47 >> 22) & 0x3FC ^ 0x334];
  v59 = *(_DWORD *)&v55[4 * (BYTE2(v47) ^ 0xAFLL)];
  v60 = *(unsigned int *)&v56[4 * (BYTE1(v47) ^ 0x72)];
  v61 = *(unsigned int *)&v54[(v50 >> 22) & 0x3FC ^ 0x334];
  v62 = *(_DWORD *)&v54[((unint64_t)*(unsigned int *)(v44 + 4 * v40) >> 22) & 0x3FC ^ 0x334] ^ v45 ^ *(_DWORD *)&v55[4 * (BYTE2(*(_DWORD *)(v44 + 4 * v40)) ^ 0xAFLL)] ^ *(_DWORD *)&v56[4 * (BYTE1(*(_DWORD *)(v44 + 4 * v40)) ^ 0x72)] ^ *(_DWORD *)&v57[4 * (*(_DWORD *)(v44 + 4 * v40) ^ 0xB3)];
  v63 = *(_DWORD *)&v55[4 * (BYTE2(v50) ^ 0xAFLL)];
  v64 = *(_DWORD *)&v56[4 * (BYTE1(v50) ^ 0x72)];
  v65 = *(_DWORD *)&v54[(v53 >> 22) & 0x3FC ^ 0x334];
  LODWORD(v54) = *(_DWORD *)&v55[4 * (BYTE2(v53) ^ 0xAFLL)];
  LODWORD(v55) = *(_DWORD *)&v56[4 * (BYTE1(v53) ^ 0x72)];
  LODWORD(v47) = *(_DWORD *)&v57[4 * (*(_DWORD *)(v46 - 0x772FC5BD5FD7DFBCLL) ^ 0xB3)];
  LODWORD(v56) = *(_DWORD *)&v57[4 * (*(_DWORD *)(v49 + 0x3012A08058BA5464) ^ 0xB3)];
  v66 = *(_DWORD *)(v52 + 0x82140380000184) ^ 0xB3;
  LODWORD(v57) = *(_DWORD *)&v57[4 * v66];
  *(_DWORD *)(v44 + 4 * v40) = v62;
  *(_DWORD *)(v46 - 0x772FC5BD5FD7DFBCLL) = v58 ^ v45 ^ v59 ^ v60 ^ v47;
  *(_DWORD *)(v49 + 0x3012A08058BA5464) = v61 ^ v45 ^ v63 ^ v64 ^ v56;
  *(_DWORD *)(v52 + 0x82140380000184) = v65 ^ v45 ^ v54 ^ v55 ^ v57;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a39 + 8 * ((916 * (v43 == 0)) ^ a38)) - 8))(4 * v40, v60, 175, v52, 114, v61, v66, 179, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_100140CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a36 + 8 * a29) - 4))(2220647847, 2684354640, 4294967287);
}

uint64_t sub_10014126C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v60;
  int v61;
  int v62;
  int v63;
  unsigned int v64;
  uint64_t v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  uint64_t v71;

  v67 = a1 - (a2 & 0x8B8CAF8);
  v68 = *(_DWORD *)(v65
                  + 4
                  * ((((v67 ^ (v61 + 1)) - 894182840 + ((2 * (v67 ^ (v61 + 1))) & 0x9567B494 ^ 0xFFFFFFFB) + 1) ^ 0x2B9EC6FE311DB6F2)
                   + ((2
                     * (((v67 ^ (v61 + 1)) - 894182840 + ((2 * (v67 ^ (v61 + 1))) & 0x9567B494 ^ 0xFFFFFFFB) + 1) ^ 0xCAB3DA48)) & 0x1F75CD974))
                  + 0x5184E40411464D18) ^ v66;
  v69 = *(_DWORD *)(v65
                  + 4
                  * ((((v67 ^ v61) - 625924715 - ((2 * (v67 ^ v61)) & 0xB5624B2A)) ^ 0x2AF5BE972C46AE6ELL)
                   + ((2 * (((v67 ^ v61) - 625924715 - ((2 * (v67 ^ v61)) & 0xB5624B2A)) ^ 0xDAB12595)) & 0x1EDEF17F6))
                  + 0x542905A02421D014) ^ v60;
  HIDWORD(v71) = HIWORD(v68);
  HIDWORD(a41) = v68 >> 8;
  LODWORD(a38) = HIWORD(v69);
  LODWORD(v71) = HIBYTE(v69) ^ 0x9D;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a36 + 8 * (((2 * ((_DWORD)a3 == 0)) | (4 * ((_DWORD)a3 == 0))) ^ v63)))(a1, a2, a3, v62 ^ ((*(_DWORD *)(v65+ 4* ((((v67 ^ (v61 + 2)) + 292088178 - ((2 * (v67 ^ (v61 + 2))) & 0x22D1D2E0u)) ^ 0x3B6AFFFB6A361E02)+ ((2* (((v67 ^ (v61 + 2)) + 292088178 - ((2 * (v67 ^ (v61 + 2))) & 0x22D1D2E0)) ^ 0x1168E972)) & 0xF6BDEEE0))+ 0x1254001212842240) ^ v64) >> 24), a36, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           v71,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_100141490(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;

  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a36 + 8 * v36) - 4))((a1 - 4), (a2 - 8), (a3 + 1));
}

uint64_t sub_100141620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,uint64_t a36)
{
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  int v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v57;

  v57 = v36;
  v43 = (v38 + v37 - 476) | 0x2502;
  v44 = v37 + 1698833005;
  sub_100DD0864(&STACK[0x8EC], 0, 0x14uLL);
  v46 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * (a35 & 0x4047AA)) - 1869355806))(a8, *(_QWORD *)(v39 + 8 * (int)(a35 ^ 0x9ABE2A20)) - 2103847634, 4);
  LODWORD(STACK[0x230]) = ((v43 - 1392676659) & (2 * v46)) + (v46 ^ 0x567ED7EA);
  sub_100DD0864(&STACK[0x9D0], 0, 0x400uLL);
  v40[406] = &STACK[0x9D0];
  LODWORD(STACK[0x348]) = 1261940550;
  v40[100] = &STACK[0x980];
  v40[101] = v42 - 212;
  v48 = ((unint64_t)&STACK[0x2F0] ^ 0x6DBDFCEBFFFFBE6FLL)
      - 0x6DBDFCEBFFFFBE6FLL
      + ((2 * (_QWORD)&STACK[0x2F0]) & 0xDB7BF9D7FFFF7CD8);
  v49 = ((2 * (v48 % 0x25)) & 0x76) + ((v48 % 0x25) ^ 0xFF679AF7FF8DB7FBLL);
  LOBYTE(STACK[0x457]) = v49 + 0x98650800724814 < 0xFFFFFFFFF6373E3BLL;
  v50 = ((_DWORD)v49 + 7489557) & 0xFFFFFFF0;
  v51 = (2 * ((_DWORD)v49 + 7489557)) & 0xD555C060;
  v52 = (v49 & 0xFF679AF7FF8DBFFCLL) + 0x98650800724818;
  if (v50 == v51)
    v52 = 16;
  v53 = (v52 ^ 0x67738FE69FDEEABFLL) + ((2 * v52) & 0xCEE71FCD3FBDD578);
  v40[103] = ((unint64_t)&STACK[0x2C8] ^ 0xEBDB4FBCBEEEF9FFLL)
           + 0x3FB7FE77FBBBFEB2
           + ((2 * (_QWORD)&STACK[0x2C8]) & 0xD7B69F797DDDF3F0);
  v40[104] = &STACK[0x345];
  v40[105] = v53 - 0x67738FE69FDEEAE0;
  v40[106] = &STACK[0x346];
  v40[107] = v53 + 0x7F12085D14A91447;
  v40[108] = &STACK[0x347];
  v40[109] = ((unint64_t)&STACK[0x2D8] ^ 0xCB3FFBDF37FEDDFDLL)
           + 0x76F39777EF7B26D8
           + ((2 * (_QWORD)&STACK[0x2D8]) & 0x967FF7BE6FFDBBF0);
  v40[110] = ((unint64_t)&STACK[0x2D0] ^ 0x5FDFFFBF5AEFDBFCLL)
           - 0x18A3C00405180
           + ((2 * (_QWORD)&STACK[0x2D0]) & 0xBFBFFF7EB5DFB7F0);
  v40[111] = &STACK[0x990];
  v40[112] = &STACK[0x988];
  v40[113] = &STACK[0x998];
  v40[114] = &STACK[0x984];
  v40[115] = &STACK[0x98C];
  v40[116] = ((unint64_t)&STACK[0x2E8] ^ 0xDDE748ACA69B76EDLL)
           + 0x7BDCB7F3DFFFFDE0
           + ((2 * (_QWORD)&STACK[0x2E8]) & 0xBBCE91594D36EDD0);
  v40[117] = &STACK[0x2F7];
  v40[118] = ((unint64_t)&STACK[0x2B8] ^ 0x4FFDFAFF6B7BEFBFLL)
           - 0x8C840A022798090
           + ((2 * (_QWORD)&STACK[0x2B8]) & 0x9FFBF5FED6F7DF70);
  v40[119] = ((unint64_t)&STACK[0x2E0] ^ 0x4EDBBFF5DB61F997)
           - 0x4400A83010018982
           + ((2 * (_QWORD)&STACK[0x2E0]) & 0x9DB77FEBB6C3F320);
  v40[120] = &STACK[0x2F6];
  v40[121] = ((unint64_t)&STACK[0x2C0] ^ 0x9DEFFF6F7E7DF48ELL)
           + 0x76374EFBCF8A7FF2
           + ((2 * (_QWORD)&STACK[0x2C0]) & 0x3BDFFEDEFCFBE910);
  LODWORD(STACK[0x34C]) = 1549514914;
  LODWORD(STACK[0x350]) = -713708010;
  v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a36 + 8 * v44);
  LODWORD(STACK[0x354]) = 1284508986;
  HIDWORD(a13) = -1698781175;
  LODWORD(a29) = (a35 - 632197419) ^ 0x10FA;
  LODWORD(a28) = a35 + 1698815030;
  HIDWORD(a10) = -2111984;
  return v54(a36, 1698813030, v47, 1616429208, 2678545771, 3336929852, 23820, 2305, a9, a10, &STACK[0x2F3], a5, a13, &STACK[0x343], a15, v57, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           v41,
           a27,
           a28,
           a29);
}

uint64_t sub_100141BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,unsigned int a38)
{
  int v38;
  _DWORD *v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;

  v41 = v38 ^ 0x9ABE6795;
  v42 = v40 + v38 + 2764;
  *v39 = STACK[0x280];
  v43 = ((a38 >> 11) - ((a38 >> 10) & 0x29C3F0) - 1858805256) ^ a38;
  v44 = ((v41 ^ (v43 << 7) ^ 0x9A70A10B) - ((2 * (v41 ^ (v43 << 7) ^ 0x9A70A10B)) & 0x19450600) - 1935506632) & 0x9D2C5680 ^ 0x5081280;
  v45 = (((((2 * v44) & 0x22500C00) - v44 - 288009855) & 0xE1C44600 ^ 0x80020629)
       + ((((2 * v44) & 0x22500C00) - v44 - 288009855) & 0x1E39B880 ^ 0xC188085)
       - 2) ^ v43;
  v46 = (((v45 << 15) ^ 0x93AA0000) - ((2 * ((v45 << 15) ^ 0x93AA0000)) & 0x4C230000) - 1508771363) & 0xEFC60000 ^ 0x43800000;
  v47 = (((2 * v46) | 0x6A493300) - v46 - 891591040) ^ v45;
  LODWORD(STACK[0x284]) = v47 ^ (v47 >> 18) ^ 0x7F023A5F;
  LODWORD(STACK[0x228]) = 1549514882;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * v42) - 12))();
}

uint64_t sub_100141D40@<X0>(uint64_t a1@<X0>, int a2@<W6>, int a3@<W7>, int a4@<W8>)
{
  char v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  int *v8;
  char v9;
  int v10;
  int v11;
  int v12;
  _BYTE *v13;
  uint64_t v14;
  char v15;
  int v16;

  v10 = STACK[0x228];
  v11 = STACK[0x284];
  v12 = STACK[0x234];
  v13 = (_BYTE *)(v6 + (LODWORD(STACK[0x234]) - 1284507963));
  v14 = ((_DWORD)v13 - 1943680393 + *(_DWORD *)(*v5 + (*v8 & (((a4 ^ a2) * a3) ^ 0xFFFFFFFF8C25F573))));
  v15 = *(_BYTE *)((qword_10114C800 ^ 0x2327ADBC048BEE5DLL) + (v14 & (qword_10114E618 ^ 0xA5FBD9C2))) ^ (60 * (_BYTE)v13) ^ (((a4 + v4) & v7) + ((v11 ^ 0xD575AE16) >> (v10 + v9)) - ((2 * ((v11 ^ 0xD575AE16) >> (v10 + v9))) & 0x82) + 86) ^ *(_BYTE *)((qword_10114C800 ^ 0x2327ADBC048BEE5DLL) + ((v14 + 2) & (qword_10114E618 ^ 0xA5FBD9C2))) ^ 0x8A;
  *v13 = v15;
  v16 = v12 - (v15 != 0);
  LODWORD(STACK[0x34C]) = v10 + 8;
  LODWORD(STACK[0x350]) = v11;
  LODWORD(STACK[0x354]) = v16;
  return (*(uint64_t (**)(void))(a1 + 8 * ((52786 * (v16 == 1284507962)) ^ a4)))();
}

uint64_t sub_100141E70(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6)
{
  int v6;
  int v7;
  _BOOL4 v8;

  LODWORD(STACK[0x234]) = STACK[0x354];
  v7 = STACK[0x34C];
  v8 = LODWORD(STACK[0x34C]) == ((v6 - 1698825321) ^ a6);
  LODWORD(STACK[0x284]) = STACK[0x350];
  LODWORD(STACK[0x228]) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((v8 * (((v6 + a4) & a5) + 2793)) ^ v6)) - 12))();
}

uint64_t sub_100141EC4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *(_DWORD *)(v39 - 216) = -1371887391;
  **(_DWORD **)(v38 + 808) = 926029886;
  LODWORD(STACK[0x2F0]) = *(_DWORD *)(*(_QWORD *)(v37 + 8 * (a2 + v36 - 937)) - 1294951375);
  v40 = *(unsigned int *)(*(_QWORD *)(v37 + 8 * (v36 + 1698813432)) - 1628774314);
  *(_QWORD *)(v38 + 1320) = *(_QWORD *)(a1 + 8 * (v36 + 1698815042)) - 12;
  STACK[0x660] = (v36 - 1121340093);
  *(_QWORD *)(v38 + 1328) = 0;
  *(_QWORD *)(v38 + 1336) = v40;
  LODWORD(STACK[0x668]) = (v36 - 1121336150) ^ 0x98;
  LODWORD(STACK[0x66C]) = v36 - 1121336150;
  *(_QWORD *)(v38 + 3304) = &STACK[0x648];
  *(_DWORD *)(v39 - 160) = 1479891879
                         - 967721411 * ((~((v39 - 176) | 0x3BACBF83) + ((v39 - 176) & 0x3BACBF83)) ^ 0x626ED153)
                         + v36;
  v41 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v37 + 8 * (a2 + v36 - 2093)) - 450234315))(v39 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a36 + 8 * *(int *)(v39 - 176)) - 8))(v41);
}

uint64_t sub_10014206C@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;

  __clrex();
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * a2) - (v3 ^ v2)))();
}

uint64_t sub_10014208C(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  unsigned int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;

  v9 = (unsigned int *)(*(_QWORD *)(v8 + 8 * (a4 + a3 - 995)) + v6);
  while (1)
  {
    v10 = __ldaxr(v9);
    if (v10 != a5)
      break;
    if (!__stlxr(v5, v9))
      JUMPOUT(0x100142074);
  }
  return sub_10014206C(a2, v7 + a3 - 2872);
}

uint64_t sub_1001420C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  unsigned __int8 *v19;

  v19 = (unsigned __int8 *)(*(_QWORD *)(v15 + 8 * (v14 - 412)) - 1624708666);
  v17 = *v19 == (((v14 - a4 - 8) | 8) ^ 0x9F);
  *(_QWORD *)(v16 + 568) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *))(*(_QWORD *)(a2 + 8 * ((34698 * v17) ^ v14)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, v19);
}

uint64_t sub_100142158@<X0>(uint64_t a1@<X1>, int a2@<W3>, int a3@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((a2 + a3 + 27) ^ 0x5441)) - 8))();
}

uint64_t sub_100142178@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 400) = *(_QWORD *)(a1 + 8 * v2) + v3;
  *(_QWORD *)(v5 + 792) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((LOBYTE(STACK[0x457]) * ((a2 + 1698829710) ^ 0x59ED)) ^ (a2 + v4)))
                            - 12))();
}

uint64_t sub_1001421D0(uint64_t a1, uint64_t a2)
{
  int v2;
  _QWORD *v3;

  v3[91] = 4;
  v3[92] = v3[103];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a2 + 8 * v2) - 4))(483379826);
}

uint64_t sub_100142218(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8)
{
  int v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  int v16;
  char v17;

  v17 = ((((v9 + v14) ^ a6) + v11 - (a1 & (2 * ((v9 + v14) ^ a6)))) ^ v11) * (v9 + a7 + 31 * (v8 ^ v13));
  *(_BYTE *)(v12 + v10) = (v17 - (a8 & (2 * v17)) + 29) ^ v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((v10 == 1) * v16) ^ v8)) - 4))();
}

uint64_t sub_10014227C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  unint64_t v66;

  *(_QWORD *)(v62 + 736) = v59;
  *(_QWORD *)(v62 + 728) = v60;
  *(_QWORD *)(v62 + 424) = 0;
  v63 = (*((_BYTE *)&STACK[0x344] + (((_BYTE)a9 - v61 + **(_BYTE **)(v62 + 832) - 114) & 3)) - 1)
      / 0x41u;
  v64 = *((unsigned __int8 *)&STACK[0x344] + (((_BYTE)a9 - v61 + **(_BYTE **)(v62 + 832) - 114) & 3))
      - 1
      - (v63 | (v63 << 6));
  v65 = (v64 ^ 0xFFFFFFFE) + ((v64 << ((((a9 + 30) | 0xB) ^ 0x30) & 0xF5)) & 0xFFFFFFFC) + 94;
  v66 = *(_QWORD *)(v62 + 840) + v65 + ((unint64_t)(v65 < 0x5Cu) << 8);
  *(_QWORD *)(v62 + 1160) = (v66 & 0xFFFFFFFFFFFFFFFCLL ^ 0xF64AFF9DEBE9D7FELL) + ((2 * v66) & 0xEC95FF3BD7D3AFF8);
  LODWORD(v66) = (*((_BYTE *)&STACK[0x344] + ((**(_BYTE **)(v62 + 848) - 1) & 3)) - 1) % 0xDu;
  *(_QWORD *)(v62 + 792) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 + 8 * ((41 * (((~(_BYTE)v66 + 2 * (_BYTE)v66 + 8) & 0x1C) + (~(2 * (~(_DWORD)v66 + 2 * (_DWORD)v66)) | 0xFFFFFFF7) == -1)) ^ a9)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_1001423B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned __int8 a70;
  int v70;
  int v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;

  v72[146] = (a70 ^ 0xEFBCFE3FFC30DB16) + v72[107] + ((2 * (a70 ^ 0xE0u)) & 0x1E0);
  v74 = *(_QWORD *)(v73 + 72);
  v72[24] = v74;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((v74 != a24) * ((v70 - v71) ^ a14 ^ 0xE8CC)) ^ v70)) - 12))();
}

uint64_t sub_100142424(uint64_t a1, uint64_t a2)
{
  int v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v5 = ((v2 - 21342) ^ 0x9B50062B2F4C897) + v3[145];
  v3[147] = v5;
  LOBYTE(STACK[0x227]) = v5 < v4;
  v3[93] = v3[24];
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * v2) - 8))();
}

uint64_t sub_100142488@<X0>(uint64_t a1@<X1>, int a2@<W6>, unsigned int a3@<W7>, uint64_t a4@<X8>)
{
  int v4;
  _BOOL4 v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL4 v12;

  v10 = (v4 + a2) + *(_QWORD *)(v6 + 8) + v8 + (v4 ^ a3) * v7;
  v11 = v5 ^ (v10 < v9);
  v12 = v10 < a4;
  if (v11)
    v12 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v4 | (2 * !v12))) - 12))();
}

uint64_t sub_1001424DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  int v24;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((246
                                          * (((*(_QWORD *)(v23 + 24) == a23) ^ (105 * (v24 ^ 0x62) + 68)) & 1)) ^ v24))
                            - 8))();
}

uint64_t sub_100142534(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _QWORD *v9;

  v9[93] = v6;
  v9[25] = v2;
  v9[26] = v4;
  v9[148] = v3;
  v9[99] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * v5) - ((v5 - v8) ^ (unint64_t)(v7 - 8))))();
}

uint64_t sub_10014255C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;

  v6[93] = v2;
  v6[25] = v2;
  v6[26] = v4;
  v6[148] = v3;
  v7 = v3 - v6[145];
  v6[149] = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((939
                                          * (((2 * (((v5 - 1048522035) & 0x3E7F8F9B) + v7 + 2753076444)) & 0x169FE7BFALL)
                                           + ((((v5 - 1048522035) & 0x3E7F8F9Bu) + (_DWORD)v7 - 1541890852) ^ 0xD9DEF7EFB4FF3DFDLL)
                                           + 0x262108104B00C1DALL < 0xFFFFFFFFFFFFFFD7)) ^ v5))
                            - 4))();
}

uint64_t sub_1001425FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  _QWORD *v4;
  uint64_t v5;

  v4[27] = v4[149] + v2 - 0x5428FEBC5BE6D70CLL;
  v5 = v4[145] + (v3 ^ 0x9B500621416A41ALL);
  v4[45] = v5;
  v4[54] = v5;
  v4[96] = v4[148];
  return (*(uint64_t (**)(void))(a2 + 8 * ((632 * (v5 != ((v3 - 19739) ^ 0x3EFDLL))) ^ v3)))();
}

uint64_t sub_10014267C(uint64_t a1, uint64_t a2)
{
  int v2;
  _QWORD *v3;

  v3[94] = v3[45];
  v3[95] = v3[110];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a2 + 8 * v2) - 4))(316840086);
}

uint64_t sub_1001426D4@<X0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W5>, char a4@<W6>, char a5@<W7>, uint64_t a6@<X8>)
{
  char v6;
  int v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char v16;

  v15 = v8 - 1;
  *(_QWORD *)(v13 + 432) = v15;
  v16 = (v10 ^ (4 * v7) ^ a5 ^ (((v6 + v9 - 17) ^ a3) - (a1 & (2 * ((v6 + v9 - 17) ^ a3))) + a4)) * (v6 + v9);
  *(_BYTE *)(a6 + v15) = (v16 - (v11 & (2 * v16)) + 43) ^ v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((*(_QWORD *)(v13 + 432) == 0) * v14) ^ v7)) - 4))();
}

uint64_t sub_10014273C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 760) = v2;
  *(_QWORD *)(v5 + 752) = v4;
  *(_QWORD *)(v5 + 768) = **(_QWORD **)(v5 + 208);
  return (*(uint64_t (**)(void))(a2 + 8 * v3))();
}

uint64_t sub_100142768@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = v2[96];
  v2[36] = v3;
  v4 = (_QWORD *)(v2[25] + v3 - 0x4A73FE5A47D0AF0ALL);
  v2[29] = v4;
  LODWORD(v3) = *v4 == v3;
  v2[99] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((v3 * (((a2 - 2010651189) | 0x12962098) + 1698838459)) ^ a2))
                            - 12))();
}

uint64_t sub_1001427DC@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v2 + 1168);
  v5 = *(_QWORD *)(v2 + 288) - v4;
  v6 = (_QWORD *)(v5 + *(_QWORD *)(v2 + 200) - 0x743167D69717D42ALL);
  v5 -= 0x29BD697C4F472520;
  **(_QWORD **)(v2 + 208) = v5;
  *v6 = v5;
  v6[1] = 0x20B694DDF88989EALL - v4;
  v6[2] = (a2 - 1698822557)
        + (unint64_t)**(unsigned __int8 **)(v2 + 864)
        + ((unint64_t)(**(_BYTE **)(v2 + 864) == 0) << 8)
        + 0x20E90840FC4B86BBLL;
  **(_QWORD **)(v2 + 232) = 0x4A73FE5A47D0AF0ALL;
  *(_QWORD *)(v3 + 40) += v4 + 0x29BD697C4F472520;
  *(_QWORD *)(v2 + 792) = v6 + 3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * a2) - 12))();
}

uint64_t sub_1001428C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(v5 + 1184);
  *(_QWORD *)(v5 + 240) = v2 + v6 - 0x4A73FE5A47D0AF0ALL;
  return ((uint64_t (*)(void))(v4
                            - (v3 - 1698819857)
                            + *(_QWORD *)(a2
                                        + 8
                                        * ((45953 * (*(_QWORD *)(v2 + v6 - 0x4A73FE5A47D0AF0ALL) == v6)) ^ (v3 + 2700)))
                            - 8))();
}

uint64_t sub_100142920@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v3[25];
  v5 = *(_QWORD *)(v4 + 32);
  v3[31] = v4 + 32;
  v6 = *(_QWORD *)(v5 + 24);
  v3[20] = v5 + 24;
  return ((uint64_t (*)(void))(v2 - (a2 ^ 0x9ABE0EA5) + *(_QWORD *)(a1 + 8 * ((22700 * (v6 == v4)) ^ a2)) - 8))();
}

uint64_t sub_10014296C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 + 8 * (int)(((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v37 + 200) + 24) + 32) == *(_QWORD *)(v37 + 200)) * (((a9 - 21050428) & 0x9BFF3A9E) + 1698826069)) ^ a9)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1001429C4@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  **(_QWORD **)(v38 + 160) = a38;
  v40 = *(_QWORD **)(v38 + 240);
  *(_QWORD *)(*(_QWORD *)a37 + 32) = **(_QWORD **)(v38 + 248);
  v42 = *(_QWORD *)(v38 + 200);
  v41 = *(_QWORD **)(v38 + 208);
  *(_QWORD *)(v39 + 40) = *v41 + *(_QWORD *)(v39 + 40) - 0x4A73FE5A47D0AF0ALL;
  *v41 = 0x94E7FCB48FA15E14 - *v41;
  *(_QWORD *)(v42 + 16) = (**(unsigned __int8 **)(v38 + 864) | ((unint64_t)(**(unsigned __int8 **)(v38 + 864) == (((a2 ^ 0xA5) + 106) ^ 8)) << 8))
                        + 0x20E9084196FBBE3ELL;
  *v40 = 0x4A73FE5A47D0AF0ALL;
  v43 = *(_QWORD *)(v38 + 1160) + 0x9B50062141627EALL;
  *(_QWORD *)(v38 + 176) = v43;
  *(_QWORD *)(v38 + 440) = v43;
  *(_QWORD *)(v38 + 792) = a37;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((42376 * (v43 != 0)) ^ a2)) - 12))();
}

uint64_t sub_100142ACC(uint64_t a1, uint64_t a2)
{
  int v2;
  _QWORD *v3;

  v3[97] = v3[22];
  v3[98] = v3[109];
  return (*(uint64_t (**)(unint64_t))(a2 + 8 * v2))(0xBDCC6CA8D885FB3CLL);
}

uint64_t sub_100142B24@<X0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W5>, char a4@<W6>, char a5@<W7>, char a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  char v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v49 = v42 - 1;
  *(_QWORD *)(v48 + 440) = v49;
  v50 = ((v45 + v41 - 5 + ((a6 + a1 - 17) ^ a3) - (a4 & (2 * ((a6 + a1 - 17) ^ a3))) + a5) ^ v46) * (a6 + a1);
  *(_BYTE *)(a41 + v49) = (v50 - (v43 & (2 * v50)) + 43) ^ v44;
  return (*(uint64_t (**)(void))(a2 + 8 * (((*(_QWORD *)(v48 + 440) != 0) * v47) ^ v41)))();
}

uint64_t sub_100142B90@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;
  int v39;
  _QWORD *v40;

  v40[98] = a2;
  v40[97] = v38;
  v40[99] = a37;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v37 + v39)) - 12))();
}

uint64_t sub_100142BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v31;

  *(_QWORD *)(v31 + 568) = *(_QWORD *)(v31 + 792);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 400))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_100142BC8(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;

  *(_QWORD *)(v40 + 568) = a39;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((a39 == 0) * (v39 + 6295)) ^ (a3 + a4))) - 8))();
}

uint64_t sub_100142BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(uint64_t), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a16(5000);
  *(_QWORD *)(v38 + 976) = v39;
  *(_QWORD *)(v38 + 568) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a36 + 8 * (int)(((v39 != 0) * ((v37 - 2135027320) ^ 0x80BE8B30)) ^ v37))
                            - (((v37 - 2135027320) | 0x1A001A12u) ^ (unint64_t)(v36 - 4))))();
}

uint64_t sub_100142C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  uint64_t v24;
  uint64_t v25;

  **(_QWORD **)(v24 + 976) = 0x4A73FE5A47D0AF0ALL;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (int)(((*(_QWORD *)(*(_QWORD *)(v25 + 80) + 24) != a23)
                                               * (((v23 - 2013006772) | 0x12BA208C) ^ 0x9ABE1F58 ^ (v23 - 783804375) & 0x2EB7E7DF)) | v23))
                            - 4))();
}

uint64_t sub_100142CF4@<X0>(uint64_t a1@<X1>, int a2@<W3>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((*(_QWORD *)(*(_QWORD *)(v4 + 72) + 32) == v3)
                                          * ((a3 ^ 0x2ACB) - a2 + 1698850515)) ^ a3))
                            - 4))();
}

uint64_t sub_100142D30(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v6 = *(_QWORD **)(v4 + 976);
  v6[3] = v3;
  v6[4] = *(_QWORD *)(v5 + 80);
  *(_QWORD *)(v5 + 80) = v6;
  *(_QWORD *)(v6[4] + 24) = v6;
  v6[1] = 0x4A73FE5A47D0C27ALL;
  v6[622] = 0x4A73FE5A47D0C27ALL;
  v6[623] = 0xCA73FE5A47D0AF0ALL;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((((v2 - 2111168260) | 0x18940A9E) + 1698830780) ^ v2)) - 8))();
}

uint64_t sub_100142DB4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;

  v38 = v36 + a4;
  v39 = sub_100DD0758();
  *(_QWORD *)(v37 + 568) = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a36 + 8 * v38) - 8))(v39);
}

uint64_t sub_100142DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  _DWORD *v36;
  int v37;
  int v38;
  _DWORD *v39;
  uint64_t v40;
  uint64_t v41;

  *(_QWORD *)(v41 + 984) = *(_QWORD *)(v41 + 568);
  *v36 = a5;
  *v39 = ((uint64_t (*)(void))(*(_QWORD *)(v40 + 8 * (int)(v37 ^ 0x9ABE331A)) - 532801238))();
  LODWORD(STACK[0x364]) = 1;
  LODWORD(STACK[0x368]) = 1936064471;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a36 + 8 * (v38 + v37 + 1774))
                                                                                       - ((v37 - 413957951) & 0x7DEE7FB6)
                                                                                       + 15122))(15112, 1812433253, 4227511799, 3624866506, 4160056302, 2426358323);
}

uint64_t sub_100142E9C@<X0>(char a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, unsigned int a7@<W8>)
{
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;

  v13 = v7 + v9;
  v14 = *(_DWORD *)(v12 + 4 * v13) ^ v10 ^ ((*(_DWORD *)(v12 + 4 * v13) >> (v11 ^ a1))
                                            + v10
                                            - 2 * (*(_DWORD *)(v12 + 4 * v13) >> (v11 ^ a1)));
  *(_DWORD *)(v12 + 4 * (v13 + 1)) = v7 + ((v14 * a4) & a5) + ((v14 * a2) ^ a3) + a6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((63 * (a7 < 0x26F)) ^ v11)) - 4))();
}

uint64_t sub_100142F08@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  uint64_t (*v30)(void);
  int v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v34 = v31 ^ 0x7FB3;
  LODWORD(STACK[0x368]) = v29 + a1 - 1;
  LODWORD(STACK[0x364]) = a1;
  LODWORD(STACK[0x238]) = a1;
  LODWORD(STACK[0x2F0]) = a1;
  v35 = *(_QWORD **)(v33 + 888);
  v36 = ((uint64_t (*)(_QWORD *, _QWORD))(*(_QWORD *)(v32 + 8 * (v34 ^ 0x4528)) - 475129791))(v35, 0);
  **(_DWORD **)(v33 + 896) = *v35;
  **(_DWORD **)(v33 + 912) = **(_DWORD **)(v33 + 904);
  **(_DWORD **)(v33 + 920) = ((uint64_t (*)(uint64_t))v30)(v36);
  v37 = v30();
  **(_DWORD **)(v33 + 800) = v37;
  LODWORD(STACK[0x23C]) = ((2 * *(_QWORD *)(v33 + 984)) & 0x75975CD8)
                        + (*(_QWORD *)(v33 + 984) ^ 0xBACBAE6C)
                        - (((v34 ^ 0x9ABE7E3B)
                          + 2 * (((2 * *(_QWORD *)(v33 + 984)) & 0x75975CD8) + (*(_QWORD *)(v33 + 984) ^ 0xBACBAE6C))
                          - 274044790) & 0xE4D25526)
                        - 1214415833;
  LODWORD(STACK[0x36C]) = 744891806;
  LODWORD(STACK[0x370]) = 1407957700;
  LODWORD(STACK[0x374]) = 1208057140;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a29 + 8 * v34) - 4))(v37, a29, v38, v39, v40, v41, v42, v43, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_100143034@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _DWORD *a20,_QWORD *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  _DWORD *v27;
  int v28;

  v27 = (_DWORD *)(a19 + 4 * a26);
  v28 = (_DWORD)v27 - 2006734376 + *(_DWORD *)(*a21 + (int)(*a20 & 0x8863A9D8));
  *(_DWORD *)(v26 + 4 * a26) ^= (2110683084 * (_DWORD)v27) ^ *v27 ^ *(_DWORD *)((qword_10114C800 ^ 0x2327ADBC048BEE5DLL)
                                                                              + ((v28 + 2) & ((a2 + 653735859) & 0xD908E4F9 ^ qword_10114E618 ^ 0xA5FB9D62))) ^ *(_DWORD *)((qword_10114C800 ^ 0x2327ADBC048BEE5DLL) + ((v28 + 4) & ((a2 + 653735859) & 0xD908E4F9 ^ qword_10114E618 ^ 0xA5FB9D62))) ^ 0xF5ADDE16;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * a2) - 4))();
}

uint64_t sub_100143118(int a1, uint64_t a2)
{
  int v2;
  int v3;
  _BOOL4 v4;

  v4 = a1 + v3 + (v2 ^ 0xD456) - 1698846296 != 1208060361;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v4 | (4 * v4) | v2)) - 4))();
}

uint64_t sub_10014315C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(uint64_t),uint64_t a35,uint64_t a36)
{
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  int v44;
  unsigned int v45;
  uint64_t v46;

  v41 = v36;
  v42 = *(_DWORD *)(a33 + 4 * (v37 - 744891806));
  v43 = 4 * (v37 - 744891805);
  v44 = v42 ^ 0x7212C89D ^ ((v42 >> 30) + 1913833629 - ((v42 >> 29) & 2));
  v45 = (*(_DWORD *)(a33 + v43) ^ 0x4173DA32 ^ (1664525 * v44 + 1098111538 - ((3329050 * v44) & 0x82E7B464)))
      + *(_DWORD *)(v39 + 4 * (v41 - 1407957700));
  *(_DWORD *)(a33 + v43) = v41 + (v45 ^ 0xAF7FD7C3) + ((2 * v45) & 0x5EFFAF86) - 57381511;
  STACK[0x648] = *(_QWORD *)(a2 + 8 * ((v38 - 571399195) ^ 0x78AF4857)) - 12;
  LODWORD(STACK[0x668]) = (v38 - 571399195) ^ 0x1F;
  LODWORD(STACK[0x66C]) = v38 - 571403225;
  *(_DWORD *)(v40 - 160) = 1479891879
                         - 967721411 * ((((v40 - 176) | 0xDFABEF39) + (~(v40 - 176) | 0x205410C6)) ^ 0x79967E17)
                         + v38;
  LODWORD(STACK[0x660]) = v38 - 571399195;
  STACK[0x650] = (v37 - 1939618495);
  STACK[0x658] = 3100240605;
  LODWORD(STACK[0x664]) = 0;
  STACK[0xE08] = (unint64_t)&STACK[0x648];
  v46 = a34(v40 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a36 + 8 * *(int *)(v40 - 176)) - 12))(v46);
}

uint64_t sub_1001432FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;

  return (*(uint64_t (**)(void))(v35 + 8 * ((a35 + 1698824018) ^ (2 * (v37 < v36)))))();
}

uint64_t sub_100143328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  uint64_t v35;
  int v36;
  unsigned int v37;

  return (*(uint64_t (**)(void))(v35 + 8 * ((a35 + 1698824018) ^ (2 * (v37 > v36 + 623)))))();
}

uint64_t sub_100143358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,_DWORD *a33)
{
  uint64_t v33;
  int v34;
  int v35;

  *a33 = a33[623];
  return (*(uint64_t (**)(void))(v33 + 8 * (v34 + v35 + 1461)))();
}

uint64_t sub_10014337C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,int a30,uint64_t a31,int a32,int a33,uint64_t a34,uint64_t a35,uint64_t (*a36)(uint64_t),uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;

  STACK[0x648] = *(_QWORD *)(v38 + 8 * a28) - 12;
  STACK[0x650] = (v40 - 2086813518);
  STACK[0x658] = 3616111477;
  LODWORD(STACK[0x660]) = a33;
  LODWORD(STACK[0x664]) = 0;
  LODWORD(STACK[0x668]) = a33 - 220;
  LODWORD(STACK[0x66C]) = a30;
  STACK[0xE08] = (unint64_t)&STACK[0x648];
  *(_DWORD *)(v41 - 160) = 1479891879
                         - 967721411
                         * ((206895573 - ((v41 - 176) | 0xC54F9D5) + ((v41 - 176) | 0xF3AB062A)) ^ 0x55969705)
                         + v39;
  v42 = a36(v41 - 176);
  return (*(uint64_t (**)(uint64_t))(a38 + 8 * *(int *)(v41 - 176)))(v42);
}

uint64_t sub_10014345C(uint64_t a1, uint64_t a2)
{
  int v2;
  unsigned int v3;

  return (*(uint64_t (**)(uint64_t))(a2
                                            + 8
                                            * (int)(((v3 >= ((487 * (v2 ^ 0x9ABE3A8B)) ^ 0xD7895C86))
                                                   * (3409 * (v2 ^ 0x9ABE3A9D) - 10179)) ^ (v2 + 1698832887))))(1698813030);
}

uint64_t sub_1001434C8(uint64_t a1, uint64_t a2)
{
  int v2;
  unsigned int v3;

  return (*(uint64_t (**)(uint64_t))(a2
                                            + 8
                                            * (int)(((((v3 > 0xD7897B78) ^ (3 * (v2 ^ 0xCF))) & 1)
                                                   * ((1461 * (v2 ^ 0x9ABE3A99)) ^ 0x27C3)) ^ (v2 + 1698832887))))(1698813030);
}

uint64_t sub_100143534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  int v25;
  unsigned int *v26;

  *v26 = (((144 * (v25 ^ 0x2789)) ^ 0x72696E33) + *v26 - ((2 * *v26) & 0xE4D25526)) ^ a25;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * v25) - 4))();
}

uint64_t sub_100143588@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26)
{
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  uint64_t (*v36)(void);

  LODWORD(STACK[0x374]) = a2;
  LODWORD(STACK[0x24C]) = v29;
  LODWORD(STACK[0x370]) = v27;
  LODWORD(STACK[0x250]) = v33;
  LODWORD(STACK[0x36C]) = v31;
  LODWORD(STACK[0x254]) = v35;
  LODWORD(STACK[0x258]) = v28;
  LODWORD(STACK[0x25C]) = v30;
  LODWORD(STACK[0x378]) = v31;
  LODWORD(STACK[0x260]) = v31;
  STACK[0x500] = a26;
  LODWORD(STACK[0x264]) = v34;
  LODWORD(STACK[0x37C]) = v31;
  v36 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * v26) - (v32 ^ 0x9ABE3A92));
  LODWORD(STACK[0x380]) = 740508968;
  return v36();
}

uint64_t sub_100143618(uint64_t a1, uint64_t a2)
{
  int v2;
  _DWORD *v3;
  int v4;

  *v3 = v3[623];
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v2 + v4)) - 12))();
}

uint64_t sub_100143638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  int v68;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((453 * (a68 == 740508346)) ^ (v68 + 1698846296))) - 12))();
}

uint64_t sub_100143674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unsigned int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;

  v44 = *(_DWORD *)(v40 + 4 * (v38 - 744891806));
  v45 = v44 ^ v37 ^ (v37 + (v44 >> 30) - ((v44 >> 29) & 2));
  *(_DWORD *)(v40 + 4 * (v38 - 744891805)) = 744891805
                                                           - v38
                                                           + (*(_DWORD *)(v40 + 4 * (v38 - 744891805)) ^ 0x8201225 ^ (1566083941 * v45 + 136319525 - ((447813322 * v45) & 0x1040244A)));
  v46 = *(_QWORD *)(a2 + 8 * (v39 + 1698814944));
  v42[415] = (v38 - 611467952) + a30;
  *(_DWORD *)(v43 - 124) = ((v39 + 1255590486) ^ 0x1FE) - a30;
  v42[417] = a30 + 133423852;
  *(_DWORD *)(v43 - 160) = v39 - a30 - 427862329;
  *(_DWORD *)(v43 - 176) = (v39 + 1255590486) ^ a30;
  v42[413] = v46 - a30 - 8;
  *(_DWORD *)(v43 - 144) = ((v39 + 1255590486) ^ 0x110E) + a30;
  *(_DWORD *)(v43 - 140) = a30 + 1;
  v47 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v41 + 8 * (v39 ^ (v36 + 1491))) - 952746343))(v43 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a36 + 8 * *(int *)(v43 - 128)) - 8))(v47);
}

uint64_t sub_1001437C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  unsigned int a64;
  unsigned int v64;
  int v65;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((533 * (a64 < v64)) ^ (a35 + v65))) - 12))();
}

uint64_t sub_1001437F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  unsigned int a64;
  int v64;
  int v65;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((533 * (a64 > v64 + 623)) ^ (a35 + v65))) - 12))();
}

uint64_t sub_10014382C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  int v35;
  int v36;
  _DWORD *v37;

  LODWORD(STACK[0x380]) = v35;
  LODWORD(STACK[0x37C]) = v36;
  LODWORD(STACK[0x384]) = v36;
  *v37 = 0x80000000;
  return (*(uint64_t (**)(void))(a2 + 8 * (a35 + 1698841735)))();
}

uint64_t sub_1001438A0@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  __clrex();
  return (*(uint64_t (**)(void))(a1 + 8 * a2))();
}

uint64_t sub_1001438BC@<X0>(uint64_t a1@<X1>, int a2@<W8>, int a3@<W4>)
{
  unsigned int v3;
  unsigned int *v4;
  unsigned int v5;

  while (1)
  {
    v5 = __ldaxr(v4);
    if (v5 != a3)
      break;
    if (!__stlxr(v3, v4))
      JUMPOUT(0x1001438A8);
  }
  return sub_1001438A0(a1, a2);
}

uint64_t sub_1001438E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, _BYTE *a15)
{
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  _BOOL4 v20;

  v20 = *a15 == 1 && *(_DWORD *)(*(_QWORD *)(v17 + 8 * (v15 - 9254)) - 1652908582) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((v20 * (v18 + v15 - v16 + 321 - 794)) ^ v15)) - 4))();
}

uint64_t sub_100143934(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 984);
  *(_QWORD *)(v3 + 1000) = v4 - 24;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((1884 * (((v2 ^ 0x9ABE0864 ^ (v4 == 0)) & 1) == 0)) ^ v2)) - 4))();
}

uint64_t sub_100143978(uint64_t a1, uint64_t a2)
{
  int v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = v3[123];
  v5 = *(_QWORD *)(v4 - 16);
  v4 -= 16;
  v3[126] = v4 + 0x4419796044B4DC32;
  v3[127] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((43652
                                          * (((v2 + 801194387) & 0xD03EFF7E) - 1698838894 + 0x358C01A51D711658 + v5 >= 0)) ^ v2))
                            - 4))();
}

uint64_t sub_1001439F8(uint64_t a1, uint64_t a2)
{
  int v2;
  _QWORD *v3;

  v3[77] = 4;
  v3[78] = v3[116];
  return (*(uint64_t (**)(void))(a2 + 8 * v2))();
}

uint64_t sub_100143A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, char a4@<W5>, uint64_t a5@<X6>, char a6@<W7>, uint64_t a7@<X8>)
{
  int v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v15 = ((((v8 + a7) ^ a4) + (((v7 + a6) | v11) ^ v13) - 2 * (((v8 + a7) ^ a4) & v12 ^ (v8 + a7) & 4)) ^ v14)
      * (v9 + a7);
  *(_BYTE *)(v10 + a1) = (((2 * v15) & 0x1C) - v15 - 15) ^ 0xF1;
  return (*(uint64_t (**)(void))(a2 + 8 * (((a5 == a7) * a3) ^ v7)))();
}

uint64_t sub_100143ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 624) = v3 + a3;
  *(_QWORD *)(v5 + 616) = a1 - a3;
  *(_QWORD *)(v5 + 456) = 0;
  v6 = **(_QWORD **)(v5 + 1016);
  *(_QWORD *)(v5 + 1024) = v6;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((25392
                                * (((v4 + 117) ^ (v6 == (((v4 + 437767902) | 0x80A63214) ^ 0x4A73FE5ADD6E946CLL))) & 1)) ^ v4)))();
}

uint64_t sub_100143B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  unsigned int v59;
  int v60;
  _BOOL4 v62;
  unsigned int v64;

  v57 = *(_QWORD *)(v56 + 1024);
  v58 = (((((v55 | 0x442) ^ 0x7A92E5FF) - 2056406768) ^ HIDWORD(a10)) & (2 * (v57 - 1204858634)))
      + ((v57 - 1204858634) ^ 0xFFEFFFDE);
  v59 = ((**(unsigned __int8 **)(v56 + 936) ^ 0xFFFB7F11)
       + 295042
       + ((2 * (**(unsigned __int8 **)(v56 + 936) ^ 0xFFFFFFEF)) & 0xFC))
      % (-1048634 - v58);
  v64 = ((2 * v59) & 0xBB9F7DEA) + (v59 ^ 0x5DCFBEF5);
  if (v58 + v64 - 1572847041 >= 0xFB)
    v60 = 1948121613;
  else
    v60 = -773998642 - (v58 + v64);
  HIDWORD(a42) = v60;
  v62 = v57 == 0x4A73FE5A47D0AEF1 || v60 == 1948121363;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 8 * (((2 * v62) | (4 * v62)) ^ (v55 | 0x442))))(4293918662, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_100143C50@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  int v2;
  _QWORD *v3;

  v3[79] = 1;
  v3[80] = v3[119];
  return (*(uint64_t (**)(uint64_t))(a1 + 8 * (int)(a2 ^ v2 ^ (60196 * (a2 > 0xA85DC21D)))))(3686710271);
}

uint64_t sub_100143CE0(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, char a7, char a8)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  char v19;

  v18 = v11 - 1;
  *(_QWORD *)(v16 + 448) = v18;
  v19 = ((((v9 + v13) & a1) + ((v8 + v12 - 17) ^ a6) - (a4 & (2 * ((v8 + v12 - 17) ^ a6))) + a7) ^ a8) * (v8 + v12);
  *(_BYTE *)(v10 + v18) = (v19 - ((2 * v19) & 0x33) + 25) ^ v14;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)(v9 ^ v17 ^ ((((*(_QWORD *)(v16 + 448) - v9) | (v9 - *(_QWORD *)(v16 + 448))) >= 0)
                                                * v15))))();
}

uint64_t sub_100143D5C@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 640) = v2;
  *(_QWORD *)(v5 + 632) = v3;
  return (*(uint64_t (**)(void))(a1 + 8 * (v4 + a2 + 1393)))();
}

uint64_t sub_100143D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,unsigned int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int v65;
  _QWORD *v66;
  unint64_t v67;
  unsigned int v68;
  unint64_t v69;
  unint64_t v70;
  int v71;
  int v72;
  _BOOL4 v73;

  v67 = (a65 - 1476395040) | ((unint64_t)((a65 - 1476395040) < 0x5CFBED5) << 32);
  v68 = (v65 + 1429) ^ 0x741DC652;
  v69 = v67 + a43 + ((unint64_t)(a43 < v68) << 32) - 2045622248;
  v66[129] = v69;
  v66[51] = v69;
  v70 = v67 + a43 + ((unint64_t)(a43 < v68) << 32) + 635618334;
  v67 += 2583739697;
  v66[130] = v67;
  v71 = v69 > 0xFFFFFFFF602F83F9;
  v72 = v67 < 0x9FD07C06;
  LOBYTE(STACK[0x207]) = v72;
  v73 = v70 > v67;
  if (v72 != v71)
    v73 = v71;
  return (*(uint64_t (**)(void))(a2 + 8 * ((103 * v73) ^ v65)))();
}

uint64_t sub_100143E40(uint64_t a1, uint64_t a2)
{
  int v2;
  _QWORD *v3;

  v3[81] = v3[129];
  v3[82] = v3[118];
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * v2) - 4))();
}

uint64_t sub_100143EA8(uint64_t a1, uint64_t a2, char a3, unint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  int v8;
  char v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  _BOOL4 v23;

  v20 = v13 - 1;
  v21 = ((v8 - v16 - 6) ^ v18 ^ (((v9 + a8 - 17) ^ a6) - 2 * (((v9 + a8 - 17) ^ a6) & v14 ^ (v9 + a8 - 17) & 4) + v15))
      * (v9 + a8);
  *(_QWORD *)(v17 + 408) = v20;
  *(_BYTE *)(v10 + v20) = (v21 - (v19 & (2 * v21)) - 47) ^ a3;
  v22 = *(_QWORD *)(v17 + 408);
  v23 = v22 + a7 > v12;
  if (v11 != v22 > a4)
    v23 = v22 > a4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((2 * !v23) | (8 * !v23) | v8)) - 4))();
}

uint64_t sub_100143F3C@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 656) = v2;
  *(_QWORD *)(v5 + 648) = v3;
  return (*(uint64_t (**)(void))(a1 + 8 * (v4 + a2 + 1393)))();
}

uint64_t sub_100143F64@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = **(_QWORD **)(v3 + 1016);
  *(_QWORD *)(v3 + 1048) = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((5226
                                * (*(_QWORD *)(*(_QWORD *)(v3 + 1000)
                                             - v4
                                             + ((v2 + a2 + 3014) | 0xCC2u)
                                             + 0x4A73FE5A47D06247) == 0x4A73FE5A47D0AF0ALL)) ^ (a2 + 1698844290))))();
}

uint64_t sub_100143FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)(a20 + 40) += a3 + *(_QWORD *)(v21 + 1048);
  v22 = **(_QWORD **)(v21 + 1000);
  *(_QWORD *)(v21 + 1056) = v22;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8 * ((477 * (v22 == (((v20 ^ 0x7E17u) + 38) ^ 0x4A73FE5A47D09DF0))) ^ v20))
                            - 4))();
}

uint64_t sub_100144048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  uint64_t v24;
  uint64_t v25;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((46 * (*(_QWORD *)(*(_QWORD *)(v24 + 80) + 24) != a23)) ^ v23))
                            + v25
                            - ((1305 * (v23 ^ 0x32DE) + 2147481482) | 0x1ABE101Au)))();
}

uint64_t sub_1001440A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (int)(((*(_QWORD *)(*(_QWORD *)(a20 + 72) + 32) == a23)
                                               * ((v23 - 1698793910) ^ v23 ^ 0x9ABE0864)) ^ v23))
                            - 4))();
}

uint64_t sub_1001440F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  v25 = *(_QWORD **)(v24 + 984);
  *v25 = a23;
  v25[1] = *(_QWORD *)(a20 + 80);
  v26 = *(_QWORD *)(v24 + 1000);
  *(_QWORD *)(a20 + 80) = v26;
  *(_QWORD *)(v25[1] + 24) = v26;
  **(_QWORD **)(v24 + 1016) = 0x94E7FCB48FA15E14 - **(_QWORD **)(v24 + 1016);
  *(_QWORD *)(v24 + 664) = v26;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * v23) - ((v23 - 157649665) & 0x9657D73 ^ 0x1D5BLL)))();
}

uint64_t sub_10014416C@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v2[132];
  v4 = v2[125] + (a2 ^ 0x4A73FE5A47D09DF0) - v3;
  v2[133] = v4;
  v5 = *(_QWORD *)(v4 + 8);
  v2[134] = v4 + 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((26835 * (v5 == v3)) ^ a2))
                            - ((a2 - 12410) | 0x2860)
                            + 10972))();
}

uint64_t sub_1001441E8(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 1064);
  **(_QWORD **)(v3 + 1072) = 0x4A73FE5A47D0AF0ALL - **(_QWORD **)(v3 + 1016) + *(_QWORD *)(v3 + 1056);
  *(_QWORD *)(v3 + 664) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * v2) - (v2 ^ 0x37B3u) + 7499))();
}

uint64_t sub_10014424C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W8>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = v4[83];
  v4[135] = v5;
  v4[136] = v3 - 0x4419796044B4DC32;
  v6 = *(_QWORD *)(v3 - 0x4419796044B4DC32);
  v7 = v5 + v6 + a2;
  v4[137] = v7;
  v8 = *(_QWORD *)(v7 + 8);
  v4[138] = v7 + 8;
  v4[139] = v8;
  v4[84] = v6;
  v4[85] = v8;
  v4[86] = v6 + a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((((unint64_t)(1305 * (a3 ^ 0x1D59u)) + v8 - 0x4A73FE5A47D0E205 < 0x7FFFFFFFFFFFFFFFLL)
                                          * (30 * (a3 ^ 0x1CE0) - 13005)) ^ a3))
                            - 4))();
}

uint64_t sub_1001442F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (((*(_QWORD *)(*(_QWORD *)(v5 + 1096) + *(_QWORD *)(v5 + 1112) + a3) == *(_QWORD *)(v5 + 1112))
                                          * (v4 + ((v3 - 2136214260) | 0x1A121298) + 15)) ^ v3))
                            - 4))();
}

uint64_t sub_100144340(uint64_t a1, uint64_t a2)
{
  int v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = v4[137];
  v6 = *(_QWORD *)(v5 + 32);
  v4[140] = v5 + 32;
  v7 = *(_QWORD *)(v6 + 24);
  v4[141] = v6 + 24;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((30254 * (v7 == v5)) ^ v2))
                            - ((v2 - 1698822236) ^ v3)))();
}

uint64_t sub_10014438C(uint64_t a1, uint64_t a2)
{
  int v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = v3[137];
  v5 = *(_QWORD *)(v4 + 24);
  v3[47] = v4 + 24;
  v3[48] = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (int)(((*(_QWORD *)(v5 + 32) == v4)
                                               * (((v2 - 88127323) & 0x9FFEBEFE) + 1698830680)) ^ v2))
                            - ((v2 - 88127323) ^ 0x1E4BCAFEu)
                            + 3841241437))();
}

uint64_t sub_1001443FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v4 + 376);
  **(_QWORD **)(v4 + 1128) = *(_QWORD *)(v4 + 384);
  *(_QWORD *)(*(_QWORD *)v5 + 32) = **(_QWORD **)(v4 + 1120);
  v6 = *(_QWORD **)(v4 + 1088);
  v7 = *v6 + **(_QWORD **)(v4 + 1104);
  v8 = v7 + a3;
  *v6 = v7 + a3;
  v7 += 0x6B18034B705EA1ECLL;
  v9 = *(_QWORD *)(*(_QWORD *)(v4 + 1080) + v7 + 8);
  *(_QWORD *)(v4 + 672) = v8;
  *(_QWORD *)(v4 + 680) = v9;
  *(_QWORD *)(v4 + 688) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (int)((10212 * (v3 < ((v3 + 19023262) & 0x19E93BFA) - 1713523931)) ^ (v3 + 453733362)))
                            - 4))();
}

uint64_t sub_1001444B0(uint64_t a1, uint64_t a2)
{
  int v2;
  _QWORD *v3;
  uint64_t v4;

  v3[142] = v3[86];
  v4 = v3[85];
  v3[143] = v3[84];
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((19766 * (v4 + 0x358C01A5B82F50F6 > (v2 ^ 0x9ABE0864) - 2596158111)) ^ v2))
                            - 4))();
}

uint64_t sub_100144514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  unsigned int v37;

  *(_QWORD *)(*(_QWORD *)(v34 + 1080) + *(_QWORD *)(v34 + 1136)) = *(_QWORD *)(v34 + 1144);
  v36 = **(_QWORD **)(v34 + 1088);
  v35 = *((unsigned __int8 *)&STACK[0x2F4] + (~LOBYTE(STACK[0x2F4]) & 3)) ^ (((v33 - 59) & 0x60) + 79);
  v37 = ((v35 ^ 0x7DBF6EFA) - 2109697786 + ((2 * v35) & 0x1F4u))
      % ((((v36 + a3) / 4) - ((2 * ((v36 + a3) / 4)) & 0xD1AC9260) + 1758873904) ^ 0x68D64930);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 + 8 * ((46649 * ((((_DWORD)v36 - 1204858634) ^ 0x7FEFDDDF) - ((((unsigned __int16)v37 ^ 0xFA) + ((2 * (_WORD)v37) & 0xFFF7) + 304) & 0x1FC) + ((2 * ((_DWORD)v36 - 1204858634)) & 0xFFDFBBBE) - 1819922546 - 326503814 < 0x7FFFFFFF)) ^ v33)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_100144660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,unsigned int a42,int a43)
{
  int v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  uint64_t v50;

  v45 = *((unsigned __int8 *)&STACK[0x2F4]
        + ((((v43 - 18) | 0x90) - 16) ^ **(_BYTE **)(v44 + 960) & 3 ^ 0x8D));
  v46 = (int)((v45 ^ 0x4FBFD558) - 1337972023 + ((2 * (v45 ^ 0xFFFFFFEF)) & 0x6E)) % (a43 - 326503813);
  v47 = (v46 ^ 0xEC6FFDFB) + 335525758 + ((2 * v46) & 0xD8DFFBF6);
  v48 = (_DWORD)v47 == 7320953;
  v49 = (v47 | ((unint64_t)(v47 < 0x6FB579) << 32)) - 7320953;
  *(_QWORD *)(v44 + 392) = *(_QWORD *)(v44 + 1080) + a42 + 24;
  if (v48)
    v50 = 1;
  else
    v50 = v49;
  *(_QWORD *)(v44 + 1152) = v50;
  *(_QWORD *)(v44 + 416) = v50;
  return (*(uint64_t (**)(void))(a2 + 8 * (((v50 != 0) | (2 * (v50 != 0))) + v43)))();
}

uint64_t sub_100144770(uint64_t a1, uint64_t a2)
{
  int v2;
  _QWORD *v3;

  v3[87] = v3[144];
  v3[88] = v3[121];
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(a2 + 8 * v2) - 8))(0xEBD8B194B1F78B91);
}

uint64_t sub_1001447CC(char a1, uint64_t a2, char a3, char a4, uint64_t a5, char a6, char a7, int a8)
{
  int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;

  v15 = (v12 + v8 + 126) ^ (v13 - 118) ^ (v9 + a1 - 17);
  v16 = v11 - 1;
  v17 = ((v15 + a3 - 2 * (v15 & a4 ^ v9 & 4)) ^ a3) * (v9 + a1);
  *(_QWORD *)(v14 + 416) = v16;
  *(_BYTE *)(v10 + v16) = ((v17 - (a6 & (2 * v17)) + 108) ^ a7) - 64;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((*(_QWORD *)(v14 + 416) == 0) * a8) ^ v8)) - 8))();
}

uint64_t sub_100144848@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 704) = v2;
  *(_QWORD *)(v5 + 696) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v4 + a2 - 321)) - 4))();
}

uint64_t sub_100144864@<X0>(uint64_t a1@<X1>, int a2@<W4>, int a3@<W8>)
{
  _DWORD *v3;
  int v4;

  *v3 = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v4 + a3 - 2992)) - 8))();
}

uint64_t sub_100144884@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  _DWORD *v2;
  uint64_t v3;

  LODWORD(STACK[0x294]) = *v2;
  *(_QWORD *)(v3 + 712) = 1833990283;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a1 + 8 * (a2 + 1698835316))
                                          - (a2 + 1698835266)
                                          + 26072))(1010);
}

uint64_t sub_10014495C@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  int v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;

  v24 = *(_DWORD *)(v11 + 4);
  v25 = (v24 ^ a8) & v17 ^ v22 ^ ((v14 | (2 * ((v24 ^ a8) & v13))) - ((v24 ^ a8) & v13) + v16);
  *v10 = v10[397] ^ *(_DWORD *)(a4 + 4 * (v24 & 1)) ^ (((((v25 | v23) - (v25 | a3) + a3) ^ v20 | (((a9 + a5) & a6)
                                                                                                  + (v9 & 0x80000000)
                                                                                                  + a7) ^ v18)
                                                        - 2
                                                        * ((((v25 | v23) - (v25 | a3) + a3) ^ v20) & v19 ^ ((v25 | v23) - (v25 | a3) + a3) & 1)
                                                        + v15) >> 1) ^ v21;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((v12 != 1833990509) * a1) ^ a9)) - 8))();
}

uint64_t sub_100144A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  int v34;
  unint64_t v35;

  STACK[0x3E8] = v35;
  LODWORD(STACK[0x294]) = v33;
  LODWORD(STACK[0x27C]) = *(_DWORD *)(a33 + 908);
  STACK[0x3F0] = 568698400;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a2 + 8 * v34) - (v34 - 4) + 28688))(12408);
}

uint64_t sub_100144A80@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, int a7@<W6>, int a8@<W8>)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *(_DWORD *)(a6 + v8 + 908) = *(_DWORD *)(a6 + v8) ^ *(_DWORD *)(a4 + 4 * (*(_DWORD *)(a6 + v8 + 912) & 1)) ^ (((v9 & 0x80000000 | *(_DWORD *)(a6 + v8 + 912) & 0x7FFFFFFE) - (((a8 ^ a1) + a7) & (2 * *(_DWORD *)(a6 + v8 + 912))) + a3) >> 1) ^ a5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((4 * (v11 + 395 != v10)) | (8 * (v11 + 395 != v10))) ^ a8)) - 4))();
}

uint64_t sub_100144AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _DWORD *a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v9 + 720) = v8;
  LODWORD(STACK[0x27C]) = v7;
  a6[623] = a6[396] ^ *(_DWORD *)(a4 + 4 * (*a6 & 1)) ^ ((((((v6 - 1073775822) & 0xDABE7EFF) - 448674462) & a6[623])
                                                          + (*a6 & 0x7FFFFFFE)
                                                          - ((2 * *a6) & 0x2E493A6C)
                                                          - 1759208138) >> 1) ^ 0xE5A8E67A;
  return (*(uint64_t (**)(void))(a2 + 8 * ((23 * (LODWORD(STACK[0x2F0]) > 0x26F)) ^ v6)))();
}

uint64_t sub_100144BB4(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  LODWORD(STACK[0x2F0]) = 0;
  return (*(uint64_t (**)(void))(a2 + 8 * (v3 + v2)))();
}

uint64_t sub_100144BCC@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _DWORD *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void (*a28)(uint64_t),uint64_t a29,uint64_t a30)
{
  unsigned int *v30;
  _QWORD *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v33 = LODWORD(STACK[0x2F0])++;
  *a11 = v33 + 1;
  v34 = *v30;
  v31[165] = *(_QWORD *)(a1 + 8 * (a2 + 1698815030)) - 12;
  v31[166] = 5119;
  v31[167] = v34;
  LODWORD(STACK[0x660]) = a2 - 1869252837;
  LODWORD(STACK[0x664]) = 0;
  LODWORD(STACK[0x668]) = (a2 - 1869252837) ^ 8;
  LODWORD(STACK[0x66C]) = a2 - 1869257034;
  *(_DWORD *)(v32 - 160) = 1479891879
                         - 967721411
                         * ((((v32 - 176) ^ 0x89E23 | 0x4BB7204C) + ((v32 - 176) ^ 0x3020044 | 0xB448DFB3)) ^ 0xA5370F49)
                         + a2;
  v31[413] = &STACK[0x648];
  a28(v32 - 176);
  v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a30 + 8 * *(int *)(v32 - 176)) - 12);
  LODWORD(STACK[0x280]) = 0;
  return v35(a30, v36, v37, v38, v39, v40, v41, v42, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_100144CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39)
{
  int v39;
  int v40;

  LODWORD(STACK[0x280]) = a39 + 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v40 + v39 - 2804)) - 12))();
}

uint64_t sub_100144CEC()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 3333)))(2134650450);
}

uint64_t sub_100144D00@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _BYTE *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unsigned __int8 a33,uint64_t a34,_DWORD *a35,int a36,unsigned __int8 a37,int a38,unsigned __int8 a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,unsigned __int8 a61,uint64_t a62,uint64_t a63)
{
  int a65;
  unsigned __int8 a66;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  char *v73;
  int v74;
  char *v75;
  int v76;
  int v77;
  unsigned int v78;
  char *v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;

  v71 = HIWORD(v67);
  v72 = v67 >> 8;
  LODWORD(STACK[0x24C]) = v67;
  LODWORD(STACK[0x250]) = a2;
  LODWORD(STACK[0x254]) = v68;
  v73 = (char *)*(&off_10112C750 + (v66 ^ 0x25ED)) - 554141479;
  v74 = *(_DWORD *)&v73[4 * v69];
  LODWORD(STACK[0x258]) = v70;
  v75 = (char *)*(&off_10112C750 + (v66 ^ 0x289F)) - 1624198259;
  v76 = *(_DWORD *)&v75[4 * (a66 ^ 0xE3)];
  v77 = *(unsigned __int16 *)(a3 + 2 * (a37 ^ 0xE9));
  LODWORD(STACK[0x25C]) = v69;
  LODWORD(STACK[0x260]) = HIWORD(v67);
  LODWORD(STACK[0x264]) = v67 >> 8;
  v78 = v76 ^ ((v66 ^ 0x9ABE16C0) + (unsigned __int16)(v77 - 29381) - ((2 * (v77 - 29381)) & 0x12476) - 1911072867);
  v79 = (char *)*(&off_10112C750 + v66 - 8560) - 1610989314;
  v80 = (unsigned __int16)(*(_WORD *)(a3 + 2 * (BYTE1(v70) ^ 0xEFLL)) - 29381)
      - ((2 * (*(unsigned __int16 *)(a3 + 2 * (BYTE1(v70) ^ 0xEFLL)) - 29381)) & 0xCBC2)
      - 2025298463;
  v81 = v79[v67 ^ 0x6DLL] - 126;
  v82 = *(unsigned __int16 *)(a3 + 2 * (v72 ^ 0x59)) - 29381;
  v83 = *(unsigned __int16 *)(a3 + 2 * (a61 ^ 0x59)) - 29381;
  v84 = *(_DWORD *)&v75[4 * (v71 ^ 0xE3)] ^ *(_DWORD *)&v73[4 * a38] ^ ((unsigned __int16)v83
                                                                                         - ((2 * v83) & 0x5AF8)
                                                                                         + 1881025916);
  v85 = v78 ^ v74 ^ a35[40] ^ ((v79[v70 ^ 0x90] - 126)
                             - ((2 * (v79[v70 ^ 0x90] - 126)) & 0xC8)
                             + 1830656100);
  v86 = *(_DWORD *)&v75[4 * (a39 ^ 0xE0)] ^ *(_DWORD *)&v73[4 * a65] ^ ((~(2 * v81) | 0xFFFFFE51)
                                                                        + v81
                                                                        - 338593320) ^ a35[41] ^ v80;
  v87 = *(_DWORD *)&v75[4 * (a33 ^ 0x8ALL)] ^ *(_DWORD *)&v73[4 * a1] ^ ((unsigned __int16)v82
                                                                       - ((2 * v82) & 0x7988)
                                                                       + 1583561924) ^ a35[42] ^ ((v79[a2 ^ 0x6DLL] - 126)
                                                                                                - ((2
                                                                                                  * (v79[a2 ^ 0x6DLL] - 126)) & 0x98)
                                                                                                + 190090060);
  v88 = v84 ^ a35[43] ^ ((v79[v68 ^ 0x97] - 126)
                       - ((2 * (v79[v68 ^ 0x97] - 126)) & 0xC6)
                       + 1453453667);
  LOBYTE(STACK[0x680]) = HIBYTE(v85) ^ 0x9A;
  LOBYTE(STACK[0x681]) = BYTE2(v85) ^ 0xB2;
  LOBYTE(STACK[0x682]) = BYTE1(v85) ^ 0x9C;
  LOBYTE(STACK[0x683]) = v85 ^ 0x49;
  LOBYTE(STACK[0x684]) = HIBYTE(v86) ^ 0xB3;
  a16[15] = (v88 ^ 9) - ((2 * (v88 ^ 9)) & 0x10) + 8;
  a16[14] = (BYTE1(v88) ^ 0x4A) - ((2 * (BYTE1(v88) ^ 0x4A)) & 0x10) + 8;
  a16[13] = (BYTE2(v88) ^ 0xC5) - ((v88 >> 15) & 0x10) + 8;
  a16[12] = (HIBYTE(v88) ^ 0xF9) - ((2 * (HIBYTE(v88) ^ 0xF9)) & 0x10) + 8;
  a16[11] = (v87 ^ 0x9E) - ((2 * (v87 ^ 0x9E)) & 0x10) + 8;
  a16[10] = (BYTE1(v87) ^ 0x21) - ((v87 >> 7) & 0x10) + 8;
  a16[9] = (BYTE2(v87) ^ 0x4D) - ((2 * (BYTE2(v87) ^ 0x4D)) & 0x10) + 8;
  a16[8] = (HIBYTE(v87) ^ 0x8A) - ((2 * (HIBYTE(v87) ^ 0x8A)) & 0x10) + 8;
  a16[7] = (v86 ^ 0x20) - ((2 * v86) & 0x10) + 8;
  a16[6] = (BYTE1(v86) ^ 0x8A) - ((2 * (BYTE1(v86) ^ 0x8A)) & 0x10) + 8;
  a16[5] = (BYTE2(v86) ^ 0xE3) - ((v86 >> 15) & 0x10) + 8;
  a16[4] = (HIBYTE(v86) ^ 0xB3) - ((v86 >> 23) & 0x10) + 8;
  a16[3] = (v85 ^ 0x49) - ((2 * (v85 ^ 0x49)) & 0x10) + 8;
  a16[2] = (BYTE1(v85) ^ 0x9C) - ((2 * (BYTE1(v85) ^ 0x9C)) & 0x10) + 8;
  a16[1] = (BYTE2(v85) ^ 0xB2) - ((v85 >> 15) & 0x10) + 8;
  *a16 = LOBYTE(STACK[0x680]) - ((2 * LOBYTE(STACK[0x680])) & 0x10) + 8;
  return (*(uint64_t (**)(uint64_t))(a31 + 8 * v66))(2134650450);
}

uint64_t sub_100145190@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _BYTE *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unsigned __int8 a31,uint64_t a32,_DWORD *a33,int a34,unsigned __int8 a35,unsigned int a36,unsigned __int8 a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,unsigned __int8 a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int a64;
  unsigned __int8 a65;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  int v77;
  unsigned int v78;
  uint64_t v79;
  int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;

  LODWORD(STACK[0x24C]) = v66;
  LODWORD(STACK[0x250]) = v69;
  LODWORD(STACK[0x254]) = v70;
  v72 = *(_QWORD *)(v71 + 8 * (a1 - 8493));
  LODWORD(STACK[0x258]) = v67;
  v72 -= 1869866211;
  v73 = *(_DWORD *)(v72 + 4 * v68);
  v74 = *(_QWORD *)(v71 + 8 * (a1 & 0x38FF8E96));
  LODWORD(STACK[0x25C]) = v68;
  v74 -= 831564586;
  v75 = *(_DWORD *)(v74 + 4 * (a31 ^ 0x47));
  v76 = *(_QWORD *)(v71 + 8 * (a1 ^ 0x3EF6));
  LODWORD(STACK[0x260]) = HIWORD(v66);
  v76 -= 407303034;
  v77 = *(unsigned __int16 *)(v76 + 2 * (a35 ^ 0xDCLL));
  LODWORD(STACK[0x264]) = v66 >> 8;
  v78 = v75 ^ (((a1 - 1140862048) & 0xDEBE3A9F ^ 0xCDA06A85)
             + (unsigned __int16)(v77 - 29525)
             - ((2 * (v77 - 29525)) & 0xA036)) ^ v73;
  v79 = *(_QWORD *)(v71 + 8 * (a1 ^ 0x3CB2)) - 1576440126;
  v80 = *(_DWORD *)(v74 + 4 * (BYTE2(v66) ^ 0x49)) ^ *(_DWORD *)(v72 + 4 * a64) ^ ((unsigned __int16)(*(_WORD *)(v76 + 2 * (BYTE1(v67) ^ 0x5FLL)) - 29525)
                                                                                     - ((2
                                                                                       * (*(unsigned __int16 *)(v76 + 2 * (BYTE1(v67) ^ 0x5FLL))
                                                                                        - 29525)) & 0x1CEF0)
                                                                                     + 135260024) ^ ((*(_BYTE *)(v79 + (v70 ^ 0x60)) - 97) - ((2 * (*(unsigned __int8 *)(v79 + (v70 ^ 0x60)) - 97)) & 0x78) + 1796546108);
  v81 = *(_DWORD *)(v74 + 4 * (a65 ^ 0xE0)) ^ *(_DWORD *)(v72 + 4 * v65) ^ ((unsigned __int16)(*(_WORD *)(v76 + 2 * (BYTE1(v66) ^ 0x12))
                                                                                                 - 29525)
                                                                              - ((2
                                                                                * (*(unsigned __int16 *)(v76 + 2 * (BYTE1(v66) ^ 0x12))
                                                                                 - 29525)) & 0x1D6D8)
                                                                              - 1144460436);
  LODWORD(v74) = *(_DWORD *)(v74 + 4 * (a37 ^ 0xE0)) ^ *(_DWORD *)(v72 + 4 * a36);
  LODWORD(v72) = v78 ^ *a33 ^ ((*(_BYTE *)(v79 + (v69 ^ 0x60)) - 97)
                             - ((2 * (*(unsigned __int8 *)(v79 + (v69 ^ 0x60)) - 97)) & 0x1B0)
                             + 1889552088);
  v82 = v80 ^ LODWORD(STACK[0x7C4]);
  v83 = v81 ^ LODWORD(STACK[0x7C8]) ^ ((*(_BYTE *)(v79 + (v67 ^ 0x35)) - 97)
                                     - ((2 * (*(unsigned __int8 *)(v79 + (v67 ^ 0x35)) - 97)) & 0x17A)
                                     - 1174571075);
  LODWORD(v79) = v74 ^ LODWORD(STACK[0x7CC]) ^ ((unsigned __int16)(*(_WORD *)(v76 + 2 * (a59 ^ 0xDCLL)) - 29525)
                                              - ((2 * (*(unsigned __int16 *)(v76 + 2 * (a59 ^ 0xDCLL)) - 29525)) & 0xF540)
                                              + 544504480) ^ ((*(_BYTE *)(v79
                                                                                         + (v66 ^ 0xF2))
                                                                              - 97)
                                                            - ((2
                                                              * (*(unsigned __int8 *)(v79
                                                                                    + (v66 ^ 0xF2))
                                                               - 97)) & 0x116)
                                                            + 1976596363);
  LOBYTE(STACK[0x680]) = BYTE3(v72) ^ 0x36;
  LOBYTE(STACK[0x681]) = BYTE2(v72) ^ 0x75;
  LOBYTE(STACK[0x682]) = BYTE1(v72) ^ 0x8A;
  LOBYTE(STACK[0x683]) = v72 ^ 5;
  LOBYTE(STACK[0x684]) = HIBYTE(v82) ^ 0x72;
  a14[15] = (v79 ^ 0xED) - ((2 * (v79 ^ 0xED)) & 0x10) + 8;
  a14[14] = (BYTE1(v79) ^ 0x91) - ((v79 >> 7) & 0x10) + 8;
  a14[13] = (BYTE2(v79) ^ 0x6F) - ((2 * (BYTE2(v79) ^ 0x6F)) & 0x10) + 8;
  a14[12] = (BYTE3(v79) ^ 0x44) - ((v79 >> 23) & 0x10) + 8;
  a14[11] = (v83 ^ 0x17) - ((2 * v83) & 0x10) + 8;
  a14[10] = BYTE1(v83) - ((v83 >> 7) & 0x10) + 8;
  a14[9] = (BYTE2(v83) ^ 0xFE) - ((2 * (BYTE2(v83) ^ 0xFE)) & 0x10) + 8;
  a14[8] = (HIBYTE(v83) ^ 0x13) - ((v83 >> 23) & 0x10) + 8;
  a14[7] = (v82 ^ 0x82) - ((2 * v82) & 0x10) + 8;
  a14[6] = (BYTE1(v82) ^ 0x65) - ((v82 >> 7) & 0x10) + 8;
  a14[5] = (BYTE2(v82) ^ 0xD1) - ((v82 >> 15) & 0x10) + 8;
  a14[4] = (HIBYTE(v82) ^ 0x72) - ((v82 >> 23) & 0x10) + 8;
  a14[3] = (v72 ^ 5) - ((2 * v72) & 0x10) + 8;
  a14[2] = (BYTE1(v72) ^ 0x8A) - ((2 * (BYTE1(v72) ^ 0x8A)) & 0x10) + 8;
  a14[1] = (BYTE2(v72) ^ 0x75) - ((v72 >> 15) & 0x10) + 8;
  *a14 = LOBYTE(STACK[0x680]) - ((2 * LOBYTE(STACK[0x680])) & 0x10) + 8;
  return (*(uint64_t (**)(uint64_t))(a29 + 8 * a1))(2134650450);
}

uint64_t sub_100145648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  unsigned int v32;
  uint64_t v33;
  _BOOL4 v34;

  v34 = LODWORD(STACK[0x230]) == ((v32 + 129325684) & 0xF84A9FEF ^ 0x567ECE25);
  *(_QWORD *)(v33 + 472) = a22 + 8 * (LODWORD(STACK[0x230]) == ((v32 + 129325684) & 0xF84A9FEF ^ 0x567ECE25));
  LODWORD(STACK[0x300]) = -1070429884;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 8 * ((28 * v34) ^ v32)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_1001456E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  uint64_t v46;
  int v47;

  v42 = v36 - 1436;
  v43 = (v36 - 557932652) & 0xBBFF7B9E;
  v44 = v36 + 9780;
  v45 = 1075146641 * ((((v41 - 176) | 0x9C2594BB) + (~(v41 - 176) | 0x63DA6B44)) ^ 0xEB35F64);
  *(_DWORD *)(v41 - 168) = v45 ^ 0x195DBC56;
  *(_DWORD *)(v41 - 176) = 185890762 - v45;
  *(_DWORD *)(v41 - 172) = v44 ^ v45;
  *(_QWORD *)(v40 + 3320) = v37;
  *(_QWORD *)(v40 + 3312) = &STACK[0x8EC];
  v46 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v39 + 8 * (v42 - 3740)) - 819878055))(v41 - 176);
  v47 = *(_DWORD *)(v41 - 164);
  LODWORD(STACK[0x22C]) = v47;
  return (*(uint64_t (**)(uint64_t))(a36 + 8 * (int)(((v47 == v38) * (v43 ^ 0x9ABE3C3A)) ^ v42)))(v46);
}

uint64_t sub_1001457C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _BOOL4 v48;

  v45[61] = v42;
  v45[63] = v46 - 224;
  v45[64] = &STACK[0x348];
  LODWORD(STACK[0x310]) = v41 + 140;
  LODWORD(STACK[0x328]) = 601196639;
  v45[66] = v46 - 208;
  LODWORD(STACK[0x338]) = -1911746298;
  v45[413] = a40;
  *(_DWORD *)(v46 - 176) = v40
                         - 668045089
                         * ((-2004706978 - ((v46 - 176) | 0x8882995E) + ((v46 - 176) | 0x777D66A1)) ^ 0x3AB416AA)
                         + 10102;
  v47 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v44 + 8 * (v40 - 3699)) - 1843699118))(v46 - 176);
  v48 = *(_DWORD *)(v46 - 172) == v43;
  LODWORD(STACK[0x22C]) = v43 + 1;
  return (*(uint64_t (**)(uint64_t))(a36 + 8 * ((v48 * (v40 ^ 0x19E1)) ^ v40)))(v47);
}

uint64_t sub_1001458B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v44;

  v42 = v37 + 16;
  v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * (v36 - 2667)) - 1215688886);
  v43(v38, v42, 16, -1);
  v44 = v43(v38 + 16, v41 - 208, 16, -1);
  LODWORD(STACK[0x22C]) = v39;
  return (*(uint64_t (**)(uint64_t))(a36 + 8 * v36))(v44);
}

uint64_t sub_100145910()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(_QWORD))(v0 + 8 * (v1 + 1698820544)))(LODWORD(STACK[0x22C]));
}

uint64_t sub_100145928@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ (4642 * (a1 == v2))))
                            - (v1 ^ 0x9ABEBCD8)
                            - ((v1 + 2014591161) & 0x87EB55FF ^ 0xFFFFFFFF6541D191)))();
}

uint64_t sub_10014598C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;

  v49 = v44 & 0x87EB55FF;
  v50 = *(_DWORD *)(a8 - 0x5D69D7CA88F07F88);
  v51 = *(_QWORD *)(v48 + 8 * (v44 & 0xFFFFFFFF87EB55FFLL)) - 12;
  v52 = 1891100677
      * ((-2 - ((~(v47 - 176) | 0x24F7AB33DCA55A17) + ((v47 - 176) | 0xDB0854CC235AA5E8))) ^ 0x74E27BA2B0AD7B87);
  v46[416] = *(_QWORD *)(a8 - 0x5D69D7CA88F07FA0);
  v46[415] = a39;
  *(_DWORD *)(v47 - 132) = ((v44 & 0x87EB55FF) - 2027708813) ^ v52;
  *(_DWORD *)(v47 - 160) = v52 + v50 - (((v50 << ((v44 - 19) ^ 0xED)) + 894033282) & 0x89A94942) - 545680542;
  v46[413] = a44;
  v46[412] = v51 ^ v52;
  v53 = v45(v47 - 176);
  return (*(uint64_t (**)(uint64_t))(a36 + 8 * (v49 ^ 0x7473)))(v53);
}

uint64_t sub_100145AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v34;
  uint64_t v35;
  uint64_t v36;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 + 8 * ((43426 * (a9 == ((v34 + 2117907655) & 0x81C3374D) + 2134645073)) ^ v34)) - (((v34 + 3012898) | 0x9A901890) ^ (unint64_t)(v35 - 8))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_100145B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,int a43,uint64_t a44)
{
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v51 = *(_QWORD *)(v50 + 8 * v47) - 12;
  v52 = (v49 - 176) & 0x38FD8B36F5F8473CLL;
  v48[416] = a44;
  v48[412] = v51 ^ (1891100677 * ((v49 - 176 - 2 * v52 + 0x38FD8B36F5F8473CLL) ^ 0x68E85BA799F066ACLL));
  v48[415] = a21;
  *(_DWORD *)(v49 - 132) = (v47 - 2027708815) ^ (1891100677 * ((v49 - 176 - 2 * v52 - 168278212) ^ 0x99F066AC));
  *(_DWORD *)(v49 - 160) = 1891100677 * ((v49 - 176 - 2 * v52 - 168278212) ^ 0x99F066AC) + a43 - 748096619;
  v48[413] = v44;
  v53 = v45(v49 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a36 + 8 * ((int)v47 + 5099))
                                          - (((_DWORD)v47 - 536909122) & 0xBABEBADE ^ v46)))(v53);
}

uint64_t sub_100145C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t (*v37)(void);
  _DWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v38 = (_DWORD *)v37();
  return ((uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(2596158106 - ((v36 - 557872880) & 0xBBFE7BDF) + *(_QWORD *)(a36 + 8 * (int)(((*v38 == 2) * ((v36 - 557872880) ^ 0xDEBFDEC1)) ^ v36))))(v38, v39, v40, v41, v42, v43, v44, v45, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_100145C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;

  *(_QWORD *)(v31 - 0x2FBB52A055EC7EBFLL) = 0x5EEEDCED76C466B1;
  *(_QWORD *)(v30 - 0xC2533AAF1CB8BAALL) = 0x77F0D689441C57C0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(2596158106 - ((v32 ^ 0xDEBFFEB1) - 1698825585) + *(_QWORD *)(v33 + 8 * (int)(v32 ^ 0xDEBFFEB1)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_100145D08()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)(((v2 + (v0 ^ 0x9ABE7A91) + 1718) * (v1 == 215)) ^ v0))
                            - (v0 ^ 0xC4145C1A)
                            + 3289652237))();
}

uint64_t sub_100145D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = 95 * (v32 ^ 0xC4141C84);
  *(_QWORD *)(v33 + 176) = 1602288679;
  v36 = *(_QWORD *)(v34 + 8 * ((9589 * (v32 != 118860344)) ^ (v32 + 1005319333)));
  *(_QWORD *)(v33 + 160) = a8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 - (v35 ^ 0x35C7)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_100145DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,_DWORD *a44)
{
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  _QWORD *v50;

  v50 = (_QWORD *)(v44 + ((v45 + v46) << 7));
  v50[3] = a8;
  *a44 += 256;
  v50[4] = a8 + 256;
  *a44 += 256;
  v50[5] = a8 + 512;
  *a44 += 256;
  v50[6] = a8 + 768;
  *a44 += 256;
  v50[7] = a8 + 1024;
  *a44 += 256;
  v50[8] = a8 + 1280;
  *a44 += 256;
  v50[9] = a8 + 1536;
  *a44 += 256;
  v50[10] = a8 + 1792;
  *a44 += 256;
  v50[11] = a8 + 2048;
  *a44 += 256;
  v50[12] = a8 + 2304;
  *a44 += 256;
  v50[13] = a8 + 2560;
  *a44 += 256;
  v50[14] = a8 + 2816;
  *a44 += 256;
  v50[15] = a8 + 3072;
  *a44 += 256;
  v50[16] = a8 + 3328;
  *a44 += 256;
  v50[17] = a8 + 3584;
  *a44 += 256;
  v50[18] = a8 + 3840;
  *a44 += 256;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * (((v47 == v45) * v48) ^ a9)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8 + 4096);
}

uint64_t sub_100145FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  uint64_t v31;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 + 8 * (v30 + 1698822928)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_100145FC8@<X0>(uint64_t a1@<X4>, uint64_t (*a2)(uint64_t)@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v39 = *v34;
  v40 = *(_DWORD *)(a1 - 0x56481F36160250F9);
  v41 = *(_QWORD *)(v38 + 8 * v35);
  v42 = 210615973
      * (((~(v37 - 176) | 0xE8DBC3942CF2F290) + ((v37 - 176) | 0x17243C6BD30D0D6FLL)) ^ 0x58E7D9857AE2C471);
  v36[414] = a1 - 0x56481F36160250F5;
  v36[415] = a33;
  v36[412] = v39;
  v36[417] = v41 ^ v42;
  v36[413] = a34;
  *(_DWORD *)(v37 - 124) = ((v35 + 10949) ^ 0xD277BAC1) - v42 + v40;
  *(_DWORD *)(v37 - 144) = v42 + 1741050007 + v35;
  v43 = a2(v37 - 176);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a30 + 8 * ((int)v35 + 12579)) - 12))(v43);
}

uint64_t sub_1001460C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42)
{
  int v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;

  v48 = *(_QWORD *)(a8 - 0x6F7634AB0303F6BELL);
  v49 = 1130658149 * ((v47 - 176) ^ 0xCD3CB9CD);
  *(_DWORD *)(v47 - 176) = (v42 + 19928) ^ v49;
  *(_DWORD *)(v47 - 168) = v49 - 1393374738;
  *(_DWORD *)(v47 - 152) = -1130658149 * ((v47 - 176) ^ 0xCD3CB9CD) + 1295015237 * a42 + 1299614110;
  *(_QWORD *)(v46 + 3312) = v48;
  v50 = v43(v47 - 176);
  *(_DWORD *)(v44 - 0xE636907960D9A94) = *(_DWORD *)(v47 - 172);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a36 + 8 * v42)
                                          - (((v42 - 2010914687) | 0x129A1A0Eu) ^ (unint64_t)(v45 - 4))))(v50);
}

uint64_t sub_10014619C()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x234]) = 751084959;
  return ((uint64_t (*)(void))(2596158106 - (v0 ^ 0x9ABE0AB4) + *(_QWORD *)(v1 + 8 * v0) - 8))();
}

uint64_t sub_1001461E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,int a43)
{
  uint64_t v43;
  int v44;

  LODWORD(STACK[0x234]) = 751084959;
  return ((uint64_t (*)(void))(*(_QWORD *)(v43
                                        + 8 * ((42915 * ((((v44 - 8542) ^ v44 ^ (a43 == 381450761)) & 1) == 0)) ^ v44))
                            - 4))();
}

uint64_t sub_100146260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,int a43,uint64_t a44)
{
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BOOL4 v55;

  v51 = (v44 + v47 - 1698814644 - 3844) | 0x7300;
  v52 = *(_QWORD *)(v50 + 8 * v47);
  v53 = 210615973
      * ((((2 * (v49 - 176)) | 0x4C029026D07C9BAALL) - (v49 - 176) - 0x26014813683E4DD5) ^ 0x69C2ADFDC1D184CALL);
  *(_DWORD *)(v49 - 168) = v53 + a43 + 1553211817;
  *(_DWORD *)(v49 - 140) = (v47 - 961777035) ^ v53;
  a5[414] = v46;
  a5[415] = v52 - v53;
  a5[412] = a44;
  v54 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v45 + 8 * (v47 - 671)) - 1077287))(v49 - 176);
  v55 = *(_DWORD *)(v49 - 144) == 751126977;
  LODWORD(STACK[0x234]) = v48 - 192;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a36 + 8 * ((v51 - 19848) ^ v47 ^ (31150 * v55))) - 12))(v54);
}

uint64_t sub_100146374()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (v1 ^ (2
                                               * (((v0 == 0x6E31983A8D8A405CLL) ^ (13 * (v1 ^ 0xA7))) & 1))))
                            - 12))();
}

uint64_t sub_1001463B4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 - 0x6E31983A8D8A405CLL) = ((LODWORD(STACK[0x228]) - 2134650450) & 0xFFFF0000)
                                         + 40487321
                                         + ~((((v1 + 1174146303) & 0xBA03FD7B) + 80839301) & (2
                                                                                            * (LODWORD(STACK[0x228])
                                                                                             - 2134650450)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * v1) - 12))();
}

uint64_t sub_100146424@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  LODWORD(STACK[0x234]) = v1;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 == 0x6574A9224247D756) ^ (a1 + 36)) & 1)
                                * ((a1 - 665172285) & 0x27A5BBFD ^ 0x80D9)) ^ a1)))();
}

uint64_t sub_10014648C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 - 0x6574A9224247D756) = (unsigned __int16)(LOWORD(STACK[0x228]) - 11858)
                                         - (((v0 ^ 0x9ABEBAA2) + 1698828606) & (2 * (LODWORD(STACK[0x228]) + 53678)))
                                         + 1821058542;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * v0) - 8))();
}

uint64_t sub_1001464EC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2 + 8 * (v1 + v0 + 586)) - 4))(LODWORD(STACK[0x234]));
}

uint64_t sub_100146504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  uint64_t v68;
  int v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  void (*v76)(uint64_t);
  uint64_t v77;
  uint64_t v78;

  *(_QWORD *)(v68 - 0x556F58B8B61AF18) = a41;
  *(_DWORD *)(a21 - 0x540E9BE4FD9FC339) = (a68 ^ 0xFFBC3FDF) + 2139090547 + ((a68 << (v69 - 65)) & 0xFF787FBE);
  v74 = *(_QWORD *)(a22 - 0x2C86DCAB8BD0EBF6);
  v75 = 879478891
      * ((((v73 - 176) | 0x77DE25B226511493) - ((v73 - 176) | 0x8821DA4DD9AEEB6CLL) - 0x77DE25B226511494) ^ 0xF0BF80D0962829D0);
  v70[412] = *(_QWORD *)(v72 + 8 * (v69 - 30079)) - v75 - 8;
  *(_DWORD *)(v73 - 168) = (v69 + 527146276) ^ v75;
  v70[414] = v74;
  v76 = (void (*)(uint64_t))(*(_QWORD *)(v71 + 8 * ((v69 - 30079) ^ 0x1EE3)) - 1131089138);
  v76(v73 - 176);
  *(_QWORD *)(a22 - 0x2C86DCAB8BD0EBE6) = (a52 ^ 0x7FFFDDED7FED6FFBLL)
                                          - 0x211101000929094ALL
                                          + ((2 * a52) & 0xFFFFBBDAFFDADFF6);
  *(_QWORD *)(a22 - 0x2C86DCAB8BD0EBDELL) = (a53 ^ 0x77F1D6BBD51D7FF1)
                                          - 0x1003291012831
                                          + ((2 * a53) & 0xEFE3AD77AA3AFFE2);
  v77 = *(_QWORD *)(a22 - 0x2C86DCAB8BD0EBF6);
  v70[412] = *(_QWORD *)(v72 + 8 * (v69 - 30116))
           - 879478891
           * ((v73 - 176 - 2 * ((v73 - 176) & 0x59A0A6FB959EA1E4) + 0x59A0A6FB959EA1E4) ^ 0xDEC1039925E79CA7)
           - 8;
  v70[414] = v77;
  *(_DWORD *)(v73 - 168) = (v69 + 527146276) ^ (879478891
                                              * ((v73 - 176 - 2 * ((v73 - 176) & 0x959EA1E4) - 1784765980) ^ 0x25E79CA7));
  v76(v73 - 176);
  v70[150] = *(_QWORD *)(v72 + 8 * (v69 - 29912)) - 4;
  LODWORD(STACK[0x600]) = a39;
  v70[152] = a22;
  LOBYTE(STACK[0x5D8]) = 91;
  v70[412] = &STACK[0x5D0];
  *(_DWORD *)(v73 - 168) = v69
                         - 30079
                         + 263575687 * (((v73 - 176) & 0x35BF2FAA | ~((v73 - 176) | 0x35BF2FAA)) ^ 0x52601013)
                         + 808438048;
  v78 = ((uint64_t (*)(uint64_t))((char *)*(&off_10112C750 + v69 - 33428) - 1212384450))(v73 - 176);
  return (*(uint64_t (**)(uint64_t))(v72 + 8 * (v69 - 10868)))(v78);
}

uint64_t sub_1001467FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,unsigned int a39)
{
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v43 = ((uint64_t (*)(_QWORD))(*(_QWORD *)(v41 + 8 * (v39 ^ (v40 + 3392))) - 2111719318))(a39);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v42 + 8 * (v39 + 1698819662)) - 12))(v43);
}

uint64_t sub_100146848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,unsigned int a43)
{
  int v43;
  uint64_t v44;

  return (*(uint64_t (**)(_QWORD))(v44
                                           + 8 * (((a38 != 7) * ((v43 + 1698833503) ^ 0x43CF)) ^ (v43 + 1698820544))))(a43);
}

uint64_t sub_100146890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  uint64_t v45;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8 * (((a44 != 0) * (v44 - a9 + 1698862585)) ^ v44)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_1001468C4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  int v30;
  uint64_t v31;

  v30 = ((v29 - 139038) & 0x9ABFFABE) + a1;
  v31 = sub_100DD0758();
  return (*(uint64_t (**)(uint64_t))(a29 + 8 * v30))(v31);
}

uint64_t sub_1001468FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,unsigned int a39)
{
  int v39;
  int v40;
  uint64_t v41;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v41
                                                     + 8
                                                     * ((((a38 & 0xFFFFFFFD) == 1) * (23 * (v39 ^ (v40 + 3261)) - 16183)) ^ (v39 + 1698823103)))
                                         - 4))(a39);
}

uint64_t sub_100146948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;

  v39 = (v37 - v36 - 3028);
  v48 = ((uint64_t (*)(void))(*(_QWORD *)(v38 + 8 * (v37 - 12897)) - 1382345154))();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a36 + 8 * ((7798 * (v48 != 0)) ^ v37)) - ((v39 - 2596148167) ^ (v37 - 6448))))(v48, v40, v41, v42, v43, v44, v45, v46, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_1001469B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;

  v50 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v40 + 8 * (v39 - 7294)) - 1546968595))(0, a39, 0);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 + 8 * ((487 * (v50 == 0)) ^ v39)) - ((v39 + 1958706026) ^ (4 * v39) ^ 0xA128u ^ 0x74BF9811)))(v50, v42, v43, v44, v45, v46, v47, v48, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_100146A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  unsigned int v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  ((void (*)(uint64_t))(*(_QWORD *)(v42 + 8 * (int)(v39 ^ 0x74BFB226)) - 1702448739))(a39);
  v43 = v40(a39);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v41
                                                      + 8
                                                      * (int)(v39 ^ 0x74BFE246 ^ ((v39 > 0xEFE41F64)
                                                                                * ((v39 + 637442133) ^ 0x9ABEFAB5))))
                                          - 8))(v43);
}

uint64_t sub_100146AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,_QWORD *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v44 = ((uint64_t (*)(void))(*(_QWORD *)(v43 + 8 * (v40 ^ 0x31F8)) - 646362110))();
  ((void (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v43 + 8 * (v40 ^ 0x28EB)) - 143599283))(v44, a40, *(_QWORD *)(*(_QWORD *)(v43 + 8 * (v40 - 13739)) - 1339154267));
  v45 = v41(a40);
  *a21 = a39;
  return (*(uint64_t (**)(uint64_t))(v42 + 8 * v40))(v45);
}

uint64_t sub_100146B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,unsigned int a39)
{
  int v39;
  uint64_t v40;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v40 + 8 * (v39 + 1698823143)) - 4))(a39);
}

uint64_t sub_100146B84(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 40) = result;
  return result;
}

uint64_t sub_100146BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  int v65;
  uint64_t v66;
  int v67;

  v67 = v65 + 31545;
  LODWORD(a38) = (a65 + v67 - 18 + ((v67 - 30) | 0xC) + 54);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 + 8 * ((237 * (a42 >= (int)a38 - 473919378)) ^ v67)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_100146C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t *a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned __int8 a69;
  int v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;

  v73 = *a44;
  v74 = 19382863 * ((-2 - ((~(v72 - 176) | 0x53A97F29) + ((v72 - 176) | 0xAC5680D6))) ^ 0x5B6CF3F7);
  v71[412] = v71[20];
  *(_DWORD *)(v72 - 168) = v69 - v74 + 3979;
  *(_DWORD *)(v72 - 164) = v74 + 1344506351;
  *(_DWORD *)(v72 - 152) = v74 - 923244059;
  v71[416] = v73;
  *(_WORD *)(v72 - 156) = ((a69 ^ 0xB35D) + 20219 + ((a69 << ((v69 ^ 2) - 93)) & 0xBA)) ^ (-15793
                                                                                         * ((-2
                                                                                           - ((~(v72 - 176) | 0x7F29)
                                                                                            + ((v72 - 176) | 0x80D6))) ^ 0xF3F7));
  v75 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v70 + 8 * (v69 - 13212)) - 182464914))(v72 - 176);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(a36
                                                               + 8
                                                               * ((54
                                                                 * (*(_DWORD *)(v72 - 160) != ((v69 + 44300468) | 0x981A0A8E)
                                                                                            + 2080259947)) ^ v69))
                                                   - 8))(v75, 2134650450);
}

uint64_t sub_100146D74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,int a42,int a43)
{
  uint64_t v43;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * ((27123 * (a43 - 473000099 == a39)) ^ a9)) - (((a9 - 1474300748) | 0x175DC2AAu) + (unint64_t)((a9 + 413391660) | 0x821A2816)) + 0x15A3C2950))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_100146DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42,uint64_t a43,_DWORD *a44)
{
  int v44;
  int v45;
  uint64_t v46;

  *a44 = a42;
  return ((uint64_t (*)(void))(*(_QWORD *)(v46
                                        + 8
                                        * (((v44 != 279541119) * (v45 + v44 - 616543260 - 117)) ^ v44 & 0x4000059A))
                            - 8))();
}

uint64_t sub_100146E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,unsigned int a43)
{
  int v43;
  uint64_t v44;

  return (*(uint64_t (**)(_QWORD))(v44 + 8 * (v43 + 1698820544)))(a43);
}

uint64_t sub_100146E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  uint64_t v31;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 + 8 * v30) - ((v30 + 1430246639) & 0xAABFEEFF) + 11804))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_100146EAC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((106 * (v1 < ((a1 - 9476) | 0x12C1) - 951448785)) ^ a1)) - 8))();
}

uint64_t sub_100146EF0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((54 * (v1 != a1 - 4685 - v2 + 697035900)) ^ (a1 - 4685)))
                            + v3
                            - (a1 - 4685 - v2 + 10)))();
}

uint64_t sub_100146F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39,uint64_t a40,_DWORD *a41)
{
  int v41;
  int v42;
  uint64_t v43;

  *a41 = a39 - 2134650450;
  return ((uint64_t (*)(void))(*(_QWORD *)(v43 + 8 * (v41 + v42)) - 4))();
}

uint64_t sub_100146F60()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((31516 * (v0 == v1 - v2 + 747367538)) ^ v1))
                            + v3
                            - (v1 - v2)))();
}

uint64_t sub_100146F94@<X0>(_DWORD *a1@<X4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  int v33;
  uint64_t v34;

  *a1 = a33 - 2134650450;
  return ((uint64_t (*)(void))(*(_QWORD *)(v34 + 8 * (a2 + v33)) - 4))();
}

uint64_t sub_100146FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  uint64_t v57;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 + 8 * (int)((a9 + 1352069735) ^ 0xEB557AD5 ^ (63586 * ((a9 + 1352069735) > 0xED8421DC)))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_100147014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v57;
  uint64_t v58;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * ((115 * (HIDWORD(a37) == ((v57 - 1911055671) & 0x71E8E55D ^ 0xA057))) ^ v57)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_10014705C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  *(_QWORD *)(v59 + 248) = a8 - 0x5B9245F5122A913ELL;
  v61 = *(_QWORD *)(a8 - 0x5B9245F5122A913ELL);
  *(_QWORD *)(v59 + 160) = v61;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 + 8 * (((v61 != 0) * (((v58 - 35380) | 0x2142) ^ 0x37BA)) ^ v58)) - 7093 * (v58 ^ 0xA05Eu) + 14178))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_1001470D4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v0 + 4729) * (v1 == 35)) ^ v0))
                            - ((v0 - 23015915) & 0x15EFFFD ^ 0x575)))();
}

uint64_t sub_10014711C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;

  v3 = (((_DWORD)a1 + 195327614) & 0x45BDEF4 ^ 0xFFFFFFFFFFFFA504) + *(_QWORD *)(v2 + 8 * a1);
  v1[24] = v1[31];
  v1[22] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 + 13569)) - 8))();
}

uint64_t sub_100147180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v10[25] = v8;
  v10[26] = v7;
  v10[27] = v9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11
                                                                       + 8
                                                                       * ((482
                                                                         * (((*(unsigned __int8 *)(v8 + 4) - 85) ^ 0xD7FDEEEC)
                                                                          + 2132539868
                                                                          + (((a7 - 6666) ^ 0xAFFB9D3E) & (2 * (*(unsigned __int8 *)(v8 + 4) - 85))) == 1461315784)) ^ a7)))(3691269186, 4293132288, 909561387, 2596145252);
}

uint64_t sub_100147288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  int v56;
  uint64_t v57;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8 * (int)((1461 * ((a7 ^ 0x1A16 ^ (v55 - 3838) ^ (*(unsigned __int8 *)(a44 + 5) - 85)) + v56 + (a8 & (2 * (*(unsigned __int8 *)(a44 + 5) - 85))) == (_DWORD)a5)) ^ a7)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_1001472D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * ((65253 * (((a7 + 101299531) | 0xD8048180) + ((*(unsigned __int8 *)(a44 + 6) - 73) ^ a6) + (a8 & (2 * (*(unsigned __int8 *)(a44 + 6) - 73))) - 1592956895 == (_DWORD)a5)) ^ a7));
  return v56(a1, a2, a3, a4, a5, a6, v56, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_10014733C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  unsigned int v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * (int)((31202 * (v55 > 0x18EE4EE7)) ^ (v55 + 569479511)));
  return v57(a1, a2, a3, a4, a5, a6, v57, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_1001473AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42)
{
  int v42;
  uint64_t v43;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * ((495 * ((((a42 - 117) << ((v42 - 39) & 0x49 ^ 8)) & a8) + ((a42 - 117) ^ a6) != (_DWORD)a6)) ^ v42)) - 206 * (v42 ^ 0x40D8u) + 12764))(a1, a2, a3, a4, a5, a6, 206 * (v42 ^ 0x40D8u), a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_10014742C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  int v45;
  uint64_t v46;

  return ((uint64_t (*)(void))(*(_QWORD *)(v46
                                        + 8
                                        * ((54936
                                          * ((a8 & (2 * (*(unsigned __int8 *)(a44 + 5) - 117)))
                                           + ((*(unsigned __int8 *)(a44 + 5) - 117) ^ a6) == 6386 * (v45 ^ 0x410B) + v44)) ^ v45))
                            - 8))();
}

uint64_t sub_100147478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  int v45;
  uint64_t v46;

  return ((uint64_t (*)(void))(*(_QWORD *)(v46
                                        + 8
                                        * ((54838
                                          * ((a8 & (2 * (*(unsigned __int8 *)(a44 + 6) - 105)))
                                           + ((*(unsigned __int8 *)(a44 + 6) - 105) ^ (((v45 + 1162228460) & 0xBAB9BDEE)
                                                                                     + v44)) == v44
                                                                                              + (v45 ^ 0x7DF7)
                                                                                              - 2842)) ^ v45))
                            - 8))();
}

uint64_t sub_1001474E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  int v45;
  uint64_t v46;

  return ((uint64_t (*)(void))(*(_QWORD *)(v46
                                        + 8
                                        * ((((((v45 - 2842) ^ ((a8 & (2 * (*(unsigned __int8 *)(a44 + 7) - 100)))
                                                             + ((*(unsigned __int8 *)(a44 + 7) - 100) ^ a6) == a6)) & 1) == 0)
                                          * v44) ^ v45))
                            - 8))();
}

uint64_t sub_100147528(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42)
{
  uint64_t v42;
  uint64_t v43;

  LOBYTE(STACK[0x207]) = 0;
  return ((uint64_t (*)(void))(v42
                            - (a4 + a7 + 86)
                            + *(_QWORD *)(v43 + 8 * ((3354 * (a42 == a5)) ^ a7))
                            - 4))();
}

uint64_t sub_100147560(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,int a43,uint64_t a44,unsigned __int8 *a45)
{
  unsigned int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  int v63;
  unsigned int v64;
  _BOOL4 v65;
  _BOOL4 v66;
  _BOOL4 v67;

  v51 = (((*a45 - ((2 * *a45) & 0x96)) << 24) + 1258291200) ^ 0x4B000000;
  v52 = v51 + a1 - ((v51 << (a7 + 29)) & 0xB8000000);
  v53 = a45[1];
  v54 = (2 * v53) & 0x1D0;
  v55 = (a2 + ((v53 - (_DWORD)v54) << 16) + 637796352) ^ 0x25E80000;
  v56 = (2 * v55) & 0x6C6C0000;
  v57 = (v55 + a3 - v56) ^ a3 | v52 ^ a1;
  v58 = (((a45[2] - ((2 * a45[2]) & 0x112)) << 8) - 1585346304) ^ 0xA1818900;
  v59 = (2 * v58) & 0x4A81BE00;
  v60 = (v57 + v49 - ((2 * v57) & 0x76768512)) ^ v49 | (v58 + v48 - v59) ^ v48;
  v61 = a45[3];
  v62 = (v46 + v61);
  v63 = (v60 + v47 - ((2 * v60) & 0x242ECEB4)) ^ v47 | (v62 + (~(2 * v61) | 0xFFFFFE87) + 1) ^ v46;
  v64 = (v63 ^ 0xFF3DFF7F) + 463628939 + ((2 * v63) & 0xFE7BFEFE);
  v65 = v64 < v45;
  v66 = v64 > a43 - 1683735624;
  if (a43 - 1683735624 < v45 != v65)
    v67 = v65;
  else
    v67 = v66;
  LOBYTE(STACK[0x207]) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 + 8 * (int)((28 * !v67) ^ a7)) - 8))(v62, 4294966919, v59, a45, v52, v56, a7, v54, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_1001476E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,_DWORD *a44)
{
  int v44;
  uint64_t v45;
  uint64_t v46;

  *a44 = a38 + a39 + 2147364563;
  LOBYTE(STACK[0x207]) = 1;
  return ((uint64_t (*)(void))(v45 - (a7 ^ (v44 - 811)) + *(_QWORD *)(v46 + 8 * a7) - 4))();
}

uint64_t sub_100147728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t (*a40)(void))
{
  LOBYTE(STACK[0x227]) = STACK[0x207];
  return a40();
}

#error "1001477A0: call analysis failed (funcsize=23)"

uint64_t sub_1001477A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  *(_QWORD *)(a5 - 0x55C452D594D6B093) = **(_QWORD **)(v66 + 232);
  *(_DWORD *)(v65 - 0x4F285FAEE718045) = a65;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 + 8 * a9) - ((a9 - 14235) ^ 0x2031)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_1001477FC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * (int)(((((a1 + 357910420) & 0xEAAAAD5F) + 32430) * (v1 == 35)) ^ a1))
                            - 8))();
}

uint64_t sub_100147838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  int v35;
  uint64_t v36;
  uint64_t v37;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * (int)(((((a35 + 1430062672) & 0xBE66FFF7) + 1369292676) * ((STACK[0x227] & 1) == 0)) ^ (v35 + a35 + 1913))) - 4))(a1, 2134650450, a3, a4, v36, a6, a7, a22);
}

uint64_t sub_1001478A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int v65;
  uint64_t v66;
  uint64_t v67;

  *(_QWORD *)(a5 - 0x55C452D594D6B093) = *a39;
  *(_DWORD *)(v66 - 0x4F285FAEE718045) = a65;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 + 8 * ((22918 * (v65 == 2109530456)) ^ (v65 + 1369306756))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_10014792C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v56;
  uint64_t v57;

  *(_QWORD *)(a5 - 0x55C452D594D6B093) = 0;
  *(_DWORD *)(v56 - 0x4F285FAEE718045) = a2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 + 8 * a9) - ((a9 + 68483092) & 0xFBEAFCDF) + 11350))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_100147988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int a65;
  int v65;
  uint64_t v66;

  return (*(uint64_t (**)(_QWORD))(v66
                                           + 8
                                           * ((21090
                                             * (a38 != ((v65 - 1968184394) ^ 0x8AB07A21 ^ ((v65 - 1968184394) | 0x100E2A8A) ^ 0x9ABE50A0))) ^ v65)))(a65);
}

void sub_1001479E0(uint64_t a1)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v2 = ((*(_QWORD *)(a1 + 8) - 0x6CA6F0EE111A2BB6) ^ 0x65DBCDB37FFC4DFBLL)
     - 0x65DBCDB35D200E72
     + ((2 * (*(_QWORD *)(a1 + 8) - 0x6CA6F0EE111A2BB6)) & 0xCBB79B66FFF89BF6);
  v3 = ((*(_QWORD *)(a1 + 16) - 0x6CA6F0EE111A2BB6) ^ 0x57F3ADBABFDFBFF8)
     - 0x57F3ADBA9D03806FLL
     + ((2 * (*(_QWORD *)(a1 + 16) - 0x6CA6F0EE111A2BB6)) & 0xAFE75B757FBF7FF0);
  v4 = v2 < 0x22DC3F89;
  v5 = v2 > v3;
  if (v4 != v3 < 0x22DC3F89)
    v5 = v4;
  v1 = *(_DWORD *)(a1 + 4) ^ (1075146641 * (a1 ^ 0x9296CBDE));
  __asm { BR              X8 }
}

uint64_t sub_100147BFC(uint64_t a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4
                                                               + 8
                                                               * ((19728
                                                                 * ((a2 ^ 0xDC87C1B6)
                                                                  - 1949009800
                                                                  + (a4 & 0x27B3BFFC ^ 0x6B03C90) != ((2881 * (v5 ^ 0x81E4)) ^ 0x9FAE6033))) ^ (v5 - 27084)))
                                                   - 12))(2679003254, 1536444136);
}

uint64_t sub_100147CA4@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  _QWORD *v11;
  uint64_t v12;
  _DWORD *v13;
  _BOOL4 v14;
  uint64_t v15;
  unsigned int v16;
  int v17;

  v14 = a4 < v7;
  v15 = (a2 - 1536444136);
  v16 = (((v4 + v15) ^ *(_DWORD *)(*v11 + (*v13 & v10))) & ((a3 + 263627242) & 0xF0497E45 ^ 0x7FFFC7BA)) * v9;
  v17 = *(unsigned __int8 *)(v5 + (((_BYTE)a2 + 24) & 0xF | (16 * (((v16 ^ HIWORD(v16)) * v9) >> 24)))) ^ *(unsigned __int8 *)(v4 + v15 - 0x6CA6F0EE111A2BB6) ^ (-7 * (v16 ^ HIWORD(v16)));
  if (v14 == a2 + 1142559119 < a1)
    v14 = a2 + 1142559119 < a4;
  *(_BYTE *)(v12 + v15) = v17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((v14 * v8) ^ a3)) - 12))();
}

uint64_t sub_100147D78(uint64_t a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((41
                                          * ((a2 ^ 0x3481A5A6)
                                           + 1610380542
                                           + ((((v5 - 33184) | 0x3804) - 1766065077) ^ a4 & 0xF7BF77DC) != 1541157100)) ^ (v5 - 27084)))
                            - 12))();
}

uint64_t sub_100147DF0@<X0>(int a1@<W0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  _QWORD *v8;
  uint64_t v9;
  _DWORD *v10;
  unsigned int v11;

  v11 = (((v2 + a1 - 1541157101) ^ *(_DWORD *)(*v8 + (*v10 & (((v5 - 195337896) & 0xBA4BED7) - 1845550281)))) & 0x7FFFFFFF)
      * v7;
  *(_BYTE *)(v9 + (a1 - 1541157101)) = *(_BYTE *)(v3
                                                              + (((_BYTE)a1 + 19) & 0xF | (16
                                                                                         * (((v11 ^ HIWORD(v11)) * v7) >> 24)))) ^ *(_BYTE *)(v2 + (a1 - 1541157101) - 0x6CA6F0EE111A2BB6) ^ (-7 * (v11 ^ BYTE2(v11)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((a1 - 1 != a2) * v6) ^ v5)) - 12))();
}

uint64_t sub_100147E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int8x16_t a47)
{
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int8x16_t v52;

  a10 = v51;
  a11 = v50;
  a12 = v49;
  v52.i64[0] = 0xD2D2D2D2D2D2D2D2;
  v52.i64[1] = 0xD2D2D2D2D2D2D2D2;
  a47 = veorq_s8(vaddq_s8(*(int8x16_t *)*(_QWORD *)(v49 + 32), v52), (int8x16_t)xmmword_100DF7630);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * (int)((((v47 ^ 0x4EC4) - 13296) * (&a9 != (uint64_t *)-304)) ^ v47)) - (v47 ^ 0x384DLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, v51, v50, v49, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_100147F04@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * (a1 ^ (57489 * (v15 - 0x6D3D587D551A07D2 == a14 + 0x261BB69499CBCC78))))
                            - (((a1 - 23366) | 0x2005u) ^ 0x3809)))();
}

uint64_t sub_100147F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  uint64_t v57;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 + 8 * a9) - (a9 - 15169) + 14329))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_100147FF8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * (((179 * (v0 ^ 0x38B0) - 32335) * (v2 == 0x6CA6F0EE111A2BB6)) | v0))
                            - ((v0 ^ 0x38B0u)
                             + 30156)
                            + 30329))();
}

uint64_t sub_100148050@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;
  int v14;
  _BOOL4 v16;

  v16 = a13 == v14 || (((_BYTE)a13 + 9) & 0xF) != ((a1 - 1777665974) & 0x69F4FFA7 ^ 0xFFFF2DB8) + (a1 ^ 0xDA48);
  return (*(uint64_t (**)(void))(v13 + 8 * ((25 * v16) ^ a1)))();
}

uint64_t sub_1001480AC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v1 - 42169) * (v0 == 0x3AA9AE7BC0669F96)) ^ v1))
                            - ((12373 * (v1 ^ 0xA4C4u)) ^ 0x90FBLL)))();
}

uint64_t sub_100148104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21)
{
  uint64_t v21;
  int v22;
  unsigned int v23;

  v23 = a20 - ((a9 + 1570914224) & 0x9939E692) + ((v22 + 2912) ^ 0xEB0A8C20) - 63;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 + 8 * ((13 * ((v23 ^ 0x19A50C9C) - 1090580545 + ((2 * v23) & 0xAA73FFAA ^ 0x8831E682) != 339283860)) ^ v22)) - 4))(a1, a2, a3, 4286735353, 2449431420, a21, a11, a10);
}

uint64_t sub_1001481DC@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X5>, _QWORD *a4@<X6>, _DWORD *a5@<X7>, int a6@<W8>)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;

  v11 = (((a3 + v7 - 339283861) ^ *(_DWORD *)(*a4 + (*a5 & a2))) & 0x7FFFFFFF) * ((11083 * (v9 ^ 0x7682)) ^ 0xFF82E218);
  *(_BYTE *)(a3 + (v7 - 339283861) - 0x6CA6F0EE111A2BB6) = *((_BYTE *)*(&off_10112C750 + (v9 ^ 0x72DC))
                                                                           + ((((v11 ^ HIWORD(v11)) * a1) >> 24) & 0xFFFFF0FF | ((((_BYTE)v7 + 107) & 0xF) << 8))
                                                                           - 436514959) ^ *(_BYTE *)(v10 + (v7 - 339283861)) ^ (-7 * (v11 ^ BYTE2(v11)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v7 - 1 != v6) * a6) ^ v9)) - 4))();
}

void sub_10014829C()
{
  int v0;
  int v1;
  int *v2;

  if (v0 == 220581991)
    v1 = 457841613;
  else
    v1 = -1354551995;
  *v2 = v1;
}

uint64_t sub_1001482FC()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v0 + 8 * v1) - 4))(1125135019);
}

uint64_t sub_100148D98(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46,int a47,int a48)
{
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  uint64_t v57;
  int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  int v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  uint64_t v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  uint64_t v88;
  int v89;
  unsigned int v90;
  char *v91;
  char *v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  char *v96;
  char *v97;
  unsigned int v98;
  int v99;
  int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  int v137;
  int v138;
  unsigned int v139;
  int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  int v158;
  int v159;
  unsigned int v160;
  int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  int v177;
  int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  int v182;
  unsigned int v183;
  int v184;
  int v185;
  unsigned int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  __int16 v192;
  int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  int v197;
  unint64_t v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  int v203;
  unsigned int v204;
  int v205;
  unsigned int v206;
  int v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  int v219;
  unsigned int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  unint64_t v225;
  unsigned int v226;
  unsigned int v227;
  int v228;
  int v229;
  int v230;
  unsigned int v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  int v242;
  int v243;
  unsigned int v244;
  int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  unsigned int v255;
  int v256;
  int v257;
  int v258;
  unsigned int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  int v265;
  unsigned int v266;
  unsigned int v267;
  int v268;
  unsigned int v269;
  int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  int v275;
  unsigned int v276;
  int v277;
  unsigned int v278;
  unsigned int v279;
  int v280;
  unsigned int v281;
  int v282;
  unsigned int v283;
  unsigned int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  unsigned int v290;
  unsigned int v291;
  int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  int v315;
  int v316;
  unsigned int v317;
  int v318;
  unsigned int v319;
  int v320;
  BOOL v321;
  int v322;
  int v323;
  int v324;
  int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  int v329;
  unsigned int v330;
  int v331;
  unsigned int v332;
  int v333;
  int v334;
  unsigned int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  unsigned int v340;
  unsigned int v341;
  unsigned int v342;
  int v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  int v348;
  unsigned int v349;
  unsigned int v350;
  int v351;
  int v352;
  unsigned int v353;
  unsigned int v354;
  int v355;
  int v356;
  char *v357;
  int v358;
  int v359;
  int v360;
  int v361;
  char *v362;
  int v363;
  int v364;
  unint64_t v365;
  int v366;
  int v367;
  unsigned int v368;
  int v369;
  unsigned int v370;
  unsigned int v371;
  char *v372;
  int v373;
  int v374;
  int v375;
  int v376;
  unsigned int v377;
  int v378;
  char *v379;
  int v380;
  int v381;
  unsigned int v382;
  unsigned int v383;
  unsigned int v384;
  char *v385;
  int v386;
  int v387;
  int v388;
  int v389;
  uint64_t v390;
  char *v391;
  int v392;
  int v393;
  uint64_t v394;
  char *v395;
  int v396;
  unsigned int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  unsigned int v403;
  unsigned int v404;
  int v405;
  int v406;
  unsigned int v407;
  int v408;
  unsigned int v409;
  int v410;
  unsigned int v411;
  int v412;
  int v413;
  uint64_t v414;
  int v415;
  unsigned int v416;
  int v417;
  int v418;
  int v419;
  char *v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  unsigned int v426;
  int v427;
  unsigned int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  unsigned int v433;
  unsigned int v434;
  uint64_t v435;
  uint64_t v437;
  uint64_t v438;
  unint64_t v439;
  unint64_t v440;
  uint64_t v441;
  unint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  unint64_t v446;
  uint64_t v447;
  uint64_t v448;
  unint64_t v449;
  unsigned int v450;
  int v451;
  int v452;
  unsigned int v453;
  unsigned int v454;
  uint64_t v455;
  unsigned int v456;
  int v457;

  HIDWORD(a23) = v48;
  v444 = (v48 + 15932);
  v454 = a1 & 0xFFFFFFF5 ^ 0x431032AB;
  v50 = *(unsigned __int8 *)(((v454 - 808420299 - ((2 * v454) & 0x9FA0F86A)) ^ 0xFCD77DFD308FC3DALL)
                           + v49
                           + (((unint64_t)((v454 - 808420299 - ((2 * v454) & 0x9FA0F86A)) ^ 0xCFD07C35) << ((v48 + 60) ^ 0x80u)) & 0x1FEBF7FDELL)
                           + 0x328820200A04011);
  v456 = a1 & 0xFFFFFFF9 ^ 0x431032AF;
  v51 = *(unsigned __int8 *)(((v456 - 1578628140 - ((2 * v456) & 0x43D017B0)) ^ 0xFFDCFF8D4C33F063)
                           + v49
                           + ((2 * ((v456 - 1578628140 - ((2 * v456) & 0x43D017B0)) ^ 0xA1E80BDC)) & 0x1DBB7F77ELL)
                           + 0x23007212240441);
  LODWORD(v51) = ((v51 ^ 0x1B) - ((2 * (v51 ^ 0x1B) + 12) & 0x5E) + 53) ^ *(unsigned __int8 *)(a17 + (v51 ^ 0x6D));
  v52 = a1 & 0xFFFFFFFB ^ 0x431032AF;
  v452 = 2 * v52;
  v453 = v52;
  v53 = (v51 ^ 0x65) - 16;
  LODWORD(v50) = *(unsigned __int8 *)(a17 + (v50 ^ 0xD0)) ^ 0x6A ^ ((v50 ^ 0xA6)
                                                                                   - ((2 * (v50 ^ 0xA6) + 12) & 0xE8)
                                                                                   + 122);
  LODWORD(v50) = ((((_DWORD)v50 - ((2 * (_DWORD)v50) & 0x142)) << 8) + 174694656) ^ 0xA69A100;
  LODWORD(v51) = ((2 * v51) ^ 0xFFFFFFCA) - ((2 * ((2 * v51) ^ 0xFFFFFFCA)) & 0xFFFFFFEF) + 118;
  LODWORD(v51) = (v53 ^ 0xBA) + ((2 * v53) & 0x74) + ((2 * v51) | 0x3F) + (v51 & 0xE0 ^ 0x61) + 70;
  LODWORD(v51) = (((v51 - ((2 * (_DWORD)v51) & 0x56)) << 8) - 98030848) ^ 0xFA282B00;
  v54 = *(unsigned __int8 *)(a19
                           + (*(unsigned __int8 *)(((v52 - 728056634 + ((2 * v52) & 0xA9357984 ^ 0xFFFFFFF7) + 1) ^ 0x1DEBBFAF1B654A39)
                                                 + v49
                                                 + ((2
                                                   * ((v52 - 728056634 + ((2 * v52) & 0xA9357984 ^ 0xFFFFFFF7) + 1) ^ 0xD49ABCC6)) & 0x19FFFEDFELL)
                                                 - 0x1DEBBFAFCFFFF6FFLL) ^ 0x52)) ^ 0x45;
  v55 = (((v54 - ((2 * v54) & 0x77777777)) << 24) + 989855744) ^ 0x3B000000;
  LODWORD(v51) = (v51 + 1446091110 - ((2 * v51) & 0x2C633200)) ^ 0x56319966 | (v55 + 960977981 - ((2 * v55) & 0x72000000)) ^ 0x39475C3D;
  v445 = (((a1 & 0xFFFFFFF7 ^ 0x431032AB) + 1202844161 - ((2 * (a1 & 0xFFFFFFF7 ^ 0x431032AB)) & 0x8F63E402)) ^ 0x7FCFFE66BEAA39DELL)
       + v49
       + ((2
         * (((a1 & 0xFFFFFFF7 ^ 0x431032AB) + 1202844161 - ((2 * (a1 & 0xFFFFFFF7 ^ 0x431032AB)) & 0x8F63E402)) ^ 0x47B1F201)) & 0x1F23797BELL);
  v441 = (((a1 & 0xFFFFFFF0 ^ 0x431032AF) + 936627142 - ((2 * (a1 & 0xFFFFFFF0 ^ 0x431032AF)) & 0x6FA797A0)) ^ 0x3763F7FFC02EBB24)
       + v49
       + ((2
         * (((a1 & 0xFFFFFFF0 ^ 0x431032AF) + 936627142 - ((2 * (a1 & 0xFFFFFFF0 ^ 0x431032AF)) & 0x6FA797A0)) ^ 0x37D3CBDA)) & 0x1EFFAE1FCLL);
  v56 = a1 & 0xFFFFFFFC ^ 0x431032AB;
  HIDWORD(a38) = 2 * v56;
  v450 = v56;
  v455 = a1 ^ 0x431032AB;
  v448 = (a1 ^ 0xFFEDE3E3B86ED772) + ((2 * v455) & 0x1F6FDCBB2) + v49;
  v57 = *(unsigned __int8 *)(((v56 - 1968955385 + ((2 * v56) & 0x15484008 ^ 0xFFFFFFF9) + 1) ^ 0x6DF9D95F69BBD7E8)
                           + v49
                           + ((2 * ((v56 - 1968955385 + ((2 * v56) & 0x15484008 ^ 0xFFFFFFF9) + 1) ^ 0x8AA42007)) & 0x1C63FEFDELL)
                           - 0x6DF9D95FE31FF7EFLL);
  v58 = *(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(v445 - 0x7FCFFE66F91BCBDFLL) ^ 0x4ELL)) ^ 0x55;
  v59 = (((v58 - ((2 * v58) & 0xD4)) << 24) + 1778384896) ^ 0x6A000000;
  v60 = *(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(v448 + 0x121C1C04811A27) ^ 0x18));
  v61 = a1 & 0xFFFFFFF2 ^ 0x431032AF;
  LODWORD(v443) = 2 * v61;
  HIDWORD(v443) = v61;
  LODWORD(v50) = (v59 - 253862627 - (v59 >> 28 << 29)) ^ 0xF0DE5D1D | (v50 - 1042288714 - ((2 * v50) & 0x3BFDE00)) ^ 0xC1DFEFB6;
  v62 = v50 + 224734618 - ((2 * v50) & 0x1ACA5B34);
  LODWORD(v50) = v57 ^ 0x12 ^ *(unsigned __int8 *)(a16 + (v57 ^ 0xB5));
  v63 = ((((v60 ^ 0xD3) - ((2 * (v60 ^ 0xD3)) & 0x5E)) << 24) - 1358954496) ^ 0xAF000000;
  LODWORD(v50) = (v63 - 1488592498 - ((2 * v63) & 0x4E000000)) ^ 0xA745E18E | (v50 + 1922011258 - ((2 * v50) & 0xF4)) ^ 0x728F907A;
  v64 = *(unsigned __int8 *)(a18
                           + (*(unsigned __int8 *)(((v61 - 902815604 - ((2 * v61) & 0x94604120)) ^ 0xBFD8747F23E3CA4ALL)
                                                 + v49
                                                 + ((2 * ((v61 - 902815604 - ((2 * v61) & 0x94604120)) ^ 0xCA302094)) & 0x1D3A7D5BCLL)
                                                 + 0x40278B80162C1522) ^ 0x34));
  HIDWORD(v65) = v64 ^ 1;
  LODWORD(v65) = (v64 ^ 0xF8) << 24;
  v66 = (v65 >> 26) - 2 * ((v65 >> 26) & 0xF) + 15;
  v451 = a1 & 4;
  v67 = v66 ^ 0xEC ^ (((char)(8 * v66) >> 7) + 115);
  v68 = (((v67 - ((2 * v67) & 0x2A)) << 16) - 1760231424) ^ 0x97150000;
  v449 = (((a1 & 0xFFFFFFFE ^ 0x431032AB) - 476773264 - 2 * ((a1 & 0xFFFFFFFE ^ 0x431032AB) & 0x63950474 ^ v451)) ^ 0xFFDDFEDF3C387B9FLL)
       + v49
       + ((2
         * (((a1 & 0xFFFFFFFE ^ 0x431032AB) - 476773264 - 2 * ((a1 & 0xFFFFFFFE ^ 0x431032AB) & 0x63950474 ^ v451)) ^ 0xE3950470)) & 0x1BF5AFFDELL);
  v69 = *(unsigned __int8 *)(v441 - 0x3763F7FFF7FD70FELL) ^ 0x56 ^ *(unsigned __int8 *)(a16
                                                                                      + (*(unsigned __int8 *)(v441 - 0x3763F7FFF7FD70FELL) ^ 0x3ALL));
  v70 = (v68 + 1067972738 - ((2 * v68) & 0x7F4E0000)) ^ 0x3FA7F882 | (v69 + 861941168 - ((2 * v69) & 0x160)) ^ 0x33602DB0;
  v71 = v70 + 792439609 - ((2 * v70) & 0x5E775672);
  LODWORD(v57) = *(unsigned __int8 *)(a18 + (*(unsigned __int8 *)(v449 + 0x22012020528011) ^ 0x26));
  HIDWORD(v65) = v57 ^ 1;
  LODWORD(v65) = (v57 ^ 0xF8) << 24;
  v447 = (((a1 & 0xFFFFFFF1 ^ 0x431032AF) + 1122454067 - ((2 * (a1 & 0xFFFFFFF1 ^ 0x431032AF)) & 0x85CE9466)) ^ 0x7DC3FE5DBD90B9CDLL)
       + v49
       + ((2
         * (((a1 & 0xFFFFFFF1 ^ 0x431032AF) + 1122454067 - ((2 * (a1 & 0xFFFFFFF1 ^ 0x431032AF)) & 0x85CE9466)) ^ 0x42E74A33)) & 0x1FEEFE7FCLL);
  v72 = (v65 >> 26) - ((2 * (v65 >> 26)) & 0xFFFFFF9A) - 51;
  v73 = v72 ^ 0xCC ^ (((char)(8 * v72) >> 7) - 9);
  v74 = (((v73 - ((2 * v73) & 0x1DC)) << 16) - 370278400) ^ 0xE9EE0000;
  LODWORD(v50) = (v74 + 1426791979 - ((2 * v74) & 0x2A160000)) ^ 0x550B1E2B | (v50
                                                                             + 1465435938
                                                                             - ((2 * v50) & 0xAEB18E44)) ^ 0x5758C722;
  v75 = v50 + 658821097 - ((2 * v50) & 0x4E899FD2);
  LODWORD(v57) = *(unsigned __int8 *)(a17 + (*(unsigned __int8 *)(v447 - 0x7DC3FE5DFF77F3FELL) ^ 0xF3)) ^ 0xBC ^ ((*(_BYTE *)(v447 - 0x7DC3FE5DFF77F3FELL) ^ 0x85) - ((2 * (*(_BYTE *)(v447 - 0x7DC3FE5DFF77F3FELL) ^ 0x85) + 12) & 0xBF) - 27);
  LODWORD(v57) = ((((_DWORD)v57 - ((2 * (_DWORD)v57) & 0x19C)) << 8) - 755773952) ^ 0xD2F3CE00;
  v76 = v71 ^ 0x2F3BAB39 | (v57 + 523872858 - ((2 * v57) & 0x3E735400)) ^ 0x1F39AA5A;
  v446 = (((a1 & 0xFFFFFFFA ^ 0x431032AF)
         - 1051506476
         + ((2 * (a1 & 0xFFFFFFFA ^ 0x431032AF)) & 0x82A691A0 ^ 0xFFFFFFF7)
         + 1) ^ 0xF9B9FF3FBEFD8F23)
       + ((2
         * (((a1 & 0xFFFFFFFA ^ 0x431032AF)
           - 1051506476
           + ((2 * (a1 & 0xFFFFFFFA ^ 0x431032AF)) & 0x82A691A0 ^ 0xFFFFFFF7)
           + 1) ^ 0xC15348D4)) & 0xFF5D8FEE)
       + v49;
  LODWORD(v50) = *(unsigned __int8 *)(a18 + (*(unsigned __int8 *)(v446 + 0x64600C080513809) ^ 0x92));
  HIDWORD(v65) = v50 ^ 1;
  LODWORD(v65) = (v50 ^ 0xF8) << 24;
  LODWORD(v50) = (v65 >> 26) - ((2 * (v65 >> 26)) & 0x46) + 35;
  LODWORD(v50) = v50 ^ 0xB ^ (((2 * ((((int)((_DWORD)v50 << 27) >> 31) + 35) ^ 0x32)) & 0x7A)
                            - ((((int)((_DWORD)v50 << 27) >> 31) + 35) ^ 0x32)
                            + 66);
  LODWORD(v50) = (((v50 - ((2 * (_DWORD)v50) & 0x10)) << 16) - 519569408) ^ 0xE1080000;
  LODWORD(v50) = (v50 + 1524171973 - ((2 * v50) & 0x35B20000)) ^ 0x5AD904C5 | (v51
                                                                             - 1671185872
                                                                             - ((2 * v51) & 0x38C77460)) ^ 0x9C63BA30;
  LODWORD(v51) = v50 + 1969736914 - ((2 * v50) & 0xEACF99A4);
  HIDWORD(a35) = 1125135023;
  v439 = (((a1 & 0xFFFFFFF3 ^ 0x431032AF)
         - 154971233
         + ((2 * (a1 & 0xFFFFFFF3 ^ 0x431032AF)) & 0xED86A726 ^ 0xFFFFFFE7)
         + 1) ^ 0xD55F8FDB2CBC9C58)
       + v49
       + ((2
         * (((a1 & 0xFFFFFFF3 ^ 0x431032AF)
           - 154971233
           + ((2 * (a1 & 0xFFFFFFF3 ^ 0x431032AF)) & 0xED86A726 ^ 0xFFFFFFE7)
           + 1) ^ 0xF6C3539F)) & 0x1B4FF9F8ELL);
  LODWORD(v50) = v76 - ((2 * v76) & 0x1137E222) - 2003046127;
  v77 = ((v50 & 0x4F1689 ^ 0xF1088) + (v50 & 0x51680 ^ 0xC108640) - ((v50 & 0x4F1689 ^ 0xF1088) & 0x51680)) ^ 0x8D31D6C2;
  LODWORD(v57) = *(unsigned __int8 *)(a19
                                    + (((*(unsigned __int8 *)(v439 + 0x2AA0702425803039) ^ 0xBD67FEDD)
                                      + ((2 * *(unsigned __int8 *)(v439 + 0x2AA0702425803039)) & 0x1BA)
                                      + ((-2 * (*(_BYTE *)(v439 + 0x2AA0702425803039) & 0xC1) + 737949086) ^ 0xA9DF5DB)
                                      + 557203872
                                      + ((2 * (-2 * (*(_BYTE *)(v439 + 0x2AA0702425803039) & 0xC1) + 737949086)) & 0x15387F74 ^ 0xEAC794CB)
                                      - 0x7DDBEF9C34FC0BD0
                                      - ((2
                                        * ((*(unsigned __int8 *)(v439 + 0x2AA0702425803039) ^ 0xBD67FEDDLL)
                                         + ((2 * *(unsigned __int8 *)(v439 + 0x2AA0702425803039)) & 0x1BALL)
                                         + ((-2 * (*(_BYTE *)(v439 + 0x2AA0702425803039) & 0xC1)
                                           - 0x2E6550E6D403CA62) ^ 0xA9DF5DB)
                                         + 557203872
                                         + ((2
                                           * (-2 * (*(_BYTE *)(v439 + 0x2AA0702425803039) & 0xC1)
                                            - 0x2E6550E6D403CA62)) & 0xA325463215387F74 ^ 0xEAC794CB))) & 0x19607E860)) ^ 0x82241063CB03F4AFLL)) ^ 0x74;
  LODWORD(v57) = ((((_DWORD)v57 - ((2 * (_DWORD)v57) & 0x5A)) << 24) + 754974720) ^ 0x2D000000;
  LODWORD(v57) = v57 - ((2 * v57) & 0x5C000000) - 1365289396;
  LODWORD(v50) = ((v50 & 0xB0E976 | v57 & 0x88000000) ^ 0x8890E156)
               + 1328532589
               - ((2 * ((v50 & 0xB0E976 | v57 & 0x88000000) ^ 0x8890E156)) & 0x104190C8);
  LODWORD(v57) = ((2 * (v57 & 0x77000000 ^ 0x46000000)) | 0x7307A006) - (v57 & 0x77000000 ^ 0x46000000) - 964939779;
  v442 = (((a1 & 0xFFFFFFFD ^ 0x431032AB) + 654230941 - ((2 * (a1 & 0xFFFFFFFD ^ 0x431032AB)) & 0x4DFD8B3A)) ^ 0xEEF7D5FBD9030643)
       + v49
       + ((2
         * (((a1 & 0xFFFFFFFD ^ 0x431032AB) + 654230941 - ((2 * (a1 & 0xFFFFFFFD ^ 0x431032AB)) & 0x4DFD8B3A)) ^ 0x26FEC59D)) & 0x1FFFB87BCLL);
  v440 = (((a1 & 0xFFFFFFF8 ^ 0x431032AF)
         + 939450125
         + ((2 * (a1 & 0xFFFFFFF8 ^ 0x431032AF)) & 0x6FFDBE10 ^ 0xFFFFFFF5)
         + 1) ^ 0xDFBDEFBB6A512673)
       + ((2
         * (((a1 & 0xFFFFFFF8 ^ 0x431032AF)
           + 939450125
           + ((2 * (a1 & 0xFFFFFFF8 ^ 0x431032AF)) & 0x6FFDBE10 ^ 0xFFFFFFF5)
           + 1) ^ 0x37FEDF0D)) & 0xBB5FF2FC)
       + v49;
  v78 = (-1181364511 - (v77 | 0xB995CEE1) + (v77 | 0x466A311E)) ^ 0xC74A711C | ((v57 & 0x83839000 ^ 0x82250E6D)
                                                                              + (v57 & 0x7C004000 ^ 0x38102081)
                                                                              - 2) ^ 0xE3B6FEEC;
  LODWORD(v50) = (v78 + 1205715269 - ((2 * v78) & 0x8FBB828A)) ^ 0x47DDC145 | v50 ^ 0x4F2FCC6D;
  v437 = (((a1 & 0xFFFFFFF6 ^ 0x431032AB) - 887178044 - ((2 * (a1 & 0xFFFFFFF6 ^ 0x431032AB)) & 0x963D7988)) ^ 0x7FDDFFF334EBCB7ALL)
       + v49
       + ((2
         * (((a1 & 0xFFFFFFF6 ^ 0x431032AB) - 887178044 - ((2 * (a1 & 0xFFFFFFF6 ^ 0x431032AB)) & 0x963D7988)) ^ 0xCB1EBCC4)) & 0x1FFEAEF7CLL);
  v79 = *(unsigned __int8 *)(a17 + (*(unsigned __int8 *)(v442 + 0x11082A0400023C22) ^ 0x5BLL)) ^ 0x89 ^ ((*(_BYTE *)(v442 + 0x11082A0400023C22) ^ 0x2D) - 2 * (((*(_BYTE *)(v442 + 0x11082A0400023C22) ^ 0x2D) + 6) & 0x4D ^ (*(_BYTE *)(v442 + 0x11082A0400023C22) ^ 0x2D) & 1) - 46);
  v80 = (((v79 - ((2 * v79) & 0xFFFFFF7F)) << 8) - 1872969984) ^ 0x905CBF00;
  v81 = v75 ^ 0x2744CFE9 | (v80 - 1367568968 - ((2 * v80) & 0x5CF91A00)) ^ 0xAE7C8DB8;
  v82 = *(unsigned __int8 *)(v440 + 0x20421044A2500682);
  LODWORD(v57) = *(unsigned __int8 *)(a16 + (v82 ^ 0x37));
  LODWORD(v82) = v82 ^ 0xFFFFFFC2;
  LODWORD(v57) = v57 ^ 0x56;
  v83 = (v57 & v82) - ((2 * (v57 & v82)) & 0x48);
  LODWORD(v82) = ((v57 + v82) ^ 0x4D)
               + ((2 * (v57 + v82)) & 0x9A)
               + ((2 * v83 - 56) ^ 0xC9)
               + ((2 * (2 * v83 - 56)) ^ 0x6F)
               - 77;
  LODWORD(v51) = v51 ^ 0x7567CCD2 | (v82 + 1334876112 - ((2 * v82) & 0x1A0)) ^ 0x4F9097D0;
  LODWORD(v82) = *(unsigned __int8 *)(a18 + (*(unsigned __int8 *)(v437 - 0x7FDDFFF3FFF577BELL) ^ 0x5FLL));
  HIDWORD(v65) = v82 ^ 1;
  LODWORD(v65) = (v82 ^ 0xF8) << 24;
  LODWORD(v57) = v51 - ((2 * v51) & 0x8260E9E4);
  LODWORD(v51) = (v65 >> 26) - ((2 * (v65 >> 26)) & 0x26) - 109;
  LODWORD(v51) = v51 ^ 0xDE ^ ((v51 >> 4) & 1 | 0x7E);
  LODWORD(v51) = (((v51 - ((2 * (_DWORD)v51) & 0xE8)) << 16) - 1284243456) ^ 0xB3740000;
  v84 = a1 & 0xFFFFFFF4 ^ 0x431032AB;
  LODWORD(v438) = v84;
  HIDWORD(v438) = 2 * v84;
  v85 = (v81 - ((2 * v81) & 0x43C66BB8) - 1578945060) ^ a47;
  v86 = (v57 + 1093694706) ^ a45;
  v87 = (v50 - ((2 * v50) & 0xB688347E) - 616293825) ^ a46;
  v88 = *(unsigned __int8 *)(((v84 + 79943112 + ((2 * v84) & 0x987AB80 ^ 0xFFFFFFEF) + 1) ^ 0xF6FFB366B93E2B67)
                           + v49
                           + ((2 * ((v84 + 79943112 + ((2 * v84) & 0x987AB80 ^ 0xFFFFFFEF) + 1) ^ 0x4C3D5C8)) & 0x17BFBFD5ELL)
                           + 0x9004C9942020151);
  LODWORD(v82) = *(unsigned __int8 *)(a16 + (v88 ^ 0xBB)) ^ 0x56;
  v89 = (((v51 - 772765176 - ((2 * v51) & 0x23E00000)) ^ 0xD1F08A08 | v62 ^ 0xD652D9A)
       - 1943941682
       - ((2 * ((v51 - 772765176 - ((2 * v51) & 0x23E00000)) ^ 0xD1F08A08 | v62 ^ 0xD652D9A)) & 0x18439B9C)) ^ 0x8C21CDCE | (v82 - 1127231450 - ((2 * v82) & 0x4C)) ^ 0xBCCFD026;
  v90 = ((v88 ^ 0x4E) - ((2 * (v88 ^ 0x4E)) & 0x148) - 55510108) ^ a48 ^ (v89 - ((2 * v89) & 0xB20C2E2) + 93348209);
  v91 = (char *)*(&off_10112C750 + (v48 ^ 0x35C8)) - 453538751;
  LODWORD(v88) = *(_DWORD *)&v91[4
                               * (((HIWORD(v86) & 0x31) + 1577062399 + (HIWORD(v86) & 0xCE ^ 0x20000407)) ^ 0x7E00146D)];
  HIDWORD(v65) = v88 ^ 0x4BFED7;
  LODWORD(v65) = v88 ^ 0x51800000;
  v92 = (char *)*(&off_10112C750 + v48 - 13404) - 1206285979;
  LODWORD(v88) = ((v65 >> 23) - ((2 * (v65 >> 23)) & 0xACC506E6) + 1449296755) ^ *(_DWORD *)&v92[4 * (HIBYTE(v85) ^ 0xA)];
  LODWORD(v57) = ((BYTE1(v90) ^ 0xEE) + ((v90 >> 8) & 0x9C ^ 0x79C12D10) - ((BYTE1(v90) ^ 0xEE) & 0x9C)) ^ 0x597F698C;
  LODWORD(v82) = ((BYTE1(v90) ^ 0xCC) + ((v90 >> 8) & 0x9D ^ 0xCB635111) - ((BYTE1(v90) ^ 0xCC) & 0x9D)) ^ 0xEBF0419F;
  LODWORD(v57) = ((2 * v57) & 0x10C074A) - v57 + 1949955162;
  v93 = (v87 & 0x40) + (v87 ^ 0xFFFFFFE5) + (v87 | 0x482B2CBF) + 1;
  v94 = (v93 & 0xE8C18E02 ^ 0x808C01) + (v93 & 0x173E71FD) - 1;
  v95 = ((2 * v88) ^ 0x696C04F2) - ((2 * ((2 * v88) ^ 0x696C04F2)) & 0xAF0A1520);
  LODWORD(v88) = ((2 * ((v88 ^ 0x34B60279) + 1511482873)) & 0x7EC1F7EA)
               + (((v88 ^ 0x34B60279) + 1511482873) ^ 0x3F60FBF5)
               + ((v95 + 1468336784) & 0xB42ECBF2 ^ 0x8CDC0F93)
               + ((2 * (v95 + 1468336784)) & 0x484D95E0 ^ 0xF7F7EADF);
  v96 = (char *)*(&off_10112C750 + (v48 ^ 0x2AC2)) - 1625980283;
  v97 = (char *)*(&off_10112C750 + v48 - 12819) - 101169606;
  v98 = *(_DWORD *)&v97[4
                      * ((((2 * (v87 ^ 0x8A)) | 0x849910AE) - (v87 ^ 0x8A) + 1035171753) ^ 0xC24C8806)] ^ *(_DWORD *)&v96[4 * ((((2 * (_DWORD)v82) | 0x66DABC8) - (_DWORD)v82 - 53925348) ^ 0x23A5C589)] ^ v57 ^ v94 ^ ((v57 ^ 0x5487B05A) - ((2 * (v57 ^ 0x5487B05A) + 849678632) & 0x5BC42E90) - 952852516) ^ ((v94 ^ 0x48ABA0B5) - ((2 * (v94 ^ 0x48ABA0B5) + 1785572300) & 0x7DF7494E) + 1949465229) ^ (v88 - ((2 * v88 + 1334705682) & 0xFB105A50) + 625945649);
  LODWORD(v82) = (HIBYTE(v86) & 0xFE) - (HIBYTE(v86) & 0x24) + (HIBYTE(v86) & 0x24 ^ 0x8B488C24);
  LODWORD(v82) = (((v82 & 0xA000596 ^ 0xA01590) + (v82 ^ 0x6A188226) - ((v82 ^ 0x6A188226) & 0xE0100596)) & 0xFFFFFFFE | HIBYTE(v86) & 1) ^ 0xBE01B0E;
  v99 = HIBYTE(v86) ^ 0x9A;
  LODWORD(v88) = HIBYTE(v86) ^ 0x5A176563;
  v100 = (v99 & v88) - ((2 * (v99 & v88)) & 0x1D6);
  LODWORD(v88) = ((v88 + v99) ^ 0xD7F7FEF3)
               + ((2 * (v88 + v99)) & 0xA42ECDE6)
               + ((2 * v100 - 22481962) ^ 0xDAB8E777)
               + ((2 * (2 * v100 - 22481962)) & 0x28E16BC ^ 0xFFFFF953)
               + 1;
  v101 = *(_DWORD *)&v91[4 * (((BYTE2(v90) ^ 0xA98440DE) + 162662400) ^ 0xB33648D8)];
  HIDWORD(v65) = v101 ^ 0x4BFED7;
  LODWORD(v65) = v101 ^ 0x51800000;
  v102 = (-994476652
        - (v85 ^ 0xCBFBE527 | 0xC4B97D94)
        + (v85 ^ 0xCBFBE527 | 0x3B46826B)) ^ 0x73B6A330;
  v103 = (v102 | 0xC1F13CC2) - (v102 | 0x3E0EC33D) + 1041154877;
  v104 = (126 - ((2 * (v87 >> 8)) ^ 0xF8A8FE)) & 0xBA;
  LODWORD(v57) = ((2 * (BYTE1(v87) ^ 0x4002582F)) | 0xD5B2543A) - (BYTE1(v87) ^ 0x4002582F) + 354866659;
  v105 = ((v85 & 0x68 ^ 0xF84CB329) + (v85 & 0x97) - 1) ^ 0x1D54FA22;
  v106 = *(_DWORD *)&v96[4 * (v104 ^ 0x8000C23B)
                       + 2217130060
                       + 4 * ((2 * v104) ^ 0xFFFFFF8B)
                       + 4 * (((v57 ^ 0xAADB724D) + 93) ^ 0x5EF58FED)
                       + 4 * ((2 * ((v57 ^ 0xAADB724D) + 93)) & 0x3DEB1FDA)] ^ *(_DWORD *)&v92[4 * (((_DWORD)v82 - 1625939783 - ((2 * (_DWORD)v82) & 0x3E2C4172)) ^ 0x9F1620E1)] ^ *(_DWORD *)&v97[4 * ((v105 - ((2 * v105) & 0x8A3003AC) + 1170180054) ^ 0xA0A7CE73)] ^ ((v65 >> 23) - ((2 * (v65 >> 23)) & 0x47A14AAA) - 1546607275) ^ ((v103 ^ 0x42FAF8DA) - ((2 * (v103 ^ 0x42FAF8DA) + 1785572300) & 0x66AD0B26) - 1467131015) ^ v57 ^ (v88 - ((2 * v88 + 133159128) & 0x77845D62) - 1078322403) ^ ((v57 ^ 0xAADB724D) - ((2 * (v57 ^ 0xAADB724D) + 44372264) & 0xFC9CA3E) - 1590202957);
  LODWORD(v88) = ((BYTE1(v85) ^ 0x45) + ((v85 >> 8) & 0x1D ^ 0xCBAA1A18) - ((BYTE1(v85) ^ 0x45) & 0x1D)) ^ 0xCB020C5D;
  LODWORD(v88) = (v88 | 0x74CEEEF4) - (v88 | 0x8B31110B) - 1959718645;
  LODWORD(v82) = *(_DWORD *)&v91[4
                               * ((848478994 - (BYTE2(v87) ^ 0x98) + ((2 * (BYTE2(v87) ^ 0x98)) & 0x1DA)) ^ 0x3292C3F2)];
  HIDWORD(v65) = v82 ^ 0x4BFED7;
  LODWORD(v65) = v82 ^ 0x51800000;
  LODWORD(v82) = (887764252 - (v86 ^ 0x5E | 0x34EA351C) + (v86 ^ 0x5E | 0xCB15CAE3)) ^ 0x79E33443;
  LODWORD(v82) = (v82 | 0xA1A3E08C) - (v82 | 0x5E5C1F73) + 1583095667;
  v107 = ((v86 ^ 0x9B) + (v86 & 0x1D ^ 0xDEC9B04) - ((v86 ^ 0x9B) & 0x1D)) ^ 0xFEF8750;
  v108 = *(_DWORD *)&v96[4
                       * ((((2 * (BYTE1(v85) ^ 0xC4C200B6)) | 0xAD459ECA) - (BYTE1(v85) ^ 0xC4C200B6) - 1453510501) ^ 0x9260CF08)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v90) ^ 0x2E)] ^ *(_DWORD *)&v97[4 * ((329585669 - (v107 | 0x13A51405) + (v107 | 0xEC5AEBFA)) ^ 0xEE59F720)] ^ v88 ^ ((v88 ^ 0x7466F877) - ((2 * (v88 ^ 0x7466F877) + 44372264) & 0xEFAABF6) - 523247985) ^ ((v82 ^ 0x13551EB5) - ((2 * (v82 ^ 0x13551EB5) + 711830476) & 0x24C6B980) + 127546022) ^ ((v65 >> 23) - ((2 * (v65 >> 23)) & 0x59A28412) + 751911433);
  LODWORD(v57) = (((v86 >> 8) & 0x87 ^ 0x6194AF84) + ((v86 >> 8) & 0x78 ^ 9) - 1) ^ 0x72DE8BA9;
  LODWORD(v57) = v57 - ((2 * v57) & 0x294497E) - 437345089;
  LODWORD(v88) = *(_DWORD *)&v91[4
                               * ((((2 * (BYTE2(v85) ^ 0xA420907)) | 0x25E36FC2) - (BYTE2(v85) ^ 0xA420907) - 317831137) ^ 0x18B3BE40)];
  HIDWORD(v65) = v88 ^ 0x4BFED7;
  LODWORD(v65) = v88 ^ 0x51800000;
  LODWORD(v88) = (BYTE1(v86) ^ 0xEC | 0xFD38107D) - (BYTE1(v86) ^ 0xEC | 0x2C7EF82) + 46657410;
  v109 = *(_DWORD *)&v96[4 * (((v88 & 0xCC2810BC ^ 0x80870089) + (v88 & 0x31100F43) - 1) ^ 0x7DBF1031)];
  v90 = v90;
  LODWORD(v88) = (v90 ^ 0x8D | 0xA4212B66) - (v90 ^ 0x8D | 0x5BDED499) + 1541330073;
  v110 = v109 ^ *(_DWORD *)&v97[4 * (v90 ^ 0xE3)] ^ ((v65 >> 23)
                                                                    - ((2 * (v65 >> 23)) & 0xA622B0C8)
                                                                    + 1393645668) ^ v57 ^ ((v88 ^ 0xA4212BC3)
                                                                                         - ((2 * (v88 ^ 0xA4212BC3)
                                                                                           + 1785572300) & 0x460A39F0)
                                                                                         - 1740901666) ^ ((v57 ^ 0xF6A480EF) - ((2 * (v57 ^ 0xF6A480EF) + 849678632) & 0x677A803E) - 854603597) ^ *(_DWORD *)&v92[4 * (HIBYTE(v87) ^ 0x24)];
  LOBYTE(v87) = v108 ^ v82;
  v111 = v108 ^ v82 ^ 0x5FB33410;
  LODWORD(v57) = (((2 * (BYTE1(v111) ^ 0xCA)) & 0x1E4) - (BYTE1(v111) ^ 0xCA) - 1535927539) ^ 0xA373090F;
  v112 = *(_DWORD *)&v91[4
                       * ((-1240976736
                         - (BYTE2(v106) ^ 0xC55042EF | 0xB60832A0)
                         + (BYTE2(v106) ^ 0xC55042EF | 0x49F7CD5F)) ^ 0x8CA78FFA)];
  HIDWORD(v65) = v112 ^ 0x4BFED7;
  LODWORD(v65) = v112 ^ 0x51800000;
  v113 = (v57 - ((2 * v57) & 0x1109E) - 2008299441) ^ *(_DWORD *)&v96[4
                                                                    * ((-1524904399
                                                                      - (BYTE1(v111) ^ 0xB2 | 0xA51BCE31)
                                                                      + (BYTE1(v111) ^ 0xB2 | 0x5AE431CE)) ^ 0x5AE4312D)] ^ (((v57 - ((2 * v57) & 0x1109E) - 2008299441) ^ 0x8F4B5A8B) - ((2 * ((v57 - ((2 * v57) & 0x1109E) - 2008299441) ^ 0x8F4B5A8B) + 849678632) & 0x4246235A) - 92956095);
  LODWORD(v82) = ((2 * v113) & 0x2272208A ^ 0x5140F67C)
               + (v113 & 0x517F10C5 ^ 0x575B8441)
               + (((v113 ^ 0x3F9D6CC1) + 1) ^ 0x6DFEE77D)
               + ((2 * ((v113 ^ 0x3F9D6CC1) + 1)) & 0xDBFDCEFA);
  LODWORD(v57) = (v113 & 0x417D10C4 ^ 0xD4925511) - (v113 & 0x10020001);
  v114 = v110 ^ v88;
  LOWORD(v88) = v110 ^ v88 ^ 0xD4F6;
  v115 = ((v88 ^ 0xF1) - ((2 * (v88 ^ 0xF1)) & 0xC4) - 1694384286) ^ 0xDA07BF66;
  v116 = *(_DWORD *)&v97[4 * (v88 ^ 0xAE)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v98) ^ 0x66)] ^ (((2 * v115) | 0xE3957DA2) - v115 - 1909112529) ^ (((((2 * v115) | 0xE3957DA2) - v115 - 1909112529) ^ 0x30CCBE41) - ((2 * ((((2 * v115) | 0xE3957DA2) - v115 - 1909112529) ^ 0x30CCBE41) + 711830476) & 0x24C89A52) - 2019876081) ^ ((v65 >> 23) - ((2 * (v65 >> 23)) & 0xD3530A2E) + 1772717335) ^ v57 ^ (v82 - ((2 * v82 - 1332790776) & 0xEBBA89C2) - 836443675);
  LODWORD(v88) = BYTE1(v88);
  LODWORD(v82) = ((v88 ^ 0xD8) - ((2 * (v88 ^ 0xD8)) & 0xA2) + 1200035921) ^ 0xC7859E10;
  v117 = v82 - ((2 * v82) & 0x50F44) + 1041954722;
  v118 = v98 ^ 0x42A5089;
  LODWORD(v57) = v98 ^ 0x89;
  LOWORD(v82) = (v98 ^ 0xEB)
              + ((v98 ^ 0x5089) & 0xF2 ^ 0xFA90)
              - ((v98 ^ 0xEB) & 0xF2);
  LODWORD(v82) = (v82 & 0x27B ^ 0x432A2A01) + (v82 & 0x184 ^ 0x148181) - 1;
  v119 = *(_DWORD *)&v91[4 * (BYTE2(v111) ^ 0xB3)];
  HIDWORD(v65) = v119 ^ 0x4BFED7;
  LODWORD(v65) = v119 ^ 0x51800000;
  LODWORD(v82) = ((v82 ^ 0x433EA9AF)
                - 2 * (((v82 ^ 0x433EA9AF) + 892786150) & 0x4BA46B23 ^ (v82 ^ 0x433EA9AF) & 1)
                + 14369032) ^ v82;
  v120 = (v88 ^ 0xFE) - 1621208278 - ((2 * (v88 ^ 0xFE)) & 0x124);
  LODWORD(v88) = *(_DWORD *)&v97[4
                               * (((v57 ^ 0x840142D6)
                                 - ((2 * (v57 ^ 0x840142D6)) & 0x80004AA)
                                 + 1871053653) ^ 0xEB8741F6)];
  LODWORD(v57) = v88 ^ 0x2A866337;
  LODWORD(v88) = (v88 ^ 0x2A866337) + (v88 ^ 0x5DE35E45 ^ v82) + 1;
  LODWORD(v88) = (v82 ^ ((v82 ^ 0x77653D72) - ((2 * (v82 ^ 0x77653D72) + 2) & 0xEE09D018) + 1996810253) ^ (v88 - ((2 * v88) & 0x72B52708) + 962237316) ^ 0xC6C4B905)
               + v57;
  LODWORD(v57) = v88 - ((2 * v88) & 0xBFCF9DC8);
  LODWORD(v82) = v106 ^ v103;
  LODWORD(v88) = ((2 * (BYTE1(v118) ^ 0x6E)) | 0x2F21DB20) - (BYTE1(v118) ^ 0x6E) - 395373968;
  v121 = (v88 ^ 0x1790ED4B) - ((2 * (v88 ^ 0x1790ED4B) + 849678632) & 0x4B4D8700);
  v122 = *(_DWORD *)&v96[4 * ((v120 + 104) ^ 0x9F5E532A)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v106) ^ 0x40)] ^ v117 ^ ((v117 ^ 0xBE187120) - ((2 * (v117 ^ 0xBE187120) + 849678632) & 0x2612F710) - 329513956) ^ ((v65 >> 23) - ((2 * (v65 >> 23)) & 0x23ABFDE2) + 299237105) ^ (v57 + 1609027300);
  v123 = (223496816 - (BYTE2(v110) ^ 0xF4 | 0xD524A70) + (BYTE2(v110) ^ 0xF4 | 0xF2ADB58F)) ^ 0xD2ADB58F;
  v124 = *(_DWORD *)&v91[4 * ((((2 * v123) | 0x9C8403BE) - v123 - 1312948703) ^ 0x6E42011F)];
  HIDWORD(v65) = v124 ^ 0x4BFED7;
  LODWORD(v65) = v124 ^ 0x51800000;
  v125 = (((2 * (v82 ^ 0x3D)) | 0x42AB90A4) - (v82 ^ 0x3D) - 559269970) ^ 0x247D8C0B;
  v126 = ((2 * v82) ^ 0xB5393484) - 2 * (((2 * v82) ^ 0xB5393484) & 0xB0 ^ (2 * v82) & 0x10) + 672;
  v127 = (v125 | 0xD2260181) - (v125 | 0x2DD9FE7E) + 769261182;
  v128 = ((2 * v126) & 0x298) + (v126 & 0x1CC ^ 0x7BDEBDFE) - 2078195070 + (v127 ^ 0xE2389041);
  LODWORD(v57) = *(_DWORD *)&v91[4 * (BYTE2(v118) ^ 0xA2)];
  LODWORD(v88) = *(_DWORD *)&v96[4
                               * (((BYTE1(v118) ^ 0x8B03415)
                                 + ((v118 >> 8) & 0xE4 ^ 0x334AC9E0)
                                 - ((BYTE1(v118) ^ 0x8B03415) & 0x89034E4)) ^ 0x336AC919)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v108) ^ 0xB8)] ^ *(_DWORD *)&v97[4 * (((v82 ^ 0x428802E0) + (v82 & 0x43 ^ 0xB4040103) - ((v82 ^ 0x428802E0) & 0x2080043)) ^ 0xF484032A)] ^ ((v65 >> 23) - ((2 * (v65 >> 23)) & 0xBCD2DCBE) - 563515809) ^ v127 ^ v88 ^ (v128 - ((2 * v128) & 0x1E1C6622) - 1894894831);
  HIDWORD(v65) = v57 ^ 0x4BFED7;
  LODWORD(v65) = v57 ^ 0x51800000;
  v129 = v88 ^ (v121 + 1056525332);
  v130 = BYTE1(v82);
  LODWORD(v82) = (BYTE1(v82) ^ 0x40226830) - ((2 * (BYTE1(v82) ^ 0x40226830)) & 0x4451BE) + 460761567;
  v131 = ((2 * (v130 ^ 0x70355422)) & 0x40022834) - (v130 ^ 0x70355422);
  v132 = (((2 * (v87 ^ 0x2E)) | 0x6DF6376A) - (v87 ^ 0x2E) + 1225057355) ^ 0x77FBBBB4;
  v133 = ((2 * v132) | 0x2AAE1BDC) - v132 - 358026734;
  v134 = *(_DWORD *)&v96[4 * ((v131 - 692829467) ^ 0xA6811600)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v114) ^ 0xB7)] ^ *(_DWORD *)&v97[4 * (v87 ^ 0xDE)] ^ v82 ^ ((v65 >> 23) - ((2 * (v65 >> 23)) & 0x7BFF3846) - 1107321821) ^ ((v133 ^ 0xD457ADD4) - ((2 * (v133 ^ 0xD457ADD4) + 711830476) & 0x3E736370) + 1416660894) ^ ((v82 ^ 0x5B54C175) - ((2 * (v82 ^ 0x5B54C175) + 849678632) & 0x27B4A326) - 1389569497);
  LODWORD(v88) = *(_DWORD *)&v91[4 * (BYTE2(v122) ^ 0x44)];
  HIDWORD(v65) = v88 ^ 0x4BFED7;
  LODWORD(v65) = v88 ^ 0x51800000;
  v135 = (BYTE1(v129) ^ 0x77) + 2117040932 - ((2 * (BYTE1(v129) ^ 0x77)) & 0x48);
  LODWORD(v57) = *(_DWORD *)&v96[4 * ((((v129 >> 8) & 0xDA ^ 0x2BD) - ((v129 >> 8) & 0x25)) ^ 0x215)];
  v136 = v135 ^ 0xA82A3D2B ^ ((v135 ^ 0x7E2F7BA6) - ((2 * (v135 ^ 0x7E2F7BA6) + 849678632) & 0x2C0A8D1A) - 279458015);
  LODWORD(v82) = v136 - (v57 & 0x10000000) - 2 * ((v136 - (v57 & 0x10000000)) & 0x31F256F7 ^ v136 & 3);
  v137 = (v57 & 0xEFFFFFFF ^ 0xA569D229 | 0x35203337) - (v57 & 0xEFFFFFFF ^ 0xA569D229 | 0xCADFCCC8) - 891302712;
  LODWORD(v57) = (v137 & 0xD281BBFF ^ 0xC28009C9) + (v137 ^ 0x3421F236) - ((v137 ^ 0x3421F236) & 0xD281BBFF);
  BYTE2(v137) = BYTE2(v134) ^ BYTE2(v133);
  v138 = ((v134 ^ v133) & 0xB ^ 0x3844D00A) + ((v134 ^ v133) & 0xF4 ^ 0x100621) - 1;
  v139 = *(_DWORD *)&v97[4
                       * ((((v134 ^ v133) ^ 0x68)
                         + ((v134 ^ v133) & 0x58 ^ 0x810)
                         - (((v134 ^ v133) ^ 0x68) & 0x58)) ^ 0x8DA)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v116) ^ 0x3B)] ^ v57 ^ ((v138 ^ 0x3854D60B) - ((2 * (v138 ^ 0x3854D60B) + 711830476) & 0x284969AA) + 1230736059) ^ (v82 - 1309518092) ^ ((v65 >> 23) - ((2 * (v65 >> 23)) & 0x48297672) - 1542145223);
  LODWORD(v88) = ((unsigned __int16)(v134 ^ v133) >> 8);
  v140 = ((v88 ^ 0xDD) - ((2 * (v88 ^ 0xDD)) & 0x32) - 556544999) ^ 0xEAF3CC31;
  v141 = ((2 * v140) & 0x2800041A) - v140;
  v142 = v141 - 533981710;
  LODWORD(v82) = *(_DWORD *)&v91[4 * (BYTE2(v129) ^ 0x82)];
  HIDWORD(v65) = v82 ^ 0x4BFED7;
  LODWORD(v65) = v82 ^ 0x51800000;
  LODWORD(v57) = (v116 & 0x1C ^ 0x2B8B4005) + (v116 & 0xE3) - 1;
  v143 = (v116 & 9) + (v116 ^ 0xFFFFFFAB) + (v116 | 0x67C2A3F6) + 1;
  v144 = *(_DWORD *)&v96[4
                       * ((((2 * (v88 ^ 0x820839A5)) | 0x1EDE63EC)
                         - (v88 ^ 0x820839A5)
                         - 258945526) ^ 0x8D6708BB)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v122) ^ 0xED)] ^ ((v65 >> 23) - ((2 * (v65 >> 23)) & 0xC1409F78) - 526364740) ^ v57 ^ (((v141 - 533981710) ^ 0xD40C15B2) - 2 * ((((v141 - 533981710) ^ 0xD40C15B2) + 424839316) & 0x5ADDDD4F ^ v141 & 1) + 1949328866) ^ ((v57 ^ 0x2B8B4009) - ((2 * (v57 ^ 0x2B8B4009) + 1785572300) & 0x6943D1C4) - 1445413176) ^ *(_DWORD *)&v97[4 * (((v143 & 0x34802C4F ^ 0xC49) + (v143 & 0xCB7FD3B0 ^ 0x24242B1) - 1) ^ 0x6580ED9D)];
  LODWORD(v88) = *(_DWORD *)&v91[4
                               * ((8087873
                                 - (BYTE2(v137) ^ 0x142102B1 | 0x7B6941)
                                 + (BYTE2(v137) ^ 0x142102B1 | 0xFF8496BE)) ^ 0xEBA59434)];
  HIDWORD(v65) = v88 ^ 0x4BFED7;
  LODWORD(v65) = v88 ^ 0x51800000;
  v145 = ((v116 >> 7) & 0x17E ^ 0x110) + (BYTE1(v116) ^ 0xEEF2FD37);
  LODWORD(v82) = 2
               * (((v145 + 286065217) & (v145 + 710904533))
                - ((2 * ((v145 + 286065217) & (v145 + 710904533))) & 0x8116AA))
               + 1220777642;
  v146 = ((v82 ^ 0xD0C3F4F9) + 2 * v145 + ((2 * v82) & 0xCFFF3B58 ^ 0x7E78D6AF)) | 1;
  v147 = (((2 * (v122 & 0xFD ^ 0xB9F3E860)) & 0x52E291D2) - (v122 & 0xFD ^ 0xB9F3E860) + 344368406) ^ 0xADA11ABD;
  LODWORD(v82) = (v122 & 2 | (4 * (((v122 & 2) >> 1) & 1)) | 0xF5F3FF68) ^ 0xFFFFFFFB;
  v148 = *(_DWORD *)&v96[4 * (BYTE1(v116) ^ 0xD5)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v129) ^ 0x4C)] ^ ((v65 >> 23)
                                                                                                 - ((2 * (v65 >> 23)) & 0x3B1F9518)
                                                                                                 - 1651520884) ^ ((v122 ^ 0xDB) + 281292007 + ((2 * (v122 ^ 0xDB) + 972) & 0x600 ^ 0xDDF757FF)) ^ *(_DWORD *)&v97[4 * (((_DWORD)v82 - ((2 * (_DWORD)v82 + 108) & 0x192) + 1540341247) ^ (225166713 - (v147 | 0xD6BC579) + (v147 | 0xF2943A86)) ^ 0x979BD05D)] ^ (v146 - ((2 * v146 + 1188582790) & 0xA598682C) - 164077863);
  v149 = (864196557 - (BYTE1(v122) ^ 0xFB515671 | 0x338297CD) + (BYTE1(v122) ^ 0xFB515671 | 0xCC7D6832)) ^ 0x3748B742;
  LODWORD(v82) = *(_DWORD *)&v91[4 * (BYTE2(v116) ^ 0xA1)];
  HIDWORD(v65) = v82 ^ 0x4BFED7;
  LODWORD(v65) = v82 ^ 0x51800000;
  LODWORD(v88) = ((2 * (BYTE1(v122) ^ 0xB6)) & 0x1B0) - (BYTE1(v122) ^ 0xB6) - 1807867353;
  LODWORD(v88) = *(_DWORD *)&v96[4
                               * (((v88 & 0x84042040 ^ 0x41800040)
                                 + (v88 ^ 0x941EBE21)
                                 - ((v88 ^ 0x941EBE21) & 0x8840)) ^ 0xC5A434A4)];
  v150 = ((v88 & 0x10000000 | ((((v88 & 0x10000000) >> 28) & 1) << 29)) ^ 0xA4C300A1)
       + (((v149 | 0xE81CF848) - (v149 | 0x17E307B7) + 400754615) ^ 0x6FEC8D63 ^ ((((v149 | 0xE81CF848)
                                                                                  - (v149 | 0x17E307B7)
                                                                                  + 400754615) ^ 0xE8787140)
                                                                                - ((2
                                                                                  * (((v149 | 0xE81CF848)
                                                                                    - (v149 | 0x17E307B7)
                                                                                    + 400754615) ^ 0xE8787140)
                                                                                  + 44372264) & 0xF29F846)
                                                                                - 1595439945))
       + 1530724191;
  LODWORD(v88) = (((2 * (v88 & 0xEFFFFFFF ^ 0x636BB47A)) & 0x13F52152) - (v88 & 0xEFFFFFFF ^ 0x636BB47A) + 1980067670) ^ 0x46446D4E;
  LODWORD(v57) = (((v129 & 0x62) + (v129 ^ 0x28052867)) | 0x81120200)
               - ((v129 ^ 0x28052867) & 0x20012862);
  v151 = ((v129 ^ 0x1A) - ((2 * (v129 ^ 0x1A)) & 0xFFFFFF8F) + 1342559431) ^ 0xD025D6E3;
  v152 = *(_DWORD *)&v97[4 * ((((2 * v151) | 0xB6235024) - v151 - 1527883794) ^ 0xDB31AAC0)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v134) ^ 0x1D)] ^ ((v65 >> 23) - ((2 * (v65 >> 23)) & 0x2DA955CE) + 383036135) ^ v57 ^ ((v57 ^ 0x89160222) - ((2 * (v57 ^ 0x89160222) + 711830476) & 0x248E7BCA) - 948038709) ^ (v150 - ((2 * v150) & 0xA8695452) + 1412737577) ^ (((2 * v88) | 0x346EA3EC) - v88 + 1707650570);
  LOWORD(v88) = ((2 * (BYTE1(v148) ^ 0xFB)) & 0x6666) - (BYTE1(v148) ^ 0xFB) - 16436;
  LODWORD(v88) = (v88 & 0x82DB ^ 0x80130013) + (v88 & 0x7D24 ^ 0x40243D21) - 1;
  v153 = v144 ^ v142;
  LODWORD(v57) = *(_DWORD *)&v91[4 * (((v144 ^ v142) >> 16) ^ 0x5E)];
  HIDWORD(v65) = v57 ^ 0x4BFED7;
  LODWORD(v65) = v57 ^ 0x51800000;
  v154 = ((2 * (v152 ^ 0xAD)) | 0x13CAFD42) - (v152 ^ 0xAD) + 1981448543;
  v155 = (((2 * (v152 ^ 0x6E)) & 0x5A) - (v152 ^ 0x6E) - 28770350) ^ 0xBEEE7396;
  v156 = *(_DWORD *)&v96[4 * ((((2 * BYTE1(v148)) | 0x3BDE294C) - BYTE1(v148) - 502207654) ^ 0x1DEF14F6)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v139) ^ 0x50)] ^ ((v65 >> 23) - ((2 * (v65 >> 23)) & 0x35719FFC) + 448319486) ^ v88 ^ v154 ^ ((v88 ^ 0xC0378209) - ((2 * (v88 ^ 0xC0378209) + 849678632) & 0x6B8690A6) - 1894395673) ^ ((v154 ^ 0x89E57E9F) - ((2 * (v154 ^ 0x89E57E9F) + 711830476) & 0x343E4596) - 816449359) ^ *(_DWORD *)&v97[4 * ((v155 - ((2 * v155) & 0x81082AA0) + 1233392976) ^ 0x9229922)];
  LODWORD(v88) = ((((2 * HIWORD(v148)) ^ 0x74) - ((v148 >> 14) & 0x10) + 25) ^ 8) + 112;
  v157 = (BYTE2(v148) ^ 0x73F7FF05)
       + ((2 * BYTE2(v148)) ^ 0x1F5)
       - ((2 * v88) & 0x90)
       + (v88 & 0x58 ^ 0x2481C8B1)
       + 1736849275;
  LODWORD(v57) = (BYTE1(v152) ^ 0x8060304F) + ((v152 >> 8) & 0x61 ^ 0x39C0D20) - ((BYTE1(v152) ^ 0x8060304F) & 0x602061);
  LODWORD(v88) = v138 ^ 0xDD605C5 ^ v139;
  v158 = ((v88 & 0x87) + 1034422271 + (v88 & 0x78 ^ 0x111521)) & 0x310807FF;
  v159 = *(_DWORD *)&v91[4 * v157];
  HIDWORD(v65) = v159 ^ 0x4BFED7;
  LODWORD(v65) = v159 ^ 0x51800000;
  LODWORD(v82) = *(_DWORD *)&v96[4 * (BYTE1(v152) ^ 0x82)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v144) ^ 0xCF)] ^ *(_DWORD *)&v97[4 * (((v88 & 0xF8 ^ 0xAE398971) + (v88 & 7) - 1) ^ 0xAE3989D9)] ^ ((v158 ^ 0x31080542) - 80420149 + ((2 * (v158 ^ 0x31080542) + 40741836) & 0x21019C8 ^ 0xF793FFFF)) ^ v57 ^ ((v57 ^ 0x839C1DF1) - ((2 * (v57 ^ 0x839C1DF1) + 849678632) & 0x6EA94B28) + 279391784);
  LODWORD(v57) = *(_DWORD *)&v91[4
                               * (((((HIWORD(v152) & 0xD2 ^ 0x974ADB53) - 1) & 0x120A4182 ^ 0x20002080)
                                 + ((((HIWORD(v152) & 0xD2 ^ 0x974ADB53) - 1) | HIWORD(v152) & 0x2D) ^ 0x1F1FDB66)
                                 - (((((HIWORD(v152) & 0xD2 ^ 0x974ADB53) - 1) | HIWORD(v152) & 0x2D) ^ 0x1F1FDB66) & 0x8410082)) ^ 0xB21E61E6)];
  v160 = v82 ^ ((v65 >> 23) - ((2 * (v65 >> 23)) & 0xAA16FD22) - 720666991);
  HIDWORD(v65) = v57 ^ 0x4BFED7;
  LODWORD(v65) = v57 ^ 0x51800000;
  v161 = BYTE1(v88);
  LODWORD(v88) = ((BYTE1(v88) ^ 0x7D) + ((v88 >> 8) & 0x5F ^ 0x88511002) - ((BYTE1(v88) ^ 0x7D) & 0x5F)) & 0x80111FFF;
  v162 = (v161 ^ 0xFFFFFFDF) - 834970987 + ((2 * v161) | 0x63894AD8);
  v163 = (v162 & 0x1040225B ^ 0x4005A12) + (v162 ^ 0x11D1256D) - ((v162 ^ 0x11D1256D) & 0x2001025B);
  v164 = (v153 ^ 0x1000D028)
       + ((v153 ^ 0x22) & 0x8E ^ 0xA0422084)
       - ((v153 ^ 0x1000D028) & 0xD08E);
  LOBYTE(v162) = v148 ^ v122;
  LODWORD(v57) = *(_DWORD *)&v91[4 * ((((2 * (BYTE2(v139) ^ 0x90)) & 0x142) - (BYTE2(v139) ^ 0x90) + 2142) ^ 0x8C1)];
  v165 = *(_DWORD *)&v96[4 * (v163 ^ 0x1454FA32)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v148) ^ 0x2F)] ^ *(_DWORD *)&v97[4 * (v153 ^ 0xE3)] ^ v164 ^ v88 ^ ((v164 ^ 0xB042208E) - ((2 * (v164 ^ 0xB042208E) + 711830476) & 0x29300864) + 1238293016) ^ ((v88 ^ 0x80111037) + 362914747 + ((2 * (v88 ^ 0x80111037) + 69928) & 0x2364C ^ 0xCF7BFFFF)) ^ ((v65 >> 23) - ((2 * (v65 >> 23)) & 0x8613302) - 2077189759);
  HIDWORD(v65) = v57 ^ 0x4BFED7;
  LODWORD(v65) = v57 ^ 0x51800000;
  LODWORD(v88) = ((v153 >> 8) & 0x2D ^ 0xF3066128) + ((v153 >> 8) & 0xD2 ^ 0x13) - 1;
  LODWORD(v57) = (v148 ^ v122);
  v166 = v88 ^ 0xF3066129;
  LODWORD(v88) = v88 ^ 0x86A8BDEA ^ ((v88 ^ 0xF3066174)
                                   - ((2 * (v88 ^ 0xF3066174) + 849678632) & 0x6B5DB93C)
                                   - 1895733966);
  v167 = *(_DWORD *)&v92[4 * (HIBYTE(v152) ^ 0x35)] ^ *(_DWORD *)&v96[4 * v166] ^ ((v65 >> 23)
                                                                                 - ((2 * (v65 >> 23)) & 0xCDF5CCE)
                                                                                 + 107982439) ^ 0x3E267DB6;
  LODWORD(v82) = v88 + v167;
  LODWORD(v88) = (v88 & v167) - ((2 * (v88 & v167)) & 0x2DB8D554);
  LODWORD(v88) = (v82 ^ 0x4DFAE6D7)
               + ((2 * v82) & 0x9BF5CDAE)
               + ((2 * v88 - 1380395692) ^ 0x1C3DD551)
               + ((2 * (2 * v88 - 1380395692)) & 0x9CF5FFF4 ^ 0xE78E555F)
               + 1;
  v168 = ((v57 ^ 0x76) - ((2 * (v57 ^ 0x76) + 711830476) & 0x284DA78E) + 1239329197) ^ *(_DWORD *)&v97[4 * ((31977625 - (v57 ^ 0x9D | 0x1E7F099) + (v57 ^ 0x9D | 0x1E180F66)) ^ 0x1E180F46)] ^ (v88 - ((2 * v88 + 16790088) & 0x49839F5A) - 1522407215);
  LODWORD(v57) = *(_DWORD *)&v91[4
                               * ((491759580 - (BYTE2(v160) ^ 0xC2 | 0x1D4FA7DC) + (BYTE2(v160) ^ 0xC2 | 0xE2B05823)) ^ 0xE2B0588E)];
  HIDWORD(v65) = v57 ^ 0x4BFED7;
  LODWORD(v65) = v57 ^ 0x51800000;
  LOWORD(v82) = ((2 * (BYTE1(v165) ^ 0x75)) & 0x1A) - (BYTE1(v165) ^ 0x75) - 3342;
  LODWORD(v82) = (v82 & 0x78 ^ 0xF0021829) + (v82 & 0x387) - 1;
  v169 = (v168 ^ v162);
  v170 = (((2 * (v169 ^ 0x51)) | 0x414E0E16) - (v169 ^ 0x51) - 547817227) ^ 0xADF1E321;
  v171 = v170 - ((2 * v170) & 0xFD172E0A) + 2123077381;
  v172 = *(_DWORD *)&v96[4
                       * ((2105674061 - (BYTE1(v165) ^ 0x35) + ((2 * (BYTE1(v165) ^ 0x35)) & 0x34) + 152) ^ 0x7D82094D)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v156) ^ 0x70)] ^ ((v65 >> 23) - ((2 * (v65 >> 23)) & 0xAD5561FC) + 1454027006) ^ v82 ^ ((v82 ^ 0xF0021A6F) - ((2 * (v82 ^ 0xF0021A6F) + 849678632) & 0x542D0AC0) - 2090267148) ^ *(_DWORD *)&v97[4 * (((v169 ^ 0xC2) - 1904265028 - ((2 * (v169 ^ 0xC2)) & 0x1B6) + 31) ^ 0x8E7F38BC)] ^ v171 ^ ((v171 ^ 0xF3DD7310) - ((2 * (v171 ^ 0xF3DD7310) + 1785572300) & 0x6A95EA7A) - 360592605);
  LODWORD(v82) = *(_DWORD *)&v91[4 * (BYTE2(v165) ^ 0x3E)];
  LODWORD(v88) = (((v168 >> 8) & 0xE4 ^ 0x8383D7C1) + ((v168 >> 8) & 0x1B) - 1) ^ 0x12AB57F9;
  v173 = ((2 * v88) & 0x2000211E) - v88;
  v174 = ((v156 & 0x1D ^ 0x24FFEB) - (v156 & 0xE2)) & 0x20FFFF;
  LODWORD(v88) = ((2 * (v156 ^ 0x938EDD95)) & 0x708A056)
               - (v156 ^ 0x938EDD95)
               + 1413189076;
  v175 = v160 ^ v158;
  v176 = *(_DWORD *)&v92[4 * (HIBYTE(v160) ^ 0x6B)] ^ (v82 >> 23) ^ *(_DWORD *)&v97[4
                                                                                                * ((v88 & 0x43105D6F ^ 0xD3404025 | v88 & 0x4850290 | 0x2002A000) ^ 0xB4D7B0F7)] ^ ((((_DWORD)v82 << 9) ^ 0x97FDAE00) - ((2 * (((_DWORD)v82 << 9) ^ 0x97FDAE00)) & 0x9FBFBC00) - 807411803) ^ ((BYTE1(v168) ^ 0xB8) - ((2 * (BYTE1(v168) ^ 0xB8) + 849678632) & 0x328500A6) - 157921561) ^ ((v174 ^ 0x20FFB3) - ((2 * (v174 ^ 0x20FFB3) + 40741836) & 0x28D7AF2) - 2139253921) ^ *(_DWORD *)&v96[4 * ((v173 - 475148432) ^ 0x72854FAC)];
  v177 = v174 ^ BYTE1(v168);
  LOWORD(v82) = ((2 * (BYTE1(v156) ^ 0x39)) & 0xFFBF) - (BYTE1(v156) ^ 0x39) - 8160;
  LODWORD(v57) = *(_DWORD *)&v91[4 * (BYTE2(v168) ^ 0x99)];
  HIDWORD(v65) = v57 ^ 0x4BFED7;
  LODWORD(v65) = v57 ^ 0x51800000;
  v178 = (((2 * (v175 ^ 0x6D)) & 0x17A) - (v175 ^ 0x6D) + 612890434) ^ 0x4CF737C2;
  v179 = ((2 * v178) | 0x657FDBF0) - v178 - 851439096;
  v180 = (((2 * (v175 ^ 0x31)) | 0xA4672E04) - (v175 ^ 0x31) - 1379112706) ^ 0x52C6D264;
  LODWORD(v88) = *(_DWORD *)&v96[4 * (((v82 & 0x3DCB ^ 0x80453D0A) + (v82 & 0x234 ^ 0x280031) - 1) ^ 0x806D1D94)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v165) ^ 0x81)] ^ *(_DWORD *)&v97[4 * ((-210532768 - (v180 | 0xF3738660) + (v180 | 0xC8C799F)) ^ 0xC793CCB)] ^ BYTE1(v156) ^ ((BYTE1(v156) ^ 0xEA) - 170306218 + ((2 * (BYTE1(v156) ^ 0xEA) + 296) & 0x182 ^ 0xCFFAEFFF)) ^ v179 ^ ((v179 ^ 0x5ACF2DDD) - ((2 * (v179 ^ 0x5ACF2DDD) + 174959564) & 0x1C2B19E6) - 2092145959);
  LODWORD(v82) = *(_DWORD *)&v91[4
                               * ((((2 * (BYTE2(v156) ^ 0x209AC0FA)) & 0x4131801C)
                                 - (BYTE2(v156) ^ 0x209AC0FA)
                                 + 1310855921) ^ 0x6EB8D22A)];
  v181 = v88 ^ ((v65 >> 23) - ((2 * (v65 >> 23)) & 0x67FF726) - 2092958829);
  HIDWORD(v65) = v82 ^ 0x4BFED7;
  LODWORD(v65) = v82 ^ 0x51800000;
  v182 = ((v65 >> 23) - ((2 * (v65 >> 23)) & 0xA23C3E36) + 1360928539) ^ *(_DWORD *)&v92[4 * (HIBYTE(v168) ^ 0x19)];
  if ((v165 & 0x40) != 0)
    v184 = -64;
  else
    v184 = 64;
  v183 = (v165 ^ 0xBEFB7FDF) + 1090813969 + ((2 * v165) & 0x1DE ^ 0x40);
  v185 = v183 + v184 + 555584553 - 2 * ((v183 + v184) & 0x211D8C79 ^ v183 & 0x10);
  v186 = (((v182 | 0xFFFFFFEF) - 1368450025) ^ 0x8BEF1C16)
       - ((2 * (((v182 | 0xFFFFFFEF) - 1368450025) ^ 0x8BEF1C16)) & 0xC1FFFFFF);
  v187 = v185 + 64;
  v188 = v182 ^ 0x33CA9E11;
  if (v186 == -461373440)
    v189 = 16;
  else
    v189 = -16;
  v190 = v189 + v188 - 2 * ((v189 + v188) & 0xC11FF7F ^ v188 & 9);
  v191 = (16 * (v175 >> 8)) ^ 0x24B1B0;
  v192 = v191 - ((2 * v191) & 0xEC0);
  v193 = ((2 * (v191 - ((2 * v191) & 0x5A0) + 4816)) & 0x1F00 ^ 0x500)
       + ((v191 - ((2 * v191) & 0x5A0) + 4816) & 0xFF0 ^ 0x3CD2DD5F);
  v194 = ((v193 - ((2 * v193 + 816534372) & 0x28010D82) - 1368838027) ^ (((v192 + 3944) & 0xFF0 ^ 0x20F6EDBDu) - 1)) >> 4;
  v195 = *(_DWORD *)&v97[4 * (v187 ^ 0x211D8CE2)] ^ *(_DWORD *)&v96[4 * (BYTE1(v175) ^ 0x46)] ^ v187 ^ ((v187 ^ 0x211D8C29) - ((2 * (v187 ^ 0x211D8C29) + 1785572300) & 0x4E899F62) - 595876457) ^ ((v194 ^ 0x176E5641) - 2 * ((v194 ^ 0x176E5641) & 0x1DBD7 ^ v194 & 4) - 536749101) ^ (v190 - 1944977546);
  v196 = (((v181 >> 8) & 0x6D ^ 0x186DE08) + ((v181 >> 8) & 0x92 ^ 0x83) - 1) & 0xFF007FFF;
  v197 = *(_DWORD *)&v91[4
                       * ((((2 * (BYTE2(v176) ^ 0x21)) | 0x922F5554) - (BYTE2(v176) ^ 0x21) - 1226287786) ^ 0x4917AAB6)];
  HIDWORD(v198) = v197 ^ 0x4BFED7;
  LODWORD(v198) = v197 ^ 0x51800000;
  v199 = ((BYTE1(v181) ^ 0xB0) + ((v181 >> 8) & 0x7E ^ 0xE481824E) - ((BYTE1(v181) ^ 0xB0) & 0x7E)) ^ 0xE4D3A62B;
  v200 = (((2 * (v195 ^ 0x77)) & 0x52) - (v195 ^ 0x77) - 1675751210) ^ 0x9C0FD4D6;
  v201 = (2 * v200) & 0x21113A;
  v200 += 665888925;
  v202 = v200 - v201;
  v203 = *(_DWORD *)&v96[4 * ((((2 * v199) & 0x240442) - v199 - 60430882) ^ 0xFC37C18B)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v172) ^ 0x70)] ^ ((v198 >> 23) - ((2 * (v198 >> 23)) & 0xB867C0E8) + 1546903668) ^ ((v196 ^ 0x1005E67) - 956251207 + ((2 * (v196 ^ 0x1005E67) + 44372264) & 0x2007648 ^ 0xEFFBFFFF)) ^ *(_DWORD *)&v97[4 * ((-1532724404 - (v195 ^ 0x6231B090 | 0xA4A47B4C) + (v195 ^ 0x6231B090 | 0x5B5B84B3)) ^ 0x396A341E)] ^ v202 ^ ((v202 ^ 0x27A16C1C) - 2 * (((v202 ^ 0x27A16C1C) + 892786150) & 0x3B88C3DD ^ v200 & 1) - 255878718);
  v204 = ((2 * (BYTE1(v195) ^ 0x1400CFC)) | 0xC699F0C8) - (BYTE1(v195) ^ 0x1400CFC) - 1665988708;
  v205 = *(_DWORD *)&v91[4 * (BYTE2(v181) ^ 0xCE)];
  HIDWORD(v198) = v205 ^ 0x4BFED7;
  LODWORD(v198) = v205 ^ 0x51800000;
  v206 = v177 ^ v176;
  v207 = ((v198 >> 23) - ((2 * (v198 >> 23)) & 0x63429034) + 832653338) ^ *(_DWORD *)&v92[4 * (HIBYTE(v176) ^ 0x45)];
  v208 = v204 ^ *(_DWORD *)&v96[4 * ((((2 * (BYTE1(v195) ^ 0x2F)) & 0x56) - (BYTE1(v195) ^ 0x2F) + 6100) ^ 0x174A)] ^ ((v204 ^ 0x620CF474) - ((2 * (v204 ^ 0x620CF474) + 849678632) & 0x63835166) - 1961610937);
  v209 = (v207 ^ 0xE5DA38F3 ^ v208) + 1;
  v208 ^= 0x13476BE5u;
  v210 = v208 + (v209 ^ 0xBFEFDFF2) + ((2 * v209) & 0x7FDFBFE4) + 1074798606;
  v211 = v210 - ((2 * v210) & 0x5BFE0B8C);
  v212 = v172 ^ 0x8448382;
  v213 = (v172 ^ 0x21040353 | 0x64DF4484)
       - (v172 ^ 0x21040353 | 0x9B20BB7B)
       - 1692353669;
  v215 = (v207 ^ ((v207 ^ 0xF69D5316) - ((2 * (v207 ^ 0xF69D5316) + 2) & 0xFDC6987A) - 18658242) ^ 0xDA7EE512 ^ (v211 + 771687878))
       + v208;
  v216 = v215 - ((2 * v215) & 0x7A02B0C2);
  if ((v181 ^ 0x3B000000) >> 24 <= 0x82)
    v218 = -2147360734;
  else
    v218 = -2147360603;
  v217 = ((HIBYTE(v181) ^ 0xF9FF3DC4) + 100712961 + ((2 * HIBYTE(v181)) ^ 0x76)) % 0x83;
  v219 = (v217 ^ 0x7FFE1FDE) + v218 + ((2 * v217) & 0x1BC);
  v214 = (((2 * (v172 ^ 0x9A)) & 0xFFFFFFEF) - (v172 ^ 0x9A) - 400321784) ^ 0xCD113318;
  v220 = ((v213 ^ 0x45DB474E) + 1387593378 + (~(2 * (v213 ^ 0x45DB474E) + 711830476) | 0xC503AE89)) ^ *(_DWORD *)&v97[4 * ((((2 * v214) & 0x6122B4) - v214 + 2105962149) ^ 0x58B4CE7D)] ^ (v216 - 1123985311);
  v221 = (((2 * (BYTE2(v195) ^ 0x46)) & 0x1D6) - (BYTE2(v195) ^ 0x46) + 1639264532) ^ 0x33A73314;
  v222 = (((v212 >> 8) & 0x50) + (BYTE1(v212) ^ 0x7D) - ((BYTE1(v212) ^ 0x7D) & 0x50) + 323927296) ^ 0x75FBF52;
  v223 = v222 - ((2 * v222) & 0x20220406) + 1518180867;
  v224 = *(_DWORD *)&v91[4 * ((1705657535 - (v221 | 0x65AA44BF) + (v221 | 0x9A55BB40)) ^ 0xC847B940)];
  HIDWORD(v225) = v224 ^ 0x4BFED7;
  LODWORD(v225) = v224 ^ 0x51800000;
  v226 = (((2 * (v206 ^ 0xF2)) & 0xE4) - (v206 ^ 0xF2) - 937778035) & 0x881027FF;
  v227 = *(_DWORD *)&v96[4 * ((((2 * (BYTE1(v212) ^ 0xAB)) & 0xFFFFFF83) - (BYTE1(v212) ^ 0xAB) + 2366) ^ 0x93B)] ^ *(_DWORD *)&v97[4 * (v206 ^ 0x82)] ^ *(_DWORD *)&v92[4 * ((v219 - 1645724657 - ((2 * v219) & 0x3BD0781E)) ^ 0x9DE83C57)] ^ ((v226 ^ 0x88102436) + 1120181908 + ((2 * (v226 ^ 0x88102436) + 174959564) & 0x1000115A ^ 0xF5F67FFF)) ^ v223 ^ ((v223 ^ 0x4E6C988F) - 2 * (((v223 ^ 0x4E6C988F) + 424839316) & 0x543019E3 ^ (v223 ^ 0x4E6C988F) & 1) + 1837277814) ^ ((v225 >> 23) - ((2 * (v225 >> 23)) & 0x55BCFEAE) + 719224663);
  v228 = ((2 * (BYTE1(v206) ^ 0x9021019)) | 0x6AB7F8D8) - (BYTE1(v206) ^ 0x9021019) + 1252262804;
  v229 = *(_DWORD *)&v91[4 * (BYTE2(v212) ^ 0x18)];
  HIDWORD(v225) = v229 ^ 0x4BFED7;
  LODWORD(v225) = v229 ^ 0x51800000;
  v230 = *(_DWORD *)&v92[4 * (HIBYTE(v195) ^ 0xD8)] ^ ((v225 >> 23) - ((2 * (v225 >> 23)) & 0x6EEA3D7C) + 930422462) ^ 0xEF277AC;
  v231 = ((2 * (v230 & 0xCFC8FC99 ^ 0x69089DA1)) & 0x8F916B30) - (v230 & 0xCFC8FC99 ^ 0x69089DA1);
  v232 = (v181 ^ 0x7E064D)
       + (v181 & 0x16 ^ 0x1280A012)
       - ((v181 ^ 0x7E064D) & 0x220016);
  v233 = (((2 * (v230 & 0x30370366 ^ 0x10020322)) & 0x20660048) - (v230 & 0x30370366 ^ 0x10020322) - 1488156710) ^ 0xFB8C9DD8;
  v234 = (((v206 >> 8) & 7 ^ 0xBF642A03) + ((v206 >> 8) & 0xF8 ^ 0xE9) - 1) ^ 0xBE5CAAA3;
  v235 = (((2 * v233) | 0xF5BB1DD4) - v233 + 86143254) ^ 0xB61B96AA | (v231 + 939739685) ^ 0x504B5B05;
  v236 = (v181 ^ 0x82 | 0x51832C56) - (v181 ^ 0x82 | 0xAE7CD3A9) - 1367551063;
  v237 = *(_DWORD *)&v97[4 * (((v236 & 0x822D53 ^ 0x62A0102) + (v236 & 0x510102AC ^ 0x5111100D) - 1) ^ 0x6B83D44)] ^ *(_DWORD *)&v96[4 * ((((2 * v234) & 0x25003AC) - v234 + 1111593) ^ 0x128766C)] ^ v228 ^ ((v228 ^ 0xBC59EC25) - ((2 * (v228 ^ 0xBC59EC25) + 849678632) & 0x7757F8A8) - 1795259160) ^ ((v232 ^ 0x12DCA60E) - ((2 * (v232 ^ 0x12DCA60E) + 711830476) & 0x3B69B8DC) - 756305324) ^ (v235 - ((2 * v235) & 0x56288C5E) - 1424734673);
  v238 = v220 ^ v213;
  v239 = v227 ^ v226;
  v240 = ((((v239 ^ 0xB3E45E80) >> ((v220 ^ v213) & 0x10 ^ 0x10))
         + 530468026
         - ((2 * ((v239 ^ 0xB3E45E80) >> ((v220 ^ v213) & 0x10 ^ 0x10))) & 0x3F3C9974)) ^ 0x1F9E4CBA) >> ((v220 ^ v213) & 0x10);
  HIDWORD(v225) = (v239 >> 8) ^ 2;
  LODWORD(v225) = BYTE1(v239) ^ 0x5C;
  v241 = (v225 >> 2) - ((2 * (v225 >> 2)) & 0x80000036) - 281007397;
  HIDWORD(v225) = ((v225 >> 2) - ((2 * (v225 >> 2)) & 0x80000036) - 1354749221) ^ 0xDA5E895;
  LODWORD(v225) = v241;
  v242 = (v225 >> 30) - ((2 * (v225 >> 30)) & 0xC350660);
  v243 = *(_DWORD *)&v91[4
                       * (((BYTE2(v220) ^ 0x4C0079) - ((2 * (BYTE2(v220) ^ 0x4C0079)) & 0x1800E0) - 1139848336) ^ 0xBC434B85)];
  HIDWORD(v225) = v243 ^ 0x4BFED7;
  LODWORD(v225) = v243 ^ 0x51800000;
  v244 = (v232 ^ 0xE1 ^ v237 ^ 0x77 | 0x6913C6C1)
       - (v232 ^ 0xE1 ^ v237 ^ 0x77 | 0x96EC393E)
       - 1762903746;
  v245 = (v244 & 0x6112C310 ^ 0x11201110) + (v244 ^ 0x6816CEE1) - ((v244 ^ 0x6816CEE1) & 0x7132D310);
  v246 = (((v232 ^ 0xB7C69DE1 ^ v237) & 0x88 ^ 0x7E377D09) + ((v232 ^ 0xB7C69DE1 ^ v237) & 0x77) - 1) ^ 0x56A355BE;
  v247 = ((2 * v246) & 0x100119C) - v246;
  LOWORD(v246) = v203 ^ v196;
  v248 = *(_DWORD *)&v96[4 * ((v242 + 102400816) ^ 0x8D8D8A56)] ^ *(_DWORD *)&v92[4 * (((v203 ^ v196) >> 24) ^ 6)] ^ *(_DWORD *)&v97[4 * ((v247 - 130714831) ^ 0xD0A15B21)] ^ v245 ^ ((BYTE1(v239) ^ 0x5E) - ((2 * (BYTE1(v239) ^ 0x5E) + 312807720) & 0x100002BC) + 1733475826) ^ ((v245 ^ 0x7037DB2A) - ((2 * (v245 ^ 0x7037DB2A) + 711830476) & 0x3C833068) + 326659610) ^ ((v225 >> 23) - ((2 * (v225 >> 23)) & 0xF16EA238) + 2025279772);
  v249 = (((v240 - ((2 * v240) & 0x7A) + 445) & 0x95 ^ 0x608085)
        + ((v240 - ((2 * v240) & 0x7A) + 445) & 0x6A ^ 0x8C8F1D43)
        - 1) ^ 0x81BE9732;
  v250 = (BYTE1(v237) ^ 0x68) + ((v237 >> 8) & 0x34 ^ 0xB14) - ((BYTE1(v237) ^ 0x68) & 0x34);
  v251 = *(_DWORD *)&v91[4 * ((((2 * v249) & 0x12200274) - v249 - 699953467) ^ 0xDB1684A1)];
  HIDWORD(v225) = v251 ^ 0x4BFED7;
  LODWORD(v225) = v251 ^ 0x51800000;
  v252 = (((2 * (BYTE1(v237) ^ 0x17)) & 0x16) - (BYTE1(v237) ^ 0x17) - 2048550668) ^ 0x686A80D3;
  v253 = (((2 * (v246 ^ 0xB4)) | 0x4D090D60) - (v246 ^ 0xB4) - 646219440) ^ 0x79D92BB;
  v254 = ((2 * v253) & 0x592F3EEC) - v253 - 748134263;
  v255 = *(_DWORD *)&v96[4 * ((v252 - ((2 * v252) & 0x9A1A32DA) + 1567480173) ^ 0xB0E2C12E)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v220) ^ 7)] ^ *(_DWORD *)&v97[4 * (((v246 ^ 0xC14409C1) - ((2 * (v246 ^ 0xC14409C1)) & 0x8080113A) - 901539171) ^ 0xB0793EC)] ^ ((v250 ^ 0xB72) - ((2 * (v250 ^ 0xB72) + 312807720) & 0x1F649F40) + 688183348) ^ ((v254 ^ 0xF271744D) - 2 * (((v254 ^ 0xF271744D) + 892786150) & 0x5669B6F7 ^ (v254 ^ 0xF271744D) & 1) - 1952412452) ^ ((v225 >> 23) - ((2 * (v225 >> 23)) & 0x46AC70DA) + 592853101);
  v256 = BYTE1(v246);
  v257 = (BYTE1(v246) ^ 0x61) - 1705726662 - ((2 * (BYTE1(v246) ^ 0x61)) & 0x74);
  v258 = *(_DWORD *)&v91[4
                       * ((((2 * (BYTE2(v237) ^ 0x38401064)) | 0xC84688D6) - (BYTE2(v237) ^ 0x38401064) - 1680032875) ^ 0x5C635452)];
  HIDWORD(v225) = v258 ^ 0x4BFED7;
  LODWORD(v225) = v258 ^ 0x51800000;
  v259 = (v238 ^ 0xD03C3CF3) - ((2 * (v238 ^ 0xD03C3CF3)) & 0xA04840A2) + 1952719441;
  v260 = (v259 & 0x800800A3 ^ 0x30020A1) + (v259 & 0x2050035C ^ 0x4830054D) - 1;
  v261 = ((v238 ^ 0x54) - ((2 * (v238 ^ 0x54)) & 0x192) - 65341495) ^ 0x6E1ABFBD;
  v262 = *(_DWORD *)&v96[4 * ((((2 * (v256 ^ 0x17)) & 0x15C) - (v256 ^ 0x17) + 9041) ^ 0x230D)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v227) ^ 0x63)] ^ ((v225 >> 23) - ((2 * (v225 >> 23)) & 0x4ADC0AA0) - 1519516336) ^ v257 ^ ((v257 ^ 0x9A54AD4D) - ((2 * (v257 ^ 0x9A54AD4D) + 849678632) & 0x3491D100) - 1281658604) ^ *(_DWORD *)&v97[4 * ((((2 * v261) | 0x51314B9A) - v261 - 681092557) ^ 0xBA98ED30)] ^ ((v260 ^ 0xEB682759) - ((2 * (v260 ^ 0xEB682759) + 1785572300) & 0x60DDFFEC) + 1705367004);
  v263 = (2100410193 - (BYTE2(v203) ^ 0x56 | 0x7D31B751) + (BYTE2(v203) ^ 0x56 | 0x82CE48AE)) ^ 0xC2CA6884;
  v264 = *(_DWORD *)&v91[4 * ((-504925432 - (v263 | 0xE1E77308) + (v263 | 0x1E188CF7)) ^ 0x5E1CACA2)];
  v265 = (((v238 >> 8) & 0x89 ^ 0x51A501) + ((v238 >> 8) & 0x76 ^ 0xC2A4065) + 0xFFFFFFF) & 0x80003FF;
  v266 = ((v238 >> 8) & 0x94) + (BYTE1(v238) ^ 0xFFFFFFD4) + (BYTE1(v238) | 0x9147A16B) + 1;
  LOWORD(v238) = (v239 & 0xE1 ^ 0xCDA1) + (v239 & 0x1E ^ 0x1B) - 1;
  v267 = *(_DWORD *)&v92[4 * (HIBYTE(v237) ^ 0x2E)] ^ (v264 >> 23) ^ *(_DWORD *)&v97[4
                                                                                   * (((v238 & 0x2C7 ^ 0x1C80A46)
                                                                                     + (v238 & 0x138 ^ 0x10000121)
                                                                                     - 1) ^ 0x11C80A96)] ^ (((v264 << 9) ^ 0x97FDAE00) - ((2 * ((v264 << 9) ^ 0x97FDAE00)) & 0xDCE90C00) - 294352903) ^ v239 ^ ((v239 ^ 0x80) - ((2 * (v239 ^ 0x80) + 1785572300) & 0x620989F4) + 813415136) ^ v265 ^ ((v265 ^ 0x80001B0) - 2071833878 + ((2 * (v265 ^ 0x80001B0) + 849678632) & 0x500004AA ^ 0xFDFAEFFF)) ^ *(_DWORD *)&v96[4 * (((v266 & 0x2467573A ^ 0x4205731) + (v266 & 0xDB98A8C5) - 1) ^ 0x9567F6F8)];
  v268 = v254 ^ v250 ^ v255;
  v269 = v268 ^ 0x20A9F663;
  v270 = *(_DWORD *)&v91[4 * (((v268 ^ 0x20A9F663u) >> 16) ^ 0xCD)];
  HIDWORD(v225) = v270 ^ 0x4BFED7;
  LODWORD(v225) = v270 ^ 0x51800000;
  LOBYTE(v250) = v262 ^ v260;
  v271 = v262 ^ v260 ^ 0x3D276F74;
  v272 = (BYTE1(v271) ^ 0x4000DF | 0xF5F178B6) - (BYTE1(v271) ^ 0x4000DF | 0xA0E8749) + 168724297;
  v273 = *(_DWORD *)&v96[4 * (BYTE1(v271) ^ 0x82)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v248) ^ 0x9E)] ^ *(_DWORD *)&v97[4 * ((1674724911 - (v267 ^ 0x9532C4E | 0x63D2462F) + (v267 ^ 0x9532C4E | 0x9C2DB9D0)) ^ 0x957E95E8)] ^ v267 ^ ((v267 ^ 0xBD) + 552706551 + ((2 * (v267 ^ 0xBD) + 12) & 0x20 ^ 0xBD9A77FF)) ^ v272 ^ ((v272 ^ 0xF5B178B6) - ((2 * (v272 ^ 0xF5B178B6) + 44372264) & 0x9C6E610) + 1580596124) ^ ((v225 >> 23) - ((2 * (v225 >> 23)) & 0xE0480192) - 266075959);
  v274 = *(_DWORD *)&v91[4 * (BYTE2(v271) ^ 0xDC)];
  HIDWORD(v225) = v274 ^ 0x4BFED7;
  LODWORD(v225) = v274 ^ 0x51800000;
  v275 = (v248 ^ BYTE1(v239));
  v276 = ((2 * (v275 ^ 0xFA0632FF)) & 0x500804D8) - (v275 ^ 0xFA0632FF) + 1460354195;
  v277 = ((v275 ^ 0x38) - ((2 * (v275 ^ 0x38)) & 0xE8) + 410815604) ^ 0x1FDC0D55;
  v278 = (((v267 >> 8) & 0x52 ^ 0x82410243) + ((v267 >> 8) & 0xAD) - 1) ^ 0xBF8016B0;
  v279 = BYTE1(v267) ^ 0x518C6CE2 ^ ((BYTE1(v267) ^ 0xC6)
                                   + 1792996537
                                   + ((2 * (BYTE1(v267) ^ 0xC6) + 40) & 0x48 ^ 0xDDFFEFFF));
  v280 = *(_DWORD *)&v96[4 * ((-1482105761 - (v278 | 0xA7A8DC5F) + (v278 | 0x585723A0)) ^ 0x659637C9)] ^ 0x8A3722;
  v281 = v279 + v280;
  v282 = (v279 & v280) - ((2 * (v279 & v280)) & 0x4803A3D6);
  v283 = (v281 ^ 0xDFD3A9F4)
       + ((2 * v281) & 0xBFA753E8)
       + ((2 * v282 - 939285546) ^ 0xB5FE7E7)
       + ((2 * (2 * v282 - 939285546)) & 0x7947779C ^ 0xEFF8B873)
       + 1;
  v284 = *(_DWORD *)&v97[4 * ((((2 * v277) & 0xE410A20) - v277 + 1087247087) ^ 0x476E93C5)] ^ ((v225 >> 23)
                                                                                             - ((2 * (v225 >> 23)) & 0x144D804E)
                                                                                             + 170311719) ^ ((v276 ^ 0xAD0D0E94) - ((2 * (v276 ^ 0xAD0D0E94) + 1785572300) & 0x675EBE2A) - 1327090437) ^ *(_DWORD *)&v92[4 * (HIBYTE(v255) ^ 0xA)] ^ (v283 - ((2 * v283 + 966796214) & 0x69B88974) + 296507029);
  v285 = (((v248 >> 8) & 0xCC ^ 0x55A452C9) + 0x7FFFFFFF) & 0x400402CC | (v248 >> 8) & 0x33;
  v286 = *(_DWORD *)&v91[4
                       * (((BYTE2(v267) ^ 0x5066B)
                         + (HIWORD(v267) & 0x59 ^ 0xA9603810)
                         - ((BYTE2(v267) ^ 0x5066B) & 0x50459)) ^ 0xA9603AAE)];
  HIDWORD(v225) = v286 ^ 0x4BFED7;
  LODWORD(v225) = v286 ^ 0x51800000;
  v287 = (v225 >> 23) - ((2 * (v225 >> 23)) & 0x4AE73818);
  v288 = (v268 ^ 0xE2) - ((2 * (v268 ^ 0xE2)) & 0x1EC) + 758;
  v289 = *(_DWORD *)&v97[4
                       * ((((2 * (v268 ^ 0x42810721)) & 0x84020B28)
                         - (v268 ^ 0x42810721)
                         - 1850944917) ^ 0xD32DD59D)];
  HIDWORD(v225) = v289 ^ 0x6337;
  LODWORD(v225) = v289 ^ 0x2A860000;
  v290 = ((((v288 ^ 0x208) - ((2 * (v288 ^ 0x208) + 11212) & 0x4014) + 30192) ^ v288) << 16) ^ 0xA2020000;
  v291 = (v290 - ((2 * v290) & 0x72D40000) + 963309823) & 0xFFFF0000 ^ 0x396A3536;
  v292 = (v291 - 584109928 + ((2 * v291) & 0xBA5E0000 ^ 0xFFFF9FD3)) ^ ((v225 >> 16)
                                                                      - ((2 * (v225 >> 16)) & 0x4B2F5EE8)
                                                                      - 1516785804);
  HIDWORD(v225) = v292 ^ 0x21E9;
  LODWORD(v225) = v292 ^ 0x9A250000;
  v293 = *(_DWORD *)&v96[4 * (((BYTE1(v248) ^ 0xEA) - ((2 * (BYTE1(v248) ^ 0xEA)) & 0x94) + 586) ^ 0x28F)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v262) ^ 0x52)] ^ ((v285 ^ 0x400402BA) - ((2 * (v285 ^ 0x400402BA) + 312807720) & 0x100817BE) - 444667789) ^ (v287 + 628333580) ^ ((v225 >> 16) + 424839316 - ((2 * (v225 >> 16)) & 0x32A4F66C) - 3422);
  v294 = *(_DWORD *)&v91[4
                       * ((475402500 - (BYTE2(v248) ^ 0xCC | 0x1C561104) + (BYTE2(v248) ^ 0xCC | 0xE3A9EEFB)) ^ 0xE3A9EE14)];
  HIDWORD(v225) = v294 ^ 0x4BFED7;
  LODWORD(v225) = v294 ^ 0x51800000;
  v295 = (BYTE1(v269) ^ 0x1044213B) + ((v269 >> 8) & 0x92 ^ 0x4F2B4880) - ((BYTE1(v269) ^ 0x1044213B) & 0x10402192);
  v296 = v250;
  v297 = *(_DWORD *)&v92[4 * (HIBYTE(v267) ^ 0xBF)] ^ ((v225 >> 23) - ((2 * (v225 >> 23)) & 0xFA05BF8E) - 50143289) ^ v295 ^ *(_DWORD *)&v96[4 * ((317380694 - (BYTE1(v269) ^ 0x480D19A | 0x12EAD856) + (BYTE1(v269) ^ 0x480D19A | 0xED1527A9)) ^ 0xE995F644)] ^ ((v295 ^ 0x4F2F4883) - ((2 * (v295 ^ 0x4F2F4883) + 849678632) & 0x37CFF04A) + 1966768313) ^ 0xD183BCB0;
  v298 = *(_DWORD *)&v97[4
                       * ((-1728105042 - (v296 ^ 0x4D0084E | 0x98FF35AE) + (v296 ^ 0x4D0084E | 0x6700CA51)) ^ 0x63D0C26E)] ^ 0x2A866337;
  v299 = v297 + v298;
  v300 = (v297 & v298) - ((2 * (v297 & v298)) & 0xBF1438C);
  v301 = (v299 ^ 0xBFFAB79F)
       + ((2 * v299) & 0x7FF56F3E)
       + ((2 * v300 + 200360844) ^ 0xFF34385)
       + ((2 * (2 * v300 + 200360844)) & 0xF7FBFFEC ^ 0xE81D78F7);
  v302 = (v301 + 1 - 2 * ((v301 + 1006848089) & 0x3206A027 ^ (v301 + 1) & 7) + 1846143096) ^ ((v250 ^ 0xBA)
                                                                                            - 1615732104
                                                                                            + ((2
                                                                                              * (v250 ^ 0xBA)
                                                                                              + 460) & 0x122 ^ 0xBF9BF7FF));
  v303 = v284 ^ v276;
  v304 = ((v303 >> 7) & 0x1619F6C ^ 0x1419660) + ((v303 >> 8) ^ 0x7F192487);
  v305 = (1700797485 - (BYTE2(v303) ^ 0x37 | 0x65601C2D) + (BYTE2(v303) ^ 0x37 | 0x9A9FE3D2)) ^ 0xD49FF552;
  v306 = v305 - ((2 * v305) & 0x8CEB0964);
  v307 = ((BYTE2(v273) ^ 0x68) - ((2 * (BYTE2(v273) ^ 0x68)) & 0x1A4) - 2090882606) ^ 0x817DA38A;
  v308 = (((2 * (v304 + 74)) & 0x11A) + ((v304 + 74) ^ 0xFEA3BE8D) + 22823283) % 0x58;
  v309 = ((2 * v308) & 0xDC)
       + (v308 ^ 0xFCFFFBEE)
       + ((2 * (v304 + (v308 ^ 0xFFFFFF11) - ((2 * v308) & 0xDC) + 57)) & 0x15A)
       + ((v304 + (v308 ^ 0x11) - ((2 * v308) & 0xDC) + 57) ^ 0x797EFFAD);
  v310 = *(_DWORD *)&v91[4 * ((v307 - ((2 * v307) & 0x401E4E) + 569646887) ^ 0x23D61596)];
  HIDWORD(v225) = v310 ^ 0x4BFED7;
  LODWORD(v225) = v310 ^ 0x51800000;
  v311 = v309 - ((2 * v309 + 318900426) & 0xCA0AF658) - 293175407;
  v312 = v293 ^ v285;
  v313 = (v293 ^ v285);
  v314 = ((((v293 ^ v285 ^ 0x93F3C65B) + 230) ^ 0xFA) + ((2 * ((v293 ^ v285 ^ 0x93F3C65B) + 230)) & 0xF4) + 6) & (v313 ^ 0x5B);
  v315 = *(_DWORD *)&v92[4 * (HIBYTE(v302) ^ 0xDD)] ^ *(_DWORD *)&v97[4 * (v313 ^ 0x90)] ^ ((v225 >> 23)
                                                                                          - ((2 * (v225 >> 23)) & 0x9FC9418E)
                                                                                          + 1340383431) ^ v311 ^ *(_DWORD *)&v96[4 * (v311 ^ 0x65057B71)] ^ ((v311 ^ 0x65057B2C) - ((2 * (v311 ^ 0x65057B2C) + 849678632) & 0x2CDE7364) + 801227334) ^ 0x2E4152BF;
  v316 = 2 * (v314 - ((2 * v314) & 0x148)) - 513559224;
  v317 = ((4 * (v313 ^ 0x20)) ^ 0x1EC)
       + ((2 * (v313 ^ 0x20)) ^ 0x7FFEFD09)
       + (v316 ^ 0x6DEFBD49)
       + 682348519
       + ((2 * v316) & 0xE6E7EFFC ^ 0x3D38956F);
  v318 = (v315 & v317) - ((2 * (v315 & v317)) & 0x32F28DD0);
  v319 = ((v315 + v317) ^ 0xFF7FF7D5)
       + ((2 * (v315 + v317)) & 0xFEFFEFAA)
       + ((2 * v318 - 1292726832) ^ 0xBA5ACF57)
       + ((2 * (2 * v318 - 1292726832)) & 0xEEAF7AF0 ^ 0x9B5AE55F);
  LOBYTE(v315) = 2 * ((v319 - 43) & 8) + ((v319 - 43) & 8 ^ 0x9E) - 89;
  v320 = *(_DWORD *)&v91[4 * ((v306 - 965376846) ^ 0x887592C2)];
  v321 = (v315 & 0x68 ^ 0xB3B50925) + (v315 & 0x10) == -1279981203;
  HIDWORD(v225) = v320 ^ 0x4BFED7;
  LODWORD(v225) = v320 ^ 0x51800000;
  v322 = (((2 * (BYTE1(v312) ^ 0x46)) | 0x3F1BB5F2) - (BYTE1(v312) ^ 0x46) + 1081222407) & 0x3FFFFFFF;
  v323 = (v302 ^ v296);
  v324 = ((2 * (v302 ^ v296)) & 0x1DE ^ 0x114) + (v323 ^ 0x56EFA965);
  v325 = 2
       * (((v324 - 565761033) & (v324 - 1458547183)) - ((2 * ((v324 - 565761033) & (v324 - 1458547183))) & 0x40000E2E))
       + 1367350830;
  v326 = ((v325 ^ 0x80939E19) + 2 * v324 + ((2 * v325) & 0x5DD8FF90 ^ 0xFEFFC3EF)) | 1;
  v327 = *(_DWORD *)&v96[4
                       * (((BYTE1(v312) ^ 0x180C2E46)
                         + ((v312 >> 8) & 0xE0 ^ 0x65E310A0)
                         - ((BYTE1(v312) ^ 0x180C2E46) & 0x18082EE0)) ^ 0x65E7103D)] ^ *(_DWORD *)&v92[4 * (HIBYTE(v273) ^ 0xAA)] ^ *(_DWORD *)&v97[4 * ((((2 * (v323 ^ 0x6004687)) & 0xC008440) - (v323 ^ 0x6004687) - 395932449) ^ 0xEE66CA19)] ^ ((v225 >> 23) - ((2 * (v225 >> 23)) & 0x5F74C1CE) + 800743655) ^ v322 ^ ((v322 ^ 0x3F8DDA79) - ((2 * (v322 ^ 0x3F8DDA79) + 849678632) & 0x5DBEE7C6) + 137493623) ^ (v326 - ((2 * v326 + 1820853154) & 0xC6B5B58C) + 429841559);
  v328 = *(_DWORD *)&v91[4
                       * ((1082763367 - (BYTE2(v293) ^ 0x32A9EC1B | 0x4089A867) + (BYTE2(v293) ^ 0x32A9EC1B | 0xBF765798)) ^ 0x8DDFBB58)];
  v329 = ((2 * (v302 >> 8)) ^ 0x10B0F12) - 2 * (((2 * (v302 >> 8)) ^ 0x10B0F12) & 0x9E ^ (2 * (v302 >> 8)) & 4);
  v330 = ((2 * (BYTE1(v302) ^ 0x60)) | 0xE628A66C) - (BYTE1(v302) ^ 0x60) - 1930711862;
  v331 = (v330 ^ 0x6A46DB4B) + ((-88 - 2 * (_BYTE)v329) & 0x10) + ((v329 + 923) & 0x128 ^ 0x57F3E7D7) - 1475602143;
  v332 = (v273 ^ 0x2020E02A | 0x6B366185)
       - (v273 ^ 0x2020E02A | 0x94C99E7A)
       - 1798726022;
  LOWORD(v325) = 2 * ((v273 ^ 0xC) & 0x1F) - (v273 ^ 0xC) + 10720;
  v333 = *(_DWORD *)&v92[4 * (HIBYTE(v284) ^ 0x5C)];
  v334 = *(_DWORD *)&v92[4 * (HIBYTE(v312) ^ 0x93)];
  v335 = v333 ^ (v328 >> 23) ^ *(_DWORD *)&v96[4 * (BYTE1(v302) ^ 0xD4)] ^ *(_DWORD *)&v97[4
                                                                                         * (((v325 & 0x289 ^ 0x86A65089)
                                                                                           + (v325 & 0xD76 ^ 0x108C61)
                                                                                           - 1) ^ 0x86B6D52A)] ^ v332 ^ ((v332 ^ 0x4B16814B) - ((2 * (v332 ^ 0x4B16814B) + 711830476) & 0x2794DDA0) - 1996405578) ^ v330 ^ (((v328 << 9) ^ 0x97FDAE00) - ((2 * ((v328 << 9) ^ 0x97FDAE00)) & 0x4DE95000) + 653568271) ^ (v331 - ((2 * v331) & 0x3B592392) + 497848777);
  v336 = *(_DWORD *)&v91[4
                       * ((-2011207065
                         - (BYTE2(v302) ^ 0x2045042C | 0x881F6A67)
                         + (BYTE2(v302) ^ 0x2045042C | 0x77E09598)) ^ 0x57A5911F)];
  HIDWORD(v225) = v336 ^ 0x4BFED7;
  LODWORD(v225) = v336 ^ 0x51800000;
  v337 = ((BYTE1(v273) ^ 0xDC) + ((v273 >> 8) & 0xED ^ 0x39CA921) - ((BYTE1(v273) ^ 0xDC) & 0xED)) & 0x2800FFF;
  v338 = (v303 ^ 0x8D) - ((2 * (v303 ^ 0x8D)) & 0x8A) + 1803037765;
  v339 = (v338 & 0x8200219 ^ 0x64218) + (v338 ^ 0x4A713C45) - ((v338 ^ 0x4A713C45) & 0x21010219);
  v340 = *(_DWORD *)&v96[4 * (((BYTE1(v273) ^ 6) + ((v273 >> 8) & 0x35 ^ 0x1031) - ((BYTE1(v273) ^ 6) & 0x35)) ^ 0x101E)] ^ *(_DWORD *)&v97[4 * (v303 ^ 0x62)] ^ v334 ^ v337 ^ ((v337 ^ 0x2800941) - 1067228361 + ((2 * (v337 ^ 0x2800941) + 44372264) & 0x4003544 ^ 0xFDDEFFFF)) ^ v339 ^ ((v339 ^ 0x82E523D) - ((2 * (v339 ^ 0x82E523D) + 711830476) & 0x2F3EAE20) + 1289104630) ^ ((v225 >> 23) - ((2 * (v225 >> 23)) & 0xF4FE5C3A) + 2055155229);
  v341 = v319 + 1760310485 - ((2 * v319 - 273708214) & 0xE228DE60);
  v342 = ((2 * (HIWORD(v335) & 0x76 ^ 0xD0A85830)) | 0x455CED9A) - (HIWORD(v335) & 0x76 ^ 0xD0A85830) + 1565624627;
  v343 = (v342 & 0x72062F76 ^ 0x72062EC9)
       - 108510042
       + ((2 * ((v342 & 0x72062F76 ^ 0x72062EC9) & 0x70000426 ^ (v342 | 0x7FFFFFFD))) ^ 0x107);
  v344 = (((2 * (HIWORD(v335) & 0x89 ^ 0x80)) | 0xE70E0E6A) - (HIWORD(v335) & 0x89 ^ 0x80) + 209254603) ^ 0x542F0F34;
  v345 = ((2 * v344) & 0xD18525FE) - v344;
  if (v321)
    v346 = 8;
  else
    v346 = 248;
  v347 = ((v346 + (v341 ^ 0x863D68DB)) ^ 0x77) + ((2 * (v346 + (v341 ^ 0x863D68DB))) & 0xEE) + 137;
  v348 = v347 + 1266391977 - ((2 * v347) & 0x152);
  v349 = (v345 + 389901568) ^ 0x491D2125 ^ v343;
  v350 = v348 ^ 0x4B7B9BDE;
  v351 = BYTE1(v341);
  v352 = (((2 * (BYTE1(v341) ^ 0xBF)) | 0x469BB12C) - (BYTE1(v341) ^ 0xBF) - 592304278) ^ 0x43CC5847;
  v353 = -2040308166 - (v352 | 0x86635E3A) + (v352 | 0x799CA1C5);
  v354 = -1773426067 - (v327 ^ 0xE3 | 0x964BAA6D) + (v327 ^ 0xE3 | 0x69B45592);
  v355 = BYTE1(v327);
  v356 = ((BYTE1(v327) ^ 0xC3) - ((2 * (BYTE1(v327) ^ 0xC3)) & 0xF4) + 1929367162) ^ 0x73FD8C78;
  v357 = (char *)*(&off_10112C750 + HIDWORD(a23) - 11609) - 513493822;
  v358 = *(_DWORD *)&v357[4 * v349];
  v359 = *(_DWORD *)&v357[4 * (BYTE2(v340) ^ 0xE8)];
  v360 = *(_DWORD *)&v357[4 * (((BYTE2(v341) ^ 0xD3) - 1373361399 - ((2 * (BYTE2(v341) ^ 0xD3)) & 0x12)) ^ 0xAE242B6E)];
  v361 = *(_DWORD *)&v357[4
                        * (((BYTE2(v327) ^ 0x412414A)
                          + (HIWORD(v327) & 0x2A ^ 0x7A259820)
                          - ((BYTE2(v327) ^ 0x412414A) & 0x12402A)) ^ 0x7E25992B)];
  LODWORD(v357) = (v335 ^ 0xC6) + (v335 & 0xD1 ^ 0x1011) - ((v335 ^ 0xC6) & 0xD1);
  v362 = (char *)*(&off_10112C750 + (HIDWORD(a23) ^ 0x28EB)) - 1913818306;
  v363 = *(_DWORD *)&v362[4 * (HIBYTE(v327) ^ 0x75)];
  v457 = *(_DWORD *)&v362[4 * (HIBYTE(v335) ^ 0xC8)];
  v364 = *(_DWORD *)&v362[4 * (HIBYTE(v340) ^ 6)];
  LODWORD(v362) = *(_DWORD *)&v362[4 * (HIBYTE(v341) ^ 0xDB)];
  HIDWORD(v365) = v361 ^ 0x1018170E;
  LODWORD(v365) = ~v361;
  v366 = ((2 * (v365 >> 29)) & 0xFBBDF7FC) + ((v365 >> 29) ^ 0xFDDEFBFE);
  v367 = 16 * ((v366 + 35718146) * (v366 + 35718146) - ((2 * (v366 + 35718146) * (v366 + 35718146)) & 0x53CBCF4))
       - 1444550752;
  v368 = ((2 * v367) & 0xBF6CBFE0 ^ 0x13488F40) + (v367 ^ 0xF653B85B);
  v369 = ((v368 - 1605787643) & (v366 + 35718146)) - ((2 * ((v368 - 1605787643) & (v366 + 35718146))) & 0x79BFBFFC);
  v370 = v368 + v366 + ((2 * v369 - 104873988) ^ 0xE03DFBE7) + ((2 * (2 * v369 - 104873988)) & 0xCCFB77C8 ^ 0x3F848837);
  v371 = v370 - ((2 * v370 + 298893274) & 0x9D6CE124);
  v372 = (char *)*(&off_10112C750 + (HIDWORD(a23) ^ 0x2891)) - 1291396134;
  v373 = *(_DWORD *)&v372[4
                        * ((((2 * (BYTE1(v340) ^ 0xA5E0D8)) | 0x6E13CCC) - (BYTE1(v340) ^ 0xA5E0D8) + 2089771418) ^ 0x83D57E1D)];
  v374 = *(_DWORD *)&v372[4 * (v353 ^ 0x191D21BC)];
  v375 = *(_DWORD *)&v372[4 * ((((2 * v356) & 0x204809C) - v356 + 1851039665) ^ 0x6F56DD16)];
  v376 = BYTE1(v335);
  v377 = ((2 * (BYTE1(v335) ^ 0x14AB0C6B)) | 0xEF45FE64) - (BYTE1(v335) ^ 0x14AB0C6B) + 140312782;
  v378 = *(_DWORD *)&v372[4 * (((v377 & 0x20000311 ^ 0x1CB14A11) + (v377 & 0xC30804EE ^ 0x20400C3) - 1) ^ 0xFDBD49AE)];
  v379 = (char *)*(&off_10112C750 + HIDWORD(a23) - 10511) - 1743096394;
  v380 = *(_DWORD *)&v379[4 * v350];
  v381 = *(_DWORD *)&v379[4 * (v354 ^ 0x69B45557)];
  v382 = 410917617 - (v376 ^ 0x59 | 0x187E1AF1) + (v376 ^ 0x59 | 0xE781E50E);
  LODWORD(v372) = *(_DWORD *)&v379[4 * (v357 ^ 0x108D)];
  v383 = *(_DWORD *)&v379[4 * (v340 ^ 0x77)];
  LODWORD(v357) = v378 ^ v362 ^ (v383 >> 17) ^ v382 ^ (v371 + 1470025855);
  v384 = ((v357 & 0x4F ^ 0x7CBF3E49) + (v357 & 0xB0 ^ 0x31) - 1) ^ 0xFE3E1E4A;
  v385 = (char *)*(&off_10112C750 + (HIDWORD(a23) ^ 0x347A)) - 1855385651;
  v386 = v385[(v384 - ((2 * v384) & 0x400032E) + 258626967) ^ 0x8DEB75C5];
  HIDWORD(v365) = v386 ^ 1;
  LODWORD(v365) = ~v386 << 24;
  v387 = (v365 >> 26) - ((2 * (v365 >> 26)) & 0x62) + 49;
  LOBYTE(v362) = 2 * ((v387 ^ 0x31) * (v387 ^ 0x31) - ((2 * (v387 ^ 0x31) * (v387 ^ 0x31)) & 0x4A));
  *(_BYTE *)(v441 - 0x3763F7FFF7FD70FELL) = v387 ^ 0xB4 ^ ((((_BYTE)v362 + 74) ^ 0x4B)
                                                         + ((2 * (((_BYTE)v362 + 74) ^ (((_BYTE)v362 + 82) | 0x7B))) ^ 0x9D)
                                                         - 5);
  HIDWORD(v365) = v360 ^ 0x1018170E;
  LODWORD(v365) = ~v360;
  v388 = (v365 >> 29) + 1915059134 - ((2 * (v365 >> 29)) & 0xE44AF77C);
  v389 = (16
        * ((v388 ^ 0x72257BBE) * (v388 ^ 0x72257BBE) - ((2 * (v388 ^ 0x72257BBE) * (v388 ^ 0x72257BBE)) & 0xEC784AA))
        + 1983653200) ^ 0x763C2550;
  LODWORD(v362) = 202810591 - (v355 ^ 0xB3 | 0xC16A4DF) + (v355 ^ 0xB3 | 0xF3E95B20);
  HIDWORD(v365) = v372 ^ 0x10371;
  LODWORD(v365) = v372 ^ 0xFCFC0000;
  v390 = v375 ^ v364 ^ ((v365 >> 17) - ((2 * (v365 >> 17)) & 0xA912692C) - 729205610) ^ v388 ^ (1222418465 - (v362 ^ 0xF3680B8A | 0x48DCA021) + (v362 ^ 0xF3680B8A | 0xB7235FDE)) ^ (v389 - ((2 * v389) & 0x52161240) - 1458894554);
  v391 = (char *)*(&off_10112C750 + HIDWORD(a23) - 10509) - 693108234;
  v392 = v391[BYTE3(v390) ^ 0xBLL];
  HIDWORD(v365) = ~v392;
  LODWORD(v365) = (v392 ^ 0x20) << 24;
  v393 = (v365 >> 26) - ((2 * (v365 >> 26)) & 0xFFFFFFDF);
  *(_BYTE *)(v445 - 0x7FCFFE66F91BCBDFLL) = (v393 - 17) ^ 0xC8 ^ (((-16 * v393) | 0xA0)
                                                                + ~(2 * ((-16 * v393) | 0xA0))
                                                                - 9);
  v394 = v357 ^ (((v383 << 15) ^ 0x81B88000)
                             - ((2 * ((v383 << 15) ^ 0x81B88000)) & 0x94250000)
                             + 1242740127);
  v395 = (char *)*(&off_10112C750 + HIDWORD(a23) - 11378) - 572687687;
  v396 = v395[BYTE2(v394) ^ 6];
  v397 = (v396 & 0x77777777 ^ 7)
       + ((2 * v396) & 0x1EA ^ 0xFFFFFFF0)
       + (((v396 ^ 0xFFFFFF8D) + 1) ^ 0xFFFFFFDD)
       + ((2 * ((v396 ^ 0xFFFFFF8D) + 1)) & 0xFFFFFFBA)
       + 38;
  *(_BYTE *)(((HIDWORD(v443) - 606688406 - (v443 & 0xB7AD56E4)) ^ 0x41FFBFBB8D6B54C5)
           + ((2 * ((HIDWORD(v443) - 606688406 - (v443 & 0xB7AD56E4)) ^ 0xDBD6AB7A)) & 0xAD7BFF7E)
           + a13
           - 0x41FFBFBB56BDFFBFLL) = v396 ^ ((v397 >> 3) - ((v397 >> 2) & 0x1A) + 45) ^ 0xE3;
  LOBYTE(v396) = (v395[(-1810422492
                                       - (BYTE2(v390) ^ 0x83046EAB | 0x94172524)
                                       + (BYTE2(v390) ^ 0x83046EAB | 0x6BE8DADB)) ^ 0xE8ECB42ELL] >> 3) & 0x11 | 0x6A;
  *(_BYTE *)(v437 - 0x7FDDFFF3FFF577BELL) = v395[(-1810422492
                                                - (BYTE2(v390) ^ 0x83046EAB | 0x94172524)
                                                + (BYTE2(v390) ^ 0x83046EAB | 0x6BE8DADB)) ^ 0xE8ECB42ELL] ^ 0x73 ^ ((((v395[(-1810422492 - (BYTE2(v390) ^ 0x83046EAB | 0x94172524) + (BYTE2(v390) ^ 0x83046EAB | 0x6BE8DADB)) ^ 0xE8ECB42ELL] >> 3) & 0x11 | 0x68) ^ 1) + (v396 ^ 0xF8) - ((v396 ^ 0xF8) & 0xF1));
  v398 = v391[BYTE3(v394) ^ 0xBCLL];
  HIDWORD(v365) = ~v398;
  LODWORD(v365) = (v398 ^ 0x20) << 24;
  v399 = (v365 >> 26) - ((2 * (v365 >> 26)) & 0xFFFFFFA8) + 84;
  *(_BYTE *)(v439 + 0x2AA0702425803039) = v399 ^ 0x6C ^ (((((16 * v399) ^ 0x4B) + 121) & 0x50)
                                                         - ((2 * (((16 * v399) ^ 0x4B) + 121)) & 0x20)
                                                         - 70);
  v400 = v385[v390 ^ 0x5BLL];
  HIDWORD(v365) = v400 ^ 1;
  LODWORD(v365) = ~v400 << 24;
  v401 = (v365 >> 26) - ((2 * (v365 >> 26)) & 0x5E);
  LOBYTE(v397) = v401 + 47;
  HIDWORD(v365) = -48 - v401;
  LODWORD(v365) = ((v401 + 47) ^ 0x20) << 24;
  v402 = (v365 >> 28) - ((2 * (v365 >> 28)) & 0xFFFFFFD4);
  LOBYTE(v397) = (2 * ((v397 ^ 0x2F) * (v397 ^ 0x2F) - ((2 * (v397 ^ 0x2F) * (v397 ^ 0x2F)) & 0x66)) + 102) ^ 0x66;
  HIDWORD(v365) = 21 - v402;
  LODWORD(v365) = ((v402 - 22) ^ 0x70) << 24;
  *(_BYTE *)(((v84 - 1328008750 - (HIDWORD(v438) & 0x61B063A8)) ^ 0x7F3CDD515F33040ALL)
           + a13
           + ((2 * ((v84 - 1328008750 - (HIDWORD(v438) & 0x61B063A8)) ^ 0xB0D831D6)) & 0x1DFD66BB8)
           - 0x7F3CDD51EFEB35DCLL) = ((v365 >> 28) - ((2 * (v365 >> 28)) & 0x44) - 94) ^ (v397
                                                                                        + (~(2 * v397) | 0x1B)
                                                                                        + 115) ^ 0xA0;
  v403 = ((BYTE1(v340) ^ 0xEA) + ((v340 >> 8) & 0x64 ^ 0xA48E2704) - ((BYTE1(v340) ^ 0xEA) & 0x64)) & 0x80083FFF;
  v404 = (v403 ^ 0x8A5B6033) + 1;
  v403 ^= 0x80082752;
  v405 = v403 + (v404 ^ 0x7EFEDF4F) + ((2 * v404) & 0x14B5BE9E) - 2130632527;
  HIDWORD(v365) = v358 ^ 0x1018170E;
  LODWORD(v365) = ~v358;
  v406 = (v365 >> 29) + 1748254829 - ((2 * (v365 >> 29)) & 0xD06880DA);
  v407 = ((v405 - ((2 * v405) & 0x6B281B72) - 1248588359) ^ 0x4A6BF245) + v403;
  v408 = (16
        * ((v406 ^ 0x6834406D) * (v406 ^ 0x6834406D) - ((2 * (v406 ^ 0x6834406D) * (v406 ^ 0x6834406D)) & 0x6B2DAE8))
        + 899077952) ^ 0x3596D740;
  HIDWORD(v365) = v380 ^ 0x10371;
  LODWORD(v365) = v380 ^ 0xFCFC0000;
  v409 = v373 ^ v363 ^ v406 ^ (v408 - ((2 * v408) & 0xA0C47660) - 798868685) ^ ((v365 >> 17)
                                                                              - ((2 * (v365 >> 17)) & 0x795D97CE)
                                                                              + 1018088423) ^ (v407
                                                                                             - ((2 * v407) & 0xA1CDF4E)
                                                                                             - 2062651481);
  HIDWORD(v365) = v359 ^ 0x1018170E;
  LODWORD(v365) = ~v359;
  v410 = (v365 >> 29) - 1727177919 - ((2 * (v365 >> 29)) & 0x321AB682);
  v411 = (16
        * ((v410 ^ 0x990D5B41) * (v410 ^ 0x990D5B41) + (~(2 * (v410 ^ 0x990D5B41) * (v410 ^ 0x990D5B41)) | 0x48EDD7F))
        - 611773424) ^ 0xDB891400;
  HIDWORD(v365) = v381 ^ 0x10371;
  LODWORD(v365) = v381 ^ 0xFCFC0000;
  v412 = v457 ^ v410 ^ ((v365 >> 17) - ((2 * (v365 >> 17)) & 0x2C5FAF1E) - 1775249521) ^ (v411
                                                                                        - ((2 * v411) & 0xC09C26E0)
                                                                                        - 531754126);
  v413 = v391[HIBYTE(v409) ^ 0x49];
  HIDWORD(v365) = ~v413;
  LODWORD(v365) = (v413 ^ 0x20) << 24;
  v414 = v374 ^ v412 ^ (((2 * (v351 ^ 0xB01C44A8)) & 0x602801F8) - (v351 ^ 0xB01C44A8) - 2016783357);
  v415 = (v365 >> 26) - ((2 * (v365 >> 26)) & 0x44) + 34;
  *(_BYTE *)(v448 + 0x121C1C04811A27) = v415 ^ (((2 * (((16 * v415) ^ 0x20) + 110)) & 0x20 ^ 0xBF)
                                                + ((((16 * v415) ^ 0x20) + 110 - ((2 * ((16 * v415) ^ 0x20)) & 0x40)) & 0x50 ^ 0xE0)
                                                - 70) ^ 0x80;
  v416 = ((v414 ^ 0xDE) - ((2 * (v414 ^ 0xDE)) & 0xFA) - 1857017219) ^ 0x91132A7F;
  v417 = v385[(v416 - ((2 * v416) & 0x800154) - 1445164886) ^ 0xA99F8859];
  HIDWORD(v365) = v417 ^ 1;
  LODWORD(v365) = ~v417 << 24;
  v418 = (v365 >> 26) - ((2 * (v365 >> 26)) & 0x62) - 79;
  LOBYTE(v413) = ((((2 * v418) ^ 0x62) - ((4 * v418) & 0x20) - 111) ^ 0x91) * (v418 ^ 0xB1);
  *(_BYTE *)(v440 + 0x20421044A2500682) = v418 ^ (v413 - ((2 * v413) & 0x36) - 101) ^ 0xC1;
  v419 = (BYTE1(v409) ^ 8) + ((v409 >> 8) & 0x7F ^ 0x222A7E77) - ((BYTE1(v409) ^ 8) & 0x7F);
  v420 = (char *)*(&off_10112C750 + HIDWORD(a23) - 12851) - 1868594598;
  v421 = ((((v409 >> 8) ^ 0x1D) - 101) ^ 0x57)
       + ((2 * (((v409 >> 8) ^ 0x1D) - 101)) & 0xFFFFFFAE)
       + v420[((v419 & 0x202A436A ^ 0x4C48068)
                              + (v419 ^ 0xE23A4B17)
                              - ((v419 ^ 0xE23A4B17) & 0x8000136A)) ^ 0x64FEE6B2];
  *(_BYTE *)(v442 + 0x11082A0400023C22) = (v421 - ((2 * v421 + 114) & 0x52) - 94) ^ 0x4B;
  v422 = ((BYTE1(v394) ^ 0xA2)
        + (((v394 >> 8) ^ 0xFE601A) & 0x2C ^ 0x1E9B0204)
        - ((BYTE1(v394) ^ 0xA2) & 0x2C)) ^ 0x3DBF04E8;
  v423 = ((((v394 >> 8) ^ 0xFF019FCB) - 101) ^ 0xFFFFFFEF)
       + ((2 * (((v394 >> 8) ^ 0xFF019FCB) - 101)) & 0xFFFFFFDF)
       + v420[(118431936 - (v422 | 0x70F20C0) + (v422 | 0xF8F0DF3F)) ^ 0xDBD4D937];
  *(_BYTE *)(v447 - 0x7DC3FE5DFF77F3FELL) = (v423 - ((2 * v423 + 2) & 0x1C) + 111) ^ 0x20;
  v424 = (((2 * (BYTE2(v414) ^ 0xB1)) & 0x33333333) - (BYTE2(v414) ^ 0xB1) + 1839486054) ^ 0x8C8044F4;
  v425 = v395[(((2 * v424) | 0x539D67F6) - v424 - 701412347) ^ 0xC8EAA393];
  v426 = (-2 - ((~((v425 >> 3) & 0x11) | 0xFFFFFFD6) + ((v425 >> 3) & 0x10 | 0x29))) ^ 0x4F;
  *(_BYTE *)(v446 + 0x64600C080513809) = v425 ^ 0x19 ^ (((2 * v426) & 0xD6) - v426 - 108);
  v427 = (((2 * (BYTE2(v409) ^ 0x42)) & 0x64) - (BYTE2(v409) ^ 0x42) + 810350797) ^ 0x305CDAC8;
  v428 = v395[(((2 * v427) | 0x236A760Au) - v427 + 1850393851) ^ 0x91A519ADLL];
  *(_BYTE *)(v449 + 0x22012020528011) = v428 ^ (((v428 >> 3) | 0xEE)
                                                + ((v428 >> 3) & 0xF1)
                                                + ((v428 >> 3) & 0xF1 ^ 0x71)
                                                + 3) ^ 0x1C;
  v429 = v385[v409 ^ 0x23];
  HIDWORD(v365) = v429 ^ 1;
  LODWORD(v365) = ~v429 << 24;
  v430 = (v365 >> 26) - ((2 * (v365 >> 26)) & 0x66) - 77;
  LOBYTE(v426) = (2 * ((v430 ^ 0xB3) * (v430 ^ 0xB3) + (~(2 * (v430 ^ 0xB3) * (v430 ^ 0xB3)) | 0xAD)) + 84) ^ 0x52;
  *(_BYTE *)(((v450 + 758585478 - (HIDWORD(a38) & 0x5A6E3110)) ^ 0xDF7FEF7FE0A9B17DLL)
           + a13
           + ((2 * ((v450 + 758585478 - (HIDWORD(a38) & 0x5A6E3110)) ^ 0x2D37188A)) & 0x19B3D53EELL)
           + 0x2080108032615609) = v430 ^ (v426 - ((2 * v426) & 0x68) + 52) ^ 0x18;
  v431 = v391[BYTE3(v414) ^ 0xELL];
  HIDWORD(v365) = ~v431;
  LODWORD(v365) = (v431 ^ 0x20) << 24;
  v432 = (v365 >> 26) - ((2 * (v365 >> 26)) & 0x54) - 86;
  LOBYTE(v357) = ((16 * v432) ^ 0xA0) + (~(2 * ((16 * v432) ^ 0xA0)) | 0xBF) + 110;
  *(_BYTE *)(((v453 + 1142282168 - (v452 & 0x882BAF70)) ^ 0xDDB6E75A99CA2C03)
           + a13
           + ((2 * ((v453 + 1142282168 - (v452 & 0x882BAF70)) ^ 0x4415D7B8)) & 0x1BBBFF776)
           + 0x224918A522200445) = v432 ^ 0x7D ^ ((v357 & 0x50 ^ 0xE0)
                                                  - ((2 * (_BYTE)v357) & 0x20)
                                                  + 30);
  v433 = ((((v390 >> 8) ^ 0x4B) - 101) ^ 0x7B)
       + ((2 * (((v390 >> 8) ^ 0x4B) - 101)) & 0xFFFFFFF7)
       + v420[(((2 * (BYTE1(v390) ^ 0xD3824462)) | 0xDB2B6686) - (BYTE1(v390) ^ 0xD3824462) - 1838527299) ^ 0xBE17F7CFLL];
  *(_BYTE *)(((v454 + 1210416146 + ((2 * v454) & 0x904AF820 ^ 0xFFFFFFFB) + 1) ^ 0xF4DDFCFE03FC9BF8)
           + ((2 * ((v454 + 1210416146 + ((2 * v454) & 0x904AF820 ^ 0xFFFFFFFB) + 1) ^ 0x48257C12)) & 0x97B3CFD4)
           + a13
           + 0xB220301B4261816) = (v433 - ((2 * v433 + 42) & 0x6C) - 117) ^ 0x5A;
  LOWORD(v426) = ((2 * (BYTE1(v414) ^ 0x96)) & 0x114) - (BYTE1(v414) ^ 0x96) + 15733;
  LOBYTE(v420) = v420[((v426 & 0x555 ^ 0x4088E801) + (v426 & 0x2AA ^ 0x1000021) - 1) ^ 0x4188ED38];
  v434 = ((v414 >> 8) ^ 0x5F) - 101;
  *(_BYTE *)(((v456 - 207890142 - ((2 * v456) & 0xE737B244)) ^ 0xD9F5F7FF6875AE8DLL)
           + a13
           + ((2 * ((v456 - 207890142 - ((2 * v456) & 0xE737B244)) ^ 0xF39BD922)) & 0x137DCEF5ELL)
           + 0x260A080064118851) = ((v434 ^ 0x67)
                                    + ((2 * v434) & 0xCF)
                                    + (_BYTE)v420
                                    - ((2 * ((v434 ^ 0x67) + ((2 * v434) & 0xCF) + (_BYTE)v420) - 46) & 0xB6)
                                    + 68) ^ 0x1D;
  v435 = (_DWORD)v455 + 1125135035 - 2 * (((_DWORD)v455 + 16) & 0x431032AF ^ v451);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(*(_QWORD *)(a14 + 8 * ((32530 * ((v435 ^ 0x431032AB) < HIDWORD(a15))) ^ HIDWORD(a23))) - 8))(v435, v390, a13, v394, 17, v414, v385, 80, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           v444 ^ 0xE67E,
           a23,
           v437,
           v438,
           v439,
           v440,
           v441,
           v442,
           v443,
           v444,
           v445,
           v446,
           v447,
           a35,
           v448,
           v449,
           a38);
}

uint64_t sub_10015062C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8 * (int)a22) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

void sub_100150690(uint64_t a1)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v2 = (*(_QWORD *)(a1 + 24) ^ 0x5F3FDD2D5BCFFFB5)
     - 0x5F3FDD2D565A0E04
     + ((2 * *(_QWORD *)(a1 + 24)) & 0xBE7FBA5AB79FFF6ALL);
  v3 = (*(_QWORD *)(a1 + 8) ^ 0x7EE5FF7EAFDF7277)
     - 0x7EE5FF7EAA6980C6
     + ((2 * *(_QWORD *)(a1 + 8)) & 0xFDCBFEFD5FBEE4EELL);
  v4 = v2 < 0x575F1B1;
  v5 = v2 > v3;
  if (v4 != v3 < 0x575F1B1)
    v5 = v4;
  v1 = *(_DWORD *)(a1 + 16) - 263575687 * ((a1 & 0xB4E5E0FD | ~(a1 | 0xB4E5E0FD)) ^ 0xD33ADF44);
  __asm { BR              X13 }
}

uint64_t sub_100150890@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2313
                                * (((a2 + 60) ^ ((v2 ^ 0x91148E7F)
                                                                + 724350868
                                                                + (a1 & 0xFBEBF3FE ^ 0xD9C2E300) == ((a2 - 2031942522) & 0x791CAEDF ^ 0x2922994A))) & 1)) ^ (a2 - 9156))))();
}

uint64_t sub_10015091C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;

  v11 = v6 < 0x2922B193;
  *(_BYTE *)(v10 + (v8 - 1455913430)) = *(_BYTE *)(v1 + (v8 - 1455913430)) ^ *(_BYTE *)(v2 + ((v8 - 1455913430) & 0xFLL)) ^ *(_BYTE *)(v4 + ((v8 - 1455913430) & 0xFLL)) ^ *(_BYTE *)(((v8 - 1455913430) & 0xFLL) + v3 + 2) ^ (85 * ((v8 + 42) & 0xF)) ^ 8;
  if (v11 == v8 - 765773890 < ((a1 - 10454) ^ v5))
    v11 = v8 - 765773890 < v6;
  return (*(uint64_t (**)(BOOL))(v9 + 8 * ((v11 * v7) ^ a1)))(v8 - 765773890 < v6);
}

uint64_t sub_1001509B8@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((a1 & 0xF8EFFAFA ^ 0xD8C2EA00) + (v2 ^ 0x90968AFD) + a2 - 19610 + 1071609315 == 1012374585)
                                * (((a2 - 1339597196) & 0x4FD86CFD) - 16421)) ^ (a2 - 9220))))();
}

uint64_t sub_100150A40(int a1, uint64_t a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((588 * (a1 + v3 + 59245187 >= a3 - 16605)) ^ a3)) - 4))();
}

uint64_t sub_100150A88(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((27
                                          * (((107 * (a3 ^ 0xFC)) ^ (a7 + ((a3 + 24154) ^ 0x3889D4D) < 0xFFFFFFF0)) & 1)) ^ a3))
                            - 4))();
}

uint64_t sub_100150ADC(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v20;
  unint64_t v21;
  int v23;

  v13 = (a1 + v10 + a6);
  v14 = v13 + v12;
  v15 = (((a4 + 1218142396) & 0xB7647577) - 30052) & v13;
  v16 = v7 - v14;
  v17 = (v15 | v9) - v14;
  v18 = ((533 * (a4 ^ 0x9F01u)) ^ 0x8114) - v14;
  v20 = (unint64_t)(v6 - v12) > 0xF && (unint64_t)(v16 + v15) > 0xF && v17 > 0xF;
  v21 = v18 + (v15 | v8);
  v23 = v20 && v21 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((124 * v23) ^ a4)) - 12))();
}

uint64_t sub_100150B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = (a7 - 27884) | 0x2380u;
  v11 = *(_QWORD *)(v8 + 8 * (a7 ^ ((v7 > 0xF) | (32 * (v7 > 0xF)))));
  *(_QWORD *)(v9 - 240) = v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(v11 - v10 + 14238))(a1, a2, 59215119, 0);
}

uint64_t sub_100150BBC(__n128 a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;

  v9.n128_u64[0] = (a3 + 4) & 0xF;
  v9.n128_u64[1] = (a3 + 3) & 0xF;
  v10.n128_u64[0] = (a3 + 2) & 0xF;
  v10.n128_u64[1] = (a3 + 1) & 0xF;
  v11.n128_u64[0] = a3 & 0xF;
  v11.n128_u64[1] = (a3 - 1) & 0xF;
  v12.n128_u64[0] = (a3 + 14) & 0xF;
  v12.n128_u64[1] = (a3 + 13) & 0xF;
  v13.n128_u64[0] = (a3 + 12) & 0xF;
  v13.n128_u64[1] = (a3 + 11) & 0xF;
  v14.n128_u64[0] = (a3 + 10) & 0xF;
  v14.n128_u64[1] = (a3 + 9) & 0xF;
  v15.n128_u64[0] = (a3 + 8) & 0xF;
  v15.n128_u64[1] = (a3 + 7) & 0xF;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v8 + 8 * (a8 - 16413))
                                                                                                 - 8))(a1, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_100150CD0@<X0>(uint64_t a1@<X5>, uint64_t a2@<X7>, int a3@<W8>, __n128 a4@<Q1>, __n128 a5@<Q4>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int8x16_t v19;
  int8x16_t v20;
  int8x16_t v21;
  uint64_t v22;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;

  v22 = v16 & v14;
  v24.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a4 - 1), v19).u64[0];
  v24.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v19).u64[0];
  v25 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a1 + v14), *(int8x16_t *)(v11 + v22 - 15)), veorq_s8(*(int8x16_t *)(v13 + v22 - 15), *(int8x16_t *)(v22 + v12 - 13))));
  v26 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v25, v25, 8uLL), v21), vmulq_s8(v24, v20)));
  *(int8x16_t *)(a2 + v14) = vextq_s8(v26, v26, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * (((v15 == 0) * v17) ^ a3)) - 8))();
}

uint64_t sub_100150D58(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a7 ^ ((v7 == a4) | (2 * (v7 == a4)))))
                            - (a7 - 19380)
                            - (a7 + 1483)
                            + 41773))();
}

uint64_t sub_100150D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = (a8 + 1109638483) & 0xBDDBFFFE;
  *(_QWORD *)(v10 - 240) = v11;
  return (*(uint64_t (**)(void))(v9
                              + 8 * (int)((((((a8 - 1289976409) & 0x4CE37573) - 15858) ^ v11) * ((v8 & 8) == 0)) ^ a8)))();
}

uint64_t sub_100150DE8(int a1, double a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;

  LODWORD(STACK[0x48C]) = v10;
  v15 = v10 & 0xFFFFFFF8;
  *(_QWORD *)(v13 - 248) = v7 - 7;
  v16 = *(_QWORD *)(v13 - 240);
  v17 = *(_QWORD *)(v12 + 8 * (int)v16);
  *(_QWORD *)(v13 - 256) = v14 - 7;
  LODWORD(STACK[0x488]) = v15;
  a3.n128_u16[0] = 21845;
  a3.n128_u8[2] = 85;
  a3.n128_u8[3] = 85;
  a3.n128_u8[4] = 85;
  a3.n128_u8[5] = 85;
  a3.n128_u8[6] = 85;
  a3.n128_u8[7] = 85;
  STACK[0x480] = 37 * (v16 ^ 0x366B);
  a4.n128_u16[0] = 2056;
  a4.n128_u8[2] = 8;
  a4.n128_u8[3] = 8;
  a4.n128_u8[4] = 8;
  a4.n128_u8[5] = 8;
  a4.n128_u8[6] = 8;
  a4.n128_u8[7] = 8;
  return ((uint64_t (*)(_QWORD, __n128, __n128, __n128))(v17 - 12))((v9 + v11 + a1 + 1071589705 - a7 - v8 + 1), (__n128)xmmword_100DF7490, a3, a4);
}

uint64_t sub_100150E90(char a1, int8x16_t a2, int8x8_t a3, int8x8_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  int v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int8x16x4_t v22;

  v19 = (a6 + a8);
  v22.val[0].i64[0] = v19 & a7;
  v22.val[0].i64[1] = (v17 + (_BYTE)a8) & 0xF;
  v22.val[1].i64[0] = (v16 + (_BYTE)a8) & 0xF;
  v20 = STACK[0x3A0];
  v22.val[1].i64[1] = (v15 + (_BYTE)a8) & 0xF;
  v22.val[2].i64[0] = (v14 + (_BYTE)a8) & 0xF;
  v22.val[2].i64[1] = (a1 + (_BYTE)a8) & 0xF;
  v22.val[3].i64[0] = (v11 + a8) & 0xFLL;
  v22.val[3].i64[1] = (v12 + (_BYTE)a8) & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v18 - 256) + v19) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(*(_QWORD *)(v18 - 248) + v19), *(int8x8_t *)(v8 + (v19 & a7) - 7)), veor_s8(*(int8x8_t *)(v10 + (v19 & a7) - 7), *(int8x8_t *)((v19 & a7) + v9 - 5)))), a4), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v22, a2), a3)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * (int)((4013 * (v13 == a8)) ^ *(_QWORD *)(v18 - 240))) - 12))();
}

uint64_t sub_100150F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                                         + 8
                                                                                         * (int)(STACK[0x480] ^ (13419 * (LODWORD(STACK[0x48C]) == LODWORD(STACK[0x488])))))
                                                                             - ((STACK[0x480] + 745761274) & 0xD38C7DF9)
                                                                             + 10453))(a1, a2, a3, a4, STACK[0x480] + 13454);
}

uint64_t sub_100150FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8 * (a5 - 8271)))(85, 1163);
}

uint64_t sub_100151000@<X0>(char a1@<W0>, int a2@<W1>, int a3@<W4>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)(v14 + (a4 + v12)) = *(_BYTE *)(v4 + (a4 + v12)) ^ *(_BYTE *)(v5 + ((a4 + v12) & 0xFLL)) ^ *(_BYTE *)(v7 + (((_BYTE)a4 + (_BYTE)v12) & 0xF)) ^ *(_BYTE *)((((_BYTE)a4 + (_BYTE)v12) & 0xF) + v6 + 2) ^ (((a4 + v12) & 0xF) * a1) ^ 8;
  return (*(uint64_t (**)(void))(v13 + 8 * ((((a3 ^ v9) + a4 + v11 != v8) * a2) ^ v10)))();
}

uint64_t sub_10015105C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *(_QWORD *)(v6 + 32);
  *(int8x16_t *)(v8 - 208) = veorq_s8(*(int8x16_t *)*(_QWORD *)v6, (int8x16_t)xmmword_100DF7640);
  *(int8x16_t *)(v8 - 224) = veorq_s8(*(int8x16_t *)(v10 - 0x2880FCF304D5E003), (int8x16_t)xmmword_100DF7650);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((((a6 - 217) | 0xE0) ^ 0x28D9) * (v8 - 208 != v9)) ^ a6)) - 4))();
}

uint64_t sub_1001510D4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  *(_BYTE *)(v2 - 192) = *v3;
  *(_BYTE *)(v2 - 191) = v3[1];
  *(_BYTE *)(v2 - 190) = v3[2];
  *(_BYTE *)(v2 - 189) = v3[3];
  *(_BYTE *)(v2 - 188) = v3[4];
  *(_BYTE *)(v2 - 187) = v3[5];
  *(_BYTE *)(v2 - 186) = v3[6];
  *(_BYTE *)(v2 - 185) = v3[7];
  *(_BYTE *)(v2 - 184) = v3[8];
  *(_BYTE *)(v2 - 183) = v3[9];
  *(_BYTE *)(v2 - 182) = v3[10];
  *(_BYTE *)(v2 - 181) = v3[11];
  *(_BYTE *)(v2 - 180) = v3[12];
  *(_BYTE *)(v2 - 179) = v3[13];
  *(_BYTE *)(v2 - 178) = v3[14];
  *(_BYTE *)(v2 - 177) = v3[15];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - ((v0 - 6110) | 0x42A0u) + 21406))();
}

uint64_t sub_10015117C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  BOOL v5;
  char v6;
  uint64_t (*v7)(void);

  v4 = a1 ^ 0xA8D;
  if (v3)
    v5 = v1 == 0;
  else
    v5 = 1;
  v6 = v5;
  LODWORD(STACK[0x39C]) = v4;
  v7 = (uint64_t (*)(void))(*(_QWORD *)(v2
                                     + 8
                                     * ((14210 * ((((a1 - 46) ^ v4) ^ v6) & 1)) ^ a1))
                         - 8);
  LODWORD(STACK[0x398]) = -42900;
  return v7();
}

uint64_t sub_1001511C4()
{
  int v0;
  uint64_t v1;
  int v2;
  unsigned int v3;
  _BOOL4 v5;
  uint64_t (*v6)(void);

  v2 = ((2 * (STACK[0x288] - 959370983)) & 0xDF9719EC) + ((STACK[0x288] - 959370983) ^ 0x6FCB8CF6);
  v3 = (v0 + 1919683579) & 0x8D93F9BF;
  LODWORD(STACK[0x39C]) = v3;
  v5 = v2 == ((v0 + 1793467274) & 0x9519AFD7) + 1875600928 || ((v3 - 22816) & (v2 + 10)) != 2 * ((v2 + 10) & 3);
  v6 = (uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((214 * v5) ^ v0)) - 8);
  LODWORD(STACK[0x398]) = -42899;
  return v6();
}

uint64_t sub_100151274()
{
  uint64_t v0;
  int v1;

  v1 = STACK[0x288] - 2 * (STACK[0x278] & 2 ^ (STACK[0x288] + 1188112665) & 0x720158EF) - 1194163706;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (LODWORD(STACK[0x39C]) ^ (27
                                                        * (((2 * v1) & 0xA3BDFB24 ^ 0xA000B100)
                                                         + (v1 ^ 0x23DFA57F)
                                                         + 1065319422 == 291404176)))))();
}

uint64_t sub_10015134C@<X0>(int a1@<W2>, uint64_t a2@<X3>, int a3@<W8>)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a3 ^ (62173 * ((a1 + v3 + 773915246) > 7))))
                            - a2
                            - ((a3 - 31786) ^ 0xFFFFFFFF00007569)))();
}

uint64_t sub_1001513EC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;

  v7 = (a5 - (a1 + a6 - 16) - (((_DWORD)a5 + 21520) ^ 0x2173u) + 30066) ^ (~(a1 + a6 - 16) + a5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)((61063
                                               * (((-v7 | (unint64_t)v7) >> (((a5 + 16) | 0x18) ^ 0x27)) & 1)) ^ (a5 + 31786)))
                            - 12))();
}

uint64_t sub_100151464(int a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL4 v22;
  int v24;
  int v26;

  v10 = (a3 + v6 + a1);
  v11 = v10 + 11779 * (v7 ^ 0x7C1Bu) + v9 - 35336;
  v12 = ((_BYTE)a3 + (_BYTE)v6 + (_BYTE)a1) & 0xF;
  v13 = v4 + v12 - v10;
  v14 = v12 + 107 * (v7 ^ 0x7D01u) - 30066;
  v15 = v4 + v14;
  v16 = v5 + v12 - v10;
  v17 = v5 + v14;
  v18 = v12 + v3;
  v19 = v18 - v10 + 4;
  v20 = v18 + 5;
  v22 = v15 > v9 && v13 < v11;
  v24 = v17 > v9 && v16 < v11 || v22;
  if (v20 <= v9 || v19 >= v11)
    v26 = v24;
  else
    v26 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (v7 | (2 * v26))) - 12))();
}

uint64_t sub_100151508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)(((v5 < ((a5 - 800295475) & 0x2FB37FEF ^ 0x7FD6u))
                                               * (((a5 + 1341043694) & 0xB010FEBD) - 15508)) ^ a5))
                            - 12))();
}

uint64_t sub_100151568@<X0>(char a1@<W1>, unsigned int a2@<W8>, __n128 a3@<Q0>)
{
  __n128 v3;
  __n128 v4;
  __n128 v5;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  __n128 v9;

  v3.n128_u64[0] = (a1 + 13) & 0xF;
  v3.n128_u64[1] = (a1 + 12) & 0xF;
  v4.n128_u64[0] = (a1 + 11) & 0xF;
  v4.n128_u64[1] = (a1 + 10) & 0xF;
  v5.n128_u64[0] = (a1 + 9) & 0xF;
  v5.n128_u64[1] = (a1 + 8) & 0xF;
  v6.n128_u64[0] = (a1 + 7) & 0xF;
  v6.n128_u64[1] = (a1 + 6) & 0xF;
  v7.n128_u64[0] = (a1 + 5) & 0xF;
  v7.n128_u64[1] = (a1 + 4) & 0xF;
  v8.n128_u64[0] = (a1 + 3) & 0xF;
  v8.n128_u64[1] = (a1 + 2) & 0xF;
  v9.n128_u64[0] = (a1 + 1) & 0xF;
  v9.n128_u64[1] = a1 & 0xF;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(STACK[0x3A0] + 8 * a2)
                                                                                                 - 12))(a3, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_100151660@<X0>(uint64_t a1@<X3>, unsigned int a2@<W6>, int a3@<W7>, unsigned int a4@<W8>, __n128 a5@<Q1>, __n128 a6@<Q4>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;
  uint64_t v20;
  int8x16_t v22;
  int8x16_t v23;
  int8x16_t v24;

  v20 = a2 & 0xF;
  v22.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a5 - 1), v17).u64[0];
  v22.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a6.n128_u64, v17).u64[0];
  v23 = vrev64q_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a1 + a2), *(int8x16_t *)(v13 + v20 - 15)), *(int8x16_t *)(v14 + v20 - 15)), *(int8x16_t *)(v12 + v20 + v15 - 15)));
  v24 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v23, v23, 8uLL), v19), vmulq_s8(v22, v18)));
  *(int8x16_t *)(a1 + a2) = vextq_s8(v24, v24, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * ((14 * (a3 == 0)) ^ a4)) - 12))();
}

uint64_t sub_1001516F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (int)(((((281 * (a5 ^ 0x2063)) ^ 0xFFFFC3F0) + a5 + 13935) * (v5 != v6)) ^ a5))
                            - 8))();
}

uint64_t sub_100151734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  char v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7 + 8 * ((((a6 - 6594) ^ 0x3C5D) * ((v6 & 8) == 0)) ^ a6)))();
}

uint64_t sub_100151768(int a1, double a2, __n128 a3, __n128 a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD, uint64_t, _QWORD, __n128, __n128, __n128);

  *(_DWORD *)(v15 - 248) = v13;
  *(_DWORD *)(v15 - 256) = v10;
  v17 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, __n128, __n128, __n128))(*(_QWORD *)(v14 + 8 * a10)
                                                                                - (a10 ^ 0xE5u)
                                                                                + 15432);
  LODWORD(STACK[0x48C]) = v10 & 0xFFFFFFF8;
  *(_DWORD *)(v15 - 240) = -(v10 & 0xFFFFFFF8);
  a3.n128_u16[0] = 8995;
  a3.n128_u8[2] = 35;
  a3.n128_u8[3] = 35;
  a3.n128_u8[4] = 35;
  a3.n128_u8[5] = 35;
  a3.n128_u8[6] = 35;
  a3.n128_u8[7] = 35;
  a4.n128_u16[0] = 2056;
  a4.n128_u8[2] = 8;
  a4.n128_u8[3] = 8;
  a4.n128_u8[4] = 8;
  a4.n128_u8[5] = 8;
  a4.n128_u8[6] = 8;
  a4.n128_u8[7] = 8;
  return v17((a6 + v12 + a1), v16 - 7, (v11 + a6 + v12 + 9), (__n128)xmmword_100DF7490, a3, a4);
}

uint64_t sub_1001517FC(int a1, uint64_t a2, int a3, int8x16_t a4, int8x8_t a5, int8x8_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _BOOL4 v24;
  int8x16x4_t v26;

  v22 = (a1 + v16 + 8);
  v26.val[0].i64[0] = ((_BYTE)a1 + (_BYTE)v16 + 8) & 0xF;
  v26.val[0].i64[1] = (v20 + (_BYTE)v16 + 8) & 0xF;
  v26.val[1].i64[0] = (v19 + (_BYTE)v16 + v14 + 8) & 0xF;
  v26.val[1].i64[1] = (v18 + (_BYTE)v16 + 8) & 0xF;
  v26.val[2].i64[0] = (v17 + (_BYTE)v16 + 8) & 0xF;
  v26.val[2].i64[1] = (a11 + (_BYTE)v16 + 8) & 0xF;
  v26.val[3].i64[0] = (a3 + v16 + 8) & 0xFLL;
  v23 = STACK[0x3A0];
  v26.val[3].i64[1] = (v15 + (_BYTE)v16 + 8) & 0xF;
  v24 = *(_DWORD *)(v21 - 240) != v16;
  *(int8x8_t *)(a2 + v22) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a2 + v22), *(int8x8_t *)(v12 + (v22 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v13 + (v22 & 0xF) - 7), *(int8x8_t *)((v22 & 0xF) + v11 - 3)))), a6), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v26, a4), a5)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((229 * v24) ^ a10)) - 8))();
}

uint64_t sub_1001518FC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((107 * (((v0 + 21803) | 0x40) ^ 0x746A) - 29994)
                                          * (*(_DWORD *)(v2 - 256) != LODWORD(STACK[0x48C]))) ^ v0))
                            - 8))();
}

uint64_t sub_100151948(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a4 + 2220)) - 8))();
}

uint64_t sub_100151970@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = (a1 + v6);
  *(_BYTE *)(v10 + v11) ^= *(_BYTE *)(v3 + (v11 & 0xF)) ^ *(_BYTE *)(v4 + (v11 & 0xF)) ^ *(_BYTE *)((v11 & 0xF) + v2 + 4) ^ ((v11 & 0xF) * v7) ^ 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((a1 - 1 != v1) * v8) ^ v5)) - 8))();
}

void sub_1001519C8()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 521951508)
    v1 = 2134650450;
  else
    v1 = 2134608426;
  *(_DWORD *)(v2 + 40) = v1;
}

#error "10015C5C8: call analysis failed (funcsize=8954)"

uint64_t sub_10015C5CC()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  unint64_t v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  char *v45;
  char *v46;
  char *v47;
  int v48;
  int v49;
  char *v50;
  int v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  unsigned int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  char *v90;
  int v91;
  char *v92;
  int v93;
  unsigned int v94;
  int v95;
  char *v96;
  int v97;
  int v98;
  char *v99;
  int v100;
  int v101;
  char *v102;
  char *v103;
  char *v104;
  unsigned int v105;
  unsigned int v106;
  char *v107;
  uint64_t v108;

  *(_DWORD *)(v2 - 240) = v0;
  LODWORD(STACK[0x398]) = 0;
  v4 = 6 * (v0 ^ 0x55DBu);
  LODWORD(STACK[0x39C]) = v0 + 1421;
  v5 = ((v1 & 0xFFFFFFFC ^ 0x9C12E5FF) + 1101713136 - (((v0 + 1421) ^ 0x8355C4CF) & (2 * (v1 & 0xFFFFFFFC ^ 0x9C12E5FF)))) ^ 0x41AACEF0;
  STACK[0x3B0] = v4;
  v6 = (v5 ^ (v4 - 0x100B23081A422A17)) + v3 + ((2 * v5) & 0x1CB7BF97ELL);
  STACK[0x470] = v6;
  v7 = *(unsigned __int8 *)(v6 + 0x100B23081A420341);
  LODWORD(v4) = v1 & 0xFFFFFFF8 ^ 0x9C12E5FF;
  LODWORD(STACK[0x424]) = v4;
  LODWORD(STACK[0x428]) = 2 * v4;
  v8 = *(unsigned __int8 *)((((_DWORD)v4 - 888808785 - ((2 * (_DWORD)v4) & 0x960BB560)) ^ 0xBD9F373F74DF374ELL)
                          + v3
                          + ((2 * (((_DWORD)v4 - 888808785 - ((2 * (_DWORD)v4) & 0x960BB560)) ^ 0xCB05DAB1)) & 0x17FB5DBFELL)
                          + 0x4260C8C040251201);
  v9 = STACK[0x388];
  v10 = *(unsigned __int8 *)(STACK[0x388] + (v8 ^ 0xAD));
  v11 = (((v1 & 0xFFFFFFF3 ^ 0x9C12E5FF) + 280103379 - ((2 * (v1 & 0xFFFFFFF3 ^ 0x9C12E5FF)) & 0x216413A6)) ^ 0x4F76E6B5E70AA664)
      + v3
      + ((2
        * (((v1 & 0xFFFFFFF3 ^ 0x9C12E5FF) + 280103379 - ((2 * (v1 & 0xFFFFFFF3 ^ 0x9C12E5FF)) & 0x216413A6)) ^ 0x10B209D3)) & 0x1EF715F6ELL);
  STACK[0x480] = v11;
  LODWORD(v4) = (v7 ^ 0xFFFFFF95) + (((v7 ^ 0x1E) + 1) ^ 0x5D) + ((2 * ((v7 ^ 0x1E) + 1)) & 0xBBBBBBBB) - 93;
  LODWORD(v8) = (v8 ^ 0x3D) + (((v8 ^ 0xFFFFFFB6) + 1) ^ 0x7D) + ((2 * ((v8 ^ 0xFFFFFFB6) + 1)) & 0xFFFFFFFB) - 125;
  v12 = STACK[0x378];
  LODWORD(v6) = *(_DWORD *)(STACK[0x378] + 4 * (*(unsigned __int8 *)(v11 - 0x4F76E6B5F7B8AFB7) ^ 0x3ALL));
  v13 = v6 - ((2 * v6 + 546301024) & 0x8CADCDDA) - 694232803;
  LODWORD(STACK[0x3E0]) = v13;
  v14 = (((v1 & 0xFFFFFFF5 ^ 0x9C12E5FF)
        - 436862481
        + ((2 * (v1 & 0xFFFFFFF5 ^ 0x9C12E5FF)) & 0xCBEC03CA ^ 0xFFFFFFEB)
        + 1) ^ 0xFBD9FF5F5A0D7430)
      + v3
      + ((2
        * (((v1 & 0xFFFFFFF5 ^ 0x9C12E5FF)
          - 436862481
          + ((2 * (v1 & 0xFFFFFFF5 ^ 0x9C12E5FF)) & 0xCBEC03CA ^ 0xFFFFFFEB)
          + 1) ^ 0xE5F601EF)) & 0x17FF6EBBELL);
  STACK[0x438] = v14;
  v15 = *(unsigned __int8 *)(v14 + 0x42600A040048A21) ^ 0xFDLL;
  LODWORD(STACK[0x3DC]) = ((16 * v13) ^ 0x656E6ED0) - ((2 * ((16 * v13) ^ 0x656E6ED0)) & 0xCC55A840);
  LODWORD(STACK[0x3D0]) = ((8 * v13) ^ 0x32B73768)
                        + 701179940
                        - 2 * (((8 * v13) ^ 0x32B73768) & 0x29CB2830 ^ (8 * v13) & 0x10);
  v16 = STACK[0x370];
  LODWORD(v15) = *(_DWORD *)(STACK[0x370] + 4 * v15);
  v17 = v1 & 0xFFFFFFFA ^ 0x9C12E5FF;
  LODWORD(STACK[0x420]) = v17;
  LODWORD(STACK[0x41C]) = 2 * v17;
  v18 = *(unsigned __int8 *)(((v17 + 1473401577 + ((2 * v17) & 0xAFA4A5D0 ^ 0xFFFFFFFD) + 1) ^ 0x3FFED3AFF8A5F510)
                           + v3
                           + ((2 * ((v17 + 1473401577 + ((2 * v17) & 0xAFA4A5D0 ^ 0xFFFFFFFD) + 1) ^ 0x57D252E9)) & 0x15EEF4FF2)
                           - 0x3FFED3AFAF77A7F9) ^ 0x86;
  LODWORD(v11) = (((v15 >> 3) & 0x9564C9C ^ 0x66145099)
                - ((2 * ((v15 >> 3) & 0x9564C9C ^ 0x66145099)) & 0xDA842818)
                - 313912274) ^ 0x8B4A04AF;
  LODWORD(STACK[0x3F8]) = (v11 | ~(_DWORD)v15 & 0x1000) + 404817826 - ((2 * v11) & 0x30420F40);
  v19 = STACK[0x380];
  LODWORD(v18) = *(_DWORD *)(STACK[0x380] + 4 * v18);
  HIDWORD(v20) = v18 ^ 0x3CCF14;
  LODWORD(v20) = v18 ^ 0xBEC00000;
  LODWORD(STACK[0x3F0]) = (v15 & 0x4A792013 ^ 0xA210003) + (v15 & 0xB586CFEC ^ 0x20868801);
  LODWORD(v15) = (v20 >> 22) - ((2 * (v20 >> 22)) & 0xEA2843E2) + 1964253681;
  LODWORD(STACK[0x3CC]) = ((4 * v15) ^ 0xD45087C4) - ((2 * ((4 * v15) ^ 0xD45087C4)) & 0x20EF4630);
  LODWORD(STACK[0x3C8]) = ((2 * v15) ^ 0xEA2843E2) - ((2 * ((2 * v15) ^ 0xEA2843E2)) & 0x4512E250);
  LODWORD(v8) = v10 + (v8 ^ 0x6D) + ((2 * v8) & 0xDA) + 104;
  LODWORD(STACK[0x3C4]) = v8 - ((2 * v8) & 0x5E);
  LODWORD(v14) = v1 & 0xFFFFFFFD ^ 0x9C12E5FF;
  LODWORD(STACK[0x464]) = v14;
  LODWORD(STACK[0x458]) = 2 * v14;
  v21 = (((_DWORD)v14 + 637897138 + ((2 * (_DWORD)v14) & 0x4C0B1360 ^ 0xFFFFFFFB) + 1) ^ 0xF6D775FF51FAE639)
      + ((2 * (((_DWORD)v14 + 637897138 + ((2 * (_DWORD)v14) & 0x4C0B1360 ^ 0xFFFFFFFB) + 1) ^ 0x260589B2)) & 0xEFFEDF16)
      + v3;
  LODWORD(v4) = *(unsigned __int8 *)(v9 + (v7 ^ 5)) + (v4 ^ 0xBF) + 2 * (v4 & 0x3F) + 22;
  v22 = v4 - ((2 * v4) & 0x70);
  v23 = (((v1 & 0xFFFFFFF6 ^ 0x9C12E5FF) - 436282668 - ((2 * (v1 & 0xFFFFFFF6 ^ 0x9C12E5FF)) & 0xCBFDB5A8)) ^ 0x57FFFE8D3231010BLL)
      + v3
      + ((2
        * (((v1 & 0xFFFFFFF6 ^ 0x9C12E5FF) - 436282668 - ((2 * (v1 & 0xFFFFFFF6 ^ 0x9C12E5FF)) & 0xCBFDB5A8)) ^ 0xE5FEDAD4)) & 0x1AF9FB7BELL);
  STACK[0x430] = v23;
  v24 = v1 ^ 0x9C12E5FF;
  STACK[0x478] = v24;
  v25 = (v1 ^ 0xEFDBCDFE4FCD0028) + v3 + ((2 * v24) & 0x1A7BFCBAELL);
  STACK[0x468] = v25;
  LODWORD(v4) = *(_DWORD *)(v19 + 4 * (*(unsigned __int8 *)(v23 - 0x57FFFE8DD7CFDBDFLL) ^ 0x45));
  HIDWORD(v20) = v4 ^ 0x3CCF14;
  LODWORD(v20) = v4 ^ 0xBEC00000;
  v26 = (v20 >> 22) - ((2 * (v20 >> 22)) & 0x17ADF44C) - 1948845530;
  v27 = *(unsigned __int8 *)(v25 + 0x102432012C201A29);
  LODWORD(STACK[0x3BC]) = ((4 * v26) ^ 0x2F5BE898)
                        + 367591035
                        - 2 * (((4 * v26) ^ 0x2F5BE898) & 0x15E8FE7C ^ (4 * v26) & 4);
  LODWORD(v4) = *(_DWORD *)(v12 + 4 * (v27 ^ 0x6D));
  LODWORD(STACK[0x3C0]) = ((2 * v26) ^ 0x17ADF44C) - ((2 * ((2 * v26) ^ 0x17ADF44C)) & 0x81240198);
  LODWORD(v4) = v4 - ((2 * v4 + 546301024) & 0xF9D1F9AE) - 1926172921;
  v28 = (((v1 & 0xFFFFFFF7 ^ 0x9C12E5FF) + 633178883 - ((2 * (v1 & 0xFFFFFFF7 ^ 0x9C12E5FF)) & 0x4B7B1606)) ^ 0xAFEF7F9B1621429ELL)
      + ((2
        * (((v1 & 0xFFFFFFF7 ^ 0x9C12E5FF) + 633178883 - ((2 * (v1 & 0xFFFFFFF7 ^ 0x9C12E5FF)) & 0x4B7B1606)) ^ 0x25BD8B03)) & 0x6739933A)
      + v3;
  STACK[0x400] = v28;
  LODWORD(v7) = *(_DWORD *)(v12 + 4 * (*(unsigned __int8 *)(v28 + 0x50108064CC633663) ^ 0x84));
  v29 = v7 - 2 * ((v7 + 273150512) & 0x607F78BF ^ v7 & 1) + 1892117230;
  LODWORD(v24) = v1 & 0xFFFFFFF1 ^ 0x9C12E5FF;
  LODWORD(STACK[0x448]) = v24;
  LODWORD(STACK[0x450]) = 2 * v24;
  LODWORD(v7) = *(_DWORD *)(v16
                          + 4
                          * (*(unsigned __int8 *)((((_DWORD)v24
                                                  + 690109952
                                                  + ((2 * (_DWORD)v24) & 0x52449900 ^ 0xFFFFFFF3)
                                                  + 3719) ^ 0xFE3FFB7FC169ABFBLL)
                                                + v3
                                                + ((2
                                                  * (((_DWORD)v24
                                                    + 690109952
                                                    + ((2 * (_DWORD)v24) & 0x52449900 ^ 0xFFFFFFF3)
                                                    + 3719) ^ 0x29224C86)) & 0x1D097CEFALL)
                                                + 0x1C0048017B41883) ^ 0xC6));
  LODWORD(v27) = (((2 * ((v7 >> 3) & 0x9564C9C ^ 0x60C14)) & 0x280930)
                - ((v7 >> 3) & 0x9564C9C ^ 0x60C14)
                + 1765952324) ^ 0xA940434B;
  v30 = (((v1 & 0xFFFFFFFE ^ 0x9C12E5FF) + 608795418 - ((2 * (v1 & 0xFFFFFFFE ^ 0x9C12E5FF)) & 0x4892F634)) ^ 0xBFEFDF7FD936E5A5)
      + v3
      + ((2
        * (((v1 & 0xFFFFFFFE ^ 0x9C12E5FF) + 608795418 - ((2 * (v1 & 0xFFFFFFFE ^ 0x9C12E5FF)) & 0x4892F634)) ^ 0x24497B1A)) & 0x1FAFF3D7ELL);
  STACK[0x440] = v30;
  v31 = *(_DWORD *)(v19 + 4 * (*(unsigned __int8 *)(v30 + 0x4010208002806141) ^ 0xE5));
  v32 = ((v31 >> 14) & 0x3FF00 ^ 0x2D000)
      + ((v31 >> 14) & 0x30B00 ^ 0x4CF10B71)
      - (((v31 >> 14) & 0x3FF00 ^ 0x2D000) & 0x30B00);
  v33 = (((v31 << 18) ^ 0x3C500000) - 302063969 - ((2 * ((v31 << 18) ^ 0x3C500000)) & 0xDBF80000)) ^ 0xEDFEDE9F | (((v31 >> 14) ^ 0x11801843) + ((v31 >> 14) & 0x5D ^ 0x6E821C) - (((v31 >> 14) ^ 0x11801843) & 0x1180185D)) ^ 0x6E82ED;
  v34 = (v33 + 971156245 - ((2 * v33) & 0x73C5562A)) ^ 0x39E2AB15 | v32 ^ 0x4CF32071;
  v35 = v34 - ((2 * v34) & 0xF3D3E49C) - 102108594;
  HIDWORD(v20) = v35 ^ 0x77777777;
  LODWORD(v20) = v35 ^ 0x9BA75F00;
  v36 = (v20 >> 8) - ((2 * (v20 >> 8)) & 0xD1DD5098) - 387012532;
  LODWORD(v21) = *(_DWORD *)(v16 + 4 * (*(unsigned __int8 *)(v21 + 0x9288A0088009075) ^ 0xC2));
  v37 = (v22 - 532168648) ^ v21 ^ (v21 >> 3) & 0x9564C9C ^ v4 ^ (((8 * v4) ^ 0xE747E6B8)
                                                                             - ((2 * ((8 * v4) ^ 0xE747E6B8)) & 0x749224F0)
                                                                             - 1169616263) ^ (((16 * v4) ^ 0xCE8FCD70)
                                                                                            - ((2
                                                                                              * ((16 * v4) ^ 0xCE8FCD70)) & 0x3A1B9360)
                                                                                            + 487442871) ^ v36 ^ (((2 * v36) ^ 0xA319CDC2) - ((2 * ((2 * v36) ^ 0xA319CDC2)) & 0x6075A5E8) + 809161460) ^ (((4 * v36) ^ 0x46339B84) - ((2 * ((4 * v36) ^ 0x46339B84)) & 0x94B4AE30) - 900049128);
  v38 = (((v1 & 0xFFFFFFFB ^ 0x9C12E5FF) - 1339563919 - ((2 * (v1 & 0xFFFFFFFB ^ 0x9C12E5FF)) & 0x604FC0E2)) ^ 0x7FDCEFF77FC81FCDLL)
      + v3
      + ((2
        * (((v1 & 0xFFFFFFFB ^ 0x9C12E5FF) - 1339563919 - ((2 * (v1 & 0xFFFFFFFB ^ 0x9C12E5FF)) & 0x604FC0E2)) ^ 0xB027E071)) & 0x19FDFFF78);
  STACK[0x410] = v38;
  LODWORD(v4) = *(_DWORD *)(v12 + 4 * (*(unsigned __int8 *)(v38 - 0x7FDCEFF7CFEFFFBCLL) ^ 0x69));
  LODWORD(v25) = v1 & 0xFFFFFFF4 ^ 0x9C12E5FF;
  LODWORD(STACK[0x40C]) = v25;
  LODWORD(STACK[0x408]) = 2 * v25;
  LODWORD(v4) = v4 - 2 * ((v4 + 273150512) & 0x55788DBB ^ v4 & 9) - 440369182;
  v39 = *(unsigned __int8 *)((((_DWORD)v25 + 1434250491 - ((2 * (_DWORD)v25) & 0xAAF9D9F6)) ^ 0x3E6E99EDAB828F8CLL)
                           + v3
                           + ((2 * (((_DWORD)v25 + 1434250491 - ((2 * (_DWORD)v25) & 0xAAF9D9F6)) ^ 0x557CECFB)) & 0x1FDFCC6EELL)
                           - 0x3E6E99EDFEFE6377);
  LODWORD(v25) = v1 & 0xFFFFFFF9 ^ 0x9C12E5FF;
  LODWORD(STACK[0x3E8]) = v25;
  LODWORD(STACK[0x3EC]) = 2 * v25;
  LODWORD(v39) = *(unsigned __int8 *)(v9 + (v39 ^ 0x7E))
               + (((v39 ^ 0x65) + (v39 ^ 0xFFFFFFEE)) ^ 0xDF)
               + ((2 * ((v39 ^ 0x65) + (v39 ^ 0xFFFFFFEE))) & 0xBE)
               - 9;
  LODWORD(v12) = LODWORD(STACK[0x3F8]) ^ (LODWORD(STACK[0x3F0]) - 1) ^ v26 ^ v29 ^ (LODWORD(STACK[0x3C0]) - 1064173363) ^ LODWORD(STACK[0x3BC]) ^ (((8 * v29) ^ 0x3FBC5F0) - ((2 * ((8 * v29) ^ 0x3FBC5F0)) & 0x4170F5F0) + 548961016) ^ (((16 * v29) ^ 0x7F78BE0) - ((2 * ((16 * v29) ^ 0x7F78BE0)) & 0x29BA47E0) + 350036980) ^ (v39 - ((2 * v39) & 0x1A8) + 488834516);
  LODWORD(v25) = *(_DWORD *)(v16
                           + 4
                           * (*(unsigned __int8 *)((((_DWORD)v25
                                                   - 1885348779
                                                   + ((2 * (_DWORD)v25) & 0x1F3FB8A2 ^ 0xFFFFFFF7)
                                                   + 1) ^ 0xEB3FF7EFF2DA3BABLL)
                                                 + ((2
                                                   * (((_DWORD)v25
                                                     - 1885348779
                                                     + ((2 * (_DWORD)v25) & 0x1F3FB8A2 ^ 0xFFFFFFF7)
                                                     + 1) ^ 0x8F9FDC55)) & 0xFA8BCFFC)
                                                 + v3
                                                 + 0x14C0081082BA1802) ^ 0x65));
  v40 = (((v1 & 0xFFFFFFF2 ^ 0x9C12E5FF) - 1751270853 - ((2 * (v1 & 0xFFFFFFF2 ^ 0x9C12E5FF)) & 0x2F3B7476)) ^ 0x3DF5FE796C4680A4)
      + v3
      + ((2
        * (((v1 & 0xFFFFFFF2 ^ 0x9C12E5FF) - 1751270853 - ((2 * (v1 & 0xFFFFFFF2 ^ 0x9C12E5FF)) & 0x2F3B7476)) ^ 0x979DBA3B)) & 0x1F7B6753ELL);
  STACK[0x3F0] = v40;
  v41 = v15 ^ (LODWORD(STACK[0x3C4]) - 1080200657) ^ (LODWORD(STACK[0x3C8]) + 579432744) ^ (LODWORD(STACK[0x3CC])
                                                                                          - 1871207654) ^ v25 ^ v4 ^ (((v25 >> 3) & 0x9564C9C ^ 0x1D62018) + ((v25 >> 3) & 0x952448C ^ 0x80844A5) - (((v25 >> 3) & 0x9564C9C ^ 0x1D62018) & 0x952448C)) ^ (((8 * v4) ^ 0xABC46D90) - ((2 * ((8 * v4) ^ 0xABC46D90)) & 0x99B1D590) + 1289284296) ^ (((16 * v4) ^ 0x5788DB20) - ((2 * ((16 * v4) ^ 0x5788DB20)) & 0x9DD55F00) + 1324003208);
  LODWORD(v38) = *(_DWORD *)(v19 + 4 * (*(unsigned __int8 *)(v40 - 0x3DF5FE79FBDB3A9FLL) ^ 0xA7));
  HIDWORD(v20) = v38 ^ 0x3CCF14;
  LODWORD(v20) = v38 ^ 0xBEC00000;
  v42 = (((v1 & 0xFFFFFFF0 ^ 0x9C12E5FF) - 1959682336 - ((2 * (v1 & 0xFFFFFFF0 ^ 0x9C12E5FF)) & 0x16633DC0)) ^ 0xE6FB2FFD165F6403)
      + v3
      + ((2
        * (((v1 & 0xFFFFFFF0 ^ 0x9C12E5FF) - 1959682336 - ((2 * (v1 & 0xFFFFFFF0 ^ 0x9C12E5FF)) & 0x16633DC0)) ^ 0x8B319EE0)) & 0x13ADDF5C6);
  STACK[0x3F8] = v42;
  LODWORD(v38) = (v20 >> 22) - ((2 * (v20 >> 22)) & 0x32CF8EE6) - 1721251981;
  v43 = *(unsigned __int8 *)(v42 + 0x1904D0026291051DLL);
  LODWORD(v4) = (v43 ^ 0x6E) + (((v43 ^ 0xFFFFFFE5) + 1) ^ 0xFFFFFFBD) + ((2 * ((v43 ^ 0xFFFFFFE5) + 1)) & 0x7A);
  LODWORD(v4) = ((v4 + 67) ^ 0x7D) + *(unsigned __int8 *)(v9 + (v43 ^ 0xFE)) + ((2 * (v4 + 67)) & 0xFFFFFFFB);
  LODWORD(v4) = (v4 - 2 * ((v4 + 24) & 0x27 ^ v4 & 5) - 6) ^ 0x7D;
  LODWORD(v25) = (LODWORD(STACK[0x3DC]) + 1714082854) ^ LODWORD(STACK[0x3E0]) ^ LODWORD(STACK[0x3D0]) ^ v7 ^ v38 ^ (v27 - ((2 * v27) & 0x98EA0A48) - 864746204) ^ (((2 * v38) ^ 0x32CF8EE6) - 2 * (((2 * v38) ^ 0x32CF8EE6) & 0x3CC6315E ^ (2 * v38) & 8) - 1127861929) ^ (((4 * v38) ^ 0x659F1DCC) + 261981230 - 2 * (((4 * v38) ^ 0x659F1DCC) & 0xF9D843C ^ (4 * v38) & 0x10)) ^ (v4 - ((2 * v4) & 0x140) + 1535864992);
  v44 = *(_DWORD *)(v2 - 240);
  v45 = (char *)*(&off_10112C750 + (v44 ^ 0x43B2)) - 1111020514;
  LODWORD(v38) = STACK[0x358];
  LODWORD(STACK[0x3C0]) = v37;
  LODWORD(v4) = v38 ^ v37;
  LODWORD(v38) = *(_DWORD *)&v45[4 * (((v38 ^ v37) >> 24) ^ 0x4F)];
  LODWORD(v43) = 177734933 * v38 - ((355469866 * v38 + 354290566) & 0x61B1CE6C);
  LODWORD(v38) = STACK[0x354];
  LODWORD(STACK[0x3A8]) = v25;
  LODWORD(v38) = v38 ^ v25;
  LODWORD(v24) = ((((v38 ^ 0xA85A7F38) >> 16) & 0x35 ^ 0xA4973715)
                + (((v38 ^ 0xA85A7F38) >> 16) & 0xCA ^ 0xC9)
                - 1) ^ 0xE49753A0;
  LODWORD(v25) = 703780566 - (v24 | 0x29F2D6D6) + (v24 | 0xD60D2929);
  LODWORD(v24) = STACK[0x350];
  LODWORD(STACK[0x3BC]) = v12;
  LODWORD(v42) = v24 ^ v12;
  LODWORD(v24) = v24 ^ v12 ^ 0x58B36493;
  v46 = (char *)*(&off_10112C750 + v44 - 19928) - 1013462622;
  LODWORD(v25) = *(_DWORD *)&v46[4 * (v25 ^ 0x960D4DD2)];
  LODWORD(v39) = v44;
  v47 = (char *)*(&off_10112C750 + (v44 ^ 0x5F15)) - 1133121963;
  v48 = *(_DWORD *)&v47[4
                      * ((((v24 >> 8) & 0x12) + (BYTE1(v24) ^ 0x92) - ((BYTE1(v24) ^ 0x92) & 0x12) + 4864) ^ 0x1346)];
  LODWORD(v16) = v25 - ((2 * v25 - 566807350) & 0xEA06EBC2);
  HIDWORD(v20) = v48 ^ 0x4DC3;
  LODWORD(v20) = v48 ^ 0x1C390000;
  v49 = (v20 >> 16) - ((2 * (v20 >> 16)) & 0xF8777FF8);
  LODWORD(v25) = STACK[0x35C];
  LODWORD(STACK[0x3AC]) = v41;
  LODWORD(v7) = v25 ^ v41;
  LODWORD(v25) = v25 ^ v41 ^ 0x76CDE5F3;
  v50 = (char *)*(&off_10112C750 + (int)(v39 ^ 0x43EA)) - 1776123162;
  LODWORD(v27) = *(_DWORD *)&v50[4 * (v25 ^ 0x17)];
  HIDWORD(v20) = v27 ^ 0x1A86;
  LODWORD(v20) = v27 ^ 0xBBED0000;
  LODWORD(v16) = LODWORD(STACK[0x34C]) ^ (v16 - 467726266) ^ (v49 + 2084290556) ^ ((v20 >> 16)
                                                                                 - ((2 * (v20 >> 16)) & 0xDEBB251A)
                                                                                 + 1868403341) ^ (v43 + 2070408441);
  LODWORD(v43) = *(_DWORD *)&v45[4 * (BYTE3(v7) ^ 0xE7)];
  LODWORD(v4) = v4 ^ 0x48014AC1;
  v51 = *(_DWORD *)&v46[4 * (BYTE2(v4) ^ 0xB1)];
  LODWORD(v27) = *(_DWORD *)&v47[4 * (((unsigned __int16)(v38 ^ 0x7F38) >> 8) ^ 0x74)];
  HIDWORD(v20) = v27 ^ 0x4DC3;
  LODWORD(v20) = v27 ^ 0x1C390000;
  LODWORD(v7) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0xC9789F6C);
  LODWORD(v27) = *(_DWORD *)&v50[4
                               * ((1011052440
                                 - (v24 ^ 0x7C | 0x3C436F98)
                                 + (v24 ^ 0x7C | 0xC3BC9067)) ^ 0xC3BC901B)];
  HIDWORD(v20) = v27 ^ 0x1A86;
  LODWORD(v20) = v27 ^ 0xBBED0000;
  LODWORD(v43) = LODWORD(STACK[0x348]) ^ ((~(355469866 * v43 - 1793193082) | 0x1F03C0DF) + 177734933 * v43 - 1156766380) ^ (v7 - 457420874) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0xF2E7654) + 127351594) ^ (v51 - ((2 * v51 + 506934474) & 0x2EAEABEE) - 2039287716);
  LODWORD(v42) = *(_DWORD *)&v45[4 * (BYTE3(v42) ^ 0xD8)];
  v52 = ((BYTE2(v25) ^ 0xEA) + (WORD1(v25) & 6 ^ 0x6EBD7D04) - ((BYTE2(v25) ^ 0xEA) & 6)) ^ 0xC392986;
  v53 = *(_DWORD *)&v46[4 * ((-123961112 - (v52 | 0xF89C80E8) + (v52 | 0x7637F17)) ^ 0x65E72B7E)];
  LODWORD(v7) = *(_DWORD *)&v47[4 * (BYTE1(v4) ^ 0x5F)];
  HIDWORD(v20) = v7 ^ 0x4DC3;
  LODWORD(v20) = v7 ^ 0x1C390000;
  LODWORD(v7) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0xED94456);
  LODWORD(v15) = *(_DWORD *)&v50[4
                               * (((v38 ^ 0xA49E8A52)
                                 + ((v38 ^ 0xA85A7F38) & 0x95 ^ 0x10212195)
                                 - ((v38 ^ 0xA49E8A52) & 0x20800895)) ^ 0x943FA3CB)];
  HIDWORD(v20) = v15 ^ 0x1A86;
  LODWORD(v20) = v15 ^ 0xBBED0000;
  LODWORD(v38) = *(_DWORD *)&v45[4 * (BYTE3(v38) ^ 0xFA)];
  LODWORD(v27) = 177734933 * v38 - ((355469866 * v38 - 1793193082) & 0x8333807A);
  LODWORD(v38) = LODWORD(STACK[0x340]) ^ (177734933 * v42 - ((355469866 * v42 + 354290566) & 0x293B65BA) + 1596766368) ^ (v53 + 559348956 - ((2 * v53 + 1580676298) & 0x6476C60A) + 142) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x27C9FD06) - 1813709181) ^ (v7 - 2022923733);
  LODWORD(v24) = ((WORD1(v24) & 0xA1) + (BYTE2(v24) ^ 0xFFFFFFAF) + (BYTE2(v24) | 0x2554895E) + 1) ^ 0x5670558;
  LODWORD(v24) = *(_DWORD *)&v46[4 * ((((2 * (_DWORD)v24) | 0x36E7859C) - (_DWORD)v24 - 460571342) ^ 0x3B404E5B)];
  LODWORD(v15) = *(_DWORD *)&v47[4 * (BYTE1(v25) ^ 0xEB)];
  HIDWORD(v20) = v15 ^ 0x4DC3;
  LODWORD(v20) = v15 ^ 0x1C390000;
  LODWORD(v24) = LODWORD(STACK[0x33C]) ^ (v27 + 203998720) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0xF45CCDB0) + 2049861336) ^ (v24 - ((2 * v24 + 1580676298) & 0x7FDFC530) + 789282045);
  LODWORD(v15) = *(_DWORD *)&v50[4 * (v4 ^ 0xAE)];
  HIDWORD(v20) = v15 ^ 0x1A86;
  LODWORD(v20) = v15 ^ 0xBBED0000;
  LODWORD(v15) = v20 >> 16;
  HIDWORD(v20) = v24 ^ 1;
  LODWORD(v20) = v24 ^ 0x84B0FAB0;
  LODWORD(v24) = (v20 >> 2) - ((2 * (v20 >> 2)) & 0x31919F18);
  LODWORD(v25) = (2 * v15) & 0xDB628E0C;
  LODWORD(v15) = v15 + 1840334598;
  HIDWORD(v20) = v15 ^ 2;
  LODWORD(v20) = (v15 - v25) ^ 0x6DB14704;
  LODWORD(v24) = (v24 - 1731670132) ^ ((v20 >> 2) - ((2 * (v20 >> 2)) & 0xE7C6AF14) + 1944278922);
  HIDWORD(v20) = v24 ^ 0x33712474;
  LODWORD(v20) = v24;
  LODWORD(v15) = *(_DWORD *)&v45[4 * (BYTE3(v16) ^ 0x17)];
  LODWORD(v25) = (v20 >> 30) - ((2 * (v20 >> 30)) & 0x4613A86E) - 1559636937;
  LODWORD(v24) = *(_DWORD *)&v46[4 * (BYTE2(v25) ^ 0xE7)];
  LODWORD(v4) = (-642064275 - (BYTE1(v38) ^ 0x50 | 0xD9BAE06D) + (BYTE1(v38) ^ 0x50 | 0x26451F92)) ^ 0x6BFC1F13;
  LODWORD(v4) = *(_DWORD *)&v47[4
                              * ((1414075436 - (v4 | 0x5449142C) + (v4 | 0xABB6EBD3)) ^ 0xE60FEBBD)];
  HIDWORD(v20) = v4 ^ 0x4DC3;
  LODWORD(v20) = v4 ^ 0x1C390000;
  LODWORD(v42) = ((v43 & 0x74 ^ 0x69F1141) + (v43 & 0x8B) - 1) ^ 0xEFF31DE;
  LODWORD(v42) = *(_DWORD *)&v50[4 * ((((2 * (_DWORD)v42) | 0xD0B94FC8) - (_DWORD)v42 + 396580892) ^ 0xE03C8725)];
  LODWORD(v4) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0xB0C0AD4E);
  HIDWORD(v20) = v42 ^ 0x1A86;
  LODWORD(v20) = v42 ^ 0xBBED0000;
  LODWORD(v24) = LODWORD(STACK[0x338]) ^ (177734933 * v15 - ((355469866 * v15 - 1793193082) & 0x93A28BAE) + 341855130) ^ (v4 + 1482708647) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x8BC79760) - 974926928) ^ (v24 - ((2 * v24 + 1580676298) & 0x75F30526) - 1441456904);
  LODWORD(v15) = *(_DWORD *)&v45[4 * (BYTE3(v43) ^ 0x58)];
  LODWORD(v4) = *(_DWORD *)&v46[4 * (BYTE2(v16) ^ 0xA3)];
  LODWORD(v42) = *(_DWORD *)&v47[4 * (BYTE1(v25) ^ 0x9B)];
  HIDWORD(v20) = v42 ^ 0x4DC3;
  LODWORD(v20) = v42 ^ 0x1C390000;
  LODWORD(v42) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0x4F9F5A4C);
  v54 = *(_DWORD *)&v50[4 * (v38 ^ 0xB)];
  HIDWORD(v20) = v54 ^ 0x1A86;
  LODWORD(v20) = v54 ^ 0xBBED0000;
  LODWORD(v42) = LODWORD(STACK[0x334]) ^ (v4 - 1259201940 + (~(2 * v4 - 566807350) | 0x7452FFF3)) ^ (177734933 * v15 - ((355469866 * v15 + 354290566) & 0x604FADEC) - 88679239) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x8EEFBC5A) - 948445651) ^ (v42 - 1479561946);
  LODWORD(v15) = *(_DWORD *)&v45[4 * (BYTE3(v38) ^ 0xA2)];
  LODWORD(v4) = *(_DWORD *)&v46[4
                              * ((((2 * (BYTE2(v43) ^ 0x2413CB83)) | 0x7B7491AC) - (BYTE2(v43) ^ 0x2413CB83) - 1035618518) ^ 0x19A9837B)];
  LODWORD(v7) = *(_DWORD *)&v47[4 * (BYTE1(v16) ^ 0x7C)];
  HIDWORD(v20) = v7 ^ 0x4DC3;
  LODWORD(v20) = v7 ^ 0x1C390000;
  v55 = (v20 >> 16) - ((2 * (v20 >> 16)) & 0x81E648F2);
  LODWORD(v7) = *(_DWORD *)&v50[4 * (v25 ^ 0xC7)];
  HIDWORD(v20) = v7 ^ 0x1A86;
  LODWORD(v20) = v7 ^ 0xBBED0000;
  LODWORD(v15) = (177734933 * v15 - ((355469866 * v15 - 1793193082) & 0xD972DF48) + 927495527) ^ LODWORD(STACK[0x394]) ^ (v4 - ((2 * v4 + 1580676298) & 0x613B7CEA) - 1615243046) ^ (v55 - 1057807239) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0xE74CF62E) + 1940290327);
  LODWORD(v25) = *(_DWORD *)&v45[4 * (BYTE3(v25) ^ 0xD0)];
  LODWORD(v4) = *(_DWORD *)&v47[4
                              * ((((2 * (BYTE1(v43) ^ 0xD3)) | 0xFDF07C8) - (BYTE1(v43) ^ 0xD3) - 133137380) ^ 0x7EF830C)];
  HIDWORD(v20) = v4 ^ 0x4DC3;
  LODWORD(v20) = v4 ^ 0x1C390000;
  LODWORD(v4) = v20 >> 16;
  LODWORD(v38) = *(_DWORD *)&v46[4 * (BYTE2(v38) ^ 0x6D)];
  v56 = *(_DWORD *)&v50[4 * (v16 ^ 0x81)];
  HIDWORD(v20) = v56 ^ 0x1A86;
  LODWORD(v20) = v56 ^ 0xBBED0000;
  LODWORD(v38) = LODWORD(STACK[0x330]) ^ (v38 - ((2 * v38 - 566807350) & 0xD5E9E1C6) + 1511033672) ^ (v4 - ((2 * v4) & 0xF39734C8) + 2043386468) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x157B5DDA) + 180203245) ^ (177734933 * v25 - ((355469866 * v25 - 1793193082) & 0xFC0387CC) + 1217448361);
  LODWORD(v25) = (v38 ^ 0x9BF68D61) + 1;
  LODWORD(v38) = v38 ^ 0x2E164235;
  LODWORD(v25) = v38 + (v25 ^ 0xFFB8FCDF) + ((2 * v25) & 0xFF71F9BE) + 4653857;
  LODWORD(v38) = ((v25 - ((2 * v25) & 0x90269338) - 938260068) ^ 0x37ECB662) + v38;
  LODWORD(v25) = *(_DWORD *)&v45[4 * (BYTE3(v24) ^ 0x78)];
  LODWORD(v38) = v38 - ((2 * v38) & 0xFE7A2B0E) - 12774009;
  LODWORD(v4) = *(_DWORD *)&v46[4 * (BYTE2(v38) ^ 0x59)];
  LODWORD(v43) = *(_DWORD *)&v47[4 * (BYTE1(v15) ^ 0x1A)];
  HIDWORD(v20) = v43 ^ 0x4DC3;
  LODWORD(v20) = v43 ^ 0x1C390000;
  LODWORD(v43) = ((2 * (v42 ^ 0x8D)) & 0x3C) - (v42 ^ 0x8D) + 1922154977;
  LODWORD(v43) = *(_DWORD *)&v50[4
                               * (((v43 & 0x30104BD6 ^ 0xD084814)
                                 + (v43 ^ 0x70D183C2)
                                 - ((v43 ^ 0x70D183C2) & 0x4BD6)) ^ 0x3F5809C0)];
  LODWORD(v25) = LODWORD(STACK[0x32C]) ^ (177734933 * v25 - ((355469866 * v25 + 354290566) & 0x59FB0C4C) - 141784087) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x7406CB44) + 973301154) ^ (v4 - ((2 * v4 - 566807350) & 0xDDA96B02) - 571453466);
  HIDWORD(v20) = v43 ^ 0x1A86;
  LODWORD(v20) = v43 ^ 0xBBED0000;
  LODWORD(v4) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0x9F1CA39A) + 1334727117;
  LODWORD(v25) = (v4 ^ ((v4 ^ 0xB071AE32) - ((2 * (v4 ^ 0xB071AE32) + 2) & 0x82AEEED8) - 1051232403) ^ 0x3BB23601 ^ ((v4 ^ 0x59D280B2 ^ v25) + (v25 ^ 0xE9A32E80) + 1 - ((2 * ((v4 ^ 0x59D280B2 ^ v25) + (v25 ^ 0xE9A32E80) + 1)) & 0x6AD62140) - 1251274592))
               + (v25 ^ 0xE9A32E80);
  LODWORD(v4) = *(_DWORD *)&v45[4 * (BYTE3(v42) ^ 0x98)];
  LODWORD(v43) = *(_DWORD *)&v46[4 * (BYTE2(v24) ^ 0x5A)];
  v57 = *(_DWORD *)&v47[4 * (BYTE1(v38) ^ 0x8F)];
  HIDWORD(v20) = v57 ^ 0x4DC3;
  LODWORD(v20) = v57 ^ 0x1C390000;
  v58 = (v20 >> 16) - ((2 * (v20 >> 16)) & 0x92EEDF2E);
  LODWORD(v16) = *(_DWORD *)&v50[4 * (v15 ^ 0x58)];
  HIDWORD(v20) = v16 ^ 0x1A86;
  LODWORD(v20) = v16 ^ 0xBBED0000;
  LODWORD(v16) = LODWORD(STACK[0x328]) ^ (v43 - ((2 * v43 - 566807350) & 0x8024807E) - 1355949404) ^ (177734933 * v4 - ((355469866 * v4 + 354290566) & 0x3BF7DE60) + 1753937139) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x3223478E) - 1726897209) ^ (v58 - 914919529);
  LODWORD(v4) = *(_DWORD *)&v45[4
                              * ((1083639163 - (BYTE3(v15) & 0x20)) ^ ((BYTE3(v15) & 0x9A ^ 0x796D8403)
                                                                     + (BYTE3(v15) & 0x45)
                                                                     - 1) ^ 0x39FA8162)];
  LODWORD(v43) = ((v42 >> 15) & 0x192 ^ 0x80) + (BYTE2(v42) ^ 0x3EFD4DA9);
  v59 = ((42061310 - (BYTE2(v42) ^ 0xD1 | 0x281CDFE) + (BYTE2(v42) ^ 0xD1 | 0xFD7E3201)) ^ 0x281CD2B) + 1;
  v60 = (v59 ^ 0x6BFFD7FE) + v43 + ((2 * v59) & 0xD7FFAFFC);
  LODWORD(v43) = *(_DWORD *)&v46[4 * (int)v43
                               - 4227151652
                               + 4 * ((v60 - ((2 * v60 - 1442466702) & 0xDB46A83A) - 1029296554) ^ 0x925CABE5)];
  v61 = *(_DWORD *)&v47[4 * (BYTE1(v24) ^ 0x84)];
  HIDWORD(v20) = v61 ^ 0x4DC3;
  LODWORD(v20) = v61 ^ 0x1C390000;
  v62 = (v20 >> 16) - ((2 * (v20 >> 16)) & 0xB22CBBAE);
  LODWORD(v7) = *(_DWORD *)&v50[4 * (v38 ^ 0xAF)];
  HIDWORD(v20) = v7 ^ 0x1A86;
  LODWORD(v20) = v7 ^ 0xBBED0000;
  LODWORD(v7) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0x37115CF2);
  LODWORD(v43) = LODWORD(STACK[0x324]) ^ (177734933 * v4 - ((355469866 * v4 + 354290566) & 0x34852B4E) + 1691458410) ^ (v62 + 1494638039) ^ (v43 - ((2 * v43 - 566807350) & 0xBFF67D94) - 820586193);
  LODWORD(v4) = *(_DWORD *)&v47[4 * (BYTE1(v42) ^ 0x85)];
  HIDWORD(v20) = v4 ^ 0x4DC3;
  LODWORD(v20) = v4 ^ 0x1C390000;
  LODWORD(v4) = v20 >> 16;
  LODWORD(v38) = *(_DWORD *)&v45[4 * (BYTE3(v38) ^ 0x28)];
  LODWORD(v15) = *(_DWORD *)&v46[4 * (BYTE2(v15) ^ 0x1E)];
  LODWORD(v24) = *(_DWORD *)&v50[4 * (v24 ^ 0xF8)];
  HIDWORD(v20) = v24 ^ 0x1A86;
  LODWORD(v20) = v24 ^ 0xBBED0000;
  LODWORD(v15) = LODWORD(STACK[0x320]) ^ (v15 - 1797076772 + (~(2 * v15 + 1580676298) | 0xB471A313)) ^ (v4 - ((2 * v4) & 0x1EB5285C) + 257594414) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x121C060E) - 1995570425) ^ (177734933 * v38 - ((355469866 * v38 + 354290566) & 0x4BEBD412) + 1887760332);
  LODWORD(v38) = v25 - ((2 * v25) & 0xF41B946C) + 2047724086;
  LODWORD(v24) = *(_DWORD *)&v45[4 * (BYTE3(v38) ^ 8)];
  LODWORD(v25) = *(_DWORD *)&v46[4 * (BYTE2(v15) ^ 0xF4)];
  LODWORD(v42) = v25 - ((2 * v25 - 566807350) & 0xAF98CF82);
  LODWORD(v4) = v7 - 1685541255;
  LODWORD(v25) = v43 ^ (v7 - 1685541255);
  v63 = *(_DWORD *)&v47[4 * (BYTE1(v25) ^ 0xF7)];
  HIDWORD(v20) = v63 ^ 0x4DC3;
  LODWORD(v20) = v63 ^ 0x1C390000;
  v64 = (v20 >> 16) - ((2 * (v20 >> 16)) & 0xAE40B3F8);
  LODWORD(v7) = *(_DWORD *)&v50[4
                              * (((v16 ^ 0x8382627)
                                + (v16 & 0x34 ^ 0x86C00910)
                                - ((v16 ^ 0x8382627) & 0x8300434)) ^ 0x86C82B6A)];
  HIDWORD(v20) = v7 ^ 0x1A86;
  LODWORD(v20) = v7 ^ 0xBBED0000;
  LODWORD(v24) = LODWORD(STACK[0x36C]) ^ (v42 + 1189610022) ^ (v64 + 1461737980) ^ ((v20 >> 16)
                                                                                  - ((2 * (v20 >> 16)) & 0xE0B0179E)
                                                                                  - 262665265) ^ (177734933 * v24
                                                                                                - ((355469866 * v24
                                                                                                  - 1793193082) & 0xA0E289F6)
                                                                                                - 1694479682);
  LODWORD(v42) = *(_DWORD *)&v45[4 * (BYTE3(v16) ^ 0x7E)];
  v65 = *(_DWORD *)&v46[4 * (BYTE2(v38) ^ 0xA5)];
  LODWORD(v7) = ((2 * (BYTE1(v15) ^ 0x6C74080E)) | 0xACCC227C) - (BYTE1(v15) ^ 0x6C74080E) + 697953986;
  LODWORD(v7) = *(_DWORD *)&v47[4 * (((v7 & 0x7E6 ^ 0xCC00C483) + (v7 & 0x12121819) - 1) ^ 0xDE12DD5D)];
  HIDWORD(v20) = v7 ^ 0x4DC3;
  LODWORD(v20) = v7 ^ 0x1C390000;
  LODWORD(v7) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0xC463ADB8);
  LODWORD(v27) = *(_DWORD *)&v50[4 * (v25 ^ 0xF7)];
  HIDWORD(v20) = v27 ^ 0x1A86;
  LODWORD(v20) = v27 ^ 0xBBED0000;
  v66 = LODWORD(STACK[0x31C]) ^ (177734933 * v42 - ((355469866 * v42 + 354290566) & 0x78052D56) + 110206062) ^ (v65 - ((2 * v65 + 1580676298) & 0x6046588A) - 1623275862) ^ (v7 + 1647433436) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x4B55BFDC) + 631955438);
  LODWORD(v4) = *(_DWORD *)&v45[4 * ((v43 ^ ~(_DWORD)v4) >> 24)];
  LODWORD(v43) = *(_DWORD *)&v46[4 * (BYTE2(v16) ^ 0x64)];
  v67 = *(_DWORD *)&v47[4 * (BYTE1(v38) ^ 0x5D)];
  HIDWORD(v20) = v67 ^ 0x4DC3;
  LODWORD(v20) = v67 ^ 0x1C390000;
  LODWORD(v42) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0xE91DFDE8);
  v68 = *(_DWORD *)&v50[4 * (v15 ^ 0xE2)];
  HIDWORD(v20) = v68 ^ 0x1A86;
  LODWORD(v20) = v68 ^ 0xBBED0000;
  LODWORD(v43) = LODWORD(STACK[0x318]) ^ (v43 - ((2 * v43 - 566807350) & 0xEA4EC0E2) - 465372458) ^ (177734933 * v4 - ((355469866 * v4 - 1793193082) & 0xEF550BEC) - 1036416071) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0xFDFB20CE) - 16936857) ^ (v42 + 1955528436);
  LODWORD(v15) = *(_DWORD *)&v45[4 * (BYTE3(v15) ^ 0x3A)];
  LODWORD(v25) = *(_DWORD *)&v46[4 * (BYTE2(v25) ^ 3)];
  LODWORD(v4) = *(_DWORD *)&v47[4 * (BYTE1(v16) ^ 0xA7)];
  HIDWORD(v20) = v4 ^ 0x4DC3;
  LODWORD(v20) = v4 ^ 0x1C390000;
  LODWORD(v4) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0xFAD21352);
  LODWORD(v38) = (((2 * (v38 ^ 0xF7)) | 0x259423AC) - (v38 ^ 0xF7) - 315232726) ^ 0xA2C211D7;
  LODWORD(v38) = *(_DWORD *)&v50[4 * ((((2 * (_DWORD)v38) | 0xC232F7C) - (_DWORD)v38 + 2045667394) ^ 0x3619977F)];
  HIDWORD(v20) = v38 ^ 0x1A86;
  LODWORD(v20) = v38 ^ 0xBBED0000;
  LODWORD(v15) = LODWORD(STACK[0x314]) ^ (v25 - 1002744460 + (~(2 * v25 - 566807350) | 0x55C089E3)) ^ (177734933 * v15 - ((355469866 * v15 + 354290566) & 0x447458FC) - 322358719) ^ (v4 + 2104035753);
  LODWORD(v4) = *(_DWORD *)&v45[4 * (BYTE3(v24) ^ 0x3F)];
  LODWORD(v25) = v15 ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0xC9C191BC) - 455030562);
  LODWORD(v38) = 177734933 * v4 - ((355469866 * v4 - 1793193082) & 0xE76168D2);
  LODWORD(v15) = *(_DWORD *)&v46[4 * (BYTE2(v25) ^ 0xD8)];
  LODWORD(v4) = *(_DWORD *)&v47[4 * (BYTE1(v43) ^ 0x5E)];
  HIDWORD(v20) = v4 ^ 0x4DC3;
  LODWORD(v20) = v4 ^ 0x1C390000;
  LODWORD(v42) = *(_DWORD *)&v50[4
                               * ((-933486601
                                 - (v66 ^ 0x21410015 | 0xC85C1FF7)
                                 + (v66 ^ 0x21410015 | 0x37A3E008)) ^ 0x16E2E012)];
  LODWORD(v4) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0xC005904A);
  v69 = *(_DWORD *)&v45[4 * (HIBYTE(v66) ^ 0x76)];
  HIDWORD(v20) = v42 ^ 0x1A86;
  LODWORD(v20) = v42 ^ 0xBBED0000;
  LODWORD(v38) = LODWORD(STACK[0x308]) ^ (v38 + 1044363820) ^ (v4 + 1610795045) ^ ((v20 >> 16)
                                                                                 - ((2 * (v20 >> 16)) & 0x73FB22E4)
                                                                                 - 1174564494);
  LODWORD(v4) = *(_DWORD *)&v46[4 * (BYTE2(v24) ^ 0xF)];
  LODWORD(v42) = v38 ^ (v15 - ((2 * v15 + 1580676298) & 0x4BC72D14) - 1795215121);
  LODWORD(v38) = v4 - ((2 * v4 + 1580676298) & 0x5F963618);
  LODWORD(v15) = *(_DWORD *)&v47[4 * (BYTE1(v25) ^ 0x3D)];
  HIDWORD(v20) = v15 ^ 0x4DC3;
  LODWORD(v20) = v15 ^ 0x1C390000;
  LODWORD(v15) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0x1FD08F06);
  LODWORD(v4) = *(_DWORD *)&v50[4 * (v43 ^ 0x73)];
  HIDWORD(v20) = v4 ^ 0x1A86;
  LODWORD(v20) = v4 ^ 0xBBED0000;
  LODWORD(v16) = *(_DWORD *)&v45[4 * (BYTE3(v43) ^ 0xFB)];
  LODWORD(v15) = LODWORD(STACK[0x304]) ^ (v38 - 1629047439) ^ ((~(355469866 * v69 - 1793193082) | 0x3D4B64DD)
                                                             + 177734933 * v69
                                                             + 736711509) ^ ((v20 >> 16)
                                                                           - ((2 * (v20 >> 16)) & 0x592D8DAE)
                                                                           - 1399404841) ^ (v15 - 1880602749);
  LODWORD(v38) = *(_DWORD *)&v46[4
                               * ((-707012848
                                 - (BYTE2(v66) ^ 0x40C13BA1 | 0xD5DBD710)
                                 + (BYTE2(v66) ^ 0x40C13BA1 | 0x2A2428EF)) ^ 0x6AE51347)];
  v70 = *(_DWORD *)&v47[4 * (BYTE1(v24) ^ 0xCB)];
  HIDWORD(v20) = v70 ^ 0x4DC3;
  LODWORD(v20) = v70 ^ 0x1C390000;
  LODWORD(v4) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0xEA2C4628);
  v71 = *(_DWORD *)&v50[4 * (v25 ^ 0xF1)];
  HIDWORD(v20) = v71 ^ 0x1A86;
  LODWORD(v20) = v71 ^ 0xBBED0000;
  LODWORD(v38) = LODWORD(STACK[0x300]) ^ (177734933 * v16 - ((355469866 * v16 + 354290566) & 0x485FC460) - 289478669) ^ (v38 - ((2 * v38 + 506934474) & 0x1B743AD6) + 2094381008) ^ (v4 - 183098604) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x6DDD5A52) - 1225872087);
  LODWORD(v25) = *(_DWORD *)&v45[4 * (BYTE3(v25) ^ 0x79)];
  LODWORD(v4) = *(_DWORD *)&v47[4
                              * (((BYTE1(v66) ^ 0x5C0181D4) - ((2 * (BYTE1(v66) ^ 0x5C0181D4)) & 0x980100AA) + 1845280853) ^ 0x31FD41CB)];
  HIDWORD(v20) = v4 ^ 0x4DC3;
  LODWORD(v20) = v4 ^ 0x1C390000;
  LODWORD(v4) = v20 >> 16;
  LODWORD(v43) = *(_DWORD *)&v46[4 * (BYTE2(v43) ^ 0x69)];
  LODWORD(v24) = *(_DWORD *)&v50[4 * (v24 ^ 0x24)];
  HIDWORD(v20) = v24 ^ 0x1A86;
  LODWORD(v20) = v24 ^ 0xBBED0000;
  LODWORD(v25) = LODWORD(STACK[0x2FC]) ^ (v43 - ((2 * v43 - 566807350) & 0xBB5DFD5E) + 1288345876) ^ (v4 - ((2 * v4) & 0xE6C5D718) - 211620980) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x34EF5B96) + 444050891) ^ (177734933 * v25 - ((355469866 * v25 + 354290566) & 0x42C1B9B0) - 336600421);
  LODWORD(v24) = *(_DWORD *)&v45[4 * (BYTE3(v42) ^ 0xED)];
  LODWORD(v4) = *(_DWORD *)&v47[4 * (BYTE1(v38) ^ 0x23)];
  HIDWORD(v20) = v4 ^ 0x4DC3;
  LODWORD(v20) = v4 ^ 0x1C390000;
  LODWORD(v4) = v20 >> 16;
  LODWORD(v43) = *(_DWORD *)&v46[4 * (BYTE2(v25) ^ 0x28)];
  v72 = *(_DWORD *)&v50[4
                      * (((v15 ^ 0x1040B8C6)
                        + (v15 & 0xAF ^ 0x2D3A0529)
                        - ((v15 ^ 0x1040B8C6) & 0x104030AF)) ^ 0x2D3A8DDE)];
  HIDWORD(v20) = v72 ^ 0x1A86;
  LODWORD(v20) = v72 ^ 0xBBED0000;
  LODWORD(v24) = LODWORD(STACK[0x2F8]) ^ (177734933 * v24 - ((355469866 * v24 - 1793193082) & 0xAC7FE98E) - 1597048182) ^ (v43 - ((2 * v43 - 566807350) & 0xA8C448A0) + 1132314293) ^ (v4 - ((2 * v4) & 0x35E4900A) + 452085765) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x6635EC60) + 857404976);
  LODWORD(v4) = *(_DWORD *)&v45[4 * (BYTE3(v15) ^ 0x77)];
  LODWORD(v43) = *(_DWORD *)&v46[4 * (BYTE2(v42) ^ 0x27)];
  v73 = *(_DWORD *)&v47[4 * (BYTE1(v25) ^ 0xE4)];
  HIDWORD(v20) = v73 ^ 0x4DC3;
  LODWORD(v20) = v73 ^ 0x1C390000;
  LODWORD(v16) = *(_DWORD *)&v50[4
                               * ((((2 * (v38 ^ 0xB8)) | 0xA17B3102)
                                 - (v38 ^ 0xB8)
                                 + 792881023) ^ 0xD0BD98C5)];
  v74 = (v20 >> 16) - ((2 * (v20 >> 16)) & 0x13E9AF2A);
  HIDWORD(v20) = v16 ^ 0x1A86;
  LODWORD(v20) = v16 ^ 0xBBED0000;
  LODWORD(v16) = LODWORD(STACK[0x2F4]) ^ (v43 - ((2 * v43 + 506934474) & 0x16BF2C94) + 2054893743) ^ (177734933 * v4 - ((355469866 * v4 + 354290566) & 0x3232566E) - 475516678) ^ (v74 - 1980442731) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x845A9922) + 1110264977);
  LODWORD(v4) = *(_DWORD *)&v45[4 * (BYTE3(v38) ^ 0x8D)];
  LODWORD(v43) = *(_DWORD *)&v46[4
                               * ((((2 * (BYTE2(v15) ^ 0x2600101A)) & 0x440021F2)
                                 - (BYTE2(v15) ^ 0x2600101A)
                                 + 1141540614) ^ 0x620A97A2)];
  v75 = (((2 * (BYTE1(v42) ^ 0x8D)) | 0x6997DBA4) - (BYTE1(v42) ^ 0x8D) + 1261703726) ^ 0xB65BAFC1;
  v76 = *(_DWORD *)&v47[4 * ((371536253 - (v75 | 0x1625317D) + (v75 | 0xE9DACE82)) ^ 0xEB4A8C31)];
  HIDWORD(v20) = v76 ^ 0x4DC3;
  LODWORD(v20) = v76 ^ 0x1C390000;
  v77 = (v20 >> 16) - ((2 * (v20 >> 16)) & 0x80797E2);
  LODWORD(v7) = *(_DWORD *)&v50[4 * (v25 ^ 0xE9)];
  HIDWORD(v20) = v7 ^ 0x1A86;
  LODWORD(v20) = v7 ^ 0xBBED0000;
  v78 = LODWORD(STACK[0x368]) ^ (177734933 * v4 - ((355469866 * v4 + 354290566) & 0x4E402850) - 240182805) ^ (v43 - ((2 * v43 + 506934474) & 0x2512E03A) + 27593346) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x9A3E7136) - 853591909) ^ (v77 - 2080125967);
  LODWORD(v25) = *(_DWORD *)&v45[4 * (BYTE3(v25) ^ 6)];
  LODWORD(v38) = ((BYTE2(v38) ^ 6) - ((2 * (BYTE2(v38) ^ 6)) & 0x15A) - 1798534227) ^ 0xA48C8EAC;
  LODWORD(v38) = *(_DWORD *)&v46[4 * ((((2 * (_DWORD)v38) | 0x14F1D43A) - (_DWORD)v38 - 175696413) ^ 0x3A38EF17)];
  LODWORD(v15) = *(_DWORD *)&v47[4
                               * ((((v15 >> 8) & 0xE2 ^ 0x2A3) + ((v15 >> 8) & 0x1D) - 1) ^ 0x276)];
  HIDWORD(v20) = v15 ^ 0x4DC3;
  LODWORD(v20) = v15 ^ 0x1C390000;
  LODWORD(v15) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0x3652DDC4);
  LODWORD(v4) = *(_DWORD *)&v50[4 * (v42 ^ 0x2F)];
  HIDWORD(v20) = v4 ^ 0x1A86;
  LODWORD(v20) = v4 ^ 0xBBED0000;
  LODWORD(v15) = LODWORD(STACK[0x2F0]) ^ (177734933 * v25 - ((2602 * v25 + 920454) & 0xFCA7E) + 1251404546) ^ (v15 - 1691783454) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x7B2796) + 4035531) ^ (v38 - ((2 * v38 + 1580676298) & 0x5900A020) - 1684280715);
  LODWORD(v25) = *(_DWORD *)&v45[4 * (BYTE3(v24) ^ 0xA4)];
  LODWORD(v38) = ((v15 >> 7) & 0x1FE5EE ^ 0x10C486) + ((v15 >> 8) ^ 0xFD1790B4);
  LODWORD(v4) = *(_DWORD *)&v46[4 * (BYTE2(v15) ^ 0x62)];
  LODWORD(v43) = (((2 * (BYTE1(v78) ^ 0x96)) | 0x7D46CA40) - (BYTE1(v78) ^ 0x96) + 1096588000) ^ 0x1EAB652B;
  LODWORD(v43) = *(_DWORD *)&v47[4 * (((_DWORD)v43 - ((2 * (_DWORD)v43) & 0xD543B538) + 1788992156) ^ 0xCAA9DAB4)];
  HIDWORD(v20) = v43 ^ 0x4DC3;
  LODWORD(v20) = v43 ^ 0x1C390000;
  LODWORD(v43) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0xAC219ACA);
  LODWORD(v42) = *(_DWORD *)&v50[4 * (v16 ^ 0xFC)];
  HIDWORD(v20) = v42 ^ 0x1A86;
  LODWORD(v20) = v42 ^ 0xBBED0000;
  LODWORD(v42) = LODWORD(STACK[0x2EC]) ^ (177734933 * v25 - ((355469866 * v25 + 354290566) & 0x1B85AF62) - 665723532) ^ (v4 - ((2 * v4 - 566807350) & 0x9892F4BA) + 996480194) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x964FD1B0) + 1260906712) ^ (v43 + 1443941733);
  LODWORD(v25) = *(_DWORD *)&v45[4 * (BYTE3(v16) ^ 0xAA)];
  LODWORD(v4) = *(_DWORD *)&v46[4 * (BYTE2(v24) ^ 0xCA)];
  LODWORD(v43) = (((2 * ((_DWORD)v38 + 9)) & 0x176) + ((v38 + 9) ^ 0xFB9ABFBB) + 73744453) % 0x3C;
  LODWORD(v38) = v38 + (v43 ^ 0xFFFFFF20) - ((2 * v43) & 0x3E);
  LODWORD(v38) = (v43 ^ 0x6FF7EF7F) + 2 * v43 + ((2 * (v38 + 233)) & 0x1D6) + ((v38 - 23) ^ 0xFDCDCDEB);
  LODWORD(v38) = *(_DWORD *)&v47[4
                               * ((v38 - ((2 * (_DWORD)v38 + 611616044) & 0xF11CF46E) + 180927693) ^ 0x788E7AAD)];
  HIDWORD(v20) = v38 ^ 0x4DC3;
  LODWORD(v20) = v38 ^ 0x1C390000;
  LODWORD(v38) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0x660BA7A8);
  LODWORD(v43) = *(_DWORD *)&v50[4 * (v78 ^ 0x42)];
  HIDWORD(v20) = v43 ^ 0x1A86;
  LODWORD(v20) = v43 ^ 0xBBED0000;
  v79 = *(_DWORD *)&v45[4 * (HIBYTE(v78) ^ 0xC)];
  LODWORD(v25) = LODWORD(STACK[0x2E8]) ^ (v4 - 732670184 + (~(2 * v4 - 566807350) | 0x358E869B)) ^ (177734933 * v25
                                                                                                  - ((355469866 * v25 + 354290566) & 0x7CA67790)
                                                                                                  - 1998438005) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x906DAC1A) - 935930355);
  LODWORD(v4) = *(_DWORD *)&v47[4 * (BYTE1(v24) ^ 0x58)];
  v80 = v25 ^ (v38 - 1291463724);
  LODWORD(v43) = *(_DWORD *)&v50[4 * (v15 ^ 0x1E)];
  HIDWORD(v20) = v43 ^ 0x1A86;
  LODWORD(v20) = v43 ^ 0xBBED0000;
  LODWORD(v38) = *(_DWORD *)&v46[4
                               * (((WORD1(v16) & 0x91 ^ 0xD0C50D90) + (WORD1(v16) & 0x6E ^ 0x200009) - 1) ^ 0xD0E50D45)];
  LODWORD(v38) = LODWORD(STACK[0x2E4]) ^ WORD1(v4) ^ (177734933 * v79
                                                    - ((355469866 * v79 - 1793193082) & 0xC020F6AC)
                                                    - 1432387303) ^ (v38
                                                                   - ((2 * v38 - 566807350) & 0xBBC3E97A)
                                                                   - 855797982) ^ ((((_DWORD)v4 << 16) ^ 0x4DC30000)
                                                                                 - ((2
                                                                                   * (((_DWORD)v4 << 16) ^ 0x4DC30000)) & 0x65920000)
                                                                                 + 852051881) ^ ((v20 >> 16)
                                                                                               - ((2 * (v20 >> 16)) & 0x51A213C4)
                                                                                               - 1462695454);
  LODWORD(v15) = *(_DWORD *)&v45[4 * (BYTE3(v15) ^ 0x18)];
  LODWORD(v25) = *(_DWORD *)&v46[4 * (BYTE2(v78) ^ 0x21)];
  LODWORD(v43) = *(_DWORD *)&v47[4 * (BYTE1(v16) ^ 0xFE)];
  HIDWORD(v20) = v43 ^ 0x4DC3;
  LODWORD(v20) = v43 ^ 0x1C390000;
  LODWORD(v4) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0xB4F270FE);
  LODWORD(v24) = (((2 * v24) | 0xFFFFFE77) - v24 - 1595586364) ^ 0x7484E94;
  LODWORD(v24) = *(_DWORD *)&v50[4 * (((_DWORD)v24 - ((2 * (_DWORD)v24) & 0xC0A1A14) + 1314352394) ^ 0xE9FA647F)];
  HIDWORD(v20) = v24 ^ 0x1A86;
  LODWORD(v20) = v24 ^ 0xBBED0000;
  LODWORD(v25) = LODWORD(STACK[0x2E0]) ^ (v25 - ((2 * v25 + 1580676298) & 0x4BB47EB0) - 1795827267) ^ (v4 + 1517893759) ^ (177734933 * v15 - ((355469866 * v15 + 354290566) & 0x4849C342) - 290199708) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x2AD91FFA) - 1788047363);
  LODWORD(v24) = *(_DWORD *)&v45[4 * (BYTE3(v42) ^ 0x3C)];
  LODWORD(v4) = *(_DWORD *)&v46[4 * (BYTE2(v25) ^ 0xAE)];
  LODWORD(v15) = v4 - ((2 * v4 + 1580676298) & 0x520658B4);
  LODWORD(v4) = *(_DWORD *)&v47[4 * (BYTE1(v38) ^ 0x17)];
  HIDWORD(v20) = v4 ^ 0x4DC3;
  LODWORD(v20) = v4 ^ 0x1C390000;
  LODWORD(v4) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0x7FD87652);
  LODWORD(v43) = *(_DWORD *)&v50[4
                               * (((v80 ^ 0x14030083)
                                 + (v80 & 0xDC ^ 0x819CB35C)
                                 - ((v80 ^ 0x14030083) & STACK[0x2A4])) ^ 0x919FB3FF)];
  HIDWORD(v20) = v43 ^ 0x1A86;
  LODWORD(v20) = v43 ^ 0xBBED0000;
  LODWORD(v24) = LODWORD(STACK[0x2DC]) ^ (v15 - 1742813505) ^ (v4 - 1075037399) ^ (177734933 * v24
                                                                                 - ((355469866 * v24 - 1793193082) & 0xED86378E)
                                                                                 + 1095901578) ^ ((v20 >> 16)
                                                                                                - ((2 * (v20 >> 16)) & 0x867F62A2)
                                                                                                + 1128247633);
  LODWORD(v15) = *(_DWORD *)&v45[4 * (HIBYTE(v80) ^ 0x28)];
  LODWORD(v43) = *(_DWORD *)&v46[4 * (BYTE2(v42) ^ 0x37)];
  LODWORD(v4) = v43 - ((2 * v43 + 1580676298) & 0x561F0776);
  LODWORD(v43) = *(_DWORD *)&v47[4 * (BYTE1(v25) ^ 0x1E)];
  LODWORD(v16) = (((2 * (v38 ^ 0x2F)) & 0x28) - (v38 ^ 0x2F) + 1227797995) ^ 0xE13AE9C6;
  LODWORD(v16) = *(_DWORD *)&v50[4 * ((((2 * (_DWORD)v16) | 0x2D27CD46) - (_DWORD)v16 + 1768692061) ^ 0x3E87BA06)];
  HIDWORD(v20) = v16 ^ 0x1A86;
  LODWORD(v20) = v16 ^ 0xBBED0000;
  LODWORD(v15) = LODWORD(STACK[0x2D8]) ^ WORD1(v43) ^ (v4 + 439033376) ^ ((((_DWORD)v43 << 16) ^ 0x4DC30000)
                                                                        - ((2 * (((_DWORD)v43 << 16) ^ 0x4DC30000)) & 0x38040000)
                                                                        + 469898863) ^ ((v20 >> 16)
                                                                                      - ((2 * (v20 >> 16)) & 0x1B56950)
                                                                                      + 14333096) ^ (177734933 * v15 - ((355469866 * v15 - 1793193082) & 0xAAE8AEE8) + 537091383);
  LODWORD(v43) = *(_DWORD *)&v45[4 * (BYTE3(v38) ^ 0xE5)];
  LODWORD(v4) = *(_DWORD *)&v46[4
                              * ((592076862 - (BYTE2(v80) ^ 0x15 | 0x234A603E) + (BYTE2(v80) ^ 0x15 | 0x5CB59FC1)) ^ 0x5CB59F5D)];
  v81 = *(_DWORD *)&v47[4 * (BYTE1(v42) ^ 0xA5)];
  HIDWORD(v20) = v81 ^ 0x4DC3;
  LODWORD(v20) = v81 ^ 0x1C390000;
  v82 = (v20 >> 16) - ((2 * (v20 >> 16)) & 0xC915D820);
  LODWORD(v16) = *(_DWORD *)&v50[4 * (v25 ^ 0xC3)];
  HIDWORD(v20) = v16 ^ 0x1A86;
  LODWORD(v20) = v16 ^ 0xBBED0000;
  LODWORD(v43) = LODWORD(STACK[0x2D4]) ^ (177734933 * v43 - ((87034410 * v43 + 85855110) & 0xD1029FA) - 787014976) ^ (v82 + 1686826000) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0xEC845160) + 1984047280) ^ (v4 - ((2 * v4 - 566807350) & 0xC5EE47C4) + 1376960071);
  LODWORD(v25) = *(_DWORD *)&v45[4 * (BYTE3(v25) ^ 0x3B)];
  LODWORD(v38) = *(_DWORD *)&v46[4
                               * ((482018199 - (BYTE2(v38) ^ 0xE4 | 0x1CBB0397) + (BYTE2(v38) ^ 0xE4 | 0x2344FC68)) ^ 0x2344FC92)];
  LODWORD(v4) = ((2 * (BYTE1(v80) ^ 0xDF)) & 0x194) - (BYTE1(v80) ^ 0xDF) - 1945237707;
  LODWORD(v4) = *(_DWORD *)&v47[4
                              * (((v4 & 0x840FCD5E ^ 0x60D1CC4A)
                                + (v4 ^ 0x9E2E11B4)
                                - ((v4 ^ 0x9E2E11B4) & 0x1003CD5E)) ^ 0xE6FFDB8D)];
  HIDWORD(v20) = v4 ^ 0x4DC3;
  LODWORD(v20) = v4 ^ 0x1C390000;
  LODWORD(v42) = ((v42 & 0x8D ^ 0xB5C97504) + (v42 & 0x72 ^ 0x41) - 1) ^ 0xF5ADF5A7;
  LODWORD(v42) = *(_DWORD *)&v50[4 * (((_DWORD)v42 - (STACK[0x2A0] & (2 * (_DWORD)v42)) - 116910578) ^ 0xB96C96B6)];
  LODWORD(v4) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0x4E8D4B26);
  HIDWORD(v20) = v42 ^ 0x1A86;
  LODWORD(v20) = v42 ^ 0xBBED0000;
  LODWORD(v38) = LODWORD(STACK[0x2D0]) ^ (v38 - ((2 * v38 - 566807350) & 0xD8ADBD6A) - 613254886) ^ (177734933 * v25 - ((355469866 * v25 - 1793193082) & 0xA4C17D4A) + 485475432) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0x8DE0D536) + 1190161051) ^ (v4 + 658941331);
  LODWORD(v25) = *(_DWORD *)&v45[4 * (BYTE3(v24) ^ 0x7B)];
  LODWORD(v4) = *(_DWORD *)&v47[4 * (BYTE1(v43) ^ 0x7E)];
  HIDWORD(v20) = v4 ^ 0x4DC3;
  LODWORD(v20) = v4 ^ 0x1C390000;
  LODWORD(v42) = *(_DWORD *)&v46[4 * (BYTE2(v38) ^ 0xC4)];
  v83 = *(_DWORD *)&v50[4 * (v15 ^ 0x19)];
  LODWORD(v4) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0x4BECD2D2);
  HIDWORD(v20) = v83 ^ 0x1A86;
  LODWORD(v20) = v83 ^ 0xBBED0000;
  v84 = LODWORD(STACK[0x2CC]) ^ (177734933 * v25 - ((355469866 * v25 - 1793193082) & 0xCB2F8F52) - 1339634324) ^ (v4 - 1510577815) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0xE6AE8DFC) + 1935099646) ^ (v42 - ((2 * v42 - 566807350) & LODWORD(STACK[0x29C])) - 310619222);
  LODWORD(v25) = *(_DWORD *)&v45[4 * (BYTE3(v15) ^ 0x52)];
  LODWORD(v4) = *(_DWORD *)&v47[4 * (BYTE1(v38) ^ 0x22)];
  HIDWORD(v20) = v4 ^ 0x4DC3;
  LODWORD(v20) = v4 ^ 0x1C390000;
  LODWORD(v42) = *(_DWORD *)&v46[4 * (BYTE2(v24) ^ 0x4F)];
  v85 = *(_DWORD *)&v50[4
                      * ((114313741
                        - (v43 ^ 0xB9 | 0x6D04A0D)
                        + (v43 ^ 0xB9 | 0xF92FB5F2)) ^ 0xF92FB50B)];
  LODWORD(v4) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0x908D4E);
  HIDWORD(v20) = v85 ^ 0x1A86;
  LODWORD(v20) = v85 ^ 0xBBED0000;
  LODWORD(v42) = LODWORD(STACK[0x2C8]) ^ (177734933 * v25 - ((87034410 * v25 + 85855110) & 0xC58C7CC) - 793024087) ^ (v42 - ((2 * v42 + 238499018) & 0xB02EF0A) + 1956450794) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0xF5AE70CE) + 2060925031) ^ (v4 + 4736679);
  LODWORD(v4) = *(_DWORD *)&v45[4 * (BYTE3(v43) ^ 0x95)];
  LODWORD(v25) = *(_DWORD *)&v46[4 * ((((2 * (BYTE2(v15) ^ 0x4D)) & 0x10) - (BYTE2(v15) ^ 0x4D) + 1271) ^ 0x439)];
  v86 = *(_DWORD *)&v47[4 * (BYTE1(v24) ^ 0x26)];
  HIDWORD(v20) = v86 ^ 0x4DC3;
  LODWORD(v20) = v86 ^ 0x1C390000;
  v87 = (v20 >> 16) - ((2 * (v20 >> 16)) & 0xF063F4F2);
  LODWORD(v16) = *(_DWORD *)&v50[4 * (v38 ^ 0xB6)];
  HIDWORD(v20) = v16 ^ 0x1A86;
  LODWORD(v20) = v16 ^ 0xBBED0000;
  v88 = LODWORD(STACK[0x2C4]) ^ (177734933 * v4 - ((355469866 * v4 - 1793193082) & 0xB99E0EA4) - 1487008491) ^ (v25 - ((2 * v25 - 566807350) & 0xFE3BC86A) + 1849261722) ^ (v87 - 130942343) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0xB687F614) + 1531181834);
  LODWORD(v38) = *(_DWORD *)&v45[4 * (BYTE3(v38) ^ 0x19)];
  LODWORD(v25) = *(_DWORD *)&v46[4 * (BYTE2(v43) ^ 0x9D)];
  LODWORD(v15) = *(_DWORD *)&v47[4 * (BYTE1(v15) ^ 0xE3)];
  HIDWORD(v20) = v15 ^ 0x4DC3;
  LODWORD(v20) = v15 ^ 0x1C390000;
  LODWORD(v15) = (v20 >> 16) - ((2 * (v20 >> 16)) & 0xFBF7132A);
  LODWORD(v24) = *(_DWORD *)&v50[4 * (v24 ^ 0xD1)];
  HIDWORD(v20) = v24 ^ 0x1A86;
  LODWORD(v20) = v24 ^ 0xBBED0000;
  LODWORD(v38) = LODWORD(STACK[0x2C0]) ^ (v25 - ((2 * v25 + 1580676298) & 0x5CACD9A0) - 1653471435) ^ (v15 - 33846891) ^ ((v20 >> 16) - ((2 * (v20 >> 16)) & 0xCD1E248C) + 1720652358) ^ 0x3E555E90 ^ (177734933 * v38 - ((355469866 * v38 + 354290566) & 0x4750B094) - 298361331);
  LODWORD(v24) = ((2 * (v38 & 0xD5B5E011 ^ 0xD31C8305)) | 0x375B3CBC) - (v38 & 0xD5B5E011 ^ 0xD31C8305);
  LODWORD(v38) = ((v38 & 0x2A4A1FEE ^ 0xA0A0322)
                + (v38 & 0x481E88 ^ 0x51651C99)
                - ((v38 & 0x2A4A1FEE ^ 0xA0A0322) & 0x481E88)) ^ 0x526C9ED0;
  LODWORD(v45) = (((2 * v38) & 0x6848F82) - v38 + 2025699390) ^ 0x79BE3E1F | (v24 - 464363102) ^ 0x99A49D5A;
  LODWORD(STACK[0x3E0]) = v42;
  LODWORD(v38) = (-1853982764 - (v42 ^ 0x1F | 0x917E77D4) + (v42 ^ 0x1F | 0x6E81882B)) ^ 0x9D8DA408;
  LODWORD(v43) = 1290172413 - (v38 | 0x4CE677FD) + (v38 | 0xB3198802);
  v89 = *(_DWORD *)(v2 - 240);
  v90 = (char *)*(&off_10112C750 + (v89 ^ 0x5C4D)) - 182214115;
  LODWORD(v38) = *(_DWORD *)&v90[4 * (BYTE2(v84) ^ 0xE0)];
  v91 = -1671797055 * v38 - ((951373186 * v38 + 1595586478) & 0x716E5A74);
  LODWORD(v16) = (_DWORD)v45 - ((2 * (_DWORD)v45) & 0x380609C0) + 469959904;
  v92 = (char *)*(&off_10112C750 + v89 - 18991) - 1941507815;
  LODWORD(v25) = *(_DWORD *)&v92[4 * (BYTE1(v16) ^ 0xE)];
  v93 = 1471499800 * v38 - ((795515952 * v38 + 350625872) & 0x66D405B0);
  LODWORD(v15) = v25 - ((2 * v25 + 10153006) & 0xA3B04E) - 710980034;
  LODWORD(v25) = (v88 & 0xF5 ^ 0x45A3D4A5) + (v88 & 0xA ^ 9) - 1;
  LODWORD(v25) = (v25 & LODWORD(STACK[0x298]) ^ 0x28002400)
               + (v25 ^ 0x47BBDBE4)
               - ((v25 ^ 0x47BBDBE4) & LODWORD(STACK[0x294]));
  v94 = (v88 ^ 0x82049656) + (v88 & 0xA0 ^ 0x81801A0) - ((v88 ^ 0x82049656) & 0x16A0);
  v95 = (v25 ^ 0x2839222C) + (((v25 ^ 0x2F566F10) + 1) ^ 0x73DF57AF) + ((2 * ((v25 ^ 0x2F566F10) + 1)) & 0x67BEAF5E);
  LODWORD(v25) = ((_BYTE)v45 - ((2 * (_BYTE)v45) & 0xC0) - 32);
  LODWORD(v4) = ((((_BYTE)v45 - ((2 * (_BYTE)v45) & 0xC0) - 32) & 0x92) + (v25 ^ 0xFFFFFFF2) + (v25 | 0x3A5EA36D) + 1) ^ 0x6AEAA289;
  LODWORD(v39) = v4 - ((2 * v4) & 0xA1E3CCCC);
  v96 = (char *)*(&off_10112C750 + v89 - 18083) - 1988253939;
  LODWORD(STACK[0x3DC]) = HIBYTE(v84);
  LODWORD(STACK[0x3D0]) = *(_DWORD *)&v96[4 * (HIBYTE(v84) ^ 0xE0)];
  LODWORD(v4) = *(_DWORD *)&v96[4 * (BYTE3(v42) ^ 0x89)];
  LODWORD(STACK[0x3C8]) = HIBYTE(v88);
  LODWORD(v7) = *(_DWORD *)&v96[4 * (HIBYTE(v88) ^ 0x47)];
  LODWORD(v50) = BYTE3(v16);
  LODWORD(STACK[0x3C4]) = *(_DWORD *)&v96[4 * (BYTE3(v16) ^ 9)];
  LODWORD(v47) = *(_DWORD *)&v90[4 * (BYTE2(v16) ^ 8)];
  v97 = *(_DWORD *)&v90[4 * (BYTE2(v42) ^ 0xE1)];
  v98 = *(_DWORD *)&v90[4 * (BYTE2(v88) ^ 0x1A)];
  LODWORD(STACK[0x3CC]) = *(_DWORD *)&v92[4 * (BYTE1(v88) ^ 0x7E)];
  LODWORD(v96) = *(_DWORD *)&v92[4 * (BYTE1(v84) ^ 0x45)];
  LODWORD(v16) = *(_DWORD *)&v92[4 * (BYTE1(v42) ^ 0xB0)];
  v99 = (char *)*(&off_10112C750 + (v89 ^ 0x5F70)) - 916925542;
  v100 = *(_DWORD *)&v99[4 * (v43 ^ 0x4015A4C8)];
  LODWORD(v90) = *(_DWORD *)&v99[4 * (v94 ^ 0x8A1C8119)];
  LODWORD(v43) = *(_DWORD *)&v99[4 * (((_DWORD)v39 - 789453210) ^ 0x8045E78D)];
  v101 = *(_DWORD *)&v99[4
                       * (((v84 ^ 0x14100008)
                         - ((2 * (v84 ^ 0x14100008)) & 0x2820004A)
                         + 399877669) ^ 0x3C5A617)];
  LODWORD(v15) = LODWORD(STACK[0x2AC]) ^ LODWORD(STACK[0x2A8]) ^ LODWORD(STACK[0x488]) ^ v4 ^ v90 ^ (v91 - 398161647) ^ (v93 + 2111640327) ^ (v95 - 1944016815 - ((2 * (v95 - 1944016815)) & 0x2E942220) + 390730000) ^ v15 ^ (((16 * v15) ^ 0x51D8270) - ((2 * ((16 * v15) ^ 0x51D8270)) & 0x2F66C1C0) + 397631724) ^ ((((_DWORD)v15 << 7) ^ 0x28EC1380) - ((2 * (((_DWORD)v15 << 7) ^ 0x28EC1380)) & 0x38891000) + 474253393);
  v102 = (char *)*(&off_10112C750 + (v89 ^ 0x434D)) - 1075199715;
  LODWORD(v90) = ((v15 >> 8) ^ 0x15) - 109;
  LODWORD(v99) = (v90 ^ 0x71) + v102[BYTE1(v15) ^ 0x1ALL];
  HIDWORD(v20) = (_DWORD)v99 + 1;
  LODWORD(v20) = ((((2 * (_DWORD)v90) & 0xFFFFFFE3) + (_DWORD)v99) << 24) + 788529152;
  LODWORD(v99) = ((v20 >> 25) - ((2 * (v20 >> 25)) & 0xFFFFFFB2) + 97) ^ 2;
  HIDWORD(v20) = ((_DWORD)v99 + 120) ^ 0x6B;
  LODWORD(v20) = (7 - (_DWORD)v99) << 24;
  *(_BYTE *)(((LODWORD(STACK[0x3E8]) - 1577319015 - (STACK[0x3EC] & 0x43F80B32)) ^ 0xBFFFCCFAFE117022)
           + ((2 * ((LODWORD(STACK[0x3E8]) - 1577319015 - (STACK[0x3EC] & 0x43F80B32)) ^ 0xA1FC0599)) & 0xBFDAEB76)
           + *(_QWORD *)(v2 - 232)
           + 0x40003305A0128A45) = ((v20 >> 31) - ((2 * (v20 >> 31)) & 0xC) - 122) ^ 0x2A;
  LODWORD(v4) = (_DWORD)v96 - ((2 * (_DWORD)v96 + 714796078) & 0x2C725E0A) - 343497444;
  LODWORD(v25) = (v25 ^ 0xC9) + (v45 & 3 ^ 0x21409902) - ((v25 ^ 0xC9) & 3);
  LODWORD(v25) = (v25 ^ 0x21409946)
               + (((v25 ^ 0x262FD47A) + 1) ^ 0x4DB8D6B9)
               + ((2 * ((v25 ^ 0x262FD47A) + 1)) & 0x1B71AD72)
               - 1303959225;
  LODWORD(v25) = LODWORD(STACK[0x364]) ^ LODWORD(STACK[0x48C]) ^ v7 ^ (-1671797055 * v97
                                                                     - ((951373186 * v97 + 1595586478) & 0x5F0D4244)
                                                                     - 552338183) ^ (1471499800 * v97
                                                                                   - ((795515952 * v97 + 350625872) & 0x32841EF0)
                                                                                   + 1672814497) ^ v4 ^ (((16 * v4) ^ 0x6392F050) - ((2 * ((16 * v4) ^ 0x6392F050)) & 0x4530DA60) - 1567068878) ^ ((((_DWORD)v4 << 7) ^ 0x1C978280) - ((2 * (((_DWORD)v4 << 7) ^ 0x1C978280)) & 0xA3A7E100) - 774639432) ^ (v25 - ((2 * v25) & 0x1131A3CE) + 1217974759) ^ v43;
  v103 = (char *)*(&off_10112C750 + (v89 ^ 0x5B3F)) - 473607375;
  LODWORD(v99) = v103[BYTE3(v25) ^ 0x45];
  LOBYTE(v99) = v99 ^ (v99 >> 3) ^ ((v103[BYTE3(v25) ^ 0x45] >> 6) | 0xF0);
  LOBYTE(v90) = ((2 * (v99 & 0x7E ^ 0x52)) & 0xEF) - (v99 & 0x7E ^ 0x52) - 119;
  *(_BYTE *)(STACK[0x400] + 0x50108064CC633663) = (v99 & 0x81 | 0x72) ^ 0xB1 ^ ((v90 ^ 0x83)
                                                                                                 - (v90 & 0x10)
                                                                                                 + (v90 & 0x11 ^ 0x10));
  v104 = (char *)*(&off_10112C750 + (v89 ^ 0x419B)) - 1773329131;
  LOBYTE(v99) = v104[((BYTE3(v42) ^ 0x482B142B ^ v15)
                    - ((2 * (BYTE3(v42) ^ 0x482B142B ^ v15)) & 0x801408AA)
                    + 1704600661) ^ 0x2DB130D9];
  *(_BYTE *)(((LODWORD(STACK[0x424]) + 2119743808 - (STACK[0x428] & 0xFCB17280)) ^ 0xF135C7EF01A74DDDLL)
           + ((2 * ((LODWORD(STACK[0x424]) + 2119743808 - (STACK[0x428] & 0xFCB17280)) ^ 0x7E58B940)) & 0xFFFFE93A)
           + *(_QWORD *)(v2 - 232)
           + 0xECA381080000B63) = ((_BYTE)v99 - ((2 * (_BYTE)v99 - 102) & 0xD6) + 56) ^ 0x98;
  LODWORD(v4) = v16 - ((2 * v16 - 1432687570) & 0x98B77A7E) - 1582746794;
  LODWORD(v7) = ((v84 & 0x92 ^ 0x8A7BD283) - 1) & 0x88008292 | v84 & 0x6D;
  LODWORD(v7) = (v7 ^ 0x88008236)
              + (((v7 ^ 0x8F6FCF0A) + 1) ^ 0xFFEF77FA)
              + ((2 * ((v7 ^ 0x8F6FCF0A) + 1)) & 0x1EDEAFF4)
              + 1083398;
  v105 = LODWORD(STACK[0x2B4]) ^ LODWORD(STACK[0x2B0]) ^ *(_DWORD *)(v2 - 256) ^ (v7
                                                                                - ((2 * v7) & 0x48C89F6E)
                                                                                - 463188041) ^ v101 ^ (-1671797055 * v98 - ((414502274 * v98 + 521844654) & 0x1E27B92A) + 1050753132) ^ (1471499800 * v98 - ((258645040 * v98 + 350625872) & 0x1B201770) - 670884894) ^ v4 ^ (((16 * v4) ^ 0xC5BBD3F0) - ((2 * ((16 * v4) ^ 0xC5BBD3F0)) & 0x9CBA20) + 5135647) ^ ((((_DWORD)v4 << 7) ^ 0x2DDE9F80) - ((2 * (((_DWORD)v4 << 7) ^ 0x2DDE9F80)) & 0xE9E6CC00) - 185375211) ^ LODWORD(STACK[0x3C4]);
  v106 = v105 ^ 0x1401212;
  v107 = (char *)*(&off_10112C750 + v89 - 19126) - 875006270;
  *(_BYTE *)(STACK[0x3F0] - 0x3DF5FE79FBDB3A9FLL) = v107[(((2 * (BYTE2(v106) ^ 0xEB)) & 0x1EA)
                                                        - (BYTE2(v106) ^ 0xEBu)
                                                        + 1034) ^ 0x442] ^ ((BYTE2(v106) ^ 0x28)
                                                                            - ((2 * (BYTE2(v106) ^ 0x28) + 24) & 0x46)
                                                                            + 111) ^ 0xD5;
  LODWORD(v4) = ((2 * (BYTE2(v15) ^ 0xB)) | 0x3FF626EC) - (BYTE2(v15) ^ 0xB) + 1610935434;
  *(_BYTE *)(((LODWORD(STACK[0x420]) - 199638459 + (STACK[0x41C] & 0xE8338480 ^ 0xFFFFFFF5) + 1) ^ 0xD773F6D749E63DDELL)
           + *(_QWORD *)(v2 - 232)
           + ((2 * ((LODWORD(STACK[0x420]) - 199638459 + (STACK[0x41C] & 0xE8338480 ^ 0xFFFFFFF5) + 1) ^ 0xF419C245)) & 0x17BFFFF36)
           + 0x288C092842000065) = ((BYTE2(v15) ^ 0xEA)
                                    - 2 * (((BYTE2(v15) ^ 0xEA) + 12) & 0x37 ^ BYTE2(v15) & 1)
                                    - 126) ^ v107[((v4 & 0x174B13FD ^ 0x84054AA9) + (v4 & 0x8B00402 ^ 0x8900003) - 1) ^ 0x936E59B7] ^ 0x81;
  LODWORD(v90) = ((v25 >> 8) ^ 0xFFFFFFF0)
               + v102[(((2 * (BYTE1(v25) ^ 0xCC)) | 0x300F7232) - (BYTE1(v25) ^ 0xCCu) + 1744324327) ^ 0x9807B92ALL];
  *(_BYTE *)(STACK[0x438] + 0x42600A040048A21) = ((_BYTE)v90 - ((2 * (_BYTE)v90 + 102) & 0xBC) + 17) ^ 0xE;
  LOBYTE(v90) = v104[v50 ^ 0x54221FDA ^ (((2 * (v105 ^ 0x85)) & 0x174)
                                                     - (v105 ^ 0x85)
                                                     + 1453727557) & 0x5423FFFF];
  *(_BYTE *)(STACK[0x3F8] + 0x1904D0026291051DLL) = ((_BYTE)v90 - ((2 * (_BYTE)v90 + 26) & 0x22) + 94) ^ 0xFB;
  *(_BYTE *)(STACK[0x430] - 0x57FFFE8DD7CFDBDFLL) = v107[((BYTE2(v25) ^ 0x298CB3C5)
                                                        + (WORD1(v25) & 0xA2 ^ 0x80724C22)
                                                        - ((BYTE2(v25) ^ 0x298CB3C5) & 0x200C91A2)) ^ 0x89F26E20] ^ ((BYTE2(v25) ^ 0xCC) - ((2 * (BYTE2(v25) ^ 0xCC) + 24) & 0x77) - 121) ^ 0xCD;
  v108 = *(_QWORD *)(v2 - 232);
  LODWORD(v25) = (((v25 ^ LODWORD(STACK[0x3C8])) & 5 ^ 0x5156B601)
                + ((v25 ^ LODWORD(STACK[0x3C8])) & 0xFA ^ 0x8B)
                - 1) ^ 0x5097B201;
  LOBYTE(v25) = v104[(((2 * (_DWORD)v25) | 0x6B645242) - v25 - 900868385) ^ 0x34732DBDLL];
  *(_BYTE *)(((LODWORD(STACK[0x40C]) + 1985821203 + (STACK[0x408] & 0xECBA7420 ^ 0xFFFFFFF9) + 1) ^ 0x77C6B7FE0DA05DEDLL)
           + ((2 * ((LODWORD(STACK[0x40C]) + 1985821203 + (STACK[0x408] & 0xECBA7420 ^ 0xFFFFFFF9) + 1) ^ 0x765D3A13)) & 0xF7FACFFC)
           + v108
           - 0x77C6B7FE7BFD67FELL) = (v25 - ((2 * v25 - 102) & 0x83) + 14) ^ 0x52;
  LODWORD(v90) = v103[BYTE3(v15) ^ 0x12];
  *(_BYTE *)(STACK[0x410] - 0x7FDCEFF7CFEFFFBCLL) = v90 ^ (v90 >> 3) ^ ((v103[BYTE3(v15) ^ 0x12] >> 6) | 0xC0) ^ 0x37;
  LODWORD(v25) = LODWORD(STACK[0x3CC]) - ((2 * LODWORD(STACK[0x3CC]) - 1432687570) & 0xF3CC6220) - 818698457;
  LODWORD(v92) = (-918394175 - (LODWORD(STACK[0x3E0]) ^ 0x39 | 0xC9426AC1) + (LODWORD(STACK[0x3E0]) ^ 0x39 | 0x36BD953E)) ^ 0x37BE553F;
  LODWORD(v92) = (((_DWORD)v92 - ((2 * (_DWORD)v92) & 0x21446978) - 1868417860) ^ 0x91A1F4FC)
               + (((((_DWORD)v92 - ((2 * (_DWORD)v92) & 0x21446978) - 1868417860) ^ 0x96CEB9C0) + 1) ^ 0x73F5ECFE)
               + ((2 * ((((_DWORD)v92 - ((2 * (_DWORD)v92) & 0x21446978) - 1868417860) ^ 0x96CEB9C0) + 1)) & 0x67EBD9FC)
               - 1945496830;
  LODWORD(v90) = LODWORD(STACK[0x2BC]) ^ LODWORD(STACK[0x2B8]) ^ *(_DWORD *)(v2 - 248) ^ LODWORD(STACK[0x3DC]) ^ LODWORD(STACK[0x3D0]) ^ v100 ^ (-1671797055 * (_DWORD)v47 - ((951373186 * (_DWORD)v47 + 1595586478) & 0xA38B583E) - 2125264906) ^ (1471499800 * (_DWORD)v47 - ((-1351967696 * (_DWORD)v47 - 1796857776) & 0x87CE0D20) + 240785080) ^ v25 ^ ((((_DWORD)v25 << 7) ^ 0xF3188800) - ((2 * (((_DWORD)v25 << 7) ^ 0xF3188800)) & 0xD2C0CC00) + 1767925363) ^ (((16 * v25) ^ 0x9E631100) - 2 * (((16 * v25) ^ 0x9E631100) & 0x446E51D0 ^ (16 * v25) & 0x10) - 999403066) ^ ((_DWORD)v92 - ((2 * (_DWORD)v92) & 0x62DDA714) - 244395126);
  LOBYTE(v15) = v104[((v90 & 0x6C ^ 0x212D) + (v90 & 0x93u) - 1) ^ 0x2185];
  LODWORD(v25) = LODWORD(STACK[0x464]) + 963465186 + (STACK[0x458] & 0x72DA9FC0 ^ 0xFFFFFFFB);
  *(_BYTE *)(STACK[0x470] + 0x100B23081A420341) = (v15 - ((2 * v15 + 26) & 0x60) + 125) ^ 4;
  LODWORD(v15) = (((v90 >> 8) & 0x51 ^ 0x596F47EF) - ((v90 >> 8) & 0xAE)) ^ 0xDD0D40AD;
  LODWORD(v15) = ((((v90 >> 8) ^ 0x3B) - 109) ^ 0x7F)
               + 2 * (((v90 >> 8) ^ 0x3B) - 109)
               + v102[(((2 * (_DWORD)v15) | 0x85842B4) - v15 - 70000986) ^ 0x804E262CLL];
  *(_BYTE *)(((v25 + 1) ^ 0x467BF1FFC69EB40DLL)
           + v108
           + ((2 * (((_DWORD)v25 + 1) ^ 0x396D4FE2u)) & 0x1FFE7F7DELL)
           - 0x467BF1FFFFF3FBEFLL) = (v15 - ((2 * v15 + 66) & 0x8F) + 104) ^ 0x37;
  LODWORD(v15) = ((~(2 * ((2 * (v90 >> 16)) ^ 0x1692E)) + ((2 * (v90 >> 16)) ^ 0x1692E)) & 0x98 ^ 0x88)
               + ((v90 >> 16) ^ 0xB440);
  *(_BYTE *)(STACK[0x440] + 0x4010208002806141) = (((2 * v15) & 0xEE)
                                                   + (v15 ^ 0x77)
                                                   - ((2 * (((2 * v15) & 0xEE) + (v15 ^ 0x77)) + 18) & 0xC3)
                                                   + 106) ^ v107[((BYTE2(v90) ^ 0xC404009F)
                                                                + ((v90 >> 16) & 0xAA ^ 0x2143CA20)
                                                                - ((BYTE2(v90) ^ 0xC404009F) & 0x840000AA)) ^ 0x6147CA32] ^ 0x1E;
  LODWORD(v15) = ((v106 >> 8) & 0x74) + (BYTE1(v106) ^ 0xFFFFFF7F) + (BYTE1(v106) | 0x6DEAAD8B) + 1;
  LOBYTE(v15) = (v15 & 0x63 ^ 0x60) + (v15 ^ 0x8B) - ((v15 ^ 0x8B) & 0x63);
  LOBYTE(v15) = (v15 ^ 0x37) + 30 - 2 * (((v15 ^ 0x37) - 96) & 0x1E ^ v15 & 8) - 104;
  LOBYTE(v4) = ((2 * v15) ^ 0x2C) - ((2 * ((2 * v15) ^ 0x2C)) & 0xE4) + 115;
  LOBYTE(v15) = (v15 ^ 0xE5) + (v4 & 0xE6 ^ 0x35) + ((2 * v4) & 0x8C ^ 0x84) - 87;
  LOBYTE(v15) = ((2 * v15) & 0xFC) + (v15 ^ 0xFE) + 2;
  LOBYTE(v107) = (v15 ^ 0x7B)
               + v102[(-350586003 - (BYTE1(v106) ^ 0x100D0904 | 0xEB1A7B6D) + (BYTE1(v106) ^ 0x100D0904 | 0x14E58492)) ^ 0x4E88D4DLL]
               + ((2 * v15) & 0xF7);
  *(_BYTE *)(((LODWORD(STACK[0x448]) + 1318405878 - (STACK[0x450] & 0x9D2A8DEC)) ^ 0x29DB7FDFB14C3E28)
           + v108
           + ((2 * ((LODWORD(STACK[0x448]) + 1318405878 - (STACK[0x450] & 0x9D2A8DEC)) ^ 0x4E9546F6)) & 0x1FFB2F1BCLL)
           - 0x29DB7FDFFFD978DELL) = ((_BYTE)v107 - ((2 * (_BYTE)v107 + 10) & 0x2E) + 60) ^ 0x3D;
  LODWORD(v107) = v103[(v90 >> 24) ^ 0xDFLL];
  *(_BYTE *)(STACK[0x468] + 0x102432012C201A29) = v107 ^ (v107 >> 6) ^ (v107 >> 3) ^ 0x83;
  LODWORD(v107) = v103[HIBYTE(v105) ^ 0x43];
  *(_BYTE *)(STACK[0x480] - 0x4F76E6B5F7B8AFB7) = v107 ^ 0xAD ^ (v107 >> 3) ^ (((v107 ^ 0xAD) >> 6) | 0xA4) ^ 0xD1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x3A0]
                                        + 8
                                        * ((50041
                                          * (((STACK[0x478]
                                             - 1676483073
                                             - ((2 * STACK[0x478] + 32) & 0x3825CBFE)
                                             + 16) ^ 0x9C12E5FF) < LODWORD(STACK[0x360]))) ^ v89))
                            - 8))();
}

uint64_t sub_10016193C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x3B0];
  *(_DWORD *)(v1 - 256) = LODWORD(STACK[0x3A8]) ^ (10705 * (STACK[0x3B0] ^ 0x26D4)) ^ 0xB6D7AF98;
  LODWORD(STACK[0x488]) = LODWORD(STACK[0x3AC]) ^ 0x558702DF;
  *(_DWORD *)(v1 - 248) = LODWORD(STACK[0x3C0]) ^ 0x796FADAD;
  LODWORD(STACK[0x48C]) = LODWORD(STACK[0x3BC]) ^ 0xDCA3ADE1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (int)v2) - 12))();
}

void sub_1001619B4(uint64_t a1)
{
  int v1;
  uint64_t v2;
  _DWORD v3[2];
  char *v4;

  v1 = *(_DWORD *)(a1 + 12) - 1167911989 * (a1 ^ 0x2EAADF93);
  v2 = (v1 + 184683826) & 0xAF8C5DEF;
  v4 = (char *)&v3[-5737]
     + (*(_QWORD *)(a1 + 40) & 0xB1A0D2388A92EDE4)
     + (~*(_QWORD *)(a1 + 40) | 0x4E5F2DC7756D121BLL)
     + (*(_QWORD *)(a1 + 40) ^ 0x4E5F2DC7756D121BLL)
     + v2
     - 2;
  v3[0] = (v4 | 0x64783192) - (v4 & 0x64783192) + ((2 * (_DWORD)v4) | 0x370F9CDA) + 1;
  __asm { BR              X0 }
}

uint64_t sub_100161B28()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  _BOOL4 v9;

  v7 = (((v1 & (v0 ^ 0x75ADED5E)) + 346301761) & 0x8A5212A1 | (2 * (v1 & 1)) | (575752744 - (v1 & v2)) & v2)
     + (v1 & 0x2485484A);
  v9 = *(_QWORD *)(v4 + 8) == v4 || v7 > 0x13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((v9 * v5) ^ v3)) - 4))();
}

uint64_t sub_100161BCC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(v0 ^ 0xFFFFCE76 ^ (38171
                                                                 * ((int)((v0 - 6358 + ((v0 + 207403512) & 0xF3A35ED9)) ^ (4 - v0) & v0) <= v0))))
                            - 12))();
}

uint64_t sub_100161C4C(int a1)
{
  uint64_t v1;

  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (a1 - 1165081802))
                                                                             - 12))(a1 ^ 0x4571FC8Eu, -153252991, 4294960941, 50, 1);
}

uint64_t sub_100161CAC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v5 != 0) * a4) ^ v4)) - 12))();
}

uint64_t sub_100161D20@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  _BOOL4 v20;
  _BOOL4 v21;
  uint64_t (*v22)(_QWORD);

  v9 = *(_DWORD *)(v7 + 24) + v2;
  v10 = v3 + v1;
  v11 = *(_QWORD *)(v5 + 8 * (v4 - 3592));
  v12 = *(unsigned int *)(v11 - 634675579);
  v13 = v10 ^ v1;
  v14 = *(_QWORD *)(v5 + 8 * (v4 - 3852)) + 4 * v12;
  v15 = *(_DWORD *)(v14 - 1841666295);
  v16 = v13 + v13 * v15;
  if (v13 == (v4 ^ 0x18D1))
    v17 = *(_DWORD *)(v14 - 1841666295);
  else
    v17 = 0;
  *(_DWORD *)(v14 - 1841666295) = (v16 + v17) * v15;
  *(_DWORD *)(v11 - 634675579) = ((int)v12 + 1) % ((v4 + 5901) ^ 0x2FD8u);
  v18 = (a1 ^ 0x71D7E4DFFAFADBDDLL) - 0x71D7E4DF2466CE7CLL + ((2 * a1) & 0xE3AFC9BFF5F5B7BALL);
  v19 = (v6 ^ 0xF8FFED79DBB33B3BLL) + 0x7001286FAE0D226 + ((2 * v6) & 0xF1FFDAF3B7667676);
  v20 = v18 < 0xD6940D61;
  v21 = v18 > v19;
  if (v20 != v19 < 0xD6940D61)
    v21 = v20;
  v22 = (uint64_t (*)(_QWORD))(*(_QWORD *)(v8 + 8 * (v4 ^ (7 * !v21))) - 4);
  STACK[0x2B0] = v8;
  STACK[0x298] = v6;
  return v22(2 * (v9 - ((2 * v9 + 1113380866) & 0x6485A0D6u) - 1821295508));
}

uint64_t sub_100161F14(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((46659
                                          * ((a1 & 0xFCF3F676 ^ 0x6481A056) + (v2 ^ 0x4C3B2B50) + 1035988735 != ((617 * (v1 ^ 0x18DC) - 244035415) & 0xE8BB5E1 ^ 0x3C39CFDA))) ^ v1 ^ 0x370F))
                            - 4))();
}

uint64_t sub_100161FA4(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((13 * (a1 + v2 + ((v1 + 1165086512) ^ 0x44F7EA40u) < 8)) ^ v1))
                            - 4))();
}

uint64_t sub_100161FF8(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((27 * (a4 + ((3379 * (a2 ^ 0x9DA2)) ^ 0x186454Bu) >= (a2 ^ a3 ^ 0xBA8E1175))) ^ a2)))();
}

uint64_t sub_100162048@<X0>(int a1@<W0>, int a2@<W4>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v15;
  unint64_t v16;
  int v18;

  v9 = (a1 + v6 + 25560260) + v7;
  v10 = ((_BYTE)a1 + (_BYTE)v6 - 60) & 0xF;
  v11 = v10 + v5 - v9;
  v12 = (v10 | v3) - v9;
  v13 = (v10 | v4) - v9;
  v15 = (unint64_t)(a3 - v7) > 0xF
     && v11 >= ((a2 - 3511) ^ 0x3458uLL)
     && (unint64_t)(v12 + 1) > 0xF;
  v16 = v13 + 5;
  v18 = v15 && v16 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((1023 * v18) ^ a2)) - 12))();
}

uint64_t sub_1001620D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  int v7;

  v7 = (v4 - 674051153) & 0x282D99FB;
  LODWORD(STACK[0x37C]) = v7;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                                         + 8
                                                                                         * (((((v5 < 0x10) ^ (11 * (v4 ^ 0xA7))) & 1)
                                                                                           * (v7 ^ 0xFEF8)) ^ v4))
                                                                             - 8))(a1, a2, a3, a4, 0);
}

uint64_t sub_100162134(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  char v7;
  uint64_t v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;

  v9.n128_u64[0] = (v7 + 3) & 0xF;
  v9.n128_u64[1] = (v7 + 2) & 0xF;
  v10.n128_u64[0] = (v7 + 1) & 0xF;
  v10.n128_u64[1] = v7 & 0xF;
  v11.n128_u64[0] = (v7 - 1) & 0xF;
  v11.n128_u64[1] = (v7 + 14) & 0xF;
  v12.n128_u64[0] = (v7 + 13) & 0xF;
  v12.n128_u64[1] = (v7 + 12) & 0xF;
  v13.n128_u64[0] = (v7 + 11) & 0xF;
  v13.n128_u64[1] = (v7 + 10) & 0xF;
  v14.n128_u64[0] = (v7 + 9) & 0xF;
  v14.n128_u64[1] = (v7 + 8) & 0xF;
  v15.n128_u64[0] = (v7 + 7) & 0xF;
  v15.n128_u64[1] = (v7 + 6) & 0xF;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v8 + 8 * a7)
                                                                                                 - 4))(a1, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_10016222C(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  int v22;
  unsigned __int8 v23;
  int v24;
  uint64_t v25;
  int8x16_t v26;
  int8x16_t v27;
  uint64_t v28;
  int8x16_t v30;
  int8x16_t v31;

  v28 = v20 & 0xF;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v26).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v26).u64[0];
  v31 = vrev64q_s8(vmulq_s8(v30, v27));
  *(int8x16_t *)(v19 + v20) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v18 + v28 - 15), *(int8x16_t *)(v15 + v20)), veorq_s8(*(int8x16_t *)(v28 + v16 - 14), *(int8x16_t *)(v28 + v17 - 10))), vextq_s8(v31, v31, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(v25 + 8 * ((((v23 ^ ((v22 | v21) < 0)) & 1) * v24) ^ a14)) - 4))();
}

uint64_t sub_1001622B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(v9
                              + 8 * (int)((((((a8 - 11486) | 0x1040) ^ 0xFFFFEE7D) + a8 - 11014) * (v8 == a5)) ^ a8)))();
}

uint64_t sub_100162300(uint64_t a1, uint64_t a2, unint64_t a3, unsigned int a4)
{
  int v4;
  char v5;
  uint64_t v6;

  LODWORD(STACK[0x37C]) = v4 + 26027;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((v4 + 26027) ^ 0x99D4) * ((v5 & 8) == 0)) | v4)) - (v4 ^ a4 ^ a3)))();
}

uint64_t sub_10016233C(int a1, int a2, uint64_t a3, double a4, __n128 a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  uint64_t (*v15)(_QWORD, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, __n128, __n128);

  LODWORD(STACK[0x378]) = v8;
  v13 = v8 & 0xFFFFFFF8;
  v14 = STACK[0x37C];
  v15 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, __n128, __n128))(*(_QWORD *)(v12 + 8 * SLODWORD(STACK[0x37C])) - 4);
  LODWORD(STACK[0x374]) = v13;
  LODWORD(STACK[0x370]) = (v14 + 1926620284) & 0x8D29B5FF;
  a5.n128_u16[0] = -21075;
  a5.n128_u8[2] = -83;
  a5.n128_u8[3] = -83;
  a5.n128_u8[4] = -83;
  a5.n128_u8[5] = -83;
  a5.n128_u8[6] = -83;
  a5.n128_u8[7] = -83;
  return v15((v9 + v10 + a1 + 15), (v10 + a1 + a2), a3, v11 - 7, (-8 - a7), -v13, v7 - v13, (__n128)xmmword_100DF7490, a5);
}

uint64_t sub_1001623C4(char a1, int a2, int8x16_t a3, int8x8_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  int8x16x4_t v22;

  v19 = (a2 + a7 + 8);
  v22.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a7 + 8) & 0xF;
  v22.val[0].i64[1] = (v17 + (_BYTE)a7 + 8) & 0xF;
  v22.val[1].i64[0] = (v16 + (_BYTE)a7 + 8) & 0xF;
  v22.val[1].i64[1] = (v15 + (_BYTE)a7 + 8) & 0xF;
  v20 = STACK[0x2B0];
  v22.val[2].i64[0] = (v14 + (_BYTE)a7 + v18 + 8) & 0xF;
  v22.val[2].i64[1] = (v12 + (_BYTE)a7 + 8) & 0xF;
  v22.val[3].i64[0] = (a1 + (_BYTE)a7 + 8) & 0xF;
  v22.val[3].i64[1] = (v13 + (_BYTE)a7 + 8) & 0xF;
  *(int8x8_t *)(a6 + v19) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v11 + (v19 & 0xF) - 7), *(int8x8_t *)(v8 + v19)), veor_s8(*(int8x8_t *)((v19 & 0xF) + v9 - 6), *(int8x8_t *)((v19 & 0xF) + v10 - 2))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v22, a3), a4)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * ((1014 * (a8 == a7)) ^ LODWORD(STACK[0x37C]))) - 4))();
}

uint64_t sub_1001624BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5
                                                                                                  + 8 * (((((LODWORD(STACK[0x370]) - 806110576) & 0x757DFF85) - 1165071474) * (LODWORD(STACK[0x378]) == LODWORD(STACK[0x374]))) ^ LODWORD(STACK[0x370])))
                                                                                      - 8))(a1, a2, a3, a4, a5, (LODWORD(STACK[0x370]) - 3727));
}

uint64_t sub_100162528()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (v0 - 1165066291)) - 8))(1010428474, 46);
}

uint64_t sub_100162570@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W6>, uint64_t a4@<X8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = (a3 + v9);
  *(_BYTE *)(v13 + v15) = *(_BYTE *)(v7 + (v15 & 0xF)) ^ *(_BYTE *)(a4 + v15) ^ *(_BYTE *)((v12 + v4)
                                                                                         + (unint64_t)(v15 & 0xF)
                                                                                         + v5
                                                                                         + v10) ^ *(_BYTE *)((v15 & 0xF) + v6 + 5) ^ ((v15 & 0xF) * v11);
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * (((a3 - 1 == a1) * a2) ^ v8)) - 8))();
}

uint64_t sub_1001625D0(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((8158
                                          * ((v2 ^ 0x907C3187)
                                           + 23023711
                                           + ((((v1 + 4372) | 0x1001) ^ ((v1 - 3038) | 0x1E0) ^ 0x447DB6CB) & a1 ^ 0x440580D0) != 597570123)) ^ v1))
                            - 4))();
}

uint64_t sub_100162654@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = v7 < v1;
  *(_BYTE *)(v8 + (v6 - 1335714029)) = *(_BYTE *)(v4 + ((v6 - 1335714029) & 0xFLL)) ^ *(_BYTE *)(a1 + (v6 - 1335714029)) ^ *(_BYTE *)(((v6 - 1335714029) & 0xFLL) + v2 + 1) ^ *(_BYTE *)(((v6 - 1335714029) & 0xFLL) + v3 + 5) ^ (((v6 + 19) & 0xF) * (((v5 - 83) | 0x40) ^ 0x4D));
  if (v10 == v6 - 738143905 < v1)
    v10 = v6 - 738143905 < v7;
  return (*(uint64_t (**)(void))(v9 + 8 * ((14400 * v10) ^ v5)))();
}

uint64_t sub_1001626F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unint64_t *v6;
  int8x16_t **v7;
  uint64_t v8;
  int8x16_t *v9;

  v9 = *v7;
  *(int8x16_t *)&STACK[0x390] = veorq_s8(*v7[2], (int8x16_t)xmmword_100DF7660);
  *(int8x16_t *)&STACK[0x3A0] = veorq_s8(*v9, (int8x16_t)xmmword_100DF7670);
  return (*(uint64_t (**)(void))(v8
                              + 8 * (int)(((((a6 + 283574487) & 0xEF18FFFF) + 14184) * (&STACK[0x390] == v6)) ^ a6)))();
}

uint64_t sub_10016275C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  _BYTE *v6;
  uint64_t v7;

  LOBYTE(STACK[0x420]) = *v6;
  LOBYTE(STACK[0x421]) = v6[1];
  LOBYTE(STACK[0x422]) = v6[2];
  LOBYTE(STACK[0x423]) = v6[3];
  LOBYTE(STACK[0x424]) = v6[4];
  LOBYTE(STACK[0x425]) = v6[5];
  LOBYTE(STACK[0x426]) = v6[6];
  LOBYTE(STACK[0x427]) = v6[7];
  LOBYTE(STACK[0x428]) = v6[8];
  LOBYTE(STACK[0x429]) = v6[9];
  LOBYTE(STACK[0x42A]) = v6[10];
  LOBYTE(STACK[0x42B]) = v6[11];
  LOBYTE(STACK[0x42C]) = v6[12];
  LOBYTE(STACK[0x42D]) = v6[13];
  LOBYTE(STACK[0x42E]) = v6[14];
  LOBYTE(STACK[0x42F]) = v6[15];
  return (*(uint64_t (**)(void))(v7 + 8 * a6))();
}

uint64_t sub_1001627F8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  int v5;
  uint64_t (*v6)(void);

  STACK[0x2A8] = (a1 ^ 0x4Bu) - 3994;
  if (v2)
    v4 = v1 == 0;
  else
    v4 = 1;
  v5 = v4;
  v6 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v5 * ((a1 ^ 0x4B) - 9905)) ^ a1)) - 4);
  LODWORD(STACK[0x2A4]) = -42900;
  return v6();
}

uint64_t sub_100162838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  int v51;
  int v52;
  uint64_t v53;
  _BOOL4 v55;
  uint64_t (*v56)(void);

  v55 = a51 != v52
     && (((STACK[0x2A8] ^ 0x1763) + a51) & 0xF) == ((((STACK[0x2A8] ^ 0x1763) + a51) << (((v51 - 125) & 0xB9) - 56)) & 2);
  v56 = (uint64_t (*)(void))(*(_QWORD *)(v53 + 8 * ((48440 * v55) ^ v51)) - 4);
  LODWORD(STACK[0x2A4]) = -42899;
  return v56();
}

#error "10016A84C: call analysis failed (funcsize=6713)"

uint64_t sub_10016A850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,int a61,unsigned int a62,int a63)
{
  int a64;
  int a65;
  int a66;
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int a83;
  int a84;
  int a85;
  int a86;
  int a87;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unsigned int v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  int v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unsigned int v124;
  uint64_t v125;
  int v126;
  unint64_t v127;
  uint64_t v128;
  unsigned int v129;
  int v130;
  char *v131;
  char *v132;
  char *v133;
  unsigned int v134;
  char *v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  unsigned __int8 v154;
  unsigned int v155;
  int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  unsigned int v176;
  unsigned int v177;
  int v178;
  int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  int v194;
  int v195;
  unsigned int v196;
  int v197;
  unsigned int v198;
  unsigned int v199;
  int v200;
  int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  int v205;
  unsigned int v206;
  int v207;
  int v208;
  unsigned int v209;
  int v210;
  unsigned int v211;
  int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  unsigned int v220;
  int v221;
  int v222;
  int v223;
  unsigned int v224;
  int v225;
  int v226;
  unsigned int v227;
  unsigned int v228;
  int v229;
  unsigned int v230;
  int v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  int v235;
  unsigned int v236;
  unsigned int v237;
  int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  int v242;
  int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unint64_t v247;
  int v248;
  int v249;
  int v250;
  int v251;
  unsigned int v252;
  int v253;
  unsigned int v254;
  unsigned int v255;
  int v256;
  unsigned int v257;
  int v258;
  int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  int v278;
  unsigned int v279;
  unsigned int v280;
  int v281;
  int v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  int v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  int v305;
  int v306;
  int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  unsigned int v325;
  int v326;
  unsigned int v327;
  unsigned int v328;
  unsigned int v329;
  int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  char *v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  int v340;
  unsigned int v341;
  int v342;
  unsigned int v343;
  int v344;
  int v345;
  char *v346;
  int v347;
  int v348;
  int v349;
  unsigned int v350;
  unsigned int v351;
  char *v352;
  unsigned int v353;
  unsigned int v354;
  char *v355;
  unsigned int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  unsigned int v362;
  char *v363;
  unsigned int v364;
  unsigned int v365;
  uint64_t v366;
  char *v367;
  int v368;
  unsigned int v369;
  unint64_t v370;
  unsigned int v371;
  unsigned int v372;
  unsigned int v373;
  char *v374;
  unsigned int v375;
  char *v376;
  unsigned int v377;
  int v378;
  unsigned int v379;
  int v380;
  unsigned int v381;
  unsigned int v382;

  LODWORD(STACK[0x2A4]) = 0;
  v89 = (a61 + 1810);
  v90 = v87 ^ 0x4ED04FD6;
  STACK[0x368] = v90;
  STACK[0x2A8] = v89;
  v91 = v89 + (v87 ^ 0xFBE386FBFD1DBAE9) + ((2 * v90) & 0x1679BEA7ELL) + v88;
  STACK[0x358] = v91;
  v92 = *(unsigned __int8 *)(v91 + 0x41C79044C31F35FLL);
  v93 = v87;
  v94 = ((v87 & 0xFFFFFFFC ^ 0x4ED04FD7) + 135468958 - ((2 * (v87 & 0xFFFFFFFC ^ 0x4ED04FD7)) & 0x10262F3C)) ^ 0x813179E;
  v95 = (v94 ^ 0xFDBB74BFD75FCD7BLL) + v88 + ((2 * v94) & 0x1AEBF9AF6);
  STACK[0x308] = v95;
  v96 = *(unsigned __int8 *)(v95 + 0x2448B4028A03285);
  v97 = STACK[0x240];
  LODWORD(STACK[0x2E8]) = (v92 - ((2 * v92) & 0x1CC) + 1751001830) ^ *(_DWORD *)(STACK[0x240] + 4 * (v92 ^ 0x92));
  v98 = STACK[0x248];
  LODWORD(v96) = *(unsigned __int8 *)(STACK[0x248] + (v96 ^ 0xEB));
  HIDWORD(v99) = ~(_DWORD)v96;
  LODWORD(v99) = (v96 ^ 0xB0) << 24;
  LODWORD(v96) = (v99 >> 27) - ((2 * (v99 >> 27)) & 0x44) + 34;
  LODWORD(v92) = v87 & 0xFFFFFFF7 ^ 0x4ED04FDE;
  LODWORD(STACK[0x348]) = v92;
  LODWORD(STACK[0x340]) = 2 * v92;
  v100 = (2 * v92) & 0x773CCD8C;
  v101 = v92 - 1147246906;
  v102 = (((v93 & 0xFFFFFFF9 ^ 0x4ED04FD6) - 808418963 - ((2 * (v93 & 0xFFFFFFF9 ^ 0x4ED04FD6)) & 0x9FA102DA)) ^ 0x72BEF2FFF64B7A93)
       + ((2
         * (((v93 & 0xFFFFFFF9 ^ 0x4ED04FD6) - 808418963 - ((2 * (v93 & 0xFFFFFFF9 ^ 0x4ED04FD6)) & 0x9FA102DA)) ^ 0xCFD0816D)) & 0x7337F7FC)
       + v88;
  STACK[0x328] = v102;
  v103 = *(unsigned __int8 *)(v102 - 0x72BEF2FF399BFBFELL);
  LODWORD(v96) = v96 ^ 0x71 ^ (((32 * v96) ^ 0x40) + (~(2 * ((32 * v96) ^ 0x40)) | 0x7F) + 84);
  LODWORD(STACK[0x2CC]) = v96 - ((2 * v96) & 0x106);
  v104 = *(unsigned __int8 *)(((v101 - v100) ^ 0xD1FFFF5F844E5939)
                            + ((2 * ((v101 - v100) ^ 0xBB9E66C6)) & 0x7FA07FFE)
                            + v88
                            + 0x2E0000A0C02FC001);
  v105 = STACK[0x258];
  v106 = *(_DWORD *)(STACK[0x258] + 4 * (v103 ^ 0x86));
  LODWORD(v96) = (((2 * v106) ^ 0x102B7184) - ((2 * ((2 * v106) ^ 0x102B7184)) & 0x3E4A6ED4) + 522532714) & 0x37D1C50E ^ 0xDF2F3FFA;
  v107 = (((v93 & 0xFFFFFFF3 ^ 0x4ED04FDE) - 1377464643 - ((2 * (v93 & 0xFFFFFFF3 ^ 0x4ED04FDE)) & 0x5BCB1D7A)) ^ 0x39A67E2B530B334ELL)
       + v88
       + ((2
         * (((v93 & 0xFFFFFFF3 ^ 0x4ED04FDE) - 1377464643 - ((2 * (v93 & 0xFFFFFFF3 ^ 0x4ED04FDE)) & 0x5BCB1D7A)) ^ 0xADE58EBD)) & 0x1FDDD7BE6);
  STACK[0x318] = v107;
  v108 = *(unsigned __int8 *)(v107 - 0x39A67E2BFEEEBDF3);
  LODWORD(STACK[0x2C4]) = v96 - ((2 * v96) & 0x4B010210);
  LODWORD(v96) = v104 - ((2 * v104) & 0x1FC) - 1020695298;
  LODWORD(v103) = v108 - ((2 * v108) & 0xFFFFFF03);
  LODWORD(v108) = *(_DWORD *)(v97 + 4 * (v108 ^ 0x9E));
  LODWORD(v104) = *(_DWORD *)(v97 + 4 * (v104 ^ 0x84));
  v109 = (((v93 & 0xFFFFFFFE ^ 0x4ED04FD7) + 97495743 - ((2 * (v93 & 0xFFFFFFFE ^ 0x4ED04FD7)) & 0xB9F557E)) ^ 0xFAF3E3C7FA7A5100)
       + v88
       + ((2
         * (((v93 & 0xFFFFFFFE ^ 0x4ED04FD7) + 97495743 - ((2 * (v93 & 0xFFFFFFFE ^ 0x4ED04FD7)) & 0xB9F557E)) ^ 0x5CFAABF)) & 0x1FF6BF77ELL);
  STACK[0x360] = v109;
  v110 = *(unsigned __int8 *)(v109 + 0x50C1C38004A0441);
  LODWORD(v96) = v104 ^ v96;
  LODWORD(STACK[0x2C8]) = (v103 + 1560121473) ^ v108;
  v111 = STACK[0x250];
  LODWORD(v103) = *(_DWORD *)(STACK[0x250] + 4 * (v110 ^ 0xF4));
  v112 = (((v93 & 0xFFFFFFFB ^ 0x4ED04FD6)
         + 1758105212
         + ((2 * (v93 & 0xFFFFFFFB ^ 0x4ED04FD6)) & 0xD1951CF0 ^ 0xFFFFFFF7)
         + 1) ^ 0x3FDF6F7F17157187)
       + ((2
         * (((v93 & 0xFFFFFFFB ^ 0x4ED04FD6)
           + 1758105212
           + ((2 * (v93 & 0xFFFFFFFB ^ 0x4ED04FD6)) & 0xD1951CF0 ^ 0xFFFFFFF7)
           + 1) ^ 0x68CA8E7C)) & 0xFFBFFFF6)
       + v88;
  STACK[0x330] = v112;
  v113 = (((v93 & 0xFFFFFFF4 ^ 0x4ED04FDF)
         + 1774011627
         + ((2 * (v93 & 0xFFFFFFF4 ^ 0x4ED04FDF)) & 0xD37A89C0 ^ 0xFFFFFFE9)
         + 1) ^ 0x7BFCF4D796467B34)
       + v88
       + ((2
         * (((v93 & 0xFFFFFFF4 ^ 0x4ED04FDF)
           + 1774011627
           + ((2 * (v93 & 0xFFFFFFF4 ^ 0x4ED04FDF)) & 0xD37A89C0 ^ 0xFFFFFFE9)
           + 1) ^ 0x69BD44EB)) & 0x1FFF67FBELL);
  STACK[0x350] = v113;
  LODWORD(v108) = *(unsigned __int8 *)(v98 + (*(unsigned __int8 *)(v113 - 0x7BFCF4D7FFFB3FDFLL) ^ 0x10));
  HIDWORD(v99) = ~(_DWORD)v108;
  LODWORD(v99) = (v108 ^ 0xB0) << 24;
  v114 = (((v93 & 0xFFFFFFF2 ^ 0x4ED04FDF) - 1992468425 - ((2 * (v93 & 0xFFFFFFF2 ^ 0x4ED04FDF)) & 0x127AB06E)) ^ 0xD537FF7D7244B648)
       + v88
       + ((2
         * (((v93 & 0xFFFFFFF2 ^ 0x4ED04FDF) - 1992468425 - ((2 * (v93 & 0xFFFFFFF2 ^ 0x4ED04FDF)) & 0x127AB06E)) ^ 0x893D5837)) & 0x1F6F3DCFELL);
  STACK[0x310] = v114;
  LODWORD(v109) = v87 & 0xFFFFFFF5 ^ 0x4ED04FDE;
  LODWORD(STACK[0x2F8]) = v109;
  LODWORD(STACK[0x2F4]) = 2 * v109;
  v115 = *(_DWORD *)(v111 + 4 * (*(unsigned __int8 *)(v114 + 0x2AC8008204861181) ^ 3));
  LODWORD(v104) = 1202140929 * v115 - ((256798210 * v115 + 213624372) & 0x177812B6);
  v116 = *(_DWORD *)(v105
                   + 4
                   * (*(unsigned __int8 *)((((_DWORD)v109
                                           + 261168109
                                           + ((2 * (_DWORD)v109) & 0x1F2237CA ^ 0xFFFFFFEF)
                                           + 1) ^ 0x6CABBFBDF86AF6A2)
                                         + v88
                                         + ((2
                                           * (((_DWORD)v109
                                             + 261168109
                                             + ((2 * (_DWORD)v109) & 0x1F2237CA ^ 0xFFFFFFEF)
                                             + 1) ^ 0xF911BED)) & 0x1EFF7DA9ELL)
                                         - 0x6CABBFBDF7FBED4FLL) ^ 0x33));
  v117 = (((2 * v116) ^ 0x102B7184) - ((2 * ((2 * v116) ^ 0x102B7184)) & 0xF4D8AC0) + 128370017) & 0x37D1C50E ^ 0xCFAEFFF0;
  LODWORD(v109) = v87;
  LODWORD(STACK[0x33C]) = 1322274783;
  v118 = (v93 & 0xFFFFFFF6 ^ 0x4ED04FDF) - 779687829 + ((2 * (v93 & 0xFFFFFFF6 ^ 0x4ED04FDF)) & 0xA30DD0C4 ^ 0xFFFFFFED);
  v119 = ((v118 + 1) ^ 0x3FF55EED2E611684) + v88 + ((2 * ((v118 + 1) ^ 0xD186E86B)) & 0x1FFCFFDDELL);
  STACK[0x2D0] = v119;
  LODWORD(v119) = *(unsigned __int8 *)(v119 - 0x3FF55EEDFFE7FEEFLL);
  v120 = ((2 * v119) & 0xFFFFFFFB) + (v119 ^ 0xA67FDFFD);
  LODWORD(v119) = (v119 ^ 0x43801457) - ((2 * (v119 ^ 0x55)) & 0xBBBBBBBB) + v120 + 1;
  LODWORD(v119) = v120 + 1501569027 + ((v119 - 2 * ((v119 + 33557472) & 0x205D36F ^ v119 & 8) + 403038023) ^ 0xFDFA2C99);
  LODWORD(v119) = *(_DWORD *)(v111
                            + 4 * (((_DWORD)v119 - 851168061 - ((2 * (_DWORD)v119) & 0x9A88698E) + 4) ^ 0xCD4434C3));
  v121 = ((v93 & 0xFFFFFFF8 ^ 0x4ED04FD7)
        - 1427516473
        + ((2 * (v93 & 0xFFFFFFF8 ^ 0x4ED04FD7)) & 0x55D3A780 ^ 0xFFFFFFF1)
        + 1) ^ 0xAAE9D3C7;
  v122 = (v121 ^ 0xFF4AA7A759BDB2F3) + ((2 * (_DWORD)v121) & 0xB37B65E6) + v88;
  STACK[0x2E0] = v122;
  LODWORD(v121) = v96 ^ v116 ^ ((((((v99 >> 27) << 6) & 0x80) + 32 * (v99 >> 27) + 86) ^ ((v99 >> 27) - ((2 * (v99 >> 27)) & 0x10) - 120) ^ 0x87)
                              - ((2
                                * (((((v99 >> 27) << 6) & 0x80) + 32 * (v99 >> 27) + 86) ^ ((v99 >> 27) - ((2 * (v99 >> 27)) & 0x10) - 120) ^ 0x87)) & 0x1F2)
                              - 854857479) ^ (v117 + 479582538 + ((2 * v117) & 0x29238210 ^ 0xEFF7CF7F)) ^ (1202140929 * v119 - ((256798210 * v119 + 1824237108) & 0x604EF6C4) + 1720012412);
  LODWORD(v96) = *(unsigned __int8 *)(v98 + (*(unsigned __int8 *)(v122 + 0xB55858A6424D0DLL) ^ 0xB8));
  HIDWORD(v99) = ~(_DWORD)v96;
  LODWORD(v99) = (v96 ^ 0xB0) << 24;
  v123 = (((v109 & 0xFFFFFFF1 ^ 0x4ED04FDE) + 679723172 - ((2 * (v109 & 0xFFFFFFF1 ^ 0x4ED04FDE)) & 0x51078160)) ^ 0x65FDFFF927F61551)
       + ((2
         * (((v109 & 0xFFFFFFF1 ^ 0x4ED04FDE) + 679723172 - ((2 * (v109 & 0xFFFFFFF1 ^ 0x4ED04FDE)) & 0x51078160)) ^ 0x2883C0BC)) & 0x1EEBABDA)
       + v88;
  STACK[0x320] = v123;
  v124 = v87 & 0xFFFFFFFA ^ 0x4ED04FD7;
  LODWORD(STACK[0x300]) = v124;
  LODWORD(STACK[0x2FC]) = 2 * v124;
  LODWORD(v96) = *(_DWORD *)(v105 + 4 * (*(unsigned __int8 *)(v123 - 0x65FDFFF90F75D5EDLL) ^ 0x77));
  LODWORD(v123) = (((2 * v96) ^ 0x102B7184) - 2 * (((2 * v96) ^ 0x102B7184) & 0x1401783E ^ (2 * v96) & 0x12) + 872511533) & 0x37D1C50E ^ 0xFC2F7AFC;
  v125 = (v124 + 1370618825 + ((2 * v124) & 0xA363F790 ^ 0xFFFFFFFD) + 1) ^ 0x51B1FBC9;
  v126 = v109;
  LODWORD(STACK[0x34C]) = v109;
  v127 = (((v109 & 0xFFFFFFFD ^ 0x4ED04FD6) + 1074764721 - ((2 * (v109 & 0xFFFFFFFD ^ 0x4ED04FD6)) & 0x801F3762)) ^ 0xFDFBFE6CAEF160F5)
       + v88
       + ((2
         * (((v109 & 0xFFFFFFFD ^ 0x4ED04FD6) + 1074764721 - ((2 * (v109 & 0xFFFFFFFD ^ 0x4ED04FD6)) & 0x801F3762)) ^ 0x400F9BB1)) & 0x1DDFDF688);
  STACK[0x2D8] = v127;
  LODWORD(v125) = *(_DWORD *)(v111
                            + 4
                            * (*(unsigned __int8 *)((v125 ^ 0xFAFFDBFFABE4FF9BLL)
                                                  + v88
                                                  + ((2 * v125) & 0x157C9FF36)
                                                  + 0x5002400541B0065) ^ 0xD2));
  LODWORD(v97) = *(_DWORD *)(v97 + 4 * (*(unsigned __int8 *)(v112 - 0x3FDF6F7F7FDFFFFBLL) ^ 0x84)) ^ v106 ^ (*(unsigned __int8 *)(v112 - 0x3FDF6F7F7FDFFFFBLL) - ((2 * *(unsigned __int8 *)(v112 - 0x3FDF6F7F7FDFFFFBLL)) & 0x134) + 576064410) ^ (LODWORD(STACK[0x2C4]) - 1519104296) ^ ((~(256798210 * v125 + 213624372) | 0xF14CE1DD) + 1202140929 * v125 - 1112055252) ^ (((((v99 >> 27) + 100 - ((2 * (v99 >> 27)) & 0xC8)) ^ (32 * ((v99 >> 27) + 100) - (((v99 & 0x8000000) != 0) << 6) - 81)) ^ 0x12) - ((2 * (((v99 >> 27) + 100 - ((2 * (v99 >> 27)) & 0xC8)) ^ (32 * ((v99 >> 27) + 100) - (((v99 >> 27) & 1) << 6) - 81))) & 0x98) + 1691290956);
  LODWORD(v112) = *(_DWORD *)(v105 + 4 * (*(unsigned __int8 *)(v127 + 0x2040193110104BCLL) ^ 0x18));
  LODWORD(v125) = (((2 * v112) ^ 0x102B7184)
                 - 2 * (((2 * v112) ^ 0x102B7184) & 0x1BCCD97E ^ (2 * v112) & 0x1A)
                 + 1003280740) & 0x37D1C50E ^ 0xFBEEFBF4;
  LODWORD(v127) = LODWORD(STACK[0x2E8]) ^ (1202140929 * v103 - ((122580482 * v103 + 79406644) & 0x7EB69AA) - 1168930833) ^ v112 ^ (v125 + 1436131155 + ((2 * v125) & 0x2B230A04 ^ 0x7FEFCB5F));
  v128 = (((v126 & 0xFFFFFFF0 ^ 0x4ED04FDF) - 994622299 - ((2 * (v126 & 0xFFFFFFF0 ^ 0x4ED04FDF)) & 0x896E8960)) ^ 0x6FFA3FBF397ABBF6)
       + v88
       + ((2
         * (((v126 & 0xFFFFFFF0 ^ 0x4ED04FDF) - 994622299 - ((2 * (v126 & 0xFFFFFFF0 ^ 0x4ED04FDF)) & 0x896E8960)) ^ 0xC4B744BB)) & 0x1FB9BFE9ALL);
  STACK[0x2E8] = v128;
  LODWORD(v108) = v127 ^ (LODWORD(STACK[0x2CC]) - 851575421);
  LODWORD(v127) = *(unsigned __int8 *)(v98 + (*(unsigned __int8 *)(v128 - 0x6FFA3FBFFDCDFF4DLL) ^ 0xFLL));
  HIDWORD(v99) = ~(_DWORD)v127;
  LODWORD(v99) = (v127 ^ 0xB0) << 24;
  LODWORD(v127) = (v99 >> 27) - ((2 * (v99 >> 27)) & 0xFFFFFF9A) + 77;
  LODWORD(v127) = v127 ^ 0x46 ^ (((32 * v127) ^ 0xA0) + (~((_DWORD)v127 << 6) | 0x7F) + 83);
  v129 = LODWORD(STACK[0x2C8]) ^ v96 ^ (v104 + 1108991093) ^ (v123 - ((2 * v123) & 0xD1C6BEFC) + 1759731582) ^ (v127 - ((2 * v127) & 0x46) - 1584509661);
  LODWORD(STACK[0x2BC]) = v129;
  LODWORD(v127) = ((a74 ^ v129) >> 16) ^ 0xA9;
  LODWORD(v96) = ((((a74 ^ v129) >> 16) & 0xA4 ^ 0xA2EF4005) + (((a74 ^ v129) >> 16) & 0x5B) - 1) ^ 0x19;
  v130 = STACK[0x294];
  v131 = (char *)*(&off_10112C750 + (LODWORD(STACK[0x294]) ^ 0x4571E674)) - 1471261347;
  LODWORD(STACK[0x2C0]) = v108;
  LODWORD(v108) = a77 ^ v108;
  LODWORD(v122) = BYTE3(v108);
  LODWORD(v112) = *(_DWORD *)&v131[4 * (BYTE3(v108) ^ 0x40)];
  LODWORD(STACK[0x2C4]) = v97;
  LODWORD(v123) = a76 ^ v97;
  v132 = (char *)*(&off_10112C750 + (v130 ^ 0x4571EA38)) - 1576690927;
  v133 = (char *)*(&off_10112C750 + (v130 ^ 0x4571EECB)) - 1518258274;
  LODWORD(v128) = *(_DWORD *)&v133[4
                                 * ((((2 * ((a76 ^ v97) & 0x7F ^ 0xC)) | 0xDAF1E3C4)
                                   - ((a76 ^ v97) & 0x7F ^ 0xC)
                                   + 310840862) ^ 0xC0B27C3F ^ (768249302
                                                              - ((((((a76 ^ v97) | 0x7F) - 7) & 0x80 ^ 0x82)
                                                                - 2) & 0x80)))];
  LODWORD(v127) = LODWORD(STACK[0x23C]) ^ v112 ^ *(_DWORD *)&v132[4
                                                                * (((v96 & 0x40C7 ^ 0x799B0D42)
                                                                  + (v96 & 0x38 ^ 0x4002221)
                                                                  - 1) ^ 0x7D9B6F6D)] ^ (v128
                                                                                       - ((2 * v128 + 406189678) & 0x1E44F232)
                                                                                       + 993883216) ^ (((v127 - ((2 * v127) & 0xFFFFFFCF) + 1371148263) & 0x39267 ^ 0x10B58041) + ((v127 - ((2 * v127) & 0xFFFFFFCF) + 1371148263) & 0x6D98 ^ 0x8C400D81) - 1);
  LODWORD(STACK[0x2C8]) = v121;
  v134 = a75 ^ v121;
  LODWORD(STACK[0x2CC]) = v130 - 1165094539;
  v135 = (char *)*(&off_10112C750 + v130 - 1165094173) - 1646299706;
  LODWORD(v112) = v127 ^ *(_DWORD *)&v135[4 * (((unsigned __int16)(a75 ^ v121) >> 8) ^ 0xF5)];
  LODWORD(v96) = (((2 * (BYTE2(v108) ^ 0xE4)) & 0x16C) - (BYTE2(v108) ^ 0xE4) - 629571255) ^ 0xD2DB814D;
  LODWORD(v119) = *(_DWORD *)&v133[4 * ((a75 ^ v121) ^ 0xE6)];
  v136 = LODWORD(STACK[0x238]) ^ (BYTE3(v123) | 0xE7DC0B00) ^ *(_DWORD *)&v131[4 * (BYTE3(v123) ^ 0x1C)] ^ *(_DWORD *)&v135[4 * (((unsigned __int16)(a74 ^ v129) >> 8) ^ 0xC5)] ^ *(_DWORD *)&v132[4 * (((WORD1(v108) & 0xD ^ 0x110D) - (WORD1(v108) & 0xD) + (BYTE2(v108) ^ 0x62)) ^ 0x1125)] ^ (((2 * v96) & 0x1411CDA) - v96 + 2015261074) ^ (v119 - ((2 * v119 + 1479931502) & 0xE87EB4E6) + 542791082);
  LODWORD(v119) = (1008746984 - (BYTE2(v123) ^ 0x27 | 0x3C2041E8) + (BYTE2(v123) ^ 0x27 | 0xC3DFBE17)) ^ 0x416EAE01;
  LODWORD(v96) = ((2 * (BYTE2(v123) ^ 0xF0)) | 0x1C0B3F30) - (BYTE2(v123) ^ 0xF0) + 1912234088;
  v137 = *(_DWORD *)&v133[4 * ((a74 ^ v129) ^ 0x30)];
  LODWORD(v96) = *(_DWORD *)&v131[4 * (((a75 ^ v121) >> 24) ^ 0x6B)] ^ LODWORD(STACK[0x290]) ^ *(_DWORD *)&v132[4 * (((v96 & 0xE058A2F ^ 0x6C4027) + (v96 & 0x35D0 ^ 0x70800191) - 1) ^ 0x7EE9DE64)] ^ *(_DWORD *)&v135[4 * (BYTE1(v108) ^ 0x28)] ^ (1621073323 - (v119 | 0x609F9DAB) + (v119 | 0x9F606254)) ^ (v137 - ((2 * v137 + 3536494) & 0x532B828) - 1363912885);
  LODWORD(v108) = *(_DWORD *)&v133[4 * (v108 ^ 0x44)];
  v138 = (a74 ^ v129) >> 24;
  LODWORD(v108) = (((2 * (BYTE2(v134) ^ 0xF5)) & 0x1FC) - (BYTE2(v134) ^ 0xF5) + 774401) & 0x81FFF ^ LODWORD(STACK[0x28C]) ^ *(_DWORD *)&v131[4 * (v138 ^ 0x84)] ^ *(_DWORD *)&v135[4 * (((BYTE1(v123) ^ 0xD7) + ((v123 >> 8) & 0xB5 ^ 0x220) - ((BYTE1(v123) ^ 0xD7) & 0xB5)) ^ 0x222)] ^ (v108 - ((2 * v108 + 1479931502) & 0xBF76D054) + 198599521) ^ *(_DWORD *)&v132[4 * (((HIWORD(v134) & 0x2C ^ 0x2309) + (HIWORD(v134) & 0xD3) - 1) ^ 0x2362)];
  v139 = ((2 * (BYTE2(v108) ^ 0xC6CEBDA6)) & 0x81851852) - (BYTE2(v108) ^ 0xC6CEBDA6) + 641495510;
  LODWORD(v123) = ((2 * (BYTE2(v108) ^ 0x43)) | 0x546B83F0) - (BYTE2(v108) ^ 0x43) - 708166136;
  v140 = (v123 & 0x400C6 ^ 0x85800807) + (v123 & 0x2A31C339);
  LODWORD(v123) = (((2 * (BYTE1(v96) ^ 0x85)) & 0x18) - (BYTE1(v96) ^ 0x85) + 1952955891) ^ 0xE675EFFD;
  v141 = ((2 * v123) & 0xA8A) - v123;
  LODWORD(v123) = *(_DWORD *)&v133[4 * (v136 ^ 0xAC)];
  v142 = v123 - 18336933 + (~(2 * v123 + 1479931502) | 0x5A658FB9);
  v143 = BYTE3(v112);
  v144 = LODWORD(STACK[0x234]) ^ *(_DWORD *)&v131[4 * (BYTE3(v112) ^ 0xCE)] ^ *(_DWORD *)&v135[4
                                                                                             * ((v141 - 1231029574) ^ 0x248DA82B)] ^ v142 ^ ((v139 & 0x80024482 ^ 0xC40D3481) + (v139 & 0x20900B7D) - 1) ^ *(_DWORD *)&v132[4 * ((v140 - 1) ^ 0xAFB5C99A)];
  v145 = (BYTE2(v112) ^ 0xC5 | 0x699F34BB) - (BYTE2(v112) ^ 0xC5 | 0x9660CB44) - 1772041404;
  LODWORD(v119) = *(_DWORD *)&v133[4 * (((a75 ^ v121) >> 24) ^ v96 ^ 0x3F)];
  v146 = LODWORD(STACK[0x228]) ^ *(_DWORD *)&v132[4 * (BYTE2(v112) ^ 0x5B)] ^ *(_DWORD *)&v135[4 * (BYTE1(v108) ^ 0xB5)] ^ *(_DWORD *)&v131[4 * (HIBYTE(v136) ^ 0x8A)] ^ (v119 - ((2 * v119 + 1479931502) & 0x7B18DF90) - 374904065) ^ ((v145 & 0x9E35B7 ^ 0x60120) + (v145 ^ 0xF0D9F6DF) - ((v145 ^ 0xF0D9F6DF) & 0x80DEB5B7));
  v147 = *(_DWORD *)&v133[4
                        * ((((2 * (v138 ^ 0x7304003A ^ v108)) | 0x2E6F2BCA)
                          - (v138 ^ 0x7304003A ^ v108)
                          + 1757964827) ^ 0xE43395C2)];
  v148 = BYTE3(v96);
  v149 = LODWORD(STACK[0x224]) ^ *(_DWORD *)&v131[4 * (BYTE3(v96) ^ 3)] ^ *(_DWORD *)&v135[4
                                                                                         * ((((v112 >> 8) & 0xB2 ^ 0x250444B1)
                                                                                           + ((v112 >> 8) & 0x4D ^ 0x80000144)
                                                                                           - 1) ^ 0xA50445C2)] ^ *(_DWORD *)&v132[4 * (((BYTE2(v136) ^ a59) - ((2 * (BYTE2(v136) ^ a59)) & 0xC6) - 1004245149) ^ 0xE4246F0C)] ^ (v147 - ((2 * v147 + 1479931502) & 0xC949A0DA) + 281004964);
  LODWORD(v96) = BYTE2(v96);
  v150 = (((2 * (v96 ^ 0x44)) | 0x7527D504) - (v96 ^ 0x44) - 982772354) ^ 0x685EFCC;
  LODWORD(v112) = *(_DWORD *)&v133[4
                                 * ((((v112 ^ v122) & 0x2D ^ 0x1F978E04)
                                   + ((v112 ^ v122) & 0xD2 ^ 0x43)
                                   - 1) ^ 0x1F978E3C)];
  v151 = BYTE3(v108);
  v152 = LODWORD(STACK[0x220]) ^ v151 ^ 0x61485BCA ^ (-196227423 - (v150 | 0xF44DCEA1) + (v150 | 0xBB2315E)) ^ *(_DWORD *)&v131[4 * (v151 ^ 0x3D)] ^ *(_DWORD *)&v132[4 * (v96 ^ 0x5C)] ^ *(_DWORD *)&v135[4 * (BYTE1(v136) ^ 0x54)] ^ (v112 - ((2 * v112 + 1479931502) & 0xE17D577E) + 484026102);
  v153 = v144 ^ v143;
  if ((v153 ^ 0x4FF7D39F | v153 ^ 0xB0082C60) - 57315218 - ((2 * (v153 ^ 0x4FF7D39F | v153 ^ 0xB0082C60)) & 0xF92AE0AA) == -57315218)
    v154 = v151 ^ 0xCA;
  else
    v154 = v144 ^ v143 ^ 0x8F;
  v155 = v153 ^ 0x2A800019;
  v156 = *(_DWORD *)&v131[4 * (HIBYTE(v155) ^ 0x82)] ^ LODWORD(STACK[0x264]) ^ HIBYTE(v155);
  v157 = ((2 * ((a73 ^ v156) + 1)) & 0x1F6BFEEE) + (((a73 ^ v156) + 1) ^ 0xFB5FF77);
  v158 = ((2 * v156) & 0xF537BF76 ^ 0x80203416) + (v156 ^ 0x3BCFC5B0);
  v159 = v158 - 2057035707 + (a72 ^ (v157 + v158 - ((2 * (v157 + v158) - 346275428) & 0xADFEE2A4) + 1286443552));
  v160 = (HIWORD(v152) & 0x94) + (BYTE2(v152) ^ 0xFFFFFFDC) + (BYTE2(v152) | 0x35D4186B) + 1;
  v161 = *(_DWORD *)&v133[4 * (HIBYTE(v136) ^ v146 ^ 0xE)];
  v162 = *(_DWORD *)&v135[4 * (BYTE1(v149) ^ 0x45)] ^ (v161 - ((2 * v161 + 406189678) & 0x13E3FC36) - 1240663726) ^ ((HIWORD(v152) & 0xAC ^ 0x1F7) - (HIWORD(v152) & 0x53)) ^ *(_DWORD *)&v132[4 * (((v160 & 0xCD959A6A ^ 0xC8119220) + (v160 ^ 0x2584084B) - ((v160 ^ 0x2584084B) & 0xCD959A6A)) ^ 0xDDC58A80)] ^ (v159 - ((2 * v159) & 0x102AD168) + 135620788);
  v163 = HIWORD(v155);
  v164 = ((((v149 ^ BYTE2(v136)) ^ v148) & 0x1E ^ 0xB7619414)
        + ((v149 ^ BYTE2(v136)) ^ v148 ^ 0x8A)
        - (((v149 ^ BYTE2(v136)) ^ v148 ^ 0x8A) & 0x1E)) ^ 0x2603D6DE;
  v165 = *(_DWORD *)&v133[4 * ((v164 - ((2 * v164) & 0xA27C1D54) - 784462166) ^ 0x405C4C70)];
  v166 = HIBYTE(v146);
  v167 = LODWORD(STACK[0x21C]) ^ *(_DWORD *)&v131[4 * (HIBYTE(v146) ^ 0x46)] ^ *(_DWORD *)&v135[4 * (BYTE1(v152) ^ 0xF4)] ^ *(_DWORD *)&v132[4 * (((HIWORD(v155) & 0x81) + (BYTE2(v155) ^ 0x102000BD) - ((BYTE2(v155) ^ 0x102000BD) & 0x200081) + 144092416) ^ 0x1896ADDE)] ^ (v165 - ((2 * v165 + 406189678) & 0x1F6DD5FA) - 1143871948);
  v168 = ((BYTE2(v146) ^ 0x82) - ((v146 >> 15) & 0xF8) - 481958020) ^ 0xE785273C;
  v169 = (BYTE1(v144) ^ 0xF1D88D8D) - ((2 * (BYTE1(v144) ^ 0xF1D88D8D)) & 0x622008AA);
  v170 = *(_DWORD *)&v133[4 * (v152 ^ 0x71)];
  v171 = v170 - ((2 * v170 + 406189678) & 0x201F34D0);
  v172 = HIBYTE(v149);
  v173 = a71 ^ (((2 * (BYTE2(v146) ^ 0x16020949)) | 0xCA2E830A) - (BYTE2(v146) ^ 0x16020949) + 451460731) ^ *(_DWORD *)&v131[4 * (HIBYTE(v149) ^ 1)] ^ *(_DWORD *)&v132[4 * ((v168 - ((2 * v168) & 0x801C2BC) + 220914014) ^ 0x9EA2126)] ^ (v171 - 1138059873) ^ *(_DWORD *)&v135[4 * ((v169 + 1027028565) ^ 0xCCEFBB06)];
  v174 = HIWORD(v149);
  v175 = BYTE2(v149);
  LOWORD(v169) = (v175 ^ 0xDD94) + (v174 & 0x9A ^ 0xA) - ((v175 ^ 0xDD94) & 0xC9A);
  v176 = ((((v174 & 0x98) + (v175 ^ 0x9A)) | 0xEF4FBE00) - ((v175 ^ 0x9A) & 0x98)) ^ 0xEF4EAE98;
  v177 = HIBYTE(v152);
  v178 = (((2 * (v154 ^ 0x5E)) & 0x112) - (v154 ^ 0x5E) + 1044733046) ^ 0x2666D857;
  v179 = *(_DWORD *)&v133[4 * ((1323044203 - (v178 | 0x4EDC0D6B) + (v178 | 0xB123F294)) ^ 0xA900767B)];
  v180 = LODWORD(STACK[0x218]) ^ *(_DWORD *)&v131[4 * (v177 ^ 0x63)] ^ v169 & 0x1FFF ^ *(_DWORD *)&v135[4 * (BYTE1(v146) ^ 0x80)] ^ *(_DWORD *)&v132[4 * ((((2 * v176) & 0x258C) - v176 + 1663009081) ^ 0x631E9100)] ^ (v179 - ((2 * v179 + 1479931502) & 0x8F6EEE42) + 1943171672);
  v181 = (((BYTE2(v180) ^ 0x2C) >> 5 << 6) | 0x21F) - (BYTE2(v180) ^ 0x2C);
  v182 = (((BYTE2(v180) ^ 0xFFFFFFD8) + 1) ^ 0xFDC7EFBA)
       + ((2 * ((BYTE2(v180) ^ 0xFFFFFFD8) + 1)) & 0xFB8FDF74)
       + (v181 ^ 0x27E)
       + 37228614;
  v183 = ((2 * (v166 ^ 0x51 ^ (v167 ^ v163))) | 0xA45EFA7C)
       - (v166 ^ 0x51 ^ (v167 ^ v163))
       - 1378843966;
  v184 = *(_DWORD *)&v133[4 * (((v183 & 0x252CE125 ^ 0x24008101) + (v183 & 0xDAD31EDA ^ 0x8020443) - 1) ^ 0x7E2DF8C8)];
  v185 = HIBYTE(v162);
  v186 = LODWORD(STACK[0x214]) ^ *(_DWORD *)&v131[4 * (HIBYTE(v162) ^ 0xB0)] ^ *(_DWORD *)&v135[4
                                                                                              * (((BYTE1(v173) ^ 0xCE)
                                                                                                + ((v173 >> 8) & 0xB0 ^ 0x430)
                                                                                                - ((BYTE1(v173) ^ 0xCE) & 0xB0)) ^ 0x481)] ^ (v184 - ((2 * v184 + 406189678) & 0x29B480A0) - 1057670265) ^ *(_DWORD *)&v132[4 * ((v182 - ((2 * v182) & 0x59E60A7C) - 1393359554) ^ 0x530CFAC2) + 4 * (v181 ^ 0x27E)];
  v187 = (HIWORD(v162) & 0xCE ^ 0x57F5E809) + (HIWORD(v162) & 0x31) - 1;
  v188 = (BYTE1(v180) ^ 0x29 | 0xED37FF5D) - (BYTE1(v180) ^ 0x29 | 0x12C800A2) + 315097250;
  v189 = (((v173 ^ v172) & 0xFFFFFF8F ^ 0x184508B)
        + (v173 ^ v172 ^ 0xEE598C34)
        - ((v173 ^ v172 ^ 0xEE598C34) & 0xEE09848F)) ^ 0x2BD55096;
  v190 = v189 - ((2 * v189) & 0x281439B0);
  v191 = HIBYTE(v167);
  v192 = *(_DWORD *)&v133[4 * ((v190 + 336207064) ^ 0x3E0B1483)];
  v193 = LODWORD(STACK[0x210]) ^ *(_DWORD *)&v131[4 * (HIBYTE(v167) ^ 0x8C)] ^ *(_DWORD *)&v132[4
                                                                                              * (((BYTE2(v162) ^ 0x41340FD)
                                                                                                + (HIWORD(v162) & 0x57 ^ 0x48681802)
                                                                                                - ((BYTE2(v162) ^ 0x41340FD) & 0x4114057)) ^ 0x486A1839)] ^ (v192 - ((2 * v192 + 406189678) & 0x1F1B2476) + 1000902002) ^ ((v187 & 0x68488EE ^ 0x8002122C) + (v187 ^ 0x1EA5A8D2) - ((v187 ^ 0x1EA5A8D2) & 0x414040EE)) ^ *(_DWORD *)&v135[4 * (((v188 & a58 ^ 0x12810021) + (v188 & 0xAC1ACA44 ^ 0xAC12C245) - 1) ^ 0x53A43DAC)];
  LOWORD(v177) = ((v180 ^ (unsigned __int16)v177) & 0xE9 ^ 0xFD01)
               + ((v180 ^ (unsigned __int16)v177) & 0x16 ^ 0x15)
               - 1;
  v194 = (((2 * (BYTE1(v162) ^ 0xFC)) & 0x136) - (BYTE1(v162) ^ 0xFC) + 232451684) ^ 0x29793A91;
  v195 = *(_DWORD *)&v133[4 * (((v177 & 0x225 ^ 0xB433E04) + (v177 & 0x1DA ^ 0x2881C9) - 1) ^ 0xB6BBE88)];
  v196 = LODWORD(STACK[0x20C]) ^ *(_DWORD *)&v131[4 * (HIBYTE(v173) ^ 0xD9)] ^ ((BYTE2(v167) ^ 0x8A)
                                                                              - ((2 * (BYTE2(v167) ^ 0x8A)) & 0x30)
                                                                              + 1048) ^ *(_DWORD *)&v132[4 * ((-682761052 - (BYTE2(v167) ^ 0x9228608E | 0xD74DE4A4) + (BYTE2(v167) ^ 0x9228608E | 0x28B21B5B)) ^ 0xBA9A7B3B)] ^ *(_DWORD *)&v135[4 * ((((2 * v194) | 0xA5C1FFD2) - v194 + 757006359) ^ 0xF6432B09)] ^ (v195 - ((2 * v195 + 1479931502) & 0x91503FB0) - 188540145);
  v197 = *(_DWORD *)&v133[4
                        * (((v162 ^ 0x44030892)
                          - ((2 * (v162 ^ 0x44030892)) & 0x41014)
                          + 19569418) ^ 0x452993D8)];
  v198 = HIBYTE(v180);
  v199 = LODWORD(STACK[0x208]) ^ *(_DWORD *)&v132[4
                                                * (((a57 & (2 * (BYTE2(v173) ^ 0x480090C7)))
                                                  - (BYTE2(v173) ^ 0x480090C7)
                                                  + 1344533163) ^ 0x182362E0)] ^ *(_DWORD *)&v135[4
                                                                                                * (BYTE1(v167) ^ 0xD0)] ^ *(_DWORD *)&v131[4 * (HIBYTE(v180) ^ 0xB5)] ^ (v197 - ((2 * v197 + 406189678) & 0x31AB021C) - 990872507);
  v200 = ((BYTE2(v199) ^ 0x13) - ((2 * (BYTE2(v199) ^ 0x13)) & 0x2E) + 543506455) ^ 0x2065508F;
  v201 = *(_DWORD *)&v133[4 * (v191 ^ 0xC2 ^ v193)];
  v202 = HIBYTE(v186);
  v203 = LODWORD(STACK[0x204]) ^ *(_DWORD *)&v132[4 * (BYTE2(v199) ^ 0x83)] ^ *(_DWORD *)&v131[4 * (HIBYTE(v186) ^ 0xB7)] ^ (v201 - ((2 * v201 + 1479931502) & 0x9F32DE22) + 2075421256) ^ *(_DWORD *)&v135[4 * (BYTE1(v196) ^ 0xDD)] ^ (((2 * v200) | 0x858D8554) - v200 - 1120322218);
  LOWORD(v201) = v181 ^ v186;
  v204 = ((2 * (BYTE2(v186) ^ 0x9A09024C)) | 0x86FFE172) - (BYTE2(v186) ^ 0x9A09024C);
  v205 = ((2 * (BYTE2(v186) ^ 0x242430C9)) & 0x82188) - (BYTE2(v186) ^ 0x242430C9);
  v206 = (((v199 >> 8) & 0xC9) + (BYTE1(v199) ^ 0xFFFFFFEF) + (BYTE1(v199) | 0x3F633236) + 1) ^ 0x1F304237;
  v207 = *(_DWORD *)&v135[4 * ((v206 - ((2 * v206) & 0x2726F692) - 1819051191) ^ 0xB3C00BDE)];
  v208 = ((2 * v207) ^ 0xB1EEC84) - 2 * (((2 * v207) ^ 0xB1EEC84) & 0x3508A9BE ^ (2 * v207) & 0xA);
  v209 = (a56 & (2 * ((v207 ^ 0x858F7642) - 948018313)))
       + (((v207 ^ 0x858F7642) - 948018313) ^ 0xCFFFBFEC)
       + ((v208 - 1257723468) & 0x8EFCC6EE ^ 0xD1882E5)
       + ((2 * (v208 - 1257723468)) & 0xDD9895C ^ 0xF7EEFEB7);
  v210 = *(_DWORD *)&v133[4 * (HIBYTE(v173) ^ 0x34 ^ v196)];
  v211 = (v204 - 1132458169) ^ LODWORD(STACK[0x288]) ^ *(_DWORD *)&v131[4 * (HIBYTE(v193) ^ 0x73)] ^ *(_DWORD *)&v132[4 * ((v205 - 404708293) ^ 0xC3C49454)] ^ (v210 - ((2 * v210 + 1479931502) & 0xA9858B4A) - 2132950820) ^ (v209 - ((2 * v209 + 1306557352) & 0xA360688A) - 123702759);
  v212 = (((v196 >> 22) & 0x20) - 2 * HIBYTE(v196) + 15) & 0x30;
  v213 = ((HIBYTE(v196) + 24) ^ 0x6FBEDBF7) + ((2 * (HIBYTE(v196) + 24)) & 0xFFFFFFEF) + v212 - 2 * v212;
  v214 = ((BYTE2(v193) ^ 0xAE) - 2 * ((BYTE2(v193) ^ 0xAE) & 0x1F) + 1943995423) ^ 0x73DC441D;
  v215 = (v214 | 0x26FB3AFC) - (v214 | 0xD904C503) - 653998845;
  v216 = *(_DWORD *)&v133[4
                        * (((((v199 ^ BYTE2(v173)) ^ v198) & 0xBC ^ 0x1789)
                          + (((v199 ^ BYTE2(v173)) ^ v198) & 0x43)
                          - 1) ^ 0x17A0)];
  v217 = HIWORD(v193) & 0x70 ^ LODWORD(STACK[0x284]) ^ *(_DWORD *)&v132[4 * (v215 ^ 0x26F87A96)] ^ *(_DWORD *)&v135[4 * (BYTE1(v201) ^ 0x90)] ^ (v216 - ((2 * v216 + 406189678) & 0x18B9D188) - 1200102405) ^ ((v215 & 0x87DBA58F ^ 0x7EFC7AFC) - 853161594 + ((2 * ((v215 & 0x87DBA58F ^ 0x7EFC7AFC) & 0x5018187 ^ (v215 | a55))) ^ 0x90489005)) ^ *(_DWORD *)&v131[4 * v213 - 0x1BEFB6FDCLL];
  v199 >>= 24;
  v218 = *(_DWORD *)&v133[4
                        * ((((2 * (v185 ^ a54 ^ v201)) & 0x84009008)
                          - (v185 ^ a54 ^ v201)
                          - 2117921285) ^ 0x43C35D3E)];
  v219 = LODWORD(STACK[0x200]) ^ *(_DWORD *)&v131[4 * (v199 ^ 0xAC)] ^ ((BYTE2(v196) ^ 0x41)
                                                                      - ((2 * (BYTE2(v196) ^ 0x41)) & 0xCE)
                                                                      + 2151) ^ *(_DWORD *)&v135[4 * (BYTE1(v193) ^ 0xA)] ^ *(_DWORD *)&v132[4 * (((((HIWORD(v196) & 3) + (BYTE2(v196) ^ 0xE3)) | 0x200) - ((BYTE2(v196) ^ 0xE3) & 3)) ^ 0x2C6)] ^ (v218 - ((2 * v218 + 1479931502) & 0x83F3E162) + 1846864872);
  v220 = (BYTE2(v219) ^ 0x4C | 0xB179ECAB) - (BYTE2(v219) ^ 0x4C | 0x4E861354) + 1317409620;
  v221 = (((2 * (BYTE2(v219) ^ 0xC8)) | 0x5D98F1AC) - (BYTE2(v219) ^ 0xC8) - 785152214) ^ 0x2FE01AD4;
  v222 = ((2 * v221) & 0x288D5976) - v221;
  v223 = ((2 * (BYTE1(v217) ^ 0x7F)) & 0x116) - (BYTE1(v217) ^ 0x7F) - 890498700;
  v224 = (v223 & 0x2C1CA3 ^ 0x4036C03) + (v223 ^ 0xC8FC10FC) - ((v223 ^ 0xC8FC10FC) & 0x2001CA3);
  v225 = *(_DWORD *)&v133[4 * (HIBYTE(v193) ^ 0xFA ^ v211)];
  v226 = v225 - ((2 * v225 + 1479931502) & 0xA22EF1F6);
  v227 = HIBYTE(v203);
  v228 = a70 ^ *(_DWORD *)&v131[4 * (HIBYTE(v203) ^ 0xA7)] ^ *(_DWORD *)&v135[4 * (v224 ^ 0x43F7D41)] ^ *(_DWORD *)&v132[4 * ((v222 - 340176060) ^ 0xEA95310A)] ^ ((v220 & 0xA138E522 ^ 0xE280101) + (v220 & 0x10410ADD) - 1) ^ (v226 - 47025102);
  v229 = (((2 * (BYTE2(v203) ^ 0xBE)) | 0x4ED10D24) - (BYTE2(v203) ^ 0xBE) - 661161618) ^ 0x2FC2C782;
  v230 = (-704728934 - (BYTE2(v203) ^ 0xCF | 0xD5FEB09A) + (BYTE2(v203) ^ 0xCF | 0x2A014F65)) ^ 0x68250F05;
  v231 = *(_DWORD *)&v133[4 * (HIBYTE(v196) ^ v217 ^ 2)];
  v232 = a69 ^ *(_DWORD *)&v132[4 * ((-1777882884 - (v230 | 0x9607A8FC) + (v230 | 0x69F85703)) ^ 0x2BDC1768)] ^ *(_DWORD *)&v135[4 * (((BYTE1(v219) ^ 0x82C81645) + ((v219 >> 8) & 0x80 ^ 0x28146080) - ((BYTE1(v219) ^ 0x82C81645) & 0x2880680)) ^ 0xA85470D6)] ^ (v229 - ((2 * v229) & 0x7F3D368) + 1140451764) ^ (v231 - ((2 * v231 + 406189678) & 0x3EE93FE8) - 879781077) ^ *(_DWORD *)&v131[4 * (HIBYTE(v211) ^ 0x41)];
  v233 = (((v211 >> 15) & 0x40) + (BYTE2(v211) ^ 0xFFFFFFA3) + 1545931232) ^ 0x7F358CDF;
  v234 = (((v219 ^ v199) & 0x2E ^ 0x6B3C2929) + ((v219 ^ v199) & 0xD1) - 1) ^ 0x41186B8F;
  v235 = *(_DWORD *)&v133[4 * ((-1560657036 - (v234 | 0xA2FA4374) + (v234 | 0x5D05BC8B)) ^ 0x7721FE18)];
  v236 = a87 ^ *(_DWORD *)&v131[4 * (HIBYTE(v217) ^ 0x81)] ^ *(_DWORD *)&v135[4 * (BYTE1(v203) ^ 0x75)] ^ (v235 - ((2 * v235 + 1479931502) & 0xAE9B451C) + 57187781) ^ (v233 - ((2 * v233) & 0x20015A2) + 159541969) ^ *(_DWORD *)&v132[4 * (((BYTE2(v211) ^ 0x8A032698) - ((2 * (BYTE2(v211) ^ 0x8A032698)) & 0x14040D34) - 1419374694) ^ 0x21652954)];
  v237 = (-2125615450 - (BYTE1(v211) ^ 0xCA | 0x814DAEA6) + (BYTE1(v211) ^ 0xCA | 0x7EB25159)) ^ 0xF6B2F159;
  v238 = *(_DWORD *)&v133[4 * (v202 ^ 0xCE ^ v203)];
  v239 = HIBYTE(v219);
  v240 = a86 ^ (((2 * (BYTE2(v217) ^ 0x25)) & 0x22222222) - (BYTE2(v217) ^ 0x25) + 8686) ^ *(_DWORD *)&v131[4 * (HIBYTE(v219) ^ 0xFE)] ^ *(_DWORD *)&v132[4 * ((-159446397 - (BYTE2(v217) ^ 0x116CEB | 0xF67F0A83) + (BYTE2(v217) ^ 0x116CEB | 0x980F57C)) ^ 0x9919916)] ^ (v238 - ((2 * v238 + 406189678) & 0x13C4002E) + 905771854) ^ *(_DWORD *)&v135[4 * ((v237 - ((2 * v237) & 0x271C5B56) - 1819398741) ^ 0x1B8E8D3B)];
  v241 = ((BYTE2(v240) ^ 0xFFFFFFFC) + 1981304798 + ((2 * BYTE2(v240)) | 0x13CF6046)) ^ 0x89A4B4A3;
  v242 = a85 ^ HIBYTE(v228) ^ *(_DWORD *)&v131[4 * (HIBYTE(v228) ^ 0xF7)] ^ (v241 - ((2 * v241) & 0x800A1E) - 715070193) ^ *(_DWORD *)&v132[4 * ((((2 * (BYTE2(v240) ^ 0x14)) | 0xBB0E5D72) - (BYTE2(v240) ^ 0x14) + 578343239) ^ 0xDD872E27)];
  v243 = *(_DWORD *)&v135[4 * (BYTE1(v236) ^ 0x58)];
  v244 = (v243 ^ 0x1FDBF17C ^ v242 ^ 0xD2909023) + 1;
  v243 ^= 0x42F11535u;
  v245 = v243 + (v244 ^ 0x5BDFDFEE) + ((2 * v244) & 0xB7BFBFDC) - 1541398510;
  v246 = (v245 - ((2 * v245) & 0x5B438BD6) - 1381906965) ^ v242 ^ 0xD2909023;
  HIDWORD(v247) = v246 ^ 0x774DE5D;
  LODWORD(v247) = v246 ^ 0x8000000;
  v248 = (v247 >> 27) + 596197338 + (~(2 * (v247 >> 27)) | 0xB8ED804D);
  HIDWORD(v247) = (((v242 ^ 0x8FBA746A) + 1) ^ 0xFFFF9952) + 26286 + ((2 * ((v242 ^ 0x8FBA746A) + 1)) & 0xFFFF32A4);
  LODWORD(v247) = HIDWORD(v247);
  v249 = v248 ^ ((v247 >> 27) - ((2 * (v247 >> 27)) & 0x7722AA3A) - 1148103395);
  HIDWORD(v247) = v249 ^ 0x10;
  LODWORD(v247) = v249 ^ 0xA3F886C0;
  v250 = (((v247 >> 5) - ((2 * (v247 >> 5)) & 0x285F9B32) + 338677145) ^ 0xB5F0CAF9) + v243;
  v251 = *(_DWORD *)&v133[4
                        * ((((v232 ^ HIBYTE(v211)) & 0x36 ^ 0x35450027) + ((v232 ^ HIBYTE(v211)) & 0xC9) - 1) ^ 0x3545008D)];
  v252 = (v250 - ((2 * v250) & 0x71631F28) + 951160724) ^ (v251 - ((2 * v251 + 1479931502) & 0x9C9A201A) - 93844668);
  v253 = a68 ^ HIBYTE(v232) ^ BYTE2(v228) ^ *(_DWORD *)&v131[4 * (HIBYTE(v232) ^ 0x44)] ^ *(_DWORD *)&v132[4 * (((HIWORD(v228) & 0x95 ^ 0x71218C81) + (HIWORD(v228) & 0x6A ^ 0x80840163) - 1) ^ 0xF1A58DFB)] ^ *(_DWORD *)&v135[4 * (BYTE1(v240) ^ 0x89)];
  v254 = (((v236 ^ HIBYTE(v217)) & 0x7F ^ 0x75)
        - ((2 * ((v236 ^ HIBYTE(v217)) & 0x7F ^ 0x75)) & 0xE8)
        - 1350816268) ^ 0xA75C2FF5;
  v255 = (((v236 ^ HIBYTE(v217)) & 0x80 ^ 0x83) & 0xFFFFFEFF | (((((v236 ^ HIBYTE(v217)) & 0x80) >> 7) & 1) << 8))
       + 1453;
  v256 = *(_DWORD *)&v133[4
                        * (((v255 & 0x380 ^ 0x2FF) - ((2 * v255) & 0x200) + 204142740) ^ 0x159A77EE ^ (-294685827 - (v254 | 0xEE6F737D) + (v254 | 0x11908C82)))];
  v257 = (v253 ^ 0x9BC75532) - 2 * ((v253 ^ 0x9BC75532) & 0x662C23AE ^ v253 & 8) - 433314906;
  v258 = v256 - ((2 * v256 + 406189678) & 0x2942AB64) - 1061400343;
  v259 = (v258 ^ v257 ^ 0x55869066) + 1;
  v257 ^= 0x3ED83A2Bu;
  v260 = v257 + (v259 ^ 0x4F77FBFF) + ((2 * v259) & 0x9EEFF7FE) - 1333263359;
  v261 = ((-1930052189 - v256 - ((667552146 - 2 * v256) & 0x722171B4)) ^ v258 ^ 0xBA52FECA ^ (v260
                                                                                            - ((2 * v260) & 0x2FC62744)
                                                                                            - 1746725982))
       + v257;
  v262 = v261 - ((2 * v261) & 0x96897E56);
  v263 = ((BYTE2(v232) ^ 0xC2) - ((2 * (BYTE2(v232) ^ 0xC2)) & 0xA0) - 1752846512) ^ 0xD5A18854;
  v264 = (377542114 - (BYTE2(v232) ^ 0xACA3019E | 0x1680D5E2) + (BYTE2(v232) ^ 0xACA3019E | 0xE97F2A1D)) ^ 0x3DF8710D;
  v265 = *(_DWORD *)&v132[4 * ((-816773292 - (v263 | 0xCF510754) + (v263 | 0x30AEF8AB)) ^ 0x728ADFF9)] ^ 0xA1D8EB08;
  v266 = (v265 & v264) + 451089274 + (~(2 * (v265 & v264)) | 0xCA39D90D);
  v267 = ((v265 + v264) ^ 0xF773FD7B)
       + ((2 * (v265 + v264)) & 0xEEE7FAF6)
       + ((2 * v266) ^ 0x39A6A65B)
       + ((4 * v266) & 0xE73EFEAC ^ 0x9CF3B35B);
  v268 = 2 * (v240 ^ v239);
  v269 = ((v240 ^ v239) ^ 0x7FBEEB1D) + (v268 & 0x1DE ^ 0x1C4);
  v270 = (v268 ^ 0x7BC113E4) - 2 * ((v268 ^ 0x7BC113E4) & 0x3E ^ v268 & 0x12) + 300;
  v271 = *(_DWORD *)&v133[4 * v269
                        - 0x196FECEE0
                        + 4 * (v270 & 0xFE ^ 0xE600C865)
                        + 4 * ((2 * v270) & 0x16C ^ 0xFFFFFFB7)];
  v272 = HIBYTE(v236);
  v273 = a84 ^ *(_DWORD *)&v131[4 * (HIBYTE(v236) ^ 0xA5)] ^ *(_DWORD *)&v135[4 * (BYTE1(v228) ^ 0x86)] ^ (v267 + 1 - ((2 * (v267 + 1) + 2018968504) & 0x6E0F5342) - 1288492163) ^ (v271 - ((2 * v271 + 1479931502) & 0xA88A8E20) + 6308423);
  v274 = BYTE2(v236);
  v275 = (-1143738044 - (BYTE2(v236) ^ 0xAC | 0xBBD3F144) + (BYTE2(v236) ^ 0xAC | 0x442C0EBB)) ^ 0xC020963F;
  v276 = (((v232 >> 8) & 0x62 ^ 0x52042721) + ((v232 >> 8) & 0x9D) - 1) ^ 0xD7442B77;
  v277 = (v227 ^ 0xC3 ^ v228 | 0xCCAB656E)
       - (v227 ^ 0xC3 ^ v228 | 0x33549A91)
       + 861182609;
  v278 = *(_DWORD *)&v133[4 * (((v277 & 0x8154F6F4 ^ 0x114B6B1) + (v277 & 0x7EAB090B) - 1) ^ 0xCDBFD3DE)];
  v279 = HIBYTE(v240);
  v280 = (((2 * v275) | 0x215385EC) - v275 - 279560950) ^ LODWORD(STACK[0x280]) ^ *(_DWORD *)&v131[4
                                                                                                 * (HIBYTE(v240) ^ 0x25)] ^ *(_DWORD *)&v132[4 * (v274 ^ 0x10)] ^ *(_DWORD *)&v135[4 * ((1260529625 - (v276 | 0x4B2227D9) + (v276 | 0xB4DDD826)) ^ 0x319DD4DE)] ^ (v278 - ((2 * v278 + 1479931502) & 0x6EDDC30E) - 477504322);
  v281 = (BYTE2(v280) ^ 0x57) + (HIWORD(v280) & 0x1D ^ 0xD35508) - ((BYTE2(v280) ^ 0x57) & 0x1D);
  v282 = (BYTE1(v273) ^ 0x51A9C21A) + ((v273 >> 8) & 0x20 ^ 0xC421520) - ((BYTE1(v273) ^ 0x51A9C21A) & 0x40800220);
  v262 -= 884687061;
  v283 = *(_DWORD *)&v133[4 * (v262 ^ 0x62)];
  v284 = HIBYTE(v252);
  v285 = a83 ^ *(_DWORD *)&v132[4
                              * ((((2 * (BYTE2(v280) ^ 0x54)) | 0x9E0F530A) - (BYTE2(v280) ^ 0x54) + 821581435) ^ 0xCF07A92D)] ^ *(_DWORD *)&v135[4 * (((v282 & 0x4199EF ^ 0x408410E4) + (v282 ^ 0x3F4BCD0B) - ((v282 ^ 0x3F4BCD0B) & 0x222019EF)) ^ 0x40C58140)] ^ (v283 - ((2 * v283 + 406189678) & 0x13FDB5AA) + 907662860) ^ *(_DWORD *)&v131[4 * (HIBYTE(v252) ^ 0xAF)];
  v286 = ((BYTE2(v252) ^ 0xDD) - ((2 * (BYTE2(v252) ^ 0xDD)) & 0x7A) + 1221746493) ^ 0x88925DBE;
  v287 = *(_DWORD *)&v133[4 * (v272 ^ 0x47 ^ v273)];
  v288 = a82 ^ *(_DWORD *)&v131[4 * (HIBYTE(v262) ^ 0x6A)] ^ *(_DWORD *)&v135[4 * (BYTE1(v280) ^ 0xC4)] ^ (v287 - ((2 * v287 + 1479931502) & 0x56513004) + 1464046393) ^ ((BYTE2(v252) ^ 0xC8) - ((v252 >> 15) & 0x6E) - 756581577) & 0x80242FFF ^ *(_DWORD *)&v132[4 * ((741646603 - (v286 | 0x2C34A10B) + (v286 | 0xD3CB5EF4)) ^ 0x138B5CAE)];
  v289 = ((BYTE2(v262) ^ 0xED) - ((2 * (BYTE2(v262) ^ 0xED)) & 0xE8) - 1015809932) ^ 0x4F14897A;
  v290 = (-1866399806
        - (v279 ^ 0xD3 ^ v280 | 0x90C0FFC2)
        + (v279 ^ 0xD3 ^ v280 | 0x6F3F003D)) ^ 0xC3A9001C;
  v291 = *(_DWORD *)&v133[4 * ((526492946 - (v290 | 0x1F61A512) + (v290 | 0xE09E5AED)) ^ 0x4C085AD5)];
  v292 = HIBYTE(v273);
  v293 = a81 ^ *(_DWORD *)&v131[4 * (HIBYTE(v273) ^ 0xC4)] ^ *(_DWORD *)&v132[4
                                                                            * ((((1614581247 - (BYTE2(v262) ^ 0xD0)) ^ 0x6CBAA5FD)
                                                                              - ((2
                                                                                * ((1614581247 - (BYTE2(v262) ^ 0xD0)) ^ 0x6CBAA5FD)) & 0x18081A70)
                                                                              + 2097438008) ^ 0x718275B2)] ^ (v291 - ((2 * v291 + 1479931502) & 0x9C55511E) - 96099386) ^ (v289 - ((2 * v289) & 0x88A9E88) + 609570628) ^ *(_DWORD *)&v135[4 * (BYTE1(v252) ^ 0xEE)];
  v294 = (BYTE2(v273) ^ 0xD4) + (HIWORD(v273) & 0xB5 ^ 0x97BD9D21) - ((BYTE2(v273) ^ 0xD4) & 0xB5);
  v295 = ((v252 ^ 0x51) - ((2 * (v252 ^ 0x51)) & 0x2A) - 145673707) ^ 0xFB5934DD;
  v296 = *(_DWORD *)&v133[4 * ((((2 * v295) | 0xD6D56E0E) - v295 - 1802155783) ^ 0x6762B1B0)];
  v297 = HIBYTE(v280);
  v298 = a80 ^ *(_DWORD *)&v131[4 * (HIBYTE(v280) ^ 0x6F)] ^ ((BYTE2(v273) ^ 0x8A)
                                                            - ((2 * (BYTE2(v273) ^ 0x8A)) & 0x1D0)
                                                            + 1512) ^ *(_DWORD *)&v132[4
                                                                                     * (((v294 & 0x527 ^ 0xEA280006)
                                                                                       + (v294 & 0x2D8 ^ 0x5800899)
                                                                                       - 1) ^ 0xEFA80D7D)] ^ *(_DWORD *)&v135[4 * (BYTE1(v262) ^ 0x53)] ^ (v296 - ((2 * v296 + 1479931502) & 0xBBE57048) + 168670043);
  v299 = v288 ^ HIBYTE(v262);
  v300 = ((((v299 ^ 0xD952279E) >> (BYTE1(v262) & 0x18 ^ 0x10))
         + 1072101006
         - ((2 * ((v299 ^ 0xD952279E) >> (BYTE1(v262) & 0x18 ^ 0x10))) & 0x7FCDED1C)) ^ 0x3FE6F68E) >> (BYTE1(v262) & 0x18 ^ 8);
  v301 = (HIWORD(v298) & 0xE2 ^ 0xBBD3C543) - (HIWORD(v298) | 0xFFFFFFE2) - 2;
  v302 = (-1717050287 - (~BYTE2(v298) | 0x99A7E451) + (~BYTE2(v298) | 0x66581BAE)) ^ 0x4C5813AF;
  v303 = (v300 - ((2 * v300) & 0xCF) + 103);
  v304 = (((2 * (v303 ^ 0xD3)) & 0x164) - (v303 ^ 0xD3) - 771670707) ^ 0xF329AD69;
  v305 = ((2 * (v303 ^ 0x39084470)) & 0x501008DE) - (v303 ^ 0x39084470);
  v306 = *(_DWORD *)&v133[4
                        * (((v299 ^ 0xFFFFFFCF) - 1457195424 + ((2 * v299) & 0x9C) + 82) ^ 0xA924F660)];
  v307 = v306 - ((2 * v306 + 1479931502) & 0x65DB8256);
  v308 = v281 & 0x9007FF ^ v285;
  v309 = HIBYTE(v285);
  v310 = *(_DWORD *)&v131[4 * (HIBYTE(v285) ^ 6)] ^ LODWORD(STACK[0x27C]) ^ *(_DWORD *)&v135[4
                                                                                           * ((((2
                                                                                               * (BYTE1(v293) ^ 0x921889B)) & 0x4201F2)
                                                                                             - (BYTE1(v293) ^ 0x921889B)
                                                                                             + 223276294) ^ 0x46F6573)] ^ (v307 + 1594408034) ^ ((v301 & 0x74 ^ 0x80063065) - (v301 & 0x438B) + 43043722) ^ *(_DWORD *)&v132[4 * ((-61227494 - (v302 | 0xFC59BE1A) + (v302 | 0x3A641E5)) ^ 0x29A649CB)];
  v311 = LODWORD(STACK[0x278]) ^ (v304 - ((2 * v304) & 0x42412FBC) - 1088170018) ^ *(_DWORD *)&v131[4 * ((v305 - 747417200) ^ 0xEA7B159F)] ^ 0x1C98D68F;
  v312 = (((2 * (BYTE2(v308) ^ 0x86)) | 0x86665EE4) - (BYTE2(v308) ^ 0x86) + 1020055694) ^ 0x833626E2;
  v313 = ((v311 & 0x18FDA433 ^ 0xE9508C31) - ((2 * (v311 & 0x18FDA433 ^ 0xE9508C31)) & 0x637A4842) - 1245748063) ^ 0x547F6CA1 | (((v311 & 0xA4021840 ^ 0x44D1411) - 1) & 0xA44B1840 | v311 & 0x4300438C) ^ 0xE04B0848;
  v314 = *(_DWORD *)&v133[4
                        * ((((v293 ^ v292) & 0xE6 ^ 0xD5870682)
                          + (v293 ^ v292 ^ 0x64)
                          - ((v293 ^ v292 ^ 0x64) & 0xE6)) ^ 0xD5870684)];
  v315 = *(_DWORD *)&v135[4 * (BYTE1(v298) ^ 0xA6)] ^ *(_DWORD *)&v132[4
                                                                     * (((BYTE2(v308) ^ 0x68)
                                                                       + (HIWORD(v308) & 0x6B ^ 0x203)
                                                                       - ((BYTE2(v308) ^ 0x68) & 0x6B)) ^ 0x27F)] ^ (-1518631210 - (v312 | 0xA57B86D6) + (v312 | 0x5A847929)) ^ (v314 - ((2 * v314 + 1479931502) & 0xBA779E80) + 156682871) ^ (v313 - ((2 * v313) & 0x569F3186) + 726636739);
  v316 = (((2 * (BYTE2(v288) ^ 0x2D)) & 0x144) - (BYTE2(v288) ^ 0x2D) - 399791523) ^ 0xAF2F9A7B;
  v317 = 546198636 - (v316 | 0x208E546C) + (v316 | 0xDF71AB93);
  v318 = ((v298 ^ v297) & 0x64 ^ 0xD35BA604)
       + (v298 ^ v297 ^ 0x69)
       - ((v298 ^ v297 ^ 0x69) & 0x64);
  v319 = *(_DWORD *)&v133[4
                        * (((v318 & 0x5001257A ^ 0x50812178) + (v318 ^ 0x262C5C87) - ((v318 ^ 0x262C5C87) & 0x7005797A)) ^ 0x85F2876B)];
  v320 = a79 ^ *(_DWORD *)&v131[4 * (HIBYTE(v293) ^ 0x77)] ^ *(_DWORD *)&v135[4
                                                                            * ((((v308 >> 8) & 0x95 ^ 0x4C3C1E04)
                                                                              + ((v308 >> 8) & 0x6A ^ 0x2014023)
                                                                              - 1) ^ 0x4E3D5ED5)] ^ *(_DWORD *)&v132[4 * ((((2 * (BYTE2(v288) ^ 0x1AD109A)) & 0x240205E) - (BYTE2(v288) ^ 0x1AD109A) + 1255000784) ^ 0x4B60DA72)] ^ v317 ^ (v319 - ((2 * v319 + 1479931502) & 0xA6715306) - 11295558);
  v298 >>= 24;
  v321 = (BYTE2(v293) ^ 0xC3) + (HIWORD(v293) & 0xCB ^ 0x2CBD4608) - ((BYTE2(v293) ^ 0xC3) & 0xCB);
  v322 = (((2 * (BYTE1(v288) ^ 8)) & 0x1F0) - (BYTE1(v288) ^ 8) + 1909879303) ^ 0x20C65B17;
  v323 = *(_DWORD *)&v135[4 * ((-538647339 - (v322 | 0xDFE4E4D5) + (v322 | 0x201B1B2A)) ^ 0x710B32E7)];
  v324 = ((2 * v323) ^ 0xB1EEC84) - ((2 * ((2 * v323) ^ 0xB1EEC84)) & 0x77E2FCA0);
  v325 = (((v323 ^ 0x858F7642) - 948018313) ^ 0xF6EF4397)
       + ((2 * ((v323 ^ 0x858F7642) - 948018313)) & 0xEDDE872E)
       + ((v324 - 1141801391) & 0x8EFCC6EE ^ 0x89F08E53)
       + ((2 * (v324 - 1141801391)) & 0x19F80DD8 ^ 0xEE1FF37F)
       + 1;
  v326 = *(_DWORD *)&v133[4 * (v308 ^ v284 ^ 8)];
  v327 = a78 ^ *(_DWORD *)&v132[4
                              * ((1871112299 - (BYTE2(v293) ^ 0x7D | 0x6F86E86B) + (BYTE2(v293) ^ 0x7D | 0x90791794)) ^ 0x907917D7)] ^ ((v321 & 0x165 ^ 0xCDE20124) + (v321 & 0x29A ^ 0x2080099) - 1) ^ (v326 - ((2 * v326 + 1479931502) & 0x71B179A8) - 453789685) ^ *(_DWORD *)&v131[4 * (v298 ^ 0x46)] ^ (v325 - ((2 * v325 + 203417772) & 0x263A8B70) - 1725089266);
  v328 = (BYTE1(v320) ^ 0xDC) + ((v320 >> 8) & 0x5F ^ 0xB7991903) - ((BYTE1(v320) ^ 0xDC) & 0x5F);
  v329 = (v328 & 0x17981F3A ^ 0x40448220) + (v328 ^ 0xBF981DDF) - ((v328 ^ 0xBF981DDF) & 0x8010F3A);
  v330 = (((2 * (BYTE1(v320) ^ 0xA6)) & 0xB6) - (BYTE1(v320) ^ 0xA6) - 1406578524) ^ 0x282840C4;
  v331 = (((2 * v330) | 0x8768A704) - v330 - 1135891330) ^ 0x384ABC37;
  v332 = v329 ^ ((v329 ^ 0xA82364CE) - ((2 * (v329 ^ 0xA82364CE) + 2) & 0xFC587E08) + 2116828933) ^ 0xF98AF127 ^ (v331 - ((2 * v331 + 440) & 0xA0F4AA24) - 797288978);
  v333 = (((2 * (v315 ^ 0x5B)) | 0xF5DA481A) - (v315 ^ 0x5B) - 2062361613) ^ 0x7ECDE69C;
  v334 = -247959734 - (v333 | 0xF1386F4A) + (v333 | 0xEC790B5);
  v335 = -52775634
       - (HIBYTE(v293) ^ 0x4D ^ v320 | 0xFCDAB52E)
       + (HIBYTE(v293) ^ 0x4D ^ v320 | 0x3254AD1);
  v336 = (char *)*(&off_10112C750 + (v130 ^ 0x4571E56D)) - 1358972090;
  v337 = HIBYTE(v310);
  v338 = *(_DWORD *)&v336[4 * (HIBYTE(v310) ^ 0xBC)];
  v339 = HIBYTE(v315);
  v340 = *(_DWORD *)&v336[4 * (HIBYTE(v315) ^ 0xA2)];
  v341 = HIBYTE(v320);
  v342 = *(_DWORD *)&v336[4 * (HIBYTE(v320) ^ 0xB)];
  v343 = HIBYTE(v327);
  v344 = *(_DWORD *)&v336[4 * (HIBYTE(v327) ^ 0x4D)];
  v345 = v298 ^ v327;
  v346 = (char *)*(&off_10112C750 + (v130 ^ 0x4571E3CF)) - 194661854;
  v347 = *(_DWORD *)&v346[4 * (BYTE2(v327) ^ 0xE0)];
  LODWORD(v336) = *(_DWORD *)&v346[4 * (BYTE2(v310) ^ 0x42)];
  v348 = *(_DWORD *)&v346[4 * (((HIWORD(v315) & 0x7E ^ 0x5348C31D) + (HIWORD(v315) & 0x81) - 1) ^ 0x5348C3F5)];
  v349 = *(_DWORD *)&v346[4 * (BYTE2(v320) ^ 0xA5)];
  v350 = (BYTE1(v315) ^ 0x800800BA) - ((2 * (BYTE1(v315) ^ 0x800800BA)) & 0x10014E);
  v351 = v332 + 219;
  v352 = (char *)*(&off_10112C750 + (v130 ^ 0x4571E7F7)) - 1392760070;
  LODWORD(v346) = *(_DWORD *)&v352[4 * v351];
  v353 = *(_DWORD *)&v352[4 * (BYTE1(v327) ^ 0xC6)];
  v354 = *(_DWORD *)&v352[4 * ((((2 * (BYTE1(v310) ^ 0x79)) & 0xCA) - (BYTE1(v310) ^ 0x79) + 9114) ^ 0x238D)];
  LODWORD(v352) = *(_DWORD *)&v352[4 * ((v350 - 2007194969) ^ 0x854A22F)];
  v355 = (char *)*(&off_10112C750 + (v130 ^ 0x4571E543)) - 2028901594;
  v356 = *(_DWORD *)&v355[4 * (v334 ^ 0xAE752C9)];
  v357 = *(_DWORD *)&v355[4 * (((v335 & 0xF9DF11FF ^ 0x872FEED1) - 69224960) ^ 0x820AA4F4)];
  v358 = v309 ^ 0x47 ^ v310;
  v359 = *(_DWORD *)&v355[4 * (v345 ^ 0xF0)];
  v360 = *(_DWORD *)&v355[4 * v358];
  v361 = a66 ^ a65 ^ LODWORD(STACK[0x370]) ^ v338 ^ v347 ^ v346 ^ (v346 >> 4) ^ (v346 >> 6) ^ v356 ^ (v356 >> 4) ^ (v356 >> 6);
  v362 = (((v337 ^ LODWORD(STACK[0x26C]) ^ v361) & 0xB1 ^ 0xF9AFD780)
        + (v337 ^ LODWORD(STACK[0x26C]) ^ v361 ^ 0x77)
        - ((v337 ^ LODWORD(STACK[0x26C]) ^ v361 ^ 0x77) & 0xB1)) ^ 0xF9AFD70F;
  v363 = (char *)*(&off_10112C750 + (v130 ^ 0x4571E3AE)) - 363350943;
  *(_BYTE *)(STACK[0x308] + 0x2448B4028A03285) = v363[v362] ^ (v363[v362] >> 3) ^ (v363[v362] >> 1) ^ 0xFC;
  v364 = a64 ^ a63 ^ LODWORD(STACK[0x374]) ^ v342 ^ v354 ^ v348 ^ (v354 >> 4) ^ (v354 >> 6) ^ v359 ^ (v359 >> 4) ^ (v359 >> 6);
  v365 = (((2 * (BYTE2(v364) ^ 0x45)) | 0x9AF4BD86) - (BYTE2(v364) ^ 0x45) - 1299865283) ^ 0x4D3F5BC3;
  v366 = (((2 * v365) & 0x724C4882) - v365 - 958800962) ^ 0xC69CDE67;
  v367 = (char *)*(&off_10112C750 + (v130 ^ 0x4571E9AA)) - 1495395619;
  LODWORD(v366) = v367[v366];
  HIDWORD(v247) = v366 ^ 9;
  LODWORD(v247) = (v366 ^ 0x80) << 24;
  *(_BYTE *)(STACK[0x2D0] - 0x3FF55EEDFFE7FEEFLL) = ((v247 >> 28) - ((2 * (v247 >> 28)) & 0x44) + 34) ^ 0xD6;
  LODWORD(v366) = (v357 >> 6) ^ (v357 >> 4);
  v368 = v357 ^ 0x8C95E7E1 ^ v366;
  v369 = v357 ^ ((v357 ^ 0x8A1C5396) - ((2 * (v357 ^ 0x8A1C5396) + 2) & 0x4451EF94) - 1574373429);
  v370 = STACK[0x298];
  LODWORD(v366) = (v369 ^ 0x9606AEC0 ^ (v368
                                      + (v366 ^ 0x689B477)
                                      + 1
                                      - ((2 * (v368 + (v366 ^ 0x689B477) + 1)) & 0x839BEAC6)
                                      + 1104016739))
                + (v366 ^ 0x689B477);
  v371 = a67 ^ LODWORD(STACK[0x378]) ^ v336 ^ v353 ^ v340 ^ (v353 >> 4) ^ (v353 >> 6) ^ (v366 - 607237809 + (~(2 * v366) | 0x48636D63));
  v372 = v363[(107285246
                              - (v371 ^ v339 ^ 0x338F0C42 | 0x6650AFE)
                              + (v371 ^ v339 ^ 0x338F0C42 | 0x799AF501)) ^ 0x4A15F9DDLL];
  *(_BYTE *)(STACK[0x2E0] + 0xB55858A6424D0DLL) = v372 ^ (v372 >> 3) ^ (v372 >> 1) ^ 0x9D;
  v373 = (BYTE1(v364) ^ 0xF3 | 0x4E5C808A) - (BYTE1(v364) ^ 0xF3 | 0xB1A37F75) - 1314685067;
  v374 = (char *)*(&off_10112C750 + (v130 ^ 0x4571E7BC)) - 178909675;
  *(_BYTE *)(((LODWORD(STACK[0x2F8]) - 1813194203 - (STACK[0x2F4] & 0x27D9B44A)) ^ 0x6FFBDEB4FC03E37BLL)
           + ((2 * ((LODWORD(STACK[0x2F8]) - 1813194203 - (STACK[0x2F4] & 0x27D9B44A)) ^ 0x93ECDA25)) & 0xDFDE72BC)
           + v370
           - 0x6FFBDEB46FEF395ELL) = v374[((v373 & 0x8542B6A ^ 0x80130B28)
                                         + (v373 ^ 0x5E6CA047)
                                         - ((v373 ^ 0x5E6CA047) & 0x98772B6A)) ^ 0x88470B20] ^ ((BYTE1(v364) ^ 0xDF)
                                                                                                - 2
                                                                                                * (((BYTE1(v364) ^ 0xDF)
                                                                                                  + 122) & 0x7D ^ (BYTE1(v364) ^ 0xDF) & 1)
                                                                                                - 10) ^ 0xD8;
  v375 = LODWORD(STACK[0x37C]) ^ LODWORD(STACK[0x270]) ^ v343 ^ v349 ^ v344 ^ v352 ^ (v352 >> 4) ^ (v352 >> 6) ^ v360 ^ (v360 >> 4) ^ (v360 >> 6);
  v376 = (char *)*(&off_10112C750 + LODWORD(STACK[0x2CC]) + 110) - 753314106;
  *(_BYTE *)(STACK[0x318] - 0x39A67E2BFEEEBDF3) = HIBYTE(v375) ^ 0x9E ^ v376[HIBYTE(v375) ^ 0x84];
  v377 = (((2 * (BYTE1(v361) ^ 0x53D21018)) | 0x18DB3E72) - (BYTE1(v361) ^ 0x53D21018) + 1938972871) ^ 0x9FBFCB2D;
  *(_BYTE *)(STACK[0x2D8] + 0x2040193110104BCLL) = ((BYTE1(v361) ^ 0xF1)
                                                  + ((v361 >> 7) & 0xF2 ^ 0x10)
                                                  + ((2 * (BYTE1(v361) ^ 0xF1)) | 0xFD)
                                                  + 3) ^ 0x2C ^ v374[(((2 * v377) & 0x88F239A2) - v377 + 990298926) ^ 0x7B068781];
  *(_BYTE *)(STACK[0x328] - 0x72BEF2FF399BFBFELL) = v374[((BYTE1(v371) ^ 0x810465A9)
                                                        + ((v371 >> 8) & 0xD2 ^ 0x50B08252)
                                                        - ((BYTE1(v371) ^ 0x810465A9) & 0x40D2)) ^ 0xD1B4A789] ^ ((BYTE1(v371) ^ 0x59) - ((2 * (BYTE1(v371) ^ 0x59) + 20) & 0x1A) + 7) ^ 0x29;
  v378 = v367[((BYTE2(v375) ^ 0x15805174) - ((2 * (BYTE2(v375) ^ 0x15805174)) & 0x90021D8u) + 216634092) ^ 0x1969C3B9];
  HIDWORD(v247) = v378 ^ 9;
  LODWORD(v247) = (v378 ^ 0x80) << 24;
  *(_BYTE *)(STACK[0x310] + 0x2AC8008204861181) = ((v247 >> 28) - ((2 * (v247 >> 28)) & 0xB0) + 88) ^ 0x33;
  *(_BYTE *)(((LODWORD(STACK[0x348]) - 1583719966 - (STACK[0x340] & 0x4334B3C4)) ^ 0xEFE7DEFB5EA5A31DLL)
           + v370
           + ((2 * ((LODWORD(STACK[0x348]) - 1583719966 - (STACK[0x340] & 0x4334B3C4)) ^ 0xA19A59E2)) & 0x1FE7FF5FELL)
           + 0x1018210400C00501) = HIBYTE(v364) ^ 0xB3 ^ v376[HIBYTE(v364) ^ 0xC2];
  v379 = v363[((v375 & 0x11 ^ 0x911) - (v375 & 0x11) + (v375 ^ 0xC2)) ^ 0x93FLL];
  *(_BYTE *)(STACK[0x2E8] - 0x6FFA3FBFFDCDFF4DLL) = v379 ^ (v379 >> 3) ^ (v379 >> 1) ^ 0x6B;
  *(_BYTE *)(STACK[0x358] + 0x41C79044C31F35FLL) = HIBYTE(v361) ^ v376[HIBYTE(v361) ^ 0xB3] ^ 0x9F;
  LODWORD(v336) = v367[(((2 * (BYTE2(v371) ^ 0xC444025D)) | 0x20DF06A6)
                                       - (BYTE2(v371) ^ 0xC444025D)
                                       + 1871740077) ^ 0x542B8139];
  HIDWORD(v247) = v336 ^ 9;
  LODWORD(v247) = (v336 ^ 0x80) << 24;
  LODWORD(v336) = v247 >> 28;
  LOBYTE(v368) = (_BYTE)v336 + 30;
  LOBYTE(v336) = (_BYTE)v336 + 30 - ((2 * (_BYTE)v336) & 0x2C) - 8;
  *(_BYTE *)(((LODWORD(STACK[0x300]) + 2086563737 - (STACK[0x2FC] & 0xF8BCDF34)) ^ 0xDBD2EDBAC7A88870)
           + v370
           + ((2 * ((LODWORD(STACK[0x300]) + 2086563737 - (STACK[0x2FC] & 0xF8BCDF34)) ^ 0x7C5E6F9B)) & 0x177EDCFD6)
           + 0x242D124544091815) = ((v336 & 0x68 ^ 0x4D) - (v336 | 0xEF) + 126) & 0x78 ^ (126 - (v368 | 0xFC) - (v336 | 0x7B));
  *(_BYTE *)(STACK[0x330] - 0x3FDF6F7F7FDFFFFBLL) = HIBYTE(v371) ^ v376[HIBYTE(v371) ^ 0x88] ^ 0x7E;
  v380 = LODWORD(STACK[0x268]) ^ v341 ^ 0x126C4225 ^ v364;
  v381 = v363[(v380 - ((2 * v380) & 0x24D88512u) + 1936511881) ^ 0x6100915ELL];
  *(_BYTE *)(STACK[0x350] - 0x7BFCF4D7FFFB3FDFLL) = v381 ^ (v381 >> 3) ^ (v381 >> 1) ^ 0xE2;
  *(_BYTE *)(STACK[0x320] - 0x65FDFFF90F75D5EDLL) = ((BYTE1(v375) ^ 0x14) - ((2 * (BYTE1(v375) ^ 0x14) + 20) & 0x12) + 3) ^ 0x47 ^ v374[(((v375 >> 8) & 0xC3 ^ a53) + ((v375 >> 8) & 0x3C ^ 0x42829929) - 1) ^ 0xC282B996];
  v382 = (((2 * (BYTE2(v361) ^ 0xAC)) & 0x6C) - (BYTE2(v361) ^ 0xAC) + 1949689545) ^ 0xE49DF4C8;
  LODWORD(v367) = v367[(v382 - ((2 * v382) & 0x2100001A) + 1050004493) ^ 0xAE3DDED9];
  HIDWORD(v247) = v367 ^ 9;
  LODWORD(v247) = (v367 ^ 0x80) << 24;
  *(_BYTE *)(STACK[0x360] + 0x50C1C38004A0441) = ((((v247 >> 28) - ((2 * (v247 >> 28)) & 0xAE) - 33) ^ 2) - 8) ^ 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2B0]
                                        + 8
                                        * ((23498
                                          * (((STACK[0x368]
                                             + 1322274790
                                             - 2 * ((STACK[0x368] + 16) & STACK[0x33C] ^ STACK[0x34C] & 9)) ^ 0x4ED04FD6) < a62)) ^ a60))
                            - 4))();
}

uint64_t sub_10016F6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,int a53)
{
  uint64_t v53;

  LODWORD(STACK[0x370]) = LODWORD(STACK[0x2C0]) ^ 0x95AE914E;
  LODWORD(STACK[0x37C]) = LODWORD(STACK[0x2BC]) ^ 0x6A005067;
  LODWORD(STACK[0x374]) = LODWORD(STACK[0x2C8]) ^ 0xEA34825B;
  LODWORD(STACK[0x378]) = LODWORD(STACK[0x2C4]) ^ 0x38649F5E;
  return (*(uint64_t (**)(void))(v53 + 8 * a53))();
}

uint64_t sub_10016F70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,uint64_t a50,int a51)
{
  uint64_t v51;

  return (*(uint64_t (**)(void))(v51
                              + 8
                              * (int)(STACK[0x2A8] ^ (13932
                                                    * (((2 * (a51 - ((a49 - 785961850) & 0x883E3F76) - 1521644612)) & 0xE2BEDFAE ^ 0x803E1F26)
                                                     + ((a51 - ((a49 - 785961850) & 0x883E3F76) - 1521644612) ^ 0xB540706C)
                                                     - 537002246 != 1365077713)))))();
}

uint64_t sub_10016F7E0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = v2 + v1 + ((23 * ((v0 - 9206778) & 0x45FDFE87 ^ 0x4571ED94)) ^ 0x8EA0D6AE) > 7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v4 | (8 * v4)) ^ v0)) - 12))();
}

uint64_t sub_10016F88C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a3 | (8 * ((a4 - 1902079976) < 0xFFFFFFF0))))
                            - ((a3 - 12084) ^ 0x175BLL)))();
}

uint64_t sub_10016F8D8(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v20;
  int v22;
  int v24;

  v10 = (v7 + v6 + a2);
  v11 = v10 + v8 + 1;
  v12 = ((_BYTE)v7 + (_BYTE)v6 + (_BYTE)a2) & 0xF;
  v13 = v5 + v12 - v10;
  v14 = v5 + v12 + 1;
  v15 = v12 - v10 + v3 - 11300 + ((v2 + 17869102) | 0x44612E04u) - 1165083230;
  v16 = v12 + v3 + 4;
  v17 = v4 + v12 + 1 - v10;
  v18 = v12 + v4 + 2;
  v20 = v14 > v8 && v13 < v11;
  v22 = v16 > v8 && v15 < v11 || v20;
  if (v18 <= v8 || v17 >= v11)
    v24 = v22;
  else
    v24 = 1;
  return (*(uint64_t (**)(void))(v9 + 8 * ((16220 * (v24 ^ 1)) ^ v2)))();
}

uint64_t sub_10016F988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * (a8 ^ (15 * (v8 < 0x10))))
                                                           - ((a8 ^ 0x414Bu)
                                                            + 7548)
                                                           + 35556))(a1, a2, 0);
}

uint64_t sub_10016F9C4(char a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  __n128 v7;
  __n128 v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;
  __n128 v13;

  v7.n128_u64[0] = (a1 + 12) & 0xF;
  v7.n128_u64[1] = (a1 + 11) & 0xF;
  v8.n128_u64[0] = (a1 + 10) & 0xF;
  v8.n128_u64[1] = (a1 + 9) & 0xF;
  v9.n128_u64[0] = (a1 + 8) & 0xF;
  v9.n128_u64[1] = (a1 + 7) & 0xF;
  v10.n128_u64[0] = (a1 + 6) & 0xF;
  v10.n128_u64[1] = (a1 + 5) & 0xF;
  v11.n128_u64[0] = (a1 + 4) & 0xF;
  v11.n128_u64[1] = (a1 + 3) & 0xF;
  v12.n128_u64[0] = (a1 + 2) & 0xF;
  v12.n128_u64[1] = (a1 + 1) & 0xF;
  v13.n128_u64[0] = a1 & 0xF;
  v13.n128_u64[1] = (a1 - 1) & 0xF;
  return (*(uint64_t (**)(__n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(v6 + 8 * a6))(a2, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_10016FAA8(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, unsigned int a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int8x16_t v23;
  int8x16_t v24;
  int8x16_t v25;
  uint64_t v26;
  int8x16_t v28;
  int8x16_t v29;
  int8x16_t v30;

  v26 = a16 & 0xF;
  v28.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v23).u64[0];
  v28.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v23).u64[0];
  v29 = vrev64q_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a14 + a16), *(int8x16_t *)(v19 + v26 - 15)), *(int8x16_t *)(v16 + v26 + v17 + v21)), *(int8x16_t *)(v26 + v18 - 14)));
  v30 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v29, v29, 8uLL), v25), vmulq_s8(v28, v24)));
  *(int8x16_t *)(a14 + a16) = vextq_s8(v30, v30, 8uLL);
  return (*(uint64_t (**)(void))(v22 + 8 * (((2 * (v20 == 0)) | (16 * (v20 == 0))) ^ a13)))();
}

uint64_t sub_10016FB34(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v3 ^ (57 * (v4 != a3))))
                            - ((((v3 + 1740552856) & 0x9840FE7D) + 1165083225) ^ (v3 + 2104593643) & 0xC7FFEE87)))();
}

uint64_t sub_10016FB94(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  char v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (a8 ^ (36667 * ((v8 & 8) == 0))))
                            - ((94 * (a8 ^ (a4 + 79) ^ 0x4571EFAFu)) ^ 0x6D68)))();
}

uint64_t sub_10016FBE0(double a1, __n128 a2, __n128 a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, int a9)
{
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, _QWORD, __n128, __n128, __n128);

  LODWORD(STACK[0x37C]) = v13;
  LODWORD(STACK[0x378]) = v9;
  v15 = *(uint64_t (**)(uint64_t, _QWORD, __n128, __n128, __n128))(v14 + 8 * a9);
  LODWORD(STACK[0x374]) = v9 & 0xFFFFFFF8;
  a2.n128_u16[0] = -16963;
  a2.n128_u8[2] = -67;
  a2.n128_u8[3] = -67;
  a2.n128_u8[4] = -67;
  a2.n128_u8[5] = -67;
  a2.n128_u8[6] = -67;
  a2.n128_u8[7] = -67;
  LODWORD(STACK[0x370]) = a9 - 22041;
  a3.n128_u16[0] = 2056;
  a3.n128_u8[2] = 8;
  a3.n128_u8[3] = 8;
  a3.n128_u8[4] = 8;
  a3.n128_u8[5] = 8;
  a3.n128_u8[6] = 8;
  a3.n128_u8[7] = 8;
  return v15(v12 - 7, (v11 + v10 + a5 - a6), (__n128)xmmword_100DF7490, a2, a3);
}

uint64_t sub_10016FC6C(uint64_t a1, int a2, int8x16_t a3, int8x8_t a4, int8x8_t a5, uint64_t a6, int a7, uint64_t a8, int a9, int a10, char a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  int8x16x4_t v24;

  v21 = (a2 + a7);
  v24.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a7) & 0xF;
  v24.val[0].i64[1] = (v19 + (_BYTE)a7) & 0xF;
  v24.val[1].i64[0] = (v17 + (_BYTE)a7) & 0xF;
  v24.val[1].i64[1] = (v18 + (_BYTE)a7) & 0xF;
  v24.val[2].i64[0] = (a11 + (_BYTE)a7) & 0xF;
  v24.val[2].i64[1] = (v16 + (_BYTE)a7) & 0xF;
  v24.val[3].i64[0] = (v15 + (_BYTE)a7) & 0xF;
  v22 = STACK[0x2B0];
  v24.val[3].i64[1] = (v14 + (_BYTE)a7) & 0xF;
  *(int8x8_t *)(a1 + v21) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a1 + v21), *(int8x8_t *)(v13 + (v21 & 0xF) - 7)), veor_s8(*(int8x8_t *)((v21 & 0xF) + v11 - 4), *(int8x8_t *)((v21 & 0xF) + v12 - 6)))), a5), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v24, a3), a4)));
  return (*(uint64_t (**)(void))(v22 + 8 * (((a10 == a7) * v20) ^ a9)))();
}

uint64_t sub_10016FD3C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((LODWORD(STACK[0x370]) - 5922) * (LODWORD(STACK[0x378]) == LODWORD(STACK[0x374]))) ^ LODWORD(STACK[0x370]))))();
}

uint64_t sub_10016FD88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (a7 - 1165074809)) - 12))();
}

uint64_t sub_10016FDAC@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v10 = (a1 + v6);
  *(_BYTE *)(v8 + v10) ^= *(_BYTE *)(v5 + (v10 & 0xF)) ^ *(_BYTE *)((v10 & 0xF) + v3 + 3) ^ *(_BYTE *)((v10 & 0xF) + v4 + 1) ^ ((v10 & 0xF) * v7) ^ 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (v2 | ((a1 - 1 == a2) << 6))) - 12))();
}

void sub_10016FE04()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1163652878)
    v1 = 2134650450;
  else
    v1 = 2134608426;
  *(_DWORD *)(v2 + 8) = v1;
}

void sub_10016FE68(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 12) ^ (668045089 * (((a1 | 0xAEDC1B01) - a1 + (a1 & 0x5123E4FE)) ^ 0xE3156B0A));
  __asm { BR              X9 }
}

uint64_t sub_10016FF40@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  int v72;
  uint64_t v73;
  int v74;
  int v75;
  unsigned int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  BOOL v120;
  unsigned int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  __int16 v128;
  __int16 v129;
  int v130;
  int v131;
  unsigned int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  int v166;
  __int16 v167;
  int v168;
  int v169;
  int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  int v199;
  int v200;
  __int16 v201;
  unsigned int v202;
  unsigned int v203;
  int v204;
  unsigned int v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  unsigned int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  uint64_t v216;
  int v217;
  uint64_t v218;
  unsigned int v219;
  int v220;
  int v221;
  unsigned int v222;
  int v223;
  int v224;
  unsigned int v225;
  uint64_t v226;
  unsigned int v227;
  unsigned int v228;
  int v229;
  unsigned int v230;
  unsigned int v231;
  int v232;
  unsigned int v233;
  int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  unsigned int v242;
  int v243;
  unsigned int v244;
  int v245;
  int v246;
  uint64_t v247;
  int v248;
  unsigned int v249;
  __int16 v250;
  int v251;
  unsigned int v252;
  int v253;
  int v254;
  int v255;
  unsigned int v256;
  int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  unsigned int v263;
  int v264;
  unsigned int v265;
  unsigned int v266;
  int v267;
  int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  unsigned int v280;
  int v281;
  unsigned int v282;
  unsigned int v283;
  int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  int v291;
  unsigned int v292;
  int v293;
  unsigned int v294;
  unsigned int v295;
  int v296;
  int v297;
  unsigned int v298;
  int v299;
  unsigned int v300;
  int v301;
  int v302;
  unsigned int v303;
  unsigned int v304;
  int v305;
  int v306;
  uint64_t v307;
  unsigned int v308;
  unsigned int v309;
  int v310;
  unsigned int v311;
  int v312;
  uint64_t v313;
  int v314;
  unsigned int v315;
  uint64_t v316;
  int v317;
  uint64_t v318;
  unsigned int v319;
  int v320;
  int v321;
  int v322;
  unsigned int v323;
  int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  int v331;
  int v332;
  int v333;
  unsigned int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  int v339;
  int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  int v351;
  int v352;
  unsigned int v353;
  unsigned int v354;
  int v355;
  unsigned int v356;
  int v357;
  unsigned int v358;
  unsigned int v359;
  int v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  int v364;
  uint64_t v365;
  int v366;
  unsigned int v367;
  int v368;
  int v369;
  unsigned int v370;
  unsigned int v371;
  unsigned int v372;
  int v373;
  int v374;
  unsigned int v375;
  unsigned int v376;
  int v377;
  unsigned int v378;
  int v379;
  unsigned int v380;
  int v381;
  int v382;
  unsigned int v383;
  int v384;
  int v385;
  unsigned int v386;
  unsigned int v387;
  unsigned int v388;
  unsigned int v389;
  unsigned int v390;
  int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  int v395;
  unsigned int v396;
  unsigned int v397;
  int v398;
  unsigned int v399;
  unsigned int v400;
  int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  int v407;
  char v408;
  unsigned int v409;
  unsigned int v410;
  int v411;
  char *v412;
  int v413;
  char v414;
  char *v415;
  int v416;
  int v417;
  unsigned int v418;
  unsigned int v419;
  char *v420;
  unsigned int v421;
  char *v422;
  int v423;
  unint64_t v424;
  int v425;
  int v426;
  int v427;
  int v428;
  int v429;
  unsigned int v430;
  int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  int v435;
  int v436;
  unsigned int v437;
  unsigned int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  unsigned int v443;
  int v444;
  int v445;
  unsigned int v446;
  int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  int v451;
  unsigned int v452;
  int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  int v460;
  unsigned int v461;
  unsigned int v462;
  int v463;
  int v464;
  unsigned int v465;
  int v466;
  unsigned int v467;
  unsigned int v468;
  unsigned int v469;
  int v470;
  int v471;
  int v472;
  unsigned int v473;
  int v474;
  unsigned int v475;
  int v476;
  unsigned int v477;
  unsigned int v478;
  unint64_t v479;
  int v480;
  int v481;
  unsigned int v482;
  unsigned int v483;
  int v484;
  int v485;
  unsigned int v486;
  unsigned int v487;
  int v488;
  unsigned int v489;
  unsigned int v490;
  int v491;
  unsigned int v492;
  unsigned int v493;
  int v494;
  unsigned int v495;
  unsigned int v496;
  unsigned int v497;
  int v498;
  unsigned int v499;
  unsigned int v500;
  int v501;
  unsigned int v502;
  int v503;
  unsigned int v504;
  unsigned int v505;
  int v506;
  unsigned int v507;
  unsigned int v508;
  unsigned int v509;
  int v510;
  int v511;
  unsigned int v512;
  unsigned int v513;
  unsigned int v514;
  unsigned int v515;
  unsigned int v516;
  int v517;
  unsigned int v518;
  int v519;
  int v520;
  unsigned int v521;
  unsigned int v522;
  int v523;
  unsigned int v524;
  unsigned __int8 v525;
  unsigned int v526;
  int v527;
  int v528;
  int v529;
  unsigned int v530;
  unsigned int v531;
  int v532;
  int v533;
  int v534;
  unsigned int v535;
  unsigned int v536;
  unsigned int v537;
  unsigned int v538;
  unsigned int v539;
  unsigned int v540;
  unsigned int v541;
  int v542;
  unsigned int v543;
  unsigned int v544;
  int v545;
  unsigned int v546;
  unsigned int v547;
  unsigned int v548;
  int v549;
  unsigned int v550;
  unsigned int v551;
  int v552;
  unsigned int v553;
  unsigned int v554;
  unsigned int v555;
  unsigned int v556;
  int v557;
  unsigned int v558;
  int v559;
  unsigned int v560;
  unsigned int v561;
  int v562;
  unsigned int v563;
  int v564;
  int v565;
  unsigned int v566;
  unsigned int v567;
  unsigned int v568;
  unsigned int v569;
  unsigned int v570;
  int v571;
  unsigned int v572;
  unsigned int v573;
  unsigned int v574;
  int v575;
  unsigned int v576;
  int v577;
  unsigned int v578;
  int v579;
  unsigned int v580;
  unsigned int v581;
  int v582;
  unsigned int v583;
  int v584;
  unsigned int v585;
  unsigned int v586;
  unsigned int v587;
  unsigned int v588;
  int v589;
  unsigned int v590;
  unsigned int v591;
  int v592;
  int v593;
  unsigned int v594;
  unsigned int v595;
  char v596;
  unsigned int v597;
  unsigned int v598;
  unsigned int v599;
  unsigned int v600;
  unsigned int v601;
  int v602;
  int v603;
  unsigned int v604;
  unsigned int v605;
  unsigned int v606;
  unsigned int v607;
  unsigned int v608;
  unsigned int v609;
  int v610;
  unsigned int v611;
  int v612;
  unsigned int v613;
  unsigned int v614;
  int v615;
  int v616;
  int v617;
  unsigned int v618;
  unsigned int v619;
  unsigned int v620;
  int v621;
  int v622;
  unsigned int v623;
  int v624;
  unsigned int v625;
  unsigned int v626;
  unsigned int v627;
  int v628;
  int v629;
  unsigned int v630;
  unsigned int v631;
  int v632;
  unsigned int v633;
  int v634;
  unsigned int v635;
  int v636;
  int v637;
  int v638;
  unsigned int v639;
  int v640;
  int v641;
  unsigned int v642;
  int v643;
  unsigned int v644;
  unsigned int v645;
  int v646;
  int v647;
  int v648;
  unsigned int v649;
  unsigned int v650;
  int v651;
  unsigned int v652;
  int v653;
  unsigned int v654;
  unsigned int v655;
  unsigned int v656;
  unsigned int v657;
  int v658;
  int v659;
  int v660;
  unsigned int v661;
  int v662;
  unsigned int v663;
  int v664;
  unsigned int v665;
  unsigned int v666;
  unsigned int v667;
  int v668;
  unint64_t v669;
  int v670;
  int v671;
  int v672;
  unsigned int v673;
  int v674;
  unsigned int v675;
  int v676;
  int v677;
  unsigned int v678;
  int v679;
  unsigned int v680;
  unsigned int v681;
  int v682;
  unsigned int v683;
  int v684;
  int v685;
  unsigned int v686;
  unsigned int v687;
  int v688;
  unsigned int v689;
  unsigned int v690;
  unsigned int v691;
  int v692;
  unsigned int v693;
  int v694;
  int v695;
  unsigned int v696;
  unsigned int v697;
  int v698;
  unsigned int v699;
  unsigned int v700;
  unsigned int v701;
  int v702;
  int v703;
  unsigned int v704;
  int v705;
  unsigned int v706;
  int v707;
  unsigned int v708;
  unsigned int v709;
  unsigned int v710;
  int v711;
  unsigned int v712;
  unsigned int v713;
  unsigned int v714;
  unsigned int v715;
  int v716;
  int v717;
  int v718;
  unsigned int v719;
  unsigned int v720;
  unsigned int v721;
  unsigned int v722;
  unsigned int v723;
  unsigned int v724;
  unsigned int v725;
  int v726;
  unsigned int v727;
  unint64_t v728;
  unsigned int v729;
  int v730;
  int v731;
  int v732;
  unsigned int v733;
  int v734;
  unsigned int v735;
  int v736;
  int v737;
  unsigned int v738;
  int v739;
  unsigned int v740;
  int v741;
  unsigned int v742;
  unsigned int v743;
  unsigned int v744;
  unsigned int v745;
  unsigned int v746;
  unsigned int v747;
  unsigned int v748;
  int v749;
  unsigned int v750;
  unsigned int v751;
  int v752;
  unsigned int v753;
  unsigned int v754;
  unsigned int v755;
  unsigned int v756;
  unsigned int v757;
  unsigned int v758;
  int v759;
  int v760;
  unsigned int v761;
  int v762;
  unsigned int v763;
  unsigned int v764;
  unsigned int v765;
  int v766;
  int v767;
  int v768;
  unsigned int v769;
  unsigned int v770;
  int v771;
  int v772;
  unsigned int v773;
  unsigned int v774;
  unsigned int v775;
  int v776;
  int v777;
  unsigned int v778;
  unsigned int v779;
  unsigned int v780;
  unsigned int v781;
  int v782;
  unsigned int v783;
  unsigned int v784;
  unsigned int v785;
  int v786;
  int v787;
  unsigned int v788;
  int v789;
  int v790;
  int v791;
  int v792;
  int v793;
  int v794;
  unsigned int v795;
  unsigned int v796;
  unsigned int v797;
  int v798;
  int v799;
  int v800;
  int v801;
  unsigned int v802;
  unsigned int v803;
  unsigned int v804;
  unsigned int v805;
  unsigned int v806;
  int v807;
  unsigned int v808;
  int v809;
  unsigned int v810;
  int v811;
  unsigned int v812;
  unsigned int v813;
  unsigned int v814;
  int v815;
  unsigned int v816;
  int v817;
  int v818;
  int v819;
  unsigned int v820;
  unsigned int v821;
  int v822;
  int v823;
  int v824;
  unsigned int v825;
  unsigned int v826;
  unsigned int v827;
  unsigned int v828;
  int v829;
  int v830;
  unsigned int v831;
  int v832;
  unsigned int v833;
  unsigned int v834;
  unsigned int v835;
  int v836;
  unsigned int v837;
  unsigned int v838;
  unsigned int v839;
  unsigned int v840;
  int v841;
  unsigned int v842;
  int v843;
  unsigned int v844;
  unsigned int v845;
  int v846;
  int v847;
  unint64_t v848;
  int v849;
  int v850;
  int v851;
  int v852;
  unsigned int v853;
  unsigned int v854;
  unsigned int v855;
  unsigned int v856;
  unsigned int v857;
  int v858;
  int v859;
  int v860;
  unsigned int v861;
  unsigned int v862;
  int v863;
  int v864;
  int v865;
  int v866;
  unsigned int v867;
  unsigned int v868;
  int v869;
  unsigned int v870;
  unsigned int v871;
  unsigned int v872;
  unsigned int v873;
  unsigned int v874;
  unsigned int v875;
  int v876;
  int v877;
  int v878;
  unsigned int v879;
  unsigned int v880;
  unsigned int v881;
  int v882;
  int v883;
  unsigned int v884;
  int v885;
  unsigned int v886;
  unsigned int v887;
  int v888;
  unsigned int v889;
  int v890;
  unsigned int v891;
  int v892;
  int v893;
  int v894;
  int v895;
  unsigned int v896;
  unsigned int v897;
  unsigned int v898;
  int v899;
  int v900;
  unsigned int v901;
  unsigned int v902;
  int v903;
  int v904;
  int v905;
  unsigned int v906;
  unsigned int v907;
  int v908;
  int v909;
  int v910;
  unsigned int v911;
  unsigned int v912;
  unsigned int v913;
  unsigned int v914;
  unsigned int v915;
  int v916;
  int v917;
  char *v918;
  int v919;
  char v920;
  int v921;
  char v922;
  _BYTE *v923;
  char *v924;
  unsigned int v925;
  char *v926;
  char *v927;
  unsigned int v928;
  unsigned int v929;
  int v930;
  unsigned int v932;
  uint64_t v933;
  uint64_t v934;
  uint64_t v935;
  char v936;
  int v937;
  char v938;
  unsigned int v939;
  char *v940;
  char *v941;
  unsigned int v942;
  unsigned int v943;
  char *v944;
  char v945;
  char *v946;
  unsigned int v947;
  unsigned int v948;
  uint64_t v949;
  unsigned int v950;
  uint64_t v951;
  uint64_t v953;

  v5 = a2 + 18;
  v951 = v2;
  v6 = *(_QWORD *)(v3 + 8 * ((a2 + 18) ^ 0x7D3C)) - 1252270895;
  v7 = ((((*(unsigned __int8 *)(v6 + (*(unsigned __int8 *)(v4 - 102) ^ 0xE3)) ^ 0xD7)
        - ((2 * (*(unsigned __int8 *)(v6 + (*(unsigned __int8 *)(v4 - 102) ^ 0xE3)) ^ 0xD7)) & 0x14C)) << 8)
      - 858282496) ^ 0xCCD7A600;
  v8 = *(_QWORD *)(v3 + 8 * (v5 - 28593)) - 409586658;
  v9 = *(unsigned __int8 *)(v8 + (*(unsigned __int8 *)(v4 - 105) ^ 0x8ELL)) ^ *(unsigned __int8 *)(v4 - 105) ^ ((*(unsigned __int8 *)(v4 - 105) ^ 0x1B) - ((2 * (*(unsigned __int8 *)(v4 - 105) ^ 0x1B) + 10) & 0x12) - 2);
  v10 = ((*(unsigned __int8 *)(v4 - 101) ^ 0x1F) - ((2 * (*(unsigned __int8 *)(v4 - 101) ^ 0x1F) - 22) & 0xFFFFFF8C) + 59) ^ *(unsigned __int8 *)(v4 - 101) ^ *(unsigned __int8 *)(v8 + (*(unsigned __int8 *)(v4 - 101) ^ 0x8ALL));
  v11 = ((v10 ^ 0xC5) - ((2 * (v10 ^ 0xC5)) & 0x140) - 741961824) ^ 0xD3C68FA0 | (v7
                                                                                                 - ((2 * v7) & 0x13E83200)
                                                                                                 - 1980491385) ^ 0x89F41987;
  v12 = v11 - ((2 * v11) & 0x182856AA);
  v13 = *(_QWORD *)(v3 + 8 * (v5 ^ 0x6623)) - 1276915574;
  v14 = *(unsigned __int8 *)(v13 + (*(unsigned __int8 *)(v4 - 99) ^ 0xF6));
  HIDWORD(v15) = v14 ^ 2;
  LODWORD(v15) = (v14 ^ 0x68) << 24;
  v16 = ((((((((v15 >> 26) - ((2 * (v15 >> 26)) & 0xCA) - 19) ^ 5) - 8) ^ 0x8C)
         - ((2 * (((((v15 >> 26) - ((2 * (v15 >> 26)) & 0xFFFFFFCA) - 19) ^ 5) - 8) ^ 0x8C)) & 0x12E)) << 16)
       + 1217855488) ^ 0x48970000;
  v17 = v16 - ((2 * v16) & 0x9880000);
  LOWORD(v16) = ((((*(unsigned __int8 *)(v6 + (*(unsigned __int8 *)(v4 - 98) ^ 0x3ELL)) ^ 0x39)
                 - ((2 * (*(unsigned __int8 *)(v6 + (*(unsigned __int8 *)(v4 - 98) ^ 0x3ELL)) ^ 0x39)) & 0x1AE)) << 8)
               - 10496) ^ 0xD700;
  LOWORD(v16) = v16 - ((2 * v16) & 0x5600) - 21518;
  v18 = *(_QWORD *)(v3 + 8 * (v5 ^ 0x7A2E)) - 543726563;
  v19 = *(unsigned __int8 *)(v8 + (*(unsigned __int8 *)(v4 - 109) ^ 0xBCLL)) ^ *(unsigned __int8 *)(v4 - 109) ^ ((*(unsigned __int8 *)(v4 - 109) ^ 0x29) - ((2 * (*(unsigned __int8 *)(v4 - 109) ^ 0x29) - 22) & 0xFFFFFFCA) - 38);
  v20 = *(unsigned __int8 *)(v18 + (*(unsigned __int8 *)(v4 - 112) ^ 0xA0)) ^ 0x77;
  v21 = ((v20 - ((2 * v20) & 0x90)) << 24) + 1207959552;
  v22 = ((v21 ^ 0x48000000) - ((2 * v21) & 0x62000000) - 1314576883) ^ 0xB1A5260D | ((v19 ^ 0x50)
                                                                                   - ((2 * (v19 ^ 0x50)) & 0xBC)
                                                                                   - 981794466) ^ 0xC57B015E;
  v23 = v22 - ((2 * v22) & 0x1279E6B4);
  v24 = *(unsigned __int8 *)(v4 - 97);
  LODWORD(v8) = *(unsigned __int8 *)(v8 + (v24 ^ 0x22)) ^ 0x9C;
  LODWORD(v8) = (v17 - 2067515571) ^ 0x84C4374D | (v8 - 2 * (v8 & 0x7F) - 2074993281) ^ 0x84521D7F;
  v25 = v8 - ((2 * v8) & 0x714D9462);
  v949 = *(unsigned __int8 *)(v4 - 106);
  v26 = *(unsigned __int8 *)(v6 + (v949 ^ 0xEA)) ^ 0xA4;
  v27 = (((v26 - ((2 * v26) & 0xE8)) << 8) + 212497408) ^ 0xCAA7400;
  v28 = (v24 ^ 0x8D ^ ((v24 ^ 0xB7) - ((2 * (v24 ^ 0xB7) + 106) & 0x74) + 47))
      - ((2 * (v24 ^ 0x8D ^ ((v24 ^ 0xFFFFFFB7) - ((2 * (v24 ^ 0xFFFFFFB7) + 106) & 0x74) + 47))) & 0x14E)
      + 704559527;
  LODWORD(v8) = *(unsigned __int8 *)(v13 + (*(unsigned __int8 *)(v4 - 111) ^ 0xDDLL));
  HIDWORD(v15) = v8 ^ 2;
  LODWORD(v15) = (v8 ^ 0x68) << 24;
  LODWORD(v24) = (v27 - ((2 * v27) & 0x21A4BC00) + 1355963915) ^ 0x50D25E0B | ((v9 ^ 0x8E)
                                                                             - ((2 * (v9 ^ 0x8E)) & 0x124)
                                                                             - 908075374) ^ 0xC9DFDE92;
  v29 = v24 - ((2 * v24) & 0x1562300);
  LODWORD(v8) = ((v15 >> 26) - ((2 * (v15 >> 26)) & 0xF8) - 4) ^ 0xE9;
  LODWORD(v8) = ((((~(2 * (_DWORD)v8) | 0xFE29) + v8) << 16) - 202637312) ^ 0xF3EB0000;
  LODWORD(v24) = v8 - ((2 * v8) & 0x12B00000);
  v30 = *(unsigned __int8 *)(v18 + (*(unsigned __int8 *)(v4 - 104) ^ 0x17));
  v31 = *(unsigned __int8 *)(v18 + (*(unsigned __int8 *)(v4 - 108) ^ 0xAELL));
  v32 = *(unsigned __int8 *)(v18 + (*(unsigned __int8 *)(v4 - 100) ^ 0x7FLL));
  LOWORD(v18) = (v16 | 0x3FFE) + 29662;
  v33 = ((v16 & 0xBF00 ^ 0x2E00) + (v16 & 0xB00 ^ 0xC95401C3) - ((v16 & 0xBF00 ^ 0x2E00) & 0xB00)) ^ 0xD80C8EC9;
  v34 = (v25 + 950454833) ^ 0x38A6CA31 | (((2 * v33) & 0x22ACF814) - v33 + 42566469) ^ 0x13D1834F;
  v35 = (v34 - ((2 * v34) & 0x8BBDF7C6) + 1172241379) ^ v28;
  v36 = ((((v32 ^ 0xB3) - ((2 * (v32 ^ 0xB3)) & 0x96)) << 24) - 889192448) ^ 0xCB000000;
  v37 = ((v18 & 0x4000 | v36) - 758705225 - ((2 * v36) & 0xA4000000)) ^ 0xD2C713B7;
  v38 = (v37 - ((2 * v37) & 0x932333D4) + 1234278890) ^ 0x499199EA | v35 ^ 0x6C204244;
  v39 = *(unsigned __int8 *)(v13 + (*(unsigned __int8 *)(v4 - 107) ^ 0xD6));
  v40 = v38 - ((2 * v38) & 0x832FF4D8) - 1047004564;
  HIDWORD(v15) = v39 ^ 2;
  LODWORD(v15) = (v39 ^ 0x68) << 24;
  v41 = ((((((v15 >> 26) + (~(2 * (v15 >> 26)) | 0x63) - 49) ^ 0x16)
         - ((2 * (((v15 >> 26) + (~(2 * (v15 >> 26)) | 0x63) - 49) ^ 0x16)) & 0x156)) << 16)
       + 732626944) ^ 0x2BAB0000;
  LODWORD(v13) = *(unsigned __int8 *)(v13 + (*(unsigned __int8 *)(v4 - 103) ^ 0xE6));
  HIDWORD(v15) = v13 ^ 2;
  LODWORD(v15) = (v13 ^ 0x68) << 24;
  LODWORD(v13) = (v41 - ((2 * v41) & 0x5E540000) + 1865051670) & 0x89FF6E16 ^ 0x7F2A6E16;
  LODWORD(v13) = (v13 - ((2 * v13) & 0x68B25400) + 878295912) ^ 0x3459BB68 | (v29 + 1084952960) ^ 0x40AB1180;
  v42 = v13 - ((2 * v13) & 0x50C0BE2E) - 1470079209;
  v43 = (((((((2 * (v15 >> 26)) & 0x4E) - (v15 >> 26) + 88) ^ 0x88)
         - ((2 * ((((2 * (v15 >> 26)) & 0x4E) - (v15 >> 26) + 88) ^ 0x88)) & 0x1AA)) << 16)
       + 701825024) ^ 0x29D50000;
  v44 = (v43 - 424784909 - ((2 * v43) & 0x4D5C0000) - 3718) & 0x98FF3D6D ^ 0xE7AE3D6D;
  v45 = (v44 - ((2 * v44) & 0x6A684008) - 1254874476) ^ 0xB5342294 | (v12 - 871093419) ^ 0xCC142B55;
  v46 = v45 - ((2 * v45) & 0xD0277BFC) + 1746124286;
  LODWORD(v6) = *(unsigned __int8 *)(v6 + (*(unsigned __int8 *)(v4 - 110) ^ 0x3DLL)) ^ 0x6E;
  LODWORD(v6) = ((((_DWORD)v6 - 2 * (v6 & 0x1F)) << 8) - 1977934080) ^ 0x8A1B1F00;
  LODWORD(v6) = (v6 - ((2 * v6) & 0x531D3800) - 376529684) ^ 0xE98E9CEC | (v24 + 156826581) ^ 0x958FBD5;
  LODWORD(v6) = (v6 - ((2 * v6) & 0x7D5C56DC) - 1095881874) ^ 0xBEAE2B6E | (v23 - 1992494246) ^ 0x893CF35A;
  LODWORD(v6) = v6 - ((2 * v6) & 0xF5505E32) + 2057842457;
  LOBYTE(v45) = (*(_BYTE *)(v4 - 110) ^ 0x3A) & 0xA7 ^ 0xA4 ^ (((*(_BYTE *)(v4 - 110) ^ 0x3A) & 0xBF)
                                                             - ((2 * (*(_BYTE *)(v4 - 110) ^ 0x3A)) & 0x3C)
                                                             - 98);
  v47 = ((((v6 ^ 0x682478E5) >> (((v45 | 0xD) - (v45 | 0xF2) - 14) ^ 0x2F))
        - ((2 * ((v6 ^ 0x682478E5) >> (((v45 | 0xD) - (v45 | 0xF2) - 14) ^ 0x2F))) & 0x8DB462E8)
        - 958779020) ^ 0xC6DA3174) >> (((v45 | 0xD) - (v45 | 0xF2) - 14) ^ 0x37);
  v48 = *(_QWORD *)(v3 + 8 * (v5 - 27345)) - 199488706;
  v49 = (((v46 >> 8) & 0x2C ^ 0x232FD305) + ((v46 >> 8) & 0xD3) - 1) ^ 0x68EFD3A6;
  v50 = ((2 * v49) | 0xBF941A06) - v49 + 540406525;
  v51 = (((_BYTE)v47 - ((2 * (_BYTE)v47) & 0x28) - 92) & 0xF ^ 0xE)
      + (((_BYTE)v47 - ((2 * (_BYTE)v47) & 0x28) - 108) & 0xF0 ^ 0xA9D0D4B1)
      - 1;
  v52 = ((v51 & 0x1905549 ^ 0x42050149) + (v51 ^ 0xDF8DCA0) - ((v51 ^ 0xDF8DCA0) & 0x84200549)) ^ 0x639D5D60;
  v53 = *(_QWORD *)(v3 + 8 * (v5 - 28105)) - 1910513866;
  *(_DWORD *)(v4 - 124) = v5;
  v54 = *(_QWORD *)(v3 + 8 * (v5 ^ 0x78E8)) - 1051826651;
  v55 = v31 ^ 0xDD;
  v56 = *(_DWORD *)(*(_QWORD *)(v3 + 8 * (v5 - 28817))
                  - 2044143362
                  + 4
                  * (((v35 ^ 0xD3) + (v35 & 5 ^ 0x8CE1BC04) - ((v35 ^ 0xD3) & 5)) ^ 0x8CE1BCD8));
  v57 = *(_QWORD *)(v3 + 8 * (v5 - 28817)) - 2044143362;
  v58 = v56 - ((2 * v56 + 1598575462) & 0xB24D7F8E) - 1999967878;
  v59 = *(_DWORD *)(v53 + 4 * v52) ^ *(_DWORD *)(v48
                                                 + 4
                                                 * ((((2 * (BYTE2(v42) ^ 0xA54AC20F)) & 0x284045C)
                                                   - (BYTE2(v42) ^ 0xA54AC20F)
                                                   - 1137122095) ^ 0x197226B1)) ^ *(_DWORD *)(v54
                                                                                            + 4
                                                                                            * ((((2 * (BYTE1(v46) ^ 0x5A)) & 0xFFFFFF07)
                                                                                              - (BYTE1(v46) ^ 0x5A)
                                                                                              + 636) ^ 0x26D)) ^ v58 ^ (v58 >> 3) ^ (v58 >> 4) ^ (((2 * (BYTE2(v42) ^ 0x100828A2)) & 0x20100166) - (BYTE2(v42) ^ 0x100828A2) - 2037355956) ^ v50 ^ ((v50 ^ 0x940A0D22) - ((2 * (v50 ^ 0x940A0D22) + 535454840) & 0x2F05C5B4) + 125310230);
  LODWORD(v18) = ((v40 >> 8) & 0x5C ^ 0xF919D105) + ((v40 >> 8) & 0xA3) - 1;
  LODWORD(v31) = (v18 & 0x20081082 ^ 0x802080) + (v18 ^ 0x2E7DDE4B) - ((v18 ^ 0x2E7DDE4B) & 0xD4200C82);
  v60 = BYTE2(v46);
  LODWORD(v18) = ((BYTE2(v46) ^ 0x25) + (HIWORD(v46) & 0xB3 ^ 0x13FED992) - ((BYTE2(v46) ^ 0x25) & 0xB3)) ^ 0x91F6FDB3;
  v61 = (v18 | 0x7448B360) - (v18 | 0x8BB74C9F) - 1950921569;
  LODWORD(v18) = ((v60 ^ 0xE9) - ((2 * (v60 ^ 0xE9)) & 0x104) + 293052034) ^ 0x18129A0A;
  v62 = (((2 * v18) | 0x2AA79220) - v18 + 1789671152) ^ 0x9C36CDCA;
  LODWORD(v18) = ((2 * (BYTE1(v40) ^ 0x3F)) | 0x4066894) - (BYTE1(v40) ^ 0x3F) - 33764426;
  v63 = ((v18 & 0x1046EAA7 ^ 0x8044CAA5) + (v18 ^ 0x5223344A) - ((v18 ^ 0x5223344A) & 0x1046EAA7)) ^ 0xC066EA65;
  LODWORD(v18) = *(_DWORD *)(v57 + 4 * (v19 ^ 0x8Au));
  v64 = v18 - 129286359 + (~(2 * v18 + 1598575462) | 0x6EB1D515);
  v65 = BYTE2(v40);
  v66 = v40;
  v947 = v40;
  LODWORD(v18) = (((2 * (BYTE2(v40) ^ 0x43)) | 0xCBBA8C2) - (BYTE2(v40) ^ 0x43) - 106812513) ^ 0x244F42B;
  v67 = *(_DWORD *)(v48 + 4 * v62) ^ *(_DWORD *)(v53 + 4 * v55) ^ v64 ^ *(_DWORD *)(v54 + 4 * v63) ^ (v64 >> 3) ^ (v64 >> 4) ^ v31 ^ ((v31 ^ 0x23CC33F8) - ((2 * (v31 ^ 0x23CC33F8) - 538286984) & 0xBE592772) + 1327613429) ^ v61;
  LODWORD(v55) = ((v6 >> 8) & 0xEA) + (BYTE1(v6) ^ 0xFFFFFFEB) + (BYTE1(v6) | 0xCAC8B215) + 1;
  v68 = *(_DWORD *)(v57 + 4 * (v9 ^ 0xBBu));
  LODWORD(v31) = v68 - ((2 * v68 + 21517158) & 0x1A81E78) - 1334298385;
  LOWORD(v35) = 2 * ((BYTE2(v6) ^ 0x3E) & 3) - (BYTE2(v6) ^ 0x3E) - 9988;
  v69 = ((v35 & 0x413 ^ 0xAA454411) + (v35 & 0xBEC ^ 0x400888ED) - 1) ^ *(_DWORD *)(v48
                                                                                  + 4
                                                                                  * (((BYTE2(v6) ^ 0xB9)
                                                                                    + (WORD1(v6) & 0xEF ^ 0x223446)
                                                                                    - ((BYTE2(v6) ^ 0xB9) & 0xFFFFFFEF)) ^ 0x2234EA));
  v70 = *(_DWORD *)(v53 + 4 * (HIBYTE(v66) ^ 0xC3));
  v71 = (v70 ^ v69 ^ 0xFDA7392F) + 1;
  v70 ^= 0x9BFDA8C2;
  v72 = v70 + (v71 ^ 0x33BFDFDF) + ((2 * v71) & 0x677FBFBE) - 868212703;
  v73 = v48;
  LODWORD(v31) = *(_DWORD *)(v48 + 4 * (v65 ^ 0x10u)) ^ *(_DWORD *)(v53 + 4 * (v30 ^ 0xD)) ^ *(_DWORD *)(v54 + 4 * ((((v6 >> 8) & 0xFA ^ 0x20B) - ((unsigned __int16)(v6 >> 8) | 0x3FA) + 1022) & 0x3FF ^ 0x2BF)) ^ v31 ^ (v31 >> 3) ^ (v31 >> 4) ^ ((v18 | 0x2103341C) - (v18 | 0xDEFCCBE3) - 553858077) ^ ((v55 ^ 0xCAC8B279) - ((2 * (v55 ^ 0xCAC8B279) - 538286984) & 0x873F4D16) + 865392839);
  LOWORD(v48) = (BYTE1(v42) ^ 0x9F) - ((2 * (BYTE1(v42) ^ 0x9F)) & 0x1F4) - 23814;
  v74 = (v69 ^ ((v69 ^ 0x665A91ED) - ((2 * (v69 ^ 0x665A91ED) + 2) & 0x9B2207CA) - 846134298) ^ 0x6F7FA6AA ^ (v72 - ((2 * v72) & 0x769796BA) + 994823005))
      + v70;
  LODWORD(v18) = v74 - ((2 * v74) & 0x381FC7AE) + 470803415;
  LODWORD(v30) = ((v42 >> 8) & 0x28 ^ 0x59642029) + ((((v42 >> 8) & 0x7F ^ 0x2D5) - ((v42 >> 8) & 0x80)) & 0x2D7) - 1;
  v75 = *(_DWORD *)(v57 + 4 * (v10 ^ 0x5Cu));
  v76 = v75 - ((2 * v75 + 1598575462) & 0xD925D494) + 473371645;
  v77 = BYTE1(v67);
  v78 = ((BYTE1(v67) | 0xA818E4) - (BYTE1(v67) | 0x57E71B) + 5760795) & 0x800FFF;
  LODWORD(v48) = v76 ^ *(_DWORD *)(v54 + 4 * (((v48 & 0x2D4 ^ 0x1784DAC1) + (v48 & 0x12B) - 1) ^ 0x1784D874)) ^ (v76 >> 3) ^ (v76 >> 4) ^ v30 ^ ((v30 ^ 0x596422E4) - ((2 * (v30 ^ 0x596422E4) - 538286984) & 0xD2267EC6) - 653758049) ^ v18;
  LODWORD(v30) = (((2 * (v48 & 1)) ^ 2) & 0xFFFFFFFE | v48 & 1) - 1103694214;
  LODWORD(v48) = (v48 & 0xFFFFFFFE ^ 0xA8B0C2E2) - ((2 * (v48 & 0xFFFFFFFE ^ 0xA8B0C2E2)) & 0xBE7ADED4) + 1597861739;
  LODWORD(v30) = ((v48 & 0x9C837D4 ^ 0x1881414) + (v48 ^ 0xA8412BEA) - ((v48 ^ 0xA8412BEA) & 0x9C837D4)) ^ (-1494459611 - v30 - ((60708420 - 2 * v30) & 0x2306006));
  LOBYTE(v70) = v31 ^ v55;
  v79 = v31 ^ v55 ^ 0x60385433;
  LODWORD(v48) = ((BYTE1(v79) ^ 0xAA) - ((2 * (BYTE1(v79) ^ 0xAA)) & 0x15E) + 22210991) & 0x1428FFF;
  LODWORD(v18) = ((BYTE2(v67) ^ 0xB5) + (HIWORD(v67) & 0x7C ^ 0x31244148) - ((BYTE2(v67) ^ 0xB5) & 0x7C)) ^ 0x300E61B4;
  LODWORD(v18) = *(_DWORD *)(v53 + 4 * (HIBYTE(v59) ^ 0x88)) ^ (v18 - ((2 * v18) & 0x204EA7E) + 1066825023) ^ 0xE344AF7A ^ *(_DWORD *)(v73 + 4 * ((((2 * (BYTE2(v67) ^ 0xD3)) & 0xFFFFFF07) - (BYTE2(v67) ^ 0xD3) + 636) ^ 0x25F));
  LODWORD(v24) = (((2 * (v18 & 0xC5CCA679 ^ 0xC0088071)) | 0x3F7CDE20) - (v18 & 0xC5CCA679 ^ 0xC0088071) - 532573968) ^ 0xC330AF10;
  LODWORD(v18) = (v24 - ((2 * v24) & 0x741EAEDA) + 974083949) ^ 0x230D1744 | ((v18 & 0x3A335986 ^ 0x1B3660D0 | 0x4A75F5A9)
                                                                            - (v18 & 0x3A335986 ^ 0x1B3660D0 | 0xB58A0A56)
                                                                            - 1249244586) ^ 0x4B72DDFD;
  v80 = (BYTE1(v79) ^ 0x9B | 0xB85DF0E4) - (BYTE1(v79) ^ 0x9B | 0x47A20F1B) + 1201803035;
  LODWORD(v24) = ((v30 & 0x6A ^ 0xC82154B) + (v30 & 0x95) - 1) ^ 0x49A2113C;
  LODWORD(v24) = *(_DWORD *)(v57 + 4 * (((_DWORD)v24 - ((2 * (_DWORD)v24) & 0x80000112) - 1038484599) ^ 0x8739FF89));
  v81 = v24 - ((2 * v24 + 1598575462) & 0x8003013C) - 274355631;
  LODWORD(v24) = (BYTE2(v79) ^ 0x66 | 0xC0A9134E) - (BYTE2(v79) ^ 0x66 | 0x3F56ECB1) + 1062661297;
  v82 = ((BYTE2(v79) ^ 0x85) + (HIWORD(v79) & 0xFB ^ 0xBD7C7F7A) - ((BYTE2(v79) ^ 0x85) & 0xFFFFFFFB)) ^ 0xBD7C7F59;
  v83 = ((BYTE1(v30) ^ 0xAA) - ((2 * (BYTE1(v30) ^ 0xAA)) & 0x1F8) + 123257852) ^ 0x57596774;
  LODWORD(v6) = *(_DWORD *)(v57
                          + 4
                          * (((v59 ^ 0xE3978685 | 0xDB6E8E28)
                            - (v59 ^ 0xE3978685 | 0x249171D7)
                            + 613511639) ^ 0x38F9086B));
  LODWORD(v6) = v6 - ((2 * v6 + 1598575462) & 0xF31658FA) - 1456515536;
  v84 = v81 ^ *(_DWORD *)(v54 + 4 * (((v80 & 0x8050CDA8 ^ 0x804001) + (v80 & 0x380D3257) - 1) ^ 0xB8DDB063)) ^ (v81 >> 3) ^ (v81 >> 4) ^ ((v48 ^ 0x14289D1) + 1425215038 + ((2 * (v48 ^ 0x14289D1) + 267019384) & 0x981B802 ^ 0x3F95FFFF)) ^ (v18 - ((2 * v18) & 0x1E6105B0) + 254837464);
  LODWORD(v55) = ((2 * (BYTE2(v30) ^ 0x79)) & 0xFC) - (BYTE2(v30) ^ 0x79) - 890887295;
  LODWORD(v18) = ((2 * (BYTE2(v30) ^ 0x14)) | 0x196CB04C) - (BYTE2(v30) ^ 0x14) - 213276710;
  v85 = *(_DWORD *)(v54 + 4 * ((((2 * v83) & 0x15CCE) - v83 - 160214632) ^ 0xA672F553)) ^ *(_DWORD *)(v73 + 4 * v82) ^ *(_DWORD *)(v53 + 4 * (HIBYTE(v67) ^ 0x22)) ^ v6 ^ (v6 >> 3) ^ (v6 >> 4) ^ v24 ^ BYTE1(v30) ^ ((BYTE1(v30) ^ 0x21) - 1709589826 + ((2 * (BYTE1(v30) ^ 0x21) + 120) & 0x102 ^ 0xABB7FFFF));
  LODWORD(v6) = *(_DWORD *)(v57
                          + 4
                          * (((v67 ^ 0x402100DA | 0xE852AF19)
                            - (v67 ^ 0x402100DA | 0x17AD50E6)
                            + 397234406) ^ 0xA873AF31));
  LODWORD(v6) = v6 - ((2 * v6 + 524833638) & 0x17815726) - 1151019706;
  v86 = ((2 * (BYTE1(v59) ^ 0xF4)) & 0x1E8) - (BYTE1(v59) ^ 0xF4) + 4363;
  LODWORD(v6) = v6 ^ (v6 >> 4) ^ (v6 >> 3);
  LODWORD(v55) = *(_DWORD *)(v53 + 4 * (BYTE3(v31) ^ 0x86)) ^ *(_DWORD *)(v54 + 4 * (BYTE1(v59) ^ 0x47u)) ^ v86 ^ ((v86 ^ 0x1170) - ((2 * (v86 ^ 0x1170) + 1609196664) & 0x5FA20782) - 1613875715) ^ ((v55 & 0x20211E2 ^ 0x14005040) + (v55 ^ 0x4A2F23AB) - ((v55 ^ 0x4A2F23AB) & 0xC111E2)) ^ *(_DWORD *)(v73 + 4 * (((v18 & 0xCB2515E ^ 0xA581511D) + (v18 & 0x42EA1) - 1) ^ 0xA93709E4));
  v87 = (v55 ^ 0x1B3C868B)
      + (((v6 ^ 0xEEC7CD2C ^ v55) + 1) ^ 0x7FFEDEF9)
      + ((2 * ((v6 ^ 0xEEC7CD2C ^ v55) + 1)) & 0xFFFDBDF2)
      - 2147409657;
  LODWORD(v6) = ((v6 ^ 0xF5FB4BA7) - ((2 * (v6 ^ 0xF5FB4BA7) + 2) & 0x6D48DC0A) - 1230737914) ^ v6 ^ (v87 - ((2 * v87) & 0x7FD0E7E0) + 1072198640);
  LODWORD(v18) = BYTE2(v59);
  v88 = ((BYTE2(v59) ^ 0x20010AEE | 0x6E5D0465) - (BYTE2(v59) ^ 0x20010AEE | 0x91A2FB9A) - 1851589734) ^ 0x4E5C0EB4;
  v89 = 2 * (((v6 ^ 0x8348A9AD) & (v55 ^ 0x1B3C868B)) - ((2 * ((v6 ^ 0x8348A9AD) & (v55 ^ 0x1B3C868B))) & 0xC80D380))
      + 209769344;
  LODWORD(v6) = (v55 ^ 0x98742F26 ^ v6) + (v89 ^ 0xFB2D2C4F) + 139591729 + ((2 * v89) & 0xEF5BFF9C ^ 0x901A700);
  v90 = v6 - ((2 * v6) & 0xFAB8EB0) + 131450712;
  LODWORD(v55) = *(_DWORD *)(v57 + 4 * (v70 ^ 0xB6u));
  v91 = ((v55 - 681573811) ^ 0xD8442766) - ((2 * ((v55 - 681573811) ^ 0xD8442766)) & 0x9E919B6E);
  LODWORD(v55) = 2 * v55 - ((4 * v55 + 1568672052) & 0x7DE0FDEC) + 1840284560;
  v92 = (v55 & 0xB0884ECC ^ 0x9F5FA5FB) + ((v91 - 817312329) ^ 0xCF48CDB7);
  v93 = v92
      + ((2 * v55) & 0x41109418 ^ 0x41009408)
      - 803203903
      - ((2 * (v92 + ((2 * v55) & 0x41109418 ^ 0x41009408) - 803203903)) & 0x7E05C826)
      - 1090329581;
  LODWORD(v6) = *(_DWORD *)(v53 + 4 * (BYTE3(v30) ^ 0xB1)) ^ *(_DWORD *)(v73 + 4 * v88) ^ *(_DWORD *)(v54 + 4 * (((v77 ^ 0xC3 | 0xB0F50D8E) - (v77 ^ 0xC3 | 0x4F0AF271) + 1326117489) ^ 0xB0F50D68)) ^ v78 ^ v18 ^ ((v78 ^ 0x800809) - ((2 * (v78 ^ 0x800809) + 1609196664) & 0x4402603E) - 1845566885) ^ v93 ^ (v93 >> 3) ^ (v93 >> 4);
  v94 = ((v85 >> 7) & 0x1EC7F7E ^ 0x1C80B02) + ((v85 >> 8) ^ 0x9F137A3E);
  v95 = ((2 * (BYTE2(v85) ^ 0xB5)) | 0x16677FD4) - (BYTE2(v85) ^ 0xB5) - 187940842;
  v96 = (v95 & 0x230FF244 ^ 0x810CC044) + (v95 ^ 0x2A333E3A) - ((v95 ^ 0x2A333E3A) & 0x230FF244);
  v97 = ((v90 >> 8) & 0xAF ^ 0x56410003) + ((v90 >> 8) & 0x50 ^ 0x8B81611) - 1;
  LODWORD(v30) = *(_DWORD *)(v57 + 4 * (v6 ^ 0xFBu));
  v98 = v30 + 1720495287 + (~(2 * v30 + 1598575462) | 0x922EF9F9);
  v99 = v84 ^ v48;
  v100 = *(_DWORD *)(v53 + 4 * (HIBYTE(v84) ^ 0x1D)) ^ *(_DWORD *)(v73
                                                                   + 4
                                                                   * (((BYTE2(v85) ^ 0x52 | 0x63DBCEF1)
                                                                     - (BYTE2(v85) ^ 0x52 | 0x1C24310E)
                                                                     + 472133902) ^ 0x63DBCE7Eu)) ^ v98 ^ *(_DWORD *)(v54 + 4 * ((((2 * (BYTE1(v90) ^ 0x40C20331)) | 0xABF9075A) - (BYTE1(v90) ^ 0x40C20331) - 1442612141) ^ 0x153E8021)) ^ (v98 >> 3) ^ (v98 >> 4) ^ v96 ^ v97 ^ ((v97 ^ 0x5EF91666) - ((2 * (v97 ^ 0x5EF91666) + 535454840) & 0x19B88926) + 2094102223);
  LODWORD(v48) = (((2 * (v84 ^ v48)) & 0x90) + ((v84 ^ v48) & 0xD9 ^ 0xFFFFFF6E) + 33380760) ^ 0x70797086;
  LODWORD(v48) = (((2 * v48) & 0xA20010F0) - v48 - 1366313087) & 0xFF0BFFD9 ^ 0xDF0B9EA7;
  v101 = *(_DWORD *)(v57
                   + 4
                   * (v99 & 0x26 ^ 0x680643A5 ^ ((_DWORD)v48 + 1745240996 + ((2 * (_DWORD)v48) & 0x50048702 ^ 0xFFFFFFBB))));
  v102 = 2 * v101 - ((4 * v101 + 1568672052) & 0xD76EFE28) - 1703443538;
  LODWORD(v55) = (v102 & 0xB0884ECC ^ 0x9A75A3FB)
               + ((((v101 - 681573811) ^ 0xD8442766) - ((2 * ((v101 - 681573811) ^ 0xD8442766)) & 0xABD5E5BA) - 706022691) ^ 0xD5EAF2DD)
               + ((2 * v102) & 0x61009998 ^ 0x41009808)
               - 989195775;
  v103 = v55 - ((2 * v55) & 0xD7DB72AA) - 336742059;
  v104 = *(_DWORD *)(v73
                   + 4 * ((((2 * (BYTE2(v90) ^ 0x5B)) | 0xAB3A041A) - (BYTE2(v90) ^ 0x5B) - 1436353037) ^ 0x559D0241)) ^ *(_DWORD *)(v53 + 4 * (HIBYTE(v85) ^ 0x46)) ^ *(_DWORD *)(v54 + 4 * (BYTE1(v6) ^ 0xB8u)) ^ v103 ^ (v103 >> 3) ^ (v103 >> 4) ^ BYTE1(v6) ^ ((BYTE1(v6) ^ 0x70) + 939503319 + ((2 * (BYTE1(v6) ^ 0x70) + 120) & 0x134 ^ 0x6FFF9FFF)) ^ (((2 * (BYTE2(v90) ^ 0x4289448B)) | 0x1653A998) - (BYTE2(v90) ^ 0x4289448B) - 187290828);
  v105 = ((unsigned __int16)(v99 ^ 0xBB7D) >> 8);
  LODWORD(v30) = ((2 * v105) | 0x55BE8B34) - v105 - 1260406170;
  v106 = (v105 ^ 0xA1) + (((v99 ^ 0x6296BB7Du) >> 8) & 0x73 ^ 0x5BA4A952) - ((v105 ^ 0xA1) & 0x73);
  v107 = ((v106 & 0x6A6 ^ 0xA0120624) + (v106 ^ 0x58E1C8D3) - ((v106 ^ 0x58E1C8D3) & 0x10426A6)) ^ 0xA253477C;
  v108 = *(_DWORD *)(v57 + 4 * (v85 ^ 0x31u));
  v109 = v108 - ((2 * v108 + 1598575462) & 0xB6FDCC38) + 186847183;
  v110 = (((2 * (v94 + 65)) & 0x1EE) + ((v94 + 65) ^ 0x5D5B9FF7) - 1566285815) % 0xB4;
  v111 = ((2 * (_WORD)v110) & 0x15C)
       + (v110 ^ 0xBF66DEAE)
       + ((2 * (v94 + (v110 ^ 0xFFFFFF45) - ((2 * (_WORD)v110) & 0x74) + 252)) & 0x1F6)
       + ((v94 + (v110 ^ 0x45) - ((2 * v110) & 0x74) - 4) ^ 0x570FCDFB);
  v112 = v111 - ((2 * v111 + 319989422) & 0x15CF9884) + 1953570713;
  LODWORD(v48) = ((v99 ^ 0x6296BB7Du) >> 16);
  v113 = ((2 * (v48 ^ 0x8B)) | 0x57A8ECF0) - (v48 ^ 0x8B) + 1412139400;
  v114 = ((v48 ^ 0x2A254F9 | 0x174D9015) - (v48 ^ 0x2A254F9 | 0xE8B26FEA) - 390959126) ^ 0x15EFC46C;
  LODWORD(v48) = *(_DWORD *)(v73
                           + 4
                           * (((BYTE2(v6) ^ 0x6602480F) - ((2 * (BYTE2(v6) ^ 0x6602480F)) & 0x48048100) + 615445632) ^ 0x42ACBC18u)) ^ *(_DWORD *)(v54 + 4 * v107) ^ v109 ^ *(_DWORD *)(v53 + 4 * (HIBYTE(v90) ^ 0xD0)) ^ (v109 >> 3) ^ (v109 >> 4) ^ ((BYTE2(v6) ^ 0x2568242F | 0xE66A649E) - (BYTE2(v6) ^ 0x2568242F | 0x19959B61) + 429235041) ^ v30 ^ ((v30 ^ 0xA9E4589) + 1455114496 + (~(2 * (v30 ^ 0xA9E4589) - 538286984) | 0x3273D279));
  LODWORD(v18) = *(_DWORD *)(v57 + 4 * (v90 ^ 0x89u));
  LODWORD(v18) = v18 - ((2 * v18 + 1598575462) & 0x97249BAA) + 2067167112;
  LODWORD(v6) = *(_DWORD *)(v53 + 4 * (BYTE3(v6) ^ 6)) ^ *(_DWORD *)(v73 + 4 * v114) ^ v18 ^ *(_DWORD *)(v54 + 4 * (v112 ^ 0x8AE7CC8A)) ^ (v18 >> 4) ^ (v18 >> 3) ^ v113 ^ v112 ^ ((v112 ^ 0x8AE7CC42) - ((2 * (v112 ^ 0x8AE7CC42) + 1609196664) & 0x734BF25C) - 1449448598) ^ 0x5D56A08C;
  LODWORD(v55) = (v6 & 0x32B08000 ^ 0x32B00000)
               + (v6 & 0x2908000 ^ 0x40428715)
               - ((v6 & 0x32B08000 ^ 0x32B00000) & 0x2908000);
  LODWORD(v55) = ((v55 & 0x11020000 ^ 0x1100680A) + (v55 ^ 0xCA968315) - ((v55 ^ 0xCA968315) & 0x11060400)) ^ 0x9BC2680A | ((v6 & 0x5082B45 ^ 0x2301) + (v6 & 0x2B45 ^ 0x2558854) - ((v6 & 0x5082B45 ^ 0x2301) & 0x7FFFF)) & 0x508FFDF ^ 0x1008A14;
  LODWORD(v30) = ((2 * v48) ^ 0xB0260526) - ((2 * ((2 * v48) ^ 0xB0260526)) & 0x885BAB8) - 1002250916;
  LODWORD(v48) = (((v48 ^ 0xD8130293) - 1386346214) ^ 0xEEEA75BF)
               + ((2 * ((v48 ^ 0xD8130293) - 1386346214)) & 0xDDD4EB7E)
               + (v30 & 0x5ABC1234 ^ 0x50606247)
               + ((2 * v30) & 0x95380048 ^ 0x7FFFFFF7)
               + 1;
  v115 = v48 - ((2 * v48 + 23736284) & 0x6F5B059A) - 1201497413;
  LODWORD(v6) = (v55 - ((2 * v55) & 0x116F3F4) + 9140730) ^ 0x8B79FA | ((v6 & 0xC84754BA ^ 0x48061408 | 0xC4147422)
                                                                      - (v6 & 0xC84754BA ^ 0x48061408 | 0x3BEB8BDD)
                                                                      + 1005292509) ^ 0x8454640A;
  v116 = v6 - ((2 * v6) & 0xE3C2EF64) - 236881998;
  LODWORD(v55) = (((v100 >> 8) & 0x25) + ((v100 >> 8) & 0xDA ^ 0x46713) - 1) & 0x46FFF;
  v117 = (((2 * (BYTE1(v100) ^ 0xF9)) | 0xB763B68E) - (BYTE1(v100) ^ 0xF9) - 1538382663) ^ 0x83B572CF;
  LODWORD(v18) = *(_DWORD *)(v57 + 4 * (v104 ^ 0xEFu));
  LODWORD(v18) = v18 - ((2 * v18 + 1598575462) & 0x9F81ABA2) - 10158204;
  v118 = *(_DWORD *)(v73
                   + 4
                   * ((((2 * (BYTE2(v116) ^ 0x2100B24D)) | 0xD6B46D04) - (BYTE2(v116) ^ 0x2100B24D) - 1801074306) ^ 0x4A5A842A)) ^ *(_DWORD *)(v53 + 4 * (HIBYTE(v115) ^ 0x14)) ^ *(_DWORD *)(v54 + 4 * ((v117 - ((2 * v117) & 0x2909C0C4) - 1803231134) ^ 0x4C8049BB)) ^ v18 ^ (v18 >> 3) ^ (v18 >> 4) ^ v55 ^ ((v55 ^ 0x46772) - 1766478914 + ((2 * (v55 ^ 0x46772) + 25720) & 0xF302 ^ 0xB27FFFFF)) ^ ((BYTE2(v116) ^ 0x802987C) - ((2 * (BYTE2(v116) ^ 0x802987C)) & 0x10050076) - 384129989);
  v119 = ((v118 >> 7) & 0x76FA3E ^ 0x341822) + ((v118 >> 8) ^ 0x9D61710E);
  LODWORD(v6) = (((2 * (v119 + 225)) & 0x1F6)
               + ((((v118 >> 7) & 0x3E ^ 0x22) + (BYTE1(v118) ^ 0xE) - 31) ^ 0x73BF7EFB)
               - 1941929723)
              % 0xD1;
  v120 = ((2 * (_DWORD)v6) & 0x1CE) + (v6 ^ 0xFACFFBE7) == -87032857;
  LODWORD(v18) = (BYTE1(v104) ^ 0x39) + ((v104 >> 8) & 0xB9 ^ 0x9F53380) - ((BYTE1(v104) ^ 0x39) & 0xB9);
  LODWORD(v30) = *(_DWORD *)(v73
                           + 4 * ((((2 * (BYTE2(v100) ^ 0x4F)) & 0xFFFFFFE3) - (BYTE2(v100) ^ 0x4F) + 4366) ^ 0x1146)) ^ ((BYTE2(v100) ^ 0x2380DF) - ((2 * (BYTE2(v100) ^ 0x2380DF)) & 0x400A2) - 220827823) ^ 0x811D4518;
  v121 = *(_DWORD *)(v53 + 4 * (HIBYTE(v116) ^ 0x28)) ^ 0x9BFDA8C2;
  v122 = 2 * ((v30 & v121) - ((2 * (v30 & v121)) & 0x6C2363E)) - 2034092482;
  v123 = (((2 * (v115 ^ 0xE7)) & 0x156) - (v115 ^ 0xE7) - 1396637356) ^ 0x2CC38476;
  v124 = *(_DWORD *)(v57 + 4 * ((((2 * v123) & 0x16DC) - v123 + 1131672721) ^ 0xC37171BF));
  v125 = 2 * v124 - ((4 * v124 + 1568672052) & 0x7B474E2C) - 329012303;
  LODWORD(v30) = ((v30 + v121) ^ 0x7BFEB977)
               + ((2 * (v30 + v121)) & 0xF7FD72EE)
               + (v122 ^ 0xFE3353F)
               + ((2 * v122) & 0xEDBDF9FC ^ 0xF27B9783)
               + 1;
  v126 = (v125 & 0xB0884ECC ^ 0x59F5F9D8)
       + ((((v124 - 681573811) ^ 0xD8442766) - ((2 * ((v124 - 681573811) ^ 0xD8442766)) & 0xE48E40F4) + 1917263994) ^ 0x7247207A)
       + ((2 * v125) & 0x40009D98 ^ 0x40000C08)
       - 1769340892;
  v127 = (v126 - ((2 * v126) & 0x7BDBCA42) - 1108482783) ^ *(_DWORD *)(v54
                                                                     + 4
                                                                     * (((v18 & 0xC52B58 ^ 0x30000840)
                                                                       + (v18 ^ 0xFE56398)
                                                                       - ((v18 ^ 0xFE56398) & 0x6104B58)) ^ 0x30C53BD2)) ^ ((v126 - ((2 * v126) & 0x7BDBCA42) - 1108482783) >> 3) ^ ((v126 - ((2 * v126) & 0x7BDBCA42) - 1108482783) >> 4) ^ ((BYTE1(v104) ^ 0x5A) + 1519374255 + ((2 * (((BYTE1(v104) ^ 0x5A) + 60) & 0x173 ^ ((v104 >> 8) | 0x7FFFFFFE))) ^ 0xD5202003)) ^ (v30 - ((2 * v30 - 171931888) & 0x854EC944) + 1032300586);
  v128 = (v6 ^ 0x4411) - ((2 * v6) & 0x1DC) - 28505;
  if (v120)
    v129 = v128;
  else
    v129 = -11080;
  v130 = (((2 * ((v127 ^ BYTE1(v104)) ^ 0x37)) & 0xA6)
        - ((v127 ^ BYTE1(v104)) ^ 0x37)
        + 1336004268) ^ 0x510E8AC;
  v131 = *(_DWORD *)(v57 + 4 * ((((2 * v130) & 0x14024CE6) - v130 - 708931188) ^ 0x9F0FB7ED));
  v132 = (((v131 - 1348195917) >> 4) - (((v131 - 1348195917) >> 3) & 0x1F8663AA) + 264450517) ^ (((v131 - 1348195917) >> 3) - (((v131 - 1348195917) >> 2) & 0x3DB3CBEA) - 1629886987);
  v133 = (v132 & 0x20 | ((((v132 & 0x20) >> 5) & 1) << 6) | 0x7BF7DB1F) ^ 0x40;
  v120 = ((v133 - 2079841087) & (v131 - 1348195917)) == ((2 * ((v133 - 2079841087) & (v131 - 1348195917))) & 0x570AD240);
  v134 = ((HIWORD(v104) & 0x2D ^ 8) + (HIWORD(v104) & 0xD2 ^ 0x72250441) - 1) ^ 0x402D428E;
  v135 = v134 - ((2 * v134) & 0x8272) - 983275207;
  v136 = ((2 * (BYTE2(v104) ^ 0xBE)) | 0x513EE4AE) - (BYTE2(v104) ^ 0xBE) - 681538135;
  v137 = ((v136 & 0x200615D5 ^ 0x21040180) + (v136 & 0x8996A2A ^ 0xAD96203) - 1) ^ 0xFCBDEEDA;
  v138 = v135 ^ ((v135 ^ 0x893D0D6) - ((2 * (v135 ^ 0x893D0D6) + 2) & 0x8E7B38F6) + 1195220092) ^ (v137
                                                                                                 - ((2 * v137 + 306) & 0x134FD430)
                                                                                                 + 161999537) ^ 0xB9F6594A;
  v139 = ((2 * (BYTE1(v115) ^ 0xB7)) & 0x1C) - (BYTE1(v115) ^ 0xB7) + 1904512753;
  v140 = (BYTE1(v115) ^ 0x31) - ((2 * (BYTE1(v115) ^ 0x31)) & 0x170) - 520897352;
  v141 = *(_DWORD *)(v57 + 4 * (v116 ^ 0xDEu));
  v142 = v141 - ((2 * v141 + 1598575462) & 0x96C7E27A) - 83354896;
  v143 = *(_DWORD *)(v73 + 4 * (v138 + 152)) ^ *(_DWORD *)(v53 + 4 * (HIBYTE(v100) ^ 0xE7)) ^ *(_DWORD *)(v54 + 4 * (((v140 & 0x6002075E ^ 0xD0C0344) + (v140 ^ 0x60E36C9A) - ((v140 ^ 0x60E36C9A) & 0x575E)) ^ 0xED1E8707)) ^ v142 ^ (v142 >> 3) ^ (v142 >> 4) ^ (1390335805 - ((v139 & 0x1080833E) + (v139 | 0xDEFEF73E))) ^ (((1390335805 - ((v139 & 0x1080833E) + (v139 | 0xDEFEF73E))) ^ 0x425F553B) - ((2 * ((1390335805 - ((v139 & 0x1080833E) + (v139 | 0xDEFEF73E))) ^ 0x425F553B) - 538286984) & 0xF5DE8BF2) + 1793357877) ^ v135;
  v144 = (BYTE2(v115) ^ 0x87) - ((2 * (BYTE2(v115) ^ 0x87)) & 0x99999999) - 2033448756;
  v145 = (BYTE1(v116) ^ 0x9A) - ((2 * (BYTE1(v116) ^ 0x9A)) & 0xEA) - 1925961611;
  v146 = (v145 & 0x81002605 ^ 0x24AC200) + (v145 ^ 0xADA42517) - ((v145 ^ 0xADA42517) & 0x100605);
  v147 = (((2 * (BYTE2(v115) ^ 0xD4)) & 0x1D4) - (BYTE2(v115) ^ 0xD4) + 1045) ^ 0x4F4;
  v148 = ((BYTE1(v116) ^ 0x82) + ((v116 >> 8) & 0x3E ^ 0xB2B5E63C) - ((BYTE1(v116) ^ 0x82) & 0x3E)) ^ 0xBFE5A67E;
  v149 = *(_DWORD *)(v57 + 4 * (v100 ^ 0x1Cu));
  v150 = v149 - ((2 * v149 + 1598575462) & 0x574B604A) - 615917096;
  v151 = *(_DWORD *)(v73 + 4 * v147) ^ *(_DWORD *)(v53 + 4 * (HIBYTE(v104) ^ 0xF0)) ^ v150 ^ *(_DWORD *)(v54 + 4 * ((((2 * v148) & 0x128083C4) - v148 - 1003047395) ^ 0xC966F6EF)) ^ (v150 >> 3) ^ (v150 >> 4) ^ ((v144 & 0x20801B8 ^ 0x79231130) + (v144 ^ 0x82484CCC) - ((v144 ^ 0x82484CCC) & 0x8001B8)) ^ v146 ^ ((v146 ^ 0xA3CAEB05) - ((2 * (v146 ^ 0xA3CAEB05) - 538286984) & 0x89C7C9C4) + 886642462);
  v152 = v143 ^ 0xB20B84BC;
  v153 = (BYTE2(v152) ^ 0x3A | 0x2589F161) - (BYTE2(v152) ^ 0x3A | 0xDA760E9E) - 629797218;
  v154 = (((2 * (BYTE1(v151) ^ 0x58)) | 0x61B4DFAE) - (BYTE1(v151) ^ 0x58) + 1327861801) ^ 0xBD5BAF4F;
  v155 = (v154 | 0x629745D5) - (v154 | 0x9D68BA2A) - 1654080982;
  v156 = ((v118 ^ 0x5F | 0x17B0507A) - (v118 ^ 0x5F | 0xE84FAF85) - 397430907) ^ 0x79351EA;
  v157 = *(_DWORD *)(v57 + 4 * ((((2 * v156) & 0x131902D2) - v156 - 1233944938) ^ 0xA6507F19));
  v158 = v157 - ((2 * v157 + 1598575462) & 0x96563A22) - 87079228;
  v159 = *(_DWORD *)(v73 + 4 * (((v153 & 0x2081038E ^ 0x270078D) + (v153 & 0x508F071 ^ 0xC5087861) - 1) ^ 0xE2F18EB7)) ^ *(_DWORD *)(v53 + 4 * (HIBYTE(v127) ^ 0xB6)) ^ *(_DWORD *)(v54 + 4 * (BYTE1(v151) ^ 0x2Au)) ^ v158 ^ (v158 >> 3) ^ (v158 >> 4) ^ (((2 * (BYTE2(v152) ^ 0x408509F9)) & 0x80001324) - (BYTE2(v152) ^ 0x408509F9) + 988235373) ^ v155 ^ ((v155 ^ 0x6F1685F7) - 2 * (((v155 ^ 0x6F1685F7) + 1878340156) & 0x47D81D1F ^ (v155 ^ 0x6F1685F7) & 1) + 936202074);
  v160 = ((2 * v159) ^ 0x6D7FBABE) - ((2 * ((2 * v159) ^ 0x6D7FBABE)) & 0x30AD0674) + 2018935610;
  v161 = (((v159 ^ 0x36BFDD5F) + 468083616) ^ 0xFB9FCF5B)
       + ((2 * ((v159 ^ 0x36BFDD5F) + 468083616)) & 0xF73F9EB6)
       + (v160 & 0x37CCC740 ^ 0xA20F8301)
       + ((2 * v160) & 0x4B098E80 ^ 0xBFF6F9FF)
       + 1;
  v162 = v161 - ((2 * v161 - 466984632) & 0xE13A05CA) + 1655845769;
  v164 = (((((v162 >> 15) & 0x7A ^ 0x3A) + (BYTE2(v162) ^ 0x20) + 67) ^ 0x1FEEF7FF)
        + 2 * (((v162 >> 15) & 0x7A ^ 0x3A) + (BYTE2(v162) ^ 0x20) + 67)
        - 535754751)
       % 0x79;
  v165 = v133 - 167774228;
  v166 = -303059350 - v133;
  if (v120)
    v166 = v165;
  v167 = v119 - 983 + v129;
  v168 = v167;
  v169 = v167 ^ 0x39E7FFEF;
  v167 *= 2;
  v170 = v169 + (v167 & 0x1DE);
  v171 = ((BYTE2(v151) ^ 0xFE655127 | 0x28FBBE81) - (BYTE2(v151) ^ 0xFE655127 | 0xD704417E) - 687586946) ^ 0xD75FCFB8;
  v172 = ((v168 - (v167 & 0x1FA) - 1960336899) ^ 0x74D85ECA) + 1;
  v173 = (v172 ^ 0x7FDDFF9B) + v170 + ((2 * v172) & 0xFFBBFF36);
  v174 = *(_DWORD *)(v54
                   + 4
                   * (((v173 - ((2 * v173 + 208929004) & 0x29693D62) - 621895897) ^ 0x6B4B6141) + v170 - 971505647)) ^ (v170 - 971505647) ^ (v170 + 514531065 + ((2 * v170 + 1729690) & 0x3BD956 ^ 0x2EFFFFFF)) ^ 0xA2672BB9;
  v175 = ((v132 & 0x1FFFFFDF ^ 0xC87254) + (v132 & 0xD7CF40 ^ 0xA0178D00) - ((v132 & 0x1FFFFFDF ^ 0xC87254) & 0xD7CF40)) ^ 0xB0876F40;
  v176 = (HIWORD(v118) & 0x37 ^ 0xA4FE2511) + (HIWORD(v118) & 0xC8 ^ 0x89) - 1;
  v177 = *(_DWORD *)(v73 + 4 * ((((2 * v171) | 0x61F2AE8C) - v171 + 1325836474) ^ 0xB138775E)) ^ *(_DWORD *)(v53 + 4 * (HIBYTE(v143) ^ 0x50)) ^ ((v175 | 0x514C2979) - (v175 | 0xAEB3D686) - 1363945850) ^ ((BYTE2(v151) ^ 0xA903596 | 0x6C77C2DE) - (BYTE2(v151) ^ 0xA903596 | 0x93883D21) - 1819787999) ^ (v166 + v131 - 2 * ((v166 + v131 + 229398152) & 0xC9A979D ^ (v166 + v131) & 4) + 1246162465) ^ (v174 - ((2 * v174) & 0xAD9583A8) + 1456128468);
  v178 = (~BYTE1(v127) | 0xBE910510) - (~BYTE1(v127) | 0x416EFAEF) + 1097792239;
  v179 = ((v127 >> 8) & 0x31) - 1242108673 + ((v127 >> 8) & 0xCE ^ 0x85);
  v180 = (((v143 ^ 0xB20B84BC) & 0x80)
        + (v143 ^ 0xFFFFFF69)
        + (v143 ^ 0xBC | 0xA6EF577F)
        + 1) ^ 0x8AED577F;
  v181 = *(_DWORD *)(v57 + 4 * ((v180 - ((2 * v180) & 0x1F3FFF70) - 1885339720) ^ 0xA39DFFB1));
  v182 = v181 - ((2 * v181 + 1598575462) & 0x9124055A) - 130667424;
  v183 = *(_DWORD *)(v73
                   + 4
                   * (((v176 & 0x922609 ^ 0x40011808) + (v176 ^ 0xB19AE7B5) - ((v176 ^ 0xB19AE7B5) & 0x604209)) ^ 0x5597BCB1)) ^ *(_DWORD *)(v53 + 4 * (HIBYTE(v151) ^ 0xB4)) ^ *(_DWORD *)(v54 + 4 * (((((v179 & 0x25308B30) + (v179 ^ 0x35B4DBBB)) | 0x40080000) - ((v179 ^ 0x35B4DBBB) & 0x400730)) ^ 0xE53AB9D8)) ^ v182 ^ (v182 >> 3) ^ (v182 >> 4) ^ (((2 * (BYTE2(v118) ^ 0x7206068C)) | 0x2FF78A38) - (BYTE2(v118) ^ 0x7206068C) - 402375964) ^ v178 ^ ((v178 ^ 0xBE9105F0) - ((2 * (v178 ^ 0xBE9105F0) - 538286984) & 0xF462D276) + 1780915063);
  v184 = ((2 * (BYTE1(v152) ^ 0x400A08D4)) | 0x698FE7B2) - (BYTE1(v152) ^ 0x400A08D4) + 1261964327;
  v185 = (((2 * (BYTE2(v127) ^ 0x81)) & 0x16E) - (BYTE2(v127) ^ 0x81) + 353226568) ^ 0x419CE4A;
  v186 = HIWORD(v127);
  v187 = *(_DWORD *)(v53 + 4 * (HIBYTE(v118) ^ 0xF9));
  v188 = ((v185 | 0x466ADF7E) - (v185 | 0xB9952081) - 1181409151) ^ *(_DWORD *)(v73
                                                                              + 4
                                                                              * (((BYTE2(v127) ^ 0xA941CE)
                                                                                + (HIWORD(v127) & 0x1D ^ 0x5A060A11)
                                                                                - ((BYTE2(v127) ^ 0xA941CE) & 0x89411D)) ^ 0x5A260ADC));
  v189 = (v187 ^ 0x4094235E ^ v188) + 1;
  v188 ^= 0x24967463u;
  v190 = v188 + (v189 ^ 0xFDF9AFCD) + ((2 * v189) & 0xFBF35F9A) + 33968179;
  v191 = *(_DWORD *)(v57 + 4 * (v151 ^ 0xC6u));
  v192 = v191 - ((2 * v191 + 524833638) & 0x1A773FBE) + 1021299090;
  v193 = (v187 ^ ((v187 ^ 0x6402573D) - ((2 * (v187 ^ 0x6402573D) + 2) & 0x7C19D100) - 1106450303) ^ 0xBBE37783 ^ (v190 - ((2 * v190) & 0x3C246F82) - 1642973247))
       + v188;
  v194 = *(_DWORD *)(v54
                   + 4
                   * ((((2 * (BYTE1(v152) ^ 0x161040D7)) & 0xC200022) - (BYTE1(v152) ^ 0x161040D7) - 651574546) ^ 0xCF3982A4)) ^ v192 ^ (v192 >> 4) ^ (v192 >> 3) ^ v184 ^ ((v184 ^ 0xF4CDFB58) - ((2 * (v184 ^ 0xF4CDFB58) + 1609196664) & 0x4E194622) - 1761487539) ^ 0x2D2E40A9 ^ (v193 - ((2 * v193) & 0xE3A4D978) - 237867844);
  v195 = (((2 * (v194 & 0xB8F6F67A ^ 0x90544050)) & 0x168EC00) - (v194 & 0xB8F6F67A ^ 0x90544050) + 1028292734) ^ 0x5BA016D1;
  v196 = ((2 * (v194 & 0x47090985 ^ 0x41080900)) | 0x1977D04A) - (v194 & 0x47090985 ^ 0x41080900) - 213641253;
  v197 = ((v196 & 0x4E92A925 ^ 0x62842005) + (v196 & 0x9169569A ^ 0x694041) - 1) ^ 0x6E5681E5 | (v195 - 1) ^ 0x663E30EC;
  v198 = v197 - ((2 * v197) & 0xD0E52982) + 1752339649;
  v199 = (v164 ^ 0x11B10C8) - ((2 * (_BYTE)v164) & 0x6E) - 1067415530;
  if (((2 * (_BYTE)v164) & 0xEE) + (v164 ^ 0x7AAC9DF7) != 2058132983)
    v199 = -1048864546;
  v945 = ((v162 >> 15) & 0x7A ^ 0x3A) + (BYTE2(v162) ^ 0x20) + v199;
  v163 = ((v162 >> 15) & 0x1EF7A ^ 0x1E13A) + (HIWORD(v162) ^ 0xFF150720);
  v200 = (v163 + v199 + 101) - 748361187 - ((2 * (v163 + v199 + 2063563877)) & 0x10A);
  v201 = ((2 * (BYTE1(v177) ^ 0xB4)) & 0x17C) - (BYTE1(v177) ^ 0xB4) - 27583;
  v202 = ((BYTE1(v177) ^ 0xFFFFFF7F) + 868586049 + ((2 * BYTE1(v177)) | 0x9874DB80)) ^ 0xC36FD80;
  v203 = (v201 & 0x5DF ^ 0xEA22500E) + (v201 & 0x220 | 0x80001) - 1;
  v204 = *(_DWORD *)(v57 + 4 * (v183 ^ 0xA5u));
  v205 = v204 - ((2 * v204 + 256398182) & 0xDE3677E) - 1231692430;
  v200 += 104;
  v206 = *(_DWORD *)(v53 + 4 * (HIBYTE(v198) ^ 0xD7)) ^ *(_DWORD *)(v54
                                                                    + 4
                                                                    * ((((2 * v202) | 0xFE4DF560) - v202 - 2133260976) ^ 0xBF2A6AF8)) ^ v205 ^ *(_DWORD *)(v73 + 4 * (v200 ^ 0xD364EA1D)) ^ (v205 >> 3) ^ (v205 >> 4) ^ v203 ^ ((v203 ^ 0xEA2A54BB) - ((2 * (v203 ^ 0xEA2A54BB) - 538286984) & 0xA06A30E6) - 1070970193);
  v207 = v200 ^ v206;
  v208 = v200 ^ v206 ^ 0xA49092C0;
  v120 = ((((v200 ^ v206) & 0x2000) + (v208 & 0x3F00 ^ 0xFFFFF2FF) + (v208 & 0x2000 | 0xE9A89F47)) | 1) == -374820537;
  v209 = ((((v162 ^ 0xF09D02E5) >> (v186 & 8)) - ((2 * ((v162 ^ 0xF09D02E5) >> (v186 & 8))) & 0xA6725460) - 751228368) ^ 0xD3392A30) >> (v186 & 8 ^ 8);
  v210 = (BYTE1(v198) ^ 0x3C | 0x1899EEF7) - (BYTE1(v198) ^ 0x3C | 0xE7661108) - 412741368;
  v211 = (v210 & 0x818E70E ^ 0x23307109) + (v210 & 0x108108F1) - 1;
  v212 = ((BYTE1(v198) ^ 0xEC) - ((2 * (BYTE1(v198) ^ 0xEC)) & 0x14A) - 1309344603) ^ 0xF584EC05;
  v213 = ((v162 ^ 0xA6) - ((2 * (v162 ^ 0xA6)) & 0x162) - 1822169167) ^ 0x9B4F27F3;
  v214 = *(_DWORD *)(v57 + 4 * ((((2 * v213) & 0x5117E6) - v213 - 96111604) ^ 0xF269B42B));
  v215 = v214 - ((2 * v214 + 1598575462) & 0x62F22B6A) - 518176920;
  v216 = v53;
  v217 = *(_DWORD *)(v53 + 4 * (HIBYTE(v177) ^ 0xC7));
  v218 = v73;
  v219 = *(_DWORD *)(v73
                   + 4
                   * ((((2 * (BYTE2(v183) ^ 0x22280079)) | 0xABC37770) - (BYTE2(v183) ^ 0x22280079) + 706626632) ^ 0xF7C9BB21)) ^ v217 ^ v215 ^ *(_DWORD *)(v54 + 4 * ((((2 * v212) | 0x9690D354) - v212 + 884446806) ^ 0x8F387962)) ^ (v215 >> 3) ^ (v215 >> 4) ^ BYTE2(v183) ^ v211 ^ ((v211 ^ 0x3BA99F8F) - ((2 * (v211 ^ 0x3BA99F8F) - 538286984) & 0xD7ECE510) + 1542169796);
  v220 = (v209 - ((2 * v209) & 0x50) - 88);
  v221 = (BYTE2(v198) ^ 0xA8) - ((2 * (BYTE2(v198) ^ 0xA8)) & 0x1B0) - 560224552;
  v222 = (v221 & 0xC820593 ^ 0x913) + (v221 ^ 0x8EDBE4C8) - ((v221 ^ 0x8EDBE4C8) & 0x400193);
  v223 = ((v220 ^ 0x4E) - ((2 * (v209 - ((2 * v209) & 0xB108350) + 92815784)) & 0x60) - 1113620432) ^ 0x39BF80F6;
  v224 = *(_DWORD *)(v57 + 4 * (v177 ^ 0xDEu));
  v225 = v224 - ((2 * v224 + 1598575462) & 0xA2EE7112) - 2128911812;
  v226 = v216;
  v227 = *(_DWORD *)(v216 + 4 * (HIBYTE(v183) ^ 0x55)) ^ *(_DWORD *)(v218
                                                                     + 4
                                                                     * ((((2 * (BYTE2(v198) ^ 0x36)) & 0xA4)
                                                                       - (BYTE2(v198) ^ 0x36)
                                                                       - 1888788051) ^ 0x8F6B61F0)) ^ v220 ^ v222 ^ ((v220 ^ 0xA8) + 1885523742 + ((2 * (v220 ^ 0xA8) + 120) & 0x1C2 ^ 0xFF35DFFF)) ^ 0xFE001648 ^ *(_DWORD *)(v54 + 4 * ((v223 - ((2 * v223) & 0x85C) + 293930030) ^ 0x95A504C6));
  v228 = v225 ^ (v225 >> 4) ^ (v225 >> 3) ^ 0xC64EAC10;
  v229 = (v227 & v228) - ((2 * (v227 & v228)) & 0x31D36DC4);
  v230 = ((v227 + v228) ^ 0x6C7EEE5F)
       + ((2 * (v227 + v228)) & 0xD8FDDCBE)
       + ((2 * v229 - 1311543868) ^ 0x93976FC5)
       + ((2 * (2 * v229 - 1311543868)) & 0xBB77FBFC ^ 0xDCD92477);
  v231 = v230 + 1 - 2 * ((v230 + 1899827105) & 0x6E2A97DF ^ (v230 + 1) & 0xA) + 1600628597;
  v232 = ((2 * (BYTE2(v177) ^ 0xAC)) & 0x4A) - (BYTE2(v177) ^ 0xAC) - 2043081254;
  v233 = ((BYTE2(v177) ^ 0x10100442) + (HIWORD(v177) & 1 ^ 0xE888F101) - ((BYTE2(v177) ^ 0x10100442) & 0x100401)) ^ 0xF888F1D1;
  v234 = ((2 * (BYTE1(v183) ^ 0x88)) & 0x1AC) - (BYTE1(v183) ^ 0x88) + 237321001;
  v235 = (v234 & 0x20C6 ^ 0x400000C6) + (v234 ^ 0xB43F7319) - ((v234 ^ 0xB43F7319) & 0x80A00C6);
  v236 = ((BYTE1(v183) ^ 0x3A) - ((2 * (BYTE1(v183) ^ 0x3A)) & 0x12C) + 944961686) ^ 0x3870FAD7;
  v237 = (2 * v198) ^ 0xE9E698D6;
  v238 = *(_DWORD *)(v57
                   + 4
                   * ((v198 ^ 0x4F93BE96)
                    + ((2 * v198) & 0x1FA ^ 0xD3)
                    - ((v237 - ((2 * v237) & 0x20) + 208) & 0x4C)
                    - ((94 - 2 * ((_BYTE)v237 - ((2 * (_BYTE)v237) & 0x20))) & 0x80)
                    - 1335082648));
  v239 = v238 - ((2 * v238 + 1598575462) & 0xFE6E7894) + 786130429;
  v240 = *(_DWORD *)(v226 + 4 * (HIBYTE(v162) ^ 0x53)) ^ *(_DWORD *)(v54
                                                                     + 4
                                                                     * ((((2 * v236) | 0xB0AF62E0) - v236 - 1482142064) ^ 0x5875B33A)) ^ *(_DWORD *)(v218 + 4 * v233) ^ v239 ^ (v239 >> 3) ^ (v239 >> 4) ^ v235 ^ ((v235 ^ 0xF2106887) - ((2 * (v235 ^ 0xF2106887) - 538286984) & 0xF1C76A26) + 1759045455) ^ v232;
  v241 = (v207 >> 8) ^ 0xCA;
  if (v120)
    LOBYTE(v241) = (105 - (BYTE1(v208) & 0xC0)) | 0x32;
  v242 = v219 ^ 0x10810891;
  v243 = ((unsigned __int16)(v219 ^ 0x891) >> 8);
  v244 = ((HIWORD(v240) & 0x2B ^ 0x37165728) + (HIWORD(v240) & 0xD4 ^ 0xD1) - 1) ^ 0xB69647AB;
  v245 = (((2 * (BYTE2(v240) ^ 0xDE)) | 0x3448E856) - (BYTE2(v240) ^ 0xDE) - 438596651) ^ 0x5A237483;
  v246 = (((2 * (v231 ^ 0x9D)) | 0x4B83EF32) - (v231 ^ 0x9D) - 633468825) ^ 0x2CDB37D1;
  v247 = v57;
  v248 = *(_DWORD *)(v57 + 4 * ((v246 - ((2 * v246) & 0x5E433E96) - 1356751029) ^ 0xA63B5F6D));
  v249 = v248 - ((2 * v248 + 55071590) & 0x36F2982) - 1319387532;
  v250 = ((2 * (BYTE1(v231) ^ 0x26)) & 0x1AE) - (BYTE1(v231) ^ 0x26) + 2088;
  v251 = (v250 & 0xEC8 ^ 0x812C6C1) + (v250 & 0x137) - 1;
  v252 = *(_DWORD *)(v218 + 4 * (((v245 | 0x656BA921) - (v245 | 0x9A9456DE) - 1701554466) ^ 0x256CA9BE)) ^ *(_DWORD *)(v54 + 4 * ((((2 * (v243 ^ 0x1F4BAFF0)) | 0x6ACCE01A) - (v243 ^ 0x1F4BAFF0) + 1251577843) ^ 0xAA2DDF96)) ^ *(_DWORD *)(v226 + 4 * (HIBYTE(v206) ^ 0x13)) ^ v249 ^ (v249 >> 3) ^ (v249 >> 4) ^ ((v244 | 0xC88381A6) - (v244 | 0x377C7E59) + 930905689) ^ ((v243 ^ 0xA3) - 2051506624 + ((2 * ((v243 ^ 0xA3) & 3)) ^ 0xF47DFFFF));
  v253 = ((v219 ^ 0x10810891) >> 16);
  v254 = ((2 * (v253 ^ 0x63)) | 0x8280A10) - (v253 ^ 0x63) + 1542191864;
  v255 = ((2 * (v253 ^ 0x5E)) | 0x4005A828) - (v253 ^ 0x5E) - 537056276;
  v256 = ((2 * (BYTE1(v231) ^ 0xDA)) | 0x911596C0) - (BYTE1(v231) ^ 0xDA) + 930428064;
  v257 = *(_DWORD *)(v57
                   + 4
                   * ((((2 * (v207 ^ 0xB8)) | 0xC3D45C0E) - (v207 ^ 0xB8) - 1642737159) ^ 0x61EA2E61));
  v258 = v257 - ((2 * v257 + 524833638) & 0x3EF239F2) - 820164948;
  v942 = *(_DWORD *)(v218 + 4 * (((v255 & 0xDA6C ^ 0x9C280A6D) + (v255 & 0x20020593) - 1) ^ 0xBC2ADEA5)) ^ *(_DWORD *)(v226 + 4 * (HIBYTE(v240) ^ 0x1E)) ^ *(_DWORD *)(v54 + 4 * (((v256 & 0x8802C63A ^ 0x1F10341B) + (v256 & 0x408809C5) - 1) ^ 0xD79AFF36)) ^ v258 ^ (v258 >> 3) ^ (v258 >> 4) ^ v254 & 0x3FFFFFFF ^ v251 ^ ((v251 ^ 0x812CE90) - ((2 * (v251 ^ 0x812CE90) - 538286984) & 0xD5785294) + 1521572742);
  v259 = *(_DWORD *)(v226 + 4 * (HIBYTE(v252) ^ 0xE3));
  v260 = (v259 & 0x10 ^ 0xEC9BEBBF) + 2 * (v259 & 0x10);
  v261 = ((v942 ^ 0x20842120) >> 16);
  v262 = *(_DWORD *)(v218 + 4 * (v261 ^ 0xEAu)) ^ 0xEE1C4DE7;
  v120 = ((v260 + 325325889) & v262) == ((2 * ((v260 + 325325889) & v262)) & 0x80E2AF40);
  v263 = ((((v240 ^ 0xBD71CF3C) >> (v207 & 8 ^ 8))
         - ((2 * ((v240 ^ 0xBD71CF3C) >> (v207 & 8 ^ 8))) & 0x72096A66)
         + 956609843) ^ 0x3904B533) >> (v207 & 8);
  v264 = v263 - ((2 * v263) & 0x37A1576C) - 1680823370;
  v265 = (((2 * (BYTE2(v231) ^ 0xD7)) | 0xEEC67A44) - (BYTE2(v231) ^ 0xD7) + 144491230) ^ 0x90673826;
  v266 = (((2 * v265) | 0xB1148F30) - v265 + 662026344) ^ 0xBF8E42E8;
  v241 = v241;
  v267 = (v241 ^ 0x8D) - ((2 * (v241 ^ 0x8D)) & 0x10C) - 1283273082;
  v268 = (v267 & 0x3F0 ^ 0x800A11) - (v267 & 0x1000040F) + 1982780430;
  v269 = ((v240 ^ 0x91 | 0x519BFC52) - (v240 ^ 0x91 | 0xAE6403AD) - 1369177171) ^ 0x505B545E;
  v270 = *(_DWORD *)(v247 + 4 * ((v269 - ((2 * v269) & 0x5DDF3360) - 1360029264) ^ 0xAF2F3137));
  v271 = v270 - ((2 * v270 + 1598575462) & 0x40A4B50C) + 1341555769;
  v272 = *(_DWORD *)(v218 + 4 * v266) ^ ((BYTE2(v231) ^ 0x4008853F | 0xDFFE47D)
                                         - (BYTE2(v231) ^ 0x4008853F | 0xF2001B82)
                                         - 234873982) ^ 0x3E1FCB70;
  v273 = *(_DWORD *)(v226 + 4 * (HIBYTE(v219) ^ 0x67)) ^ 0x9BFDA8C2;
  v274 = (v272 & v273) - ((2 * (v272 & v273)) & 0xB6152430) + 1527419416;
  v275 = (v272 | v273) - ((2 * (v272 | v273)) & 0xBC20A88A) - 569355195;
  v276 = ((2 * (v264 ^ 0x9E)) & 0x2E) - (v264 ^ 0x9E) + 4584;
  v277 = ((2 * v264) ^ 0x37A1576C) - ((2 * ((2 * v264) ^ 0x37A1576C)) & 0x2C) + 215;
  v278 = (v276 ^ 0x6FF523FC) + (v277 & 0x78 ^ 0x5F9CFFBE) + ((2 * v277) & 0xD0 ^ 0x80) - 1604124654;
  v279 = v278 - 2 * (v278 & 0x5B12828F ^ (v276 ^ 0x6FF523FC) & 5) + 1527939722;
  v280 = v271 ^ *(_DWORD *)(v54
                          + 4
                          * ((((2 * (v241 ^ 0xDAA092D)) | 0xE9D7F0C) - (v241 ^ 0xDAA092D) + 2024882298) ^ 0x8AE4B658)) ^ (v271 >> 3) ^ (v271 >> 4) ^ ((v268 ^ 0x66AED82F) - ((2 * (v268 ^ 0x66AED82F) - 538286984) & 0x8D28E53E) + 914990299) ^ v275 ^ v274;
  v281 = BYTE2(v208);
  v282 = (((2 * (BYTE2(v208) ^ 0x8D)) & 0x99999999) - (BYTE2(v208) ^ 0x8D) - 117411277) ^ 0xFB1C5273;
  v283 = ((v264 & 0x56 ^ 0x551) + (v264 & 0xA9) - 1) ^ 0x52E;
  v284 = *(_DWORD *)(v247 + 4 * (v242 ^ 0xA3u));
  v285 = v284 - ((2 * v284 + 1598575462) & 0xF531FB64) - 1438832795;
  v286 = *(_DWORD *)(v218 + 4 * (v281 ^ 0xF5u)) ^ *(_DWORD *)(v226 + 4 * (HIBYTE(v231) ^ 0xAE)) ^ v285 ^ *(_DWORD *)(v54 + 4 * v283) ^ (v285 >> 3) ^ (v285 >> 4) ^ (v282 - ((2 * v282) & 0x304440) - 1711620576) ^ v279;
  v287 = ((2 * HIBYTE(v286)) ^ 0x190) + (HIBYTE(v286) ^ 0xFBDFDF37);
  v288 = v286 ^ v276;
  v289 = BYTE2(v286);
  v290 = (((2 * (v289 ^ 0x9F)) & 0xFFFFFF7F) - (v289 ^ 0x9F) + 237114944) ^ 0x7B21E22;
  v291 = (((2 * (v289 ^ 0x4FA9EAA6)) | 0x63BA9BF4) - (v289 ^ 0x4FA9EAA6) - 836587002) ^ 0x3C51F1BC;
  v292 = (((2 * v291) & 0x145B6074) - v291 + 1959940037) ^ 0x36F71959;
  v293 = BYTE1(v252);
  v294 = (BYTE1(v252) ^ 5) + ((v252 >> 8) & 0x33 ^ 0xD8D6FB32) - ((BYTE1(v252) ^ 5) & 0x33333333);
  v295 = (v294 & 0x50101BE8 ^ 0x32101E8) + (v294 ^ 0xDCDABA12) - ((v294 ^ 0xDCDABA12) & 0x4004BE8);
  v296 = (((2 * (v942 ^ 0xF8)) | 0xCB596B2) - (v942 ^ 0xF8) + 2040870055) ^ 0x285A0B53;
  v297 = *(_DWORD *)(v247 + 4 * ((((2 * v296) | 0x1FE39A82) - v296 - 267504961) ^ 0xA1F10D55));
  v298 = v297 - ((2 * v297 + 1598575462) & 0xC43B7806) - 1849563722;
  v299 = (2 * v287 - ((4 * v287 + 4) & 0x188) + 454) & 0x146;
  v300 = v287 + (v299 ^ 0xC181015D) + ((2 * v299) ^ 0xFFFFFD77) + 1117724812;
  v301 = v252 ^ (v242 >> 8);
  v302 = BYTE2(v252);
  v303 = (((2 * (BYTE2(v252) ^ 0xAB)) | 0xCC083752) - (BYTE2(v252) ^ 0xAB) - 1711545257) ^ 0x46047BB9;
  v304 = (v303 | 0x6B9188A) - (v303 | 0xF946E775) - 112793739;
  v305 = ((((unsigned __int16)(v942 ^ 0x2120) >> 8) ^ 0x3E)
        - ((2 * (((unsigned __int16)(v942 ^ 0x2120) >> 8) ^ 0x3E)) & 0x96)
        + 1653345355) & 0x42000FFF;
  v306 = v280 ^ v268;
  v307 = v226;
  v308 = *(_DWORD *)(v218 + 4 * v292) ^ *(_DWORD *)(v226 + 4 * (HIBYTE(v280) ^ 0xE6)) ^ *(_DWORD *)(v54 + 4 * (v293 ^ 0xA0u)) ^ v298 ^ (v298 >> 3) ^ (v298 >> 4) ^ v295 ^ ((v295 ^ 0x533D1AA4) - ((2 * (v295 ^ 0x533D1AA4) - 538286984) & 0x9F39EE86) + 1066543487) ^ (((2 * v290) & 0x132004B0) - v290 + 1113754023);
  v309 = ((((v942 ^ 0x20842120) >> 8) & 6 ^ 0x9F3E803) + (((v942 ^ 0x20842120) >> 8) & 0xF9) - 1) ^ 0x21F74A2A;
  v310 = ((2 * v309) | 0x625690BA) - v309 - 824920157;
  v311 = v306 ^ 0xDB0D2DFA;
  v312 = (((2 * (v306 ^ 0x8C)) & 0x74) - (v306 ^ 0x8C) + 20305861) ^ 0x92545C0;
  v313 = v247;
  v314 = *(_DWORD *)(v247 + 4 * ((v312 - ((2 * v312) & 0x100020A4) - 1121185710) ^ 0xB53C82C6));
  v315 = v314 + 1724151179 + (~(2 * v314 + 1598575462) | 0x91BF6851);
  v316 = v218;
  v317 = *(_DWORD *)(v218 + 4 * (v302 ^ 0x20u)) ^ *(_DWORD *)(v54 + 4 * (v310 ^ 0x192FEA15u));
  v318 = v307;
  v319 = v317 ^ *(_DWORD *)(v307 + 4 * v300) ^ v315 ^ (v315 >> 3) ^ (v315 >> 4) ^ v304 ^ ((v305 ^ 0x42000CDD)
                                                                                          - 84238969
                                                                                          + ((2 * (v305 ^ 0x42000CDD)
                                                                                            + 535454840) & 0x1400D694 ^ 0xFDF5FFFF));
  v320 = ((2 * (BYTE1(v311) ^ 0x6A)) & 0xCA) - (BYTE1(v311) ^ 0x6A);
  v321 = v320 + 135066;
  v322 = (v321 ^ 0x20FE8) - 2 * (((v321 ^ 0x20FE8) + 32846396) & 0x1FFC0B7 ^ v320 & 1) - 2114653454;
  v323 = ((v259 & 0xFFFFFFEF ^ 0x1CB7F483)
        + (v259 & 0xECF28CAA ^ 0xE0400828)
        - ((v259 & 0xFFFFFFEF ^ 0x1CB7F483) & 0xECF28CAA)) ^ 0x64F284AE;
  v324 = v323 - ((2 * v323) & 0x6811A0C2) - 1274490783;
  v325 = v260 + 2012151500;
  v326 = 1361499722 - v260;
  if (v120)
    v326 = v325;
  v327 = v262 - 1686825611 + v326 - ((2 * (v262 - 1686825611 + v326)) & 0x8FA0483A) + 1204823069;
  v328 = *(_DWORD *)(v247
                   + 4
                   * ((((2 * (v288 ^ 0x89)) | 0x1534DC86) - (v288 ^ 0x89) - 177892931) ^ 0xA9A6EAFu));
  v329 = v328 - ((2 * v328 + 1598575462) & 0x8715C7AE) + 1932463498;
  v330 = (((2 * (v329 & 0x9A6D2374 ^ 0x9A490344)) & 0x208A4600) - (v329 & 0x9A6D2374 ^ 0x9A490344) + 1262129277) ^ 0x63FB9075;
  v331 = (v329 >> 4) ^ (v329 >> 3);
  v332 = (((2 * (v331 & 0x1A6D2374 ^ 0x86C0230)) & 0x24520400) - (v331 & 0x1A6D2374 ^ 0x86C0230) + 685175284) ^ 0x10F2F1C2;
  v333 = (v331 & 0x592DC8B ^ 0x29C03) + (v331 & 0x480DC0B ^ 0x4E96328) - ((v331 & 0x592DC8B ^ 0x29C03) & 0x480DC0B);
  v334 = (((2 * v330) & 0x36A97248) - v330 - 525646120) ^ 0x9C9254B5 ^ (((2 * v332) | 0xD970246E) - v332 - 1824002615) | ((v329 & 0x6592DC8B ^ 0x4130C095) + (v329 & 0x21024802 ^ 0xB84A2B62) - ((v329 & 0x6592DC8B ^ 0x4130C095) & 0x21224812)) ^ 0x30CE4EC5 ^ ((v333 & 0xC91A00B1 ^ 0x89180180) + (v333 & 0x3685FC0E ^ 0x85940B) - 1);
  v335 = v324 ^ *(_DWORD *)(v54
                          + 4
                          * (((BYTE1(v311) ^ 0x42B4C10A | 0x5F28EDE0)
                            - (BYTE1(v311) ^ 0x42B4C10A | 0xA0D7121F)
                            - 1596517857) ^ 0x1D9C2C3A)) ^ v327 ^ v321 ^ ((v261 ^ 0x86 | 0xFEA6D1CC)
                                                                        - (v261 ^ 0x86 | 0x1592E33)
                                                                        + 22621747) ^ v322 ^ (v334
                                                                                            - ((2 * v334) & 0x99B3255E)
                                                                                            - 858156369);
  v336 = BYTE1(v288);
  v337 = (BYTE1(v288) ^ 0x128239D9) + ((v288 >> 8) & 0x20 ^ 0x88318620) - ((BYTE1(v288) ^ 0x128239D9) & 0x10000820);
  v338 = HIWORD(v311);
  v339 = 2 * HIWORD(v311);
  v340 = (v339 ^ 0x1F17E) - ((2 * (v339 ^ 0x1F17E)) & 0x11C) + 654;
  v341 = BYTE2(v311);
  v342 = ((v341 ^ 0x406AF) + (v338 & 0x75 ^ 0xFCC34050) - ((v341 ^ 0x406AF) & 0x275)) ^ 0xFCC744FD;
  v343 = (v341 ^ 0x55D7FEC4)
       + (v339 & 0xF6 ^ 0x76)
       + (v340 & 0x1DC ^ 0x84020099)
       + ((2 * v340) & 0x390 ^ 0xFFFFFEEF)
       + 1;
  LOWORD(v339) = (v301 ^ 0x28) - ((2 * (v301 ^ 0x28)) & 0x1E0) + 3056;
  v344 = ((v336 ^ 0x52) - ((2 * (v336 ^ 0x52)) & 0x122) - 1848517999) ^ 0xD3C59A18;
  v345 = *(_DWORD *)(v247 + 4 * (((v339 & 0xDA3 ^ 0x28011423) + (v339 & 0x25C ^ 0x12202219) - 1) ^ 0x3A213D08u));
  v346 = v345 - ((2 * v345 + 524833638) & 0x391F0732) - 869028532;
  v347 = *(_DWORD *)(v316 + 4 * v342) ^ *(_DWORD *)(v318 + 4 * (HIBYTE(v942) ^ 0xD0)) ^ *(_DWORD *)(v54 + 4 * (((v344 | 0x9C5E5331) - (v344 | 0x63A1ACCE) + 1671539918) ^ 0xDE4A13F9)) ^ v346 ^ (v346 >> 3) ^ (v346 >> 4) ^ v337 ^ ((v337 ^ 0x8AB3B722) - ((2 * (v337 ^ 0x8AB3B722) - 538286984) & 0xA22AAC68) - 1056274320) ^ (v343 - ((2 * v343 + 137745084) & 0x5B7489D0) + 1909796422);
  v348 = v319 ^ v305;
  v349 = ((2 * (BYTE1(v348) ^ 0xD7)) | 0xD78E5CC4) - (BYTE1(v348) ^ 0xD7) - 1808215650;
  v350 = (v349 & 0x48822CC8 ^ 0x841AC881) + (v349 & 0x23451337) - 1;
  v351 = *(_DWORD *)(v247 + 4 * (v335 ^ 0x98u));
  v352 = v351 - ((2 * v351 + 1598575462) & 0x7B9CCA46);
  v353 = v352 - 311259434;
  v354 = ((v353 >> 1) ^ 0xE1904D1F) + (v353 & 0xFEEEFF1C ^ 0x3CCE6500);
  v355 = (311259433 - v352) & 0x40000;
  v356 = *(_DWORD *)(v318 + 4 * (HIBYTE(v347) ^ 0xBB)) ^ *(_DWORD *)(v316
                                                                     + 4
                                                                     * (((BYTE2(v308) ^ 0xF5)
                                                                       - 2 * ((BYTE2(v308) ^ 0xF5) & 3)
                                                                       + 1027) ^ 0x450u)) ^ ((HIWORD(v308) & 0xB3 ^ 0xC7478713)
                                                                                           + (HIWORD(v308) & 0x4C ^ 0x41)
                                                                                           - 1) ^ v350 ^ *(_DWORD *)(v54 + 4 * ((((v348 >> 8) & 0xEC ^ 0x20002C25) + ((v348 >> 8) & 0x13 ^ 0xC552D001) - 1) ^ 0xE552FCD2)) ^ ((v350 ^ 0xEFDDE60A) - ((2 * (v350 ^ 0xEFDDE60A) - 538286984) & 0x94E66510) - 1167563580);
  v357 = 1063727050 - (v355 | 0x1FB397E5);
  if (((v354 + 32882) & v355) == 0)
    v357 = v355 | 0x1FB397E5;
  v358 = (v357 + v354 - ((2 * (v357 + v354) + 27906330) & 0x16D5397E) - 331381428) ^ ((v353 & 0xFFFBFFF8 ^ 0x50C86678)
                                                                                    - ((2
                                                                                      * (v353 & 0xFFFBFFF8 ^ 0x50C86678)) & 0x800FBA0)
                                                                                    + 67403221);
  v359 = v356 & 0x40 ^ 0xFEFCFFFF;
  v360 = v353 ^ (v358 >> 3) ^ 0x3183F965;
  v361 = v359 + 2067529705;
  v362 = v359 + 16973889;
  v363 = 2033581927 - v359;
  if ((v362 & v360) != 0)
    v361 = v363;
  v943 = v361;
  v364 = *(_DWORD *)(v4 - 124);
  v365 = *(_QWORD *)(v4 - 120);
  v366 = (v365 ^ 0x4A56591D) & 0xD6A6E7D4 ^ 0x1D85CCAE ^ (-2
                                                        - ((v365 ^ 0x4A56591D) & 0x14841023 | 0xE27A6A4C)
                                                        - ((((v364 - 1378418626) & 0x5228FFAF) + 495263236) | ~((v365 ^ 0x4A56591D) & 0xD6A6182B)));
  v367 = -1802333311 * v366 - ((690300674 * v366) & 0xCF1E8BB4) + 1737442778;
  v368 = (((v367 >> 8) & 1 ^ 0x591AE301) - ((v367 >> 8) & 1) + (BYTE1(v367) ^ 0x70)) ^ 0x5E1ABE35;
  v369 = *((unsigned __int8 *)*(&off_10112C750 + (v364 ^ 0x73B8))
         + (((v368 | 0xD2C98FC3) - (v368 | 0x2D36703C) + 758542396) ^ 0xD5C9D295)
         - 769066283);
  v370 = ((v369 & 0xB5 ^ 0xFFFFFF85) + (v369 & 0x94 ^ 0x1A) - ((v369 & 0xB5 ^ 0xFFFFFF85) & 0x94)) ^ ((v369 & 0x4A ^ 0xFFFFFFF7) - ((2 * (v369 & 0x4A ^ 0xFFFFFFF7)) & 0xFFFFFFE7) - 13) ^ 0x2E ^ ((((~(((16 * v369) ^ 0x60) - ((2 * ((16 * v369) ^ 0x60)) & 0x1FC0) - 32) & 0xFFFFFF90) - 17) ^ 0x10) - 45);
  v371 = (((v370 - ((2 * v370) & 0x106)) << 8) - 1585872128) ^ 0xA1798300;
  v372 = (v371 - ((2 * v371) & 0x2AE07400) - 714065189) ^ 0xD5703ADB;
  v373 = *((unsigned __int8 *)*(&off_10112C750 + (v364 ^ 0x7021)) + (HIBYTE(v367) ^ 0xFELL) - 1986982322);
  v374 = (((2 * v373) ^ 0x30)
        - 2 * (((2 * v373) ^ 0x30) & 0x16 ^ (2 * (_BYTE)v373) & 4)
        + 18) & 0x7C;
  v375 = (((v373 ^ 0xFFFFFF98) - 66) ^ 0xFFFFFFF7)
       + ((2 * ((v373 ^ 0xFFFFFF98) - 66)) & 0xFFFFFFEF)
       + ((2 * v374) ^ 0xFFFFFFDF)
       + (v374 ^ 0xFFFFFF91)
       - 119;
  v376 = (18 * (v373 ^ 0xFFFFFF98) - ((4 * ((v373 ^ 0xFFFFFF98) + 8 * v373)) & 0xE0) - 15) ^ 0x57 ^ (v375 - ((2 * v375) & 0x4C) - 90);
  v377 = (((v376 - ((2 * v376) & 0x7A)) << 24) + 1023410176) ^ 0x3D000000;
  v378 = (((2 * (BYTE2(v367) ^ 0xC0)) | 0xE530A30C) - (BYTE2(v367) ^ 0xC0) + 224898682) ^ 0x330811CC;
  v379 = *((unsigned __int8 *)*(&off_10112C750 + (v364 ^ 0x6670))
         + ((((2 * v378) | 0x19147496) - v378 - 210385483) ^ 0xCD1A7AEELL)
         - 158079843) ^ HIWORD(v367) ^ 0xC4;
  v380 = (((v379 - ((2 * v379) & 0x2C)) << 16) - 753532928) ^ 0xD3160000;
  v381 = (v367 ^ 0xB7DF9EBD)
       - ((-636 - 2 * (258 * v365 - ((4 * v365) & 0x78))) & 0x208 | (258 * v365 - ((4 * v365) & 0x78) + 829) & 0x106)
       + ((2 * v367) & 0xCE ^ 0x85)
       + 1;
  v382 = *((unsigned __int8 *)*(&off_10112C750 + v364 - 26641)
         + ((v381 - ((2 * v381 + 272680508) & 0x3CFD9996u) - 425775127) ^ 0x9E7ECC3BLL)
         - 2118328194);
  v383 = 119 * v382 - ((-18 * v382 + 16) & 0xFFFFFFDC) + 118;
  v384 = (((2 * ((v383 >> 1) & 0x64)) | 0x5C) - ((v383 >> 1) & 0x64) - 46) ^ 0x6A;
  v385 = v383 ^ 0xD6 ^ (((2 * v384) | 0x30) - v384 - 24);
  v386 = (v385 - ((2 * v385) & 0xB0) - 50183336) ^ 0xFD024358 | (v380
                                                                                - ((2 * v380) & 0x4C980000)
                                                                                - 431197461) ^ 0xE64C72EB;
  v387 = (v386 - ((2 * v386) & 0xED86AE6) - 2022951565) ^ 0x876C3573 | (v377 - ((2 * v377) & 0xD8000000) - 334725128) ^ 0xEC0C7FF8;
  v388 = (v387 - ((2 * v387) & 0xCD5C97E6) - 424784909) ^ 0xE6AE4BF3 | v372;
  v937 = v388 - ((2 * v388) & 0x57AE9EEC) - 1411952778;
  v389 = (BYTE1(v335) ^ 0xD3 | 0x779AF8BE) - (BYTE1(v335) ^ 0xD3 | 0x88650741) - 2006644927;
  v390 = ((BYTE2(v319) ^ 0x63) - ((2 * (BYTE2(v319) ^ 0x63)) & 0x18C) + 1105854918) ^ 0xC78D01DC;
  v391 = *(_DWORD *)(v247
                   + 4
                   * (((v347 ^ 0x90E0006D)
                     - ((2 * (v347 ^ 0x90E0006D)) & 0xC0016C)
                     + 660834998) ^ 0xB7838A7A));
  v392 = v391 - ((2 * v391 + 1598575462) & 0x736A0936) - 380031410;
  v393 = *(_DWORD *)(v316
                   + 4
                   * (((BYTE2(v319) ^ 0x6895B7) - ((2 * (BYTE2(v319) ^ 0x6895B7)) & 0x500288) - 1397028540) ^ 0xACD39C57)) ^ *(_DWORD *)(v318 + 4 * (HIBYTE(v308) ^ 0xCD)) ^ v392 ^ *(_DWORD *)(v54 + 4 * (((BYTE1(v335) ^ 0x8A) - ((2 * (BYTE1(v335) ^ 0x8A)) & 0x52) - 1447436503) ^ 0xA9B9DFB6)) ^ (v392 >> 3) ^ (v392 >> 4) ^ v389 ^ ((v389 ^ 0x779AF8B0) - ((2 * (v389 ^ 0x779AF8B0) + 535454840) & 0x30362072) + 135283317) ^ ((v390 | 0xB40F79F6) - (v390 | 0x4BF08609) + 1274054153);
  v394 = ((2 * (BYTE1(v347) ^ 0x601518E0)) & 0xC020212C) - (BYTE1(v347) ^ 0x601518E0) - 1880626839;
  v395 = *(_DWORD *)(v247 + 4 * (v308 ^ 0xFDu));
  v934 = v247;
  v936 = v395 - 125;
  v396 = v395 + 1473023619 - ((2 * v395 + 1598575462) & 0x5050C9A0);
  LODWORD(v365) = (v396 >> 4) ^ (v396 >> 3);
  v397 = (((2 * (v396 & 0x79A97788 ^ 0x28003688)) & 0xD340C400) - (v396 & 0x79A97788 ^ 0x28003688) - 1776476706) ^ 0x963755DB;
  v398 = ((((v365 & 0x18294088 ^ 0x800F4819) + (v365 & 0x1803700 ^ 0x1001101) - 2) ^ 0x1CB34637) - 1) ^ 0x5C54C85C ^ (v397 - ((2 * v397) & 0xB0D79F1A) - 664023041) | (((v396 & 0x4568040 ^ 0x117F089) - 1) & 0x456D0C8 | v396 & 0x82000837) ^ 0xB986A43C ^ ((v365 & 0x6568877 ^ 0x6500075) + (v365 & 0x468846 ^ 0x3986FC82) - ((v365 & 0x6568877 ^ 0x6500075) & 0x468846));
  v933 = v318;
  v935 = v54;
  v953 = v316;
  v399 = *(_DWORD *)(v316
                   + 4
                   * ((((2 * (BYTE2(v335) ^ 0x9A)) | 0x1B184832) - (BYTE2(v335) ^ 0x9A) + 1383324647) & 0x3FFFFFFF ^ 0x2D8C2468u)) ^ *(_DWORD *)(v318 + 4 * (HIBYTE(v348) ^ 0xBE)) ^ *(_DWORD *)(v54 + 4 * ((((2 * (BYTE1(v347) ^ 0x400000C4)) | 0xEFF114A) - (BYTE1(v347) ^ 0x400000C4) + 2021685083) ^ 0xC77F8869)) ^ (v398 - ((2 * v398) & 0xA8FCDAE) - 2058885417) ^ ((BYTE2(v335) ^ 0xC1) + (HIWORD(v335) & 0xBF ^ 0x7604E73E) - ((BYTE2(v335) ^ 0xC1) & 0xFFFFFFBF)) ^ v394 ^ ((v394 ^ 0xEFF2F149) - ((2 * (v394 ^ 0xEFF2F149) + 535454840) & 0x3AD082CE) + 224228259);
  v400 = (v348 ^ 0x1C) + (v348 & 0xCE ^ 0xCEFFFCC2) - ((v348 ^ 0x1C) & 0xCE);
  v401 = *(_DWORD *)(v247
                   + 4
                   * (((v400 & 0x4080DAF ^ 0x121) + (v400 ^ 0xA75E7CCE) - ((v400 ^ 0xA75E7CCE) & 0x18185AF)) ^ 0x6C280DE0));
  v402 = v401 + 1402114726 + (~(2 * v401 + 1598575462) | 0xB8232E1B);
  v403 = *(_DWORD *)(v54 + 4 * (BYTE1(v308) ^ 0x71u)) ^ *(_DWORD *)(v316
                                                                    + 4
                                                                    * (((BYTE2(v347) ^ 0x33)
                                                                      + (HIWORD(v347) & 0x89 ^ 0x4AEDEF88)
                                                                      - ((BYTE2(v347) ^ 0x33) & 0x89)) ^ 0x4AEDEFE5)) ^ v402 ^ *(_DWORD *)(v318 + 4 * (HIBYTE(v335) ^ 0xBF)) ^ (v402 >> 3) ^ (v402 >> 4) ^ ((BYTE1(v308) ^ 0xB9) - ((2 * (BYTE1(v308) ^ 0xB9) + 535454840) & 0x1C8241FE) - 1908335813) ^ ((BYTE2(v347) ^ 0x402662C6 | 0xE3A706B3) - (BYTE2(v347) ^ 0x402662C6 | 0x1C58F94C) + 475593036);
  v404 = (((2 * (v356 & 0xFFFFFFBF ^ 0xA2B38039)) | 0x7344FD12) - (v356 & 0xFFFFFFBF ^ 0xA2B38039) + 1180533111) ^ 0xB9A2FEF9;
  v405 = ((2 * v404) | 0xB730D122) - v404 + 610768751;
  v406 = v360 - 2050555816 + v943 - ((2 * (v360 - 2050555816 + v943)) & 0xB2B4788A) + 1499085893;
  v407 = v403 ^ BYTE1(v308);
  v409 = (v407 ^ 0x35604D99u) >> ((((v945 - 123) & 0x18 | 0xC0) - ((2 * (v945 - 123)) & 0x10) + 8) ^ 0xC0);
  v410 = v409 - ((2 * v409) & 0x2E05EF80);
  v411 = *(_DWORD *)((char *)*(&off_10112C750 + (v364 ^ 0x7A25)) + 4 * (HIBYTE(v393) ^ 0x95) - 949952310);
  v412 = (char *)*(&off_10112C750 + (v364 ^ 0x7A25)) - 949952310;
  v413 = v411 ^ 0x4C4A4B24;
  if (((((2 * (v947 & 0xFF0000 ^ 0x6D0000)) | 0xEBE3BF36) - (v947 & 0xFF0000 ^ 0x6D0000) + 168697957) & 0xFFFFFFF9) == 0xF514DF99)
    v413 = 1299573476;
  v932 = (v413 & (v411 ^ 0xFEC05E3E)) - ((2 * (v413 & (v411 ^ 0xFEC05E3E))) & 0x69324AAA) - 1265031851;
  v408 = ((v945 - 123) & 0x18 | 0xC0) - ((2 * (v945 - 123)) & 0x10) + 8;
  v414 = (((v410 - 1761413184) ^ 0x9702F7C0) >> (v408 ^ 0xD8))
       - ((2 * (((v410 - 1761413184) ^ 0x9702F7C0) >> (v408 ^ 0xD8))) & 0x4A);
  v415 = (char *)*(&off_10112C750 + v364 - 26996) - 586407039;
  v416 = *(_DWORD *)&v415[4 * (BYTE2(v399) ^ 0xC7)];
  v417 = v416 - ((2 * v416 + 473608014) & 0x7DE35AB4) + 219088129;
  v418 = (((2 * (BYTE1(v403) ^ 0x4A)) & 0x12) - (BYTE1(v403) ^ 0x4A) - 1775521290) ^ 0xBC69BDF6;
  v419 = (v418 - ((2 * v418) & 0x140011D8) - 1902335764) ^ 0xA4DEA4E3;
  v420 = (char *)*(&off_10112C750 + (v364 ^ 0x76D2)) - 99897991;
  v421 = v406 ^ v405;
  v422 = (char *)*(&off_10112C750 + (v364 ^ 0x6534)) - 1858690087;
  v423 = *(_DWORD *)&v420[4 * v419];
  HIDWORD(v424) = v423 ^ 0x340;
  LODWORD(v424) = v423 ^ 0x99093000;
  v425 = (v424 >> 11) - ((2 * (v424 >> 11)) & 0xBD9F80D4) + 1590673514;
  HIDWORD(v424) = *(_DWORD *)&v422[4
                                 * ((((v406 ^ v405) ^ 0x4C | 0x91E24D1)
                                   - ((v406 ^ v405) ^ 0x4C | 0xF6E1DB2E)
                                   - 152970450) ^ 0x91E246E)];
  LODWORD(v424) = HIDWORD(v424) ^ 0x4E12CBC4;
  v426 = (v424 >> 1) - ((2 * (v424 >> 1)) & 0x71E70398) - 1192001076;
  HIDWORD(v424) = v406 ^ ~v405;
  LODWORD(v424) = (v406 ^ v405) & 0xFE ^ 0x8562809C;
  v427 = (v424 >> 1) + 623656921 + ((2 * (v424 >> 1)) & 0xB0 ^ 0xFFBFFFFF);
  v428 = *(_DWORD *)&v415[4 * ((((2 * (BYTE2(v403) ^ 0x5B)) & 0xAC) - (BYTE2(v403) ^ 0x5B) + 4265) ^ 0x105F)];
  v429 = v428 - ((2 * v428 + 473608014) & 0x3F05A50C) - 308270547;
  v430 = *(_DWORD *)&v412[4 * (HIBYTE(v399) ^ 0x5F)];
  HIDWORD(v424) = v427 ^ 0x1DDFBE14 ^ v426;
  LODWORD(v424) = v427 ^ ~v426;
  v431 = (v424 >> 31) - ((2 * (v424 >> 31)) & 0xDCD72444) - 294940126;
  v432 = ((v393 & 0x29 ^ 0x3E720629) - (v393 & 0x29) + (v393 ^ 0x42)) ^ 0xDB504628;
  v433 = ((2 * v432) & 0x88000158) - v432 + 723731283;
  v434 = (((2 * (v393 ^ 0x3F)) & 0x15E) - (v393 ^ 0x3F) + 4176) ^ 0x106D;
  v435 = *(_DWORD *)&v420[4
                        * (((BYTE1(v421) ^ 0x920344) - ((2 * (BYTE1(v421) ^ 0x920344)) & 0x1240480) - 526436800) ^ 0xE00D3558)];
  HIDWORD(v424) = v435 ^ 0x340;
  LODWORD(v424) = v435 ^ 0x99093000;
  v436 = (v424 >> 11) - ((2 * (v424 >> 11)) & 0xC81FC386) + 1678762435;
  v437 = HIBYTE(v421) ^ 0xC7;
  v941 = (char *)*(&off_10112C750 + (v364 ^ 0x7A25)) - 949952310;
  v438 = *(_DWORD *)&v412[4
                        * ((((v414 - 91) ^ 0x8D)
                          + ((v414 - 91) & 0xFC ^ 0x570)
                          - (((v414 - 91) ^ 0x8D) & 0xFC)) ^ 0x57A)];
  v939 = v438 >> 1;
  v439 = ((2 * ((v438 >> 1) & 0x26BAF572 ^ 0x24B00000)) | 0x6693485C)
       - ((v438 >> 1) & 0x26BAF572 ^ 0x24B00000)
       - 860464174;
  v944 = v420;
  v946 = v415;
  v440 = *(_DWORD *)&v415[4
                        * (((BYTE2(v421) ^ 0x7A | 0x835E383A) - (BYTE2(v421) ^ 0x7A | 0x7CA1C7C5) + 2090977221) ^ 0x835E38BD)];
  v441 = *(_DWORD *)&v420[4 * (BYTE1(v393) ^ 0x9D)];
  v442 = v440 - ((2 * v440 + 473608014) & 0x635A7CC8);
  HIDWORD(v424) = v441 ^ 0x340;
  LODWORD(v424) = v441 ^ 0x99093000;
  v443 = (BYTE2(v393) ^ 0x45) + (HIWORD(v393) & 0x3F ^ 0x831F2C3A) - ((BYTE2(v393) ^ 0x45) & 0x3F);
  v444 = *(_DWORD *)&v415[4
                        * (((v443 & 0x81082251 ^ 0xA05210) + (v443 ^ 0x8309AC4D) - ((v443 ^ 0x8309AC4D) & 0x120251)) ^ 0x81ACF2E9)];
  v445 = v444 - ((2 * v444 + 205172558) & 0xB227350) - 743534257;
  v446 = *(_DWORD *)&v412[4 * v437];
  LOWORD(v415) = (BYTE1(v399) ^ 0x29) - ((2 * (BYTE1(v399) ^ 0x29)) & 0x2E) - 12521;
  LODWORD(v415) = *(_DWORD *)&v420[4
                                 * ((((unsigned __int16)v415 & 0x4986 ^ 0x90BE8083)
                                   + ((unsigned __int16)v415 & 0x3679)
                                   - 1) ^ 0x90BECF4B)];
  v447 = ((2 * (v407 ^ 0x57)) | 0x435CE502) - (v407 ^ 0x57) + 1582402943;
  v448 = ((v407 & 0x31 ^ 0x87E6FE11) + (v407 & 0xCE ^ 7) - 1) ^ 0x3E2F670;
  v449 = v937 ^ 0x9AB89263 ^ v430 ^ *(_DWORD *)&v422[4 * v434] ^ v429 ^ (((v430 >> 1) & 0x26BAF572 ^ 0x4304050)
                                                                       + ((v430 >> 1) & 0x2620E110 ^ 0x6A45A384)
                                                                       - (((v430 >> 1) & 0x26BAF572 ^ 0x4304050) & 0x2620E110)) ^ v433 ^ 0x70818179 ^ v436;
  v450 = ((2 * (v449 & 0xE574E07E ^ 0xC064406C)) & 0x22080A0) - (v449 & 0xE574E07E ^ 0xC064406C) + 1861002415;
  v940 = v422;
  v948 = v937 ^ 0x9AB89263;
  v451 = v438 ^ v937 ^ 0x9AB89263 ^ *(_DWORD *)&v422[4
                                                   * ((((2 * (v399 ^ 0x3C)) & 0xFFFFFF8F)
                                                     - (v399 ^ 0x3C)
                                                     + 8504) ^ 0x211E)] ^ ((v424 >> 11)
                                                                         - ((2 * (v424 >> 11)) & 0xFBA55720)
                                                                         + 2110958480) ^ ((v439 & 0x8421C7BA ^ 0x4214280)
                                                                                        + (v439 ^ 0xB3C8A53A)
                                                                                        - ((v439 ^ 0xB3C8A53A) & 0x8421C7BA)) ^ v399 ^ (v442 - 3500533);
  v452 = ((v450 & 0xB73A04FD ^ 0x95120818) + (v450 ^ 0x2AAD37E7) - ((v450 ^ 0x2AAD37E7) & 0xB73A04FC)) ^ 0xB63B3FFD | ((v449 & 0x1A8B1F81 ^ 0x8E031FC7 | 0x11ED7826) - (v449 & 0x1A8B1F81 ^ 0x8E031FC7 | 0xEE1287D9) - 300775463) ^ 0x976D7860;
  v453 = v452 - ((2 * v452) & 0x989DFC2) + 80015329;
  v454 = v411 ^ v937 ^ 0x9AB89263 ^ v417 ^ (v932 >> 1) ^ v425 ^ v431;
  v455 = v937 ^ *(_DWORD *)&v422[4 * (((v448 | 0x277BD5FC) - (v448 | 0xD8842A03) - 662427133) ^ 0xA37FDD65)] ^ v446 ^ (v415 >> 11) ^ v445 ^ ((((_DWORD)v415 << 21) ^ 0x68000000) - ((2 * (((_DWORD)v415 << 21) ^ 0x68000000)) & 0xE1800000) + 1892002943) ^ v447 ^ (((v446 >> 1) & 0x24909520 ^ 0x4818521) + ((v446 >> 1) & 0x22A6052 ^ 0x18002853) + 1073741822) & 0x26BBFFF2 ^ 0xD5F41F81;
  v456 = v453 ^ v451 ^ 0x85358DDA ^ v454;
  v457 = v451 ^ v455 ^ v453;
  v458 = v456 ^ 0xF7DA316E;
  v459 = v451 ^ 0x85358DDA ^ v455 ^ v456 ^ 0xF7DA316E;
  v460 = ((BYTE1(v459) ^ 3) + ((v459 >> 8) & 0x4A ^ 0x6992FD48) - ((BYTE1(v459) ^ 3) & 0x4A)) ^ 0x1D2FF69;
  v461 = v460 - ((2 * v460) & 0xC08001E6) + 1640263923;
  v462 = ((BYTE1(v459) ^ 0xCA) + ((v459 >> 8) & 0x19 ^ 0x80D2B811) - ((BYTE1(v459) ^ 0xCA) & 0x19)) ^ 0xC0DAF813;
  v463 = ((2 * (BYTE2(v457) ^ 0x8A)) | 0x6CD00018) - (BYTE2(v457) ^ 0x8A) - 912785420;
  v464 = (v411 ^ v937 ^ 0x63 ^ v417 ^ (v932 >> 1) ^ v425 ^ v431) ^ 0x39;
  v465 = (((2 * v464) & 0x120) - v464 - 618953361) ^ 0xDE5B8D2F;
  v466 = *(_DWORD *)(v313 + 4 * ((((2 * v465) | 0xBF406798) - v465 + 543149108) ^ 0xDAE03B74));
  v467 = v466 - ((2 * v466 + 1598575462) & 0x766A0FEC) + 1792618921;
  v468 = *(_DWORD *)(v933 + 4 * (HIBYTE(v456) ^ 0xC1)) ^ *(_DWORD *)(v953
                                                                     + 4
                                                                     * (((BYTE2(v457) ^ 0x706207C | 0x3691397)
                                                                       - (BYTE2(v457) ^ 0x706207C | 0xFC96EC68)
                                                                       - 57217944) ^ 0x46F338F)) ^ v467 ^ *(_DWORD *)(v935 + 4 * ((v462 - ((2 * v462) & 0x10967E) + 183200575) ^ 0x4AE32B83)) ^ (v467 >> 3) ^ (v467 >> 4) ^ ((v463 & 0x71C0F7 ^ 0x8001C0E3) + (v463 ^ 0x3C7A121C) - ((v463 ^ 0x3C7A121C) & 0x71C0F7)) ^ v461 ^ ((v461 ^ 0x9847267) + 2112595099 + ~(2 * (((v461 ^ 0x9847267) + 267727420) & 0xDF6725F ^ (v461 ^ 0x9847267) & 1)));
  if ((v454 & 0x4000) != 0)
    v470 = -64;
  else
    v470 = 64;
  v469 = (BYTE1(v454) ^ 0xF6EFFFB7) + 152043633 + ((v454 >> 7) & 0x11E ^ 0x10);
  v471 = v469 + v470 + 2048625924 - 2 * ((v469 + v470) & 0x7A1B8D57 ^ v469 & 0x13);
  v472 = ((2 * HIWORD(v459)) ^ 0xC0) - ((v459 >> 14) & 0x2C) + 790;
  v473 = (((2 * (v456 ^ 0xB8)) | 0x29BAC846) - (v456 ^ 0xB8) + 1797430237) ^ 0xBDDAF002;
  v474 = v473 - ((2 * v473) & 0x2D5BC2FA) + 380494205;
  v475 = (BYTE2(v459) ^ 0x1DBFBC9F)
       + ((2 * BYTE2(v459)) ^ 0xC0)
       + (v472 & 0x1DC ^ 0x4000229D)
       + ((2 * v472) & 0xA8 ^ 0xFFFFFFD7)
       + 1;
  v471 += 64;
  v476 = *(_DWORD *)(v313 + 4 * (v474 ^ 0x3FAA7513u));
  v477 = *(_DWORD *)(v953 + 4 * (BYTE2(v459) ^ 0xF8u)) ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v457) ^ 0xBA)) ^ *(_DWORD *)(v935 + 4 * (v471 ^ 0x7A1B8DCCu)) ^ v471 ^ ((v471 ^ 0x7A1B8D04) + 548358801 + (~(2 * (v471 ^ 0x7A1B8D04) + 1609196664) | 0x9E8BCF57)) ^ (v475 - ((2 * v475 + 6950604) & 0x44F576DC) + 1655685844);
  v478 = v476 - ((2 * v476 + 1598575462) & 0x9AA0596A) - 51095960;
  HIDWORD(v479) = v477 ^ 0x17C00C09;
  LODWORD(v479) = v477 ^ 0xC0000000;
  v480 = (v479 >> 29) - ((2 * (v479 >> 29)) & 0x42E7392A) + 561224853;
  HIDWORD(v479) = v478 ^ (v478 >> 4) ^ (v478 >> 3) ^ 0x2F2BE8;
  LODWORD(v479) = v478 ^ 0x40000000;
  v481 = v480 ^ ((v479 >> 29) - ((2 * (v479 >> 29)) & 0xEBD1646A) - 169299403);
  v482 = ((BYTE1(v458) ^ 0xAD | 0xEA74BE76) - (BYTE1(v458) ^ 0xAD | 0x158B4189) + 361447817) ^ 0xEB20FECC;
  HIDWORD(v479) = v481 ^ 1;
  LODWORD(v479) = v481 ^ 0xE51AE2D8;
  v483 = (v479 >> 3) - ((2 * (v479 >> 3)) & 0x31F68D30) - 1728362856;
  v484 = (((2 * (v457 ^ 0x59)) & 0x74) - (v457 ^ 0x59) + 728553925) ^ 0x694F7155;
  v485 = *(_DWORD *)(v313 + 4 * ((((2 * v484) | 0x4CFF1922) - v484 - 645893265) ^ 0x645C24C7u));
  v486 = v485 - ((2 * v485 + 1598575462) & 0x5F6F4400) - 547632205;
  v487 = ((BYTE2(v454) ^ 0xF12224C1 | 0x6226300E) - (BYTE2(v454) ^ 0xF12224C1 | 0x9DD9CFF1) - 1646669839) ^ 0xEF0F3C0;
  v488 = *(_DWORD *)(v933 + 4 * (HIBYTE(v459) ^ 0xB8)) ^ *(_DWORD *)(v953
                                                                     + 4
                                                                     * ((((2 * (BYTE2(v454) ^ 0x76)) | 0xF9C0F45C)
                                                                       - (BYTE2(v454) ^ 0x76)
                                                                       + 52397522) ^ 0xFCE07A21)) ^ 0x75E1E525;
  v489 = (v487 + v488) ^ 0xEFD30FBF;
  v490 = (2 * (v487 + v488)) & 0xDFA61F7E;
  v491 = 2 * ((v487 & v488) - ((2 * (v487 & v488)) & 0x1F839A42)) - 1618765246;
  v492 = v489 + v490 + (v491 ^ 0xBF839B79) + ((2 * v491) & 0xBFFFFD88 ^ 0xC0F8CB7F) + 1;
  v493 = v492 - ((2 * v492 - 530981364) & 0x9C1536C4) - 1103656344;
  v494 = BYTE1(v457);
  v495 = (BYTE1(v457) ^ 0xB000455B) + ((v457 >> 8) & 0xF0 ^ 0x9F2A8A0) - ((BYTE1(v457) ^ 0xB000455B) & 0x900041F0);
  v496 = v486 ^ *(_DWORD *)(v935
                          + 4
                          * ((((2 * (BYTE1(v458) ^ 0x904361C1)) & 0x200683AA) - (BYTE1(v458) ^ 0x904361C1) - 1545297878) ^ 0x33A7C170)) ^ (v486 >> 3) ^ (v486 >> 4) ^ (((2 * v482) | 0x7DEB912C) - v482 + 1091188586) ^ (((((2 * v482) | 0x7DEB912C) - v482 + 1091188586) ^ 0xBFA188D2) - ((2 * ((((2 * v482) | 0x7DEB912C) - v482 + 1091188586) ^ 0xBFA188D2) - 538286984) & 0xB56618D2) + 1252540069) ^ v493;
  v497 = ((BYTE2(v458) ^ 0x3E2D0202 | 0xE33DEF50) - (BYTE2(v458) ^ 0x3E2D0202 | 0x1CC210AF) + 482480303) ^ 0x1C10C3D8;
  v498 = *(_DWORD *)(v313 + 4 * (v459 ^ 0xBEu));
  v499 = v498 - ((2 * v498 + 1598575462) & 0xD3CE1D1E) + 428554306;
  v500 = *(_DWORD *)(v953 + 4 * (((v497 | 0xCBA677DE) - (v497 | 0x34598821) + 878282785) ^ 0xAA6596C)) ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v454) ^ 0xFC)) ^ *(_DWORD *)(v935 + 4 * (((v494 ^ 0x4174017B | 0x10CD8E22) - (v494 ^ 0x4174017B | 0xEF3271DD) - 281906723) ^ 0x51B98F51)) ^ v499 ^ (v499 >> 3) ^ (v499 >> 4) ^ v495 ^ ((v495 ^ 0x29F2AC6B) - ((2 * (v495 ^ 0x29F2AC6B) - 538286984) & 0xEC86E790) + 1714988548) ^ (((2 * (BYTE2(v458) ^ 0x6003081E)) | 0x938A06A) - (BYTE2(v458) ^ 0x6003081E) - 77353013);
  v501 = ((BYTE2(v483) ^ 0x95) - ((2 * (BYTE2(v483) ^ 0x95)) & 0xBC) + 1637519710) ^ 0x32CEB15C;
  LOWORD(v495) = (BYTE1(v496) ^ 0x1E) - ((2 * (BYTE1(v496) ^ 0x1E)) & 0xA2) - 11439;
  v502 = ((2 * (v500 ^ 0x18)) | 0x90974F9A) - (v500 ^ 0x18) + 934565939;
  v503 = (((2 * BYTE1(v496)) ^ 0x60) - ((v496 >> 6) & 0x10) + 72) & 0x78;
  v504 = (v495 & 0x19C9 ^ 0x80652801) + (v495 & 0x636 ^ 0x14000213) - 1;
  v505 = (v503 ^ 0x7EB7FEB7) + ((2 * v503) ^ 0x90) - 2125987583 + (v504 ^ 0xFB900BD1);
  v506 = *(_DWORD *)(v313
                   + 4
                   * (((v502 & 0x4123485C ^ 0x1210048) + (v502 ^ 0xC8CEEE95) - ((v502 ^ 0xC8CEEE95) & 0x4123485C)) ^ 0x41A6015B));
  v507 = v506 - ((2 * v506 + 1598575462) & 0x71B33DE6) - 394409818;
  v508 = *(_DWORD *)(v953
                   + 4
                   * (((BYTE2(v483) ^ 0x82006AB6) - ((2 * (BYTE2(v483) ^ 0x82006AB6)) & 0x400D422) - 1962481135) ^ 0x90680A8)) ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v468) ^ 0x53)) ^ *(_DWORD *)(v935 + 4 * ((((2 * BYTE1(v496)) | 0x23A6A17A) - BYTE1(v496) - 299061437) ^ 0x11D350C4u)) ^ v504 ^ (v505 - ((2 * v505) & 0xA68C1C7E) - 750383553) ^ ((v501 | 0x4E466B8D) - (v501 | 0xB1B99472) - 1313237902);
  v509 = (*(_BYTE *)(v953
                   + 4
                   * (((BYTE2(v483) ^ 0x82006AB6) - ((2 * (BYTE2(v483) ^ 0x82006AB6)) & 0x400D422) - 1962481135) ^ 0x90680A8)) ^ (*(_BYTE *)(v933 + 4 * (HIBYTE(v468) ^ 0x53)) ^ *(_BYTE *)(v935 + 4 * ((((2 * BYTE1(v496)) | 0x23A6A17A) - BYTE1(v496) - 299061437) ^ 0x11D350C4u)) ^ v504 ^ (v505 - ((2 * v505) & 0x7E) + 63) ^ ((v501 | 0x8D) - (v501 | 0x72) + 114))) & 0x80 ^ 0xD6F7ECD9;
  v510 = v507 ^ (v507 >> 4) ^ (v507 >> 3);
  v511 = ((BYTE2(v496) ^ 0x93) - ((2 * (BYTE2(v496) ^ 0x93)) & 0xC4) + 719821922) ^ 0x62A19C43;
  v512 = ((v511 | 0x4858B802) - (v511 | 0xB7A747FD) - 1213773827) ^ 0x1EB882;
  v513 = v509 + 1073585151;
  v514 = v509 + 688395175;
  v515 = -303205199 - v509;
  if ((v514 & ~v510) != 0)
    v513 = v515;
  v516 = ((v500 >> 7) & 0x20) + (BYTE1(v500) ^ 0xFFFFFFDD) + 764858096;
  v517 = (v516 & 0x804409A ^ 0x42210012) + (v516 ^ 0xC06DEED) - ((v516 ^ 0xC06DEED) & 0x2180009A);
  v518 = ((2 * ((2 * v468) ^ 0xE0E3FDBA)) & 0x78) - ((2 * v468) ^ 0xE0E3FDBA) + 2;
  v519 = ((2 * (BYTE1(v500) ^ 0x90)) | 0x5096EADC) - (BYTE1(v500) ^ 0x90) - 676033902;
  v520 = *(_DWORD *)(v313
                   + 4
                   * ((v468 ^ 0xF5B7EF82)
                    + ((2 * v468) & 0xBE ^ 0xBA)
                    - ((2 * v518) & 0x90)
                    + (v518 & 0x4C ^ 0x305435)
                    + 169327762));
  v521 = v520 - ((2 * v520 + 1598575462) & 0x434024F8) + 1363426351;
  v522 = *(_DWORD *)(v953 + 4 * v512) ^ *(_DWORD *)(v935
                                                    + 4
                                                    * (((v519 & 0x3653FF82 ^ 0x16108E80)
                                                      + (v519 ^ 0x284B716E)
                                                      - ((v519 ^ 0x284B716E) & 0x3653FF82)) ^ 0x3653FB43u)) ^ v517 ^ ((v517 ^ 0x4A355023) - 2 * (((v517 ^ 0x4A355023) + 1878340156) & 0x468FDFDB ^ (v517 ^ 0x4A355023) & 1) + 914690582) ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v483) ^ 0xAA)) ^ ((BYTE2(v496) ^ 0x8A2EDBD0 | 0xCE88B5C6) - (BYTE2(v496) ^ 0x8A2EDBD0 | 0x31774A39) + 829901369);
  v523 = (v522 & 0x40000 ^ 0x7FDCFFFE) + 2 * (v522 & 0x40000);
  v524 = v521 ^ (v521 >> 4) ^ (v521 >> 3) ^ 0xBF8E1114;
  v120 = ((v523 - 2145189886) & v524) == ((2 * ((v523 - 2145189886) & v524)) & 0xDDF80000);
  v525 = BYTE2(v468);
  v938 = HIBYTE(v468);
  v526 = ((v468 >> 8) & 0xBD ^ 0x49400904) + (BYTE1(v468) ^ 0x803380FB) - ((BYTE1(v468) ^ 0x803380FB) & 0x2100BD);
  v527 = 2 * HIWORD(v500);
  v528 = v527 & 0x1EC ^ 0x168;
  v529 = (v527 ^ 0x2568) - ((2 * (v527 ^ 0x2568)) & 0xD8) + 877;
  v530 = v529 & 0x1DC ^ 0xE91005C7;
  v531 = (2 * v529) & 0x2A8 ^ 0xFFFFFD77;
  v532 = v523 - 440926434;
  v533 = -445513958 - v523;
  if (!v120)
    v532 = v533;
  v534 = *(_DWORD *)(v313
                   + 4
                   * (((v483 ^ 0x3068548E | 0xCAA26859)
                     - (v483 ^ 0x3068548E | 0x355D97A6)
                     + 895326118) ^ 0xFACA3C77));
  v535 = v534 - ((2 * v534 + 1598575462) & 0x997E035E) + 2086873954;
  v536 = *(_DWORD *)(v953
                   + 4
                   * (((BYTE2(v500) ^ 0x85 | 0x9009EDE9) - (BYTE2(v500) ^ 0x85 | 0x6FF61216) + 1878397462) ^ 0x9009ED40)) ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v496) ^ 0xBC)) ^ *(_DWORD *)(v935 + 4 * (v526 ^ 0xC9528970)) ^ v535 ^ (v535 >> 3) ^ (v535 >> 4) ^ ((BYTE2(v500) ^ 0xFFCFD742) + v528 + v530 + v531 + 1 - ((2 * ((BYTE2(v500) ^ 0xFFCFD742) + v528 + v530 + v531 + 1) + 1781143258) & 0xD1E29F72) + 503733030) ^ v526 ^ ((v526 ^ 0xC95289B8) - ((2 * (v526 ^ 0xC95289B8) + 1609196664) & 0x6ACEDF7E) + 626827771);
  v537 = ((v536 >> 7) & 0x1F6DEB4 ^ 0x1D28CA4) + ((v536 >> 8) ^ 0xBB16B988);
  v538 = (2 * (((_BYTE)v537 - 90) & 0x7F) - 2046669439 + ((v537 - 90) ^ 0x79FDB27Fu)) % 0x81;
  v539 = ((v510 ^ 0x3C4F34C2)
        - 385189976
        + v513
        - ((2 * ((v510 ^ 0x3C4F34C2) - 385189976 + v513)) & 0xCC499AFC)
        + 1713687934) ^ (((2 * (v508 & 0xFFFFFF7F ^ 0x53EC036F)) & 0x6C65AE22)
                       - (v508 & 0xFFFFFF7F ^ 0x53EC036F)
                       - 909301650);
  v540 = (v522 & 0xFFFBFFFF ^ 0xB58843DC) - ((2 * (v522 & 0xFFFBFFFF ^ 0xB58843DC)) & 0xB6B2E378) + 1532850620;
  v541 = (v524 - 1704263452 + v532 - ((2 * (v524 - 1704263452 + v532)) & 0xD9179598) + 1821100748) ^ ((v540 & 0x23AC9FA2 ^ 0x22808C02) + (v540 ^ 0x817E13BC) - ((v540 ^ 0x817E13BC) & 0x23AC9FA2));
  v542 = BYTE1(v483);
  v543 = ((2 * (BYTE1(v483) ^ 0x27)) | 0xF814C4AA) - (BYTE1(v483) ^ 0x27) - 2081055317;
  v544 = v483 >> 8;
  v545 = ((2 * (v483 >> 8)) ^ 0x40) - ((v483 >> 6) & 0xC) + 134;
  v546 = (v544 & 0xA5) + (v542 ^ 0xFFFFFFFD) + (v542 | 0xA9A785A) + 1;
  v547 = (v543 & 0x48007D10 ^ 0x88541501) + (v543 & 0x340A02EF) - 1;
  v548 = ((2 * v545) & 0xD0) + (v545 & 0x78 ^ 0xBFF7AFEF) + 1074286609 + (v547 ^ 0x9BAB456E);
  v549 = *(_DWORD *)(v313 + 4 * (v496 ^ 0xFEu));
  v550 = *(_DWORD *)(v953
                   + 4 * (((v525 ^ 0x920244F9) - ((2 * (v525 ^ 0x920244F9)) & 0x200408D2) + 1345293417) ^ 0xC22DC879)) ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v500) ^ 0x12)) ^ v525 ^ v547 ^ *(_DWORD *)(v935 + 4 * (((v546 & 0xFDDB31BE ^ 0xE5500184) + (v546 ^ 0x18ABF87A) - ((v546 ^ 0x18ABF87A) & 0xFDDB31BE)) ^ 0xEFEAB174)) ^ (v548 - ((2 * v548) & 0xB1B35800) - 656823296);
  v551 = v549 - ((2 * v549 + 1598575462) & 0x47A9B466) + 1400439782;
  v552 = v551 ^ (v551 >> 4) ^ (v551 >> 3);
  v553 = (v552 ^ 0xCC04EDD3 ^ v550) + 1;
  v552 ^= 0xBD930CD6;
  v554 = v552 + (v553 ^ 0xFFBFB77F) + ((2 * v553) & 0xFF7F6EFE) + 4212865;
  v555 = (v550 ^ ((v550 ^ 0x7197E105) - ((2 * (v550 ^ 0x7197E105) + 2) & 0xB4564448) + 1512776229) ^ 0x8733A137 ^ (v554 - ((2 * v554) & 0xA6E13BD2) + 1399889385))
       + v552;
  v556 = v555 - ((2 * v555) & 0xF33081A6) - 107462445;
  v557 = (BYTE2(v541) ^ 0x2344603C) - ((2 * (BYTE2(v541) ^ 0x2344603C)) & 0x4000C1E0) - 401018384;
  v558 = v537 + 1141149862;
  v559 = (v538 ^ 0x10C020) - ((2 * (_WORD)v538) & 0x1BE) - 1097760;
  if (((2 * v538) & 0xFA) + (v538 ^ 0x60BFDD7D) != 1623186813)
    v559 = 0;
  v560 = v558 + v559;
  v561 = v560 - ((2 * v560) & 0xA05A10B2) + 1345128537;
  v562 = (v560 - ((2 * v560) & 0xB2) + 89);
  v563 = (((2 * (v562 ^ 0x2D)) | 0xF27C166E) - (v562 ^ 0x2D) + 113374409) ^ 0x49705A27;
  v564 = ((2 * v563) | 0x5E128F12) - v563 - 789137289;
  v565 = ((v556 ^ 0xCD) - ((2 * (v556 ^ 0xCD)) & 0x1FC) + 1712129022) ^ 0x4E9D71FC;
  v566 = (v565 - ((2 * v565) & 0x10202734) + 1312166810) ^ 0x66A661C4;
  v567 = ((2 * v561) ^ 0xA05A10B2) - ((2 * ((2 * v561) ^ 0xA05A10B2)) & 0x48) + 229;
  v568 = (v567 & 0x78 ^ 0xDB737BDF) + ((2 * v567) & 0x70 ^ 0x40) + 613188673 + (v564 ^ 0xF0B224D1);
  v569 = v568 - 1796014656 + (~(2 * v568) | 0xD61A0481);
  v570 = *(_DWORD *)(v313 + 4 * v566) - ((2 * *(_DWORD *)(v313 + 4 * v566) + 1598575462) & 0xAF91522A) - 2022911288;
  v571 = ((2 * (v562 ^ 0x8F)) & 0xC4) - (v562 ^ 0x8F) + 453240477;
  v572 = ((v571 & 0x1E19F ^ 0x40540006) + (v571 ^ 0x9B0BE5D9) - ((v571 ^ 0x9B0BE5D9) & 0x8019F)) ^ 0xC055E2C5;
  v573 = (v570 ^ (v570 >> 1) ^ 0xBC2CFD9F) >> (v936 & 3);
  v574 = ((v573 - ((2 * v573) & 0x4E0C065C) + 654705454) ^ 0x2706032E) >> (v936 & 3 ^ 3);
  v575 = v574 - ((2 * v574) & 0x2668C442) + 322200097;
  v576 = (BYTE1(v556) ^ 0xAB) + ((v556 >> 8) & 0xF5 ^ 0xB2E4C654) - ((BYTE1(v556) ^ 0xAB) & 0xF5);
  v577 = (v576 & 0x24A ^ 0x180B) + (v576 & 0x1B5) - 1;
  v578 = ((HIWORD(v536) & 0x59 ^ 0x94CC7818) + (HIWORD(v536) & 0xA6 ^ 7) - 1) ^ 0x5C6E6A49;
  v579 = ((2 * (BYTE2(v536) ^ 0xE5)) & 0x162) - (BYTE2(v536) ^ 0xE5) + 1852650574;
  v580 = ((v579 & 0xE210633 ^ 0x128232) + (v579 ^ 0x6F295C4D) - ((v579 ^ 0x6F295C4D) & 0x1404633)) ^ 0xE37AE9B;
  v581 = *(_DWORD *)(v933 + 4 * (HIBYTE(v539) ^ 0x94)) ^ *(_DWORD *)(v953 + 4 * (v557 ^ 0xCB5C912E)) ^ v570 ^ *(_DWORD *)(v935 + 4 * v572) ^ v564 ^ v569 ^ v575;
  v582 = (((v556 >> 8) & 0x6A ^ 0x5A57AE23) + ((v556 >> 8) & 0x95) - 1) ^ 0x4A55EF69;
  v583 = (((2 * v539) & 0x40) + (v539 ^ 0xFFFFFF20) + 352155616) ^ 0x367D37F9;
  v584 = *(_DWORD *)(v313 + 4 * ((((2 * v583) | 0x50723ECA) - v583 - 674832229) ^ 0xAB95F64));
  v585 = v584 - ((2 * v584 + 1598575462) & 0xFB8772B8) - 1385700593;
  v586 = ((BYTE1(v539) ^ 0xBD) + ((v539 >> 8) & 0x7E ^ 0x28C5AD42) - ((BYTE1(v539) ^ 0xBD) & 0x7E)) ^ 0x88453777;
  v587 = ((BYTE1(v539) ^ 0x49) + ((v539 >> 8) & 0xB1 ^ 0xFE3CB2B0) - ((BYTE1(v539) ^ 0x49) & 0xB1)) ^ 0xCE5CB289;
  v588 = *(_DWORD *)(v953 + 4 * v580) ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v541) ^ 0x56)) ^ v585 ^ *(_DWORD *)(v935 + 4 * ((((2 * v582) | 0x1740708E) - v582 - 195049543) ^ 0x1BA279FFu)) ^ (v585 >> 3) ^ (v585 >> 4) ^ ((v578 | 0xA88CF55) - (v578 | 0xF57730AA) - 176738134) ^ ((v577 ^ 0x1A6F) - ((2 * (v577 ^ 0x1A6F) - 538286984) & 0x8E80B906) - 1221226817);
  v589 = *(_DWORD *)(v313 + 4 * (((v541 & 0x27 ^ 0x1FED6001) + (v541 & 0xD8 ^ 0x80C9) - 1) ^ 0x1FEDE06C));
  v590 = v589 - ((2 * v589 + 1598575462) & 0xC946A5FE) + 340229298;
  v591 = *(_DWORD *)(v933 + 4 * (HIBYTE(v536) ^ 0x4E)) ^ *(_DWORD *)(v935
                                                                     + 4
                                                                     * ((v587 - ((2 * v587) & 0x4040013A) - 399066979) ^ 0xD856B810)) ^ v590 ^ *(_DWORD *)(v953 + 4 * ((((2 * (BYTE2(v556) ^ 0x4F)) & 0x78) - (BYTE2(v556) ^ 0x4F) + 707) ^ 0x25Bu)) ^ (v590 >> 3) ^ (v590 >> 4) ^ (v586 - ((2 * v586) & 0xFFFFE003) - 352538623) ^ (((v586 - ((2 * v586) & 0xFFFFE003) - 352538623) ^ 0x4A7C2A81) - ((2 * ((v586 - ((2 * v586) & 0xFFFFE003) - 352538623) ^ 0x4A7C2A81) + 1609196664) & 0x7E9159C4) - 1354899682) ^ (((2 * (BYTE2(v556) ^ 0x19)) | 0x5BADF22E) - (BYTE2(v556) ^ 0x19) - 769063191);
  v592 = ((2 * (BYTE1(v541) ^ 0x42)) & 0xAE) - (BYTE1(v541) ^ 0x42) + 16552;
  v593 = *(_DWORD *)(v313
                   + 4
                   * (((v536 ^ 0x89A9A6A)
                     + (v536 & 0x25 ^ 0xF4004505)
                     - ((v536 ^ 0x89A9A6A) & 0x8821025)) ^ 0xF418CF3B));
  v594 = v593 - ((2 * v593 + 524833638) & 0x2D56F294) - 967859459;
  v595 = *(_DWORD *)(v933 + 4 * (HIBYTE(v556) ^ 0x5F)) ^ *(_DWORD *)(v953
                                                                     + 4
                                                                     * ((((2 * (BYTE2(v539) ^ 0x22CC886A)) | 0x8B40F976)
                                                                       - (BYTE2(v539) ^ 0x22CC886A)
                                                                       - 1168145595) ^ 0x676CF433)) ^ *(_DWORD *)(v935 + 4 * ((((v541 >> 8) & 0xD8 ^ 0x64851) - ((v541 >> 8) & 0x27) - 1373556698) ^ 0xAE27782A)) ^ v594 ^ (v594 >> 3) ^ (v594 >> 4) ^ v592 ^ ((v592 ^ 0x407F) - 1268120946 + (~(2 * (v592 ^ 0x407F) - 538286984) | 0x77165F5D)) ^ (((2 * (BYTE2(v539) ^ 0x878106BA)) | 0xDDCE366E) - (BYTE2(v539) ^ 0x878106BA) - 1860639543);
  v596 = ((v949 ^ 0x63) & 0xA0 ^ (v949 ^ 0x63) & 0xB8 ^ 0x20) - 122;
  v597 = ((((v591 ^ 0xDE82FAEF) >> ((v596 ^ 0xA0) & 0xF8))
         - ((2 * ((v591 ^ 0xDE82FAEF) >> ((v596 ^ 0xA0) & 0xF8))) & 0x9DCC28F4)
         - 823782278) ^ 0xCEE6147A) >> (~v596 & 0xB8);
  v598 = (((2 * (BYTE1(v591) ^ 0x822DC675)) & 0x528106) - (BYTE1(v591) ^ 0x822DC675) - 99317892) ^ 0x52040B9A;
  v599 = (v598 | 0xCC8EC26B) - (v598 | 0x33713D94) + 863059348;
  v600 = v577 ^ 0x5041A5 ^ v588;
  v601 = ((2 * (BYTE2(v600) ^ 0x80A98009)) & 0x140018A) - (BYTE2(v600) ^ 0x80A98009) - 565456582;
  v602 = ((BYTE2(v600) ^ 0xCB) - ((2 * (BYTE2(v600) ^ 0xCB)) & 0x184) + 1718066114) ^ 0x5257B980;
  v603 = *(_DWORD *)(v953 + 4 * (((v602 | 0x285756A5) - (v602 | 0xD7A8A95A) - 676812454) ^ 0x1C6774BD));
  v604 = (v603 ^ v601 ^ 0xD2F504CC) + 1;
  v601 ^= 0xC316B6D4;
  v605 = v601 + (v604 ^ 0xABF0E13B) + ((2 * v604) & 0x57E1C276) + 1410277061;
  v606 = (((2 * v595) & 0x90) + (v595 & 0xD8 ^ 0xFFFFFF6F) - 670889806) ^ 0xFEA329A5;
  v607 = ((v606 | 0x2B2DA02C) - (v606 | 0x14D25FD3) + 349331411) & 0x3496D2D8 ^ 0xCFEDAD27;
  v608 = (v603 ^ ((v603 ^ 0x11E3B218) - ((2 * (v603 ^ 0x11E3B218) + 2) & 0xAD8A8132) + 1455767706) ^ 0xDFEDD586 ^ (v605 - ((2 * v605) & 0xCE69B1F0) + 1731516664))
       + v601;
  v609 = v608 - ((2 * v608) & 0x911076A0) + 1216887632;
  v610 = *(_DWORD *)(v313
                   + 4
                   * ((((2 * (v595 & 0x27 ^ 0x2B4028)) & 0x468004) - (v595 & 0x27 ^ 0x2B4028) - 1508330179) ^ 0xB59FB2E ^ (v607 - ((2 * v607) & 0xCC06463C) + 1711481630)));
  v611 = v610 - ((2 * v610 + 122180454) & 0x5E0C576) - 1298887570;
  v612 = v581 ^ v557;
  v613 = *(_DWORD *)(v933 + 4 * (HIBYTE(v581) ^ 0x77)) ^ *(_DWORD *)(v935
                                                                     + 4
                                                                     * (((BYTE1(v591) ^ 0xD1 | 0x3D354A1E)
                                                                       - (BYTE1(v591) ^ 0xD1 | 0xC2CAB5E1)
                                                                       - 1026902559) ^ 0x3D354AFD)) ^ v611 ^ (v611 >> 3) ^ (v611 >> 4) ^ ((v599 ^ 0xE6B38802) - ((2 * (v599 ^ 0xE6B38802) - 538286984) & 0xC29ACB42) + 1363318749) ^ v609;
  v614 = ((BYTE1(v595) ^ 0x5F | 0xA4D0FFE0) - (BYTE1(v595) ^ 0x5F | 0x5B2F001F) + 1529806879) ^ 0xACF0EA68;
  v615 = ((2 * v614) & 0xF25BE16) - v614 + 946675956;
  v616 = ((2 * (BYTE1(v595) ^ 0x48)) & 0x30) - (BYTE1(v595) ^ 0x48) + 1453369063;
  v617 = *(_DWORD *)(v933 + 4 * (HIBYTE(v588) ^ 0xAC)) ^ *(_DWORD *)(v953
                                                                     + 4
                                                                     * (((BYTE2(v591) ^ 0xB7 | 0xAF5C115F)
                                                                       - (BYTE2(v591) ^ 0xB7 | 0x50A3EEA0)
                                                                       + 1352920736) ^ 0xAF5C11F2)) ^ BYTE2(v591);
  v618 = v612 ^ 0x7E498EC1;
  v619 = ((v612 ^ 0xD8) + (v612 & 0x28 ^ 0x7127120) - ((v612 ^ 0xD8) & 0x28)) ^ 0x86607341;
  v620 = (((v617 ^ 0xAE9C7862) & 0xABC8A1A4 ^ 0x81800020 | 0x6DB969D4)
        - ((v617 ^ 0xAE9C7862) & 0xABC8A1A4 ^ 0x81800020 | 0x9246962B)
        - 1840867797) ^ 0x7FB919D4;
  v621 = *(_DWORD *)(v313 + 4 * ((((2 * v619) & 0x24015D2) - v619 + 1624446230) ^ 0xE1A1179A));
  v622 = 2 * v621 - ((4 * v621 + 1568672052) & 0x782148D8) - 355423993;
  v623 = ((v620 | 0xF904FDDF) - (v620 | 0x6FB0220) + 117113376) ^ 0x680CADDF | ((((v617 ^ 0xAE9C7862) & 0x14175C5A ^ 0xB570C2F)
                                                                               - 1) & 0x14575C7E | v617 & 0x40200201) ^ 0x44565625;
  v624 = v623 - ((2 * v623) & 0x8052812) + 67277833;
  v625 = (v622 & 0xB0884ECC ^ 0x447DDBA3)
       + ((((v621 - 681573811) ^ 0xD8442766) - ((2 * ((v621 - 681573811) ^ 0xD8442766)) & 0x15F923FC) - 1963159042) ^ 0x8AFC91FE)
       + ((2 * v622) & 0x60109D98 ^ 0x60000898)
       - 1954406383;
  v626 = (v625 ^ 0xFFEFF6CF) + 1049601 + ((2 * v625) & 0xFFDFED9E) + 1328;
  v627 = ((v626 >> 3) - ((v626 >> 2) & 0x5EB7552) + 1660271273) ^ ((v626 >> 4) - ((v626 >> 3) & 0x1459FCCE) - 903020953) ^ 0xA8D944CE;
  v628 = 2 * ((v627 & v626) - ((2 * (v627 & v626)) & 0x64FB1F0A)) - 453304566;
  v629 = (v597 - ((2 * v597) & 0x64) - 78) ^ 0x74;
  v630 = ((v627 + v626) ^ 0xE9F63F75)
       + ((2 * (v627 + v626)) & 0xD3EC7EEA)
       + (v628 ^ 0x20EB1F69)
       + ((2 * v628) & 0x77DFFF38 ^ 0xBE29C1EF);
  v631 = (v630 + 1 - 2 * ((v630 + 301580329) & 0x24B0E85D ^ (v630 + 1) & 1) + 1990895748) ^ *(_DWORD *)(v935 + 4 * (((v616 & 0x20025CC ^ 0x1070940) + (v616 ^ 0x1E28E4BE) - ((v616 ^ 0x1E28E4BE) & 0x88001CC)) ^ 0x430F6F82u)) ^ ((v615 ^ 0x304D35B4) - ((2 * (v615 ^ 0x304D35B4) + 535454840) & 0x17397BF0) - 74321868) ^ v624;
  v632 = ((BYTE1(v618) ^ 0xF8) - ((2 * (BYTE1(v618) ^ 0xF8)) & 0x4E) + 238405415) ^ 0x4E2F6785;
  v633 = (v632 | 0xBA3BCD21) - (v632 | 0x45C432DE) + 1170485982;
  v634 = *(_DWORD *)(v313 + 4 * (((v600 & 3) + 6143 + (v600 & 0xFC ^ 0x99)) ^ 0x181B));
  v635 = v634 - ((2 * v634 + 1598575462) & 0x4F22A54C) - 684360615;
  v636 = (v600 >> 8) & 0xFA ^ 0xB944E30;
  v637 = BYTE1(v600);
  v638 = ((v637 ^ 0xCB) + v636 - ((v637 ^ 0xCB) & 0xFA)) & 0x89003FF;
  v639 = *(_DWORD *)(v953
                   + 4
                   * ((((2 * (BYTE2(v595) ^ 0x6C)) | 0x3D03C5D0) - (BYTE2(v595) ^ 0x6C) + 1635654936) ^ 0x9E81E292)) ^ *(_DWORD *)(v933 + 4 * ((((2 * v629) & 0x20) - v629 + 751) ^ 0x28Au)) ^ v635 ^ *(_DWORD *)(v935 + 4 * (((BYTE1(v618) ^ 0xCB | 0xBCF0B4F) - (BYTE1(v618) ^ 0xCB | 0xF430F4B0) - 198118224) ^ 0xBCF0B57)) ^ (v635 >> 3) ^ (v635 >> 4) ^ (((2 * (BYTE2(v595) ^ 0x25B2308F)) | 0x57A86EEC) - (BYTE2(v595) ^ 0x25B2308F) - 735328118) ^ v633 ^ ((v633 ^ 0xFA216D60) - ((2 * (v633 ^ 0xFA216D60) + 535454840) & 0x2E377D32) + 118550741);
  v640 = ((HIWORD(v618) & 0x9B ^ 0xA75F203) + (HIWORD(v618) & 0x64 ^ 0x41) - 1) ^ 0xB55730B;
  v641 = (2 * ((v637 ^ 0x31) & 0x3F) - (v637 ^ 0x31) - 2132033600) ^ 0x4DAF60;
  v642 = ((v591 & 0x96 ^ 0xFE9AC479) - (v591 & 0x69)) ^ 0x7F9AC469;
  v643 = *(_DWORD *)(v313 + 4 * ((((2 * v642) & 0x200010A) - v642 + 948881018) ^ 0xB98EC6A3));
  v644 = v643 - ((2 * v643 + 1598575462) & 0x44C3E118) + 1376131647;
  v645 = *(_DWORD *)(v953
                   + 4
                   * (((BYTE2(v618) ^ 0x8C0500BE) - ((2 * (BYTE2(v618) ^ 0x8C0500BE)) & 0x80010) - 1036203512) ^ 0x4E39CA24)) ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v595) ^ 0xD7)) ^ *(_DWORD *)(v935 + 4 * ((((2 * v641) & 0xDB43A) - v641 + 1642604002) ^ 0xE14E356A)) ^ v644 ^ (v644 >> 3) ^ (v644 >> 4) ^ ((v640 | 0xEF577C5A) - (v640 | 0x10A883A5) + 279479205) ^ v638 ^ ((v638 ^ 0x89002E0) - ((2 * (v638 ^ 0x89002E0) - 538286984) & 0x814A49E8) + 816095024);
  LOWORD(v640) = v631 ^ v615;
  v646 = ((v631 ^ v615) >> 16);
  v647 = (((2 * (v646 ^ 0x31)) & 0xC0) - (v646 ^ 0x31) + 1509164447) ^ 0x4856851B;
  v648 = (((2 * (v646 ^ 0x9E)) | 0x3AB9752) - (v646 ^ 0x9E) - 30788521) ^ 0xBD4A1C1;
  v649 = (((2 * v648) | 0xA7FA5B0A) - v648 - 1409101189) ^ 0x59FC471E;
  v650 = (BYTE1(v639) ^ 0x5404D0E8 | 0xA7D827FC) - (BYTE1(v639) ^ 0x5404D0E8 | 0x5827D803) + 1479006211;
  v651 = v613 ^ v599;
  v652 = HIBYTE(v613) ^ 0xD9;
  v653 = *(_DWORD *)(v313 + 4 * (v645 ^ 0x29u));
  v654 = v653 - ((2 * v653 + 122180454) & 0x7A28684) - 1284150027;
  v655 = *(_DWORD *)(v933 + 4 * v652) ^ *(_DWORD *)(v935
                                                    + 4
                                                    * ((((2 * (BYTE1(v639) ^ 0x9C)) | 0x818D5AD4)
                                                      - (BYTE1(v639) ^ 0x9C)
                                                      + 1060721302) ^ 0xC0C6ADD6)) ^ v654 ^ *(_DWORD *)(v953 + 4 * v649) ^ (v654 >> 3) ^ (v654 >> 4) ^ v650 ^ ((v647 | 0xDBD54D05) - (v647 | 0x242AB2FA) + 606778106) ^ ((v650 ^ 0xF3DCF7FC) - 2 * (((v650 ^ 0xF3DCF7FC) + 267727420) & 0x123919BD ^ v650 & 1) + 36588536);
  v656 = (((v645 >> 8) & 0x32 ^ 0xF9994923) + ((v645 >> 8) & 0xCD) - 1) ^ 0x7D89C79F;
  v657 = ((2 * v656) | 0xBA156EAE) - v656 + 586500265;
  v658 = 2 * HIWORD(v639);
  v659 = v658 & 0x1CE ^ 0x84;
  v660 = (v658 ^ 0x84) - ((v639 >> 14) & 0x54) + 554;
  v661 = (BYTE2(v639) ^ 0xBFEFBFA5) + v659 + (v660 & 0x1DC ^ 0x15C061CB) + ((2 * v660) & 0x38 ^ 0xFFFFFFEF) + 1;
  v662 = v661 - ((2 * v661 + 9014408) & 0x490EDFC) - 896713406;
  v663 = v651 ^ 0x93F8150E;
  v664 = *(_DWORD *)(v313 + 4 * (v651 ^ 0x69u));
  v665 = v664 - ((2 * v664 + 524833638) & 0x3D38A1C2) + 1312848532;
  v666 = *(_DWORD *)(v953 + 4 * (BYTE2(v639) ^ 0xDAu)) ^ *(_DWORD *)(v935
                                                                     + 4
                                                                     * ((((2 * (BYTE1(v645) ^ 0xA904FC34)) | 0x56BA176A)
                                                                       - (BYTE1(v645) ^ 0xA904FC34)
                                                                       + 346223691) & 0x7FFFFFFF ^ 0x4259F776)) ^ v665 ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v631) ^ 4)) ^ (v665 >> 3) ^ (v665 >> 4) ^ v657 ^ v662 ^ ((v657 ^ 0x591A39D5) - ((2 * (v657 ^ 0x591A39D5) - 538286984) & 0xEE8A6762) - 415603219);
  v667 = (BYTE1(v663) ^ 0xE306269A | 0x981211D8) - (BYTE1(v663) ^ 0xE306269A | 0x67EDEE27) + 1743646247;
  v668 = *(_DWORD *)(v933 + 4 * (HIBYTE(v639) ^ 0x83));
  HIDWORD(v669) = v668 ^ 0x1885;
  LODWORD(v669) = v668 ^ 0xB1A50000;
  v670 = (v669 >> 13) - ((2 * (v669 >> 13)) & 0x66CA4A50) + 862266664;
  v671 = ((HIWORD(v645) & 0x8A ^ 0x4280A881) + (HIWORD(v645) & 0x75) - 1) ^ 0x62002E7E;
  HIDWORD(v669) = v670 ^ 0x4E24D;
  LODWORD(v669) = v670 ^ 0x5AF80000;
  v672 = ((HIWORD(v645) & 0x7D ^ 0x63E81079) + (HIWORD(v645) & 0x82 ^ 3) - 1) ^ 0x795870BD;
  v673 = (((v663 >> 8) & 0xF4 ^ 0x21418095) + ((v663 >> 8) & 0xB) - 1) ^ 0x824081BA;
  v674 = *(_DWORD *)(v313 + 4 * (v640 ^ 0xEAu));
  v675 = v674 - ((2 * v674 + 21517158) & 0x17E4996) - 1335669122;
  v676 = *(_DWORD *)(v953 + 4 * ((((2 * v672) | 0xBC40F8B6) - v672 + 568296357) ^ 0xC4901CFB)) ^ *(_DWORD *)(v935 + 4 * (((v673 | 0xABB8FD45) - (v673 | 0x544702BA) + 1413939898) ^ 0x8B9FCBD)) ^ (((2 * v671) & 0x10D58) - v671 - 392289965) ^ v667 ^ ((v667 ^ 0x7B14375C) - ((2 * (v667 ^ 0x7B14375C) - 538286984) & 0xC82C00BA) - 737463655) ^ 0x9C38AFBA ^ ((v669 >> 19) - ((2 * (v669 >> 19)) & 0xC1049F0E) + 1619152775);
  v677 = v675 ^ (v675 >> 4) ^ (v675 >> 3) ^ 0xA3321E;
  v678 = HIBYTE(v645) ^ 0x77;
  v679 = 2 * ((v676 & v677) - ((2 * (v676 & v677)) & 0x499E95D4)) + 1235129812;
  v680 = v679 ^ 0xCB4EB4D9;
  v681 = (2 * v679) & 0xFA5FBDE4 ^ 0x6DE2D65F;
  v682 = BYTE2(v663);
  v683 = ((BYTE2(v663) ^ 0x9E | 0x2C402F8D) - (BYTE2(v663) ^ 0x9E | 0xD3BFD072) - 742403982) ^ 0x2AC06F88;
  v684 = v676 + v677;
  v685 = v684 ^ 0x7FDFBCEE;
  v686 = (2 * v684) & 0xFFBF79DC;
  v687 = ((v682 ^ 0x4F) - ((2 * (v682 ^ 0x4F)) & 0x1EA) - 1530820619) ^ 0xF4DB1597;
  v688 = BYTE1(v640);
  v689 = (v688 ^ 0x64 | 0x21F2E90E) - (v688 ^ 0x64 | 0xDE0D16F1) - 569567503;
  v690 = v686 + v685 + v680 + v681 - ((2 * (v686 + v685 + v680 + v681) + 983581708) & 0x37741A42) + 420097831;
  v691 = ((v639 & 0x66 ^ 0xEA935905) + (v639 & 0x99) - 1) ^ 0xA26FE4A3;
  v692 = *(_DWORD *)(v313 + 4 * ((v691 - ((2 * v691) & 0x49132E) - 1239053929) ^ 0xFED93420));
  v693 = v692 - ((2 * v692 + 1598575462) & 0xCBCA3E80) - 1786165005;
  v694 = (v693 >> 1) ^ 0x72F28FA0;
  v695 = (v693 ^ 0x68E86F1F ^ (v693 >> 1)) + v694 + 1;
  v696 = ((2065887739 - v692 - ((548908186 - 2 * v692) & 0x558E375C)) ^ v693 ^ 0xD66F8D6 ^ (v695
                                                                                          - ((2 * v695) & 0x8489F870)
                                                                                          - 1035666376))
       + v694;
  v697 = (v696 ^ 0xC5DDDFDA) + 975314982 + ((2 * v696) & 0x8BBBBFB4);
  v698 = *(_DWORD *)(v933 + 4 * v678) ^ *(_DWORD *)(v953
                                                    + 4
                                                    * ((((2 * v687) | 0x8C2946E6) - v687 + 971725965) ^ 0x960E31EF)) ^ v693 ^ v688 ^ ((v688 ^ 0x57) - 714736556 + ((2 * (v688 ^ 0x57) + 56) & 0x2E ^ 0x351FFBFF)) ^ (v683 - ((2 * v683) & 0x3930980A) - 593998843) ^ 0x52AB2723 ^ *(_DWORD *)(v935 + 4 * (((v689 & 0x2170EAC8 ^ 0x223C14C1) + (v689 & 0x820137) - 1) ^ 0x3CEFD35));
  v699 = (((v698 & 0x31093100 ^ 0x89E584E) - (v698 & 0x8044802)) & 0x91D1040 ^ 0x45281090)
       + (((v698 & 0x31093100 ^ 0x89E584E) - (v698 & 0x8044802)) ^ 0x8A97CC4A)
       - ((((v698 & 0x31093100 ^ 0x89E584E) - (v698 & 0x8044802)) ^ 0x8A97CC4A) & 0x90D9000);
  v700 = ((v698 & 0xC6F286FD ^ 0x4A28278)
        + (v698 & 0x22082ED ^ 0xB0D4887)
        - ((v698 & 0xC6F286FD ^ 0x4A28278) & 0x22082ED)) ^ 0x894E42FF;
  v701 = v699 ^ ((v697 >> 3) - ((v697 >> 2) & 0x1BE8469A) - 1913380019) ^ (((2 * v700) | 0x4FA303A6) - v700 + 1479441965);
  v702 = 2 * HIWORD(v690);
  v703 = v702 & 0x1AE ^ 0x182;
  v704 = (BYTE1(v701) ^ 0x80825AC2 | 0xD735EEE7) - (BYTE1(v701) ^ 0x80825AC2 | 0x28CA1118) + 684331288;
  v705 = (v702 ^ 0x83D2) - ((2 * (v702 ^ 0x83D2)) & 0x130) + 665;
  LOWORD(v702) = (BYTE2(v690) ^ 3) - ((2 * BYTE2(v690)) & 0x18) - 30196;
  v706 = (BYTE2(v690) ^ 0xEFD7FF3E) + v703 + (v705 & 0x1DC ^ 0x1889403D) + ((2 * v705) & 0x2B0 ^ 0xFFFFFFCF);
  v707 = *(_DWORD *)(v313 + 4 * (v655 ^ 0x35u));
  v708 = v707 - ((2 * v707 + 1598575462) & 0xF6896ABE) + 719904530;
  HIDWORD(v669) = v708 ^ 0xB55F;
  LODWORD(v669) = v708 ^ 0x7B440000;
  v709 = ((((v708 << 15) ^ 0x5AAF8000) - ((2 * ((v708 << 15) ^ 0x5AAF8000)) & 0x3F900000) + 533209110) & 0xFFFF0000 ^ 0x1312D7CF)
       - 1;
  v710 = ((v709 & 0x854E0000 ^ 0x84402CA1 | v709 & 0x7AB10000) - 1) ^ 0x889A2CA0 | (v708 >> 17) ^ 0x3DA2;
  v711 = (v710 - ((2 * v710) & 0x2E1172EC) + 386447734) ^ ((v669 >> 16) - ((2 * (v669 >> 16)) & 0xCCBC83EC) + 1717453302);
  HIDWORD(v669) = v711 ^ 0xF38;
  LODWORD(v669) = v711 ^ 0xE6D80000;
  v712 = v708 ^ (((v669 >> 16) - ((2 * (v669 >> 16)) & 0xF125590) + 126429896) >> 3);
  v713 = *(_DWORD *)(v953 + 4 * (((v702 & 0x33D ^ 0x63825431) + (v702 & 0xC2 ^ 0x102041) - 1) ^ 0x6392760Fu)) ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v666) ^ 0xAB)) ^ *(_DWORD *)(v935 + 4 * (((BYTE1(v701) ^ 0x894825E7) + ((v701 >> 8) & 0x34 ^ 0x26250A10) - ((BYTE1(v701) ^ 0x894825E7) & 0x80434)) ^ 0xAF652BDC)) ^ v704 ^ ((v704 ^ 0x57B7B4E2) - ((2 * (v704 ^ 0x57B7B4E2) + 1609196664) & 0x77F1DD5C) - 1410457366) ^ 0xF9EA5C0D ^ (v706 + 1 - 2 * ((v706 + 361998195) & 0xABE2477 ^ (v706 + 1) & 1) + 1079102440);
  v714 = ((2 * (v712 & 1)) ^ 2) & 0xFFFFFFFE | v712 & 1;
  v120 = (v713 & (v714 - 1)) == ((2 * (v713 & (v714 - 1))) & 0x46592286);
  v715 = (BYTE2(v666) ^ 0xF3) + (HIWORD(v666) & 0xF ^ 0xAC9EC70C) - ((BYTE2(v666) ^ 0xF3) & 0xF);
  v716 = (((2 * (BYTE1(v690) ^ 0xDE)) | 0x321EFF00) - (BYTE1(v690) ^ 0xDE) - 420446080) ^ 0x19271F81;
  v717 = ((2 * v716) & 0x4FCADF46) - v716 + 404394076;
  v718 = *(_DWORD *)(v313
                   + 4
                   * ((((2 * (v701 ^ 0x8F)) | 0xF0BC8640) - (v701 ^ 0x8F) - 2019443488) ^ 0x785E4329));
  v719 = v718 - ((2 * v718 + 1598575462) & 0xED56CA26) + 642748102;
  v720 = *(_DWORD *)(v953 + 4 * (((v715 & 0x7D56 ^ 0x1A402441) + (v715 & 0x2A9) - 1) ^ 0x1A4063AE)) ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v655) ^ 0x45)) ^ *(_DWORD *)(v935 + 4 * (((BYTE1(v690) ^ 0x805A265A | 0x78ABA19E) - (BYTE1(v690) ^ 0x805A265A | 0x87545E61) - 2024513951) ^ 0xF8F18753)) ^ v719 ^ (v719 >> 3) ^ (v719 >> 4) ^ ((BYTE2(v666) ^ 0x3F) + (HIWORD(v666) & 0x9C ^ 0xFF93C980) - ((BYTE2(v666) ^ 0x3F) & 0x9C)) & 0xC1028FFF ^ v717 ^ ((v717 ^ 0x1832F0DC) - ((2 * (v717 ^ 0x1832F0DC) - 538286984) & 0x8FC011EC) + 936721202);
  v721 = ((2 * (BYTE1(v655) ^ 0x98DA58FD)) & 0x303021FA) - (BYTE1(v655) ^ 0x98DA58FD) + 130174210;
  v722 = (v721 & 0x90100543 ^ 0xA8855002) + (v721 & 0x10802BC ^ 0x28029D) - 1;
  v723 = v714 + 1957314463;
  v724 = 1957314465 - v714;
  if (v120)
    v724 = v723;
  v725 = (v713 - 1957314464 + v724 - ((2 * (v713 - 1957314464 + v724)) & 0x622A7D6) - 2096016405) ^ ((v712 & 0xFFFFFFFE ^ 0x24A18BC9) - 1);
  v726 = *(_DWORD *)(v313 + 4 * (v666 ^ 0x33u));
  v727 = v726 - ((2 * v726 + 524833638) & 0x1F546036) - 1085384242;
  HIDWORD(v728) = v727 ^ 0x2A301B;
  LODWORD(v728) = v727 ^ 0xF800000;
  v729 = ((((v727 << 9) ^ 0x54603600) + 1169475615 - ((2 * ((v727 << 9) ^ 0x54603600)) & 0x8B699400) + 892) & 0xFFFFFC00 | (v727 >> 23)) ^ 0x45B4C81F;
  v730 = (v729 - ((2 * v729) & 0xBF19ABCC) - 544418330) ^ ((v728 >> 22) - ((2 * (v728 >> 22)) & 0xE90EC556) - 192453973);
  HIDWORD(v728) = v730 ^ 0xCD;
  LODWORD(v728) = v730 ^ 0x14E84800;
  v731 = (v728 >> 10) + 573190144 - ((2 * (v728 >> 10)) & 0x44546030) + 24;
  HIDWORD(v728) = v731 ^ 0x18;
  LODWORD(v728) = v731 ^ 0x222A3000;
  v732 = (v728 >> 8) - ((2 * (v728 >> 8)) & 0x400C7CB6) - 1610203557;
  HIDWORD(v728) = v732 ^ 0x8C3E9C;
  LODWORD(v728) = v732 ^ 0xA1000000;
  v733 = HIBYTE(v701) ^ 0x37;
  v734 = (BYTE1(v666) ^ 0xCB | 0xB522CB6) - (BYTE1(v666) ^ 0xCB | 0x4ADD349) + 78500681;
  v735 = *(_DWORD *)(v935
                   + 4
                   * (((BYTE1(v655) ^ 0x4800E101) - ((2 * (BYTE1(v655) ^ 0x4800E101)) & 0x80018068) - 149893068) ^ 0xBF1031FE)) ^ *(_DWORD *)(v953 + 4 * (((BYTE2(v701) ^ 0xB5) + (HIWORD(v701) & 0xB2 ^ 0x402) - ((BYTE2(v701) ^ 0xB5) & 0xB2)) ^ 0x4AE)) ^ v727 ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v690) ^ 0x41)) ^ (((v728 >> 24) - ((2 * (v728 >> 24)) & 0x570BC6CE) + 730194791) >> 3) ^ v722 ^ ((v722 ^ 0x39B55762) - ((2 * (v722 ^ 0x39B55762) + 267019384) & 0x8B85994) - 195993850) ^ (((2 * (BYTE2(v701) ^ 9)) & 0x172) - (BYTE2(v701) ^ 9) + 258401094) & 0xB043FFF;
  HIDWORD(v728) = v734 ^ *(_DWORD *)(v935 + 4 * ((((v666 >> 8) & 0xBE ^ 0x803) + ((v666 >> 8) & 0x41) - 1) ^ 0x8AF)) ^ ((v734 ^ 0xB522C18) - ((2 * (v734 ^ 0xB522C18) + 1609196664) & 0x49ABC6C2) - 1798629987) ^ 0x41E2598;
  LODWORD(v728) = v734 ^ *(_DWORD *)(v935 + 4 * ((((v666 >> 8) & 0xBE ^ 0x803) + ((v666 >> 8) & 0x41) - 1) ^ 0x8AF)) ^ ((v734 ^ 0xB522C18) - ((2 * (v734 ^ 0xB522C18) + 1609196664) & 0x49ABC6C2) - 1798629987);
  v736 = v728 >> 29;
  v737 = (((v690 >> 4) & 5) + 1612718095 + ((v690 >> 4) & 0xA ^ 0xC9214E9)) ^ 0x6CB234F2;
  v738 = v737 | (((v690 << 28) ^ 0x40000000) - 2114173549) ^ 0x81FC4593;
  v739 = v738 - 2 * (v738 & 0x1000019F ^ v737 & 0x10) - 1865515121;
  HIDWORD(v728) = v739 ^ 0x5023F12;
  LODWORD(v728) = v739 ^ 0xAAAAAAAA;
  v740 = (v720 ^ 0xC32B0B3A) + 1095247899;
  v741 = *(_DWORD *)(v313
                   + 4
                   * (((v728 >> 28) - ((2 * (v728 >> 28)) & 0xE699D36A) - 213063243) ^ 0xAF88E040));
  v742 = v741 - ((2 * v741 + 1598575462) & 0x65794346) + 1650510678;
  HIDWORD(v728) = v736 ^ 3;
  LODWORD(v728) = (v736 - ((2 * v736) & 0xE65B3780) + 1932368832) ^ 0x7834F458;
  v743 = ((2 * v720) ^ 0x86561674) - ((2 * ((2 * v720) ^ 0x86561674)) & 0xC6CA17C8) - 479917084;
  v744 = ((2 * v740) & 0xDF87FBFC)
       + (v740 ^ 0xEFC3FDFE)
       + (v743 & 0x82905036 ^ 0xC60014E5)
       + ((2 * v743) & 0x520806C ^ 0xFBFFFFB7);
  v745 = v744 - ((2 * v744 + 410507908) & 0x53A5D024) + 1980683604;
  v746 = *(_DWORD *)(v953
                   + 4 * (((BYTE2(v655) ^ 0x27) - 1513249360 - ((2 * (BYTE2(v655) ^ 0x27)) & 0x172) + 9) ^ 0xA5CDA5B0)) ^ *(_DWORD *)(v933 + 4 * v733) ^ v742 ^ (v742 >> 3) ^ (v742 >> 4) ^ BYTE2(v655) ^ ((v728 >> 3) - ((2 * (v728 >> 3)) & 0xD975662A) + 1824174869);
  v747 = (v746 ^ 0xCECF83FF) + ((2 * v746) & 0x196);
  v748 = ((v747 + 825261109) & 0x7FFFFFFF ^ 0xDEFBD77E) + ((2 * (v747 + 825261109)) & 0xBDF7AEFC);
  v749 = ((2 * (BYTE1(v735) ^ 0xAC)) | 0x4BF84E54) - (BYTE1(v735) ^ 0xAC) + 1510201558;
  v750 = (HIWORD(v725) & 0x61 ^ 0xC2510121) + (HIWORD(v725) & 0x9E ^ 0x1D) - 1;
  v751 = ((BYTE1(v735) ^ 0xC8) - ((2 * (BYTE1(v735) ^ 0xC8)) & 0xF8) - 1035054468) ^ 0xC64AE21E;
  v752 = *(_DWORD *)(v313
                   + 4
                   * ((v748 - v747 + v748 - ((2 * (v748 - v747 + v748) + 565160350) & 0x6D2BEA78) + 1198377483) ^ 0x3695F51A));
  v753 = v752 - ((2 * v752 + 1598575462) & 0x5E24DF60) - 558458525;
  v754 = ((HIWORD(v735) & 0xC6 ^ 0xE998BA03) + (HIWORD(v735) & 0x39) - 1) ^ 0xCAB0CCE6;
  v755 = (v754 | 0x13ED3642) - (v754 | 0xEC12C9BD) - 334313027;
  v756 = *(_DWORD *)(v953
                   + 4
                   * (((BYTE2(v725) ^ 0x9A89) + (BYTE2(v725) & 0xF8 ^ 0x70) - ((BYTE2(v725) ^ 0x9A89) & 0xF8)) & 0x3FF ^ 0x2B4u)) ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v745) ^ 0xA)) ^ *(_DWORD *)(v935 + 4 * ((v751 - ((2 * v751) & 0x8094628) - 951196908) ^ 0xC3495348)) ^ v753 ^ (v753 >> 3) ^ (v753 >> 4) ^ v749 & 0x7FFFFFFF ^ ((v749 & 0x7FFFFFFF ^ 0x25FC27B8) - 2 * (((v749 & 0x7FFFFFFF ^ 0x25FC27B8) + 804598332) & 0x2A05335F ^ v749 & 2) + 435873177) ^ ((v750 & 0x42100022 ^ 0x1000A002) + (v750 ^ 0xCE7F4161) - ((v750 ^ 0xCE7F4161) & 0x260022));
  v757 = v755 ^ ((v755 ^ 0xCF3ABFFF) - ((2 * (v755 ^ 0xCF3ABFFF) + 2) & 0x21299E0) + 17386737) ^ ((v755 ^ 0x52CE5811)
                                                                                                - ((2 * (v755 ^ 0x52CE5811)
                                                                                                  + 1005178846) & 0xE78A1168)
                                                                                                - 1850085213) ^ 0xC2090444;
  v758 = v757 - ((2 * v757 + 1005178844) & 0xD06F25F4) - 2043905304;
  v759 = ((v746 >> 8) & 0x83) + 402687231 + ((v746 >> 8) & 0x7C ^ 0x2111005);
  v760 = *(_DWORD *)(v313
                   + 4
                   * (((v745 ^ 0xCB) + (v745 & 0x9D ^ 0x1114) - ((v745 ^ 0xCB) & 0x9D)) ^ 0x1162));
  v761 = v760 - ((2 * v760 + 1598575462) & 0xC56FFB16) - 1839454402;
  v762 = ((BYTE1(v745) ^ 0x27) - ((2 * (BYTE1(v745) ^ 0x27)) & 0xEC) + 934473590) ^ 0x7BBE6FF3;
  v763 = *(_DWORD *)(v933 + 4 * (HIBYTE(v725) ^ 0xB8)) ^ *(_DWORD *)(v953
                                                                     + 4
                                                                     * ((((2 * (BYTE2(v735) ^ 0xBA3A6C7F)) | 0x158E0524)
                                                                       - (BYTE2(v735) ^ 0xBA3A6C7F)
                                                                       - 180814482) ^ 0xB0FD6ED3)) ^ *(_DWORD *)(v935 + 4 * ((((2 * (BYTE1(v746) ^ 0xFE)) & 0x3A) - (BYTE1(v746) ^ 0xFE) + 1506) ^ 0x5E2u)) ^ v761 ^ (v761 >> 3) ^ (v761 >> 4) ^ v759 ^ ((v759 ^ 0x1A119532) - ((2 * (v759 ^ 0x1A119532) + 535454840) & 0x1BEA4EFC) + 234135994) ^ v758;
  v764 = ((HIWORD(v746) & 0xF9 ^ 0x9F0D7DB9) + (HIWORD(v746) & 6 ^ 5) - 1) ^ 0x8D054579;
  v765 = (((2 * v764) & 0x400741C) - v764 + 1490649585) ^ 0x4AD1B92D;
  v766 = ((BYTE1(v745) ^ 0x91) + ((v745 >> 8) & 0xED ^ 0x2899036C) - ((BYTE1(v745) ^ 0x91) & 0xED)) ^ 0x49DF8ECC;
  v767 = (v725 ^ 0x87) - ((2 * (v725 ^ 0x87)) & 0x1A6) - 1124321581;
  v768 = *(_DWORD *)(v313
                   + 4
                   * (((v767 & 0xA08007EB ^ 0x4300C368) + (v767 ^ 0xACE63493) - ((v767 ^ 0xACE63493) & 0x803EB)) ^ 0xF392C5A6));
  v769 = (((2 * v766) | 0xAB639896) - v766 + 709768117) ^ 0xB4F741DB;
  v770 = v768 - ((2 * v768 + 1598575462) & 0xB9D6F3B6) - 1936743538;
  v771 = BYTE2(v745);
  v772 = ((2 * (BYTE2(v745) ^ 0x200008C2)) | 0x15E71E7A) - (BYTE2(v745) ^ 0x200008C2) + 1963749571;
  v773 = (v771 ^ 0x3A | 0xAE184F) - (v771 ^ 0x3A | 0xFF51E7B0) - 11409488;
  v774 = (((v773 & 0xA61191 ^ 0x25113110) + (v773 ^ 0x98AE088F) - ((v773 ^ 0x98AE088F) & 0x18001191)) ^ 0x5A48DEDE) + 1;
  v775 = (v772 ^ 0xAAF3872D) + (v774 ^ 0x71BDB6EA) + ((2 * v774) & 0xE37B6DD4) - 1908258538;
  v776 = v775 - ((2 * v775) & 0x13E68080) + 166936640;
  v777 = BYTE1(v725);
  v778 = (v777 ^ 0x38 | 0xF5C03332) - (v777 ^ 0x38 | 0xA3FCCCD) + 171953357;
  v779 = (v778 & 0xA1800570 ^ 0x280C441) + (v778 & 0x5440328F) - 1;
  v780 = *(_DWORD *)(v953 + 4 * v765) ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v735) ^ 0x3A)) ^ *(_DWORD *)(v935 + 4 * v769) ^ v770 ^ (v770 >> 3) ^ (v770 >> 4) ^ ((HIWORD(v746) & 0xEC ^ 0x10E1334D) + (HIWORD(v746) & 0x13) - 1) ^ ((v762 | 0x15D511BD) - (v762 | 0xEA2AEE42) - 366285246) ^ ((((v762 | 0x15D511BD) - (v762 | 0xEA2AEE42) - 366285246) ^ 0x59D991F7) - ((2 * (((v762 | 0x15D511BD) - (v762 | 0xEA2AEE42) - 366285246) ^ 0x59D991F7) - 538286984) & 0xC2A4CCEA) - 783837007);
  v781 = (((2 * (v777 ^ 0x27)) | 0x8E47A7F2) - (v777 ^ 0x27) + 953953287) ^ 0x462252E9;
  v782 = *(_DWORD *)(v313
                   + 4
                   * (((v735 ^ 0x2E) + (v735 & 0xD7 ^ 0x17D1) - ((v735 ^ 0x2E) & 0xD7)) ^ 0x1778));
  v783 = v782 - ((2 * v782 + 1598575462) & 0xA282657A) - 2132452240;
  v784 = *(_DWORD *)(v953 + 4 * ((v776 ^ 0xF60CBFB0) + (v772 ^ 0xAAF3872D))) ^ *(_DWORD *)(v933
                                                                                           + 4 * (HIBYTE(v746) ^ 0xFB)) ^ v783 ^ *(_DWORD *)(v935 + 4 * ((((2 * v781) | 0xC274E864) - v781 - 1631220786) ^ 0xE03BF5F2)) ^ (v783 >> 3) ^ (v783 >> 4) ^ v772 ^ v779 ^ ((v779 ^ 0xF740F775) - ((2 * (v779 ^ 0xF740F775) + 535454840) & 0x3C073008) - 1913075136);
  v950 = v756;
  v785 = HIWORD(v756);
  v786 = (BYTE2(v756) ^ 0x3F) + (HIWORD(v756) & 0x94 ^ 0x7F040880) - ((BYTE2(v756) ^ 0x3F) & 0x94);
  v787 = ((v786 & 0xEC0 ^ 0x186EA041) + (v786 & 0x13F) - 1) ^ *(_DWORD *)(v953 + 4 * (BYTE2(v756) ^ 0x5Cu));
  v788 = v763;
  v789 = (BYTE1(v763) ^ 0xE6) + ((v763 >> 8) & 0x65 ^ 0x5813EA01) - ((BYTE1(v763) ^ 0xE6) & 0x65);
  HIDWORD(v728) = v787 ^ 2;
  LODWORD(v728) = v787 ^ 0x6B860224;
  v790 = (v728 >> 2) - ((2 * (v728 >> 2)) & 0x4B65EDB0) - 1514998056;
  v791 = *(_DWORD *)(v933 + 4 * (HIBYTE(v784) ^ 0xA0));
  HIDWORD(v728) = v791 ^ 2;
  LODWORD(v728) = v791 ^ 0x9BFDA8C0;
  v792 = v790 ^ ((v728 >> 2) - ((2 * (v728 >> 2)) & 0xEA2C4CAA) - 183097771);
  HIDWORD(v728) = v792 ^ 0x6BE1E83;
  LODWORD(v728) = v792 ^ 0x80000000;
  v793 = ((2 * (v728 >> 30)) & 0xFE98EBFA) + ((v728 >> 30) ^ 0x7F4C75FD);
  v794 = 2 * v793 - ((4 * v793 + 47065100) & 0x18D882C8) + 231953771;
  v795 = v789 ^ 0x5813EA83;
  v796 = v793 + (v794 & 0xB0D67076 ^ 0xA02E4847) + ((2 * v794) & 0x2128E0A8 ^ 0xFFF77F77) + 1;
  v797 = (((((16 * v789) & 0x134B7F0 ^ 0x134A4B0)
          + ((8 * v789) ^ 0xFB6589A7)
          - ((2 * (((16 * v789) & 0x134B7F0 ^ 0x134A4B0) + ((8 * v789) ^ 0xFB6589A7)) + 123562952) & 0x4ABFF256)
          - 384913645) ^ (((8 * v789) ^ 0xC09F5258) - ((2 * ((8 * v789) ^ 0xC09F5258)) & 0x4D1815B0) - 1500771618)) >> 3) ^ 0x607A7E7E;
  v798 = *(_DWORD *)(v313
                   + 4
                   * ((((v780 ^ 0x20000002) & 0x92)
                     + (v780 ^ 0xFFFFFF99)
                     + (v780 ^ 2 | 0x3AD8B06D)
                     + 1) ^ 0x3AD8B054));
  v799 = v798 - ((2 * v798 + 1598575462) & 0x5BED9248) - 577047849;
  v800 = (v797 - ((2 * v797) & 0x3A1EF3DC) + 487553518) ^ *(_DWORD *)(v935 + 4 * v795) ^ (v796
                                                                                          - ((2 * v796 + 1902736438) & 0x664604B8)
                                                                                          + 1809300599);
  v801 = v800 ^ 0x64D6BCA0;
  v802 = (v799 ^ 0xB6DF8A7B ^ v800) + (v800 ^ 0x64D6BCA0) + 1;
  v803 = ((((v799 ^ 0x2DF6C924u) >> (v938 & 1)) - ((2 * ((v799 ^ 0x2DF6C924u) >> (v938 & 1))) & 0xF56BFE20) + 2058747664) ^ 0x7AB5FF10) >> !(v938 & 1);
  v804 = ((1482356244 - v798 - ((12037274 - 2 * v798) & 0xFFE3F8E)) ^ v799 ^ 0xE222EDB0 ^ (v802
                                                                                         - ((2 * v802) & 0x905676A6)
                                                                                         - 936690861))
       + v801;
  v805 = (v804 - ((2 * v804) & 0xC74AAB78) + 1671779772) ^ (((v803 - ((2 * v803) & 0xD9013570) + 1820367544) ^ v799) >> 3);
  v806 = ((v805 >> 7) & 0x1BE ^ 0x128) + (BYTE1(v805) ^ 0xFEFFDF6B);
  v807 = (BYTE1(v805) & 2 ^ 0x3FBF763F) + 2 * (BYTE1(v805) & 2);
  v808 = ((((v780 ^ 0x5FA81879) >> (v785 & 0x10))
         - ((2 * ((v780 ^ 0x5FA81879) >> (v785 & 0x10))) & 0x30B49B56)
         - 1738912341) ^ 0x985A4DAB) >> (v785 & 0x10 ^ 0x10);
  v809 = v808 - ((2 * v808) & 0x6FAB587E) - 1210733505;
  v810 = ((HIWORD(v788) & 0xA3 ^ 0xBBE8EF81) + (HIWORD(v788) & 0x5C ^ 0x4D) - 1) ^ 0xDFF6AFF1;
  v811 = ((2 * v810) & 0x83C9C38) - v810 + 1774293475;
  v812 = (((2 * (((unsigned __int16)(v780 ^ 2) >> 8) ^ 0x8A)) | 0x87CF9F66)
        - (((unsigned __int16)(v780 ^ 2) >> 8) ^ 0x8A)
        + 1008218189) ^ 0x387EEB3;
  v813 = ((2 * v812) & 0xEDD7F02A) - v812 - 1995175958;
  BYTE2(v810) = BYTE2(v784) ^ 2;
  v814 = ((v784 ^ 0x19) - ((2 * (v784 ^ 0x19)) & 0xFFFFFFE7) - 386797581) ^ 0xEAB9EB47;
  v815 = *(_DWORD *)(v934 + 4 * ((((2 * v814) & 0x1056D6) - v814 - 767355756) ^ 0xD00B109B));
  v816 = v815 - ((2 * v815 + 1598575462) & 0x5C63CC26) + 1574309830;
  v817 = (v816 >> 1) ^ 0x5718F309;
  v818 = (v816 ^ 0x6D6EAE5 ^ (v816 >> 1)) + v817 + 1;
  v819 = (((2 * v809) ^ 0x6FAB587E) - ((2 * ((2 * v809) ^ 0x6FAB587E)) & 0x80) + 65) & 0x130;
  v820 = ((1601658982 - v815 - ((12037274 - 2 * v815) & 0x1E371432)) ^ v816 ^ 0xC36C5C59 ^ (v818
                                                                                          - ((2 * v818) & 0xC48C60A6)
                                                                                          + 1648767059))
       + v817;
  v821 = (v820 ^ 0x686DFB7B) - 1752038267 + ((2 * v820) & 0xD0DBF6F6);
  v822 = (v821 >> 3) - ((v821 >> 2) & 0x1009DFCC) - 1476071450;
  v823 = ((unsigned __int16)(v784 ^ 0x3802) >> 8);
  v824 = ((v784 >> 7) & 0x8E ^ 0x80) + (v823 ^ 0x377BCF27);
  LOWORD(v823) = ((8 * ((v823 ^ 0xEA) >> 2)) | 0xE403) - (v823 ^ 0xEA);
  v825 = (((v823 & 0x34B ^ 0xAC40F348) + (v823 & 0x4B4 ^ 0x10000481) - 1) ^ 0x43BF0C76) + 1;
  v826 = (v825 ^ 0x7BF7FFF7)
       + v824
       + ((2 * v825) & 0xF7EFFFEE)
       - 2
       * (((v825 ^ 0x7BF7FFF7) + v824 + ((2 * v825) & 0xF7EFFFEE) + 9187522) & 0x1B0EC57 ^ ((v825 ^ 0x7BF7FFF7) + v824) & 1)
       + 1312627992;
  v827 = *(_DWORD *)(v953
                   + 4
                   * (((BYTE2(v788) ^ 0x63448AB4)
                     + (HIWORD(v788) & 0x56 ^ 0x14223442)
                     - ((BYTE2(v788) ^ 0x63448AB4) & 0x1008A56)) ^ 0x76663442)) ^ *(_DWORD *)(v933
                                                                                            + 4 * (HIBYTE(v950) ^ 0xA)) ^ *(_DWORD *)(v935 + 4 * (((((v780 ^ 0x20000002) >> 8) & 0x87 ^ 0xC05) + (((v780 ^ 0x20000002) >> 8) & 0x78 ^ 0x19) - 1) ^ 0xCCD)) ^ v816 ^ v811 ^ v813 ^ ((v813 ^ 0x49742678) - ((2 * (v813 ^ 0x49742678) - 538286984) & 0x9DCA5586) + 1054498047) ^ v822;
  v828 = ((v950 ^ 0xB9) + (v950 & 0xC1 ^ 0x41A53540) - ((v950 ^ 0xB9) & 0xFFFFFFC1)) ^ 0x96A57571;
  v829 = *(_DWORD *)(v934 + 4 * ((v828 - ((2 * v828) & 0x200084B6) + 805956187) ^ 0xE709AAEB));
  v830 = v824 - 930860871;
  v831 = v829 - ((2 * v829 + 1598575462) & 0x7A04359A) + 1822835840;
  v832 = (BYTE1(v950) ^ 0x40000126) - ((2 * (BYTE1(v950) ^ 0x40000126)) & 0x2D0) - 1356265624;
  v833 = *(_DWORD *)(v953
                   + 4
                   * ((((v809 ^ 0x3F) + 152) ^ 0x7551FFF7)
                    + ((2 * ((v809 ^ 0x3F) + 152)) & 0xFFFFFFEF)
                    + v819
                    - 2 * v819
                    - 1968308215)) ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v763) ^ 0xC8)) ^ *(_DWORD *)(v935
                                                                                                 + 4
                                                                                                 * ((v826 ^ 0xFE4F13A6)
                                                                                                  + v824
                                                                                                  - 930860871)) ^ v831 ^ (v831 >> 3) ^ (v831 >> 4) ^ (v824 - 304283237 + ((2 * v824 + 1514) & 0x3D4A ^ 0xB53DFFFF));
  v834 = (((v950 >> 8) & 0x55 ^ 0xC4A5F710) + ((v950 >> 8) & 0xAA ^ 0x89) - 1) ^ 0x7605F3D5;
  v835 = ((v788 ^ 0x3F | 0xF210D076) - (v788 ^ 0x3F | 0xDEF2F89) + 233779081) ^ 0xDAB1D06D;
  v836 = *(_DWORD *)(v934 + 4 * ((((2 * v835) | 0x8FD17FEA) - v835 - 1206435829) ^ 0x6F49BF37));
  v837 = v836 - ((2 * v836 + 1598575462) & 0xF4EF8DE6) + 706474150;
  v838 = (v837 ^ (v837 >> 1) ^ 0x474C258A) >> (v939 & 2 ^ 2);
  v839 = ((v838 - ((2 * v838) & 0x4D897BE2) - 1497055759) ^ 0xA6C4BDF1) >> (v939 & 2 | 1);
  v840 = *(_DWORD *)(v953
                   + 4
                   * (((BYTE2(v810) ^ 0x20830AC2) - ((2 * (BYTE2(v810) ^ 0x20830AC2)) & 0x41446) + 1097260579) ^ 0x61E5D429u)) ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v780) ^ 0xFC)) ^ *(_DWORD *)(v935 + 4 * ((((2 * v834) | 0x827DD814) - v834 - 1094642698) ^ 0xF39EE8A3)) ^ v837 ^ v832 ^ BYTE2(v810) ^ ((v832 ^ 0xEF290662) - ((2 * (v832 ^ 0xEF290662) - 538286984) & 0x95A84D24) - 1161209650) ^ (v839 - ((2 * v839) & 0x14E9B502) - 1972053375);
  v841 = ((2 * (v827 ^ 0x7E)) & 0xC4) - (v827 ^ 0x7E) - 300124771;
  v842 = (v841 & 0x40035C1 ^ 0x1800040) + (v841 ^ 0xAE2AF78F) - ((v841 ^ 0xAE2AF78F) & 0x3085C1);
  v843 = ((HIWORD(v840) & 0xC5 ^ 0x600241C5) - (HIWORD(v840) & 0xC5) + (BYTE2(v840) ^ 0x2A)) ^ 0x6940F1CC;
  v844 = ((BYTE2(v840) ^ 0xFFFFFF3C) - 446030566 + ((2 * BYTE2(v840)) | 0x352BC5CE)) ^ 0x8A11E247;
  v845 = (((2 * v843) | 0xF85E68DA) - v843 - 2083468397) ^ *(_DWORD *)(v953
                                                                     + 4
                                                                     * ((((2 * v844) & 0x80180) - v844 - 1080848577) ^ 0x2F178FE7));
  v846 = v807 - 212217876;
  if (((v806 + 1895125597) & (v807 + 1077971393)) != ((2 * ((v806 + 1895125597) & (v807 + 1077971393))) & 0x5DA83244))
    v846 = 1926806634 - v807;
  v847 = v846 + v806 - 2 * ((v846 + v806 + 1037831218) & 0x61CF582F ^ (v846 + v806) & 1) + 531326048;
  HIDWORD(v848) = v845 ^ 0x12E64;
  LODWORD(v848) = v845 ^ 0x6840000;
  v849 = (v848 >> 17) - ((2 * (v848 >> 17)) & 0x5388DCEE) - 1446744457;
  v850 = *(_DWORD *)(v933 + 4 * (HIBYTE(v833) ^ 0xED));
  HIDWORD(v848) = v850 ^ 0x1A8C2;
  LODWORD(v848) = v850 ^ 0x9BFC0000;
  v851 = v849 ^ ((v848 >> 17) - ((2 * (v848 >> 17)) & 0x6E231F02) - 1223585919);
  HIDWORD(v848) = v851 ^ 0x1324;
  LODWORD(v848) = v851 ^ 0x8D130000;
  v852 = *(_DWORD *)(v934 + 4 * (v842 ^ 0x458637A3));
  v853 = v852 - ((2 * v852 + 1598575462) & 0x975E6286) - 78423306;
  v854 = v853 ^ *(_DWORD *)(v935 + 4 * (((BYTE1(v805) ^ 3) - ((2 * (BYTE1(v805) ^ 3)) & 0x1C) + 1294) ^ 0x571u)) ^ (v853 >> 3) ^ (v853 >> 4) ^ ((v848 >> 15) - ((2 * (v848 >> 15)) & 0xB1F4C4C) - 2054183386) ^ (((2 * (BYTE1(v805) & 0xFD ^ 0xFC)) & 0x68) - (BYTE1(v805) & 0xFD ^ 0xFC) + 1604809) & 0x1007FD ^ v847;
  v855 = ((v854 >> 7) & 0x1B76DDC ^ 0x122118) + ((v854 >> 8) ^ 0xD7D2A772);
  v856 = (((2 * (v855 + 18)) & 0xDA) + ((v855 + 18) ^ 0x33FC4F6D) - 872173421) % 0xAD;
  v857 = (v830 ^ 0x15274ED ^ v833) - ((2 * (v830 ^ 0x15274ED ^ v833)) & 0xFFF0BC26) - 500205;
  v858 = (((2 * (BYTE1(v840) ^ 0x88)) & 0x1C4) - (BYTE1(v840) ^ 0x88) + 1037203741) ^ 0x2D92351D;
  v859 = ((v840 >> 8) & 0x2C ^ 0x55BD2F25) + ((v840 >> 8) & 0xD3) - 1;
  v860 = *(_DWORD *)(v934
                   + 4
                   * ((((2 * (v805 ^ 0x8584DF)) | 0x40F2D230)
                     - (v805 ^ 0x8584DF)
                     - 544827672) ^ 0x20FCED6Bu));
  v861 = v860 - ((2 * v860 + 1598575462) & 0xBBED8D72) - 1919225748;
  v862 = *(_DWORD *)(v953
                   + 4
                   * (((BYTE2(v857) ^ 0x8E | 0xA319F4E9) - (BYTE2(v857) ^ 0x8E | 0x5CE60B16) + 1558579990) ^ 0xA319F4DD)) ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v827) ^ 0xBF)) ^ *(_DWORD *)(v935 + 4 * (((v859 & 0xD95 ^ 0xC42B0091) + (v859 & 0x6A ^ 0x1444029) - 1) ^ 0xC56F4D19)) ^ v861 ^ (v861 >> 3) ^ (v861 >> 4) ^ ((v858 | 0x1BDEE470) - (v858 | 0xE4211B8F) - 467592305) ^ ((((v858 | 0x1BDEE470) - (v858 | 0xE4211B8F) - 467592305) ^ 0xB9EA8B4) - ((2 * (((v858 | 0x1BDEE470) - (v858 | 0xE4211B8F) - 467592305) ^ 0xB9EA8B4) + 535454840) & 0x30779F22) + 137429453) ^ ((BYTE2(v857) ^ 0x720A4AA | 0xA373684E) - (BYTE2(v857) ^ 0x720A4AA | 0x5C8C97B1) + 1552717745);
  v863 = ((v827 >> 8) & 0x2E ^ 0x2022212C) + (BYTE1(v827) ^ 0x1C0914D2) - ((BYTE1(v827) ^ 0x1C0914D2) & 0x1801042E);
  v864 = (((2 * (BYTE2(v805) ^ 0xDF)) & 0x144) - (BYTE2(v805) ^ 0xDF) + 377829469) ^ 0x3E8D4C5C;
  v865 = (((2 * v864) | 0x4CBD68C) - v864 + 2107249850) ^ *(_DWORD *)(v953
                                                                    + 4
                                                                    * (((BYTE2(v805) ^ 0x42005A76)
                                                                      + (HIWORD(v805) & 0xD0 ^ 0x25922480)
                                                                      - ((BYTE2(v805) ^ 0x42005A76) & 0x420052D0)) ^ 0x25922C60));
  v866 = *(_DWORD *)(v933 + 4 * (HIBYTE(v840) ^ 0xBC));
  v867 = (v866 ^ 0xBD8762F2 ^ v865) + 1;
  v865 ^= 0xD98535CF;
  v868 = v865 + (v867 ^ 0x6FBF5BF3) + ((2 * v867) & 0xDF7EB7E6) - 1874811891;
  v869 = *(_DWORD *)(v934
                   + 4
                   * ((((v830 ^ 0xED ^ v833) - ((2 * (v830 ^ 0xED ^ v833)) & 0x26) + 19) ^ v809) ^ 0xC0u));
  v870 = v869 - ((2 * v869 + 1598575462) & 0x4233C710) + 1354632507;
  v871 = (v866 ^ ((v866 ^ 0x6402573D) - ((2 * (v866 ^ 0x6402573D) + 2) & 0xC801C620) + 1677779729) ^ 0xC4A209CE ^ (v868 - ((2 * v868) & 0x76BE8438) + 996098588))
       + v865;
  v872 = v871 - ((2 * v871) & 0xEECDCEAE) + 2003232599;
  v857 >>= 8;
  v873 = (v857 & 9 ^ 0x24040201) + (v857 & 0xF6 ^ 0x81000073) - 1;
  v874 = v870 ^ *(_DWORD *)(v935 + 4 * (BYTE1(v827) ^ 0x13u)) ^ (v870 >> 3) ^ (v870 >> 4) ^ v863 ^ ((v863 ^ 0x242A3127) - ((2 * (v863 ^ 0x242A3127) - 538286984) & 0x83D8B954) - 1310617882) ^ v872;
  v875 = ((BYTE2(v827) ^ 0xE55D383B) - ((2 * (BYTE2(v827) ^ 0xE55D383B)) & 0xCAA060B0) + 1869624152) ^ 0x8921CB25;
  v876 = ((HIWORD(v827) & 0xDA ^ 0x75D4BE89) + (HIWORD(v827) & 0x25) - 1) ^ 0x44B4AECE;
  v877 = (v840 ^ 5) - 2 * ((v840 ^ 5) & 3) + 194672131;
  v878 = *(_DWORD *)(v934
                   + 4
                   * (((v877 & 0x801603) + (v877 ^ 0x23BEB603) - ((v877 ^ 0x23BEB603) & 0x204203) - 738131968) ^ 0xFC85962A));
  v879 = v878 - ((2 * v878 + 1598575462) & 0xDCF85290) + 505434875;
  v880 = *(_DWORD *)(v953 + 4 * ((v876 - ((2 * v876) & 0x22402090) + 430135624) ^ 0x28C34990u)) ^ *(_DWORD *)(v935 + 4 * (((v857 & 0x47 ^ 0xF9A2243) + (v857 & 0xB8 ^ 0x11) - 1) ^ 0xF9A22DA)) ^ v879 ^ *(_DWORD *)(v933 + 4 * (HIBYTE(v805) ^ 0x33)) ^ (v879 >> 3) ^ (v879 >> 4) ^ ((v873 ^ 0xA5040232) - ((2 * (v873 ^ 0xA5040232) + 1609196664) & 0x61F8731A) + 552692681) ^ (((2 * v875) & 0x522E) - v875 - 536885528);
  v881 = *(_DWORD *)&v941[4 * (HIBYTE(v862) ^ 0xCF)];
  v882 = (((2 * ((v881 >> 1) & 0x26BAF572 ^ 0x26900172)) | 0x1F962354)
        - ((v881 >> 1) & 0x26BAF572 ^ 0x26900172)
        - 264966570) ^ 0x465A3106;
  v883 = *(_DWORD *)&v946[4 * (BYTE2(v854) ^ 0x11)];
  v884 = v880 ^ v873;
  v885 = ((2 * ((v880 ^ v873) ^ 0x42001005)) | 0x7B561086)
       - ((v880 ^ v873) ^ 0x42001005)
       - 1034618947;
  v886 = (((2 * ((v880 ^ v873) ^ 0xE59DB35A)) & 0xCB0926D6)
        - ((v880 ^ v873) ^ 0xE59DB35A)
        - 2112135020) ^ 0xE3C4E74F;
  v887 = (((2 * v886) & 0x756434D2) - v886 - 985012842) ^ 0x410BD125;
  v888 = *(_DWORD *)&v944[4 * (BYTE1(v874) ^ 0x24)];
  HIDWORD(v848) = v888 ^ 0x340;
  LODWORD(v848) = v888 ^ 0x99093000;
  v889 = *(_DWORD *)&v941[4 * (HIBYTE(v854) ^ 0xA7)];
  v890 = (v848 >> 11) - ((2 * (v848 >> 11)) & 0x59F19706) - 1392981117;
  v891 = (((2 * ((v889 >> 1) & 0x26BAF572 ^ 0x2323100)) & 0x44016884)
        - ((v889 >> 1) & 0x26BAF572 ^ 0x2323100)
        + 1174029240) ^ 0x88AB4BA0;
  v892 = *(_DWORD *)&v946[4 * ((((2 * (BYTE2(v874) ^ 0xE3)) & 0x2A) - (BYTE2(v874) ^ 0xE3) + 6378) ^ 0x1872)];
  v893 = *(_DWORD *)&v944[4 * (BYTE1(v880) ^ 0xA3)];
  HIDWORD(v848) = v893 ^ 0x340;
  LODWORD(v848) = v893 ^ 0x99093000;
  v894 = (((2 * (v862 ^ 0xE)) | 0x112FC2AE) - (v862 ^ 0xE) + 2003312297) ^ 0x1197B747;
  v895 = v889 ^ *(_DWORD *)&v940[4 * (((v894 | 0xD73BF23C) - (v894 | 0x28C40DC3) + 683937219) ^ 0x4E3BA41F)] ^ ((v848 >> 11) - ((2 * (v848 >> 11)) & 0x1886E208) - 1941737212) ^ ((v891 | 0xD0A6FD73) - (v891 | 0x2F59028C) + 794362508) ^ ((v862 & 0x73 ^ 0x16862171) + (v862 & 0x8C ^ 0x40000285) - 1) ^ (v892 - ((2 * v892 + 473608014) & 0x73767C4C) - 2015849011);
  v896 = ((BYTE1(v862) ^ 0xD3AE0423) + ((v862 >> 8) & 0x5D ^ 0x2400AB5C) - ((BYTE1(v862) ^ 0xD3AE0423) & 0x810E045D)) ^ 0x7B89A33;
  v897 = *(_DWORD *)&v941[4 * (HIBYTE(v874) ^ 0xCB)];
  v898 = HIBYTE(v884) ^ 0x65;
  v899 = *(_DWORD *)&v946[4 * (BYTE2(v884) ^ 0x40)];
  v900 = *(_DWORD *)&v944[4 * ((((2 * v896) & 0x202AA8) - v896 + 1999628971) ^ 0x637DBA6)];
  HIDWORD(v848) = v900 ^ 0x340;
  LODWORD(v848) = v900 ^ 0x99093000;
  v901 = ((2 * v856) & 0x1F4)
       + (v856 ^ 0x9DCDBFFA)
       + ((2 * (v855 + (v856 ^ 0xFFFFFF99) - ((2 * v856) & 0xCC) + 121)) & 0xBE)
       + ((v855 + (v856 ^ 0x99) - ((2 * v856) & 0xCC) + 121) ^ 0x5EEFFE5F);
  v902 = *(_DWORD *)&v941[4 * v898];
  v903 = *(_DWORD *)&v946[4 * ((((2 * (BYTE2(v862) ^ 0x1D)) & 0xBC) - (BYTE2(v862) ^ 0x1D) + 10145) ^ 0x2717)];
  v904 = *(_DWORD *)&v944[4 * ((v901 - ((2 * v901 + 109347662) & 0x6A408C24) - 1201502279) ^ 0xB520461A)];
  v905 = v897 ^ *(_DWORD *)&v940[4
                               * (((v854 ^ 0x4A884EE | 0x6612409D)
                                 - (v854 ^ 0x4A884EE | 0x99EDBF62)
                                 - 1712472222) ^ 0x62BAC48C)] ^ (((v897 >> 1) & 0x26BAF572 ^ 0x7C00A11F)
                                                               - ((2 * ((v897 >> 1) & 0x26BAF572 ^ 0x7C00A11F)) & 0x89308096)
                                                               - 979812149) ^ (v899
                                                                             - ((2 * v899 - 1673875634) & 0xE7364BE2)
                                                                             - 1044873832) ^ ((v854 ^ 0x57 | 0xCFB84634)
                                                                                            - (v854 ^ 0x57 | 0x3047B9CB)
                                                                                            + 810006987) ^ ((v848 >> 11) - ((2 * (v848 >> 11)) & 0xBEEEA726) - 545827949) ^ 0xEBC30E6B;
  v906 = ((v874 ^ 0x87 | 0x1E2F6563) - (v874 ^ 0x87 | 0xE1D09A9C) - 506422628) ^ 0x1EACF569;
  HIDWORD(v848) = v904 ^ 0x340;
  LODWORD(v848) = v904 ^ 0x99093000;
  v907 = ((v874 & 0x27 ^ 0xE40E1D27) - (v874 & 0x27) + (v874 ^ 0x48)) ^ 0x660ECD27;
  v908 = *(_DWORD *)&v940[4 * ((v907 - ((2 * v907) & 0x4010734) + 1001696154) ^ 0xB9B47B65)] ^ v902 ^ (v903 - ((2 * v903 + 473608014) & 0x18C7373C) + 1518400325) ^ (((2 * ((v902 >> 1) & 0x26BAF572 ^ 0x2B82400)) | 0x30E4CE9A) - ((v902 >> 1) & 0x26BAF572 ^ 0x2B82400) + 1737332915) & 0xFFFFFFFE ^ ((v906 | 0x43568CEF) - (v906 | 0xBCA97310) - 1129745648) ^ ((v848 >> 11) - ((2 * (v848 >> 11)) & 0x74746ADC) - 1170590354);
  v909 = v895 ^ 0x214B0D26 ^ v905;
  v910 = v909 ^ 0x13D0C629 ^ v908;
  v911 = v908 ^ 0x88B2FA88;
  v912 = v909 ^ v881 ^ *(_DWORD *)&v940[4 * v887] ^ (v883 - ((2 * v883 - 1673875634) & 0x82B9A642) + 259664584) ^ v890 ^ (v882 - ((2 * v882) & 0xA5E54C0) + 86977121) ^ v885 ^ v948;
  v913 = v912 ^ 0x14A0718A;
  v914 = v910 ^ v948;
  v915 = v911 ^ v912 ^ 0x14A0718A ^ v910;
  v916 = v912 ^ v905;
  v917 = *(_DWORD *)(v4 - 124);
  v918 = (char *)*(&off_10112C750 + v917 - 29972) - 1748174047;
  v919 = v918[((((HIWORD(v913) & 0x60) + (BYTE2(v913) ^ 0xE7)) | 0x400) - ((BYTE2(v913) ^ 0xE7) & 0x60)) ^ 0x4D0];
  v120 = ((HIWORD(v913) & 0x20 ^ 0x20) & v919) == 0;
  v920 = (v919 ^ 0xDB) + (BYTE2(v913) & 0x20);
  v921 = (2 * (HIWORD(v913) & 0x20)) ^ 0x40;
  if (!v120)
    LOBYTE(v921) = 0;
  v922 = (BYTE2(v913) & 0xC9 ^ 0x41) + (BYTE2(v913) & 0x16 ^ 3) - 1;
  v923 = *(_BYTE **)(v4 - 120);
  v923[7] = ((v922 ^ 0xE0) - (v922 & 0x11) + (v922 & 0x11 ^ 0x11)) ^ 0xA0 ^ (v920
                                                                           + v921
                                                                           - 32
                                                                           + (~(2 * (v920 + v921 - 32)) | 0xE1)
                                                                           + 16);
  v924 = (char *)*(&off_10112C750 + (v917 ^ 0x65AA)) - 1293428959;
  v925 = v916 ^ v911;
  v923[12] = v924[v913 ^ 0x2ALL] ^ v913 ^ 0x31;
  v926 = (char *)*(&off_10112C750 + (v917 ^ 0x7E34)) - 264270631;
  v923[2] = v926[HIBYTE(v913) ^ 0x5CLL] ^ HIBYTE(v913) ^ 0x7C;
  v923[1] = v918[BYTE2(v914) ^ 0x12] ^ BYTE2(v914) ^ 0xA3;
  v923[10] = v924[((v925 ^ 0x40220408)
                 + (v925 & 0x8D ^ 0x1D4D8985)
                 - ((v925 ^ 0x40220408) & 0x48D)) ^ 0x5D6F8988] ^ v925 ^ 0x16;
  v927 = (char *)*(&off_10112C750 + (v917 ^ 0x794E)) - 296536195;
  v923[11] = v927[BYTE1(v925) ^ 0x11] ^ BYTE1(v925) ^ 0xFB;
  v923[13] = v926[HIBYTE(v915) ^ 0x57] ^ HIBYTE(v915) ^ 0x77;
  v923[14] = v926[HIBYTE(v925) ^ 0x22] ^ HIBYTE(v925) ^ 2;
  *v923 = v918[((BYTE2(v925) ^ 0x3A) - ((2 * (BYTE2(v925) ^ 0x3A)) & 0xDDDDDDDD) + 1262) ^ 0x456] ^ BYTE2(v925) ^ 0x33;
  v923[8] = v926[HIBYTE(v914) ^ 0xB4] ^ HIBYTE(v914) ^ 0x94;
  v928 = (((2 * (v915 ^ 0x5E)) | 0xF5017AC2) - (v915 ^ 0x5E) - 2055257441) ^ 0x2E81BF23;
  v923[9] = v924[(v928 - ((2 * v928) & 0xBE28BD78) + 1595170492) ^ 0xB155C17] ^ v915 ^ 0xAC;
  v923[3] = v927[(((2 * (BYTE1(v914) ^ 0x20010420)) | 0xF0692568) - (BYTE1(v914) ^ 0x20010420) + 130772300) ^ 0xD83596C1] ^ BYTE1(v914) ^ 0xBF;
  v923[4] = v927[((BYTE1(v913) ^ 0x8C) - 1049042169 - ((2 * (BYTE1(v913) ^ 0x8C)) & 0x1E8) + 237) ^ 0xC178E307] ^ BYTE1(v913) ^ 0x95;
  v929 = (((2 * (BYTE2(v915) ^ 0xAB)) & 0x1DA) - (BYTE2(v915) ^ 0xAB) - 1693870062) ^ 0x9BA8D822;
  v923[6] = v918[(((2 * v929) | 0xD9AE7FC0) - v929 - 1826045920) ^ 0x6C767F9ALL] ^ BYTE2(v915) ^ 0x50;
  v930 = (((2 * (BYTE1(v915) ^ 0xAB)) | 0x762D3BC2) - (BYTE1(v915) ^ 0xAB) - 991337953) ^ 0x58269CA1;
  v923[15] = v927[(v930 - ((2 * v930) & 0xBB8661CA) + 1573073125) ^ 0x3EF33193] ^ BYTE1(v915) ^ 0x77;
  v923[5] = v924[(((2 * (v914 ^ 0xE2404820)) | 0x9EBEE17A)
                - (v914 ^ 0xE2404820)
                + 815828803) ^ 0x2D1F38B9] ^ v914 ^ 0x3F;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v951 + 8 * v917) - 4))(a1);
}

uint64_t sub_10017D14C(uint64_t result)
{
  int v1;
  int v2;

  if ((v1 ^ 0x75BB91F7) + ((2 * v1) & 0xEB7620C8) == 1975226871)
    v2 = 2134650450;
  else
    v2 = 2134608426;
  *(_DWORD *)(result + 8) = v2;
  return result;
}

void sub_10017D1C0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_10017D338()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (v1 + v0)))();
}

uint64_t sub_10017D348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  _BOOL4 v30;

  LODWORD(a14) = v25;
  v30 = ((2 * (v25 & 0x3F000000 ^ 0x840B0408)) | 0xB9CBD676) - (v25 & 0x3F000000 ^ 0x840B0408) != 987028078
     && (((v26 + v28 - 167) ^ 0x30003C6F) & v25) != 0x20000000;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (v30 ^ (v26 + v28 - 168))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, v27, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_10017D3F0(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;

  v30 = ((((v29 - 144) | 0x3842DDB0) - (v29 - 144) + ((v29 - 144) & 0xC7BD2248)) ^ 0x883BE0F3) * v26;
  *(_DWORD *)(v29 - 136) = (v27 - 9299) ^ v30;
  *(_DWORD *)(v29 - 132) = (a14 ^ 0x3727136E) + v30 - 1088492680 + ((2 * a14) & 0xE7E76F9E ^ 0x81A14902);
  *(_QWORD *)(v29 - 128) = &STACK[0x4EF36B7CFD956112];
  *(_QWORD *)(v29 - 120) = &STACK[0x530AC44061504223];
  *(_BYTE *)(v29 - 140) = 98 - ((((v29 + 112) | 0xB0) - (v29 + 112) + ((v29 + 112) & 0x48)) ^ 0xF3) * v26;
  *(_QWORD *)(v29 - 112) = &STACK[0x7818DB6960C0E4D0];
  *(_QWORD *)(v29 - 104) = a25;
  v31 = a2(v29 - 144);
  return (*(uint64_t (**)(uint64_t))(a26
                                            + 8
                                            * (((*(_DWORD *)(v29 - 144) == v28) * (((v27 - 15449) | 0x65A1) + 6485)) ^ v27)))(v31);
}

uint64_t sub_10017D528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;

  LODWORD(a27) = 3;
  HIDWORD(a36) = v36;
  LODWORD(a31) = 2134608427;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * ((v38 + 2027728949) ^ (8 * (((v37 == 0x573D38463852F697) ^ (v38 + 117)) & 1)))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_10017D5D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  uint64_t v24;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8 * (int)(a9 & 0xF23C67BF ^ (62617 * (((v23 + 12833198) & 0x3F000000) == 0x1000000)))) - ((((a9 & 0xF23C67BF) - 20369) | 0x2900) ^ ((a9 & 0xF23C67BF) - 1864265152) & 0x6F1E5FFF ^ 0x68F9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23);
}

uint64_t sub_10017D658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  unsigned int v32;
  uint64_t v33;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 + 8 * v32) - ((v32 + 9929) ^ 0x7CB4)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_10017D694()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (((((v0 - 1020951729) & 0x3CDA172E) - 5819) * (v1 >= -2143529625)) ^ v0))
                            - 12))();
}

uint64_t sub_10017D6DC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((((v0 - 8396596) & 0x87A3BB77) + (v0 ^ 0x78DCCA3D)) * (v2 == v1)) ^ v0))
                            - 12))();
}

uint64_t sub_10017D728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  int v29;
  int v30;
  uint64_t v31;

  LODWORD(a27) = 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 + 8 * ((((v30 + v29) ^ 0x9E32) * ((v28 - 129445232) < 0x3D)) ^ (v30 + v29))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_10017D768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  uint64_t v31;
  uint64_t v32;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 + 8 * ((63 * ((*(_DWORD *)(v31 - 0x132CB31F49002A93) ^ 0x84EF9744) >= (((v30 - 6587) | 0x949) ^ 0x4DC1u))) ^ v30)) - ((v30 - 6587) ^ 0x4492)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           v31 - 0x132CB31F49002A93,
           a30);
}

uint64_t sub_10017D7E8()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 8 * v0))(2149716017, 3123612579, 4294952563, 993051654, 10552);
}

uint64_t sub_10017D86C(int a1, unsigned int a2, __int16 a3, int a4, int a5, __int16 a6)
{
  int v6;
  unsigned int v7;
  __int16 v8;
  int v9;
  int v10;
  _DWORD *v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned int v19;
  unsigned int v20;

  v17 = *(_BYTE *)(v14 + (unsigned __int16)(a6 + v8)) ^ 8;
  v18 = v17
      - ((((v17 * v10) >> 8)
        + (((v17 - ((unsigned __int16)(v17 * (_WORD)v10) >> 8)) & 0xFE) >> 1)) >> 3)
      * v12;
  v19 = (v9 ^ v15) + ((v13 ^ v18) + 2 * v18 + a1) * ((v13 ^ v18) + 2 * v18 + a1);
  v20 = v19 - (((v19 * (unint64_t)a2) >> 32) >> 3) * v12;
  *v11 = v20 + v15 - ((2 * v20) & 8);
  return (*(uint64_t (**)(void))(v16 + 8 * (((a4 + (unsigned __int16)(a6 + a3) >= v7) * a5) ^ v6)))();
}

uint64_t sub_10017D8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  int v41;
  int v42;
  int v43;
  uint64_t v44;
  unsigned int v45;

  *a30 = v43
       + (v41 ^ v43)
       - ((((v40 - 550258337) & 0xA7EFBFFF ^ 0x8723B35A) + 2 * (v41 ^ v43)) & (v40 + 165606517))
       + 20;
  v45 = a9 + v42 + 60;
  LODWORD(a32) = (v45 >> 1) + 159297229;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 + 8 * (v40 ^ (51 * (v45 > 1)))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_10017D9B0()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * v0)
                                                                                         - 4))(&STACK[0x2A4], 28921, 1941861537, 159268308, 4066);
}

uint64_t sub_10017DA0C(uint64_t a1, __int16 a2, uint64_t a3, int a4, int a5, int a6)
{
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  __int16 v12;
  __int16 v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  _BOOL4 v20;

  v17 = (v7 + 2 * a6 + v10);
  *(_WORD *)(a1 + 2 * (unsigned __int16)(a2 + v14)) = (*(_BYTE *)(v15 + (v17 | 1)) ^ 8 | ((*(unsigned __int8 *)(v15 + v17) ^ 8) << 8))
                                                      - 2
                                                      * ((*(_BYTE *)(v15 + (v17 | 1)) ^ 8 | ((*(unsigned __int8 *)(v15 + v17) ^ 8) << 8)) & v12 ^ (*(_BYTE *)(v15 + (v17 | 1)) ^ 8) & 2)
                                                      + v13;
  v18 = ((unsigned __int16)(a2 + 1) | (((unsigned __int16)(a2 + 1) < v9) << 16)) + a4;
  v20 = v18 <= v6 || v11 <= v18;
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * ((v20 * a5) ^ v8)) - 4))();
}

uint64_t sub_10017DA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  int v41;
  uint64_t v42;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * (v41 + v40 - 771)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_10017DAA4()
{
  int v0;
  int v1;
  char v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v1 + v0 - 1483) | (110 * ((v2 & 1) == 0))))
                            - ((((v1 + v0 - 1483) | 0x6Eu) + 1264) ^ (2 * (v0 ^ 0x8723A05F)))))();
}

uint64_t sub_10017DAE8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,unsigned int a36)
{
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  __int16 v40;

  v40 = *(unsigned __int8 *)(v38 + (a1 + v37 + 59)) ^ 8;
  *((_WORD *)&STACK[0x2A4] + a36) = (v40 << 8) - (((v36 ^ 0x734) - 30298) & (v40 << 9)) + 22777;
  return ((uint64_t (*)(void))(*(_QWORD *)(v39 + 8 * v36) - 4))();
}

uint64_t sub_10017DB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;

  LODWORD(v49) = ((((v44 + 8874) | 0x14C1) - 16898) ^ 0xE43C) & (((a9 + v45 + 61) >> 1)
                                                               - ((a9 + v45 + 61) & 0x2B22)
                                                               + 5521);
  HIDWORD(v49) = (((2 * (v49 ^ 0x7AC8)) | 0x5BA0718E) - (v49 ^ 0x7AC8) + 1378862905) & 0x7FFFFFFF ^ 0x2DD0579E;
  LODWORD(a34) = 259030113;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * ((61 * (HIDWORD(v49) != 0)) ^ v44)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, v46, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           v49,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_10017DC18()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_10017DC58@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  __int16 v24;
  uint64_t (*v25)(uint64_t);
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  unsigned int v33;
  int v34;
  __int16 v35;
  __int16 v36;
  uint64_t v37;

  v32 = *(_WORD *)(v22 + 2 * (unsigned __int16)(v24 - 21100));
  v33 = v26 + 3917 + a1 - 259039930;
  if (v33 == v27)
    v33 = 0;
  v34 = v20 + a1;
  v35 = *(_WORD *)(v22 + 2 * v33) ^ 0x36DD;
  v36 = *(_WORD *)(v22 + 2 * ((v34 + 2) % v27)) ^ 0xDBA6;
  LOWORD(v34) = *(_WORD *)(v22 + 2 * ((v34 + 3) % v27)) ^ 0x3E26;
  STACK[0x280] = *(_QWORD *)(v31 + 8 * v26) - 8;
  LOWORD(STACK[0x288]) = v24 + 5224;
  LOWORD(STACK[0x290]) = 12451;
  LOWORD(STACK[0x292]) = v32 ^ 0x8F90;
  LOWORD(STACK[0x294]) = v35;
  LOWORD(STACK[0x296]) = v36;
  LOWORD(STACK[0x298]) = v34;
  *(_QWORD *)(v30 - 136) = &STACK[0x280];
  *(_DWORD *)(v30 - 140) = (v26 + v21) ^ (((v23 + v29 - 2 * (v23 & v29)) ^ 0xE970BEC1) * v19);
  v37 = v25(v30 - 144);
  *(_WORD *)(v22 + 2 * (unsigned __int16)(v24 - 21100)) = *(_WORD *)(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(a19
                                            + 8
                                            * (v28 ^ (22110
                                                    * (v27 <= (unsigned __int16)(v24 + 1)
                                                            + 259009013
                                                            + (((unsigned __int16)(v24 + 1) < 0x526Cu) << 16)
                                                            - 259030113)))))(v37);
}

uint64_t sub_10017DDA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  uint64_t v45;

  LODWORD(a34) = a9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8 * v44))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_10017DDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v43;
  int v44;
  uint64_t v45;

  HIDWORD(a35) = v44;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8 * ((50782 * (HIDWORD(a32) != ((v43 - 9366) ^ 0xBDCF) - 34016)) ^ v43)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_10017DE30@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * a1) - ((a1 - 1193376256) & 0x472157DD ^ 0x1701)))();
}

uint64_t sub_10017DE80@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t (*v25)(uint64_t);
  __int16 v26;
  int v27;
  uint64_t v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  int v33;
  unsigned int v34;
  __int16 v35;
  __int16 v36;
  __int16 v37;
  uint64_t v38;
  _BOOL4 v39;

  v32 = *(_WORD *)(v28 + 2 * (unsigned __int16)(v29 - 21100));
  v33 = v20 + a1;
  if (v33 + 1 == v24)
    v34 = 0;
  else
    v34 = v33 + 1;
  v35 = *(_WORD *)(v28 + 2 * v34) ^ 0x36DD;
  v36 = *(_WORD *)(v28 + 2 * ((v33 + 2) % v24)) ^ 0xDBA6;
  v37 = *(_WORD *)(v28 + 2 * ((v33 + 3) % v24)) ^ 0x3E26;
  STACK[0x280] = *(_QWORD *)(v31 + 8 * v23) - 8;
  LOWORD(STACK[0x288]) = v29 + 5224;
  LOWORD(STACK[0x290]) = 12452;
  LOWORD(STACK[0x292]) = (5 * v26) ^ 0xD255 ^ v32;
  LOWORD(STACK[0x294]) = v35;
  LOWORD(STACK[0x296]) = v36;
  LOWORD(STACK[0x298]) = v37;
  *(_QWORD *)(v30 - 136) = &STACK[0x280];
  *(_DWORD *)(v30 - 140) = (v23 + v21) ^ (((2 * (v27 & 0x58F11228) - v27 - 1492193838) ^ 0x6A32541F) * v19);
  v38 = v25(v30 - 144);
  *(_WORD *)(v28 + 2 * (unsigned __int16)(v29 - 21100)) = *(_WORD *)(v30 - 144);
  v39 = v24 > (unsigned __int16)(v29 + 1)
            + 259009013
            + (((unsigned __int16)(v29 + 1) < 0x526Cu) << 16)
            - 259030113;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a19 + 8 * ((4 * v39) | (8 * v39) | v22)) - 12))(v38);
}

uint64_t sub_10017DFD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  uint64_t v45;

  HIDWORD(a36) = a9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8 * v44))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_10017E01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v35;
  uint64_t v36;
  unint64_t v38;

  v38 = (*a29 ^ 0x74D1F65CF81C58B3)
      + (((v35 ^ 0x84A7u) - 2027703509) ^ 0x8B2E09A35F754C89)
      + (((unint64_t)(*a29 ^ 0x84EF9744) << ((-118 * (v35 ^ 0xA7)) ^ 0x47u)) & 0xF9E79FEE);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(v36 + 8 * ((v38 == 1430966258) | (2 * (v38 == 1430966258)) | v35)))(a1, a2, 3691269186, 2386394812, 1698750245, 993739401, 909561387, 303523674, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           v38,
           a35);
}

uint64_t sub_10017E0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v42;
  uint64_t v43;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * v42) - (((v42 - 9262) | 0x2421u) ^ 0x263DLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_10017E180@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  *(_BYTE *)(v3 + v2) = v6;
  v10 = v2 + v7 < v5;
  if (v4 != v2 + v7 < a1)
    v10 = v4;
  return ((uint64_t (*)(void))(v8 + *(_QWORD *)(v9 + 8 * ((127 * v10) ^ v1)) - 16))();
}

uint64_t sub_10017E1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v42;
  uint64_t v43;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 8 * (v42 + 2027737457)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_10017E1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  int v32;
  uint64_t v33;
  unsigned int v34;

  v34 = ((v32 ^ 0x87232448) - 33193) ^ a32;
  HIDWORD(a27) = v34 + 325446246;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * ((1845 * (v34 != 0)) ^ (v32 + 2027720422))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_10017E240()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * v0) - 4))(80, 123, 2758145, 325423598, 83);
}

uint64_t sub_10017E2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  unsigned int v29;
  __int16 v30;
  _DWORD *v31;
  __int16 v32;
  unsigned int v33;
  uint64_t v34;
  char v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  char v45;
  unsigned int v46;
  _BOOL4 v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v40 = *(unsigned __int16 *)(v34 + 2 * (unsigned __int16)(v30 + v32));
  v41 = (a6 + v36) % (*v31 ^ v37);
  v42 = *(unsigned __int8 *)(v38 + v41) ^ (v40 >> v35);
  LOBYTE(v42) = ((v42 ^ a1) - 2 * ((v42 ^ a1) & a2 ^ (v42 ^ 8) & 2) - 7) ^ v40;
  LOBYTE(v40) = v42 - ((2 * v42) & 0x10);
  v43 = (unsigned __int16)(v30 + 1) | (((unsigned __int16)((unsigned __int16)(v30 + 1) >> 3) < 0xB0Fu) << 16);
  v44 = (v43 + a3);
  v45 = v40 + 8;
  v46 = v43 + a4;
  v48 = v44 <= v29 || v33 <= v46;
  *(_BYTE *)(v38 + v41) = v45;
  v49 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * (int)((v48 * a5) ^ v28)) - 4);
  return v49(a1, a2, a3, a4, a5, v44, v49, v41, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_10017E364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8 * (v3 + a3)))(a1, a2, 3691269186, 2386394812, 1698750245, 993739401, 909561387, 303523674);
}

uint64_t sub_10017E3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;

  v30 = ((uint64_t (*)(uint64_t, unint64_t *, uint64_t))(*(_QWORD *)(v26 + 8 * (v29 + v28 + 3283))
                                                                      - 488087939))(*(_QWORD *)(v26 + 8 * (v28 & 0x288C40D4)) - 468270114, &STACK[0x430], 256);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a26
                                                      + 8
                                                      * ((696
                                                        * ((*(_DWORD *)(v27 - 0x126FE2DEE508D11FLL) ^ 0x402F53C9u) < 0x11)) ^ (v28 + 2027742833)))
                                          - (v28 + 2027723136)
                                          + 19686))(v30);
}

uint64_t sub_10017E470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _DWORD *a69;
  int v69;
  int v70;
  uint64_t v71;

  STACK[0x330] = 0x2D571905E671A7FDLL;
  STACK[0x338] = 0x2446E121EA3F3220;
  STACK[0x340] = 0xE3C71A359B1B30BELL;
  STACK[0x348] = 0x82D6E9169775A4E2;
  STACK[0x350] = 0x2752BBBBEB4458C8;
  STACK[0x358] = 0x14175EE6D204C7CFLL;
  STACK[0x360] = 0x663FB190F0376CA3;
  STACK[0x368] = 0x2F40448345DC9CC1;
  STACK[0x370] = 0xF86A8E23C6DAEA8;
  STACK[0x378] = 0x27398CA298FB7515;
  STACK[0x384] = 0x7D2081C8CD148884;
  STACK[0x38C] = 0x7B265D139ADDD4F7;
  LODWORD(STACK[0x380]) = -980757274;
  LODWORD(STACK[0x394]) = -1081768008;
  STACK[0x398] = 0x2E0E2704E83F429;
  STACK[0x3A0] = 0x59ECA4188C4DF477;
  STACK[0x3A8] = 0xC137C897D461973;
  STACK[0x3B0] = 0xDFAC3CB4E28618F2;
  STACK[0x3BC] = 0xDCBB9371E713C299;
  STACK[0x3C4] = 0x5061BC7BCEA3D2F0;
  STACK[0x3CC] = 0x89503AB8C4E4A5E3;
  LODWORD(STACK[0x3B8]) = 1996246285;
  LODWORD(STACK[0x3D4]) = -1416579523;
  STACK[0x3D8] = 0xD802FFF41E4DF447;
  STACK[0x3E0] = 0x10F6FE45F93078D8;
  STACK[0x3E8] = 0xE19C58898FF1DF50;
  STACK[0x3F4] = 0x4C97FEA0A78F347FLL;
  STACK[0x3FC] = 0xE42A570CC69397C1;
  STACK[0x40C] = 0x5726F21CBE77ECACLL;
  LODWORD(STACK[0x3F0]) = 1582876398;
  LODWORD(STACK[0x404]) = -979152457;
  LODWORD(STACK[0x408]) = -1029039181;
  LODWORD(STACK[0x414]) = 536232150;
  STACK[0x418] = 0xD90589172875EABFLL;
  STACK[0x420] = 0xA162CD7658EE3048;
  LODWORD(STACK[0x428]) = -1237183453;
  LODWORD(STACK[0x42C]) = 1148262617;
  *a69 = v70 + 16;
  STACK[0x200] = (unint64_t)&STACK[0x380];
  STACK[0x208] = (unint64_t)&STACK[0x384];
  STACK[0x210] = (unint64_t)&STACK[0x398];
  STACK[0x218] = (unint64_t)&STACK[0x3A0];
  STACK[0x220] = (unint64_t)&STACK[0x3A4];
  STACK[0x228] = (unint64_t)&STACK[0x3A8];
  STACK[0x230] = (unint64_t)&STACK[0x3B8];
  STACK[0x238] = (unint64_t)&STACK[0x3BC];
  STACK[0x240] = (unint64_t)&STACK[0x3C4];
  STACK[0x248] = (unint64_t)&STACK[0x3CC];
  STACK[0x250] = (unint64_t)&STACK[0x3D4];
  STACK[0x258] = (unint64_t)&STACK[0x3D8];
  return (*(uint64_t (**)(uint64_t))(v71 + 8 * v69))(35);
}

uint64_t sub_10017E8AC@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;

  v38 = a7 - (v27 & v30);
  v39 = ((unsigned __int16)(((a7 - (v27 & v30)) ^ 0x6C7F) - ((unsigned __int16)(a7 - (v27 & v30)) ^ 0x6C7Fu)
                                                          / 0xBE
                                                          * v33) ^ 0x73DE3FFF)
      + 2
      * (unsigned __int16)(((a7 - (v27 & v30)) ^ 0x6C7F)
                                       - ((unsigned __int16)(a7 - (v27 & v30)) ^ 0x6C7Fu) / 0xBE * v33)
      - 1631727633;
  LODWORD(v39) = *(unsigned __int8 *)((v39 | ((unint64_t)(v39 < 0x129C0FEE) << 32)) + a2 - 312217582) ^ v28;
  v40 = a8 - 2 * (v27 & v30);
  v41 = (v38 ^ 0x72D08A58) + 1476532698 + (v40 & 0x4FFBCC48 ^ 0xA5AC848);
  v42 = v41 - ((((v41 >> 1) * (unint64_t)v29) >> 32) >> 6) * v33;
  v43 = (v42 ^ 0x4EEDEF99) - 1281925649 + ((2 * v42) & 0x132);
  LODWORD(v43) = *(unsigned __int8 *)((v43 | ((unint64_t)(v43 < 0x2854D88) << 32)) + a2 - 42290568) ^ v28;
  v44 = (v38 ^ 0x6ED6B78A) + 1141122057 + (v40 & 0x77F7B7EC ^ 0x225290E8);
  v45 = v44 - ((((v44 >> 1) * (unint64_t)v29) >> 32) >> 6) * v33;
  LODWORD(v43) = (v37 + (((_DWORD)v43 - ((2 * (_DWORD)v43) & 0x5A)) << 16)) ^ v37;
  v46 = (v45 ^ 0xA6AEE4BF) + 1542709079 + ((2 * v45) & 0x17E);
  LODWORD(v39) = (v43 + 181763987 - ((2 * v43) & 0x15AA0000)) ^ 0xAD57F93 | (((a9
                                                                             + (((_DWORD)v39
                                                                               - ((2 * (_DWORD)v39) & 0x88888888)) << 24)) ^ a9)
                                                                           + 1982376659
                                                                           - ((2
                                                                             * ((a9
                                                                               + (((_DWORD)v39
                                                                                 - ((2 * (_DWORD)v39) & 0x88888888)) << 24)) ^ a9)) & 0xEC000000)) ^ 0x7628AAD3;
  LODWORD(v43) = *(unsigned __int8 *)((v46 | ((unint64_t)(v46 < 0x2A2C416) << 32)) + a2 - 44221462) ^ v28;
  LODWORD(v43) = ((((_DWORD)v43 + 12832565 - ((2 * (_DWORD)v43) & 0x3C)) << 8) - 5888) ^ 0xC3CF1E00;
  LODWORD(v39) = (v39 + 483722087 - ((2 * v39) & 0x39AA06CE)) ^ 0x1CD50367 | (v43 + 257810049 - ((2 * v43) & 0x1EBBBC00)) ^ 0xF5DDE81;
  LODWORD(v43) = (v38 ^ 0x833B6586) - 1444284922 + (v40 & 0xAC2C13F4 ^ 0xA80810F0);
  LODWORD(v43) = v43 - ((((v43 >> 1) * (unint64_t)v29) >> 32) >> 6) * v33;
  v47 = (v43 ^ 0xCF7FADFF) + 2 * (_DWORD)v43 + v31;
  LODWORD(v47) = *(unsigned __int8 *)((v47 | ((unint64_t)(v47 < v32) << 32)) + a2 + v35) ^ v28;
  LODWORD(v39) = (v39 + 1779034294 - ((2 * v39) & 0xD413D16C)) ^ 0x6A09E8B6 | (v47 + 363893709 - (v36 & (2 * v47))) ^ 0x15B093CD;
  *(_DWORD *)(a3 + 4 * v34) = v39 + 1477373215 - ((2 * v39) & 0xB01DDA3E);
  return (*(uint64_t (**)(void))(a27 + 8 * (int)(((((a5 + v34) | a4) >> 63) * a1) ^ a6)))();
}

#error "10017ED0C: call analysis failed (funcsize=35)"

uint64_t sub_10017ED10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned int a26,uint64_t a27)
{
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v40 = v34 ^ ((a9 & 0x7F) - (v30 & 0x4Cu) + 1499187110);
  v41 = (((a9 - 13) & 0x7F) + v29 - 2 * ((a9 - 13) & 0x73 ^ ((_BYTE)a9 - 1) & 1)) ^ v29;
  LODWORD(v41) = *(_DWORD *)(a2 + 4 * ((v41 ^ 0x9FFD7F1FF71BEFDLL) + ((2 * v41) & 0x1FEE37DFALL)) - 0x27FF5FC7FDC6FBF4);
  v42 = ((((_BYTE)a9 - 57) & 0x7F) + v28 - ((v30 - 114) & 0x88)) ^ v28;
  LODWORD(v42) = *(_DWORD *)(a2
                           + 4 * ((v42 ^ 0x2CBFDB5F7CAF53FFLL) + ((2 * (_DWORD)v42) & 0xF95EA7FE))
                           + 0x4D0092820D42B004);
  HIDWORD(v43) = v42 ^ 0xEED1F;
  LODWORD(v43) = v42 ^ 0x58000000;
  LODWORD(v42) = v43 >> 27;
  HIDWORD(v43) = v41 ^ 0x180EED1F;
  LODWORD(v43) = v41 ^ 0x40000000;
  v44 = a2 + 4 * ((v40 ^ 0x1F57AAED77FFBAF5) + ((2 * (_DWORD)v40) & 0xEFFF75EA));
  v45 = ((((_BYTE)a9 - 27) & 0x7F) + v27 - (((_BYTE)v30 - 54) & 0xF8)) ^ v27;
  LODWORD(v41) = (v42 ^ 0x899ED8F6)
               + (v39 & (2 * v42))
               + v31
               + (*(_DWORD *)(v44 + a3) ^ v33 ^ ((v43 >> 29) - ((2 * (v43 >> 29)) & 0xE41C2E6A) - 233957579));
  LODWORD(v42) = *(_DWORD *)(a2 + 4 * ((v45 ^ a1) + ((2 * (_DWORD)v45) & a4)) + a5);
  HIDWORD(v43) = v42 ^ 0xFFFFFF1F;
  LODWORD(v43) = v42 ^ 0x580EEC00;
  LODWORD(v41) = ((v43 >> 9) ^ a6) - (a7 & (2 * (v43 >> 9))) + (v41 ^ v32) + (v35 & (2 * v41)) + 1;
  *(_DWORD *)(v44 + a3) = v41 - ((a8 + 2 * v41) & 0xB01DDA3E) + v36;
  return (*(uint64_t (**)(void))(a27 + 8 * (((a9 == v37) * v38) ^ a26)))();
}

uint64_t sub_10017EF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,_DWORD *a37,_DWORD *a38,uint64_t a39,_DWORD *a40,uint64_t a41,uint64_t a42,_DWORD *a43,_DWORD *a44,_DWORD *a45,_DWORD *a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _DWORD *a69;
  _DWORD *a70;
  _DWORD *a71;
  _DWORD *a72;
  uint64_t v72;
  unsigned int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  uint64_t v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  uint64_t v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  _DWORD *v100;
  int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  _DWORD *v107;
  int v108;
  unsigned int v109;
  int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  _DWORD *v128;
  unsigned int v129;
  uint64_t v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  uint64_t v147;
  int v148;
  int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  unint64_t v163;
  int v164;
  int v165;
  uint64_t v166;
  int v167;
  int v168;
  unsigned int v169;
  int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  uint64_t v175;
  int v176;
  int v177;
  unint64_t v178;
  int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  unsigned int v192;
  unint64_t v193;
  int v194;
  int v195;
  int v196;
  unsigned int v197;
  int v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v202;
  uint64_t v203;

  LODWORD(a25) = (a24 + 2272710) | 0x87009060;
  v73 = ((LODWORD(STACK[0x588]) ^ 0xDF2D5E6D ^ a25) / 5
       - ((2 * ((LODWORD(STACK[0x588]) ^ 0xDF2D5E6D ^ a25) / 5)) & 0x587AB7A)
       + 1120130493) ^ 0x42C3D5BD;
  v74 = (109764396 * v73) & 0x6DD0B498;
  v75 = -1018859626 * v73 - 1226286516;
  HIDWORD(a36) = v75 - v74;
  v76 = ((STACK[0x520] & 0x198A8650 ^ 0x18808450)
       - ((2 * (STACK[0x520] & 0x198A8650 ^ 0x18808450)) & 0x12040020)
       - 851242602) ^ 0xC99971D2;
  v77 = (v76 - ((2 * v76) & 0x630449E8) + 1904360957) & 0x7FFAB6DA ^ 0xF5D75DFD;
  v78 = (v77 + 257078255 + ((2 * v77) & 0x1EA56594 ^ 0xFFFFFDB5) + 1) ^ 0xF52B3EF;
  v79 = ((2 * (v78 / 3)) & 0xFADD7BF6) + ((v78 / 3) ^ 0x7D6EBDFB);
  v80 = *(_QWORD *)(v72 + 8 * (a24 ^ 0x711A)) - 890248042;
  v81 = *(_DWORD *)(v80 + 4 * (STACK[0x5B4] & 0x3F ^ 0x1FLL)) & 0x3CBA9069 ^ 0x3C800008;
  v82 = ((((v81 | 0x2FD4091F) - (v81 | 0xD02BF6E0) - 802425120) & 0xDC2819EA ^ 0x902017A0)
       + (((v81 | 0x2FD4091F) - (v81 | 0xD02BF6E0) - 802425120) ^ 0x6F98085B)
       - ((((v81 | 0x2FD4091F) - (v81 | 0xD02BF6E0) - 802425120) ^ 0x6F98085B) & 0xDC281FEA)) & 0xBCBBFEEB ^ 0xD74C0FFE;
  v83 = (v82 - 1204253272 + ((2 * v82) & 0x70711950 ^ 0xFFFFFDFF) + 1) ^ 0xB8388DA8;
  v84 = (*(_DWORD *)STACK[0x258] ^ 0xB6E85A4C) + ((v83 / 5) ^ 0xF33F7BE7) + ((2 * (v83 / 5)) & 0x667EF7CE) + 213943321;
  *(_DWORD *)STACK[0x258] = v84 - ((2 * v84) & 0x6DD0B498) - 1226286516;
  v85 = *((_DWORD *)&STACK[0x430] + (STACK[0x60C] & 0x3F ^ 0x1FLL));
  LODWORD(a39) = v79 - ((2 * v79 + 1682943940) & 0x62D0C4DE) + 596654673;
  v86 = (0x908D4D25 >> ~(_BYTE)v85) - ((2 * (0x908D4D25 >> ~(_BYTE)v85)) & 0xB1D5EC22) + 1491793425;
  LOBYTE(v85) = (((v85 ^ 0xE0) + 1) ^ 0x16) + ((2 * ((v85 ^ 0xE0) + 1)) & 0xC) + 10;
  HIDWORD(a41) = ((-1869787867 << v85) - ((555391562 << v85) & 0x84659540) + 1110624928) ^ v86;
  v87 = (*((_DWORD *)&STACK[0x430] + (STACK[0x68C] & 0x3F ^ 0x1FLL)) ^ 0x580EED1F) & (LODWORD(STACK[0x498]) ^ 0x580EED1F);
  v88 = ((STACK[0x498] & 0x1400E02 ^ 0x24B28C4B) + (STACK[0x498] & 0xC2056194 ^ 0x2046011) - 2) ^ 0x27A0074C;
  v89 = (((2 * v88) & 0x285151C) - v88 - 969579151) ^ 0x44628CE7 | (v87 - ((2 * v87) & 0xC872B754) + 1681480618) ^ 0x64395BAA;
  v90 = v89 - ((2 * v89) & 0x91CF0FE2) - 924350479;
  v91 = 4 * (((((v75 - v74) & 0x38 ^ 0x1285891) - 1) & 0x10800B8 | v75 & 6) ^ 0x108009Cu);
  v92 = *(_DWORD *)((char *)&STACK[0x330] + v91) ^ 0xB6E85A4C;
  v93 = ((STACK[0x4D8] & 0x4F2159FC ^ 0x4021486C | 0xD51F5A56)
       - (STACK[0x4D8] & 0x4F2159FC ^ 0x4021486C | 0x2AE0A5A9)
       + 719365545) ^ 0x55CBDB67;
  v94 = (v93 - ((2 * v93) & 0xABE8A944) + 1442075810) ^ 0x92208D1F | ((STACK[0x4D8] & 0xCFB878B2 ^ 0xD8086A9B | 0xD5B51CBF)
                                                                    - (STACK[0x4D8] & 0xCFB878B2 ^ 0xD8086A9B | 0x2A4AE340)
                                                                    + 709550912) ^ 0x45B51E36;
  v95 = (v92 / 5 - ((2 * (v92 / 5)) & 0x2A13F838) - 1794507748) ^ 0x9509FC1C;
  v96 = (v94 - ((2 * v94) & 0xFD928D52) + 2127120041) ^ 0x7EC946A9;
  v97 = (((v96 | v95) - 245073176 - ((2 * (v96 | v95)) & 0xE2C8F5D2) + 1) ^ 0xF1647AE8) & (HIDWORD(a36) ^ 0xB6E85A4C);
  v98 = (v97 - ((2 * v97) & 0x9E0B7FAA) - 821706795) ^ 0xCF05BFD5 | ((v96 & v95)
                                                                   - ((2 * (v96 & v95)) & 0x2493630E)
                                                                   - 1840664185) ^ 0x9249B187;
  v99 = (*a46 ^ 0xB6E85A4C) + (v98 ^ 0x40040711) - ((2 * v98) & 0x7FF7F1DC) - 1074005777;
  *a46 = v99 - ((2 * v99) & 0x6DD0B498) - 1226286516;
  LODWORD(STACK[0x494]) = (LODWORD(STACK[0x494]) ^ 0x580EED1F)
                        + v92
                        + 1477373215
                        - ((2 * ((LODWORD(STACK[0x494]) ^ 0x580EED1F) + v92)) & 0xB01DDA3E);
  v100 = (_DWORD *)STACK[0x208];
  v101 = (((((2 * (*(_DWORD *)STACK[0x208] & 0xE048272C ^ 0xE0080700)) | 0xD68B3C7E)
          - (*(_DWORD *)STACK[0x208] & 0xE048272C ^ 0xE0080700)
          - 1799724607) ^ 0xE878C550)
        - 1) ^ 0x2335794E | (((a39 ^ 0xB168626F) & (*(_DWORD *)STACK[0x208] ^ 0xB6E85A4C))
                           - ((2 * ((a39 ^ 0xB168626F) & (*(_DWORD *)STACK[0x208] ^ 0xB6E85A4C))) & 0xE0CB82F0)
                           - 261766792) ^ 0xF065C178;
  v102 = ((v101 - ((2 * v101) & 0x5264FAF6) + 691174779) ^ 0x29327D7B) * (LODWORD(STACK[0x718]) ^ 0x580EED1F);
  LODWORD(STACK[0x520]) = v102 + 1477373215 - ((2 * v102) & 0xB01DDA3E);
  v103 = ((HIDWORD(a36) & 0x2C929048 ^ 0x28000040)
        - ((2 * (HIDWORD(a36) & 0x2C929048 ^ 0x28000040)) & 0xF800F800)
        + 1818238852) ^ 0x26884B0B;
  v104 = (HIDWORD(a36) ^ 0x4917A5B3) & (*(_DWORD *)(v80 + 4 * (STACK[0x710] & 0x3F ^ 0x1FLL)) ^ 0xB6E85A4C);
  v105 = (v103 - ((2 * v103) & 0xFC66E806) - 30180061) ^ 0xB85B39A4 | (v104 - ((2 * v104) & 0xAB3599D0) - 711275288) ^ 0xD59ACCE8;
  v106 = (LODWORD(STACK[0x544]) ^ 0x580EED1F) + (v105 ^ 0x3EFEFEEC) + ((2 * v105) & 0x7DFDFDD8) - 1056898796;
  LODWORD(STACK[0x544]) = v106 + 1477373215 - ((2 * v106) & 0xB01DDA3E);
  v107 = (_DWORD *)STACK[0x238];
  *(_DWORD *)STACK[0x238] = (*(_DWORD *)STACK[0x238] ^ 0xB6E85A4C)
                          - ((2 * (*(_DWORD *)STACK[0x238] ^ 0xB6E85A4C) + 1666174686) & 0x6DD0B498)
                          + 1754284475;
  v108 = *((_DWORD *)&STACK[0x330]
         + (((BYTE4(a41) & 0x3F ^ 0x3080402B) - ((2 * (BYTE4(a41) & 0x3F ^ 0x3080402B)) & 0x2100806Cu) + 1401645878) ^ 0x1E77EBD6DCFF8588)
         + ((2
           * (((BYTE4(a41) & 0x3F ^ 0x3080402B) - ((2 * (BYTE4(a41) & 0x3F ^ 0x3080402B)) & 0x2100806C) + 1401645878) ^ 0x630B2B36u)) & 0x17FE95D7CLL)
         - 0x1E77EBD6BFF4AEBELL);
  LOBYTE(v95) = STACK[0x5E0];
  v109 = ((3 * (*(_DWORD *)(v80 + 4 * (STACK[0x578] & 0x3F ^ 0x1FLL)) & 0x3CBA9069 ^ 0x34A81048)) ^ 0xE5FFE7BF)
       + ((6 * (*(_DWORD *)(v80 + 4 * (STACK[0x578] & 0x3F ^ 0x1FLL)) & 0x3CBA9069 ^ 0x34A81048)) & 0xCBFF4376);
  v110 = STACK[0x4A4];
  LODWORD(STACK[0x4E0]) ^= 0x96628F4D ^ (v109 - ((2 * v109 + 973587854) & 0x2CC51E9A) + 862351892);
  v111 = *((_DWORD *)&STACK[0x430] + (v95 & 0x3F ^ 0x1FLL));
  LODWORD(v203) = v108;
  v112 = (LODWORD(STACK[0x6DC]) ^ 0x580EED1F)
       + (((v111 ^ 0x580EED1F) + 1) ^ 0x6F6FFD5F)
       + ((2 * ((v111 ^ 0x580EED1F) + 1)) & 0xDEDFFABE)
       - 1869610335;
  LODWORD(STACK[0x6DC]) = v112 + 1477373215 - ((2 * v112) & 0xB01DDA3E);
  LOBYTE(v112) = (((LOBYTE(STACK[0x64C]) ^ 0xE0) + 1) ^ 0xF) + 2 * ((LOBYTE(STACK[0x64C]) ^ 0xE0) + 1) + 17;
  v113 = ((0x4F2159FCu >> ~LODWORD(STACK[0x64C]))
        - ((0x9E42B3F8 >> ~LODWORD(STACK[0x64C])) & 0xB3D978AC)
        - 638796714) ^ 0xF253E5EC ^ ((1327585788 << v112) - ((-1639795720 << v112) & 0x577EB370) + 733960634);
  v114 = (v113 | v110 ^ 0x580EED1F) - ((2 * (v113 | v110 ^ 0x580EED1F)) & 0xEC58B84E) + 1982618663;
  v115 = ((v114 & 0x908D4D25 ^ 0x90810425)
        + (v114 & 0x10084804 ^ 0x416ACA88)
        - ((v114 & 0x908D4D25 ^ 0x90810425) & 0x10084804)) ^ 0xD568C88E;
  v116 = (((2 * v115) | 0x45A75AE2) - v115 + 1563185807) ^ 0xA65CE773 | ((v113 & (v110 ^ 0x580EED1F))
                                                                       - ((2 * (v113 & (v110 ^ 0x580EED1F))) & 0xA97E77F0)
                                                                       - 725664776) ^ 0xD4BF3BF8;
  v117 = (*a40 ^ 0xB6E85A4C) + (v116 ^ 0xA40C4200) - ((2 * v116) & 0xB7E77BFE) + 1542700544;
  *a40 = v117 - ((2 * v117) & 0x6DD0B498) - 1226286516;
  LOBYTE(v95) = STACK[0x5E4];
  LODWORD(STACK[0x628]) ^= 0xDBD3D289;
  v118 = *(_DWORD *)(v80 + 4 * (v95 & 0x3F ^ 0x1FLL));
  v119 = (((v118 & 0x4CF50FA3 ^ 0xB7EAFA5C)
         - 1523441955
         + ((2 * ((v118 & 0x4CF50FA3 ^ 0xB7EAFA5C) & 0x4300E83 ^ (v118 | 0x7FFFFFFD))) ^ 0x420420BD)
         + 1) ^ 0xA5321EDD) & (LODWORD(STACK[0x4E4]) ^ 0x580EED1F);
  v120 = (v119 - ((2 * v119) & 0x19543D5A) + 212475565) ^ 0xCAA1EAD | ((v118 & 0xB30AF05C ^ 0xA1088000)
                                                                     + (v118 & 0x90007054 ^ 0x5C017777)
                                                                     - ((v118 & 0xB30AF05C ^ 0xA1088000) & 0x90007054)) ^ 0xCF01A73B;
  v121 = (*a72 ^ 0xB6E85A4C)
       + (((*(_DWORD *)((char *)&STACK[0x430] + v91) ^ 0x580EED1Fu) / 5) ^ 0xADFBB4EA)
       + ((2 * ((*(_DWORD *)((char *)&STACK[0x430] + v91) ^ 0x580EED1Fu) / 5)) & 0x5BF769D4)
       + (v120 ^ 0x4CC4280)
       - ((2 * v120) & 0xF6677AFE)
       + 1295517846;
  *a72 = v121 - ((2 * v121) & 0x6DD0B498) - 1226286516;
  v122 = *((_DWORD *)&STACK[0x430] + (v203 & 0x3F ^ 0x29)) ^ 0x580EED1F;
  *a38 = *(_DWORD *)(v80
                   + 4 * (((_BYTE)v122 * (_BYTE)v122 - ((2 * (_BYTE)v122 * (_BYTE)v122) & 0x1C) + 46) & 0x3F ^ 0x2Eu));
  *v100 ^= *(_DWORD *)(v80 + 4 * (STACK[0x59C] & 0x3F ^ 0x1FLL)) ^ 0xB6E85A4C;
  v123 = (LODWORD(STACK[0x520]) ^ 0x580EED1F) * (LODWORD(STACK[0x4D4]) ^ 0x580EED1F);
  v124 = (((1732666407 << (((2 * v123) & 0xFC) + (v123 ^ 0xFE) + 2))
         - ((-829634482 << (((2 * v123) & 0xFC) + (v123 ^ 0xFE) + 2)) & 0xA2E67FEE)
         - 780976137) ^ ((0x67466427u >> (30 - (((2 * v123) & 0xFC) + (v123 ^ 0xFE))))
                       - ((0xCE8CC84E >> (30 - (((2 * v123) & 0xFC) + (v123 ^ 0xFE)))) & 0xCA3B5352)
                       + 1696442793) ^ 0xB46E965E)
       - 1869787867;
  LODWORD(v100) = ((2 * v124) & 0x5FFFFFFA) + (v124 ^ 0xAFFFFFFD);
  LODWORD(STACK[0x458]) = STACK[0x654];
  HIDWORD(v203) = (_DWORD)v100;
  v125 = *((_DWORD *)&STACK[0x430] + (STACK[0x6B8] & 0x3F ^ 0x1FLL)) ^ 0x580EED1F;
  v126 = v125 << (*a45 & 0x1F ^ 0xC);
  v127 = v125 >> ((((*(_BYTE *)a45 ^ 0xB3) + 1) ^ 8) + ((2 * ((*(_BYTE *)a45 ^ 0xB3) + 1)) & 0x10) + 24);
  *(_DWORD *)STACK[0x200] ^= (v126 - ((2 * v126) & 0x272E7260) + 328677680) ^ 0x47171E1 ^ (v127
                                                                                         - ((2 * v127) & 0xD0336E5C)
                                                                                         - 400967890);
  v128 = (_DWORD *)STACK[0x250];
  v129 = (*(_DWORD *)STACK[0x250] ^ 0xB6E85A4C) & (LODWORD(STACK[0x510]) ^ 0x580EED1F);
  v130 = 4 * (((((_DWORD)v100 + 3) & 0x3F) - ((2 * ((_DWORD)v100 + 3)) & 0x28) + 1819228052) ^ 0x6C6F3794u);
  v131 = (*(_DWORD *)(v80 + v130) ^ 0xB6E85A4C) & (LODWORD(STACK[0x510]) ^ 0xA7F112E0);
  v132 = (v131 - ((2 * v131) & 0x2E3B100C) + 387811334) ^ 0x171D8806 | (v129 - ((2 * v129) & 0x1051820C) - 2010595066) ^ 0x8828C106;
  v133 = (*a38 ^ 0xB6E85A4C)
       + ((v132 - ((2 * v132) & 0x6F9AA628) + 936203028) & 0xE5FCADFE ^ 0x25CC0114)
       + (((v132 - ((2 * v132) & 0x6F9AA628) + 936203028) >> 1) ^ 0x6918FF75)
       - 1929271039;
  *a38 = v133 - ((2 * v133) & 0x6DD0B498) - 1226286516;
  v134 = *(_DWORD *)STACK[0x248];
  v135 = ((LODWORD(STACK[0x4C4]) ^ 0x580EED1F) & (v134 ^ 0xB6E85A4C))
       - ((2 * ((LODWORD(STACK[0x4C4]) ^ 0x580EED1F) & (v134 ^ 0xB6E85A4C))) & 0x853FC4F2)
       - 1029709191;
  LOBYTE(v110) = STACK[0x5AC];
  v136 = *(_DWORD *)(v80 + 4 * (STACK[0x558] & 0x3F ^ 0x1FLL)) ^ 0xB6E85A4C;
  v137 = ((v136 * v136 - ((2 * v136 * v136) & 0x4FE66430) + 670249496) ^ 0x27F33218) * v136;
  v138 = ((v137 - ((2 * v137) & 0x40355174) + 538618042) ^ 0x201AA8BA) & (v134 ^ 0x4917A5B3);
  v139 = (v138 - ((2 * v138) & 0x97ED7D28) - 873021804) ^ 0xCBF6BE94 | v135 ^ 0xC29FE279;
  v140 = STACK[0x464];
  LODWORD(STACK[0x490]) ^= 0x607991E2 ^ (v139 - ((2 * v139) & 0xC0F323C4) + 1618579938);
  v141 = *(_DWORD *)(v80 + 4 * (STACK[0x5DC] & 0x3F ^ 0x1FLL)) & 0xBAFA6679 ^ 0x32E240C1;
  LODWORD(a31) = (v141 | 0x70E89E28) - (v141 | 0x8F1761D7) - 1894293033;
  v142 = *(_DWORD *)(v80 + 4 * (v110 & 0x3F ^ 0x1FLL));
  v143 = ((v203 ^ 0x26651769) >> (v142 & 0x1F ^ 0xC))
       + 3675381
       + (~(2 * ((v203 ^ 0x26651769) >> (v142 & 0x1F ^ 0xC))) | 0x1F8FD617);
  v144 = (v203 ^ 0x26651769) << ((((v142 ^ 0xB3) + 1) ^ 0xF) + 2 * ((v142 ^ 0xB3) + 1) + 17);
  v145 = ((v144 - ((2 * v144) & 0x18C07A32) + 207633689) ^ v143) & 0x147F3886 ^ 0x4340880;
  v146 = ((STACK[0x5F8] & 0x3F ^ 0x3E) - ((2 * (STACK[0x5F8] & 0x3F ^ 0x3E)) & 0x7C) - 706014722) ^ 0xF14D6631;
  v147 = (((2 * v146) & 0x4800EFE8) - v146 - 1728182261) ^ 0xBC587FE5;
  LODWORD(v147) = *((_DWORD *)&STACK[0x330]
                  + (v147 ^ 0xF75BEBFE7FD597FLL)
                  + ((2 * v147) & 0x1CFFAB2FELL)
                  - 0xF75BEBFE7FD597FLL) & 0xEB80C779 ^ 0x68000130;
  LODWORD(v147) = (((2 * v147) & 0x81008AD2) - v147 + 792572562) ^ 0x6FBD8092;
  v148 = (v145 - ((2 * v145) & 0x28A26108) + 928085724) ^ 0x373D56D8 | ((v147 | 0x18C08E11)
                                                                      - (v147 | 0xE73F71EE)
                                                                      - 415272466) ^ 0x92C0FF69;
  LODWORD(STACK[0x464]) = v140 ^ 0xF996C5B ^ (v148 - ((2 * v148) & 0x1F32D8B6) + 261712987);
  LODWORD(v147) = *(_DWORD *)(v80 + 4 * (v90 & 0x3F ^ 0x31));
  v149 = (((v147 & 0x6F72B2DA ^ 0xB6ED5F6D)
         + 835129007
         + ((2 * ((v147 & 0x6F72B2DA ^ 0xB6ED5F6D) & 0x2142029A ^ (v147 | 0x7FFFFFEF))) ^ 0x210A186B)
         + 1) ^ 0x31C70EAF) & (*a44 ^ 0xB6E85A4C);
  v150 = (v149 - ((2 * v149) & 0x824F93FC) + 1093126654) ^ 0x4127C9FE | v147 & 0x908D4D25 ^ 0x90884804;
  v151 = ((v150 - ((2 * v150) & 0x713B9C48) + 949866020) ^ 0x389DCE24) & (*v107 ^ 0xB6E85A4C);
  v152 = *(_DWORD *)STACK[0x220] ^ 0xB6E85A4C | *v107 ^ 0xB6E85A4C;
  v153 = (v151 - ((2 * v151) & 0x17135F10) + 193572744) ^ 0xB89AF88 | (v152 - ((2 * v152) & 0x5386E6CC) - 1446808730) ^ 0x563C8C99;
  v154 = (*(_DWORD *)STACK[0x218] ^ 0xB6E85A4C) + (v153 ^ 0xE0011916) - ((2 * v153) & 0x3FFDCDD2) + 536798954;
  *(_DWORD *)STACK[0x218] = v154 - ((2 * v154) & 0x6DD0B498) - 1226286516;
  v155 = *((_DWORD *)&STACK[0x430] + (STACK[0x6D8] & 0x3F ^ 0x1FLL));
  LODWORD(v147) = (((v155 & 0xD8DA01C4 ^ 0x7F2FFF3F) - ((2 * (v155 & 0xD8DA01C4 ^ 0x7F2FFF3F)) & 0x11B40288) - 2001089215) ^ 0x88FA3547) & (a39 ^ 0xB168626F);
  v156 = (v155 & 0x2725FE3B ^ 0x524D63A | 0xD7C6C19F) - (v155 & 0x2725FE3B ^ 0x524D63A | 0x28393E60) + 674840160;
  v157 = (v147 - ((2 * v147) & 0xAB6FF0D8) + 1438120044) ^ 0x55B7F86C | ((v156 & 0x56C152BC ^ 0x8810281)
                                                                       + (v156 & 0xA12EAD43)
                                                                       - 1) ^ 0xDA67F93E;
  v158 = ((v157 - ((2 * v157) & 0xE3541F4E) - 240513113) ^ 0xE55F058) + (LODWORD(STACK[0x48C]) ^ 0x580EED1F);
  LODWORD(v147) = (LODWORD(STACK[0x708]) ^ 0x580EED1F) * (LODWORD(STACK[0x708]) ^ 0x580EED1F);
  LODWORD(v147) = LODWORD(STACK[0x490]) ^ 0x3D06E250 ^ (v147 - ((2 * v147) & 0x7A0DC4A0) + 1023861328);
  LODWORD(STACK[0x48C]) = v158 + 1477373215 - ((2 * v158) & 0xB01DDA3E);
  LODWORD(STACK[0x490]) = v147;
  v159 = (((LODWORD(STACK[0x4D4]) ^ 0x580EED1F) * (LODWORD(STACK[0x4D4]) ^ 0x580EED1F)
         - ((2 * (LODWORD(STACK[0x4D4]) ^ 0x580EED1F) * (LODWORD(STACK[0x4D4]) ^ 0x580EED1F)) & 0x58C89E16)
         + 744771339) ^ 0x2C644F0B)
       * (LODWORD(STACK[0x4D4]) ^ 0x580EED1F);
  v160 = v159 - ((2 * v159) & 0xF15CFFF2) - 122781703;
  v161 = (((2 * LODWORD(STACK[0x6E0])) ^ 0xB01DDA3E)
        - ((2 * ((2 * LODWORD(STACK[0x6E0])) ^ 0xB01DDA3E)) & 0xDB62FB8C)
        - 307135033) ^ 0xEDB17DC7;
  LODWORD(v147) = (((v160 ^ 0xF8AE7FF9 | v161) - ((2 * (v160 ^ 0xF8AE7FF9 | v161)) & 0x9F90052E) + 1338507927) ^ 0x4FC80297) & (LODWORD(STACK[0x508]) ^ 0x580EED1F);
  v162 = (v147 - ((2 * v147) & 0x450C8388) - 1568259644) ^ 0xA28641C4 | (((v160 ^ 0xF8AE7FF8) & v161)
                                                                       - ((2 * ((v160 ^ 0xF8AE7FF8) & v161)) & 0xEEABABA0)
                                                                       + 2002114000) ^ 0x7755D5D0;
  v163 = STACK[0x238];
  *(_DWORD *)STACK[0x238] ^= 0x5EC496AC ^ (v162 - ((2 * v162) & 0xBD892D58) + 1589941932);
  v164 = STACK[0x5CC];
  v165 = STACK[0x5F4];
  v166 = STACK[0x5CC] & 0x3F;
  v167 = (*((_DWORD *)&STACK[0x430] + (v166 ^ 0x1F)) ^ LODWORD(STACK[0x4C4])) & (v203 ^ 0x26651769);
  v168 = ((v203 & 0xB070FBAE ^ 0x90735215 | 0x8FC151C1) - (v203 & 0xB070FBAE ^ 0x90735215 | 0x703EAE3E) + 1883156030) ^ 0x8FA2EB52 | (v167 - ((2 * v167) & 0xCD7C9F5A) + 1723748269) ^ 0x66BE4FAD;
  v169 = LODWORD(STACK[0x5B8]) ^ 0x989A3755 ^ (v168 - ((2 * v168) & 0x31346EAA) - 1734723755);
  v170 = (*((_DWORD *)&STACK[0x430] + (STACK[0x5BC] & 0x3F ^ 0x1FLL)) ^ 0x580EED1F) & (LODWORD(STACK[0x4D0]) ^ 0x580EED1F);
  v171 = (LODWORD(STACK[0x668]) ^ 0x580EED1F) * (LODWORD(STACK[0x668]) ^ 0x580EED1F);
  v172 = ((v171 - ((2 * v171) & 0x2417392E) - 1844732777) ^ 0x920B9C97) & (LODWORD(STACK[0x4D0]) ^ 0xA7F112E0);
  v173 = (v172 - ((2 * v172) & 0xE9E3D858) - 185471956) ^ 0xF4F1EC2C | (v170 - ((2 * v170) & 0xC3D703AC) + 1642824150) ^ 0x61EB81D6;
  LODWORD(STACK[0x4D8]) ^= 0xC996F3B8 ^ (v173 - ((2 * v173) & 0x932DE770) - 912854088);
  v174 = ((v166 ^ 0x2B) + (v164 & 0x34 ^ 0xD15080D4) - ((v166 ^ 0x2B) & 0x34)) ^ 0xC9540030;
  v175 = (((2 * v174) & 0x3000BB0C) - v174 + 1655022201) ^ 0x7AA12289u;
  LODWORD(v175) = (*((_DWORD *)&STACK[0x330]
                   + (v175 ^ 0xF3FEDBFDE5F3E7DLL)
                   + ((2 * v175) & 0x1BCBE7CFALL)
                   - 0xF3FEDBFDE5F3E7DLL) ^ 0x4917A5B3)
                - 1980092065;
  LODWORD(v175) = (v165 ^ 0x580EED1F) - 1964195011 - 3 * (((2 * v175) & 0x5C9DD77E) + (v175 ^ 0x2E4EEBBF));
  LODWORD(STACK[0x5B8]) = v169;
  LODWORD(STACK[0x5F4]) = v175 + 1477373215 - ((2 * v175) & 0xB01DDA3E);
  *a37 = HIDWORD(a36);
  v176 = (*((_DWORD *)&STACK[0x430] + (STACK[0x6A4] & 0x3F ^ 0x1FLL)) ^ 0x580EED1F) - 275343907;
  LODWORD(v175) = (*(_DWORD *)((char *)&STACK[0x330] + v130) ^ 0xB6E85A4C)
                + (v176 ^ 0xE0256800)
                - ((2 * v176) & 0x3FB52FFE)
                + 534419456;
  LODWORD(STACK[0x528]) = v175 + 1477373215 - ((2 * v175) & 0xB01DDA3E);
  LODWORD(v175) = (*((_DWORD *)&STACK[0x430] + (STACK[0x6F0] & 0x3F ^ 0x1FLL)) ^ 0x580EED1Fu) / 3;
  LODWORD(v175) = (v175 ^ 0x10010E0)
                - ((2 * v175) & 0xFDFFDE3E)
                + (*a43 ^ 0xB6E85A4C)
                + (((*a45 ^ 0xB6E85A4C) / 3) ^ 0x9FFFDFFB)
                + ((2 * ((*a45 ^ 0xB6E85A4C) / 3)) & 0x3FFFBFF6)
                + 1593839397;
  *a43 = v175 - ((2 * v175) & 0x6DD0B498) - 1226286516;
  LODWORD(v202) = *(_DWORD *)STACK[0x240] ^ v90;
  v177 = STACK[0x51C];
  LODWORD(STACK[0x50C]) = (LODWORD(STACK[0x50C]) ^ 0x580EED1F)
                        - ((2 * (LODWORD(STACK[0x50C]) ^ 0x580EED1F) + 975058668) & 0xB01DDA3E)
                        + 1964902549;
  v178 = LODWORD(STACK[0x520]);
  LODWORD(v175) = (*(_DWORD *)(v80 + 4 * ((v178 >> 1) & 0x3F ^ 0xF)) ^ 0x4917A5B3)
                + (LODWORD(STACK[0x664]) ^ 0x580EED1F)
                + 1;
  v179 = v175 + 1477373215 - ((2 * v175) & 0xB01DDA3E);
  LODWORD(v175) = STACK[0x628];
  LODWORD(v130) = *((_DWORD *)&STACK[0x330]
                  + (((STACK[0x640] & 0x3F ^ 0x32 | 0xE744756F) - (STACK[0x640] & 0x3F ^ 0x32 | 0x18BB8A90) + 414943888) ^ 0x3CBF9FFC98B98A85)
                  + ((2
                    * (((STACK[0x640] & 0x3F ^ 0x32 | 0xE744756F) - (STACK[0x640] & 0x3F ^ 0x32 | 0x18BB8A90) + 414943888) ^ 0xE7447542)) & 0xFFFBFF8E)
                  + 0x340600380020039);
  LODWORD(STACK[0x664]) = v179;
  v180 = (v130 ^ 0xB6E85A4C) / 0xF
       + 1477373215
       - ((2 * ((v130 ^ 0xB6E85A4C) / 0xF)) & 0x301DDA3E);
  v181 = STACK[0x500];
  LODWORD(v130) = LODWORD(STACK[0x4E8]) ^ 0x35BA3A4C;
  LODWORD(STACK[0x4A4]) = v180;
  LODWORD(STACK[0x4E8]) = v130;
  v182 = ((v177 & 0xA0FA4852 ^ 0x3A0002 | 0xEE739ABF) - (v177 & 0xA0FA4852 ^ 0x3A0002 | 0x118C6540) + 294413632) ^ 0xEE735ABB;
  v183 = ((2 * (((2 * v182) | 0xCED6F78) - v182 - 108443580)) & 0xC4F9C8EC ^ 0xE17590BD)
       + ((((2 * v182) | 0xCED6F78) - v182 - 108443580) & 0xF2FEEC76 ^ 0x1FC537A1);
  HIDWORD(v202) = v183 - 1578539495 + ((2 * v183 + 2101257194) & 0xC6942844 ^ 0xFFFFFFFD);
  v184 = STACK[0x588];
  LODWORD(v178) = *(_DWORD *)(v80 + 4 * (STACK[0x570] & 0x3F ^ 0x1FLL)) ^ 0xB6E85A4C | v178 ^ 0x580EED1F;
  LODWORD(v130) = v178 - ((2 * v178) & 0xA2);
  v185 = (v181 & 0x5987B420 ^ 0x420) + (v181 & 0x10863420 ^ 0xB6AE7807) - ((v181 & 0x5987B420 ^ 0x420) & 0x10863420);
  LODWORD(v178) = ((v185 & 0x16AF3540 ^ 0x492159) + (v185 & 0xE910CAA0 ^ 0xE010C821) - 2) ^ 0x57768158 | v181 & 0x908D4D25 ^ 0x100C4D05;
  LODWORD(v178) = v178 - ((2 * v178) & 0xB03D67E) + 92400437;
  v186 = ((2 * (v178 & 0x51027D05 ^ 0x1724EF0C)) & 0x60DA408) - (v178 & 0x51027D05 ^ 0x1724EF0C) - 588763813;
  v187 = STACK[0x5B0];
  LODWORD(v178) = ((((v178 & 0xAEED82F0 ^ 0x5593FF3F)
                   + 1325657002
                   + ((2 * (v178 & 0xAEED82F0 ^ 0x5593FF3F)) & 0x1C030540 ^ 0x7DFB2DEB)) | 1) ^ 0x4F03EBAA) & (LODWORD(STACK[0x5F0]) ^ 0x3B44F93C ^ HIDWORD(v202));
  LODWORD(v178) = (v178 - ((2 * v178) & 0x6F8A81EE) + 935674103) ^ 0x37C540F7 | v186 ^ 0xCACCAB52;
  LOBYTE(v181) = STACK[0x534];
  LODWORD(v178) = (LODWORD(STACK[0x550]) ^ 0x580EED1F) + (v178 ^ 0xFFEFAFFB) + ((2 * v178) & 0xFFDF5FF6) + 1069061;
  LODWORD(STACK[0x558]) = -2044287806;
  LODWORD(STACK[0x550]) = v178 + 1477373215 - ((2 * v178) & 0xB01DDA3E);
  LODWORD(v178) = STACK[0x440];
  v188 = (LODWORD(STACK[0x480]) ^ 0x580EED1F) + (*(_DWORD *)(v80 + 4 * (v181 & 0x3F ^ 0x1FLL)) ^ 0xB6E85A4C);
  LODWORD(STACK[0x480]) = v188 + 1477373215 - ((2 * v188) & 0xB01DDA3E);
  LOBYTE(v188) = (((((BYTE4(v202) ^ 0x23) * (BYTE4(v202) ^ 0x23)) ^ 0xF6)
                 + 10
                 + ((2 * (BYTE4(v202) ^ 0x23) * (BYTE4(v202) ^ 0x23)) & 0xEC))
                * (BYTE4(v202) ^ 0x23)
                - ((2
                  * ((((BYTE4(v202) ^ 0x23) * (BYTE4(v202) ^ 0x23)) ^ 0xF6)
                   + 10
                   + ((2 * (BYTE4(v202) ^ 0x23) * (BYTE4(v202) ^ 0x23)) & 0xEC))
                  * (BYTE4(v202) ^ 0x23)) & 0xAA)
                + 5) & 0x1F ^ 5;
  v189 = (v187 ^ 0x580EED1F)
       + (((0xF3852DC8 >> v188) - ((2 * (0xF3852DC8 >> v188)) & 0x44E44A82) + 577905985) ^ ((-209375800 << -(char)v188)
                                                                                          + 809787428
                                                                                          + (~(-418751600 << -(char)v188) | 0x9F773FBF)) ^ 0xEDC9BA9D)
       + 1;
  LODWORD(STACK[0x5B0]) = v189 + 1477373215 - ((2 * v189) & 0xB01DDA3E);
  v190 = STACK[0x6A0];
  v191 = 0xB910660B >> (*v128 & 0x1F ^ 0xC);
  LOBYTE(v181) = (((*(_BYTE *)v128 ^ 0xB3) + 1) ^ 0xFB) + ((2 * ((*(_BYTE *)v128 ^ 0xB3) + 1)) & 0xF7) + 5;
  LODWORD(v163) = ((*(_DWORD *)v163 & 0x4F2159FC ^ 0x8500180F | 0x819E226A)
                 - (*(_DWORD *)v163 & 0x4F2159FC ^ 0x8500180F | 0x7E61DD95)
                 + 2120342933) ^ 0x2BE6229 | ((*(_DWORD *)v163 & 0xC0540978 ^ 0xD8C80848)
                                            + (*(_DWORD *)v163 & 0x868 ^ 0x2420A4A6)
                                            - ((*(_DWORD *)v163 & 0xC0540978 ^ 0xD8C80848) & 0x10000868)) ^ 0xACFCA596;
  LODWORD(v163) = (v163 - ((2 * v163) & 0xFE8727A) - 2014037699) ^ 0x87F4393D | (v191
                                                                               - ((2 * v191) & 0x5D53B0E4)
                                                                               - 1364600718) ^ 0x21DF10C1 ^ ((-1190107637 << v181) - ((1914752022 << v181) & 0x1EED9166) - 1888040781);
  LODWORD(v163) = (v178 ^ 0x580EED1F) + (v163 ^ 0x9802440D) - ((2 * v163) & 0xCFFB77E4) + 1744681971;
  v192 = (v184 ^ 0x580EED1F)
       + (*((_DWORD *)&STACK[0x330]
          + (((STACK[0x6A4] & 0x35) + (STACK[0x6A4] & 0x3F ^ 0xFFFFFFF5) + (STACK[0x6A4] & 0x35 | 0x363B790A) + 1) ^ 0x3CF8B2BDC8C484A2)
          + ((2
            * (((STACK[0x6A4] & 0x35) + (STACK[0x6A4] & 0x3F ^ 0xFFFFFFF5) + (STACK[0x6A4] & 0x35 | 0x363B790A) + 1) ^ 0x363B791F)) & 0x1FDFFFB7ALL)
          + 0x3074D4201000243) ^ 0xB6E85A4C);
  LOBYTE(v192) = ((2 * v192) & 0xA8) + (v192 ^ 0xD4);
  LODWORD(v175) = ((v175 ^ 0x580EED1F) / 3
                 - ((2 * ((v175 ^ 0x580EED1F) / 3)) & 0x4F74708E)
                 - 1480968121) ^ 0xA7BA3847;
  LODWORD(STACK[0x440]) = v163 + 1477373215 - ((2 * v163) & 0xB01DDA3E);
  LODWORD(STACK[0x520]) = (((_DWORD)v175 << (v192 + 12))
                         - ((2 * ((_DWORD)v175 << (v192 + 12))) & 0xED983884)
                         + 1993088066) ^ ((v175 >> (20 - v192))
                                        - ((2 * (v175 >> (20 - v192))) & 0xCEF50280)
                                        + 1736081728) ^ 0x49B8701D;
  v193 = STACK[0x228];
  *(_DWORD *)STACK[0x228] = -1974285787;
  LODWORD(v163) = *(_DWORD *)(v80 + 4 * (STACK[0x718] & 0x3F ^ 0x1FLL)) ^ 0x4917A5B3;
  *a70 = v163 - ((2 * v163 + 1369750752) & 0x6DD0B498) + 532330684;
  LOBYTE(v192) = STACK[0x5C8];
  LODWORD(v163) = *(_DWORD *)(v80 + 4 * (STACK[0x5BC] & 0x3F ^ 0x1FLL));
  v194 = STACK[0x474];
  LODWORD(v178) = (((v163 & 0x3CE32D43 ^ 0xF7FCDAFC)
                  - 1996368319
                  + ((2 * (v163 & 0x3CE32D43 ^ 0xF7FCDAFC)) & 0x10020882 ^ 0xFDFE5BFF)
                  + 1) ^ 0x8901D641) & (LODWORD(STACK[0x450]) ^ 0x580EED1F);
  LODWORD(v163) = ((v163 & 0xC3109024 ^ 0x3109004)
                 + (v163 & 0xC2108004 ^ 0xC4A44E12)
                 - ((v163 & 0xC3109024 ^ 0x3109004) & 0xC2108004)) ^ 0x47B66F86;
  LODWORD(v163) = (((((2 * v163) | 0x17DD58A4) - v163 - 200191058) & 0xCF3CFFBC ^ 0x3BFF8DC3)
                 + 906227531
                 + ((2
                   * (((((2 * v163) | 0x17DD58A4) - v163 - 200191058) & 0xCF3CFFBC ^ 0x3BFF8DC3) & 0x600EF1C ^ ((((2 * v163) | 0x17DD58A4) - v163 - 200191058) | 0x7FFFFFEB))) ^ 0x600600AF)
                 + 1) ^ 0x3603EF4B | (v178 - ((2 * v178) & 0xB068FFF0) - 667648008) ^ 0xD8347FF8;
  v195 = STACK[0x4E0];
  LODWORD(v163) = (LODWORD(STACK[0x4E8]) ^ 0x580EED1F) + (v163 ^ 0x4E7F6DF7) + ((2 * v163) & 0x9CFEDBEE) - 1316974071;
  LODWORD(STACK[0x4E8]) = v163 + 1477373215 - ((2 * v163) & 0xB01DDA3E);
  LODWORD(a33) = v130 + 213;
  HIDWORD(a35) = v190;
  LODWORD(v178) = *(_DWORD *)(v80 + 4 * (STACK[0x63C] & 0x3F ^ 0x1FLL)) ^ 0xB6E85A4C | *(_DWORD *)(v80
                                                                                                 + 4
                                                                                                 * (STACK[0x710] & 0x3F ^ 0x1FLL)) ^ 0xB6E85A4C;
  LODWORD(v163) = (*(_DWORD *)(v80 + 4 * (STACK[0x6B8] & 0x3F ^ 0x1FLL)) ^ 0x4917A5B3)
                + (v178 ^ 0x95BAD8FE)
                + ((2 * v178) & 0x2B75B1FC)
                + 1782916866;
  HIDWORD(a27) = ((2 * v163) & 0xDE) + (v163 ^ 0xEF);
  v196 = (*((_DWORD *)&STACK[0x430] + (v192 & 0x3F ^ 0x1FLL)) >> 1) ^ 0x2C07768F;
  v197 = (((v196 * v196) ^ 0x7DFD7D9E) - 2113764766 + ((2 * v196 * v196) & 0xFBFAFB3C)) * v196;
  LODWORD(STACK[0x474]) = v194 ^ 0x88DEA307 ^ (v197 - ((2 * v197) & 0x11BD460E) - 1998675193);
  LODWORD(STACK[0x4E0]) = (v195 ^ 0x580EED1F) - ((2 * (v195 ^ 0x580EED1F) + 1957746352) & 0xB01DDA3E) + 308762743;
  v198 = (((2 * (a31 & 0x3B)) | 0x1AC2C6B0) - (a31 & 0x3B) - 224486232) ^ 0x8D6FE150;
  v199 = 4 * ((((2 * v198) | 0xC2FBE43E) - v198 - 1635643935) ^ 0xE173701D);
  LODWORD(v178) = (*(_DWORD *)(v80 + v199) ^ 0x4917A5B3) + (*(_DWORD *)STACK[0x210] ^ 0xB6E85A4C) + 1;
  *(_DWORD *)STACK[0x210] = v178 - ((2 * v178) & 0x6DD0B498) - 1226286516;
  LODWORD(v199) = (((2 * (*(_DWORD *)((_BYTE *)&STACK[0x330] + v199) & 0x313EC15D ^ 0x20284050)) & 0x406D8018)
                 - (*(_DWORD *)((_BYTE *)&STACK[0x330] + v199) & 0x313EC15D ^ 0x20284050)
                 - 787935373) ^ 0x53090FFB;
  LODWORD(v199) = (((2 * v199) | 0x75CE4FF4) - v199 + 1159256070) ^ 0x28E7276E | (((2
                                                                                  * (STACK[0x520] & 0xCEC13EA2 ^ 0x44406CD3)) | 0xCB99916)
                                                                                - (STACK[0x520] & 0xCEC13EA2 ^ 0x44406CD3)
                                                                                - 106744971) ^ 0xA1C8C5A;
  LODWORD(v80) = *(_DWORD *)(v80 + 4 * (STACK[0x66C] & 0x3F ^ 0x1FLL)) & 0x739BC995 ^ 0x13904110;
  LODWORD(v80) = (((((2 * v80) & 0x61208202) - v80 - 1020544260) & 0x918A28A6 ^ 0x11880002)
                + ((((2 * v80) & 0x61208202) - v80 - 1020544260) ^ 0xE623BAFC)
                - (((((2 * v80) & 0x61208202) - v80 - 1020544260) ^ 0xE623BAFC) & 0x918A0886)) & 0xF3DFEF97 ^ 0x9DBA31FA;
  LODWORD(v199) = (v199 - ((2 * v199) & 0x1F8C7080) - 1882834880) ^ 0x8FC63840;
  LODWORD(v80) = (v80 - 1451147614 + ((2 * v80) & 0x43025D04 ^ 0xEFFFDFBF) + 1) ^ 0xA9813EA2;
  LODWORD(v178) = (((v80 | v199) - ((2 * (v80 | v199)) & 0x19BE040E) - 1931542009) ^ 0x8CDF0207) & (*(_DWORD *)STACK[0x230] ^ 0xB6E85A4C);
  LODWORD(v199) = (v178 - ((2 * v178) & 0x61ACA592) + 819352265) ^ 0x30D652C9 | ((v80 & v199)
                                                                               - ((2 * (v80 & v199)) & 0x7BE79AE6)
                                                                               - 1108095629) ^ 0xBDF3CD73;
  LODWORD(v199) = (*(_DWORD *)STACK[0x238] ^ 0xB6E85A4C) + (v199 ^ 0x100190D1) - ((2 * v199) & 0xDFFCDE5C) - 268538065;
  *(_DWORD *)STACK[0x238] = v199 - ((2 * v199) & 0x6DD0B498) - 1226286516;
  LODWORD(v80) = LODWORD(STACK[0x4C4]) ^ 0x580EED1F | LODWORD(STACK[0x4D4]) ^ 0x580EED1F;
  LODWORD(v163) = (LODWORD(STACK[0x59C]) >> 1) ^ 0x2C07768F;
  LODWORD(v178) = (v80 - ((2 * v80) & 0x1A8C3EF0) + 222699384) ^ 0xD461F78;
  LODWORD(v199) = (((v178 | v163) - ((2 * (v178 | v163)) & 0x138D51CC) + 164014310) ^ 0x9C6A8E6) & (LODWORD(STACK[0x4DC]) ^ 0x580EED1F);
  LODWORD(v163) = (v199 - ((2 * v199) & 0xCCCAAFAE) + 1717917655) ^ 0x666557D7 | ((v178 & v163)
                                                                                - ((2 * (v178 & v163)) & 0x60EE9076)
                                                                                + 813123643) ^ 0x3077483B;
  v200 = *a71;
  *a71 = v200 ^ 0x8A17C6C8 ^ (v163 - ((2 * v163) & 0x142F8D90) - 1978153272);
  LODWORD(v193) = ((2 * *(_DWORD *)v193) & 0xDCA10848 ^ 0x4C800008) + (*(_DWORD *)v193 & 0xEE52A4B4 ^ 0xD991C66B);
  LODWORD(STACK[0x5B4]) = v193 - ((2 * v193 - 525033556) & 0xB01D5A3A) - 932627211;
  LODWORD(v193) = (LODWORD(STACK[0x708]) ^ 0xA7F112E0) + (*a44 ^ 0xB6E85A4C) + 1;
  *a44 = v193 - ((2 * v193) & 0x6DD0B498) - 1226286516;
  LODWORD(v193) = (LODWORD(STACK[0x484]) ^ 0x580EED1F) + (*a45 ^ 0xB6E85A4C);
  LODWORD(v163) = (LODWORD(STACK[0x520]) ^ 0xA7F112E0)
                + (LODWORD(STACK[0x458]) ^ 0x580EED1F)
                + 1477373216
                - ((2 * ((LODWORD(STACK[0x520]) ^ 0xA7F112E0) + (LODWORD(STACK[0x458]) ^ 0x580EED1F) + 1)) & 0xB01DDA3E);
  LODWORD(STACK[0x484]) = v193 + 1477373215 - ((2 * v193) & 0xB01DDA3E);
  LODWORD(STACK[0x458]) = v163;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, _DWORD *, uint64_t, _DWORD *, uint64_t, uint64_t, _DWORD *, _DWORD *, _DWORD *, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a26 + 8 * ((61477 * (*a69 != 1076843465)) ^ a24)) - 8))(a24, v200, 164014310, 20, 2817594080, 3489363120, 21, 50, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           v202,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           v203,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_100181920(int a1)
{
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v1 + 8 * (a1 - 12640)) - 4))(2390951630, (a1 - 2027735777), 10700);
}

uint64_t sub_10018198C@<X0>(int a1@<W0>, unsigned __int8 a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  unsigned int v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;

  *(_BYTE *)((v9 | ((unint64_t)(v9 < v4) << 32)) + v5 + v7) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((((a2 ^ (v9 + a1 < (*v6 ^ v11))) & 1) * a3) ^ a4)) - 4))();
}

uint64_t sub_1001819DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * (v39 + 2027735776)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_100181A04(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, unsigned int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,int a33,char a34,__int16 a35,char a36,__int16 a37,char a38,uint64_t a39,int a40,char a41,int a42,char a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,int a48,char a49,__int16 a50,char a51,__int16 a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _DWORD *a69;
  int v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v76 = v72 - 0xE15AEC048CB6DACLL;
  *(_BYTE *)(v72 - 0xE15AEC048CB6DACLL) -= 4;
  v78 = 0x821104011022C291;
  if (*a69 != v75 - 1)
    v78 = 0x821104011022C293;
  v77 = (*a69 != v75 - 1) ^ 0x7DEEFBFEEFDD3D6FLL;
  *(_BYTE *)(v76 + v77 + v78) += ((v73 + v69 + 4) | 5) ^ 0x39;
  v79 = ((2 % (*a69 ^ v75)) ^ 0x9FAFCCBF) + 2 * (2 % (*a69 ^ v75)) + 1867642864;
  *(_BYTE *)((v79 | ((unint64_t)(v79 < 0xF01C4AF) << 32)) + v76 - 251774127) -= 4;
  v80 = ((3 % (*a69 ^ v75)) ^ 0x7FDBE7DE) - 276833160 + ((2 * (3 % (*a69 ^ v75))) & 4);
  v81 = (v80 | ((unint64_t)(v80 < 0x6F5BC456) << 32)) + v76;
  v82 = ((((~(a38 - 4) & 0x88) - 90) & 0x80 ^ 0xB8) - (((~(a38 - 4) & 0x88) - 90) | 0xC7) - 57) | 0x71;
  *(_BYTE *)(v81 - 1868285014) = *(_BYTE *)(v81 - 1868285014) + (v82 ^ 0x7E) + ((2 * v82) & 0xF0) - 126;
  v83 = ((4 % (*a69 ^ v75)) ^ 0x9F3BB6CF) + 2 * (4 % (*a69 ^ v75)) + 2078138230;
  v84 = (v83 | ((unint64_t)(v83 < 0x1B199645) << 32)) + v76;
  *(_BYTE *)(v84 - 454661701) -= 4;
  v85 = ((v70 % (*a69 ^ v75)) ^ 0xFDDAFFFF) + 2 * (v70 % (*a69 ^ v75)) + 1513973146;
  *(_BYTE *)((v85 | ((unint64_t)(v85 < 0x58186599) << 32)) + v76 - 1477993881) -= 4;
  v86 = ((6 % (*a69 ^ v75)) ^ 0xF9FF4EBD) + 665844095 + ((2 * (6 % (*a69 ^ v75))) & 0xA);
  v87 = (v86 | ((unint64_t)(v86 < 0x21AF483C) << 32)) + v76;
  *(_BYTE *)(v87 - 565135420) += (a36 ^ 0xDC) + ((2 * a36) ^ 0x46) + 1;
  v88 = ((7 % (*a69 ^ v75)) ^ 0x3EEFDFEF) + 2 * (7 % (*a69 ^ v75)) - 172493569;
  *(_BYTE *)((v88 | ((unint64_t)(v88 < 0x34A7D4EE) << 32)) + v76 - 883414254) -= 4;
  v89 = ((8 % (*a69 ^ v75)) ^ 0x13F87DFF) + 2 * (8 % (*a69 ^ v75)) - 306189376;
  v90 = (v89 | ((unint64_t)(v89 < 0x1B869BF) << 32)) + v76;
  *(_BYTE *)(v90 - 28862911) = *(_BYTE *)(v90 - 28862911) + (a51 ^ 0x13) + ((2 * a51) & 0xF4 ^ 0xD0) - 122;
  v91 = ((9 % (*a69 ^ v75)) ^ 0xFFB79DFD) + 771454820 + ((2 * (9 % (*a69 ^ v75))) & 0x1A);
  *(_BYTE *)((v91 | ((unint64_t)(v91 < 0x2DB31561) << 32)) + v76 - 766711137) = *(_BYTE *)((v91 | ((unint64_t)(v91 < 0x2DB31561) << 32)) + v76 - 766711137) + (a43 ^ 0x42) + ((2 * a43) & 0x1C ^ 0x18) - 14;
  v92 = ((0xA % (*a69 ^ v75)) ^ 0x67FFE7FF) + 2 * (0xA % (*a69 ^ v75)) - 605840484;
  v93 = (v92 | ((unint64_t)(v92 < 0x43E3839B) << 32)) + v76;
  *(_BYTE *)(v93 - 1138983835) += 37;
  v94 = ((0xB % (*a69 ^ v75)) ^ 0xBDD9E9FA) + 1128210048 + (a4 & (2 * (0xB % (*a69 ^ v75))));
  *(_BYTE *)((v94 | ((unint64_t)(v94 < 0x119087A) << 32)) + v76 - 18417786) += ((a53 + 3) ^ 0xE7) + ((2 * (a53 + 3)) & 0xCF) + 25;
  v95 = ((0xC % (*a69 ^ v75)) ^ 0x2DC27D6A) - 146937088 + (a4 & (2 * (0xC % (*a69 ^ v75))));
  v96 = (v95 | ((unint64_t)(v95 < 0x2500686A) << 32)) + v76;
  *(_BYTE *)(v96 - 620783722) += (a49 ^ 0x91) + ((2 * a49) & 0xF4 ^ 0xD4) + 6;
  v97 = ((0xD % (*a69 ^ v75)) ^ 0x77BF7F6A) - 62653192 + (a4 & (2 * (0xD % (*a69 ^ v75))));
  *(_BYTE *)((v97 | ((unint64_t)(v97 < 0x74037C62) << 32)) + v76 - 1946385506) += 37;
  v98 = ((0xE % (*a69 ^ v75)) ^ 0xFFF3EFF6) + 2092957520 + ((2 * (0xE % (*a69 ^ v75))) & 0xC);
  v99 = (v98 | ((unint64_t)(v98 < 0x7CB3EF46) << 32)) + v76;
  *(_BYTE *)(v99 - 2092166982) += 37;
  v100 = ((0xF % (*a69 ^ v75)) ^ 0xDD3D5BFF) + 2 * (0xF % (*a69 ^ v75)) + 2080307152;
  *(_BYTE *)((v100 | ((unint64_t)(v100 < 0x593C53CF) << 32)) + v76 - 1497125839) += (a41 ^ 0xE1) + ((2 * a41) & 0xFC ^ 0x3C) + 2;
  v101 = ((0x10 % (*a69 ^ v75)) ^ 0xFF947FBB) + 352293631 + ((2 * (0x10 % (*a69 ^ v75))) & 0x36);
  *(_BYTE *)((v101 | ((unint64_t)(v101 < 0x149412BA) << 32)) + v76 - 345248442) += (a34 ^ 0x76) + ((2 * a34) & 0x96 ^ 0x12) + 53;
  v102 = ((0x11 % (*a69 ^ v75)) ^ 0xFF3F9FE9) + 1476163840 + ((2 * (0x11 % (*a69 ^ v75))) & 0x12);
  *(_BYTE *)((v102 | ((unint64_t)(v102 < 0x573C18E9) << 32)) + v76 - 1463556329) -= 35;
  v103 = ((0x12 % (*a69 ^ v75)) ^ 0x7FFAFF32) - 34648352 + ((2 * (0x12 % (*a69 ^ v75))) & 0x24);
  v104 = (v103 | ((unint64_t)(v103 < 0x7DEA4E12) << 32)) + v76;
  *(_BYTE *)(v104 - 2112507410) -= 35;
  v105 = ((0x13 % (*a69 ^ v75)) ^ 0xDF57F48F) + 2 * ((0x13 % (*a69 ^ v75)) & 0xF) + 1056833532;
  *(_BYTE *)((v105 | ((unint64_t)(v105 < 0x1E55F48B) << 32)) + v76 - 508949643) -= 35;
  v106 = ((a4 % (*a69 ^ v75)) ^ 0x7BFFAB7D) + a6 + ((2 * (a4 % (*a69 ^ v75))) & 0x3A);
  v107 = (v106 | ((unint64_t)(v106 < 0x4BFB202D) << 32)) + v76;
  *(_BYTE *)(v107 - 1274748973) = *(_BYTE *)(v107 - 1274748973) + (a46 ^ v74) + ((2 * a46) & 0xB6 ^ 0x96) - 91;
  v108 = ((a7 % (*a69 ^ v75)) ^ 0x6FFFF5F2) - 1124073472 + ((2 * (a7 % (*a69 ^ v75))) & 0x24);
  *(_BYTE *)((v108 | ((unint64_t)(v108 < 0x2CFFF5F2) << 32)) + v76 - 754972146) -= 35;
  v109 = ((0x16 % (*a69 ^ v75)) ^ 0xE8B33E35) + 1465771519 + ((2 * (0x16 % (*a69 ^ v75))) & 0x2A);
  v110 = (v109 | ((unint64_t)(v109 < 0x40112434) << 32)) + v76;
  *(_BYTE *)(v110 - 1074865204) += 21;
  v111 = ((0x17 % (*a69 ^ v75)) ^ 0x7EAFF079) - 1384513537 + (a8 & (2 * (0x17 % (*a69 ^ v75))));
  *(_BYTE *)((v111 | ((unint64_t)(v111 < 0x2C29F078) << 32)) + v76 - 740946040) -= 35;
  v112 = ((0x18 % (*a69 ^ v75)) ^ 0x9DFB1ECF) + 2 * ((0x18 % (*a69 ^ v75)) & 0xF) + 1723203516;
  v113 = (v112 | ((unint64_t)(v112 < 0x4B11E8B) << 32)) + v76;
  *(_BYTE *)(v113 - 78716555) = *(_BYTE *)(v113 - 78716555) + (a32 ^ 0x41) + ((2 * a32) & 0x16 ^ a4) - 11;
  v114 = ((0x19 % (*a69 ^ v75)) ^ 0xBBF5FFFF) + 2 * (0x19 % (*a69 ^ v75)) + 1476089582;
  *(_BYTE *)((v114 | ((unint64_t)(v114 < 0x13F156ED) << 32)) + v76 - 334583533) += 105;
  v115 = ((0x1A % (*a69 ^ v75)) ^ 0x7EEFBBFB) - 203489315 + ((2 * (0x1A % (*a69 ^ v75))) & 0x36);
  v116 = (v115 | ((unint64_t)(v115 < 0x72CEBBD8) << 32)) + v76;
  *(_BYTE *)(v116 - 1926151128) += 105;
  v117 = ((0x1B % (*a69 ^ v75)) ^ 0x5FD5FAEB) - 92590082 + ((2 * (0x1B % (*a69 ^ v75))) & 0x16);
  *(_BYTE *)((v117 | ((unint64_t)(v117 < 0x5A512AE9) << 32)) + v76 - 1515268841) += 105;
  v118 = ((0x1C % (*a69 ^ v75)) ^ 0x9D7B7AFF) + 2 * (0x1C % (*a69 ^ v75)) + 2144321494;
  v119 = (v118 | ((unint64_t)(v118 < 0x1D4B3AD5) << 32)) + v76;
  *(_BYTE *)(v119 - 491469525) = (a32 & 0x3A) + (a4 & ~(2 * a32)) + *(_BYTE *)(v119 - 491469525) - 96;
  v120 = ((0x1D % (*a69 ^ v75)) ^ 0x6FEF9BFE) - 633733120 + ((2 * (0x1D % (*a69 ^ v75))) & 0x3C);
  *(_BYTE *)((v120 | ((unint64_t)(v120 < 0x4A299BFE) << 32)) + v76 - 1244240894) = *(_BYTE *)((v120 | ((unint64_t)(v120 < 0x4A299BFE) << 32)) + v76 - 1244240894) + ((a28 + 17) ^ 0x81) - ((2 * (a28 + 17)) & 0xFC) - 24;
  v121 = ((0x1E % (*a69 ^ v75)) ^ 0xEFB7D773) + 1610611694 + ((2 * (0x1E % (*a69 ^ v75))) & 0x26);
  v122 = (v121 | ((unint64_t)(v121 < 0x4FB7D361) << 32)) + v76;
  *(_BYTE *)(v122 - 1337447265) += 105;
  v123 = ((0x1F % (*a69 ^ v75)) ^ 0xBCEFF7FC) + 1878596176 + ((2 * (0x1F % (*a69 ^ v75))) & 0x38);
  v124 = (v123 | ((unint64_t)(v123 < 0x2CE9124C) << 32)) + v76;
  *(_BYTE *)(v124 - 753472076) += 105;
  return ((uint64_t (*)(uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 + 8 * (v69 + 2027722579))
                                                                                        - 12))(1533898746, a69, 2002737711, 1695945260, -1695945260, 228);
}

uint64_t sub_100182828@<X0>(int a1@<W0>, _DWORD *a2@<X1>, int a3@<W2>, unsigned int a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;

  v16 = ((((int)a7 + (int)v13 + 63) % (*a2 ^ v15)) ^ v9)
      + a3
      + (((((int)a7 + (int)v13 + 63) % (*a2 ^ v15)) << v10) & a1);
  v17 = (v16 | ((unint64_t)(v16 < a4) << 32)) + v7;
  v18 = *(_DWORD *)(v8 + 4 * a7) ^ (*(unsigned __int8 *)(v17 + a5) - 64);
  *(_BYTE *)(v17 + a5) = (v18 ^ 0x3E) + (a6 & (2 * v18)) + 78;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * (((a7 + v13 == 0) * v12) ^ v11)) - 12))();
}

uint64_t sub_1001828A8()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (int)v0)
                                                                                                - 8))(1331668410, v0 ^ 0xFFFFFFFFB0A07A59, 212, 150, 22, 2284);
}

uint64_t sub_100182930(unsigned int a1, uint64_t a2, char a3, char a4, char a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  int v19;

  v17 = ((((int)v9 + (int)v8 + 63) % (*v11 ^ v16)) ^ v6) + v14 + (v13 & (2 * (((int)v9 + (int)v8 + 63) % (*v11 ^ v16))));
  v18 = v17 + a2 + ((unint64_t)(v17 < a1) << 32);
  v19 = *(_DWORD *)(v12 + 4 * v9) ^ (*(unsigned __int8 *)(v10 + v18) - 64);
  *(_BYTE *)(v10 + v18) = (v19 ^ a3) + (a4 & (2 * v19) ^ a5) + 117;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (((v9 + v8 == 0) * a6) ^ v7)) - 8))();
}

uint64_t sub_1001829B0@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;

  LODWORD(a19) = a2 - 280765018;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 + 8 * a2) - 12))(a1, v27, 1076843465, 1477373215, 176, 65444711, 2300176641, 222, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           2046743371);
}

uint64_t sub_100182A78@<X0>(uint64_t a1@<X1>, unsigned int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, char a7@<W7>, int a8@<W8>)
{
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  int v12;
  char v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;

  v23 = *(_DWORD *)(v11 + 4 * v8);
  v24 = (v23 ^ a3) + ((v23 >> 8) ^ 0x77835512) - 2010864639 + (v12 & (2 * (v23 >> 8)) ^ 0xB015DA);
  v25 = (HIBYTE(v23) ^ 0x76E616A7)
      + (a4 ^ (2 * HIBYTE(v23)))
      + a6
      + ((v24 - ((2 * v24) & 0x7CD86D2) + 65454953) ^ HIWORD(v23) ^ a5);
  v26 = ((((int)v8 - 2046743371) % (*v10 ^ a2)) ^ v14) + v16 + (v15 & (2 * (((int)v8 - 2046743371) % (*v10 ^ a2))));
  v27 = (v26 | ((unint64_t)(v26 < v17) << 32)) + v9;
  LOBYTE(v25) = ((v13 & (2 * v25)) + (v25 ^ a7) - ((2 * ((v13 & (2 * v25)) + (v25 ^ a7)) + 68) & v19) + 124) ^ (*(_BYTE *)(v27 + v18) - 64);
  *(_BYTE *)(v27 + v18) = (v25 ^ v20) + ((2 * v25) & 0x87 ^ v21) - 3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v8 == 2046743498) * v22) ^ a8)) - 12))();
}

uint64_t sub_100182BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  HIDWORD(a48) = 2116425365;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 + 8 * (int)(((a25 < 0xDBAED98B) * (a25 + 280746232)) ^ (a25 + 280744144))) - 12))(-1449544392, 4088905319, a3, 1551556093, 1345494116, -1345494116, 3971151662, 1499852380, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_100182C88@<X0>(unint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unsigned int a5@<W4>, uint64_t a6@<X5>, int a7@<W6>, int a8@<W7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  _DWORD *v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  int v40;
  unsigned int v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;

  v41 = *v28 ^ a3;
  v42 = (((v30 + 248) % v41) ^ 0xF7E7FFF7) + 1585369902 + ((2 * ((v30 + 248) % v41)) & 0xEFCFFFEE);
  v43 = *(_BYTE *)(v29 + v42 + ((5 * v31) ^ a1) + ((unint64_t)(v42 < v33) << 32));
  v44 = (((v30 + 218) % v41) ^ a2) + a4 + (v32 & (2 * ((v30 + 218) % v41)));
  v45 = (((v30 + 255) % v41) ^ a7) + v34 + (a8 & (2 * ((v30 + 255) % v41)));
  v46 = (v45 | ((unint64_t)(v45 < v35) << 32)) + v27;
  v47 = (2 * v43 - ((4 * v43) & 0xBF) - 34) ^ (*(_BYTE *)(v46 + v36) - 64) ^ v37;
  v48 = (v47 - (v38 & (2 * v47)) - 48) ^ (*(_BYTE *)((v44 | ((unint64_t)(v44 < a5) << 32))
                                                   + v29
                                                   + a6) << 6);
  *(_BYTE *)(v46 + v36) = (v48 ^ v39) + ((2 * v48) & 0x88) + 124;
  return ((uint64_t (*)(void))(*(_QWORD *)(a27 + 8 * (((v30 == 0) * v40) ^ a9)) - 12))();
}

uint64_t sub_100182DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  unsigned int v42;
  uint64_t v43;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * (int)v42) - (v42 ^ 0x99EFLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_100182DE8()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (v1 + v0)))();
}

uint64_t sub_100182DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  char v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  BOOL v31;
  char v34;

  if (a25)
    v31 = v26 == 743284297;
  else
    v31 = 1;
  v34 = v31 || v27 == 0x3162632A4A30020ELL || v28 == 0x136A446F89C4741ALL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((19362 * ((v34 ^ (-127 * (v29 ^ v25))) & 1)) ^ (v29 + 2027715951))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

uint64_t sub_100182E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v22;
  uint64_t v23;
  unsigned __int8 *v24;
  uint64_t v25;
  _DWORD *v26;
  int v27;

  v26 = (_DWORD *)(v23 - 0x3162632A4A30020ELL);
  *v26 = 518913761;
  v27 = *v24;
  *v26 = 518913762;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * (((v27 == 68) * (a9 - v22 + 2027717890)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22);
}

uint64_t sub_100182EE8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,_DWORD *a21)
{
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;

  v25 = *(unsigned __int8 *)(v23 + 1);
  *a21 = v21 + 2;
  return (*(uint64_t (**)(void))(v24 + 8 * (((v25 == 72) * (v22 + a1 - 2027715951 + 1161)) ^ a1)))();
}

uint64_t sub_100182F28@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,_DWORD *a21)
{
  int v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  int v25;

  v25 = *(unsigned __int8 *)(v23 + 2);
  *a21 = v21 + 3;
  return (*(uint64_t (**)(void))(v24 + 8 * ((30309 * (v25 == (v22 ^ 0x34))) ^ a1)))();
}

uint64_t sub_100182F64@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,_DWORD *a21)
{
  int v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int v25;

  v25 = *(unsigned __int8 *)(v23 + 3);
  *a21 = v21 + 4;
  return (*(uint64_t (**)(void))(v24 + 8 * ((495 * (v25 == (((a1 ^ (v22 - 73)) + 88) ^ 0x9D))) ^ a1)))();
}

uint64_t sub_100182FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_DWORD *a28,uint64_t a29)
{
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;

  v35 = *(_QWORD *)(v34 + 8 * v29);
  v36 = 842727511
      * (((~(v33 - 144) | 0xED23D4884DF9EDC8) + ((v33 - 144) | 0x12DC2B77B2061237)) ^ 0xB331806E8504756BLL);
  *(_DWORD *)(v33 - 128) = v29 - 588285089 + v36;
  *(_QWORD *)(v33 - 144) = a29;
  *(_QWORD *)(v33 - 136) = v35 - v36 - 12;
  v37 = (void (*)(uint64_t))(*(_QWORD *)(v30 + 8 * (v29 ^ 0x1807)) - 1213656063);
  v37(v33 - 144);
  *(_DWORD *)(v32 - 0x136A446F89C4741ALL) = *(_DWORD *)(v33 - 124);
  *a28 += 4;
  v38 = *(_QWORD *)(a26 + 8 * v29);
  *(_DWORD *)(v33 - 128) = v29
                         - 588285089
                         + 842727511 * ((v33 - 144 - 2 * ((v33 - 144) & 0x9F0022A0) - 1627381088) ^ 0xA80245FD);
  *(_QWORD *)(v33 - 144) = v31 + 8;
  *(_QWORD *)(v33 - 136) = v38
                         - 842727511
                         * ((v33 - 144 - 2 * ((v33 - 144) & 0x56C3EAD89F0022A0) + 0x56C3EAD89F0022A0) ^ 0xF72E41C1A80245FDLL)
                         - 12;
  v39 = ((uint64_t (*)(uint64_t))v37)(v33 - 144);
  *a28 += 4;
  return (*(uint64_t (**)(uint64_t))(a26 + 8 * (v29 + 6935)))(v39);
}

uint64_t sub_100183158()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 + v1 + 132)) - 8))();
}

uint64_t sub_100183170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  BOOL v49;
  int v52;

  LODWORD(a27) = 5;
  if (a25)
    v49 = v44 == v47 - 1885813097;
  else
    v49 = 1;
  v52 = !v49 && v45 != 0 && v46 != 0x1A473F8073A0688ELL;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * ((6811 * v52) ^ (v47 + 2027714280))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

